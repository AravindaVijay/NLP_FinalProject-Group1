{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Kabbage Inc Atlanta GA GA Around 8 years of experience as an Application Developer and coding with Analytical programming using Python Django Perl Oracle UNIX Experienced with Object Oriented Programming Software Development Life Cycle Database designs agile methodologies coding and testing of enterprise applications Experienced in developing webbased applications using Python Django XML CSS HTML JavaScript and JQuery Angular JS Experienced in LAMP Linux Apache MySQL and PythonPHP and WAMP Windows Apache MYSQL and PythonPHP Architecture Extensive experience in Statistical Analysis Reporting involving analysis Design Development testing and validating the applications Familiar with JSON based REST Web services and Amazon Web Services Experience in writing scripts using Gherkin Syntax in Behave framework in Python Worked with different kind of data bases like MySQL MSSQL Server Oracle DB and PostgreSQL Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Developed the required XML Schema documents and implemented the framework for parsing XML documents Strong experience in using different Python libraries like Pandas Numpy pypyodbc pymssql PyHamcrest Beautiful Soup requests grequests urllib urllib2 celery pickle jinja2 itertools matplotlib etc and used pep8 coding convention Worked on version control tools like GIT and SVN to maintain and deploy code and has also been involved in creating modules for companys designed pipeline architecture to make it efficient and precise Experienced in using frameworks and tools like Django Angular JS Django REST and ORM Experience in working with IDEs like PyCharm PyScripter Eclipse PyStudio PyDev and Sublime text Experience with Unit testing Test driven Development TDD Behavior Driven Development Testing Experienced in working with different operating systems like Windows Linux and UNIX Good experience in Shell ScriptingPerl Scripting Proficient knowledge in Web services like Google Cloud and Amazon AWS Services Experienced in AWS services like EC2 S3 Lambda and DynamoDB Experience working with Docker images and containers and Ansible Worked with Jenkins Extensively worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Performed Data analysis using Hadoop distributed file system MapReduce framework and Hadoop big data ecosystem Experience in using different components of Spark like Spark Streaming to process realtime data as well as historical data Work Experience Python Developer Kabbage Inc Atlanta GA January 2017 to Present Description Kabbage Inc is an online financial technology company It provides funding directly to small businesses through an automated lending platform As of now Kabbage has extended more than 35 billion to over 115 000 small business customers Responsibilities Worked on projects related to the client Santander UK ING Italy and ING France Validated the quality of the partner files that Kabbage delivers to partner financial institutions Behave Framework and native Python programming was used in developing the application Worked with different Python libraries like Pandas Numpy PyHamcrest pymssql pypyodbc etc Developed the UI of the application using Django and implemented MVT framework Worked on Django ORM module for signing complex queries Experience with Data migration from Sqlite3 to MongoDB Worked on developing UI using CSS HTML JavaScript JQuery and JSON Participated in all the stages of software development lifecycle including design development implementation and testing Experienced in CucumberGherkins syntax of coding Developed Behave framework scenarios backed up with the Python code Involved in Validation and Integration Testing of the Partner files Developed and tested various dashboard features using CSS JavaScript Django and Bootstrap Used Django APIs for database access Extracted loaded and analyzed data to and from MSSQL Server database with Python Parsed various file formats including XML and JSON and loaded into MSSQL Server database with Python XML and JSON modules DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Used Unit Test Python library for testing many programs In order to avoid the reloading of the entire web page to update small portions AJAX in UI was used Implemented RESTful web services for sending and receiving the data between multiple systems Used GIT for version control Worked on Jira for managing the tasks and improving the individual performance Good knowledge in Agile Jira and scrum methodologies Worked on Docker and Ansible Automated MySQL container deployment in Docker using Python and monitoring of these containers Implemented programming automations using Jenkins and Ansible on unixlinux based OS over cloud like Docker Environment Python 36 Behave Django Java Script HTML XHTML JQuery JSON XML CSS MSSQL Server Bootstrap Git Linux PyCharm Python Developer Wayfair Boston MA April 2015 to December 2016 Description This project was to use Google analytics conduct SEO and enhance the existing web portal by reengineering the search sort list shopping cart cancellation payment processor and payment gateways Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Designed and configured database and back end applications and programs Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Wrote scripts in Python for extracting data from HTML file using Python library Beautiful Soup Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Developed Spark scripts by using Scala shell commands as per the requirement Used SparkStreaming APIs to perform necessary transformations and actions Developed Restful micro services using Django and deployed on AWS servers using EBS and EC2 Used the AWSCLI to suspend an AWS Lambda function Used AWS CLI to automate backups of ephemeral datastores to S3 buckets EBS Used Docker for managing the application environments Environment Python 27 Django 14 Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services AWS EC2 AWS Lambda Docker Python Developer OneBlood Fort Lauderdale FL January 2014 to February 2015 Description OneBlood is one of the healthcare organization which consists of three million people approximately They perform research to enhance the health and wellbeing of others through their work with blood and stem cell products Responsibilities Developed the front end module of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery Involved in the design and maintenance of the databases using Python and Python based API using Flask SQL and PostgreSQL Handson experience in Python scripting in web development using Django Used Python scripts to update the content in the database and manipulate files Involved in the refactoring the UI which involves extensive use of AJAX Expertize in LAMP Linux Apache MySQL and Python architecture Used Pandas library for statistical analysis Experienced in NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite MySQL PostgreSQL and Dynamo DB Worked mostly on the active records for the backend of the application Involved in development of web services using SOAP for sending and getting the data from external interface in XML format Involved in the development of ORM queries Deployed and tested different modules in Docker containers and GIT Experienced in Agile Methodologies Scrum stories Sprints experience in Python along with data analytics data wrangling and Excel data extracts Worked on JavaScript MVC framework like Angular JS Worked on Test Driven Approach for developing services required for the application Exported Test case scripts and modified the selenium scripts and executed in Selenium RC environment Responsible for loading unstructured data into Hadoop File System HDFS Supported Map Reduce Programs those are running on the cluster Analyzed the SQL scripts and designed the solution to implement using Pyspark Environment Python 27 Django HTML5 CSS Bootstrap Pyramid MySQL MS SQL TSQL JavaScript Hadoop MapReduce Eclipse Spark Git Python Developer Hudson Insurance Alpharetta GA November 2012 to December 2013 Description The old Customer Service Website is being replaced with a modern attractive SOAoriented site It has various parts of the functionality to communicate with the backend system through web services It uses the ACORD Association for Cooperative Operations Research and Development Life and Annuity Standards expressing the insurance concepts in a formally defined specification to enable trading partner and intraenterprise of sharing insurance data giving a welldefined vocabulary for expressing the insurance concepts Responsibilities Designed and Developed the Solution Architecture package to identify all possible solutions for the project using UML methodologies Used J2EE Design patterns Singleton Service Locator and DAO Implemented MVC Architecture using JSF and Struts framework and custom tag libraries Developed a multiuser web application using JSP JSTL Action Forms Action Classes JavaScript and JDBC to provide the needed functionality Used Hibernate for data manipulation and access Used Spring AOP and dependency injection framework for business aspect of the application Used Spring DAO classes for data access Testing unit testing integration testing of the application Developed Java beans and JSPs by using Spring and JSTL tag libs for supplements Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Worked on Python Modules and Packages Deployed Django web application in Apache webserver and carpathia cloud web deployment Used Python Data structures like lists dictionaries tuples Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Created creating tables data manipulation and retrieval using Oracle and DB2 Used MQ Series to send receive and read the messages and also Created Queues Involved in the deployment process of the application on WebSphere Application Server SVN are used as source code controls and developed test cases using JUnit Deployed the Web application using ANT build script Used Mercury Quality Center for requirement management executing the test plans and defect management Used SOA architecture for communication between various business entities Communicated with the business people to get more clarity on the requirementschanges Environment Java Spring Python JavaScript JDBC XML JAXB Web services SOAP WSDL Hibernate Spring IBM MQ PLSQL WebSphere RAD 70 JUnit Oracle 10g DB2 Mercury Quality Center SVN Python Developer Selectsys Pvt Ltd Hyderabad Telangana June 2009 to September 2012 Description This project was designed to develop a segment for Engineering Group which was used to collect the budget across India to assist the management in visualizing the budget needed for different projects to monitor the costs incurred till date to forecast the budget costs for the projects in further years also to review the impact of budget revisions for various projects Responsibilities Designed and developed the User Interface for the project using HTML CSS JavaScript and AJAX Developed views and templates with Djangos MVT model view and template to create a userfriendly website Experience with Data migration from Sqlite3 to MongoDB Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management of the project using MySQL databases With the use of Djangos Database API accessed database objects Written Python Scripts to parse the XML documents and load the data in database Used existing Python and Django modules and rewritten to deliver data in certain formats Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Client side validations are handled using JavaScript Client side manipulations are done using JQuery and JavaScript Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Used Subversion control tool to coordinate team work Used Selenium Library to write fully functioning test automation process Environment Python Django 13 MySQL UNIX HTML CSS AJAX JavaScript Apache Web Server SVN Skills AJAX 7 years Apache 7 years CSS 7 years Django 8 years JavaScript 8 years Additional Information Technical Skills Operating Systems Windows Linux Languages C C Java Python2x3x Shell Script Perl Framework Django Web framework Behave Databases MySQL Sqlite3 MongoDB MSSQL Oracle Web Technologies HTML CSS JavaScript JQuery XML AJAX Bootstrap Angular JS React JS Code version control tool GIT SV Web Server Apache Jenkins Tools IDEs Visual Studio Eclipse Microsoft Visio Web Storm PyCharm Sublime Text Jira Dockers Web Services AWS REST Big DataTechnologies Hadoop HDFS MapReduce Spark",
    "entities": [
        "AJAX",
        "Amazon AWS Services Experienced",
        "Created Queues Involved",
        "ORM",
        "UNIX",
        "the User Interface",
        "Italy",
        "Developed Spark",
        "Djangos MVT",
        "LAMP Linux",
        "IBM",
        "Google",
        "Oracle SQLite MySQL PostgreSQL",
        "Hadoop",
        "SOAP",
        "XML",
        "Atlanta",
        "Behave Framework",
        "PythonPHP Architecture Extensive",
        "JUnit",
        "Written Python Scripts",
        "SQL Procedures",
        "LAMP",
        "WebSphere Application Server SVN",
        "Wrote Python",
        "Data ImportExport",
        "WebSphere",
        "AJAX Developed",
        "AJAX Expertize",
        "Developed",
        "Customer Service Website",
        "Bash",
        "Selenium RC",
        "Created Python",
        "Oracle Web Technologies HTML CSS",
        "RAD",
        "UML",
        "Communicated",
        "PythonPHP",
        "SOA",
        "Collaborated",
        "Worked",
        "JUnit Oracle",
        "JSP JSTL Action Forms Action Classes JavaScript",
        "Spark Streaming",
        "Docker",
        "Shell ScriptingPerl Scripting Proficient",
        "CLI",
        "Design Development",
        "API Integration Client",
        "GIT SV",
        "Spark",
        "GIT",
        "JQuery Involved",
        "API",
        "HTML CSS JavaScript",
        "Created",
        "Sqlite3",
        "AWS",
        "WAMP Windows Apache",
        "Sprints",
        "Oracle",
        "JSF",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "the ACORD Association for Cooperative Operations Research and Development Life and Annuity Standards",
        "Used Mercury Quality Center",
        "SQL",
        "GitHub",
        "Amazon Web Services",
        "MSSQL Server",
        "lPythonspan",
        "Responsibilities Worked",
        "CucumberGherkins",
        "DAO Implemented MVC Architecture",
        "SQL PLSQL and PostgreSQL",
        "Hadoop File System HDFS Supported",
        "Behave",
        "pep8",
        "Additional Information Technical Skills Operating Systems",
        "Pandas",
        "MySQL Responsible for Debugging",
        "Pandas Numpy PyHamcrest",
        "Alpharetta",
        "CRUD",
        "FL",
        "Statistical Analysis Reporting",
        "GIT Experienced",
        "India",
        "Performed",
        "PyHamcrest",
        "ANT",
        "UI",
        "ETL Performed Data",
        "SVN",
        "the Python code Involved in Validation and Integration Testing of the Partner",
        "Pyspark Environment Python",
        "CSS",
        "Angular JS Worked on Test Driven Approach",
        "REST",
        "Data",
        "AWSCLI",
        "MapReduce",
        "NoSQL",
        "Present Description Kabbage Inc",
        "ING France Validated",
        "Kabbage",
        "EBS",
        "Developed Restful micro services",
        "CSS HTML JavaScript JQuery and JSON Participated",
        "Engineering Group",
        "JQuery",
        "JQuery Angular JS Experienced"
    ],
    "experience": "Experience in writing scripts using Gherkin Syntax in Behave framework in Python Worked with different kind of data bases like MySQL MSSQL Server Oracle DB and PostgreSQL Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Developed the required XML Schema documents and implemented the framework for parsing XML documents Strong experience in using different Python libraries like Pandas Numpy pypyodbc pymssql PyHamcrest Beautiful Soup requests grequests urllib urllib2 celery pickle jinja2 itertools matplotlib etc and used pep8 coding convention Worked on version control tools like GIT and SVN to maintain and deploy code and has also been involved in creating modules for companys designed pipeline architecture to make it efficient and precise Experienced in using frameworks and tools like Django Angular JS Django REST and ORM Experience in working with IDEs like PyCharm PyScripter Eclipse PyStudio PyDev and Sublime text Experience with Unit testing Test driven Development TDD Behavior Driven Development Testing Experienced in working with different operating systems like Windows Linux and UNIX Good experience in Shell ScriptingPerl Scripting Proficient knowledge in Web services like Google Cloud and Amazon AWS Services Experienced in AWS services like EC2 S3 Lambda and DynamoDB Experience working with Docker images and containers and Ansible Worked with Jenkins Extensively worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Performed Data analysis using Hadoop distributed file system MapReduce framework and Hadoop big data ecosystem Experience in using different components of Spark like Spark Streaming to process realtime data as well as historical data Work Experience Python Developer Kabbage Inc Atlanta GA January 2017 to Present Description Kabbage Inc is an online financial technology company It provides funding directly to small businesses through an automated lending platform As of now Kabbage has extended more than 35 billion to over 115 000 small business customers Responsibilities Worked on projects related to the client Santander UK ING Italy and ING France Validated the quality of the partner files that Kabbage delivers to partner financial institutions Behave Framework and native Python programming was used in developing the application Worked with different Python libraries like Pandas Numpy PyHamcrest pymssql pypyodbc etc Developed the UI of the application using Django and implemented MVT framework Worked on Django ORM module for signing complex queries Experience with Data migration from Sqlite3 to MongoDB Worked on developing UI using CSS HTML JavaScript JQuery and JSON Participated in all the stages of software development lifecycle including design development implementation and testing Experienced in CucumberGherkins syntax of coding Developed Behave framework scenarios backed up with the Python code Involved in Validation and Integration Testing of the Partner files Developed and tested various dashboard features using CSS JavaScript Django and Bootstrap Used Django APIs for database access Extracted loaded and analyzed data to and from MSSQL Server database with Python Parsed various file formats including XML and JSON and loaded into MSSQL Server database with Python XML and JSON modules DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Used Unit Test Python library for testing many programs In order to avoid the reloading of the entire web page to update small portions AJAX in UI was used Implemented RESTful web services for sending and receiving the data between multiple systems Used GIT for version control Worked on Jira for managing the tasks and improving the individual performance Good knowledge in Agile Jira and scrum methodologies Worked on Docker and Ansible Automated MySQL container deployment in Docker using Python and monitoring of these containers Implemented programming automations using Jenkins and Ansible on unixlinux based OS over cloud like Docker Environment Python 36 Behave Django Java Script HTML XHTML JQuery JSON XML CSS MSSQL Server Bootstrap Git Linux PyCharm Python Developer Wayfair Boston MA April 2015 to December 2016 Description This project was to use Google analytics conduct SEO and enhance the existing web portal by reengineering the search sort list shopping cart cancellation payment processor and payment gateways Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Designed and configured database and back end applications and programs Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Wrote scripts in Python for extracting data from HTML file using Python library Beautiful Soup Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Developed Spark scripts by using Scala shell commands as per the requirement Used SparkStreaming APIs to perform necessary transformations and actions Developed Restful micro services using Django and deployed on AWS servers using EBS and EC2 Used the AWSCLI to suspend an AWS Lambda function Used AWS CLI to automate backups of ephemeral datastores to S3 buckets EBS Used Docker for managing the application environments Environment Python 27 Django 14 Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services AWS EC2 AWS Lambda Docker Python Developer OneBlood Fort Lauderdale FL January 2014 to February 2015 Description OneBlood is one of the healthcare organization which consists of three million people approximately They perform research to enhance the health and wellbeing of others through their work with blood and stem cell products Responsibilities Developed the front end module of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery Involved in the design and maintenance of the databases using Python and Python based API using Flask SQL and PostgreSQL Handson experience in Python scripting in web development using Django Used Python scripts to update the content in the database and manipulate files Involved in the refactoring the UI which involves extensive use of AJAX Expertize in LAMP Linux Apache MySQL and Python architecture Used Pandas library for statistical analysis Experienced in NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite MySQL PostgreSQL and Dynamo DB Worked mostly on the active records for the backend of the application Involved in development of web services using SOAP for sending and getting the data from external interface in XML format Involved in the development of ORM queries Deployed and tested different modules in Docker containers and GIT Experienced in Agile Methodologies Scrum stories Sprints experience in Python along with data analytics data wrangling and Excel data extracts Worked on JavaScript MVC framework like Angular JS Worked on Test Driven Approach for developing services required for the application Exported Test case scripts and modified the selenium scripts and executed in Selenium RC environment Responsible for loading unstructured data into Hadoop File System HDFS Supported Map Reduce Programs those are running on the cluster Analyzed the SQL scripts and designed the solution to implement using Pyspark Environment Python 27 Django HTML5 CSS Bootstrap Pyramid MySQL MS SQL TSQL JavaScript Hadoop MapReduce Eclipse Spark Git Python Developer Hudson Insurance Alpharetta GA November 2012 to December 2013 Description The old Customer Service Website is being replaced with a modern attractive SOAoriented site It has various parts of the functionality to communicate with the backend system through web services It uses the ACORD Association for Cooperative Operations Research and Development Life and Annuity Standards expressing the insurance concepts in a formally defined specification to enable trading partner and intraenterprise of sharing insurance data giving a welldefined vocabulary for expressing the insurance concepts Responsibilities Designed and Developed the Solution Architecture package to identify all possible solutions for the project using UML methodologies Used J2EE Design patterns Singleton Service Locator and DAO Implemented MVC Architecture using JSF and Struts framework and custom tag libraries Developed a multiuser web application using JSP JSTL Action Forms Action Classes JavaScript and JDBC to provide the needed functionality Used Hibernate for data manipulation and access Used Spring AOP and dependency injection framework for business aspect of the application Used Spring DAO classes for data access Testing unit testing integration testing of the application Developed Java beans and JSPs by using Spring and JSTL tag libs for supplements Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Worked on Python Modules and Packages Deployed Django web application in Apache webserver and carpathia cloud web deployment Used Python Data structures like lists dictionaries tuples Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Created creating tables data manipulation and retrieval using Oracle and DB2 Used MQ Series to send receive and read the messages and also Created Queues Involved in the deployment process of the application on WebSphere Application Server SVN are used as source code controls and developed test cases using JUnit Deployed the Web application using ANT build script Used Mercury Quality Center for requirement management executing the test plans and defect management Used SOA architecture for communication between various business entities Communicated with the business people to get more clarity on the requirementschanges Environment Java Spring Python JavaScript JDBC XML JAXB Web services SOAP WSDL Hibernate Spring IBM MQ PLSQL WebSphere RAD 70 JUnit Oracle 10 g DB2 Mercury Quality Center SVN Python Developer Selectsys Pvt Ltd Hyderabad Telangana June 2009 to September 2012 Description This project was designed to develop a segment for Engineering Group which was used to collect the budget across India to assist the management in visualizing the budget needed for different projects to monitor the costs incurred till date to forecast the budget costs for the projects in further years also to review the impact of budget revisions for various projects Responsibilities Designed and developed the User Interface for the project using HTML CSS JavaScript and AJAX Developed views and templates with Djangos MVT model view and template to create a userfriendly website Experience with Data migration from Sqlite3 to MongoDB Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management of the project using MySQL databases With the use of Djangos Database API accessed database objects Written Python Scripts to parse the XML documents and load the data in database Used existing Python and Django modules and rewritten to deliver data in certain formats Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Client side validations are handled using JavaScript Client side manipulations are done using JQuery and JavaScript Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Used Subversion control tool to coordinate team work Used Selenium Library to write fully functioning test automation process Environment Python Django 13 MySQL UNIX HTML CSS AJAX JavaScript Apache Web Server SVN Skills AJAX 7 years Apache 7 years CSS 7 years Django 8 years JavaScript 8 years Additional Information Technical Skills Operating Systems Windows Linux Languages C C Java Python2x3x Shell Script Perl Framework Django Web framework Behave Databases MySQL Sqlite3 MongoDB MSSQL Oracle Web Technologies HTML CSS JavaScript JQuery XML AJAX Bootstrap Angular JS React JS Code version control tool GIT SV Web Server Apache Jenkins Tools IDEs Visual Studio Eclipse Microsoft Visio Web Storm PyCharm Sublime Text Jira Dockers Web Services AWS REST Big DataTechnologies Hadoop HDFS MapReduce Spark",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Kabbage",
        "Inc",
        "Atlanta",
        "GA",
        "GA",
        "years",
        "experience",
        "Application",
        "Developer",
        "Analytical",
        "programming",
        "Python",
        "Django",
        "Perl",
        "Oracle",
        "UNIX",
        "Object",
        "Oriented",
        "Programming",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "Architecture",
        "experience",
        "Statistical",
        "Analysis",
        "Reporting",
        "analysis",
        "Design",
        "Development",
        "testing",
        "applications",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "Experience",
        "scripts",
        "Gherkin",
        "Syntax",
        "Behave",
        "framework",
        "Python",
        "kind",
        "data",
        "bases",
        "MySQL",
        "MSSQL",
        "Server",
        "Oracle",
        "DB",
        "PostgreSQL",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "experience",
        "Python",
        "libraries",
        "Pandas",
        "Numpy",
        "pypyodbc",
        "pymssql",
        "PyHamcrest",
        "Beautiful",
        "Soup",
        "requests",
        "celery",
        "pickle",
        "jinja2",
        "itertools",
        "pep8",
        "convention",
        "version",
        "control",
        "tools",
        "GIT",
        "SVN",
        "code",
        "modules",
        "companys",
        "pipeline",
        "architecture",
        "frameworks",
        "tools",
        "Django",
        "Angular",
        "JS",
        "Django",
        "REST",
        "ORM",
        "Experience",
        "IDEs",
        "PyCharm",
        "PyScripter",
        "Eclipse",
        "PyStudio",
        "PyDev",
        "Sublime",
        "text",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Behavior",
        "Driven",
        "Development",
        "Testing",
        "operating",
        "systems",
        "Windows",
        "Linux",
        "UNIX",
        "experience",
        "Shell",
        "ScriptingPerl",
        "Scripting",
        "knowledge",
        "Web",
        "services",
        "Google",
        "Cloud",
        "Amazon",
        "AWS",
        "Services",
        "AWS",
        "services",
        "EC2",
        "S3",
        "Lambda",
        "DynamoDB",
        "Experience",
        "Docker",
        "images",
        "containers",
        "Ansible",
        "Worked",
        "Jenkins",
        "UNIX",
        "shell",
        "scripts",
        "sessions",
        "testing",
        "process",
        "ETL",
        "Performed",
        "Data",
        "analysis",
        "Hadoop",
        "file",
        "system",
        "MapReduce",
        "framework",
        "Hadoop",
        "data",
        "ecosystem",
        "Experience",
        "components",
        "Spark",
        "Spark",
        "Streaming",
        "data",
        "data",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Kabbage",
        "Inc",
        "Atlanta",
        "GA",
        "January",
        "Present",
        "Description",
        "Kabbage",
        "Inc",
        "technology",
        "company",
        "funding",
        "businesses",
        "lending",
        "platform",
        "Kabbage",
        "business",
        "customers",
        "Responsibilities",
        "projects",
        "client",
        "Santander",
        "UK",
        "ING",
        "Italy",
        "ING",
        "France",
        "quality",
        "partner",
        "files",
        "Kabbage",
        "institutions",
        "Framework",
        "Python",
        "programming",
        "application",
        "Python",
        "libraries",
        "Pandas",
        "Numpy",
        "PyHamcrest",
        "pypyodbc",
        "UI",
        "application",
        "Django",
        "MVT",
        "framework",
        "Django",
        "ORM",
        "module",
        "queries",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "MongoDB",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "JSON",
        "stages",
        "software",
        "development",
        "lifecycle",
        "design",
        "development",
        "implementation",
        "testing",
        "CucumberGherkins",
        "syntax",
        "Developed",
        "Behave",
        "framework",
        "scenarios",
        "Python",
        "code",
        "Validation",
        "Integration",
        "Testing",
        "Partner",
        "files",
        "dashboard",
        "features",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Django",
        "APIs",
        "database",
        "access",
        "data",
        "MSSQL",
        "Server",
        "database",
        "Python",
        "file",
        "formats",
        "XML",
        "JSON",
        "MSSQL",
        "Server",
        "database",
        "Python",
        "XML",
        "JSON",
        "modules",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "order",
        "reloading",
        "web",
        "page",
        "portions",
        "AJAX",
        "UI",
        "web",
        "services",
        "data",
        "systems",
        "GIT",
        "version",
        "control",
        "Jira",
        "tasks",
        "performance",
        "knowledge",
        "Agile",
        "Jira",
        "methodologies",
        "Docker",
        "Ansible",
        "Automated",
        "MySQL",
        "container",
        "deployment",
        "Docker",
        "Python",
        "monitoring",
        "containers",
        "programming",
        "automations",
        "Jenkins",
        "Ansible",
        "unixlinux",
        "OS",
        "cloud",
        "Docker",
        "Environment",
        "Python",
        "Behave",
        "Django",
        "Java",
        "Script",
        "HTML",
        "XHTML",
        "JQuery",
        "JSON",
        "XML",
        "CSS",
        "MSSQL",
        "Server",
        "Bootstrap",
        "Git",
        "Linux",
        "PyCharm",
        "Python",
        "Developer",
        "Wayfair",
        "Boston",
        "MA",
        "April",
        "December",
        "Description",
        "project",
        "Google",
        "analytics",
        "SEO",
        "web",
        "portal",
        "search",
        "sort",
        "list",
        "shopping",
        "cart",
        "cancellation",
        "payment",
        "processor",
        "payment",
        "gateways",
        "Responsibilities",
        "Python",
        "Django",
        "data",
        "Login",
        "module",
        "page",
        "users",
        "email",
        "marketing",
        "campaigns",
        "forms",
        "data",
        "database",
        "Django",
        "Framework",
        "collections",
        "Python",
        "objects",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "login",
        "module",
        "user",
        "registration",
        "products",
        "order",
        "order",
        "performance",
        "data",
        "functions",
        "cursors",
        "triggers",
        "procedures",
        "MySQL",
        "database",
        "database",
        "end",
        "applications",
        "programs",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Web",
        "application",
        "Code",
        "review",
        "GitHub",
        "testing",
        "fixing",
        "bugs",
        "modifications",
        "research",
        "platforms",
        "API",
        "module",
        "help",
        "pyYAML",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "performance",
        "approach",
        "methods",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "Performed",
        "data",
        "manipulationstorage",
        "test",
        "data",
        "lxml",
        "etree",
        "libraries",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "Wrote",
        "unit",
        "test",
        "cases",
        "testing",
        "tools",
        "Spark",
        "scripts",
        "Scala",
        "shell",
        "commands",
        "requirement",
        "SparkStreaming",
        "APIs",
        "transformations",
        "actions",
        "Developed",
        "Restful",
        "services",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "AWSCLI",
        "AWS",
        "Lambda",
        "function",
        "AWS",
        "CLI",
        "backups",
        "datastores",
        "S3",
        "buckets",
        "EBS",
        "Docker",
        "application",
        "environments",
        "Environment",
        "Python",
        "Django",
        "Behave",
        "Puppet",
        "Rspec",
        "Jenkins",
        "GrafanaGraphite",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "Bootstrap",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Git",
        "Perl",
        "Cassandra",
        "Azure",
        "Automation",
        "cloud",
        "services",
        "EC2",
        "AWS",
        "Lambda",
        "Docker",
        "Python",
        "Developer",
        "OneBlood",
        "Fort",
        "Lauderdale",
        "FL",
        "January",
        "February",
        "Description",
        "OneBlood",
        "healthcare",
        "organization",
        "people",
        "research",
        "health",
        "wellbeing",
        "others",
        "work",
        "blood",
        "stem",
        "cell",
        "products",
        "Responsibilities",
        "end",
        "module",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "JQuery",
        "design",
        "maintenance",
        "databases",
        "Python",
        "Python",
        "API",
        "Flask",
        "SQL",
        "PostgreSQL",
        "Handson",
        "experience",
        "Python",
        "web",
        "development",
        "Django",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "refactoring",
        "UI",
        "use",
        "AJAX",
        "Expertize",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "architecture",
        "Pandas",
        "library",
        "analysis",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Cassandra",
        "databases",
        "Oracle",
        "SQLite",
        "MySQL",
        "PostgreSQL",
        "Dynamo",
        "DB",
        "records",
        "backend",
        "application",
        "development",
        "web",
        "services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "development",
        "ORM",
        "modules",
        "Docker",
        "containers",
        "GIT",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "Sprints",
        "experience",
        "Python",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "JavaScript",
        "MVC",
        "framework",
        "JS",
        "Test",
        "Approach",
        "services",
        "application",
        "Test",
        "case",
        "scripts",
        "selenium",
        "scripts",
        "Selenium",
        "RC",
        "environment",
        "data",
        "Hadoop",
        "File",
        "System",
        "HDFS",
        "Map",
        "Reduce",
        "Programs",
        "cluster",
        "SQL",
        "scripts",
        "solution",
        "Pyspark",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "Bootstrap",
        "Pyramid",
        "MySQL",
        "MS",
        "SQL",
        "TSQL",
        "JavaScript",
        "Hadoop",
        "MapReduce",
        "Eclipse",
        "Spark",
        "Git",
        "Python",
        "Developer",
        "Hudson",
        "Insurance",
        "Alpharetta",
        "GA",
        "November",
        "December",
        "Description",
        "Customer",
        "Service",
        "Website",
        "site",
        "parts",
        "functionality",
        "system",
        "web",
        "services",
        "ACORD",
        "Association",
        "Cooperative",
        "Operations",
        "Research",
        "Development",
        "Life",
        "Annuity",
        "Standards",
        "insurance",
        "concepts",
        "specification",
        "trading",
        "partner",
        "intraenterprise",
        "insurance",
        "data",
        "vocabulary",
        "insurance",
        "concepts",
        "Responsibilities",
        "Solution",
        "Architecture",
        "package",
        "solutions",
        "project",
        "UML",
        "methodologies",
        "J2EE",
        "Design",
        "patterns",
        "Singleton",
        "Service",
        "Locator",
        "DAO",
        "MVC",
        "Architecture",
        "JSF",
        "Struts",
        "framework",
        "custom",
        "tag",
        "multiuser",
        "web",
        "application",
        "JSP",
        "JSTL",
        "Action",
        "Forms",
        "Action",
        "Classes",
        "JavaScript",
        "JDBC",
        "functionality",
        "Hibernate",
        "data",
        "manipulation",
        "access",
        "Spring",
        "AOP",
        "dependency",
        "injection",
        "framework",
        "business",
        "aspect",
        "application",
        "Spring",
        "DAO",
        "classes",
        "data",
        "access",
        "Testing",
        "unit",
        "testing",
        "integration",
        "testing",
        "application",
        "Java",
        "beans",
        "JSPs",
        "Spring",
        "JSTL",
        "tag",
        "supplements",
        "middleware",
        "web",
        "services",
        "schema",
        "thousands",
        "users",
        "Python",
        "Modules",
        "Packages",
        "Deployed",
        "Django",
        "web",
        "application",
        "Apache",
        "webserver",
        "carpathia",
        "cloud",
        "web",
        "deployment",
        "Python",
        "Data",
        "structures",
        "lists",
        "tuples",
        "RAD",
        "Static",
        "web",
        "services",
        "services",
        "business",
        "tables",
        "data",
        "manipulation",
        "retrieval",
        "Oracle",
        "DB2",
        "MQ",
        "Series",
        "messages",
        "Queues",
        "deployment",
        "process",
        "application",
        "WebSphere",
        "Application",
        "Server",
        "SVN",
        "source",
        "code",
        "controls",
        "test",
        "cases",
        "JUnit",
        "Web",
        "application",
        "ANT",
        "build",
        "script",
        "Mercury",
        "Quality",
        "Center",
        "requirement",
        "management",
        "test",
        "plans",
        "management",
        "SOA",
        "architecture",
        "communication",
        "business",
        "entities",
        "business",
        "people",
        "clarity",
        "requirementschanges",
        "Environment",
        "Java",
        "Spring",
        "Python",
        "JavaScript",
        "JDBC",
        "XML",
        "JAXB",
        "Web",
        "services",
        "SOAP",
        "WSDL",
        "Hibernate",
        "Spring",
        "IBM",
        "MQ",
        "PLSQL",
        "WebSphere",
        "RAD",
        "JUnit",
        "Oracle",
        "g",
        "DB2",
        "Mercury",
        "Quality",
        "Center",
        "SVN",
        "Python",
        "Developer",
        "Selectsys",
        "Pvt",
        "Ltd",
        "Hyderabad",
        "Telangana",
        "June",
        "September",
        "Description",
        "project",
        "segment",
        "Engineering",
        "Group",
        "budget",
        "India",
        "management",
        "budget",
        "projects",
        "costs",
        "date",
        "budget",
        "costs",
        "projects",
        "years",
        "impact",
        "budget",
        "revisions",
        "projects",
        "Responsibilities",
        "User",
        "Interface",
        "project",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "views",
        "templates",
        "Djangos",
        "MVT",
        "model",
        "view",
        "template",
        "website",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "end",
        "end",
        "modules",
        "project",
        "Python",
        "Django",
        "Framework",
        "data",
        "management",
        "project",
        "MySQL",
        "databases",
        "use",
        "Djangos",
        "Database",
        "API",
        "database",
        "Written",
        "Python",
        "Scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Python",
        "Django",
        "modules",
        "data",
        "formats",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Client",
        "side",
        "validations",
        "JavaScript",
        "Client",
        "side",
        "manipulations",
        "JQuery",
        "JavaScript",
        "indexes",
        "views",
        "constraints",
        "procedures",
        "cursors",
        "user",
        "functions",
        "subroutines",
        "MySQL",
        "Debugging",
        "application",
        "Subversion",
        "control",
        "tool",
        "team",
        "work",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "UNIX",
        "HTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "SVN",
        "Skills",
        "AJAX",
        "years",
        "Apache",
        "years",
        "CSS",
        "years",
        "Django",
        "years",
        "JavaScript",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Operating",
        "Systems",
        "Windows",
        "Linux",
        "Languages",
        "C",
        "C",
        "Java",
        "Python2x3x",
        "Shell",
        "Script",
        "Perl",
        "Framework",
        "Django",
        "Web",
        "framework",
        "Behave",
        "Databases",
        "MySQL",
        "Sqlite3",
        "MongoDB",
        "MSSQL",
        "Oracle",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "XML",
        "AJAX",
        "Bootstrap",
        "JS",
        "React",
        "JS",
        "Code",
        "version",
        "control",
        "tool",
        "GIT",
        "SV",
        "Web",
        "Server",
        "Apache",
        "Jenkins",
        "Tools",
        "IDEs",
        "Visual",
        "Studio",
        "Eclipse",
        "Microsoft",
        "Visio",
        "Web",
        "Storm",
        "PyCharm",
        "Sublime",
        "Text",
        "Jira",
        "Dockers",
        "Web",
        "Services",
        "AWS",
        "REST",
        "Big",
        "DataTechnologies",
        "Hadoop",
        "HDFS",
        "MapReduce",
        "Spark"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:01:30.896082",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Kabbage Inc Atlanta GA GA Around 8 years of experience as an Application Developer and coding with Analytical programming using Python Django Perl Oracle UNIX Experienced with Object Oriented Programming Software Development Life Cycle Database designs agile methodologies coding and testing of enterprise applications Experienced in developing webbased applications using Python Django XML CSS HTML JavaScript and JQuery Angular JS Experienced in LAMP Linux Apache MySQL and PythonPHP and WAMP Windows Apache MYSQL and PythonPHP Architecture Extensive experience in Statistical Analysis Reporting involving analysis Design Development testing and validating the applications Familiar with JSON based REST Web services and Amazon Web Services Experience in writing scripts using Gherkin Syntax in Behave framework in Python Worked with different kind of data bases like MySQL MSSQL Server Oracle DB and PostgreSQL Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Developed the required XML Schema documents and implemented the framework for parsing XML documents Strong experience in using different Python libraries like Pandas Numpy pypyodbc pymssql PyHamcrest Beautiful Soup requests grequests urllib urllib2 celery pickle jinja2 itertools matplotlib etc and used pep8 coding convention Worked on version control tools like GIT and SVN to maintain and deploy code and has also been involved in creating modules for companys designed pipeline architecture to make it efficient and precise Experienced in using frameworks and tools like Django Angular JS Django REST and ORM Experience in working with IDEs like PyCharm PyScripter Eclipse PyStudio PyDev and Sublime text Experience with Unit testing Test driven Development TDD Behavior Driven Development Testing Experienced in working with different operating systems like Windows Linux and UNIX Good experience in Shell ScriptingPerl Scripting Proficient knowledge in Web services like Google Cloud and Amazon AWS Services Experienced in AWS services like EC2 S3 Lambda and DynamoDB Experience working with Docker images and containers and Ansible Worked with Jenkins Extensively worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Performed Data analysis using Hadoop distributed file system MapReduce framework and Hadoop big data ecosystem Experience in using different components of Spark like Spark Streaming to process realtime data as well as historical data Work Experience Python Developer Kabbage Inc Atlanta GA January 2017 to Present Description Kabbage Inc is an online financial technology company It provides funding directly to small businesses through an automated lending platform As of now Kabbage has extended more than 35 billion to over 115 000 small business customers Responsibilities Worked on projects related to the client Santander UK ING Italy and ING France Validated the quality of the partner files that Kabbage delivers to partner financial institutions Behave Framework and native Python programming was used in developing the application Worked with different Python libraries like Pandas Numpy PyHamcrest pymssql pypyodbc etc Developed the UI of the application using Django and implemented MVT framework Worked on Django ORM module for signing complex queries Experience with Data migration from Sqlite3 to MongoDB Worked on developing UI using CSS HTML JavaScript JQuery and JSON Participated in all the stages of software development lifecycle including design development implementation and testing Experienced in CucumberGherkins syntax of coding Developed Behave framework scenarios backed up with the Python code Involved in Validation and Integration Testing of the Partner files Developed and tested various dashboard features using CSS JavaScript Django and Bootstrap Used Django APIs for database access Extracted loaded and analyzed data to and from MSSQL Server database with Python Parsed various file formats including XML and JSON and loaded into MSSQL Server database with Python XML and JSON modules DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Used Unit Test Python library for testing many programs In order to avoid the reloading of the entire web page to update small portions AJAX in UI was used Implemented RESTful web services for sending and receiving the data between multiple systems Used GIT for version control Worked on Jira for managing the tasks and improving the individual performance Good knowledge in Agile Jira and scrum methodologies Worked on Docker and Ansible Automated MySQL container deployment in Docker using Python and monitoring of these containers Implemented programming automations using Jenkins and Ansible on unixlinux based OS over cloud like Docker Environment Python 36 Behave Django Java Script HTML XHTML JQuery JSON XML CSS MSSQL Server Bootstrap Git Linux PyCharm Python Developer Wayfair Boston MA April 2015 to December 2016 Description This project was to use Google analytics conduct SEO and enhance the existing web portal by reengineering the search sort list shopping cart cancellation payment processor and payment gateways Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database Designed and configured database and back end applications and programs Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Wrote scripts in Python for extracting data from HTML file using Python library Beautiful Soup Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote unit test cases for testing tools Developed Spark scripts by using Scala shell commands as per the requirement Used SparkStreaming APIs to perform necessary transformations and actions Developed Restful micro services using Django and deployed on AWS servers using EBS and EC2 Used the AWSCLI to suspend an AWS Lambda function Used AWS CLI to automate backups of ephemeral datastores to S3 buckets EBS Used Docker for managing the application environments Environment Python 27 Django 14 Behave Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS Bootstrap JQuery JavaScript Apache Linux Git Perl Cassandra Azure Automation cloud services AWS EC2 AWS Lambda Docker Python Developer OneBlood Fort Lauderdale FL January 2014 to February 2015 Description OneBlood is one of the healthcare organization which consists of three million people approximately They perform research to enhance the health and wellbeing of others through their work with blood and stem cell products Responsibilities Developed the front end module of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery Involved in the design and maintenance of the databases using Python and Python based API using Flask SQL and PostgreSQL Handson experience in Python scripting in web development using Django Used Python scripts to update the content in the database and manipulate files Involved in the refactoring the UI which involves extensive use of AJAX Expertize in LAMP Linux Apache MySQL and Python architecture Used Pandas library for statistical analysis Experienced in NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite MySQL PostgreSQL and Dynamo DB Worked mostly on the active records for the backend of the application Involved in development of web services using SOAP for sending and getting the data from external interface in XML format Involved in the development of ORM queries Deployed and tested different modules in Docker containers and GIT Experienced in Agile Methodologies Scrum stories Sprints experience in Python along with data analytics data wrangling and Excel data extracts Worked on JavaScript MVC framework like Angular JS Worked on Test Driven Approach for developing services required for the application Exported Test case scripts and modified the selenium scripts and executed in Selenium RC environment Responsible for loading unstructured data into Hadoop File System HDFS Supported Map Reduce Programs those are running on the cluster Analyzed the SQL scripts and designed the solution to implement using Pyspark Environment Python 27 Django HTML5 CSS Bootstrap Pyramid MySQL MS SQL TSQL JavaScript Hadoop MapReduce Eclipse Spark Git Python Developer Hudson Insurance Alpharetta GA November 2012 to December 2013 Description The old Customer Service Website is being replaced with a modern attractive SOAoriented site It has various parts of the functionality to communicate with the backend system through web services It uses the ACORD Association for Cooperative Operations Research and Development Life and Annuity Standards expressing the insurance concepts in a formally defined specification to enable trading partner and intraenterprise of sharing insurance data giving a welldefined vocabulary for expressing the insurance concepts Responsibilities Designed and Developed the Solution Architecture package to identify all possible solutions for the project using UML methodologies Used J2EE Design patterns Singleton Service Locator and DAO Implemented MVC Architecture using JSF and Struts framework and custom tag libraries Developed a multiuser web application using JSP JSTL Action Forms Action Classes JavaScript and JDBC to provide the needed functionality Used Hibernate for data manipulation and access Used Spring AOP and dependency injection framework for business aspect of the application Used Spring DAO classes for data access Testing unit testing integration testing of the application Developed Java beans and JSPs by using Spring and JSTL tag libs for supplements Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Worked on Python Modules and Packages Deployed Django web application in Apache webserver and carpathia cloud web deployment Used Python Data structures like lists dictionaries tuples Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Created creating tables data manipulation and retrieval using Oracle and DB2 Used MQ Series to send receive and read the messages and also Created Queues Involved in the deployment process of the application on WebSphere Application Server SVN are used as source code controls and developed test cases using JUnit Deployed the Web application using ANT build script Used Mercury Quality Center for requirement management executing the test plans and defect management Used SOA architecture for communication between various business entities Communicated with the business people to get more clarity on the requirementschanges Environment Java Spring Python JavaScript JDBC XML JAXB Web services SOAP WSDL Hibernate Spring IBM MQ PLSQL WebSphere RAD 70 JUnit Oracle 10g DB2 Mercury Quality Center SVN Python Developer Selectsys Pvt Ltd Hyderabad Telangana June 2009 to September 2012 Description This project was designed to develop a segment for Engineering Group which was used to collect the budget across India to assist the management in visualizing the budget needed for different projects to monitor the costs incurred till date to forecast the budget costs for the projects in further years also to review the impact of budget revisions for various projects Responsibilities Designed and developed the User Interface for the project using HTML CSS JavaScript and AJAX Developed views and templates with Djangos MVT model view and template to create a userfriendly website Experience with Data migration from Sqlite3 to MongoDB Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management of the project using MySQL databases With the use of Djangos Database API accessed database objects Written Python Scripts to parse the XML documents and load the data in database Used existing Python and Django modules and rewritten to deliver data in certain formats Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Client side validations are handled using JavaScript Client side manipulations are done using JQuery and JavaScript Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Used Subversion control tool to coordinate team work Used Selenium Library to write fully functioning test automation process Environment Python Django 13 MySQL UNIX HTML CSS AJAX JavaScript Apache Web Server SVN Skills AJAX 7 years Apache 7 years CSS 7 years Django 8 years JavaScript 8 years Additional Information Technical Skills Operating Systems Windows Linux Languages C C Java Python2x3x Shell Script Perl Framework Django Web framework Behave Databases MySQL Sqlite3 MongoDB MSSQL Oracle Web Technologies HTML CSS JavaScript JQuery XML AJAX Bootstrap Angular JS React JS Code version control tool GIT SV Web Server Apache Jenkins Tools IDEs Visual Studio Eclipse Microsoft Visio Web Storm PyCharm Sublime Text Jira Dockers Web Services AWS REST Big DataTechnologies Hadoop HDFS MapReduce Spark",
    "unique_id": "58d50169-28f2-4778-8bf6-6ccc3dcfdeea"
}