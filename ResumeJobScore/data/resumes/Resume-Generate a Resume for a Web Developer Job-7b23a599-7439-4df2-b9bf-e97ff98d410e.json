{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer Cox Automotive Extensive 10 years of experiencein design development testing and implementation of various standalone and clientserver architecture based enterprise application software using various technologies analysing complex business requirements and mapping them to system specifications Good experience in developing web applications implementing Model View Controller architecture using Django web application framework Design and implement large scale business critical systems Experience in developing webbased applications using Python 3634 Django 11119 Develop web applications RESTful web services andAPIs using Django Experience in implementing server side technologies with restful API and MVC design patterns inDjango framework Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm Spyder Implement different python libraries Beautiful Soup matplotlib numpy scipy pytables pythontwitter Pandas data frame Pyvmomi Fabric and urllib2 in various tasks Experienced in NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL and MySQL databases Experience on Web development using HTML45 CSSCSS3 JavaScript JQuery Angular JS AJAX XML and JSON by following W3C standards Most of the applications were developed with Python Django and PostgreSQL using AgileMethodology Good Experience in debugging the issues using pdb Extensive experience in developing applications using Java API Swing HTML 45 Flex JavaScript CSS23 JQuery JDBC JSF JMS XML Leveraging queueing architectures with Rabbit MQ for scalability performance and building Knowledge in working with continuous deployment using Heroku and Jenkins Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers TECHNICAL CREDENTIALS Primary Languages Python Java C Frameworks Bootstrap Django NodeJS AngularJs Database Sqlite3 MSSQL MySQL Mongo DB Oracle 11g IDEs PyCharm NetBeans Eclipse MS Visual Studio Servers Webserver Apache Tomcat WebSphere WebLogic XAMPP Apache HTTP webserver WebLogic WebSphere JBoss and ApacheTomcat Deployment tools MS Azure Heroku Chef Amazon Web Services EC2 S3 EBS ELB SES Jenkins Web Technologies HTML HTML5 CSS DHTML XML JSON Java Script Ajax JQuery Work Experience Senior Python Developer Cox Automotive North Hills NY August 2017 to Present Description Cox Automotive have their hands firmly on the pulse of the automotive industry with unmatched expertise in vehicle remarketing services and digital and software solutions for automotive dealers Company delivered inspired results to bridge the gap between consumers manufacturers dealers and lenders at every stage of the automotive experience Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Analysed and gathered business requirements specifications by interacting with product owner and understanding business requirement specification documents Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Material CSS and Bootstrap Developed Views using Djangos view for the Web application Developed the keyboard signature by using HTML Canvas element and JavaScript Developed RESTful services using DRF Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Implemented mashup layer in the Django application for the orchestration of restful service calls and core logic for consuming the services Exposed and consumed restful APIs through API connect Used Django configuration to manage URLs and application parameters Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Used Charles tool to rewrite the API response which helps for the parallel development and testing process Worked on Jenkins continuous integration tool for deployment of the project Written alembic scripts to make changes to the database Worked with mongo  to create documents or packages for various context Worked with docker to setup the environment for the development Environment Python 27 36Django 19 Oracle MySQL Git Linux Macos JSON JQuery HTML XML CSS AJAX REST Rally Bootstrap JavaScript AngularJs Material CSS API connect Charles Docker Agile GitHub PyUnit PyCharm SQL Developer Robo3T Jenkins MOCK Mongo DB Docker PyTest Senior Python Developer Cisco San Jose CA April 2015 to August 2017 Description Cisco is an American multinational technology that develops manufactures and sells networking hardware telecommunications equipment and other hightechnology services and products The main goal of the project is to report IT security mobility problems faced by the customers and suggest solutions to them We developed a website for reporting issues and finding solutions to that problems easily Responsibilities Analysed the requirements and designed the flow of task using flow charts and designed flow between pages of the UI Documented the design solutions and created stories for client requirements Written REST services using python and Apollo internal to Cisco Written Python Scripts to establish continuous workflows from different teams providing data Written unit and integration tests in python to test the code Implemented LDAP authentication to authenticate and authorize the Customers using python Rest Services Generated client certificates in both pem and pfx formats using M2Crypto python module Used  database for caching the client requests Written LDAP search filters for both single level and multilevel Completed UI development using AngularJS CSS and HTML5 Dashboards with quick filters parameters and sets to handle views more efficiently Performed user validations on client side as well as server side Improved code reuse and performance by making effective use of various design patterns Efficient delivered code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Participated with QA to develop test plans from highlevel design documentation Used Rally for Agile software management Primary contact for all issues in both development and production environments Implemented the Long term fix for incidents that are happened in production environment by finding the root cause Completed the cisco white belt in security which helps to develop the applications in a secured manner to protect from the threats Environment Python 27 Cassandra MySQL LDAP Git Linux Windows JSON JQuery HTML XML CSS REST Rally Bootstrap JavaScript AngularJs Agile Bitbucket PyUnit PyCharm Microsoft SQL server management studio DataStaxDevCenter Apache Directory Studio Ansible Jenkins  MOCK Beautiful Soup PyTest Senior Python Developer Walmart Arkansas AR US December 2012 to April 2015 US Description WalMart Stores Inc is engaged in the operation of retail wholesale and other units in various formats around the world The Company offers an assortment of merchandise and services at everyday low prices EDLP The Company operates through three segments Walmart US Walmart International and Sams Club The Walmart US segment includes the Companys mass merchant concept in the United States operating under the Walmart or WalMart brands as well as digital retail The Walmart International segment consists of the Companys operations outside of the United States including various retail Websites The Sams Club segment includes the warehouse membership clubs in the United States as well as samsclubcom Responsibilities Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Bootstrap and JSON Developed Views and Templates using Djangos view controller and template language for the Web application Developed custom directives elements Attributes and classes using Javascript and angularjs Built various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web scraping to extract data for building graphs Developed a web application for developers to generate their own REST API calls in  and Python Developed Application to access JSON from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services Used Restful APIs to access data from different suppliers Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Written code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Set up Unix server to support a TCPIP local net of windows XP clients Written microservice to turn our main app into a SAML Service Provider so authentication could be handled by our clients systems Environment Python 36 Django 111 MySQL PyCharm Git ElasticSearch Flask Web2Py Linux Windows JSON JQuery HTML XML CSS REST JIRA Bootstrap AJAX AWS JavaScript MOCK Beautiful Soup Wireshark Flash URLlib2 Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef  PyTest PyChecker Selenium Senior Python Developer Leap Frog Dallas Dallas TX September 2010 to December 2012 Description Leap Frog is an educational entertainment company Leapfrog designs develops and markets technologybased learning products and related content for the education of children from infancy through grade school Responsibilities Full Stack developer created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Maintained using PHPMySQL Used AWstat and Google Analytics to analyze web traffic Started developing with Python sdk Django Cand currently developing with Django Deployed production site using Apache 20 with mod_ python Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Used django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked using AJAX with jQuery Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Imported SSL certs from other hosts to new host and properly configured Apache to use certs Used Apache htaccess to provide authentication system for PHPMySQL sites Used mod_rewrite to create SEO friendly links Created complex dynamic HTML UI using jQuery Deployed internal wiki PHP dokowiki and ticketing system Zope Python IssueTrackerProduct to help document and manage tasks Environment Python 27 Django 19 PyCharm  Beautiful Soup PyTest PyQt Apache Cassandra HTML5 DOM CSS3 AJAX JSON JQuery SQLite PyQuery JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Panda XML SQLAlchemy TSQL REST Linux GIT GitHub Senior Python Developer Tivo San Jose CA July 2008 to September 2010 Description TiVo Inc is a global leader in nextgeneration television services With global headquarters in San Jose CA and offices in New York NY Durham NC and Warsaw Poland TiVos innovative cloudbased SoftwareasaService solutions enable viewers to consume content across multiple screens in and outofthe home The TiVo solution provides an allinone approach for navigating the content chaos by seamlessly combining live recorded ondemand and overthetop television into one intuitive user interface with simple universal search discovery viewing and recording from a variety of devices creatingthe ultimate viewing experience Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Designed and developed communication between client and server using Secured Web services Written backend programming in Python and used the Django Framework to develop the application Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed RESTful services using Django Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Developed consumer based features and applications using Python and Django in test driven Development Successfully migrated the Django database from  to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Worked on changes to open stack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Learned to index and searchquery large number of documents inside Elastic search Created invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks For the large data management used TFS and delivered reliable end product Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Worked on translation of web pages to different languages as per client requirements Updated the client admin tool to have the new features like support for internalization support for customer service etc Collaborated with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions to match the pattern with the existing one Deployed the project into Jenkins using GIT version control system Deployed using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Improved code reuse and performance by making effective use of various design patterns Environment Python 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Skills LINUX 10 years APACHE 6 years TESTING 4 years ROBOT 2 years MAC 1 year Additional Information Operating Systems Windows Mac Red hat Linux Servers Webserver Apache Tomcat WebSphere JBoss WebLogic XAMPP Apache HTTP webserver WebLogic WebSphere JBoss and ApacheTomcat SDLC Methods Waterfall SCRUM Agile Testing Frameworks Junit TestNG ROBOT JXL Jtest Jasmine Bug Tracking Tools Rally JIRA Version Controls BitBucket SVN Github",
    "entities": [
        "Flashvars",
        "Responsibilities Analysed",
        "AJAX",
        "SNS Improved",
        "Test Driven Development TDD",
        "jQuery Deployed",
        "wiki PHP dokowiki",
        "jQuery Worked",
        "New York",
        "Customer",
        "Agile Software Methodology",
        "Amazon SQS",
        "TFS",
        "Heroku",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "Bootstrap Developed Views",
        "MAC",
        "Walmart US Walmart International",
        "Rest Services Generated",
        "WebLogic",
        "Used Rally for Agile",
        "TX",
        "Sams Club",
        "Warsaw Poland TiVos",
        "Python",
        "Stored Procedures",
        "Imported SSL",
        "Developed",
        "Jenkins",
        "CSS Bootstrap",
        "GET PUT POST",
        "Dallas",
        "Secured Web services Written",
        "Django",
        "CSSCSS3",
        "JQuery CSS Bootstrap Puppet",
        "San Jose",
        "Description TiVo Inc",
        "Walmart International",
        "Sams Club The",
        "Python Developed Application",
        "HTML UI",
        "MVC",
        "HerokuJenkins",
        "Additional Information Operating Systems Windows Mac",
        "SoftwareasaService",
        "GIT",
        "Python Django and PostgreSQL",
        "Rabbit MQ",
        "CSS JavaScript",
        "Restful Web Service",
        "API",
        "US",
        "QA",
        "Walmart",
        "Robo3T Jenkins",
        "Companys",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "Created",
        "AWS",
        "Oracle",
        "WalMart",
        "Completed UI",
        "Apollo",
        "Performed Unit",
        "ApacheTomcat SDLC Methods",
        "ApacheTomcat Deployment",
        "highlevel",
        "Completed",
        "PyCharm NetBeans",
        "Leapfrog",
        "SQL",
        "DRF Worked",
        "lPythonspan",
        "North Hills",
        "Python Django",
        "DELETE",
        "XHTMLCSS Maintained",
        "the United States",
        "the Flash Created PHPMySQL",
        "Collaborated with Product Management and User Experience",
        "Integration Testing GUI",
        "WebLogic WebSphere JBoss",
        "Amazon AWS",
        "Pandas",
        "SQLite",
        "AWstat",
        "the UI Documented",
        "AgileMethodology Good",
        "Performed",
        "Development Successfully",
        "Djangos",
        "Cisco",
        "JavaScript",
        "Microsoft",
        "Google Analytics",
        "Templates",
        "Experienced",
        "Django AWS Amazon",
        "SQL Queries Stored",
        "CSS",
        "CMS",
        "PyCharm Spyder Implement",
        "WebSphere JBoss",
        "MS Visual Studio Servers",
        "NoSQL",
        "Tableau",
        "Jenkins Mongo DB Elastic",
        "Oracle SQLite PostgreSQL",
        "Rspec Worked"
    ],
    "experience": "Experience in developing webbased applications using Python 3634 Django 11119 Develop web applications RESTful web services andAPIs using Django Experience in implementing server side technologies with restful API and MVC design patterns inDjango framework Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm Spyder Implement different python libraries Beautiful Soup matplotlib numpy scipy pytables pythontwitter Pandas data frame Pyvmomi Fabric and urllib2 in various tasks Experienced in NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL and MySQL databases Experience on Web development using HTML45 CSSCSS3 JavaScript JQuery Angular JS AJAX XML and JSON by following W3C standards Most of the applications were developed with Python Django and PostgreSQL using AgileMethodology Good Experience in debugging the issues using pdb Extensive experience in developing applications using Java API Swing HTML 45 Flex JavaScript CSS23 JQuery JDBC JSF JMS XML Leveraging queueing architectures with Rabbit MQ for scalability performance and building Knowledge in working with continuous deployment using Heroku and Jenkins Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers TECHNICAL CREDENTIALS Primary Languages Python Java C Frameworks Bootstrap Django NodeJS AngularJs Database Sqlite3 MSSQL MySQL Mongo DB Oracle 11 g IDEs PyCharm NetBeans Eclipse MS Visual Studio Servers Webserver Apache Tomcat WebSphere WebLogic XAMPP Apache HTTP webserver WebLogic WebSphere JBoss and ApacheTomcat Deployment tools MS Azure Heroku Chef Amazon Web Services EC2 S3 EBS ELB SES Jenkins Web Technologies HTML HTML5 CSS DHTML XML JSON Java Script Ajax JQuery Work Experience Senior Python Developer Cox Automotive North Hills NY August 2017 to Present Description Cox Automotive have their hands firmly on the pulse of the automotive industry with unmatched expertise in vehicle remarketing services and digital and software solutions for automotive dealers Company delivered inspired results to bridge the gap between consumers manufacturers dealers and lenders at every stage of the automotive experience Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Analysed and gathered business requirements specifications by interacting with product owner and understanding business requirement specification documents Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Material CSS and Bootstrap Developed Views using Djangos view for the Web application Developed the keyboard signature by using HTML Canvas element and JavaScript Developed RESTful services using DRF Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Implemented mashup layer in the Django application for the orchestration of restful service calls and core logic for consuming the services Exposed and consumed restful APIs through API connect Used Django configuration to manage URLs and application parameters Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Used Charles tool to rewrite the API response which helps for the parallel development and testing process Worked on Jenkins continuous integration tool for deployment of the project Written alembic scripts to make changes to the database Worked with mongo   to create documents or packages for various context Worked with docker to setup the environment for the development Environment Python 27 36Django 19 Oracle MySQL Git Linux Macos JSON JQuery HTML XML CSS AJAX REST Rally Bootstrap JavaScript AngularJs Material CSS API connect Charles Docker Agile GitHub PyUnit PyCharm SQL Developer Robo3 T Jenkins MOCK Mongo DB Docker PyTest Senior Python Developer Cisco San Jose CA April 2015 to August 2017 Description Cisco is an American multinational technology that develops manufactures and sells networking hardware telecommunications equipment and other hightechnology services and products The main goal of the project is to report IT security mobility problems faced by the customers and suggest solutions to them We developed a website for reporting issues and finding solutions to that problems easily Responsibilities Analysed the requirements and designed the flow of task using flow charts and designed flow between pages of the UI Documented the design solutions and created stories for client requirements Written REST services using python and Apollo internal to Cisco Written Python Scripts to establish continuous workflows from different teams providing data Written unit and integration tests in python to test the code Implemented LDAP authentication to authenticate and authorize the Customers using python Rest Services Generated client certificates in both pem and pfx formats using M2Crypto python module Used   database for caching the client requests Written LDAP search filters for both single level and multilevel Completed UI development using AngularJS CSS and HTML5 Dashboards with quick filters parameters and sets to handle views more efficiently Performed user validations on client side as well as server side Improved code reuse and performance by making effective use of various design patterns Efficient delivered code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Participated with QA to develop test plans from highlevel design documentation Used Rally for Agile software management Primary contact for all issues in both development and production environments Implemented the Long term fix for incidents that are happened in production environment by finding the root cause Completed the cisco white belt in security which helps to develop the applications in a secured manner to protect from the threats Environment Python 27 Cassandra MySQL LDAP Git Linux Windows JSON JQuery HTML XML CSS REST Rally Bootstrap JavaScript AngularJs Agile Bitbucket PyUnit PyCharm Microsoft SQL server management studio DataStaxDevCenter Apache Directory Studio Ansible Jenkins   MOCK Beautiful Soup PyTest Senior Python Developer Walmart Arkansas AR US December 2012 to April 2015 US Description WalMart Stores Inc is engaged in the operation of retail wholesale and other units in various formats around the world The Company offers an assortment of merchandise and services at everyday low prices EDLP The Company operates through three segments Walmart US Walmart International and Sams Club The Walmart US segment includes the Companys mass merchant concept in the United States operating under the Walmart or WalMart brands as well as digital retail The Walmart International segment consists of the Companys operations outside of the United States including various retail Websites The Sams Club segment includes the warehouse membership clubs in the United States as well as samsclubcom Responsibilities Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Bootstrap and JSON Developed Views and Templates using Djangos view controller and template language for the Web application Developed custom directives elements Attributes and classes using Javascript and angularjs Built various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web scraping to extract data for building graphs Developed a web application for developers to generate their own REST API calls in   and Python Developed Application to access JSON from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services Used Restful APIs to access data from different suppliers Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Written code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Set up Unix server to support a TCPIP local net of windows XP clients Written microservice to turn our main app into a SAML Service Provider so authentication could be handled by our clients systems Environment Python 36 Django 111 MySQL PyCharm Git ElasticSearch Flask Web2Py Linux Windows JSON JQuery HTML XML CSS REST JIRA Bootstrap AJAX AWS JavaScript MOCK Beautiful Soup Wireshark Flash URLlib2 Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef   PyTest PyChecker Selenium Senior Python Developer Leap Frog Dallas Dallas TX September 2010 to December 2012 Description Leap Frog is an educational entertainment company Leapfrog designs develops and markets technologybased learning products and related content for the education of children from infancy through grade school Responsibilities Full Stack developer created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Maintained using PHPMySQL Used AWstat and Google Analytics to analyze web traffic Started developing with Python sdk Django Cand currently developing with Django Deployed production site using Apache 20 with mod _ python Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Used django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked using AJAX with jQuery Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Imported SSL certs from other hosts to new host and properly configured Apache to use certs Used Apache htaccess to provide authentication system for PHPMySQL sites Used mod_rewrite to create SEO friendly links Created complex dynamic HTML UI using jQuery Deployed internal wiki PHP dokowiki and ticketing system Zope Python IssueTrackerProduct to help document and manage tasks Environment Python 27 Django 19 PyCharm   Beautiful Soup PyTest PyQt Apache Cassandra HTML5 DOM CSS3 AJAX JSON JQuery SQLite PyQuery JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Panda XML SQLAlchemy TSQL REST Linux GIT GitHub Senior Python Developer Tivo San Jose CA July 2008 to September 2010 Description TiVo Inc is a global leader in nextgeneration television services With global headquarters in San Jose CA and offices in New York NY Durham NC and Warsaw Poland TiVos innovative cloudbased SoftwareasaService solutions enable viewers to consume content across multiple screens in and outofthe home The TiVo solution provides an allinone approach for navigating the content chaos by seamlessly combining live recorded ondemand and overthetop television into one intuitive user interface with simple universal search discovery viewing and recording from a variety of devices creatingthe ultimate viewing experience Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Designed and developed communication between client and server using Secured Web services Written backend programming in Python and used the Django Framework to develop the application Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed RESTful services using Django Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Developed consumer based features and applications using Python and Django in test driven Development Successfully migrated the Django database from   to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Worked on changes to open stack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Learned to index and searchquery large number of documents inside Elastic search Created invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks For the large data management used TFS and delivered reliable end product Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Worked on translation of web pages to different languages as per client requirements Updated the client admin tool to have the new features like support for internalization support for customer service etc Collaborated with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions to match the pattern with the existing one Deployed the project into Jenkins using GIT version control system Deployed using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Improved code reuse and performance by making effective use of various design patterns Environment Python 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Skills LINUX 10 years APACHE 6 years TESTING 4 years ROBOT 2 years MAC 1 year Additional Information Operating Systems Windows Mac Red hat Linux Servers Webserver Apache Tomcat WebSphere JBoss WebLogic XAMPP Apache HTTP webserver WebLogic WebSphere JBoss and ApacheTomcat SDLC Methods Waterfall SCRUM Agile Testing Frameworks Junit TestNG ROBOT JXL Jtest Jasmine Bug Tracking Tools Rally JIRA Version Controls BitBucket SVN Github",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Senior",
        "Python",
        "Developer",
        "Cox",
        "Automotive",
        "years",
        "experiencein",
        "design",
        "development",
        "testing",
        "implementation",
        "standalone",
        "architecture",
        "enterprise",
        "application",
        "software",
        "technologies",
        "business",
        "requirements",
        "specifications",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Controller",
        "architecture",
        "Django",
        "web",
        "application",
        "framework",
        "Design",
        "scale",
        "business",
        "systems",
        "Experience",
        "applications",
        "Python",
        "Django",
        "Develop",
        "web",
        "applications",
        "web",
        "services",
        "andAPIs",
        "Django",
        "Experience",
        "server",
        "side",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "inDjango",
        "framework",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "Python",
        "IDEs",
        "PyCharm",
        "Spyder",
        "Implement",
        "python",
        "Beautiful",
        "Soup",
        "matplotlib",
        "numpy",
        "scipy",
        "pytables",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "Pyvmomi",
        "Fabric",
        "urllib2",
        "tasks",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Cassandra",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "Experience",
        "Web",
        "development",
        "HTML45",
        "CSSCSS3",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "AJAX",
        "XML",
        "JSON",
        "W3C",
        "standards",
        "applications",
        "Python",
        "Django",
        "PostgreSQL",
        "AgileMethodology",
        "Good",
        "Experience",
        "issues",
        "pdb",
        "experience",
        "applications",
        "Java",
        "API",
        "Swing",
        "HTML",
        "Flex",
        "JavaScript",
        "CSS23",
        "JQuery",
        "JDBC",
        "JSF",
        "JMS",
        "XML",
        "architectures",
        "Rabbit",
        "MQ",
        "scalability",
        "performance",
        "Knowledge",
        "deployment",
        "Heroku",
        "Jenkins",
        "Proficient",
        "unit",
        "testing",
        "code",
        "Unit",
        "test",
        "code",
        "build",
        "process",
        "Python",
        "Testing",
        "frameworks",
        "zope",
        "nose",
        "Robot",
        "framework",
        "Agile",
        "SCRUM",
        "Waterfall",
        "Model",
        "Test",
        "development",
        "methodologies",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "TECHNICAL",
        "CREDENTIALS",
        "Primary",
        "Languages",
        "Python",
        "Java",
        "C",
        "Frameworks",
        "Bootstrap",
        "Django",
        "NodeJS",
        "AngularJs",
        "Database",
        "Sqlite3",
        "MSSQL",
        "MySQL",
        "Mongo",
        "DB",
        "Oracle",
        "g",
        "IDEs",
        "PyCharm",
        "NetBeans",
        "Eclipse",
        "MS",
        "Visual",
        "Studio",
        "Servers",
        "Webserver",
        "Apache",
        "Tomcat",
        "WebSphere",
        "WebLogic",
        "XAMPP",
        "Apache",
        "HTTP",
        "WebLogic",
        "WebSphere",
        "JBoss",
        "ApacheTomcat",
        "Deployment",
        "tools",
        "MS",
        "Azure",
        "Heroku",
        "Chef",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "EBS",
        "ELB",
        "SES",
        "Jenkins",
        "Web",
        "Technologies",
        "HTML",
        "HTML5",
        "CSS",
        "DHTML",
        "XML",
        "JSON",
        "Java",
        "Script",
        "Ajax",
        "JQuery",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "Cox",
        "Automotive",
        "North",
        "Hills",
        "NY",
        "August",
        "Present",
        "Description",
        "Cox",
        "Automotive",
        "hands",
        "pulse",
        "industry",
        "expertise",
        "vehicle",
        "services",
        "software",
        "solutions",
        "dealers",
        "Company",
        "results",
        "gap",
        "consumers",
        "manufacturers",
        "dealers",
        "lenders",
        "stage",
        "experience",
        "Responsibilities",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "business",
        "requirements",
        "specifications",
        "product",
        "owner",
        "business",
        "requirement",
        "specification",
        "documents",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "CSS",
        "JavaScript",
        "Material",
        "CSS",
        "Bootstrap",
        "Developed",
        "Views",
        "Djangos",
        "view",
        "Web",
        "application",
        "keyboard",
        "signature",
        "HTML",
        "Canvas",
        "element",
        "JavaScript",
        "services",
        "DRF",
        "Worked",
        "WEB",
        "APIs",
        "calls",
        "web",
        "services",
        "URLs",
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "operations",
        "server",
        "mashup",
        "layer",
        "Django",
        "application",
        "orchestration",
        "service",
        "calls",
        "core",
        "logic",
        "services",
        "APIs",
        "API",
        "connect",
        "Used",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Proficient",
        "unit",
        "testing",
        "code",
        "Unit",
        "test",
        "code",
        "build",
        "process",
        "Charles",
        "tool",
        "API",
        "response",
        "development",
        "testing",
        "process",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "scripts",
        "changes",
        "database",
        "mongo",
        "documents",
        "packages",
        "context",
        "docker",
        "environment",
        "development",
        "Environment",
        "Python",
        "36Django",
        "Oracle",
        "MySQL",
        "Git",
        "Linux",
        "Macos",
        "JSON",
        "JQuery",
        "HTML",
        "XML",
        "CSS",
        "AJAX",
        "REST",
        "Rally",
        "Bootstrap",
        "JavaScript",
        "AngularJs",
        "Material",
        "CSS",
        "API",
        "Charles",
        "Docker",
        "Agile",
        "GitHub",
        "PyUnit",
        "PyCharm",
        "SQL",
        "Developer",
        "Robo3",
        "T",
        "Jenkins",
        "MOCK",
        "Mongo",
        "DB",
        "Docker",
        "PyTest",
        "Senior",
        "Python",
        "Developer",
        "Cisco",
        "San",
        "Jose",
        "CA",
        "April",
        "August",
        "Description",
        "Cisco",
        "technology",
        "manufactures",
        "networking",
        "hardware",
        "telecommunications",
        "equipment",
        "hightechnology",
        "services",
        "products",
        "goal",
        "project",
        "IT",
        "security",
        "mobility",
        "problems",
        "customers",
        "solutions",
        "website",
        "issues",
        "solutions",
        "problems",
        "Responsibilities",
        "requirements",
        "flow",
        "task",
        "flow",
        "charts",
        "flow",
        "pages",
        "UI",
        "design",
        "solutions",
        "stories",
        "client",
        "requirements",
        "Written",
        "REST",
        "services",
        "python",
        "Apollo",
        "Cisco",
        "Python",
        "Scripts",
        "workflows",
        "teams",
        "data",
        "unit",
        "integration",
        "tests",
        "python",
        "code",
        "LDAP",
        "authentication",
        "Customers",
        "python",
        "Rest",
        "Services",
        "client",
        "certificates",
        "pem",
        "pfx",
        "formats",
        "python",
        "module",
        "database",
        "client",
        "requests",
        "Written",
        "LDAP",
        "search",
        "filters",
        "level",
        "UI",
        "development",
        "CSS",
        "HTML5",
        "Dashboards",
        "filters",
        "parameters",
        "sets",
        "views",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "Efficient",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "QA",
        "test",
        "plans",
        "highlevel",
        "design",
        "documentation",
        "Rally",
        "software",
        "management",
        "Primary",
        "contact",
        "issues",
        "development",
        "production",
        "environments",
        "term",
        "fix",
        "incidents",
        "production",
        "environment",
        "root",
        "cause",
        "cisco",
        "belt",
        "security",
        "applications",
        "manner",
        "threats",
        "Environment",
        "Python",
        "Cassandra",
        "MySQL",
        "LDAP",
        "Git",
        "Linux",
        "Windows",
        "JSON",
        "JQuery",
        "HTML",
        "XML",
        "CSS",
        "REST",
        "Rally",
        "Bootstrap",
        "JavaScript",
        "AngularJs",
        "Agile",
        "Bitbucket",
        "PyUnit",
        "PyCharm",
        "Microsoft",
        "SQL",
        "server",
        "management",
        "studio",
        "DataStaxDevCenter",
        "Apache",
        "Directory",
        "Studio",
        "Ansible",
        "Jenkins",
        "MOCK",
        "Beautiful",
        "Soup",
        "PyTest",
        "Senior",
        "Python",
        "Developer",
        "Walmart",
        "Arkansas",
        "AR",
        "US",
        "December",
        "April",
        "US",
        "Description",
        "WalMart",
        "Stores",
        "Inc",
        "operation",
        "units",
        "formats",
        "world",
        "Company",
        "assortment",
        "merchandise",
        "services",
        "prices",
        "Company",
        "segments",
        "Walmart",
        "US",
        "Walmart",
        "International",
        "Sams",
        "Club",
        "Walmart",
        "US",
        "segment",
        "Companys",
        "merchant",
        "concept",
        "United",
        "States",
        "Walmart",
        "WalMart",
        "brands",
        "retail",
        "Walmart",
        "International",
        "segment",
        "Companys",
        "operations",
        "United",
        "States",
        "Websites",
        "Sams",
        "Club",
        "segment",
        "warehouse",
        "membership",
        "clubs",
        "United",
        "States",
        "samsclubcom",
        "Responsibilities",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JSON",
        "Developed",
        "Views",
        "Templates",
        "Djangos",
        "controller",
        "template",
        "language",
        "Web",
        "application",
        "custom",
        "directives",
        "elements",
        "Attributes",
        "classes",
        "Javascript",
        "angularjs",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "web",
        "application",
        "developers",
        "REST",
        "API",
        "Python",
        "Developed",
        "Application",
        "JSON",
        "Restful",
        "Web",
        "Service",
        "consumer",
        "side",
        "JavaScript",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "APIs",
        "data",
        "suppliers",
        "WEB",
        "APIs",
        "calls",
        "web",
        "services",
        "URLs",
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "operations",
        "server",
        "procedure",
        "trigger",
        "database",
        "data",
        "tables",
        "Web",
        "API",
        "services",
        "Written",
        "code",
        "modelviewcontroller",
        "MVC",
        "pattern",
        "Python",
        "Django",
        "framework",
        "modules",
        "application",
        "Unix",
        "server",
        "TCPIP",
        "net",
        "windows",
        "XP",
        "clients",
        "microservice",
        "app",
        "SAML",
        "Service",
        "Provider",
        "authentication",
        "clients",
        "systems",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "PyCharm",
        "Git",
        "ElasticSearch",
        "Flask",
        "Web2Py",
        "Linux",
        "Windows",
        "JSON",
        "JQuery",
        "HTML",
        "XML",
        "CSS",
        "REST",
        "JIRA",
        "Bootstrap",
        "AJAX",
        "JavaScript",
        "MOCK",
        "Beautiful",
        "Soup",
        "Wireshark",
        "Flash",
        "URLlib2",
        "Agile",
        "GitHub",
        "PyUnit",
        "SQLAlchemy",
        "Ansible",
        "Tableau",
        "SQL",
        "Developer",
        "Robot",
        "Jenkins",
        "Chef",
        "PyTest",
        "PyChecker",
        "Selenium",
        "Senior",
        "Python",
        "Developer",
        "Leap",
        "Frog",
        "Dallas",
        "Dallas",
        "TX",
        "September",
        "December",
        "Description",
        "Leap",
        "Frog",
        "entertainment",
        "company",
        "Leapfrog",
        "markets",
        "products",
        "content",
        "education",
        "children",
        "infancy",
        "grade",
        "school",
        "Responsibilities",
        "Full",
        "Stack",
        "developer",
        "custom",
        "CMS",
        "Django",
        "Amazon",
        "web",
        "service",
        "REST",
        "Json",
        "JavaScript",
        "JQuery",
        "AJAX",
        "components",
        "designer",
        "Photoshop",
        "images",
        "XHTMLCSS",
        "PHPMySQL",
        "AWstat",
        "Google",
        "Analytics",
        "web",
        "traffic",
        "Python",
        "sdk",
        "Django",
        "Cand",
        "Django",
        "production",
        "site",
        "Apache",
        "mod",
        "_",
        "python",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "PostgresSQL",
        "data",
        "integrity",
        "django_evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "AJAX",
        "jQuery",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Imported",
        "SSL",
        "certs",
        "hosts",
        "host",
        "Apache",
        "certs",
        "Apache",
        "htaccess",
        "authentication",
        "system",
        "PHPMySQL",
        "sites",
        "mod_rewrite",
        "SEO",
        "links",
        "HTML",
        "UI",
        "jQuery",
        "Deployed",
        "wiki",
        "PHP",
        "dokowiki",
        "ticketing",
        "system",
        "Zope",
        "Python",
        "IssueTrackerProduct",
        "document",
        "tasks",
        "Environment",
        "Python",
        "Django",
        "PyCharm",
        "Beautiful",
        "Soup",
        "PyTest",
        "PyQt",
        "Apache",
        "Cassandra",
        "HTML5",
        "DOM",
        "CSS3",
        "AJAX",
        "JSON",
        "JQuery",
        "SQLite",
        "PyQuery",
        "JavaScript",
        "MySQL",
        "FTPlib",
        "Mongo",
        "DB",
        "PostgreSQL",
        "Puppet",
        "Jenkins",
        "Panda",
        "XML",
        "SQLAlchemy",
        "TSQL",
        "REST",
        "Linux",
        "GIT",
        "GitHub",
        "Senior",
        "Python",
        "Developer",
        "Tivo",
        "San",
        "Jose",
        "CA",
        "July",
        "September",
        "Description",
        "TiVo",
        "Inc",
        "leader",
        "nextgeneration",
        "television",
        "services",
        "headquarters",
        "San",
        "Jose",
        "CA",
        "offices",
        "New",
        "York",
        "NY",
        "Durham",
        "NC",
        "Warsaw",
        "Poland",
        "TiVos",
        "SoftwareasaService",
        "solutions",
        "viewers",
        "content",
        "screens",
        "home",
        "TiVo",
        "solution",
        "approach",
        "content",
        "chaos",
        "ondemand",
        "television",
        "user",
        "interface",
        "search",
        "discovery",
        "variety",
        "devices",
        "experience",
        "Responsibilities",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "communication",
        "client",
        "server",
        "Secured",
        "Web",
        "services",
        "programming",
        "Python",
        "Django",
        "Framework",
        "application",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "services",
        "Django",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JQuery",
        "Used",
        "JavaScript",
        "XML",
        "portion",
        "webpage",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Successfully",
        "Django",
        "database",
        "PostgreSQL",
        "data",
        "integrity",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Rspec",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "changes",
        "stack",
        "AWS",
        "largescale",
        "data",
        "center",
        "deployment",
        "Amazon",
        "Cloud",
        "EC2",
        "Amazon",
        "SQS",
        "project",
        "history",
        "data",
        "charts",
        "Customer",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "invitation",
        "flow",
        "customers",
        "client",
        "portal",
        "applications",
        "environment",
        "settings",
        "deployment",
        "checks",
        "code",
        "base",
        "checks",
        "data",
        "management",
        "TFS",
        "end",
        "product",
        "packages",
        "patch",
        "soup",
        "b4",
        "unit",
        "testing",
        "translation",
        "web",
        "pages",
        "languages",
        "client",
        "requirements",
        "client",
        "admin",
        "tool",
        "features",
        "support",
        "internalization",
        "support",
        "customer",
        "service",
        "Product",
        "Management",
        "User",
        "Experience",
        "experts",
        "product",
        "definition",
        "schedule",
        "scope",
        "decisions",
        "clip",
        "board",
        "features",
        "client",
        "requirements",
        "expressions",
        "pattern",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Improved",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "Environment",
        "Python",
        "Java",
        "Django",
        "HTML5",
        "CSS3",
        "XML",
        "JSON",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Puppet",
        "Postgre",
        "SQL",
        "Amazon",
        "s3",
        "Jenkins",
        "Mongo",
        "DB",
        "search",
        "TSQL",
        "Beautiful",
        "soup",
        "TFS",
        "nose",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Skills",
        "LINUX",
        "years",
        "APACHE",
        "years",
        "years",
        "ROBOT",
        "years",
        "MAC",
        "year",
        "Additional",
        "Information",
        "Operating",
        "Systems",
        "Windows",
        "Mac",
        "Red",
        "hat",
        "Linux",
        "Servers",
        "Webserver",
        "Apache",
        "Tomcat",
        "WebSphere",
        "JBoss",
        "WebLogic",
        "XAMPP",
        "Apache",
        "HTTP",
        "WebLogic",
        "WebSphere",
        "JBoss",
        "ApacheTomcat",
        "SDLC",
        "Methods",
        "Waterfall",
        "Agile",
        "Testing",
        "Frameworks",
        "Junit",
        "TestNG",
        "JXL",
        "Jtest",
        "Jasmine",
        "Bug",
        "Tracking",
        "Tools",
        "Rally",
        "JIRA",
        "Version",
        "Controls",
        "BitBucket",
        "SVN",
        "Github"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:00:48.785558",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer Cox Automotive Extensive 10 years of experiencein design development testing and implementation of various standalone and clientserver architecture based enterprise application software using various technologies analysing complex business requirements and mapping them to system specifications Good experience in developing web applications implementing Model View Controller architecture using Django web application framework Design and implement large scale business critical systems Experience in developing webbased applications using Python 3634 Django 11119 Develop web applications RESTful web services andAPIs using Django Experience in implementing server side technologies with restful API and MVC design patterns inDjango framework Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm Spyder Implement different python libraries Beautiful Soup matplotlib numpy scipy pytables pythontwitter Pandas data frame Pyvmomi Fabric and urllib2 in various tasks Experienced in NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL and MySQL databases Experience on Web development using HTML45 CSSCSS3 JavaScript JQuery Angular JS AJAX XML and JSON by following W3C standards Most of the applications were developed with Python Django and PostgreSQL using AgileMethodology Good Experience in debugging the issues using pdb Extensive experience in developing applications using Java API Swing HTML 45 Flex JavaScript CSS23 JQuery JDBC JSF JMS XML Leveraging queueing architectures with Rabbit MQ for scalability performance and building Knowledge in working with continuous deployment using Heroku and Jenkins Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers TECHNICAL CREDENTIALS Primary Languages Python Java C Frameworks Bootstrap Django NodeJS AngularJs Database Sqlite3 MSSQL MySQL Mongo DB Oracle 11g IDEs PyCharm NetBeans Eclipse MS Visual Studio Servers Webserver Apache Tomcat WebSphere WebLogic XAMPP Apache HTTP webserver WebLogic WebSphere JBoss and ApacheTomcat Deployment tools MS Azure Heroku Chef Amazon Web Services EC2 S3 EBS ELB SES Jenkins Web Technologies HTML HTML5 CSS DHTML XML JSON Java Script Ajax JQuery Work Experience Senior Python Developer Cox Automotive North Hills NY August 2017 to Present Description Cox Automotive have their hands firmly on the pulse of the automotive industry with unmatched expertise in vehicle remarketing services and digital and software solutions for automotive dealers Company delivered inspired results to bridge the gap between consumers manufacturers dealers and lenders at every stage of the automotive experience Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Analysed and gathered business requirements specifications by interacting with product owner and understanding business requirement specification documents Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Material CSS and Bootstrap Developed Views using Djangos view for the Web application Developed the keyboard signature by using HTML Canvas element and JavaScript Developed RESTful services using DRF Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Implemented mashup layer in the Django application for the orchestration of restful service calls and core logic for consuming the services Exposed and consumed restful APIs through API connect Used Django configuration to manage URLs and application parameters Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Used Charles tool to rewrite the API response which helps for the parallel development and testing process Worked on Jenkins continuous integration tool for deployment of the project Written alembic scripts to make changes to the database Worked with mongo dB to create documents or packages for various context Worked with docker to setup the environment for the development Environment Python 27 36Django 19 Oracle MySQL Git Linux Macos JSON JQuery HTML XML CSS AJAX REST Rally Bootstrap JavaScript AngularJs Material CSS API connect Charles Docker Agile GitHub PyUnit PyCharm SQL Developer Robo3T Jenkins MOCK Mongo DB Docker PyTest Senior Python Developer Cisco San Jose CA April 2015 to August 2017 Description Cisco is an American multinational technology that develops manufactures and sells networking hardware telecommunications equipment and other hightechnology services and products The main goal of the project is to report IT security mobility problems faced by the customers and suggest solutions to them We developed a website for reporting issues and finding solutions to that problems easily Responsibilities Analysed the requirements and designed the flow of task using flow charts and designed flow between pages of the UI Documented the design solutions and created stories for client requirements Written REST services using python and Apollo internal to Cisco Written Python Scripts to establish continuous workflows from different teams providing data Written unit and integration tests in python to test the code Implemented LDAP authentication to authenticate and authorize the Customers using python Rest Services Generated client certificates in both pem and pfx formats using M2Crypto python module Used SQLite3 database for caching the client requests Written LDAP search filters for both single level and multilevel Completed UI development using AngularJS CSS and HTML5 Dashboards with quick filters parameters and sets to handle views more efficiently Performed user validations on client side as well as server side Improved code reuse and performance by making effective use of various design patterns Efficient delivered code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Participated with QA to develop test plans from highlevel design documentation Used Rally for Agile software management Primary contact for all issues in both development and production environments Implemented the Long term fix for incidents that are happened in production environment by finding the root cause Completed the cisco white belt in security which helps to develop the applications in a secured manner to protect from the threats Environment Python 27 Cassandra MySQL LDAP Git Linux Windows JSON JQuery HTML XML CSS REST Rally Bootstrap JavaScript AngularJs Agile Bitbucket PyUnit PyCharm Microsoft SQL server management studio DataStaxDevCenter Apache Directory Studio Ansible Jenkins MatPlotLib MOCK Beautiful Soup PyTest Senior Python Developer Walmart Arkansas AR US December 2012 to April 2015 US Description WalMart Stores Inc is engaged in the operation of retail wholesale and other units in various formats around the world The Company offers an assortment of merchandise and services at everyday low prices EDLP The Company operates through three segments Walmart US Walmart International and Sams Club The Walmart US segment includes the Companys mass merchant concept in the United States operating under the Walmart or WalMart brands as well as digital retail The Walmart International segment consists of the Companys operations outside of the United States including various retail Websites The Sams Club segment includes the warehouse membership clubs in the United States as well as samsclubcom Responsibilities Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Bootstrap and JSON Developed Views and Templates using Djangos view controller and template language for the Web application Developed custom directives elements Attributes and classes using Javascript and angularjs Built various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web scraping to extract data for building graphs Developed a web application for developers to generate their own REST API calls in JAVA and Python Developed Application to access JSON from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services Used Restful APIs to access data from different suppliers Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Written code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Set up Unix server to support a TCPIP local net of windows XP clients Written microservice to turn our main app into a SAML Service Provider so authentication could be handled by our clients systems Environment Python 36 Django 111 MySQL PyCharm Git ElasticSearch Flask Web2Py Linux Windows JSON JQuery HTML XML CSS REST JIRA Bootstrap AJAX AWS JavaScript MOCK Beautiful Soup Wireshark Flash URLlib2 Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef MatPlotLib PyTest PyChecker Selenium Senior Python Developer Leap Frog Dallas Dallas TX September 2010 to December 2012 Description Leap Frog is an educational entertainment company Leapfrog designs develops and markets technologybased learning products and related content for the education of children from infancy through grade school Responsibilities Full Stack developer created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Maintained using PHPMySQL Used AWstat and Google Analytics to analyze web traffic Started developing with Python sdk Django Cand currently developing with Django Deployed production site using Apache 20 with mod_ python Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Used django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked using AJAX with jQuery Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Imported SSL certs from other hosts to new host and properly configured Apache to use certs Used Apache htaccess to provide authentication system for PHPMySQL sites Used mod_rewrite to create SEO friendly links Created complex dynamic HTML UI using jQuery Deployed internal wiki PHP dokowiki and ticketing system Zope Python IssueTrackerProduct to help document and manage tasks Environment Python 27 Django 19 PyCharm JAVA Beautiful Soup PyTest PyQt Apache Cassandra HTML5 DOM CSS3 AJAX JSON JQuery SQLite PyQuery JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Panda XML SQLAlchemy TSQL REST Linux GIT GitHub Senior Python Developer Tivo San Jose CA July 2008 to September 2010 Description TiVo Inc is a global leader in nextgeneration television services With global headquarters in San Jose CA and offices in New York NY Durham NC and Warsaw Poland TiVos innovative cloudbased SoftwareasaService solutions enable viewers to consume content across multiple screens in and outofthe home The TiVo solution provides an allinone approach for navigating the content chaos by seamlessly combining live recorded ondemand and overthetop television into one intuitive user interface with simple universal search discovery viewing and recording from a variety of devices creatingthe ultimate viewing experience Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Designed and developed communication between client and server using Secured Web services Written backend programming in Python and used the Django Framework to develop the application Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed RESTful services using Django Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Developed consumer based features and applications using Python and Django in test driven Development Successfully migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Worked on changes to open stack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Learned to index and searchquery large number of documents inside Elastic search Created invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks For the large data management used TFS and delivered reliable end product Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Worked on translation of web pages to different languages as per client requirements Updated the client admin tool to have the new features like support for internalization support for customer service etc Collaborated with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions to match the pattern with the existing one Deployed the project into Jenkins using GIT version control system Deployed using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Improved code reuse and performance by making effective use of various design patterns Environment Python 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Skills LINUX 10 years APACHE 6 years TESTING 4 years ROBOT 2 years MAC 1 year Additional Information Operating Systems Windows Mac Red hat Linux Servers Webserver Apache Tomcat WebSphere JBoss WebLogic XAMPP Apache HTTP webserver WebLogic WebSphere JBoss and ApacheTomcat SDLC Methods Waterfall SCRUM Agile Testing Frameworks Junit TestNG ROBOT JXL Jtest Jasmine Bug Tracking Tools Rally JIRA Version Controls BitBucket SVN Github",
    "unique_id": "7b23a599-7439-4df2-b9bf-e97ff98d410e"
}