{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Sun Life Financials Boston MA Around 7 years of experience in IT which comprise of WebApplication Developer and coding analytical Programing using Python Django Experienced with full software development lifecycle architecting scalable platforms object oriented programming database design and agile methodologies Extensively used SQL Numpy Pandas and Spark for Data Analysis and Model building Cognitive about designing deploying and operating highly available scalable and faulttolerant systems using Amazon Web Services AWS Provide highly available and durable data by using S3 data store versioning and life cycle policy Built the web application by using Django Flask Jinja Python WSGI REDIS PostgreSQL and DyanamoDB Thorough understanding of providing specifications using Waterfall and Agile Software methodology to modeling systems and business processes Experience for debugging the project monitored on JIRAAgile Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experienced with UNIXLinux environments Experienced with python PyPi packages and used those packages at run time by pulling it from Artifactory Experienced in developing webbased applications using Python Django CSS HTML Bottle JavaScript and JQuery Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Familiar with REST and SOAP Web services Experienced in developing Web Services with Python programming language Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unit test Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Authorized to work in the US for any employer Work Experience Python Developer Sun Life Financials Boston MA July 2018 to Present Responsibilities Prepared and analyzed reports using Python libraries and involved in environment Setup Extensively used Django micro service framework for simple request and response Created Social Media services in order to retrieve the data using the appropriate curls Extracted the data from data storage like elastic search Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Involved in writing unit test cases for the functionalities using Nose Test Administration of Continuous Integration tool in Jenkins Create and configure new jobs for each and every application in Jenkins Used Python and Django to interface with the J Query UI and manage the storage and deletion of content Used XML for dynamic display of options in select box and description on web page Involved in debugging the applications monitored on JIRA using agile Kanban Board Involved in postproduction support for solving complex tickets Identify troubleshoot and resolve issues related to build and deploy process Inform through mail the compilation errors to the responsible team with error logs using JIRA Resolved user problems in a timely and accurate manner as a member of the EndUser support team Designed RESTful XML web service for handling AJAX requests Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Python Django HTML Angular JS JSON AJAX XML CSS SQL MySQL JIRA PySpark Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub Linux PyCharm Python Developer OpenArc Pittsburgh PA March 2017 to June 2018 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS J Query and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework AWS HTML CSS NoSQL JavaScript J Query Sublime Text Jira GIT py Builder unit test Firebug Web Services Python Developer Samsonite Mansfield MA November 2015 to February 2017 Description Samsonite is the worldwide leader in superior travel bags luggage and accessories combining notable style with the latest design technology and the utmost attention to quality and durability We are principally engaged in the design manufacturing sourcing and distribution of luggage business and computer bags outdoor casual bags travel accessories and slim protective cases for personal electronic devices Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Web pack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Load balancing of ETL processes database performance tuning ETL processing tools Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 S3 Red shift Glacier Bamboo ELB Load Balancers RDS SNS SWF and EBS etc and Azure Migrating a production infrastructure into an Amazon Web Services utilizing AWS Cloud Formation Code Deploy EBS and Ops Works Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Developed Python scripts for testing the car functioning on different services Worked with Splunk for testing the performance and debugging server level problems Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Working close together with QA and Operations teams to understand design and develop and endtoend data flow requirements Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Imported data using Sqoop to load data from MySQL to HDFS on regular basis Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Environment Python 27AWSDevops Django Django Rest Flask React Redux Circle CI Vagrant Splunk New Relic Server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer Velox Insurance Atlanta GA March 2014 to October 2015 Responsibilities Designed the front end of the application using Python HTML CSS JSON and jQuery Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using collections in Python for manipulating and looping through different userdefined objects Work with team of developers on python applications for RISK management Used Pandas library for statistics Analysis Improved code reuse and performance by making effective use of various design patterns Worked in development of applications especially in Linux environment and familiar with all its commands Environment Python Django MySQL Linux HTML CSS JavaScript Jira Git CRUD Pyramid HTML5 CSS3 jQuery Web Services Soap Restful PyUnit Python Developer Navayuga Infotech Hyderabad Telangana June 2012 to February 2014 Responsibilities Maintained and improved the security level of data Responsible for security standard implementation and data protection Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Implemented code in Python to retrieve and manipulate data Developed multipage applications from beginning to end Collaborate in system and network security installation configuration and review Responsible for debugging and troubleshooting the web application Contributed to development of security policies and processes Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Did Content Management through front end live search and normal search features Profiled Python code for optimization and memory management Rewrite existing PythonDjango module to deliver certain format of data Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django GitHub Education Bachelors Skills Django 7 years Javascript 6 years Linux 7 years Mysql 5 years Python 7 years Jquery Android Additional Information Technical skills Languages Python C C SQL Java and PHP Web Development HTML5 CSS3 JavaScript Bootstrap AJAX XML JSON Frameworks Django Flask CherryPy Pyramid NodeJS Angular JS JSP Numpy Matplotlib Servlets Servers Apache Tomcat Apache HTTP JBOSS Databases PostgreSQL MySQL Cassandra Redis MongoDB SQL Server Big Data Technologies Hadoop MapReduce and Spark Methodologies Agile Scrum Waterfall Tools Git SVN Mercurial Memcached Jira SSIS Data Migrator Visual studio IDE Notepad Eclipse IDLE PyCharm Pyscripter OS Windows Linux Unix",
    "entities": [
        "AJAX",
        "Chef Implemented",
        "JQuery Experienced",
        "Identify",
        "Analysis Improved",
        "LAMP Linux",
        "Amazon Web Services AWS",
        "XML",
        "JavaScript Develop",
        "Atlanta",
        "Used React JS",
        "Spec Involved",
        "Bootstrap CSS",
        "Software Development Life Cycle SDLC",
        "the Performance of Stored Procedures and Queries Installed",
        "EndUser",
        "Amazon",
        "UNIXLinux",
        "OpenSource Chef",
        "SQL Server",
        "Stored Procedures",
        "Developed",
        "JIRA Resolved",
        "PythonPHP Architecture Experienced",
        "Oracle Relational",
        "Kanban Board Involved",
        "Python Experienced",
        "Django",
        "Spark for Data Analysis",
        "Ops Works Build",
        "Git",
        "Waterfall",
        "JavaScript Did Content Management",
        "Virtual DOM React Props Lifecycle",
        "PythonPHP",
        "Developed Serverside",
        "jQuery Developed",
        "Linux",
        "JSP",
        "Flask",
        "Worked",
        "SQL Queries",
        "the J Query UI",
        "Languages Python C C",
        "RDS",
        "Teradata Hadoop connectors Hands",
        "Jenkins Used Python",
        "SQLbased",
        "Azure Migrating",
        "Jenkins Create",
        "MVC",
        "Python REST API Framework Involved",
        "PythonDjango",
        "GIT",
        "Node JS",
        "HTML CSS",
        "Web Services",
        "US",
        "Sqoop",
        "QA",
        "Created",
        "AWS",
        "Glacier Bamboo ELB Load Balancers RDS SNS SWF",
        "Work Experience Python Developer Sun Life Financials Boston",
        "WAMP Windows Apache",
        "Coded",
        "Used Circle CI",
        "JSX",
        "HTML CSS J Query",
        "Performed Unit",
        "Python Spring IOC Inversion",
        "SQL",
        "Django Migrations",
        "Created Social Media services",
        "Amazon Web Services",
        "lPythonspan",
        "Artifactory Experienced",
        "Python Spring Security",
        "WebApplication Developer",
        "Integration Testing GUI",
        "CICD",
        "Wrote",
        "the React States",
        "Pandas",
        "ETL",
        "CRUD",
        "Firebug Used JIRA",
        "Amazon Web Services AWS Provide",
        "Amazon Web Service",
        "REST",
        "NoSQL",
        "Nose Test Administration",
        "Jquery Android Additional Information Technical",
        "EBS",
        "PyTest",
        "Operations",
        "Integration",
        "Firebug Web Services Python Developer Samsonite Mansfield",
        "Django Flask Jinja Python WSGI REDIS PostgreSQL",
        "Node",
        "Validation Controls",
        "Big Data Technologies Hadoop MapReduce"
    ],
    "experience": "Experience for debugging the project monitored on JIRAAgile Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experienced with UNIXLinux environments Experienced with python PyPi packages and used those packages at run time by pulling it from Artifactory Experienced in developing webbased applications using Python Django CSS HTML Bottle JavaScript and JQuery Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Familiar with REST and SOAP Web services Experienced in developing Web Services with Python programming language Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unit test Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Authorized to work in the US for any employer Work Experience Python Developer Sun Life Financials Boston MA July 2018 to Present Responsibilities Prepared and analyzed reports using Python libraries and involved in environment Setup Extensively used Django micro service framework for simple request and response Created Social Media services in order to retrieve the data using the appropriate curls Extracted the data from data storage like elastic search Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Involved in writing unit test cases for the functionalities using Nose Test Administration of Continuous Integration tool in Jenkins Create and configure new jobs for each and every application in Jenkins Used Python and Django to interface with the J Query UI and manage the storage and deletion of content Used XML for dynamic display of options in select box and description on web page Involved in debugging the applications monitored on JIRA using agile Kanban Board Involved in postproduction support for solving complex tickets Identify troubleshoot and resolve issues related to build and deploy process Inform through mail the compilation errors to the responsible team with error logs using JIRA Resolved user problems in a timely and accurate manner as a member of the EndUser support team Designed RESTful XML web service for handling AJAX requests Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Python Django HTML Angular JS JSON AJAX XML CSS SQL MySQL JIRA PySpark Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub Linux PyCharm Python Developer OpenArc Pittsburgh PA March 2017 to June 2018 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS J Query and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework AWS HTML CSS NoSQL JavaScript J Query Sublime Text Jira GIT py Builder unit test Firebug Web Services Python Developer Samsonite Mansfield MA November 2015 to February 2017 Description Samsonite is the worldwide leader in superior travel bags luggage and accessories combining notable style with the latest design technology and the utmost attention to quality and durability We are principally engaged in the design manufacturing sourcing and distribution of luggage business and computer bags outdoor casual bags travel accessories and slim protective cases for personal electronic devices Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Web pack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Load balancing of ETL processes database performance tuning ETL processing tools Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 S3 Red shift Glacier Bamboo ELB Load Balancers RDS SNS SWF and EBS etc and Azure Migrating a production infrastructure into an Amazon Web Services utilizing AWS Cloud Formation Code Deploy EBS and Ops Works Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Developed Python scripts for testing the car functioning on different services Worked with Splunk for testing the performance and debugging server level problems Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Working close together with QA and Operations teams to understand design and develop and endtoend data flow requirements Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Imported data using Sqoop to load data from MySQL to HDFS on regular basis Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Environment Python 27AWSDevops Django Django Rest Flask React Redux Circle CI Vagrant Splunk New Relic Server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer Velox Insurance Atlanta GA March 2014 to October 2015 Responsibilities Designed the front end of the application using Python HTML CSS JSON and jQuery Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using collections in Python for manipulating and looping through different userdefined objects Work with team of developers on python applications for RISK management Used Pandas library for statistics Analysis Improved code reuse and performance by making effective use of various design patterns Worked in development of applications especially in Linux environment and familiar with all its commands Environment Python Django MySQL Linux HTML CSS JavaScript Jira Git CRUD Pyramid HTML5 CSS3 jQuery Web Services Soap Restful PyUnit Python Developer Navayuga Infotech Hyderabad Telangana June 2012 to February 2014 Responsibilities Maintained and improved the security level of data Responsible for security standard implementation and data protection Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Implemented code in Python to retrieve and manipulate data Developed multipage applications from beginning to end Collaborate in system and network security installation configuration and review Responsible for debugging and troubleshooting the web application Contributed to development of security policies and processes Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Did Content Management through front end live search and normal search features Profiled Python code for optimization and memory management Rewrite existing PythonDjango module to deliver certain format of data Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django GitHub Education Bachelors Skills Django 7 years Javascript 6 years Linux 7 years Mysql 5 years Python 7 years Jquery Android Additional Information Technical skills Languages Python C C SQL Java and PHP Web Development HTML5 CSS3 JavaScript Bootstrap AJAX XML JSON Frameworks Django Flask CherryPy Pyramid NodeJS Angular JS JSP Numpy Matplotlib Servlets Servers Apache Tomcat Apache HTTP JBOSS Databases PostgreSQL MySQL Cassandra Redis MongoDB SQL Server Big Data Technologies Hadoop MapReduce and Spark Methodologies Agile Scrum Waterfall Tools Git SVN Mercurial Memcached Jira SSIS Data Migrator Visual studio IDE Notepad Eclipse IDLE PyCharm Pyscripter OS Windows Linux Unix",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Sun",
        "Life",
        "Financials",
        "Boston",
        "MA",
        "years",
        "experience",
        "IT",
        "WebApplication",
        "Developer",
        "Programing",
        "Python",
        "Django",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "SQL",
        "Numpy",
        "Pandas",
        "Spark",
        "Data",
        "Analysis",
        "Model",
        "Cognitive",
        "systems",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "data",
        "S3",
        "data",
        "store",
        "versioning",
        "life",
        "cycle",
        "policy",
        "web",
        "application",
        "Django",
        "Flask",
        "Jinja",
        "Python",
        "WSGI",
        "REDIS",
        "PostgreSQL",
        "DyanamoDB",
        "understanding",
        "specifications",
        "Waterfall",
        "Agile",
        "Software",
        "methodology",
        "modeling",
        "systems",
        "business",
        "Experience",
        "project",
        "JIRAAgile",
        "Experience",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Experienced",
        "UNIXLinux",
        "environments",
        "PyPi",
        "packages",
        "packages",
        "time",
        "Artifactory",
        "applications",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "Bottle",
        "JavaScript",
        "JQuery",
        "testing",
        "applications",
        "AWS",
        "Amazon",
        "Web",
        "services",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Familiar",
        "REST",
        "SOAP",
        "Web",
        "services",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MongoDB",
        "MySQL",
        "PostgreSQL",
        "database",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Developed",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "code",
        "PyTest",
        "Unit",
        "test",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Sun",
        "Life",
        "Financials",
        "Boston",
        "MA",
        "July",
        "Present",
        "Responsibilities",
        "reports",
        "Python",
        "libraries",
        "environment",
        "Setup",
        "Django",
        "micro",
        "service",
        "framework",
        "request",
        "response",
        "Social",
        "Media",
        "services",
        "order",
        "data",
        "curls",
        "data",
        "data",
        "storage",
        "search",
        "environment",
        "settings",
        "deployment",
        "checks",
        "code",
        "base",
        "checks",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "unit",
        "test",
        "cases",
        "functionalities",
        "Nose",
        "Test",
        "Administration",
        "Continuous",
        "Integration",
        "tool",
        "Jenkins",
        "Create",
        "jobs",
        "application",
        "Jenkins",
        "Python",
        "Django",
        "J",
        "Query",
        "UI",
        "storage",
        "deletion",
        "content",
        "XML",
        "display",
        "options",
        "box",
        "description",
        "web",
        "page",
        "applications",
        "JIRA",
        "Kanban",
        "Board",
        "postproduction",
        "support",
        "tickets",
        "troubleshoot",
        "issues",
        "process",
        "Inform",
        "mail",
        "compilation",
        "errors",
        "team",
        "error",
        "logs",
        "JIRA",
        "user",
        "problems",
        "manner",
        "member",
        "EndUser",
        "support",
        "team",
        "XML",
        "web",
        "service",
        "AJAX",
        "requests",
        "software",
        "tools",
        "clients",
        "customers",
        "test",
        "programs",
        "engineering",
        "processes",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "JS",
        "JSON",
        "AJAX",
        "XML",
        "CSS",
        "SQL",
        "MySQL",
        "JIRA",
        "PySpark",
        "Bootstrap",
        "Restful",
        "Web",
        "Services",
        "Beautiful",
        "Soup",
        "Jenkins",
        "GitHub",
        "Linux",
        "PyCharm",
        "Python",
        "Developer",
        "OpenArc",
        "Pittsburgh",
        "PA",
        "March",
        "June",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "UI",
        "HTML",
        "CSS",
        "J",
        "Query",
        "Bootstrap",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "Salt",
        "Stack",
        "infrastructure",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Dynamo",
        "DB",
        "SNS",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Formation",
        "Automated",
        "Regular",
        "AWS",
        "tasks",
        "snapshots",
        "creation",
        "Python",
        "scripts",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "servers",
        "Ubuntu",
        "Linux",
        "Windows",
        "AWS",
        "EC2",
        "OpenSource",
        "Chef",
        "server",
        "Deployed",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "configuration",
        "management",
        "Chef",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "integration",
        "database",
        "systems",
        "Serverside",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Performance",
        "tuning",
        "Performance",
        "Stored",
        "Procedures",
        "Queries",
        "Installed",
        "py",
        "Builder",
        "application",
        "builds",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "Deployed",
        "SOAP",
        "Web",
        "Services",
        "Tomcat",
        "Server",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "IDE",
        "tool",
        "application",
        "JIRA",
        "bug",
        "issue",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "GIT",
        "team",
        "development",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "HTML",
        "CSS",
        "NoSQL",
        "JavaScript",
        "J",
        "Query",
        "Sublime",
        "Text",
        "Jira",
        "GIT",
        "py",
        "Builder",
        "unit",
        "test",
        "Firebug",
        "Web",
        "Services",
        "Python",
        "Developer",
        "Samsonite",
        "Mansfield",
        "MA",
        "November",
        "February",
        "Description",
        "Samsonite",
        "leader",
        "travel",
        "bags",
        "luggage",
        "accessories",
        "style",
        "design",
        "technology",
        "attention",
        "quality",
        "durability",
        "design",
        "manufacturing",
        "distribution",
        "luggage",
        "business",
        "computer",
        "bags",
        "accessories",
        "cases",
        "devices",
        "Responsibilities",
        "server",
        "module",
        "issues",
        "enhancements",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "React",
        "Web",
        "pack",
        "Redux",
        "ES67",
        "PostgreSQL",
        "database",
        "Django",
        "ORM",
        "module",
        "queries",
        "Load",
        "balancing",
        "ETL",
        "processes",
        "database",
        "performance",
        "ETL",
        "processing",
        "tools",
        "data",
        "Teradata",
        "HDFS",
        "Teradata",
        "Hadoop",
        "connectors",
        "Hands",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "provisioning",
        "knowledge",
        "AWS",
        "services",
        "EC2",
        "S3",
        "Red",
        "shift",
        "Glacier",
        "Bamboo",
        "ELB",
        "Load",
        "Balancers",
        "RDS",
        "SNS",
        "SWF",
        "EBS",
        "etc",
        "Azure",
        "Migrating",
        "production",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Formation",
        "Code",
        "EBS",
        "Ops",
        "Works",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "stack",
        "provision",
        "machines",
        "clients",
        "Django",
        "API",
        "profiling",
        "techniques",
        "information",
        "Ansible",
        "Vagrant",
        "Docker",
        "application",
        "environments",
        "Python",
        "scripts",
        "car",
        "services",
        "Splunk",
        "performance",
        "server",
        "level",
        "problems",
        "Validation",
        "Controls",
        "form",
        "validation",
        "custom",
        "validation",
        "controls",
        "Object",
        "Oriented",
        "JavaScript",
        "Working",
        "QA",
        "Operations",
        "teams",
        "design",
        "data",
        "flow",
        "requirements",
        "React",
        "JS",
        "components",
        "JSX",
        "React",
        "components",
        "DOM",
        "React",
        "Props",
        "Lifecycle",
        "methods",
        "React",
        "States",
        "Events",
        "Developed",
        "Restful",
        "Microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Developed",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "website",
        "interface",
        "Django",
        "queues",
        "data",
        "Sqoop",
        "data",
        "MySQL",
        "HDFS",
        "basis",
        "Circle",
        "CI",
        "integration",
        "delivery",
        "platform",
        "GIT",
        "Django",
        "Migrations",
        "database",
        "task",
        "python",
        "scripting",
        "CICD",
        "pipeline",
        "management",
        "releases",
        "Jira",
        "tasks",
        "performance",
        "recommendations",
        "team",
        "terms",
        "testing",
        "techniques",
        "testing",
        "tasks",
        "Environment",
        "Python",
        "27AWSDevops",
        "Django",
        "Django",
        "Rest",
        "Flask",
        "React",
        "Redux",
        "Circle",
        "CI",
        "Vagrant",
        "Splunk",
        "New",
        "Relic",
        "Server",
        "GitHub",
        "Ansible",
        "HTML5CSS",
        "PostgreSQL",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "S3",
        "EC2",
        "EBS",
        "PyCharm",
        "Microsoft",
        "Visual",
        "Code",
        "Linux",
        "Shell",
        "Scripting",
        "JIRA",
        "Python",
        "Developer",
        "Velox",
        "Insurance",
        "Atlanta",
        "GA",
        "March",
        "October",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "JSON",
        "jQuery",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "ROBOT",
        "framework",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Spec",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Skilled",
        "collections",
        "Python",
        "objects",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "development",
        "applications",
        "Linux",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "JavaScript",
        "Jira",
        "Git",
        "CRUD",
        "Pyramid",
        "HTML5",
        "CSS3",
        "jQuery",
        "Web",
        "Services",
        "Soap",
        "Restful",
        "PyUnit",
        "Python",
        "Developer",
        "Navayuga",
        "Infotech",
        "Hyderabad",
        "Telangana",
        "June",
        "February",
        "Responsibilities",
        "security",
        "level",
        "data",
        "security",
        "implementation",
        "data",
        "protection",
        "millions",
        "database",
        "records",
        "basis",
        "errors",
        "data",
        "patterns",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "code",
        "Python",
        "manipulate",
        "data",
        "multipage",
        "applications",
        "Collaborate",
        "system",
        "network",
        "security",
        "installation",
        "configuration",
        "web",
        "application",
        "development",
        "security",
        "policies",
        "processes",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Content",
        "Management",
        "end",
        "search",
        "search",
        "Profiled",
        "Python",
        "code",
        "optimization",
        "memory",
        "management",
        "Rewrite",
        "PythonDjango",
        "module",
        "format",
        "data",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "SVN",
        "CSS",
        "AJAX",
        "Bugzilla",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Django",
        "GitHub",
        "Education",
        "Bachelors",
        "Skills",
        "Django",
        "years",
        "Javascript",
        "years",
        "Linux",
        "years",
        "Mysql",
        "years",
        "Python",
        "years",
        "Jquery",
        "Android",
        "Additional",
        "Information",
        "Technical",
        "skills",
        "Languages",
        "Python",
        "C",
        "C",
        "SQL",
        "Java",
        "PHP",
        "Web",
        "Development",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "AJAX",
        "XML",
        "JSON",
        "Frameworks",
        "Django",
        "Flask",
        "CherryPy",
        "Pyramid",
        "NodeJS",
        "Angular",
        "JS",
        "JSP",
        "Numpy",
        "Matplotlib",
        "Servlets",
        "Servers",
        "Apache",
        "Tomcat",
        "Apache",
        "HTTP",
        "JBOSS",
        "Databases",
        "PostgreSQL",
        "MySQL",
        "Cassandra",
        "Redis",
        "MongoDB",
        "SQL",
        "Server",
        "Big",
        "Data",
        "Technologies",
        "Hadoop",
        "MapReduce",
        "Spark",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "Tools",
        "Git",
        "SVN",
        "Mercurial",
        "Memcached",
        "Jira",
        "SSIS",
        "Data",
        "Migrator",
        "Visual",
        "studio",
        "IDE",
        "Notepad",
        "Eclipse",
        "IDLE",
        "PyCharm",
        "Pyscripter",
        "OS",
        "Windows",
        "Linux",
        "Unix"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:26:12.658362",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Sun Life Financials Boston MA Around 7 years of experience in IT which comprise of WebApplication Developer and coding analytical Programing using Python Django Experienced with full software development lifecycle architecting scalable platforms object oriented programming database design and agile methodologies Extensively used SQL Numpy Pandas and Spark for Data Analysis and Model building Cognitive about designing deploying and operating highly available scalable and faulttolerant systems using Amazon Web Services AWS Provide highly available and durable data by using S3 data store versioning and life cycle policy Built the web application by using Django Flask Jinja Python WSGI REDIS PostgreSQL and DyanamoDB Thorough understanding of providing specifications using Waterfall and Agile Software methodology to modeling systems and business processes Experience for debugging the project monitored on JIRAAgile Experience object oriented programming OOP concepts using Python Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experienced with UNIXLinux environments Experienced with python PyPi packages and used those packages at run time by pulling it from Artifactory Experienced in developing webbased applications using Python Django CSS HTML Bottle JavaScript and JQuery Experienced in installing configuring modifying testing and deploying applications with AWS Amazon Web services Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Familiar with REST and SOAP Web services Experienced in developing Web Services with Python programming language Sub Queries Stored Procedures Triggers Cursors and Functions on MongoDB MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing of the code using PyTest and Unit test Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Authorized to work in the US for any employer Work Experience Python Developer Sun Life Financials Boston MA July 2018 to Present Responsibilities Prepared and analyzed reports using Python libraries and involved in environment Setup Extensively used Django micro service framework for simple request and response Created Social Media services in order to retrieve the data using the appropriate curls Extracted the data from data storage like elastic search Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Placed data into JSON files using Python to test Django websites Involved in writing unit test cases for the functionalities using Nose Test Administration of Continuous Integration tool in Jenkins Create and configure new jobs for each and every application in Jenkins Used Python and Django to interface with the J Query UI and manage the storage and deletion of content Used XML for dynamic display of options in select box and description on web page Involved in debugging the applications monitored on JIRA using agile Kanban Board Involved in postproduction support for solving complex tickets Identify troubleshoot and resolve issues related to build and deploy process Inform through mail the compilation errors to the responsible team with error logs using JIRA Resolved user problems in a timely and accurate manner as a member of the EndUser support team Designed RESTful XML web service for handling AJAX requests Developed tested and debugged software tools utilized by clients and internal customers Coded test programs and evaluated existing engineering processes Environment Python Django HTML Angular JS JSON AJAX XML CSS SQL MySQL JIRA PySpark Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub Linux PyCharm Python Developer OpenArc Pittsburgh PA March 2017 to June 2018 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS J Query and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework AWS HTML CSS NoSQL JavaScript J Query Sublime Text Jira GIT py Builder unit test Firebug Web Services Python Developer Samsonite Mansfield MA November 2015 to February 2017 Description Samsonite is the worldwide leader in superior travel bags luggage and accessories combining notable style with the latest design technology and the utmost attention to quality and durability We are principally engaged in the design manufacturing sourcing and distribution of luggage business and computer bags outdoor casual bags travel accessories and slim protective cases for personal electronic devices Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Web pack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Load balancing of ETL processes database performance tuning ETL processing tools Loaded the data from Teradata to HDFS using Teradata Hadoop connectors Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 S3 Red shift Glacier Bamboo ELB Load Balancers RDS SNS SWF and EBS etc and Azure Migrating a production infrastructure into an Amazon Web Services utilizing AWS Cloud Formation Code Deploy EBS and Ops Works Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Developed Python scripts for testing the car functioning on different services Worked with Splunk for testing the performance and debugging server level problems Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Working close together with QA and Operations teams to understand design and develop and endtoend data flow requirements Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Imported data using Sqoop to load data from MySQL to HDFS on regular basis Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Environment Python 27AWSDevops Django Django Rest Flask React Redux Circle CI Vagrant Splunk New Relic Server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer Velox Insurance Atlanta GA March 2014 to October 2015 Responsibilities Designed the front end of the application using Python HTML CSS JSON and jQuery Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using collections in Python for manipulating and looping through different userdefined objects Work with team of developers on python applications for RISK management Used Pandas library for statistics Analysis Improved code reuse and performance by making effective use of various design patterns Worked in development of applications especially in Linux environment and familiar with all its commands Environment Python Django MySQL Linux HTML CSS JavaScript Jira Git CRUD Pyramid HTML5 CSS3 jQuery Web Services Soap Restful PyUnit Python Developer Navayuga Infotech Hyderabad Telangana June 2012 to February 2014 Responsibilities Maintained and improved the security level of data Responsible for security standard implementation and data protection Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Implemented code in Python to retrieve and manipulate data Developed multipage applications from beginning to end Collaborate in system and network security installation configuration and review Responsible for debugging and troubleshooting the web application Contributed to development of security policies and processes Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Did Content Management through front end live search and normal search features Profiled Python code for optimization and memory management Rewrite existing PythonDjango module to deliver certain format of data Environment Python Django MySQL Linux HTML XHTML SVN CSS AJAX Bugzilla JavaScript Apache Web Server Django GitHub Education Bachelors Skills Django 7 years Javascript 6 years Linux 7 years Mysql 5 years Python 7 years Jquery Android Additional Information Technical skills Languages Python C C SQL Java and PHP Web Development HTML5 CSS3 JavaScript Bootstrap AJAX XML JSON Frameworks Django Flask CherryPy Pyramid NodeJS Angular JS JSP Numpy Matplotlib Servlets Servers Apache Tomcat Apache HTTP JBOSS Databases PostgreSQL MySQL Cassandra Redis MongoDB SQL Server Big Data Technologies Hadoop MapReduce and Spark Methodologies Agile Scrum Waterfall Tools Git SVN Mercurial Memcached Jira SSIS Data Migrator Visual studio IDE Notepad Eclipse IDLE PyCharm Pyscripter OS Windows Linux Unix",
    "unique_id": "5e1bfa1b-3ac0-45c0-b277-9ce384ca90e7"
}