{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Fox Interactive Berkeley CA Around 5 years of experience as a WebApplication Developer and coding with analytical programming using Python Django C Experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience object oriented programming OOP concepts using Python Django and Linux Experienced in developing webbased applications using Python Django PHP C XML CSS 5 HTML DHTML JavaScript and Jquery Experienced in installing configuring modifying testing and deploying applications with Apache Experience in using Microsoft Visual SourceSafe SVN for Version Controlling Proficient in Front end development experience using HTML XML CSS 5 JQuery JSON and Javascript CSS 5 Bootstrap Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on working with Python latest versions 343 and 2710SVN Git JIRA Bugzilla Axosoft Amazon EC2S3 Good experience in Python Django Zope Pyramid Framework Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Expertize in designing developing middleware components for software in CC using STL multithreading data structures and design patterns Well versed in writing unit test cases and selenium test cases Understanding of Python best Practices PEP8 Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Extensively used UNIX shell Scripts for automating batch programs Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL database Expertise in client scripting language and server side scripting languages like JavaScript JQuery JSON DOJO bootstrap Nodejs Angularjs backbonejs Requirejs Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Worked on Celery Task queue and service broker using RabbitMQ Experience with Jsp Servlets Web Services SOAP REST and Tomcat Work Experience Python Developer Fox Interactive Los Angeles CA January 2014 to Present Project Development and Enhancement of Travelzoo the premier travel reservation site Travelers can find their dream destinations and post their requirements and inquiries Travel agents can post their promotions and can respond to the inquiries and interests of travelers Features include memberships destination search payment system for travel agents membership renewal newsletters promotion campaigns shopping cart Lead Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used Python to extract weekly hotel availability information from XML files Used WebServices to get travel destination data and rates Participated in requirement gathering and worked closely with the architect in designing and modeling Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Performed Design and Code reviews Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Used python modules such as requests urllib urllib2 for web crawling Python Developer Polaris Solutions New York NY May 2011 to December 2013 Project Regulatory Reporting System Worked in Derivatives and FX Back Office Technology for Regulatory Reporting of Foreign Exchange Interest Rates Credits and Equities OTC financial product transactions to national regulatory authorities such as US CFTC through DTCC Depository Trust and Clearing Corporation Responsibilities Worked extensively on the Python based proprietary framework Quartz Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Implemented concept of Dependency Acyclic Graph in existing Deal Model within Python classes for creating dependency over various deals objects across the Banks systems Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Jefferies Group Jersey City NJ October 2010 to April 2011 Project Developed objectoriented programming to enhance company product management Responsibilities Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Used python scripts to update content in the database and manipulate files Created Reports using JASPER Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Deployment and testing of the applications Used HTML CSS 5 JQuery JSON and Javascript for front end applications Managed our servers in development testing certification and production Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked wResponsible for development and enhancements of all the modules of raildocs and have them running ith the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Implemented locking mechanisms using multi threading functionality Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Python Developer Capital One Bank Richmond VA May 2010 to September 2010 Project Developed a web based application using python to automate the ATM cash management process Responsibilities Worked alone on the project from gather requirement developing the entire application with help from other analyst Wrote python routines to log into the websites and fetch data for selected options Worked on writing and as well as read data from csv and excel file formats Worked on a resulting reports of the application and Tableau reports Performed QA testing on the application Held meetings with client and worked all alone for the entire project with limited help from the client Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Resolved several hidden bugs caused by complicated multithreading issues such as race conditions caused by asynchronous events Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Built application logic using Python 27 Used the Django Framework to develop the application Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Additional Information Skills Python Libraries Pandas Numpy UnitTest JSON CSV XLS Python Framework Django Pandas Pyramid Flask Ansible Bottle Salt Source version Control GITHUB SVN Emacs Database Sqlite3 MongoDB SQL Cassandra Oracle 8i Operating System Unix Microsoft Windows 7 XP Web Technologies AngularJS JavaScript AJAX HTML CSS 5 and XML Software Development Lifecycle Agile Methodology Scrum Framework",
    "entities": [
        "Jsp Servlets Web Services",
        "Product Owners Python Developer Jefferies Group",
        "UNIX",
        "Python Developer Polaris Solutions New York",
        "Agile Software Methodology",
        "CFTC",
        "LAMP Linux",
        "Project Developed",
        "Los Angeles",
        "the Django Framework",
        "MYSQL Additional Information Skills Python Libraries Pandas Numpy UnitTest JSON CSV XLS Python",
        "XML",
        "JavaScript Implemented",
        "DHTML",
        "Control GITHUB SVN",
        "DTCC Depository Trust",
        "csv",
        "CC",
        "STL",
        "Batch Job Scheduling Deployment",
        "WebServices",
        "Microsoft Visual",
        "Quartz Performed",
        "Windows",
        "Test Driven DevelopmentTDD",
        "Created Reports",
        "FX Back Office Technology for Regulatory Reporting of Foreign Exchange Interest Rates Credits",
        "Derivatives",
        "Grid",
        "Linux",
        "Python Developer Capital One Bank",
        "Requirejs Excellent",
        "the Software Development Life Cycle",
        "Built",
        "Project Regulatory Reporting System Worked",
        "RDS",
        "JASPER Created",
        "Dependency Acyclic Graph",
        "US",
        "Task Schedulers",
        "CF Objects Wrote",
        "Created",
        "Coding",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Developed ColdFusion Components",
        "Postgres",
        "Python Object Oriented Design",
        "Responsibilities Used HTMLCSS",
        "Apache Experience",
        "Converted Visual",
        "Cryptography EncryptionHashing Foundation Utilities",
        "SQL",
        "lPythonspan",
        "Python Django C Experience",
        "WebApplication Developer",
        "ATM",
        "Python Django PHP C XML",
        "Pandas",
        "Present Project Development and Enhancement",
        "Datatables",
        "Agile Software Development",
        "unittest2",
        "Scripts",
        "Version Controlling Proficient",
        "Front",
        "UI",
        "Travelers",
        "Microsoft",
        "SVN",
        "SQL Queries Stored",
        "FPML Financial Products Markup Language",
        "HTML XML CSS",
        "Tomcat Work Experience Python Developer Fox Interactive",
        "PHP LAMP Project Resolved",
        "MapReduce",
        "PHP",
        "Tableau"
    ],
    "experience": "Experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience object oriented programming OOP concepts using Python Django and Linux Experienced in developing webbased applications using Python Django PHP C XML CSS 5 HTML DHTML JavaScript and Jquery Experienced in installing configuring modifying testing and deploying applications with Apache Experience in using Microsoft Visual SourceSafe SVN for Version Controlling Proficient in Front end development experience using HTML XML CSS 5 JQuery JSON and Javascript CSS 5 Bootstrap Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on working with Python latest versions 343 and 2710SVN Git JIRA Bugzilla Axosoft Amazon EC2S3 Good experience in Python Django Zope Pyramid Framework Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Expertize in designing developing middleware components for software in CC using STL multithreading data structures and design patterns Well versed in writing unit test cases and selenium test cases Understanding of Python best Practices PEP8 Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Extensively used UNIX shell Scripts for automating batch programs Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL database Expertise in client scripting language and server side scripting languages like JavaScript JQuery JSON DOJO bootstrap Nodejs Angularjs backbonejs Requirejs Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Worked on Celery Task queue and service broker using RabbitMQ Experience with Jsp Servlets Web Services SOAP REST and Tomcat Work Experience Python Developer Fox Interactive Los Angeles CA January 2014 to Present Project Development and Enhancement of Travelzoo the premier travel reservation site Travelers can find their dream destinations and post their requirements and inquiries Travel agents can post their promotions and can respond to the inquiries and interests of travelers Features include memberships destination search payment system for travel agents membership renewal newsletters promotion campaigns shopping cart Lead Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used Python to extract weekly hotel availability information from XML files Used WebServices to get travel destination data and rates Participated in requirement gathering and worked closely with the architect in designing and modeling Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Performed Design and Code reviews Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Used python modules such as requests urllib urllib2 for web crawling Python Developer Polaris Solutions New York NY May 2011 to December 2013 Project Regulatory Reporting System Worked in Derivatives and FX Back Office Technology for Regulatory Reporting of Foreign Exchange Interest Rates Credits and Equities OTC financial product transactions to national regulatory authorities such as US CFTC through DTCC Depository Trust and Clearing Corporation Responsibilities Worked extensively on the Python based proprietary framework Quartz Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Implemented concept of Dependency Acyclic Graph in existing Deal Model within Python classes for creating dependency over various deals objects across the Banks systems Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Jefferies Group Jersey City NJ October 2010 to April 2011 Project Developed objectoriented programming to enhance company product management Responsibilities Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Used python scripts to update content in the database and manipulate files Created Reports using JASPER Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Deployment and testing of the applications Used HTML CSS 5 JQuery JSON and Javascript for front end applications Managed our servers in development testing certification and production Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked wResponsible for development and enhancements of all the modules of raildocs and have them running ith the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Implemented locking mechanisms using multi threading functionality Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Python Developer Capital One Bank Richmond VA May 2010 to September 2010 Project Developed a web based application using python to automate the ATM cash management process Responsibilities Worked alone on the project from gather requirement developing the entire application with help from other analyst Wrote python routines to log into the websites and fetch data for selected options Worked on writing and as well as read data from csv and excel file formats Worked on a resulting reports of the application and Tableau reports Performed QA testing on the application Held meetings with client and worked all alone for the entire project with limited help from the client Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Resolved several hidden bugs caused by complicated multithreading issues such as race conditions caused by asynchronous events Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Built application logic using Python 27 Used the Django Framework to develop the application Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Additional Information Skills Python Libraries Pandas Numpy UnitTest JSON CSV XLS Python Framework Django Pandas Pyramid Flask Ansible Bottle Salt Source version Control GITHUB SVN Emacs Database Sqlite3 MongoDB SQL Cassandra Oracle 8i Operating System Unix Microsoft Windows 7 XP Web Technologies AngularJS JavaScript AJAX HTML CSS 5 and XML Software Development Lifecycle Agile Methodology Scrum Framework",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Fox",
        "Interactive",
        "Berkeley",
        "CA",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "Python",
        "Django",
        "C",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "networkx",
        "urllib2",
        "MySQLdb",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "emacs",
        "Experience",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Django",
        "Linux",
        "applications",
        "Python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "Jquery",
        "testing",
        "applications",
        "Apache",
        "Experience",
        "Microsoft",
        "Visual",
        "SourceSafe",
        "SVN",
        "Version",
        "Controlling",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "HTML",
        "XML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "CSS",
        "Bootstrap",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Hands",
        "Python",
        "versions",
        "Git",
        "JIRA",
        "Bugzilla",
        "Axosoft",
        "Amazon",
        "EC2S3",
        "experience",
        "Python",
        "Django",
        "Zope",
        "Pyramid",
        "Framework",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "noSQL",
        "Cassandra",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Experience",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Angular",
        "JS",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Knowledge",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Agile",
        "Waterfall",
        "Methodologies",
        "Expertize",
        "middleware",
        "components",
        "software",
        "CC",
        "STL",
        "data",
        "structures",
        "design",
        "patterns",
        "unit",
        "test",
        "cases",
        "selenium",
        "test",
        "cases",
        "Understanding",
        "Python",
        "Practices",
        "PEP8",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "UNIX",
        "shell",
        "Scripts",
        "batch",
        "programs",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "database",
        "Expertise",
        "client",
        "scripting",
        "language",
        "server",
        "side",
        "scripting",
        "languages",
        "JavaScript",
        "JQuery",
        "DOJO",
        "bootstrap",
        "Nodejs",
        "Angularjs",
        "backbonejs",
        "Requirejs",
        "Excellent",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "RedHat",
        "Linux",
        "Fedora",
        "Worked",
        "Celery",
        "Task",
        "queue",
        "service",
        "broker",
        "RabbitMQ",
        "Experience",
        "Jsp",
        "Servlets",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Tomcat",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Fox",
        "Interactive",
        "Los",
        "Angeles",
        "CA",
        "January",
        "Present",
        "Project",
        "Development",
        "Enhancement",
        "Travelzoo",
        "premier",
        "travel",
        "reservation",
        "site",
        "Travelers",
        "dream",
        "destinations",
        "requirements",
        "inquiries",
        "Travel",
        "agents",
        "promotions",
        "inquiries",
        "interests",
        "travelers",
        "Features",
        "memberships",
        "destination",
        "search",
        "payment",
        "system",
        "travel",
        "agents",
        "membership",
        "renewal",
        "newsletters",
        "promotion",
        "campaigns",
        "cart",
        "Lead",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PHP",
        "environment",
        "GUI",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "jQuery",
        "Core",
        "Java",
        "C",
        "STL",
        "data",
        "structures",
        "UNIX",
        "application",
        "logic",
        "Python",
        "Apache",
        "Couchdb",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Developed",
        "ColdFusion",
        "Components",
        "custom",
        "tags",
        "CF",
        "Objects",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "Django",
        "Framework",
        "application",
        "Django",
        "APIs",
        "database",
        "access",
        "UIS",
        "system",
        "design",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "approach",
        "modulespackagesutilities",
        "eg",
        "Cryptography",
        "EncryptionHashing",
        "Foundation",
        "Utilities",
        "Persona",
        "management",
        "errorexception",
        "management",
        "Python",
        "hotel",
        "availability",
        "information",
        "XML",
        "files",
        "WebServices",
        "travel",
        "destination",
        "data",
        "rates",
        "requirement",
        "gathering",
        "architect",
        "designing",
        "Issues",
        "Realtime",
        "data",
        "RabbitMQ",
        "Postgres",
        "Cassandra",
        "Performed",
        "Design",
        "Code",
        "reviews",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Python",
        "Developer",
        "Polaris",
        "Solutions",
        "New",
        "York",
        "NY",
        "May",
        "December",
        "Project",
        "Regulatory",
        "Reporting",
        "System",
        "Derivatives",
        "FX",
        "Back",
        "Office",
        "Technology",
        "Regulatory",
        "Reporting",
        "Foreign",
        "Exchange",
        "Interest",
        "Rates",
        "Credits",
        "Equities",
        "OTC",
        "product",
        "transactions",
        "authorities",
        "US",
        "CFTC",
        "DTCC",
        "Depository",
        "Trust",
        "Clearing",
        "Corporation",
        "Responsibilities",
        "Python",
        "framework",
        "Quartz",
        "delivery",
        "code",
        "principles",
        "Test",
        "DevelopmentTDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "scale",
        "data",
        "processing",
        "trade",
        "position",
        "level",
        "information",
        "custom",
        "MapReduce",
        "engine",
        "Task",
        "Schedulers",
        "scheduling",
        "job",
        "priority",
        "data",
        "mapreduce",
        "functions",
        "Grid",
        "time",
        "scripts",
        "sets",
        "data",
        "filtering",
        "data",
        "reports",
        "scale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "Python",
        "modules",
        "eg",
        "csv",
        "robotparser",
        "itertools",
        "pickle",
        "jinja2",
        "lxml",
        "development",
        "modules",
        "XML",
        "trade",
        "data",
        "trade",
        "objects",
        "trade",
        "data",
        "outbound",
        "FPML",
        "Financial",
        "Products",
        "Markup",
        "Language",
        "DTCC",
        "repositories",
        "concept",
        "Dependency",
        "Acyclic",
        "Graph",
        "Deal",
        "Model",
        "Python",
        "classes",
        "dependency",
        "deals",
        "Banks",
        "systems",
        "custom",
        "query",
        "script",
        "store",
        "index",
        "sets",
        "Object",
        "data",
        "MongoDb",
        "Python",
        "unit",
        "testing",
        "modules",
        "unit",
        "test",
        "custom",
        "frameworks",
        "Agile",
        "Software",
        "Development",
        "methodologies",
        "methodologies",
        "scrum",
        "standups",
        "Kanban",
        "mode",
        "requirements",
        "Product",
        "Owners",
        "Python",
        "Developer",
        "Jefferies",
        "Group",
        "Jersey",
        "City",
        "NJ",
        "October",
        "April",
        "Project",
        "programming",
        "company",
        "product",
        "management",
        "Responsibilities",
        "HTMLCSS",
        "Javascript",
        "UI",
        "development",
        "Application",
        "Python",
        "MSQL",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Created",
        "Reports",
        "JASPER",
        "data",
        "access",
        "SQL",
        "procedures",
        "Multithreading",
        "Concurrency",
        "Batch",
        "Job",
        "Scheduling",
        "Deployment",
        "testing",
        "applications",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "servers",
        "development",
        "testing",
        "certification",
        "production",
        "Linux",
        "profiler",
        "Valgrind",
        "optimization",
        "code",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Worked",
        "wResponsible",
        "development",
        "enhancements",
        "modules",
        "raildocs",
        "ith",
        "design",
        "team",
        "project",
        "structure",
        "presentation",
        "layer",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "mechanisms",
        "threading",
        "functionality",
        "Python",
        "Perl",
        "CGI",
        "JQuery",
        "JavaScript",
        "JSON",
        "end",
        "Windows",
        "Linux",
        "server",
        "data",
        "exchange",
        "website",
        "XML",
        "JAVA",
        "Web",
        "Services",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Developer",
        "Capital",
        "One",
        "Bank",
        "Richmond",
        "VA",
        "May",
        "September",
        "Project",
        "web",
        "application",
        "python",
        "ATM",
        "cash",
        "management",
        "process",
        "Responsibilities",
        "project",
        "gather",
        "requirement",
        "application",
        "help",
        "analyst",
        "Wrote",
        "python",
        "routines",
        "websites",
        "data",
        "options",
        "writing",
        "data",
        "csv",
        "file",
        "formats",
        "reports",
        "application",
        "Tableau",
        "Performed",
        "QA",
        "testing",
        "application",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "Install",
        "Configure",
        "Linux",
        "Apache",
        "Oracle",
        "8I",
        "PHP",
        "LAMP",
        "Project",
        "bugs",
        "issues",
        "race",
        "conditions",
        "events",
        "GUI",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "jQuery",
        "application",
        "logic",
        "Python",
        "Django",
        "Framework",
        "application",
        "Django",
        "APIs",
        "database",
        "access",
        "Python",
        "hotel",
        "availability",
        "information",
        "XML",
        "files",
        "requirement",
        "gathering",
        "architect",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "Additional",
        "Information",
        "Skills",
        "Python",
        "Pandas",
        "Numpy",
        "UnitTest",
        "CSV",
        "XLS",
        "Python",
        "Framework",
        "Django",
        "Pandas",
        "Pyramid",
        "Flask",
        "Ansible",
        "Bottle",
        "Salt",
        "Source",
        "version",
        "Control",
        "GITHUB",
        "SVN",
        "Emacs",
        "Database",
        "Sqlite3",
        "MongoDB",
        "SQL",
        "Cassandra",
        "Oracle",
        "Operating",
        "System",
        "Unix",
        "Microsoft",
        "Windows",
        "XP",
        "Web",
        "Technologies",
        "JavaScript",
        "AJAX",
        "HTML",
        "CSS",
        "XML",
        "Software",
        "Development",
        "Lifecycle",
        "Agile",
        "Methodology",
        "Scrum",
        "Framework"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:43:12.056886",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Fox Interactive Berkeley CA Around 5 years of experience as a WebApplication Developer and coding with analytical programming using Python Django C Experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience object oriented programming OOP concepts using Python Django and Linux Experienced in developing webbased applications using Python Django PHP C XML CSS 5 HTML DHTML JavaScript and Jquery Experienced in installing configuring modifying testing and deploying applications with Apache Experience in using Microsoft Visual SourceSafe SVN for Version Controlling Proficient in Front end development experience using HTML XML CSS 5 JQuery JSON and Javascript CSS 5 Bootstrap Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on working with Python latest versions 343 and 2710SVN Git JIRA Bugzilla Axosoft Amazon EC2S3 Good experience in Python Django Zope Pyramid Framework Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Expertize in designing developing middleware components for software in CC using STL multithreading data structures and design patterns Well versed in writing unit test cases and selenium test cases Understanding of Python best Practices PEP8 Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Extensively used UNIX shell Scripts for automating batch programs Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL database Expertise in client scripting language and server side scripting languages like JavaScript JQuery JSON DOJO bootstrap Nodejs Angularjs backbonejs Requirejs Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Worked on Celery Task queue and service broker using RabbitMQ Experience with Jsp Servlets Web Services SOAP REST and Tomcat Work Experience Python Developer Fox Interactive Los Angeles CA January 2014 to Present Project Development and Enhancement of Travelzoo the premier travel reservation site Travelers can find their dream destinations and post their requirements and inquiries Travel agents can post their promotions and can respond to the inquiries and interests of travelers Features include memberships destination search payment system for travel agents membership renewal newsletters promotion campaigns shopping cart Lead Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used Python to extract weekly hotel availability information from XML files Used WebServices to get travel destination data and rates Participated in requirement gathering and worked closely with the architect in designing and modeling Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Performed Design and Code reviews Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Used python modules such as requests urllib urllib2 for web crawling Python Developer Polaris Solutions New York NY May 2011 to December 2013 Project Regulatory Reporting System Worked in Derivatives and FX Back Office Technology for Regulatory Reporting of Foreign Exchange Interest Rates Credits and Equities OTC financial product transactions to national regulatory authorities such as US CFTC through DTCC Depository Trust and Clearing Corporation Responsibilities Worked extensively on the Python based proprietary framework Quartz Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Implemented concept of Dependency Acyclic Graph in existing Deal Model within Python classes for creating dependency over various deals objects across the Banks systems Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Jefferies Group Jersey City NJ October 2010 to April 2011 Project Developed objectoriented programming to enhance company product management Responsibilities Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Used python scripts to update content in the database and manipulate files Created Reports using JASPER Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Deployment and testing of the applications Used HTML CSS 5 JQuery JSON and Javascript for front end applications Managed our servers in development testing certification and production Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked wResponsible for development and enhancements of all the modules of raildocs and have them running ith the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Implemented locking mechanisms using multi threading functionality Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Python Developer Capital One Bank Richmond VA May 2010 to September 2010 Project Developed a web based application using python to automate the ATM cash management process Responsibilities Worked alone on the project from gather requirement developing the entire application with help from other analyst Wrote python routines to log into the websites and fetch data for selected options Worked on writing and as well as read data from csv and excel file formats Worked on a resulting reports of the application and Tableau reports Performed QA testing on the application Held meetings with client and worked all alone for the entire project with limited help from the client Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Resolved several hidden bugs caused by complicated multithreading issues such as race conditions caused by asynchronous events Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Built application logic using Python 27 Used the Django Framework to develop the application Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Additional Information Skills Python Libraries Pandas Numpy UnitTest JSON CSV XLS Python Framework Django Pandas Pyramid Flask Ansible Bottle Salt Source version Control GITHUB SVN Emacs Database Sqlite3 MongoDB SQL Cassandra Oracle 8i Operating System Unix Microsoft Windows 7 XP Web Technologies AngularJS JavaScript AJAX HTML CSS 5 and XML Software Development Lifecycle Agile Methodology Scrum Framework",
    "unique_id": "40f71d60-ef44-462d-ac2b-1f15ec32922c"
}