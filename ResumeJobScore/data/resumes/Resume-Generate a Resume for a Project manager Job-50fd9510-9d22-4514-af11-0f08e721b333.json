{
    "clean_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer PNC Bank Edison NJ Over 8 years of experience in ObjectOriented Analysis Design Development and testing of ClientServer Web based enterprise business applications Expert in various Agile methodologies like SCRUM Test Driven DevelopmentTTD Incremental and Iteration methodologyAgile Development Testing using Software Development Life CycleSDLC Experience in Java8 features like Lambda expressions Stream API predicate functional interface etc Experience in implementing Java EE design patterns such as MVC Singleton Factory Session Facade DAO DTO and Business Delegate in the development of multitier distributed enterprise applications Experience in developing multitier distributed web applications usingJava JEEServlet JSPJBDCEJB32JMSStruts Hibernate324x Spring 3x4xSOAP and REST based Web services Axis20 JAX WS 20 JAX RS Rule Engines Drools41 ILOG JBPM tools Experienced in UI frame works such as JQuery Ajax Google Web Toolkit GWT JavaScript Nodejs Angularjs Angular 2 Angular 4 ReactJs VueJS BackboneJS Tag Libraries Custom Tags Experience in developing Webcentric applications using XMLAngularjsXSDJSON JavaScript Ajax jQuery CSS3 HTML5 Bootstrap Extensive experience in working over Web Services with WSDL SOAP and RESTFUL web services WebLogic and Tomcat Administrator experience with knowledge in clustering JMS Connection Pools J2EE Deployments Thread Dump Analysis Experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO SpringDashboard Spring Boot Spring Microservices Spring REST Spring Eureka Spring Ribbon Spring Netflix Spring Zuul Proxy Deployed the Application into Docker container and made easily accessible at runtime using Pivotal Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Experience in Spring Security Framework for User Access Management and involved LDAP configuration for authentication authorization Implementing Spring Cloud REST call using Netflix Feign Client Experience in MicroservicesSpring Boot Pivotal Cloud Foundry and Engagement using Spring Boot Experienced in Middleware persistence frameworks like HibernateJPA Entities for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria Projections Expertise in development applications using Type safe technologies like Scala Akka model Play framework Proficient in using Amazon Web Services AWSservices like EC2 Elastic Beanstalk CloudWatch CloudFront Cloud Formation IAM S3 RDS ElastiCache SNS SQS AMI Experience in Integration tools Oracle SOA Suite webmethods and ApacheCAMEL Experience in database modeling design and development of PLSQL stored procedures packages in relational databases Oracle 9i 10g 11g SQL Server 20052008 DB2 PostgreSQL and MySQL Strong experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDB Cassandra and CouchDB Experience in using IDE tools NetBeans Eclipse IntelliJ configuring and deploying the applications on Tomcat GlassFish WebSphere WebLogic and JBoss Servers Hands on experience with build like Ant Maven Gradle and logging tools like Log4J and Splunk Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes Experience in testing with JUnitFramework using Mockito and Easy Mock and other testing tools like Firebug Fire PosterProtractor Selenium Jasmine SoapUI Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Sr Java Full Stack Developer PNC Bank Columbus OH US October 2016 to Present Description PNC offers a wide range of services such as retail banking and residential mortgage banking for customers from individuals and small business to corporations and government entities Cash Flow Insight CFI is an innovative suite of online tools for seeing and managing businesss cash flow Developed single page applications Designed presentation layers for various required services for customers Responsibility Involved in various SDLC phases like Requirement gathering Design Analysis and Code development with both iterative Agile Waterfall Implemented AngularJS Controllers to maintain each View data and Service calls using Angular Factory Developed A dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using NodeJS Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a SPA All the functionality is implemented using SpringIO Spring Boot Thymeleaf and Hibernate ORM Implemented Java EE components using SpringIOC Spring Transactions and Spring Security modules Tested REST services using google chromes POSTMAN plugin Consumed messages from JMS driven beans and Active MQ Integrated Active MQ services with Beans Hibernate DAO classes were developed to retrieve and save data using Spring framework manager classes Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Experience in Creating Dropping Indexes Tables Stored Procs and Views on Oracle DB Cloud environment for Microservices was provided using Spring Netflix Eureka server Hystrix Ribbon Expertise with employment of Spring Kafka and Zookeeper apart from JMS as messaging service Deployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using SpringKafka and Zookeeper Worked with modules like mongoose for database persistence using NodeJS to interact with MongoDB Developed client applications using JAXR and JAXM to connect to the UDDI registry Apache Mesos and Kubernetes were used as the best ecosystem to deploy and manage Microservices Designed and deployed a multitude application utilizing almost all the AWS Including EC2 R53 S3 RDS DynamoDB SQS IAM Cloud Formation and lambda focusing on highavailability and fault tolerance Developed applications using RuleEngines Drools 4x and ILOG to validate the business User Roles Analyze and resolve conflicts related to merging of source code for GIT Log4J is used for logging purposes and debug levels are defined for controlling what we log Writing Unit test cases using JUnit testing framework and performed unit and system testing Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Expertise on Selenium Data Driven framework and integrating it with Maven Build Management Tool TestNG Unit Testing tool and Jenkins Continuous Integration Tool Created and configured management reports and dashboards using Splunk Environment AWS Java7 J2EE Cloud Foundry Java Beans NodeJS Spring Spring Kafka Zookeeper AWS CICD JQuery EJB Hibernate 20 Eclipse React Devops Angular Spark Jenkins Oracle 11g MongoDB PLSQL Selenium Cucumber Log4j XML HTML5 CSS3 REST JMS  Web Services Web Logic server Jasmine Maven GIT Sr JavaJ2EE and Full Stack Developer Dish Denver CO US August 2015 to October 2016 Description Dish Network stylized as dish is an American directbroadcast satellite service provider The company provides satellite television satellite internet access audio programming and interactive television services to commercial and residential customers in the United States Responsibility Involved in Design and Development of project modules gather requirements analyze and implemented business logic using Agile Scrum Software Development methodology Designed class sequence activity flow diagrams using UML Visio and Sparx Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed several reusable directives using Angular 2 Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Developed Interactive web pages with Angular 2 HTML5 CSS3 Javascript JQuery and Bootstrap Usage of new features of Java8 like lambdaexpressions for communicating between business layer and database stream API for Bulk Data Operations on Collections using both streams and parallel streams Used J2EE design patterns like Model View ControllerMVC Singleton Factory Data Access Object DAO Data Transfer Object DTO and Service Locator Involved in writing Thread safe blocks for Multithreading access and improve performance Usedcore Spring concepts like DIIOC AOP Batch implementation Implemented fail safe and circuit breaker patterns in Spring BootMicroservice applications using Hystrix configured SwaggerUI to registered Microservice with Eureka server and monitored service health check from Spring Boot admin console and Spring Ribbon for load balancing Developed UI applications using Angular2 integrating with REST APIs built on Spring ZuulMicroservices Working on Microservice Registration with Spring Cloud using Netflix Eureka Implementing Spring Cloud REST call using Netflix Feign Client Implementing or exposing the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Implemented preauthentication and data base security using Spring Security and securing application access and Spring Batch for scheduling and maintenance of batch jobs Developed Python Object Oriented Design code for logging and debugging code optimization Worked on Camelbased integration middleware solution for Provisioning Services by design and the Implementation of business logic and data processing routes using Apache Camel Created tables and worked on SQL and PLSQL to write Stored Procedures functions and packages for complex inserts and updates in the DB used TOAD to interact with Oracle database Used Oracle 11g12c for the backend data and performed complex queries using joins for CRUD operations Experience in Normalization performance tuning uploading files to database using CLOB and BLOB Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Implemented Spring ORM with Hibernate taking advantage of features like Annotation metadata AutoWiring and Collectionsto implement DAO layer with Hibernate Session Factory HQL and SQL Extensively used Hibernate concepts such asLazy loading Dirty checking Locking and Transactions Composed and executed MongoDB scripts to insert and update NoSQL database and reporting Configuring Cassandra clusters and key spaces on RHELOpenstack Installed and setup Apache Spark Used the Java API to load the data into Cassandra Clusters Installed and configured plugins for Apache HTTP server and Sun One Web server to proxy the request for WebLogic server Implemented standard backup procedures for Weblogic server Deployed Docker contained Spring Boot Microservices in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Experience with building Docker Images and running them on Docker container Used Jenkins as an AWS code deploys plugin to deploy to AWS Experience with DevOps methodologies implementing CICD Pipelines using tool sets like GIT Jenkins Chef and AWS Generating Scala and Java classes from the APIs so that they can be incorporated in the application Used Sparkstreaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Responsible for implementation of java integration components for JBPM and DROOLs Configured Protractor test classes and Selenium grid end to end testing on the front end Involved in code reviews and unit testing using JUnit framework and Log4j to provide logs of exceptions Worked with several testing frameworks such as JUnit EasyMock Mockito and PowerMock Created Test automation framework using Cucumber and Selenium web driver Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug tracking project management andMaven as build tool Environment Java8 J2EE CICD Spring Webservices Microservices Swagger Spring Zuul Netflix Eureka Restful Feign Client Apache Camel Kafka WebLogic JUnit JBPM Drools Spring Cloud AWS EC2 S3 Scala MongoDB Cassandra HTML5 CSS3 Python JavaScriptES6 Bootstrap jQuery Angular 2 Maven AJAX JQuery XML XSLT Java Beans UML Design Patterns Log4j Agile Methodology Devops Docker Spark Kubernetes Sr JavaJ2EE Developer ACI WorldWide Clearwater FL US June 2013 to August 2015 Description Enterprise Banker the industryleading webbased cash management system With Enterprise Banker customers use a web browser to access cash management Functions Financial institution administrators use Enterprise Bankers webbased administrative interface to set system defaults perform customer setup and monitor customer activities with a web browser from any location that has access to the financial institutions network When fully utilized Enterprise Banker includes 18 products over 90 modules over 250 Enterprise Banker Suite is designed to allow financial institutions to purchase and implement specific limited increments of functionality Responsibility Experienced with Software Development Life CycleSDLC with object oriented of business process and worked on developing Service oriented architecture applications in agile development environment Developed and implemented Business Requirements using Spring MVC framework Implemented crosscutting concerns such as logging authentication and system performance using Spring AOP Developed reusable and interoperableservices based on SOAP WSDL JAXWS JAXRPC Web services Well versed with core Java concepts like Collections Swing Serialization and ServletsJSP Implemented web services in Service Oriented Architecture SOA to retrieve data from client side NodeJS and parsed the data to client and handled the security and Authorization using Spring Security and OAuth authentication protocol respectively Used Jackson Custom Mappers for Custom manipulation for date currency conversations on JSON Data Used Jackson parser for Marshaling and UnMarshaling Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Hibernate Detached Criteria HQL and written some SQL queries for data retrieving Handson writing Stored Procedures functions triggers DDL DML SQLqueries and PLSQL Worked on JPA as persistence layer involving EJB annotations to synchronize with database through XML JBoss Application server implementation support workload management and performance tuning including Web server setup configuration with JBoss App Server Developed UI usingAngularJS HTML5CSS3 jQuery BootstrapJavaScript Ajax Developed PLSQL store procedures to convert the data from Oracle to MongoDB Developed Test classes using JUnit and Easy Mock and test coverage using EMMA plugin Analyze and resolve conflicts related to merging of source code for GIT and Maven as build tool Environment Java J2EE Java Beans JMS NodeJS Spring JQuery EJB Hibernate IntelliJ Angular Oracle 11g MongoDB PLSQL Cucumber Log4j XML HTML5 CSS3 JavaScript Bootstrap SOAP Maven GIT JavaJ2EE Developer Penn National Insurance Harrisburg PA US April 2011 to June 2013 Description Penn National Insurance is a propertycasualty mutual insurance company headquartered in Harrisburg Pennsylvania Founded in 1919 by a farmers trade organization to help the farmers get more affordable workers compensation protection for their workers who operated steamdriven farming equipment Responsibility Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Extensively used MVC Factory Delegate and Singleton design patterns Enhanced the Web Application using Struts Created business logic and application in Struts Framework using JSP and Servlets Wrote Client side validation using Struts Validate framework and JavaScript Wrote unit test cases for different modules and resolved the test findings Used SOAP for Web Services by exchanging XML data between applications over HTTP Wrote JSPs Servlets and deployed them on WebLogic Application server Wrote queries in MySQL to interact with the database Used Subversion for version control and log4j for logging errors Helped production support team to solve trouble reports Wrote Ant Scripts to automate the build and deploy process Involved in Release Management and Deployment Process Environment Java J2EE Struts JSP Servlets JavaScript SOAP WebLogic Log4j AMT CVS PLSQL MySQL Jr JavaJ2EE Developer Change Health care Lombard IL US February 2010 to April 2011 Description This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well The client programs are used for issuing or retrieving data from the database depending on the query for finding health policy premium Responsibility Involved in the requirements gathering Design Development Unit testing and Bug fixing Developed application using Struts Spring and Hibernate Developed rich user interface using JavaScript JSTL CSS JQuery and JSPs Used custom tags to display logic specific data in JSPS and used SpringIOC for injecting the beans Used Hibernate for connecting to the database and mapping the entities by using hibernate annotations Used Oracle database as backend database and wrote SQL to update and create database tables Involved in making release builds for deploying the application for test environments Used Jbossas application server andused JUNITJMOCK for unit testing Environment Java J2EE Struts JSP Servlets JSLT CSS JQuery JavaScript Jboss ANT CVS SQL Hibernate Oracle Sr JavaJ2EE Developer Ascena Retail group Pataskala OH US February 2009 to February 2010 Description This project has been designed to provide efficient and secure online shopping facilities to the customers Items will be categorized on the basis of the item price and type of item etc This Application also offers various operations relating to their orders such as expediting canceling and splitting the order Status of their order is also displayed upon request Responsibility Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering analysis design development testing and production environments Worked on Agile Development Methodology using Scrum concepts Created struts form beans action classes JSPs following Struts framework standards Implemented Struts Framework and Hibernate in the new version of the Application Designed and developed the front end using HTML CSS and JavaScript Used Web services SOAP for transmission of large blocks of XML data over HTTP Used XML Web Services using SOAP protocol to transfer the amount to other application that is remote and global to different financial institutions used SoapUI for web service testing Implemented the database connectivity using JDBC with Oracle 9i database as backend Extensively used Core Java such as MultiThreading Exceptions and Collections Developed real time tracking of class schedules using NodeJS Socketio ExpressJS framework Developed the UNIX shell scripts to automate jobs Worked on Junit for creating test cases for all the Business Rules and the application code Hosted the application on WebSphere and used Maven as the build automation tool Environment Java 60 Struts Framework 20 Hibernate 30 EJB SOAP Web Services HTML CSS NodeJs ExpressJs WebSphere Application Server 70 JUnit UNIX JavaScript Servlets JSP JDBC JQuery XML XSLT Education Bachelors Skills J2EE 9 years JAVA 9 years jQuery 7 years DATABASE 9 years SQL 8 years Additional Information Technical Skills JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java JDK  C C SQL PLSQL Python Scala Golang ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 Jboss Tomcat 502860 Bug tracking Jenkins Cucumber IDEs Eclipse Spring STS IntelliJ WebStorm NetBeans Web technologies HTML5 CSS3 XHTML JavaScriptES6 TypeScript Ajax JQuery AngularJS Angular 2 Angular 4 ReactJS NodeJS Socketio ExpressJS JSON Swagger UI Bootstrap AWS Skills EC2 S3 RDS EBS IAM AMI ELB CLI SNS RDS VPN NAT GIT DNS Route53 DBA Dynamo DB Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI Microservices Methodologies Agile Scrum RUP TDD OOAD SDLC Waterfall model Modeling Tools UML Rational Rose Visio Message Brokers Kafka RabbitMQ  TIBCO IBMMQ Testing technologiestools JUnit JMeter Protractor Mockito Database Oracle 8i9i10g11G DB2 SQL Server 20052008 MySQL PostgreSQL MongoDB Cassandra Big Data Tools Hadoop Spark MapReduce HDFS HBase Zookeeper Hive Sqoop Cassandra Flume Couchbase MongoDB Neo4J Redis MLlib Version Control CVS SVN Git Stash Bitbucket Build Tools ANT Maven Gradle Spring Tools Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Micro services Spring REST Spring Eureka Consul Swagger UI Sleuth and Spring Zuul Feign Client Platforms Windows 5NT40 LINUX UNIX",
    "entities": [
        "Zookeeper Experience",
        "EJB SOAP Web Services HTML CSS NodeJs ExpressJs WebSphere Application",
        "Hosted",
        "Used Hibernate",
        "IDE",
        "WebStorm",
        "NodeJS Socketio ExpressJS",
        "UNIX",
        "JMS",
        "Oracle 9i 10",
        "Netflix Feign Client Implementing",
        "HTTP",
        "JTA",
        "AMI",
        "Struts Framework",
        "Usedcore Spring",
        "Authorization using Spring Security",
        "IBM",
        "Cassandra Clusters Installed",
        "JavaScript Wrote",
        "Ajax",
        "GIT Jenkins Chef",
        "XML",
        "SOAP",
        "Incremental and Iteration methodologyAgile Development Testing using Software Development Life",
        "OAuth",
        "Struts Created",
        "WebLogic",
        "XML JBoss Application",
        "JUnit",
        "the Business Rules",
        "DevOps",
        "MicroservicesSpring Boot Pivotal Cloud Foundry",
        "JBoss Servers Hands",
        "CLOB",
        "Spring Boot",
        "Writing Unit",
        "Hibernate Session Factory HQL",
        "Consumed",
        "WebSphere",
        "UML Visio",
        "AutoWiring",
        "Stored Procedures",
        "Developed",
        "LDAP",
        "Middleware",
        "API for Bulk Data Operations on Collections",
        "User Access Management",
        "Spring ZuulMicroservices Working on Microservice Registration",
        "Provisioning Services",
        "Servlets",
        "Stream API",
        "Spring MVC IOC",
        "MQ",
        "Bootstrap Usage",
        "Responsibility Involved",
        "Developed Python Object Oriented Design",
        "Apache Camel Created",
        "Additional Information Technical Skills JavaJ2EE Technologies Servlets JSP JSTL",
        "Oracle 9i",
        "the AWS Including EC2 R53 S3 RDS",
        "Data Access Object DAO",
        "the Application Designed",
        "Spring Security",
        "JSP",
        "Hibernate Developed",
        "Oracle Sr JavaJ2EE Developer",
        "Oracle DB Cloud",
        "MVC Singleton",
        "Netflix Feign Client",
        "Easy Mock",
        "Docker",
        "DOM",
        "EMMA",
        "Hibernate Query Language HQL HSQL Named Queries Criteria Projections Expertise",
        "Worked on Agile Development Methodology",
        "Views",
        "STS",
        "MVC",
        "JBoss App Server Developed UI",
        "SQL Server Used Hibernate Detached Criteria",
        "Amazon Web Services AWSservices",
        "EJB",
        "GIT",
        "HTML CSS",
        "Harrisburg Pennsylvania Founded",
        "Spring Security Framework",
        "US",
        "Tomcat Administrator",
        "Penn National Insurance",
        "Boot Spring Microservices",
        "Drools",
        "Created",
        "Spring Zuul Feign",
        "AWS",
        "Spring Ribbon",
        "Developed Interactive",
        "APP",
        "Maven Build Management Tool TestNG Unit Testing",
        "Oracle",
        "Singleton",
        "Redis MLlib Version",
        "ClientServer",
        "Design Development Unit",
        "the Data Repository Users",
        "Netflix",
        "Spring Boot Microservices",
        "Responsibility Experienced with Software Development Life",
        "RESTFUL",
        "Java8",
        "SQL",
        "the United States Responsibility Involved in Design and Development",
        "Kubernetes",
        "MQ Integrated Active",
        "Pataskala OH US",
        "Tomcat GlassFish WebSphere WebLogic",
        "Splunk Developed CICD",
        "Sun One",
        "Functions Financial",
        "RuleEngines",
        "RHELOpenstack Installed",
        "HTTP Wrote",
        "WebLogic Application",
        "Handson",
        "UDDI",
        "Annotation",
        "AWS Netflix Eureka Spring Hystrix",
        "MySQL Strong",
        "Business Customers",
        "SQS",
        "Splunk Environment AWS",
        "DB",
        "CRUD",
        "Firebug Fire PosterProtractor Selenium Jasmine",
        "Release Management and Deployment Process Environment",
        "Data Repository",
        "JavaScript Servlets",
        "Maven",
        "Hystrix",
        "Modeling Tools UML Rational",
        "Djangos",
        "Creating Dropping Indexes Tables Stored Procs",
        "Maven GIT JavaJ2EE Developer",
        "UI",
        "CICD Pipelines",
        "Collections Swing Serialization",
        "Jenkins Continuous Integration Tool Created",
        "Present Description PNC",
        "ObjectOriented Analysis Design Development",
        "AMI ELB CLI SNS RDS VPN NAT",
        "Beans Hibernate DAO",
        "Business Requirements",
        "CSS",
        "Weblogic",
        "REST",
        "Oracle Database Implemented",
        "Angular 2 HTML5",
        "NetBeans",
        "Developed UI",
        "MultiThreading Exceptions",
        "NoSQL",
        "MVC Factory Delegate",
        "Application",
        "Jbossas",
        "TOAD",
        "Software Development Life Cycle",
        "ApacheCAMEL Experience",
        "Microservice",
        "JBPM",
        "Servlets Wrote Client",
        "DNS"
    ],
    "experience": "Experience in Java8 features like Lambda expressions Stream API predicate functional interface etc Experience in implementing Java EE design patterns such as MVC Singleton Factory Session Facade DAO DTO and Business Delegate in the development of multitier distributed enterprise applications Experience in developing multitier distributed web applications usingJava JEEServlet JSPJBDCEJB32JMSStruts Hibernate324x Spring 3x4xSOAP and REST based Web services Axis20 JAX WS 20 JAX RS Rule Engines Drools41 ILOG JBPM tools Experienced in UI frame works such as JQuery Ajax Google Web Toolkit GWT JavaScript Nodejs Angularjs Angular 2 Angular 4 ReactJs VueJS BackboneJS Tag Libraries Custom Tags Experience in developing Webcentric applications using XMLAngularjsXSDJSON JavaScript Ajax jQuery CSS3 HTML5 Bootstrap Extensive experience in working over Web Services with WSDL SOAP and RESTFUL web services WebLogic and Tomcat Administrator experience with knowledge in clustering JMS Connection Pools J2EE Deployments Thread Dump Analysis Experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO SpringDashboard Spring Boot Spring Microservices Spring REST Spring Eureka Spring Ribbon Spring Netflix Spring Zuul Proxy Deployed the Application into Docker container and made easily accessible at runtime using Pivotal Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Experience in Spring Security Framework for User Access Management and involved LDAP configuration for authentication authorization Implementing Spring Cloud REST call using Netflix Feign Client Experience in MicroservicesSpring Boot Pivotal Cloud Foundry and Engagement using Spring Boot Experienced in Middleware persistence frameworks like HibernateJPA Entities for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria Projections Expertise in development applications using Type safe technologies like Scala Akka model Play framework Proficient in using Amazon Web Services AWSservices like EC2 Elastic Beanstalk CloudWatch CloudFront Cloud Formation IAM S3 RDS ElastiCache SNS SQS AMI Experience in Integration tools Oracle SOA Suite webmethods and ApacheCAMEL Experience in database modeling design and development of PLSQL stored procedures packages in relational databases Oracle 9i 10 g 11 g SQL Server 20052008 DB2 PostgreSQL and MySQL Strong experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDB Cassandra and CouchDB Experience in using IDE tools NetBeans Eclipse IntelliJ configuring and deploying the applications on Tomcat GlassFish WebSphere WebLogic and JBoss Servers Hands on experience with build like Ant Maven Gradle and logging tools like Log4J and Splunk Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes Experience in testing with JUnitFramework using Mockito and Easy Mock and other testing tools like Firebug Fire PosterProtractor Selenium Jasmine SoapUI Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Sr Java Full Stack Developer PNC Bank Columbus OH US October 2016 to Present Description PNC offers a wide range of services such as retail banking and residential mortgage banking for customers from individuals and small business to corporations and government entities Cash Flow Insight CFI is an innovative suite of online tools for seeing and managing businesss cash flow Developed single page applications Designed presentation layers for various required services for customers Responsibility Involved in various SDLC phases like Requirement gathering Design Analysis and Code development with both iterative Agile Waterfall Implemented AngularJS Controllers to maintain each View data and Service calls using Angular Factory Developed A dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using NodeJS Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a SPA All the functionality is implemented using SpringIO Spring Boot Thymeleaf and Hibernate ORM Implemented Java EE components using SpringIOC Spring Transactions and Spring Security modules Tested REST services using google chromes POSTMAN plugin Consumed messages from JMS driven beans and Active MQ Integrated Active MQ services with Beans Hibernate DAO classes were developed to retrieve and save data using Spring framework manager classes Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Experience in Creating Dropping Indexes Tables Stored Procs and Views on Oracle DB Cloud environment for Microservices was provided using Spring Netflix Eureka server Hystrix Ribbon Expertise with employment of Spring Kafka and Zookeeper apart from JMS as messaging service Deployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using SpringKafka and Zookeeper Worked with modules like mongoose for database persistence using NodeJS to interact with MongoDB Developed client applications using JAXR and JAXM to connect to the UDDI registry Apache Mesos and Kubernetes were used as the best ecosystem to deploy and manage Microservices Designed and deployed a multitude application utilizing almost all the AWS Including EC2 R53 S3 RDS DynamoDB SQS IAM Cloud Formation and lambda focusing on highavailability and fault tolerance Developed applications using RuleEngines Drools 4x and ILOG to validate the business User Roles Analyze and resolve conflicts related to merging of source code for GIT Log4J is used for logging purposes and debug levels are defined for controlling what we log Writing Unit test cases using JUnit testing framework and performed unit and system testing Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Expertise on Selenium Data Driven framework and integrating it with Maven Build Management Tool TestNG Unit Testing tool and Jenkins Continuous Integration Tool Created and configured management reports and dashboards using Splunk Environment AWS Java7 J2EE Cloud Foundry Java Beans NodeJS Spring Spring Kafka Zookeeper AWS CICD JQuery EJB Hibernate 20 Eclipse React Devops Angular Spark Jenkins Oracle 11 g MongoDB PLSQL Selenium Cucumber Log4j XML HTML5 CSS3 REST JMS   Web Services Web Logic server Jasmine Maven GIT Sr JavaJ2EE and Full Stack Developer Dish Denver CO US August 2015 to October 2016 Description Dish Network stylized as dish is an American directbroadcast satellite service provider The company provides satellite television satellite internet access audio programming and interactive television services to commercial and residential customers in the United States Responsibility Involved in Design and Development of project modules gather requirements analyze and implemented business logic using Agile Scrum Software Development methodology Designed class sequence activity flow diagrams using UML Visio and Sparx Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed several reusable directives using Angular 2 Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Developed Interactive web pages with Angular 2 HTML5 CSS3 Javascript JQuery and Bootstrap Usage of new features of Java8 like lambdaexpressions for communicating between business layer and database stream API for Bulk Data Operations on Collections using both streams and parallel streams Used J2EE design patterns like Model View ControllerMVC Singleton Factory Data Access Object DAO Data Transfer Object DTO and Service Locator Involved in writing Thread safe blocks for Multithreading access and improve performance Usedcore Spring concepts like DIIOC AOP Batch implementation Implemented fail safe and circuit breaker patterns in Spring BootMicroservice applications using Hystrix configured SwaggerUI to registered Microservice with Eureka server and monitored service health check from Spring Boot admin console and Spring Ribbon for load balancing Developed UI applications using Angular2 integrating with REST APIs built on Spring ZuulMicroservices Working on Microservice Registration with Spring Cloud using Netflix Eureka Implementing Spring Cloud REST call using Netflix Feign Client Implementing or exposing the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Implemented preauthentication and data base security using Spring Security and securing application access and Spring Batch for scheduling and maintenance of batch jobs Developed Python Object Oriented Design code for logging and debugging code optimization Worked on Camelbased integration middleware solution for Provisioning Services by design and the Implementation of business logic and data processing routes using Apache Camel Created tables and worked on SQL and PLSQL to write Stored Procedures functions and packages for complex inserts and updates in the DB used TOAD to interact with Oracle database Used Oracle 11g12c for the backend data and performed complex queries using joins for CRUD operations Experience in Normalization performance tuning uploading files to database using CLOB and BLOB Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Implemented Spring ORM with Hibernate taking advantage of features like Annotation metadata AutoWiring and Collectionsto implement DAO layer with Hibernate Session Factory HQL and SQL Extensively used Hibernate concepts such asLazy loading Dirty checking Locking and Transactions Composed and executed MongoDB scripts to insert and update NoSQL database and reporting Configuring Cassandra clusters and key spaces on RHELOpenstack Installed and setup Apache Spark Used the Java API to load the data into Cassandra Clusters Installed and configured plugins for Apache HTTP server and Sun One Web server to proxy the request for WebLogic server Implemented standard backup procedures for Weblogic server Deployed Docker contained Spring Boot Microservices in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Experience with building Docker Images and running them on Docker container Used Jenkins as an AWS code deploys plugin to deploy to AWS Experience with DevOps methodologies implementing CICD Pipelines using tool sets like GIT Jenkins Chef and AWS Generating Scala and Java classes from the APIs so that they can be incorporated in the application Used Sparkstreaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Responsible for implementation of java integration components for JBPM and DROOLs Configured Protractor test classes and Selenium grid end to end testing on the front end Involved in code reviews and unit testing using JUnit framework and Log4j to provide logs of exceptions Worked with several testing frameworks such as JUnit EasyMock Mockito and PowerMock Created Test automation framework using Cucumber and Selenium web driver Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug tracking project management andMaven as build tool Environment Java8 J2EE CICD Spring Webservices Microservices Swagger Spring Zuul Netflix Eureka Restful Feign Client Apache Camel Kafka WebLogic JUnit JBPM Drools Spring Cloud AWS EC2 S3 Scala MongoDB Cassandra HTML5 CSS3 Python JavaScriptES6 Bootstrap jQuery Angular 2 Maven AJAX JQuery XML XSLT Java Beans UML Design Patterns Log4j Agile Methodology Devops Docker Spark Kubernetes Sr JavaJ2EE Developer ACI WorldWide Clearwater FL US June 2013 to August 2015 Description Enterprise Banker the industryleading webbased cash management system With Enterprise Banker customers use a web browser to access cash management Functions Financial institution administrators use Enterprise Bankers webbased administrative interface to set system defaults perform customer setup and monitor customer activities with a web browser from any location that has access to the financial institutions network When fully utilized Enterprise Banker includes 18 products over 90 modules over 250 Enterprise Banker Suite is designed to allow financial institutions to purchase and implement specific limited increments of functionality Responsibility Experienced with Software Development Life CycleSDLC with object oriented of business process and worked on developing Service oriented architecture applications in agile development environment Developed and implemented Business Requirements using Spring MVC framework Implemented crosscutting concerns such as logging authentication and system performance using Spring AOP Developed reusable and interoperableservices based on SOAP WSDL JAXWS JAXRPC Web services Well versed with core Java concepts like Collections Swing Serialization and ServletsJSP Implemented web services in Service Oriented Architecture SOA to retrieve data from client side NodeJS and parsed the data to client and handled the security and Authorization using Spring Security and OAuth authentication protocol respectively Used Jackson Custom Mappers for Custom manipulation for date currency conversations on JSON Data Used Jackson parser for Marshaling and UnMarshaling Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Hibernate Detached Criteria HQL and written some SQL queries for data retrieving Handson writing Stored Procedures functions triggers DDL DML SQLqueries and PLSQL Worked on JPA as persistence layer involving EJB annotations to synchronize with database through XML JBoss Application server implementation support workload management and performance tuning including Web server setup configuration with JBoss App Server Developed UI usingAngularJS HTML5CSS3 jQuery BootstrapJavaScript Ajax Developed PLSQL store procedures to convert the data from Oracle to MongoDB Developed Test classes using JUnit and Easy Mock and test coverage using EMMA plugin Analyze and resolve conflicts related to merging of source code for GIT and Maven as build tool Environment Java J2EE Java Beans JMS NodeJS Spring JQuery EJB Hibernate IntelliJ Angular Oracle 11 g MongoDB PLSQL Cucumber Log4j XML HTML5 CSS3 JavaScript Bootstrap SOAP Maven GIT JavaJ2EE Developer Penn National Insurance Harrisburg PA US April 2011 to June 2013 Description Penn National Insurance is a propertycasualty mutual insurance company headquartered in Harrisburg Pennsylvania Founded in 1919 by a farmers trade organization to help the farmers get more affordable workers compensation protection for their workers who operated steamdriven farming equipment Responsibility Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Extensively used MVC Factory Delegate and Singleton design patterns Enhanced the Web Application using Struts Created business logic and application in Struts Framework using JSP and Servlets Wrote Client side validation using Struts Validate framework and JavaScript Wrote unit test cases for different modules and resolved the test findings Used SOAP for Web Services by exchanging XML data between applications over HTTP Wrote JSPs Servlets and deployed them on WebLogic Application server Wrote queries in MySQL to interact with the database Used Subversion for version control and log4j for logging errors Helped production support team to solve trouble reports Wrote Ant Scripts to automate the build and deploy process Involved in Release Management and Deployment Process Environment Java J2EE Struts JSP Servlets JavaScript SOAP WebLogic Log4j AMT CVS PLSQL MySQL Jr JavaJ2EE Developer Change Health care Lombard IL US February 2010 to April 2011 Description This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well The client programs are used for issuing or retrieving data from the database depending on the query for finding health policy premium Responsibility Involved in the requirements gathering Design Development Unit testing and Bug fixing Developed application using Struts Spring and Hibernate Developed rich user interface using JavaScript JSTL CSS JQuery and JSPs Used custom tags to display logic specific data in JSPS and used SpringIOC for injecting the beans Used Hibernate for connecting to the database and mapping the entities by using hibernate annotations Used Oracle database as backend database and wrote SQL to update and create database tables Involved in making release builds for deploying the application for test environments Used Jbossas application server andused JUNITJMOCK for unit testing Environment Java J2EE Struts JSP Servlets JSLT CSS JQuery JavaScript Jboss ANT CVS SQL Hibernate Oracle Sr JavaJ2EE Developer Ascena Retail group Pataskala OH US February 2009 to February 2010 Description This project has been designed to provide efficient and secure online shopping facilities to the customers Items will be categorized on the basis of the item price and type of item etc This Application also offers various operations relating to their orders such as expediting canceling and splitting the order Status of their order is also displayed upon request Responsibility Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering analysis design development testing and production environments Worked on Agile Development Methodology using Scrum concepts Created struts form beans action classes JSPs following Struts framework standards Implemented Struts Framework and Hibernate in the new version of the Application Designed and developed the front end using HTML CSS and JavaScript Used Web services SOAP for transmission of large blocks of XML data over HTTP Used XML Web Services using SOAP protocol to transfer the amount to other application that is remote and global to different financial institutions used SoapUI for web service testing Implemented the database connectivity using JDBC with Oracle 9i database as backend Extensively used Core Java such as MultiThreading Exceptions and Collections Developed real time tracking of class schedules using NodeJS Socketio ExpressJS framework Developed the UNIX shell scripts to automate jobs Worked on Junit for creating test cases for all the Business Rules and the application code Hosted the application on WebSphere and used Maven as the build automation tool Environment Java 60 Struts Framework 20 Hibernate 30 EJB SOAP Web Services HTML CSS NodeJs ExpressJs WebSphere Application Server 70 JUnit UNIX JavaScript Servlets JSP JDBC JQuery XML XSLT Education Bachelors Skills J2EE 9 years JAVA 9 years jQuery 7 years DATABASE 9 years SQL 8 years Additional Information Technical Skills JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java JDK   C C SQL PLSQL Python Scala Golang ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 Jboss Tomcat 502860 Bug tracking Jenkins Cucumber IDEs Eclipse Spring STS IntelliJ WebStorm NetBeans Web technologies HTML5 CSS3 XHTML JavaScriptES6 TypeScript Ajax JQuery AngularJS Angular 2 Angular 4 ReactJS NodeJS Socketio ExpressJS JSON Swagger UI Bootstrap AWS Skills EC2 S3 RDS EBS IAM AMI ELB CLI SNS RDS VPN NAT GIT DNS Route53 DBA Dynamo DB Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI Microservices Methodologies Agile Scrum RUP TDD OOAD SDLC Waterfall model Modeling Tools UML Rational Rose Visio Message Brokers Kafka RabbitMQ   TIBCO IBMMQ Testing technologiestools JUnit JMeter Protractor Mockito Database Oracle 8i9i10g11 G DB2 SQL Server 20052008 MySQL PostgreSQL MongoDB Cassandra Big Data Tools Hadoop Spark MapReduce HDFS HBase Zookeeper Hive Sqoop Cassandra Flume Couchbase MongoDB Neo4J Redis MLlib Version Control CVS SVN Git Stash Bitbucket Build Tools ANT Maven Gradle Spring Tools Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Micro services Spring REST Spring Eureka Consul Swagger UI Sleuth and Spring Zuul Feign Client Platforms Windows 5NT40 LINUX UNIX",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Sr",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "PNC",
        "Bank",
        "Edison",
        "NJ",
        "years",
        "experience",
        "ObjectOriented",
        "Analysis",
        "Design",
        "Development",
        "testing",
        "ClientServer",
        "Web",
        "enterprise",
        "business",
        "applications",
        "Expert",
        "methodologies",
        "SCRUM",
        "Test",
        "DevelopmentTTD",
        "Incremental",
        "Iteration",
        "methodologyAgile",
        "Development",
        "Testing",
        "Software",
        "Development",
        "Life",
        "Experience",
        "Java8",
        "features",
        "Lambda",
        "expressions",
        "Stream",
        "API",
        "predicate",
        "interface",
        "Experience",
        "Java",
        "EE",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Factory",
        "Session",
        "Facade",
        "DAO",
        "DTO",
        "Business",
        "Delegate",
        "development",
        "enterprise",
        "applications",
        "Experience",
        "web",
        "applications",
        "JEEServlet",
        "JSPJBDCEJB32JMSStruts",
        "Hibernate324x",
        "Spring",
        "REST",
        "Web",
        "services",
        "JAX",
        "WS",
        "JAX",
        "RS",
        "Rule",
        "Engines",
        "JBPM",
        "tools",
        "UI",
        "frame",
        "JQuery",
        "Ajax",
        "Google",
        "Web",
        "Toolkit",
        "GWT",
        "JavaScript",
        "Nodejs",
        "Angularjs",
        "Angular",
        "Angular",
        "ReactJs",
        "VueJS",
        "BackboneJS",
        "Tag",
        "Custom",
        "Tags",
        "Experience",
        "Webcentric",
        "applications",
        "XMLAngularjsXSDJSON",
        "JavaScript",
        "Ajax",
        "jQuery",
        "CSS3",
        "HTML5",
        "Bootstrap",
        "experience",
        "Web",
        "Services",
        "WSDL",
        "SOAP",
        "RESTFUL",
        "web",
        "services",
        "WebLogic",
        "Tomcat",
        "Administrator",
        "experience",
        "knowledge",
        "JMS",
        "Connection",
        "Pools",
        "J2EE",
        "Deployments",
        "Thread",
        "Dump",
        "Analysis",
        "Experience",
        "Spring",
        "Framework",
        "modules",
        "Spring",
        "MVC",
        "IOC",
        "AOP",
        "JDBC",
        "JTA",
        "IO",
        "SpringDashboard",
        "Spring",
        "Boot",
        "Spring",
        "Microservices",
        "Spring",
        "REST",
        "Spring",
        "Eureka",
        "Spring",
        "Ribbon",
        "Spring",
        "Netflix",
        "Spring",
        "Zuul",
        "Proxy",
        "Application",
        "Docker",
        "container",
        "runtime",
        "Cloud",
        "Foundry",
        "services",
        "AWS",
        "Netflix",
        "Eureka",
        "Spring",
        "Hystrix",
        "method",
        "Spring",
        "Ribbon",
        "load",
        "balancing",
        "broker",
        "service",
        "status",
        "Spring",
        "Kafka",
        "Zookeeper",
        "Experience",
        "Spring",
        "Security",
        "Framework",
        "User",
        "Access",
        "Management",
        "LDAP",
        "configuration",
        "authentication",
        "authorization",
        "Implementing",
        "Spring",
        "Cloud",
        "REST",
        "call",
        "Netflix",
        "Feign",
        "Client",
        "Experience",
        "MicroservicesSpring",
        "Boot",
        "Cloud",
        "Foundry",
        "Engagement",
        "Spring",
        "Boot",
        "Middleware",
        "persistence",
        "frameworks",
        "HibernateJPA",
        "Entities",
        "mapping",
        "Java",
        "classes",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "HSQL",
        "Queries",
        "Criteria",
        "Projections",
        "Expertise",
        "development",
        "applications",
        "Type",
        "technologies",
        "Scala",
        "Akka",
        "model",
        "Play",
        "framework",
        "Proficient",
        "Amazon",
        "Web",
        "Services",
        "AWSservices",
        "EC2",
        "Elastic",
        "Beanstalk",
        "CloudWatch",
        "CloudFront",
        "Cloud",
        "Formation",
        "IAM",
        "S3",
        "RDS",
        "ElastiCache",
        "SNS",
        "SQS",
        "AMI",
        "Experience",
        "Integration",
        "tools",
        "Oracle",
        "SOA",
        "Suite",
        "webmethods",
        "ApacheCAMEL",
        "Experience",
        "database",
        "design",
        "development",
        "procedures",
        "packages",
        "databases",
        "Oracle",
        "9i",
        "g",
        "g",
        "SQL",
        "Server",
        "DB2",
        "PostgreSQL",
        "MySQL",
        "Strong",
        "experience",
        "MongoDB",
        "development",
        "reports",
        "schema",
        "design",
        "map",
        "functions",
        "migrations",
        "SQL",
        "databases",
        "databases",
        "MongoDB",
        "Cassandra",
        "CouchDB",
        "Experience",
        "IDE",
        "tools",
        "NetBeans",
        "applications",
        "Tomcat",
        "GlassFish",
        "WebSphere",
        "WebLogic",
        "JBoss",
        "Servers",
        "Hands",
        "experience",
        "build",
        "Ant",
        "Maven",
        "Gradle",
        "tools",
        "Log4J",
        "CICD",
        "system",
        "Jenkins",
        "Kubernetes",
        "container",
        "environment",
        "Kubernetes",
        "Experience",
        "testing",
        "JUnitFramework",
        "Mockito",
        "Easy",
        "Mock",
        "testing",
        "tools",
        "Firebug",
        "Fire",
        "PosterProtractor",
        "Selenium",
        "Jasmine",
        "SoapUI",
        "Ability",
        "technologies",
        "communication",
        "skills",
        "team",
        "player",
        "ability",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "PNC",
        "Bank",
        "Columbus",
        "OH",
        "US",
        "October",
        "Present",
        "Description",
        "PNC",
        "range",
        "services",
        "banking",
        "mortgage",
        "banking",
        "customers",
        "individuals",
        "business",
        "corporations",
        "government",
        "entities",
        "Cash",
        "Flow",
        "Insight",
        "CFI",
        "suite",
        "tools",
        "businesss",
        "cash",
        "flow",
        "page",
        "applications",
        "presentation",
        "layers",
        "services",
        "customers",
        "Responsibility",
        "SDLC",
        "phases",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "Agile",
        "Waterfall",
        "Controllers",
        "View",
        "data",
        "Service",
        "Angular",
        "Factory",
        "dashboard",
        "calls",
        "Business",
        "Customers",
        "Count",
        "Flags",
        "Realtime",
        "graphs",
        "Analytical",
        "Reporting",
        "NodeJS",
        "ReactJS",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "SPA",
        "functionality",
        "SpringIO",
        "Spring",
        "Boot",
        "Thymeleaf",
        "Hibernate",
        "ORM",
        "Java",
        "EE",
        "components",
        "SpringIOC",
        "Spring",
        "Transactions",
        "Spring",
        "Security",
        "modules",
        "REST",
        "services",
        "google",
        "chromes",
        "POSTMAN",
        "Consumed",
        "messages",
        "JMS",
        "beans",
        "MQ",
        "Integrated",
        "Active",
        "MQ",
        "services",
        "Beans",
        "Hibernate",
        "DAO",
        "classes",
        "data",
        "Spring",
        "framework",
        "manager",
        "classes",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Experience",
        "Dropping",
        "Indexes",
        "Tables",
        "Stored",
        "Procs",
        "Views",
        "Oracle",
        "DB",
        "Cloud",
        "environment",
        "Microservices",
        "Spring",
        "Netflix",
        "Eureka",
        "server",
        "Hystrix",
        "Ribbon",
        "Expertise",
        "employment",
        "Spring",
        "Kafka",
        "Zookeeper",
        "JMS",
        "service",
        "Application",
        "Docker",
        "container",
        "runtime",
        "Cloud",
        "Foundry",
        "services",
        "AWS",
        "Netflix",
        "Eureka",
        "Spring",
        "Hystrix",
        "method",
        "Spring",
        "Ribbon",
        "load",
        "balancing",
        "broker",
        "service",
        "status",
        "SpringKafka",
        "Zookeeper",
        "modules",
        "mongoose",
        "database",
        "persistence",
        "NodeJS",
        "client",
        "applications",
        "JAXR",
        "JAXM",
        "UDDI",
        "registry",
        "Apache",
        "Mesos",
        "Kubernetes",
        "ecosystem",
        "Microservices",
        "multitude",
        "application",
        "AWS",
        "EC2",
        "R53",
        "S3",
        "RDS",
        "DynamoDB",
        "SQS",
        "IAM",
        "Cloud",
        "Formation",
        "lambda",
        "highavailability",
        "tolerance",
        "applications",
        "RuleEngines",
        "Drools",
        "4x",
        "business",
        "User",
        "Roles",
        "Analyze",
        "conflicts",
        "merging",
        "source",
        "code",
        "GIT",
        "Log4J",
        "purposes",
        "levels",
        "Writing",
        "Unit",
        "test",
        "cases",
        "JUnit",
        "testing",
        "framework",
        "unit",
        "system",
        "testing",
        "Seleniums",
        "playback",
        "tool",
        "tests",
        "test",
        "cases",
        "Expertise",
        "Selenium",
        "Data",
        "framework",
        "Maven",
        "Build",
        "Management",
        "Tool",
        "TestNG",
        "Unit",
        "Testing",
        "tool",
        "Jenkins",
        "Continuous",
        "Integration",
        "Tool",
        "management",
        "reports",
        "dashboards",
        "Splunk",
        "Environment",
        "AWS",
        "Java7",
        "J2EE",
        "Cloud",
        "Foundry",
        "Java",
        "Beans",
        "NodeJS",
        "Spring",
        "Spring",
        "Kafka",
        "Zookeeper",
        "AWS",
        "JQuery",
        "EJB",
        "Hibernate",
        "Eclipse",
        "React",
        "Devops",
        "Angular",
        "Spark",
        "Jenkins",
        "Oracle",
        "g",
        "MongoDB",
        "PLSQL",
        "Selenium",
        "Cucumber",
        "Log4j",
        "XML",
        "HTML5",
        "CSS3",
        "REST",
        "JMS",
        "Web",
        "Services",
        "Web",
        "Logic",
        "server",
        "Jasmine",
        "Maven",
        "GIT",
        "Sr",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Dish",
        "Denver",
        "CO",
        "US",
        "August",
        "October",
        "Description",
        "Dish",
        "Network",
        "dish",
        "satellite",
        "service",
        "provider",
        "company",
        "satellite",
        "television",
        "satellite",
        "internet",
        "access",
        "audio",
        "programming",
        "television",
        "services",
        "customers",
        "United",
        "States",
        "Responsibility",
        "Design",
        "Development",
        "project",
        "modules",
        "requirements",
        "business",
        "logic",
        "Agile",
        "Scrum",
        "Software",
        "Development",
        "methodology",
        "class",
        "sequence",
        "activity",
        "flow",
        "diagrams",
        "UML",
        "Visio",
        "Sparx",
        "custom",
        "singlepage",
        "Web",
        "Application",
        "end",
        "Angular",
        "directives",
        "Angular",
        "controllers",
        "services",
        "Angular",
        "components",
        "dependency",
        "Developed",
        "Interactive",
        "web",
        "pages",
        "Angular",
        "HTML5",
        "CSS3",
        "Javascript",
        "JQuery",
        "Bootstrap",
        "Usage",
        "features",
        "Java8",
        "lambdaexpressions",
        "business",
        "layer",
        "database",
        "stream",
        "API",
        "Bulk",
        "Data",
        "Operations",
        "Collections",
        "streams",
        "streams",
        "J2EE",
        "design",
        "patterns",
        "Model",
        "View",
        "ControllerMVC",
        "Singleton",
        "Factory",
        "Data",
        "Access",
        "Object",
        "DAO",
        "Data",
        "Transfer",
        "Object",
        "DTO",
        "Service",
        "Locator",
        "Thread",
        "blocks",
        "Multithreading",
        "access",
        "performance",
        "Usedcore",
        "Spring",
        "concepts",
        "DIIOC",
        "AOP",
        "Batch",
        "implementation",
        "circuit",
        "breaker",
        "patterns",
        "Spring",
        "BootMicroservice",
        "applications",
        "Hystrix",
        "SwaggerUI",
        "Microservice",
        "Eureka",
        "server",
        "service",
        "health",
        "check",
        "Spring",
        "Boot",
        "admin",
        "console",
        "Spring",
        "Ribbon",
        "load",
        "UI",
        "applications",
        "Angular2",
        "REST",
        "APIs",
        "Spring",
        "ZuulMicroservices",
        "Microservice",
        "Registration",
        "Spring",
        "Cloud",
        "Netflix",
        "Eureka",
        "Implementing",
        "Spring",
        "Cloud",
        "REST",
        "call",
        "Netflix",
        "Feign",
        "Client",
        "Implementing",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "preauthentication",
        "data",
        "base",
        "security",
        "Spring",
        "Security",
        "application",
        "access",
        "Spring",
        "Batch",
        "scheduling",
        "maintenance",
        "batch",
        "jobs",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "code",
        "code",
        "optimization",
        "integration",
        "middleware",
        "solution",
        "Provisioning",
        "Services",
        "design",
        "Implementation",
        "business",
        "logic",
        "data",
        "processing",
        "routes",
        "Apache",
        "Camel",
        "Created",
        "tables",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "functions",
        "packages",
        "inserts",
        "updates",
        "DB",
        "TOAD",
        "Oracle",
        "database",
        "Oracle",
        "11g12c",
        "data",
        "queries",
        "joins",
        "CRUD",
        "operations",
        "Experience",
        "Normalization",
        "performance",
        "files",
        "CLOB",
        "BLOB",
        "Splunk",
        "DB",
        "APP",
        "data",
        "Splunk",
        "Oracle",
        "Database",
        "Spring",
        "ORM",
        "Hibernate",
        "advantage",
        "features",
        "Annotation",
        "metadata",
        "AutoWiring",
        "Collectionsto",
        "implement",
        "DAO",
        "layer",
        "Hibernate",
        "Session",
        "Factory",
        "HQL",
        "SQL",
        "Hibernate",
        "concepts",
        "Transactions",
        "MongoDB",
        "scripts",
        "NoSQL",
        "database",
        "Configuring",
        "Cassandra",
        "clusters",
        "spaces",
        "RHELOpenstack",
        "Installed",
        "Apache",
        "Spark",
        "Java",
        "API",
        "data",
        "Cassandra",
        "Clusters",
        "Installed",
        "plugins",
        "Apache",
        "HTTP",
        "server",
        "Sun",
        "Web",
        "server",
        "request",
        "WebLogic",
        "server",
        "procedures",
        "server",
        "Deployed",
        "Docker",
        "Spring",
        "Boot",
        "Microservices",
        "AWS",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "AWS",
        "console",
        "Experience",
        "Docker",
        "Images",
        "Docker",
        "container",
        "Jenkins",
        "AWS",
        "code",
        "deploys",
        "AWS",
        "Experience",
        "DevOps",
        "methodologies",
        "CICD",
        "Pipelines",
        "tool",
        "sets",
        "GIT",
        "Jenkins",
        "Chef",
        "AWS",
        "Generating",
        "Scala",
        "Java",
        "classes",
        "APIs",
        "application",
        "Scala",
        "data",
        "Kafka",
        "cluster",
        "arbitrations",
        "implementation",
        "integration",
        "components",
        "JBPM",
        "DROOLs",
        "Configured",
        "Protractor",
        "test",
        "classes",
        "Selenium",
        "grid",
        "testing",
        "end",
        "code",
        "reviews",
        "unit",
        "testing",
        "JUnit",
        "framework",
        "Log4j",
        "logs",
        "exceptions",
        "testing",
        "frameworks",
        "JUnit",
        "EasyMock",
        "Mockito",
        "PowerMock",
        "Created",
        "Test",
        "automation",
        "framework",
        "Cucumber",
        "Selenium",
        "web",
        "driver",
        "Drools",
        "engine",
        "business",
        "rules",
        "runtime",
        "Git",
        "version",
        "control",
        "JIRA",
        "bug",
        "project",
        "management",
        "andMaven",
        "build",
        "tool",
        "Environment",
        "Java8",
        "J2EE",
        "CICD",
        "Spring",
        "Webservices",
        "Microservices",
        "Swagger",
        "Spring",
        "Zuul",
        "Netflix",
        "Eureka",
        "Restful",
        "Feign",
        "Client",
        "Apache",
        "Camel",
        "Kafka",
        "WebLogic",
        "JUnit",
        "JBPM",
        "Drools",
        "Spring",
        "Cloud",
        "EC2",
        "S3",
        "Scala",
        "MongoDB",
        "Cassandra",
        "HTML5",
        "CSS3",
        "Python",
        "JavaScriptES6",
        "Bootstrap",
        "jQuery",
        "Angular",
        "Maven",
        "AJAX",
        "JQuery",
        "XML",
        "XSLT",
        "Java",
        "Beans",
        "UML",
        "Design",
        "Patterns",
        "Log4j",
        "Agile",
        "Methodology",
        "Devops",
        "Docker",
        "Spark",
        "Kubernetes",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "ACI",
        "WorldWide",
        "Clearwater",
        "FL",
        "US",
        "June",
        "August",
        "Description",
        "Enterprise",
        "Banker",
        "cash",
        "management",
        "system",
        "Enterprise",
        "Banker",
        "customers",
        "web",
        "browser",
        "cash",
        "management",
        "Functions",
        "Financial",
        "institution",
        "administrators",
        "Enterprise",
        "Bankers",
        "interface",
        "system",
        "defaults",
        "customer",
        "setup",
        "customer",
        "activities",
        "web",
        "browser",
        "location",
        "access",
        "institutions",
        "network",
        "Enterprise",
        "Banker",
        "products",
        "modules",
        "Enterprise",
        "Banker",
        "Suite",
        "institutions",
        "increments",
        "functionality",
        "Responsibility",
        "Software",
        "Development",
        "Life",
        "CycleSDLC",
        "object",
        "business",
        "process",
        "Service",
        "architecture",
        "applications",
        "development",
        "environment",
        "Business",
        "Requirements",
        "Spring",
        "MVC",
        "framework",
        "concerns",
        "authentication",
        "system",
        "performance",
        "Spring",
        "AOP",
        "interoperableservices",
        "SOAP",
        "WSDL",
        "JAXWS",
        "JAXRPC",
        "Web",
        "services",
        "core",
        "Java",
        "concepts",
        "Collections",
        "Swing",
        "Serialization",
        "ServletsJSP",
        "web",
        "services",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "data",
        "client",
        "side",
        "NodeJS",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "OAuth",
        "authentication",
        "protocol",
        "Jackson",
        "Custom",
        "Mappers",
        "Custom",
        "manipulation",
        "date",
        "currency",
        "conversations",
        "JSON",
        "Data",
        "Jackson",
        "parser",
        "Marshaling",
        "UnMarshaling",
        "POJO",
        "objects",
        "Hibernate",
        "ObjectRelational",
        "Mapping",
        "ORM",
        "tool",
        "data",
        "SQL",
        "Server",
        "Hibernate",
        "Detached",
        "Criteria",
        "HQL",
        "SQL",
        "data",
        "Handson",
        "Procedures",
        "functions",
        "DDL",
        "DML",
        "SQLqueries",
        "PLSQL",
        "JPA",
        "persistence",
        "layer",
        "EJB",
        "annotations",
        "database",
        "XML",
        "JBoss",
        "Application",
        "server",
        "implementation",
        "support",
        "workload",
        "management",
        "performance",
        "tuning",
        "Web",
        "server",
        "setup",
        "configuration",
        "JBoss",
        "App",
        "Server",
        "UI",
        "HTML5CSS3",
        "jQuery",
        "BootstrapJavaScript",
        "Ajax",
        "PLSQL",
        "store",
        "procedures",
        "data",
        "Oracle",
        "Developed",
        "Test",
        "classes",
        "JUnit",
        "Easy",
        "Mock",
        "test",
        "coverage",
        "EMMA",
        "Analyze",
        "conflicts",
        "merging",
        "source",
        "code",
        "GIT",
        "Maven",
        "build",
        "tool",
        "Environment",
        "Java",
        "J2EE",
        "Java",
        "JMS",
        "NodeJS",
        "Spring",
        "JQuery",
        "EJB",
        "Hibernate",
        "IntelliJ",
        "Angular",
        "Oracle",
        "g",
        "MongoDB",
        "PLSQL",
        "Cucumber",
        "Log4j",
        "XML",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "SOAP",
        "Maven",
        "GIT",
        "JavaJ2EE",
        "Developer",
        "Penn",
        "National",
        "Insurance",
        "Harrisburg",
        "PA",
        "US",
        "April",
        "June",
        "Description",
        "Penn",
        "National",
        "Insurance",
        "propertycasualty",
        "insurance",
        "company",
        "Harrisburg",
        "Pennsylvania",
        "farmers",
        "trade",
        "organization",
        "farmers",
        "workers",
        "compensation",
        "protection",
        "workers",
        "farming",
        "equipment",
        "Responsibility",
        "preparation",
        "definition",
        "documents",
        "discussions",
        "business",
        "users",
        "testing",
        "team",
        "design",
        "documents",
        "MVC",
        "Factory",
        "Delegate",
        "Singleton",
        "design",
        "patterns",
        "Web",
        "Application",
        "Struts",
        "business",
        "logic",
        "application",
        "Struts",
        "Framework",
        "JSP",
        "Servlets",
        "Wrote",
        "Client",
        "side",
        "validation",
        "Struts",
        "Validate",
        "framework",
        "JavaScript",
        "Wrote",
        "unit",
        "test",
        "cases",
        "modules",
        "test",
        "findings",
        "SOAP",
        "Web",
        "Services",
        "XML",
        "data",
        "applications",
        "HTTP",
        "Wrote",
        "JSPs",
        "Servlets",
        "WebLogic",
        "Application",
        "server",
        "Wrote",
        "queries",
        "MySQL",
        "database",
        "Subversion",
        "version",
        "control",
        "log4j",
        "errors",
        "production",
        "support",
        "team",
        "trouble",
        "reports",
        "Wrote",
        "Ant",
        "Scripts",
        "build",
        "process",
        "Release",
        "Management",
        "Deployment",
        "Process",
        "Environment",
        "Java",
        "J2EE",
        "Struts",
        "JSP",
        "Servlets",
        "JavaScript",
        "SOAP",
        "WebLogic",
        "Log4j",
        "AMT",
        "CVS",
        "PLSQL",
        "MySQL",
        "Jr",
        "JavaJ2EE",
        "Developer",
        "Change",
        "Health",
        "care",
        "Lombard",
        "IL",
        "US",
        "February",
        "April",
        "Description",
        "web",
        "application",
        "J2EE",
        "architecture",
        "access",
        "outpatient",
        "data",
        "Data",
        "Repository",
        "Users",
        "update",
        "data",
        "data",
        "clinicians",
        "Data",
        "Repository",
        "data",
        "decisions",
        "Data",
        "Repository",
        "modules",
        "application",
        "project",
        "company",
        "data",
        "health",
        "policy",
        "decisions",
        "client",
        "programs",
        "data",
        "database",
        "query",
        "health",
        "policy",
        "premium",
        "Responsibility",
        "requirements",
        "Design",
        "Development",
        "Unit",
        "testing",
        "Bug",
        "application",
        "Struts",
        "Spring",
        "Hibernate",
        "user",
        "interface",
        "JavaScript",
        "JSTL",
        "CSS",
        "JQuery",
        "JSPs",
        "custom",
        "tags",
        "logic",
        "data",
        "JSPS",
        "SpringIOC",
        "beans",
        "Hibernate",
        "database",
        "mapping",
        "entities",
        "hibernate",
        "annotations",
        "Oracle",
        "database",
        "database",
        "SQL",
        "database",
        "tables",
        "release",
        "builds",
        "application",
        "test",
        "environments",
        "Jbossas",
        "application",
        "server",
        "JUNITJMOCK",
        "unit",
        "testing",
        "Environment",
        "Java",
        "J2EE",
        "Struts",
        "JSP",
        "Servlets",
        "JSLT",
        "CSS",
        "JQuery",
        "JavaScript",
        "Jboss",
        "ANT",
        "CVS",
        "SQL",
        "Hibernate",
        "Oracle",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Ascena",
        "Retail",
        "group",
        "Pataskala",
        "OH",
        "US",
        "February",
        "February",
        "Description",
        "project",
        "shopping",
        "facilities",
        "customers",
        "Items",
        "basis",
        "item",
        "price",
        "type",
        "item",
        "Application",
        "operations",
        "orders",
        "canceling",
        "order",
        "Status",
        "order",
        "request",
        "Responsibility",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "production",
        "environments",
        "Agile",
        "Development",
        "Methodology",
        "Scrum",
        "concepts",
        "struts",
        "form",
        "action",
        "classes",
        "JSPs",
        "Struts",
        "framework",
        "standards",
        "Struts",
        "Framework",
        "Hibernate",
        "version",
        "Application",
        "end",
        "HTML",
        "CSS",
        "JavaScript",
        "Web",
        "services",
        "SOAP",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "XML",
        "Web",
        "Services",
        "protocol",
        "amount",
        "application",
        "institutions",
        "SoapUI",
        "web",
        "service",
        "testing",
        "database",
        "connectivity",
        "JDBC",
        "Oracle",
        "9i",
        "database",
        "Core",
        "Java",
        "MultiThreading",
        "Exceptions",
        "Collections",
        "time",
        "tracking",
        "class",
        "schedules",
        "NodeJS",
        "Socketio",
        "ExpressJS",
        "framework",
        "UNIX",
        "shell",
        "scripts",
        "jobs",
        "Junit",
        "test",
        "cases",
        "Business",
        "Rules",
        "application",
        "code",
        "application",
        "WebSphere",
        "Maven",
        "build",
        "automation",
        "tool",
        "Environment",
        "Java",
        "Struts",
        "Framework",
        "Hibernate",
        "EJB",
        "SOAP",
        "Web",
        "Services",
        "HTML",
        "CSS",
        "NodeJs",
        "ExpressJs",
        "WebSphere",
        "Application",
        "Server",
        "JUnit",
        "UNIX",
        "JavaScript",
        "Servlets",
        "JSP",
        "JDBC",
        "JQuery",
        "XML",
        "XSLT",
        "Education",
        "Bachelors",
        "Skills",
        "J2EE",
        "years",
        "years",
        "jQuery",
        "years",
        "DATABASE",
        "years",
        "SQL",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "JavaJ2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "JSTL",
        "JDBC",
        "JMS",
        "JNDI",
        "RMI",
        "EJB",
        "JFCSwing",
        "AWT",
        "Applets",
        "Java",
        "Networking",
        "Programming",
        "Languages",
        "Java",
        "JDK",
        "C",
        "C",
        "SQL",
        "PLSQL",
        "Python",
        "Scala",
        "Golang",
        "ApplicationWeb",
        "Servers",
        "OracleBEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "Jboss",
        "Tomcat",
        "Bug",
        "Jenkins",
        "Cucumber",
        "IDEs",
        "Eclipse",
        "Spring",
        "STS",
        "IntelliJ",
        "WebStorm",
        "NetBeans",
        "Web",
        "technologies",
        "HTML5",
        "CSS3",
        "XHTML",
        "JavaScriptES6",
        "TypeScript",
        "Ajax",
        "JQuery",
        "Angular",
        "Angular",
        "ReactJS",
        "NodeJS",
        "Socketio",
        "ExpressJS",
        "JSON",
        "Swagger",
        "UI",
        "Bootstrap",
        "AWS",
        "Skills",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "IAM",
        "AMI",
        "ELB",
        "CLI",
        "SNS",
        "RDS",
        "VPN",
        "NAT",
        "GIT",
        "DNS",
        "Route53",
        "DBA",
        "Dynamo",
        "DB",
        "Web",
        "Services",
        "JAXWS",
        "JAXRPC",
        "JAXRS",
        "SOAP",
        "REST",
        "SOAP",
        "UI",
        "Microservices",
        "Methodologies",
        "Agile",
        "Scrum",
        "RUP",
        "TDD",
        "SDLC",
        "Waterfall",
        "model",
        "Modeling",
        "Tools",
        "UML",
        "Rational",
        "Rose",
        "Visio",
        "Message",
        "Brokers",
        "Kafka",
        "TIBCO",
        "IBMMQ",
        "Testing",
        "technologiestools",
        "JUnit",
        "JMeter",
        "Protractor",
        "Mockito",
        "Database",
        "Oracle",
        "G",
        "DB2",
        "SQL",
        "Server",
        "MySQL",
        "PostgreSQL",
        "MongoDB",
        "Cassandra",
        "Big",
        "Data",
        "Tools",
        "Hadoop",
        "Spark",
        "MapReduce",
        "HDFS",
        "HBase",
        "Zookeeper",
        "Hive",
        "Sqoop",
        "Cassandra",
        "Flume",
        "Couchbase",
        "MongoDB",
        "Neo4J",
        "Redis",
        "MLlib",
        "Version",
        "Control",
        "CVS",
        "SVN",
        "Git",
        "Stash",
        "Bitbucket",
        "Build",
        "Tools",
        "ANT",
        "Maven",
        "Gradle",
        "Spring",
        "Tools",
        "Spring",
        "MVC",
        "IOC",
        "AOP",
        "JDBC",
        "JTA",
        "IO",
        "Spring",
        "Boot",
        "Spring",
        "Micro",
        "services",
        "Spring",
        "REST",
        "Spring",
        "Eureka",
        "Consul",
        "Swagger",
        "UI",
        "Sleuth",
        "Spring",
        "Zuul",
        "Feign",
        "Client",
        "Platforms",
        "Windows",
        "5NT40",
        "LINUX",
        "UNIX"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:01:46.288568",
    "resume_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer PNC Bank Edison NJ Over 8 years of experience in ObjectOriented Analysis Design Development and testing of ClientServer Web based enterprise business applications Expert in various Agile methodologies like SCRUM Test Driven DevelopmentTTD Incremental and Iteration methodologyAgile Development Testing using Software Development Life CycleSDLC Experience in Java8 features like Lambda expressions Stream API predicate functional interface etc Experience in implementing Java EE design patterns such as MVC Singleton Factory Session Facade DAO DTO and Business Delegate in the development of multitier distributed enterprise applications Experience in developing multitier distributed web applications usingJava JEEServlet JSPJBDCEJB32JMSStruts Hibernate324x Spring 3x4xSOAP and REST based Web services Axis20 JAX WS 20 JAX RS Rule Engines Drools41 ILOG JBPM tools Experienced in UI frame works such as JQuery Ajax Google Web Toolkit GWT JavaScript Nodejs Angularjs Angular 2 Angular 4 ReactJs VueJS BackboneJS Tag Libraries Custom Tags Experience in developing Webcentric applications using XMLAngularjsXSDJSON JavaScript Ajax jQuery CSS3 HTML5 Bootstrap Extensive experience in working over Web Services with WSDL SOAP and RESTFUL web services WebLogic and Tomcat Administrator experience with knowledge in clustering JMS Connection Pools J2EE Deployments Thread Dump Analysis Experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO SpringDashboard Spring Boot Spring Microservices Spring REST Spring Eureka Spring Ribbon Spring Netflix Spring Zuul Proxy Deployed the Application into Docker container and made easily accessible at runtime using Pivotal Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Experience in Spring Security Framework for User Access Management and involved LDAP configuration for authentication authorization Implementing Spring Cloud REST call using Netflix Feign Client Experience in MicroservicesSpring Boot Pivotal Cloud Foundry and Engagement using Spring Boot Experienced in Middleware persistence frameworks like HibernateJPA Entities for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria Projections Expertise in development applications using Type safe technologies like Scala Akka model Play framework Proficient in using Amazon Web Services AWSservices like EC2 Elastic Beanstalk CloudWatch CloudFront Cloud Formation IAM S3 RDS ElastiCache SNS SQS AMI Experience in Integration tools Oracle SOA Suite webmethods and ApacheCAMEL Experience in database modeling design and development of PLSQL stored procedures packages in relational databases Oracle 9i 10g 11g SQL Server 20052008 DB2 PostgreSQL and MySQL Strong experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDB Cassandra and CouchDB Experience in using IDE tools NetBeans Eclipse IntelliJ configuring and deploying the applications on Tomcat GlassFish WebSphere WebLogic and JBoss Servers Hands on experience with build like Ant Maven Gradle and logging tools like Log4J and Splunk Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes Experience in testing with JUnitFramework using Mockito and Easy Mock and other testing tools like Firebug Fire PosterProtractor Selenium Jasmine SoapUI Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Sr Java Full Stack Developer PNC Bank Columbus OH US October 2016 to Present Description PNC offers a wide range of services such as retail banking and residential mortgage banking for customers from individuals and small business to corporations and government entities Cash Flow Insight CFI is an innovative suite of online tools for seeing and managing businesss cash flow Developed single page applications Designed presentation layers for various required services for customers Responsibility Involved in various SDLC phases like Requirement gathering Design Analysis and Code development with both iterative Agile Waterfall Implemented AngularJS Controllers to maintain each View data and Service calls using Angular Factory Developed A dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using NodeJS Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a SPA All the functionality is implemented using SpringIO Spring Boot Thymeleaf and Hibernate ORM Implemented Java EE components using SpringIOC Spring Transactions and Spring Security modules Tested REST services using google chromes POSTMAN plugin Consumed messages from JMS driven beans and Active MQ Integrated Active MQ services with Beans Hibernate DAO classes were developed to retrieve and save data using Spring framework manager classes Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Experience in Creating Dropping Indexes Tables Stored Procs and Views on Oracle DB Cloud environment for Microservices was provided using Spring Netflix Eureka server Hystrix Ribbon Expertise with employment of Spring Kafka and Zookeeper apart from JMS as messaging service Deployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using SpringKafka and Zookeeper Worked with modules like mongoose for database persistence using NodeJS to interact with MongoDB Developed client applications using JAXR and JAXM to connect to the UDDI registry Apache Mesos and Kubernetes were used as the best ecosystem to deploy and manage Microservices Designed and deployed a multitude application utilizing almost all the AWS Including EC2 R53 S3 RDS DynamoDB SQS IAM Cloud Formation and lambda focusing on highavailability and fault tolerance Developed applications using RuleEngines Drools 4x and ILOG to validate the business User Roles Analyze and resolve conflicts related to merging of source code for GIT Log4J is used for logging purposes and debug levels are defined for controlling what we log Writing Unit test cases using JUnit testing framework and performed unit and system testing Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Expertise on Selenium Data Driven framework and integrating it with Maven Build Management Tool TestNG Unit Testing tool and Jenkins Continuous Integration Tool Created and configured management reports and dashboards using Splunk Environment AWS Java7 J2EE Cloud Foundry Java Beans NodeJS Spring Spring Kafka Zookeeper AWS CICD JQuery EJB Hibernate 20 Eclipse React Devops Angular Spark Jenkins Oracle 11g MongoDB PLSQL Selenium Cucumber Log4j XML HTML5 CSS3 REST JMS ActiveMQ Web Services Web Logic server Jasmine Maven GIT Sr JavaJ2EE and Full Stack Developer Dish Denver CO US August 2015 to October 2016 Description Dish Network stylized as dish is an American directbroadcast satellite service provider The company provides satellite television satellite internet access audio programming and interactive television services to commercial and residential customers in the United States Responsibility Involved in Design and Development of project modules gather requirements analyze and implemented business logic using Agile Scrum Software Development methodology Designed class sequence activity flow diagrams using UML Visio and Sparx Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed several reusable directives using Angular 2 Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Developed Interactive web pages with Angular 2 HTML5 CSS3 Javascript JQuery and Bootstrap Usage of new features of Java8 like lambdaexpressions for communicating between business layer and database stream API for Bulk Data Operations on Collections using both streams and parallel streams Used J2EE design patterns like Model View ControllerMVC Singleton Factory Data Access Object DAO Data Transfer Object DTO and Service Locator Involved in writing Thread safe blocks for Multithreading access and improve performance Usedcore Spring concepts like DIIOC AOP Batch implementation Implemented fail safe and circuit breaker patterns in Spring BootMicroservice applications using Hystrix configured SwaggerUI to registered Microservice with Eureka server and monitored service health check from Spring Boot admin console and Spring Ribbon for load balancing Developed UI applications using Angular2 integrating with REST APIs built on Spring ZuulMicroservices Working on Microservice Registration with Spring Cloud using Netflix Eureka Implementing Spring Cloud REST call using Netflix Feign Client Implementing or exposing the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Implemented preauthentication and data base security using Spring Security and securing application access and Spring Batch for scheduling and maintenance of batch jobs Developed Python Object Oriented Design code for logging and debugging code optimization Worked on Camelbased integration middleware solution for Provisioning Services by design and the Implementation of business logic and data processing routes using Apache Camel Created tables and worked on SQL and PLSQL to write Stored Procedures functions and packages for complex inserts and updates in the DB used TOAD to interact with Oracle database Used Oracle 11g12c for the backend data and performed complex queries using joins for CRUD operations Experience in Normalization performance tuning uploading files to database using CLOB and BLOB Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Implemented Spring ORM with Hibernate taking advantage of features like Annotation metadata AutoWiring and Collectionsto implement DAO layer with Hibernate Session Factory HQL and SQL Extensively used Hibernate concepts such asLazy loading Dirty checking Locking and Transactions Composed and executed MongoDB scripts to insert and update NoSQL database and reporting Configuring Cassandra clusters and key spaces on RHELOpenstack Installed and setup Apache Spark Used the Java API to load the data into Cassandra Clusters Installed and configured plugins for Apache HTTP server and Sun One Web server to proxy the request for WebLogic server Implemented standard backup procedures for Weblogic server Deployed Docker contained Spring Boot Microservices in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Experience with building Docker Images and running them on Docker container Used Jenkins as an AWS code deploys plugin to deploy to AWS Experience with DevOps methodologies implementing CICD Pipelines using tool sets like GIT Jenkins Chef and AWS Generating Scala and Java classes from the APIs so that they can be incorporated in the application Used Sparkstreaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Responsible for implementation of java integration components for JBPM and DROOLs Configured Protractor test classes and Selenium grid end to end testing on the front end Involved in code reviews and unit testing using JUnit framework and Log4j to provide logs of exceptions Worked with several testing frameworks such as JUnit EasyMock Mockito and PowerMock Created Test automation framework using Cucumber and Selenium web driver Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug tracking project management andMaven as build tool Environment Java8 J2EE CICD Spring Webservices Microservices Swagger Spring Zuul Netflix Eureka Restful Feign Client Apache Camel Kafka WebLogic JUnit JBPM Drools Spring Cloud AWS EC2 S3 Scala MongoDB Cassandra HTML5 CSS3 Python JavaScriptES6 Bootstrap jQuery Angular 2 Maven AJAX JQuery XML XSLT Java Beans UML Design Patterns Log4j Agile Methodology Devops Docker Spark Kubernetes Sr JavaJ2EE Developer ACI WorldWide Clearwater FL US June 2013 to August 2015 Description Enterprise Banker the industryleading webbased cash management system With Enterprise Banker customers use a web browser to access cash management Functions Financial institution administrators use Enterprise Bankers webbased administrative interface to set system defaults perform customer setup and monitor customer activities with a web browser from any location that has access to the financial institutions network When fully utilized Enterprise Banker includes 18 products over 90 modules over 250 Enterprise Banker Suite is designed to allow financial institutions to purchase and implement specific limited increments of functionality Responsibility Experienced with Software Development Life CycleSDLC with object oriented of business process and worked on developing Service oriented architecture applications in agile development environment Developed and implemented Business Requirements using Spring MVC framework Implemented crosscutting concerns such as logging authentication and system performance using Spring AOP Developed reusable and interoperableservices based on SOAP WSDL JAXWS JAXRPC Web services Well versed with core Java concepts like Collections Swing Serialization and ServletsJSP Implemented web services in Service Oriented Architecture SOA to retrieve data from client side NodeJS and parsed the data to client and handled the security and Authorization using Spring Security and OAuth authentication protocol respectively Used Jackson Custom Mappers for Custom manipulation for date currency conversations on JSON Data Used Jackson parser for Marshaling and UnMarshaling Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Hibernate Detached Criteria HQL and written some SQL queries for data retrieving Handson writing Stored Procedures functions triggers DDL DML SQLqueries and PLSQL Worked on JPA as persistence layer involving EJB annotations to synchronize with database through XML JBoss Application server implementation support workload management and performance tuning including Web server setup configuration with JBoss App Server Developed UI usingAngularJS HTML5CSS3 jQuery BootstrapJavaScript Ajax Developed PLSQL store procedures to convert the data from Oracle to MongoDB Developed Test classes using JUnit and Easy Mock and test coverage using EMMA plugin Analyze and resolve conflicts related to merging of source code for GIT and Maven as build tool Environment Java J2EE Java Beans JMS NodeJS Spring JQuery EJB Hibernate IntelliJ Angular Oracle 11g MongoDB PLSQL Cucumber Log4j XML HTML5 CSS3 JavaScript Bootstrap SOAP Maven GIT JavaJ2EE Developer Penn National Insurance Harrisburg PA US April 2011 to June 2013 Description Penn National Insurance is a propertycasualty mutual insurance company headquartered in Harrisburg Pennsylvania Founded in 1919 by a farmers trade organization to help the farmers get more affordable workers compensation protection for their workers who operated steamdriven farming equipment Responsibility Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Extensively used MVC Factory Delegate and Singleton design patterns Enhanced the Web Application using Struts Created business logic and application in Struts Framework using JSP and Servlets Wrote Client side validation using Struts Validate framework and JavaScript Wrote unit test cases for different modules and resolved the test findings Used SOAP for Web Services by exchanging XML data between applications over HTTP Wrote JSPs Servlets and deployed them on WebLogic Application server Wrote queries in MySQL to interact with the database Used Subversion for version control and log4j for logging errors Helped production support team to solve trouble reports Wrote Ant Scripts to automate the build and deploy process Involved in Release Management and Deployment Process Environment Java J2EE Struts JSP Servlets JavaScript SOAP WebLogic Log4j AMT CVS PLSQL MySQL Jr JavaJ2EE Developer Change Health care Lombard IL US February 2010 to April 2011 Description This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well The client programs are used for issuing or retrieving data from the database depending on the query for finding health policy premium Responsibility Involved in the requirements gathering Design Development Unit testing and Bug fixing Developed application using Struts Spring and Hibernate Developed rich user interface using JavaScript JSTL CSS JQuery and JSPs Used custom tags to display logic specific data in JSPS and used SpringIOC for injecting the beans Used Hibernate for connecting to the database and mapping the entities by using hibernate annotations Used Oracle database as backend database and wrote SQL to update and create database tables Involved in making release builds for deploying the application for test environments Used Jbossas application server andused JUNITJMOCK for unit testing Environment Java J2EE Struts JSP Servlets JSLT CSS JQuery JavaScript Jboss ANT CVS SQL Hibernate Oracle Sr JavaJ2EE Developer Ascena Retail group Pataskala OH US February 2009 to February 2010 Description This project has been designed to provide efficient and secure online shopping facilities to the customers Items will be categorized on the basis of the item price and type of item etc This Application also offers various operations relating to their orders such as expediting canceling and splitting the order Status of their order is also displayed upon request Responsibility Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering analysis design development testing and production environments Worked on Agile Development Methodology using Scrum concepts Created struts form beans action classes JSPs following Struts framework standards Implemented Struts Framework and Hibernate in the new version of the Application Designed and developed the front end using HTML CSS and JavaScript Used Web services SOAP for transmission of large blocks of XML data over HTTP Used XML Web Services using SOAP protocol to transfer the amount to other application that is remote and global to different financial institutions used SoapUI for web service testing Implemented the database connectivity using JDBC with Oracle 9i database as backend Extensively used Core Java such as MultiThreading Exceptions and Collections Developed real time tracking of class schedules using NodeJS Socketio ExpressJS framework Developed the UNIX shell scripts to automate jobs Worked on Junit for creating test cases for all the Business Rules and the application code Hosted the application on WebSphere and used Maven as the build automation tool Environment Java 60 Struts Framework 20 Hibernate 30 EJB SOAP Web Services HTML CSS NodeJs ExpressJs WebSphere Application Server 70 JUnit UNIX JavaScript Servlets JSP JDBC JQuery XML XSLT Education Bachelors Skills J2EE 9 years JAVA 9 years jQuery 7 years DATABASE 9 years SQL 8 years Additional Information Technical Skills JavaJ2EE Technologies Servlets JSP JSTL JDBC JMS JNDI RMI EJB JFCSwing AWT Applets Multithreading Java Networking Programming Languages Java JDK 1415161718 C C SQL PLSQL Python Scala Golang ApplicationWeb Servers OracleBEA WebLogic 8191103 IBM WebSphere 51606170 Jboss Tomcat 502860 Bug tracking Jenkins Cucumber IDEs Eclipse Spring STS IntelliJ WebStorm NetBeans Web technologies HTML5 CSS3 XHTML JavaScriptES6 TypeScript Ajax JQuery AngularJS Angular 2 Angular 4 ReactJS NodeJS Socketio ExpressJS JSON Swagger UI Bootstrap AWS Skills EC2 S3 RDS EBS IAM AMI ELB CLI SNS RDS VPN NAT GIT DNS Route53 DBA Dynamo DB Web Services JAXWS JAXRPC JAXRS SOAP REST SOAP UI Microservices Methodologies Agile Scrum RUP TDD OOAD SDLC Waterfall model Modeling Tools UML Rational Rose Visio Message Brokers Kafka RabbitMQ ActiveMQ TIBCO IBMMQ Testing technologiestools JUnit JMeter Protractor Mockito Database Oracle 8i9i10g11G DB2 SQL Server 20052008 MySQL PostgreSQL MongoDB Cassandra Big Data Tools Hadoop Spark MapReduce HDFS HBase Zookeeper Hive Sqoop Cassandra Flume Couchbase MongoDB Neo4J Redis MLlib Version Control CVS SVN Git Stash Bitbucket Build Tools ANT Maven Gradle Spring Tools Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Micro services Spring REST Spring Eureka Consul Swagger UI Sleuth and Spring Zuul Feign Client Platforms Windows 10720009895NT40 LINUX UNIX",
    "unique_id": "50fd9510-9d22-4514-af11-0f08e721b333"
}