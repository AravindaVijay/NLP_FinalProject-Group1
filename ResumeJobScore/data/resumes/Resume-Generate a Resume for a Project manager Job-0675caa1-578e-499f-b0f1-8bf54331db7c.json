{
    "clean_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER SYMANTEC Los Angeles CA 4 Years of Experience in creating multiple Web Based Software applications using Python Django Angular Node JS and Express JS Involved in all phases of software development life cycle SDLC including gathering Requirements Analysis Design Implementation Testing and Maintenance of python web applications Experience in developing APIs for the application using Python Django MongoDB Express JS Angular and NodeJS Familiar with the installation of various packages such as express mongoose bodyparser etc using the node package manager npm Proficiency in creating single page applications SPA using HTML5 CSS3 CICD Script JavaScript Angular Bootstrap Experience in developing applications using Model Template View architecture using Python and Django web application framework Extensive experience in developing Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular2 Used AJAX and jQuery for transmitting JSON data objects between frontend and backend Experience in building MEAN applications using MongoDB ExpressJS Angular Node JS creating Web services components of Restful Web services to interact with UI Interfaces using REST API with Node JS Express JS Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Used JQuery for selecting particular DOM elements when parsing HTML Experience on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Implemented serverside technologies with restful API and MVC design patterns with Django framework Experience in implementation of Django objectrelational mapping layers ORM effectively Experience in setting up REST API Framework using Python Django Rest Framework Hands on experience in Designing and developing APIs for the application using Python Django MongoDB Express ReactJS and NodeJS Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Created RESTful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB and used SOAP and Restful API for information extraction Developed a custom skill My Office Assistant in Alexa using AWS lambda function written in Python which connects to an accounting CRM and get the information that it is being requested for Created functions and assigned roles in AWS Lambda to run python scripts Used AWS Lambda with java to perform event driven processing Created Lambda jobs and configured Roles using AWS CLI Experienced with Python Data Science libraries such as NumPy Matplotlib and Pandas for data manipulation and analysis Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Proficiency in implementing and working with CRUD operations inside MySQL SQLite and MongoDB understanding of Pythons best practices PEP8 and unit testing experience in working with various Python Integrated Development PyCharm Eclipse Sublime Text and Notepad Strong familiarity with Agile Scrum Methodologies in Software Development experience in deploying the web application using Amazon Web Services experience in using version control systems like GitHub Work Experience PYTHON DEVELOPER SYMANTEC Mountain View CA April 2018 to Present Responsibilities Integrated the Django application with SQLite database management system in this project involved in creating data models in Django and Django migrations Experienced in developing a portal to manage and entities in a content management system using Python and Django Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS and jQuery Created Models Views and templates using Django Framework used NumPy for any mathematical calculations and created data analysis models with Pandas and matplotlib Involved in Architecture and Capacity planning for MongoDB Cassandra multishaded clusters Implemented python scripts for mongo DB import export dump and restore Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Responsible for on boarding Application teams to build and deploy their code using Git Hub Jenkins Nexus and Ansible Developed a Django REST web services using Python and Django to retrieve and save data developed and tested features for UI using Python HTML CICD Script CSS and JavaScript Automated builds using Maven and scheduled automated nightly builds using Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL and created data access modules in python Used Django REST APIs to access the database designed and developed a responsive UI page using Bootstrap Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Skilled in using Pythons collections module for manipulating and looping through different user defined objects and developed user interface using CSS HTML CICD Script JavaScript and jQuery Gathered and analyzed the requirements and converted them into User Requirement Specifications and Functional Requirement Specifications for the designers and developers to understand them as per their perspective Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazons EC2 instances Worked on objectoriented programming OOP concepts using Python Django and Linux and developed webbased applications using python Django XML CSS HTML JavaScript Angular JS and JQuery Experience with JSON based REST Web services and Amazon Web Services AWS and worked on Amazon services like Amazon Cloud EC2 Worked on ReactJS for its code reusability and integrated Bootstrap Used Redux architecture in the whole process to connect Actions Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL database package Worked on ReactJs Virtual Dom and React views rendering using components which contains additional components called custom HTML tags PYTHON DEVELOPER ACTIVISION BLIZZARD Santa Monica CA November 2016 to July 2017 Responsibilities Connected the database and the application server by using the Mongoose and created a RESTful API server with Nodejs and Express Developed interfaces using JavaScript HTML technologies for several web applications to fetch and graphically present required data from database Analyzed and improved application efficiency by optimizing queries and caching contents for Django Using Node JS Express JS handled HTTP RequestResponse calls using Angular Router module and developed a Single Page Application Developed crossbrowserplatform with ReactJs nodeJs JQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Prepared test data files using Linux Shell scripts Perl script as per the business requirements Experience in developing python scripts for automation and performing functional tests and data validation Created methods get post put delete to make requests to the Node API server and tested Restful API using postman Successfully created and debugged many PL SQL procedures functions and Packages for the application Used Restful Web services for integration with various monitoring devices Created Docker images using a Docker file worked on Docker container snapshots removing images and managing Docker volumes Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Used Mongoose to access the MongoDB from Node JS and used Angular CLI and NPM for scaffolding the Angular Application Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Managed developed and designed a dashboard control panel for customers and Administrators using Django Used Angular services to consume the REST APIs and retrieve data from database and Angular Pipes to filter the data to display it in the view Assisted in developing the MVT design of the staffuser and login modules run on Django Framework Deployed Docker containerized applications using Kubernetes in Google Cloud Platform GCP Used Djangos builtin authentication for the purposes of Login authentication and security created and managed the admin customization by building extended user models using Django framework Used MongoDB as the database for this Django Web application and Python packages like NumPy Pandas to perform and display the analysis on medical records Worked on a variety of ecommerce websites creating toast notifications statistical reporting call center enhancements and bug fixes using ASP CICD Script PHP MySQL HTML JavaScript Expertise in developing consumerbased features and applications with Python Django HTML Behavior Driven Development BDD and pairbased programming Worked on creating the Docker containers and Docker consoles for managing the application life cycle Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap assisted in developing the user interface using HTML5 CSS3 Angular and Bootstrap Involved for debugging and troubleshooting the code and participated in deploying the application using AWS and maintained the Version and Backups of the source using GitHub PYTHON DEVELOPER MASTERCARD MAHARASHTRA MAHARASHTRA IN November 2014 to September 2016 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications and develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster and implemented RESTful WebServices for sending and receiving the data between multiple systems Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Worked on design and development of Unix Shell Scripting as a part of the ETL Process to automate the process of loading Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Implemented Bash Perl Python scripting to automate many daytoday tasks Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Docker AWS etc Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Involved in various phases of the project like Analysis Design Development and Testing and developed and tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading and created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Used AngularJS Services for consuming RESTful APIs and utilized Postman tool to debug Web API Tested and debugged the product in controlled and real situations and deployed third partys applications using various CI tools like Jenkin Education Masters Skills JQuery Django Docker Jenkins CICD Ansible Automation Scripting Reactjs S3 EC2 Mongo AWS 4 years",
    "entities": [
        "Continuous Deployment Application Server",
        "Created Lambda",
        "AJAX",
        "Designing",
        "GitHub Work Experience PYTHON DEVELOPER SYMANTEC",
        "Analysis Design Development and Testing",
        "UNIX",
        "Interfacing",
        "JSON",
        "CSS HTML",
        "OpenStack",
        "PL SQL",
        "Amazon Web Services AWS",
        "SOAP",
        "XML",
        "Restful Web",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "PyUnit",
        "Used EC2 Container Service",
        "Shell",
        "Python Django MongoDB",
        "Amazon",
        "Selenium Automation",
        "Created RESTful",
        "Assisted",
        "Developed",
        "CSS Bootstrap",
        "AWS S3",
        "WebServices",
        "MVT",
        "Django",
        "Alexa",
        "jQuery Gathered",
        "Jenkins on Scrumbasis Experienced",
        "Santa Monica",
        "Jenkin Education Masters Skills",
        "Kubernetes Worked",
        "Flask",
        "Oracle DB2",
        "Version",
        "SQL Queries",
        "Jenkins Built Jenkins",
        "Docker",
        "GitHub PYTHON DEVELOPER MASTERCARD MAHARASHTRA MAHARASHTRA",
        "DOM",
        "NodeJS Developed",
        "PEP8",
        "ReactJs Virtual Dom",
        "CLI",
        "Created Docker",
        "MVC",
        "Flask SQL Alchemy",
        "UnixLinux",
        "Python Integrated Development PyCharm",
        "Node JS",
        "HTML CSS",
        "API",
        "Python Django Rest Framework Hands",
        "Python Django MongoDB Express",
        "Created",
        "AWS",
        "Jenkins Docker Ansible",
        "AWS SNS Wrote",
        "Django Using Node JS Express",
        "jQuery Created Models Views",
        "HTML",
        "SQL",
        "Amazon Web Services",
        "User Requirement Specifications and Functional Requirement Specifications",
        "Kubernetes",
        "the Angular Application Implemented",
        "NPM",
        "Administrators",
        "SSH",
        "SQL Alchemy",
        "CI",
        "CICD",
        "Amazon AWS",
        "GIT SVN",
        "BOOTSTRAP UI",
        "Pandas",
        "SQLite",
        "CRUD",
        "Present Responsibilities Integrated the Django",
        "Maven",
        "Node JS Express",
        "Created UI",
        "JavaScript",
        "RedisCache",
        "Nodejs and Express Developed",
        "HTTP RequestResponse",
        "Continuous Integration",
        "ASP",
        "SQL Queries Stored",
        "CSS",
        "Node API",
        "jQuery",
        "the ETL Process",
        "Amazons EC2",
        "SPA",
        "Python Data Science",
        "REST",
        "UI Interfaces",
        "Requirements Analysis Design Implementation Testing and Maintenance",
        "HTML5CSS3",
        "Application",
        "Python HTML CICD Script CSS",
        "Mongoose",
        "Django Framework Deployed Docker"
    ],
    "experience": "Experience in creating multiple Web Based Software applications using Python Django Angular Node JS and Express JS Involved in all phases of software development life cycle SDLC including gathering Requirements Analysis Design Implementation Testing and Maintenance of python web applications Experience in developing APIs for the application using Python Django MongoDB Express JS Angular and NodeJS Familiar with the installation of various packages such as express mongoose bodyparser etc using the node package manager npm Proficiency in creating single page applications SPA using HTML5 CSS3 CICD Script JavaScript Angular Bootstrap Experience in developing applications using Model Template View architecture using Python and Django web application framework Extensive experience in developing Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular2 Used AJAX and jQuery for transmitting JSON data objects between frontend and backend Experience in building MEAN applications using MongoDB ExpressJS Angular Node JS creating Web services components of Restful Web services to interact with UI Interfaces using REST API with Node JS Express JS Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Used JQuery for selecting particular DOM elements when parsing HTML Experience on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Implemented serverside technologies with restful API and MVC design patterns with Django framework Experience in implementation of Django objectrelational mapping layers ORM effectively Experience in setting up REST API Framework using Python Django Rest Framework Hands on experience in Designing and developing APIs for the application using Python Django MongoDB Express ReactJS and NodeJS Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Created RESTful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB and used SOAP and Restful API for information extraction Developed a custom skill My Office Assistant in Alexa using AWS lambda function written in Python which connects to an accounting CRM and get the information that it is being requested for Created functions and assigned roles in AWS Lambda to run python scripts Used AWS Lambda with java to perform event driven processing Created Lambda jobs and configured Roles using AWS CLI Experienced with Python Data Science libraries such as NumPy Matplotlib and Pandas for data manipulation and analysis Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Proficiency in implementing and working with CRUD operations inside MySQL SQLite and MongoDB understanding of Pythons best practices PEP8 and unit testing experience in working with various Python Integrated Development PyCharm Eclipse Sublime Text and Notepad Strong familiarity with Agile Scrum Methodologies in Software Development experience in deploying the web application using Amazon Web Services experience in using version control systems like GitHub Work Experience PYTHON DEVELOPER SYMANTEC Mountain View CA April 2018 to Present Responsibilities Integrated the Django application with SQLite database management system in this project involved in creating data models in Django and Django migrations Experienced in developing a portal to manage and entities in a content management system using Python and Django Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS and jQuery Created Models Views and templates using Django Framework used NumPy for any mathematical calculations and created data analysis models with Pandas and matplotlib Involved in Architecture and Capacity planning for MongoDB Cassandra multishaded clusters Implemented python scripts for mongo DB import export dump and restore Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Responsible for on boarding Application teams to build and deploy their code using Git Hub Jenkins Nexus and Ansible Developed a Django REST web services using Python and Django to retrieve and save data developed and tested features for UI using Python HTML CICD Script CSS and JavaScript Automated builds using Maven and scheduled automated nightly builds using Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL and created data access modules in python Used Django REST APIs to access the database designed and developed a responsive UI page using Bootstrap Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Skilled in using Pythons collections module for manipulating and looping through different user defined objects and developed user interface using CSS HTML CICD Script JavaScript and jQuery Gathered and analyzed the requirements and converted them into User Requirement Specifications and Functional Requirement Specifications for the designers and developers to understand them as per their perspective Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazons EC2 instances Worked on objectoriented programming OOP concepts using Python Django and Linux and developed webbased applications using python Django XML CSS HTML JavaScript Angular JS and JQuery Experience with JSON based REST Web services and Amazon Web Services AWS and worked on Amazon services like Amazon Cloud EC2 Worked on ReactJS for its code reusability and integrated Bootstrap Used Redux architecture in the whole process to connect Actions Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL database package Worked on ReactJs Virtual Dom and React views rendering using components which contains additional components called custom HTML tags PYTHON DEVELOPER ACTIVISION BLIZZARD Santa Monica CA November 2016 to July 2017 Responsibilities Connected the database and the application server by using the Mongoose and created a RESTful API server with Nodejs and Express Developed interfaces using JavaScript HTML technologies for several web applications to fetch and graphically present required data from database Analyzed and improved application efficiency by optimizing queries and caching contents for Django Using Node JS Express JS handled HTTP RequestResponse calls using Angular Router module and developed a Single Page Application Developed crossbrowserplatform with ReactJs nodeJs JQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Prepared test data files using Linux Shell scripts Perl script as per the business requirements Experience in developing python scripts for automation and performing functional tests and data validation Created methods get post put delete to make requests to the Node API server and tested Restful API using postman Successfully created and debugged many PL SQL procedures functions and Packages for the application Used Restful Web services for integration with various monitoring devices Created Docker images using a Docker file worked on Docker container snapshots removing images and managing Docker volumes Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Used Mongoose to access the MongoDB from Node JS and used Angular CLI and NPM for scaffolding the Angular Application Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Managed developed and designed a dashboard control panel for customers and Administrators using Django Used Angular services to consume the REST APIs and retrieve data from database and Angular Pipes to filter the data to display it in the view Assisted in developing the MVT design of the staffuser and login modules run on Django Framework Deployed Docker containerized applications using Kubernetes in Google Cloud Platform GCP Used Djangos builtin authentication for the purposes of Login authentication and security created and managed the admin customization by building extended user models using Django framework Used MongoDB as the database for this Django Web application and Python packages like NumPy Pandas to perform and display the analysis on medical records Worked on a variety of ecommerce websites creating toast notifications statistical reporting call center enhancements and bug fixes using ASP CICD Script PHP MySQL HTML JavaScript Expertise in developing consumerbased features and applications with Python Django HTML Behavior Driven Development BDD and pairbased programming Worked on creating the Docker containers and Docker consoles for managing the application life cycle Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap assisted in developing the user interface using HTML5 CSS3 Angular and Bootstrap Involved for debugging and troubleshooting the code and participated in deploying the application using AWS and maintained the Version and Backups of the source using GitHub PYTHON DEVELOPER MASTERCARD MAHARASHTRA MAHARASHTRA IN November 2014 to September 2016 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications and develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster and implemented RESTful WebServices for sending and receiving the data between multiple systems Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Worked on design and development of Unix Shell Scripting as a part of the ETL Process to automate the process of loading Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Implemented Bash Perl Python scripting to automate many daytoday tasks Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Docker AWS etc Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Involved in various phases of the project like Analysis Design Development and Testing and developed and tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading and created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Used AngularJS Services for consuming RESTful APIs and utilized Postman tool to debug Web API Tested and debugged the product in controlled and real situations and deployed third partys applications using various CI tools like Jenkin Education Masters Skills JQuery Django Docker Jenkins CICD Ansible Automation Scripting Reactjs S3 EC2 Mongo AWS 4 years",
    "extracted_keywords": [
        "PYTHON",
        "DEVELOPER",
        "lPYTHONspan",
        "span",
        "lDEVELOPERspan",
        "PYTHON",
        "DEVELOPER",
        "SYMANTEC",
        "Los",
        "Angeles",
        "CA",
        "Years",
        "Experience",
        "Web",
        "Software",
        "applications",
        "Python",
        "Django",
        "Angular",
        "Node",
        "JS",
        "Express",
        "JS",
        "phases",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "Requirements",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Maintenance",
        "python",
        "web",
        "applications",
        "Experience",
        "APIs",
        "application",
        "Python",
        "Django",
        "MongoDB",
        "Express",
        "JS",
        "Angular",
        "NodeJS",
        "Familiar",
        "installation",
        "packages",
        "express",
        "bodyparser",
        "package",
        "manager",
        "npm",
        "Proficiency",
        "page",
        "applications",
        "SPA",
        "HTML5",
        "CSS3",
        "CICD",
        "Script",
        "JavaScript",
        "Angular",
        "Bootstrap",
        "Experience",
        "applications",
        "Model",
        "Template",
        "View",
        "architecture",
        "Python",
        "Django",
        "web",
        "application",
        "framework",
        "experience",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "JavaScript",
        "frameworks",
        "ReactJS",
        "Angular2",
        "AJAX",
        "jQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "Experience",
        "MEAN",
        "applications",
        "ExpressJS",
        "Angular",
        "Node",
        "JS",
        "Web",
        "services",
        "components",
        "Restful",
        "Web",
        "services",
        "UI",
        "Interfaces",
        "REST",
        "API",
        "Node",
        "JS",
        "Express",
        "JS",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "JQuery",
        "DOM",
        "elements",
        "HTML",
        "Experience",
        "life",
        "cycle",
        "policies",
        "data",
        "AWS",
        "S3",
        "AWS",
        "Glacier",
        "AWS",
        "EC2",
        "S3",
        "CLI",
        "tools",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "Django",
        "framework",
        "Experience",
        "implementation",
        "Django",
        "mapping",
        "layers",
        "ORM",
        "REST",
        "API",
        "Framework",
        "Python",
        "Django",
        "Rest",
        "Framework",
        "Hands",
        "experience",
        "Designing",
        "APIs",
        "application",
        "Python",
        "Django",
        "MongoDB",
        "Express",
        "ReactJS",
        "NodeJS",
        "user",
        "interface",
        "BOOTSTRAP",
        "UI",
        "Angular",
        "JavaScript",
        "complexities",
        "application",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "SOAP",
        "API",
        "information",
        "extraction",
        "custom",
        "skill",
        "Office",
        "Assistant",
        "Alexa",
        "AWS",
        "lambda",
        "function",
        "Python",
        "accounting",
        "CRM",
        "information",
        "Created",
        "functions",
        "roles",
        "AWS",
        "Lambda",
        "scripts",
        "AWS",
        "Lambda",
        "java",
        "event",
        "processing",
        "Lambda",
        "jobs",
        "Roles",
        "AWS",
        "CLI",
        "Python",
        "Data",
        "Science",
        "NumPy",
        "Matplotlib",
        "Pandas",
        "data",
        "manipulation",
        "analysis",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "DB2",
        "MySQL",
        "Proficiency",
        "CRUD",
        "operations",
        "MySQL",
        "SQLite",
        "understanding",
        "Pythons",
        "practices",
        "PEP8",
        "unit",
        "testing",
        "experience",
        "Python",
        "Integrated",
        "Development",
        "PyCharm",
        "Eclipse",
        "Sublime",
        "Text",
        "Notepad",
        "Strong",
        "familiarity",
        "Agile",
        "Scrum",
        "Methodologies",
        "Software",
        "Development",
        "experience",
        "web",
        "application",
        "Amazon",
        "Web",
        "Services",
        "experience",
        "version",
        "control",
        "systems",
        "GitHub",
        "Work",
        "Experience",
        "PYTHON",
        "DEVELOPER",
        "SYMANTEC",
        "Mountain",
        "View",
        "CA",
        "April",
        "Present",
        "Responsibilities",
        "Django",
        "application",
        "database",
        "management",
        "system",
        "project",
        "data",
        "models",
        "Django",
        "Django",
        "migrations",
        "portal",
        "entities",
        "content",
        "management",
        "system",
        "Python",
        "Django",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "jQuery",
        "Created",
        "Models",
        "Views",
        "templates",
        "Django",
        "Framework",
        "NumPy",
        "calculations",
        "data",
        "analysis",
        "models",
        "Pandas",
        "matplotlib",
        "Architecture",
        "Capacity",
        "planning",
        "Cassandra",
        "clusters",
        "scripts",
        "mongo",
        "DB",
        "import",
        "export",
        "dump",
        "Wrote",
        "Ansible",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "boarding",
        "Application",
        "teams",
        "code",
        "Git",
        "Hub",
        "Jenkins",
        "Nexus",
        "Ansible",
        "Django",
        "REST",
        "web",
        "services",
        "Python",
        "Django",
        "data",
        "features",
        "UI",
        "Python",
        "HTML",
        "CICD",
        "Script",
        "CSS",
        "JavaScript",
        "Automated",
        "builds",
        "Maven",
        "builds",
        "Jenkins",
        "Built",
        "Jenkins",
        "pipeline",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "POC",
        "application",
        "service",
        "architecture",
        "architecture",
        "Docker",
        "container",
        "technology",
        "Kubernetes",
        "REST",
        "API",
        "Developed",
        "Python",
        "APIs",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "data",
        "access",
        "modules",
        "python",
        "Used",
        "Django",
        "REST",
        "APIs",
        "database",
        "UI",
        "page",
        "Bootstrap",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "monitoring",
        "playbooks",
        "Integrated",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Skilled",
        "Pythons",
        "collections",
        "module",
        "user",
        "objects",
        "user",
        "interface",
        "CSS",
        "HTML",
        "CICD",
        "Script",
        "JavaScript",
        "jQuery",
        "Gathered",
        "requirements",
        "User",
        "Requirement",
        "Specifications",
        "Functional",
        "Requirement",
        "Specifications",
        "designers",
        "developers",
        "perspective",
        "EC2",
        "Container",
        "Service",
        "ECS",
        "Docker",
        "containers",
        "applications",
        "cluster",
        "Amazons",
        "EC2",
        "instances",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Django",
        "Linux",
        "applications",
        "python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "Experience",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Amazon",
        "services",
        "Amazon",
        "Cloud",
        "EC2",
        "ReactJS",
        "code",
        "reusability",
        "Bootstrap",
        "Used",
        "Redux",
        "architecture",
        "process",
        "Actions",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "test",
        "cases",
        "PyUnit",
        "Selenium",
        "Automation",
        "testing",
        "manipulation",
        "test",
        "scripts",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "database",
        "package",
        "ReactJs",
        "Virtual",
        "Dom",
        "React",
        "views",
        "components",
        "components",
        "custom",
        "HTML",
        "PYTHON",
        "DEVELOPER",
        "ACTIVISION",
        "BLIZZARD",
        "Santa",
        "Monica",
        "CA",
        "November",
        "July",
        "Responsibilities",
        "database",
        "application",
        "server",
        "Mongoose",
        "API",
        "server",
        "Nodejs",
        "Express",
        "interfaces",
        "JavaScript",
        "HTML",
        "technologies",
        "web",
        "applications",
        "data",
        "database",
        "application",
        "efficiency",
        "queries",
        "contents",
        "Django",
        "Node",
        "JS",
        "Express",
        "JS",
        "HTTP",
        "RequestResponse",
        "Angular",
        "Router",
        "module",
        "Single",
        "Page",
        "Application",
        "crossbrowserplatform",
        "ReactJs",
        "nodeJs",
        "JQuery",
        "AJAX",
        "HTML5CSS3",
        "design",
        "specs",
        "page",
        "layout",
        "code",
        "standards",
        "UI",
        "scratch",
        "ReactJs",
        "Prepared",
        "test",
        "data",
        "files",
        "Linux",
        "Shell",
        "Perl",
        "script",
        "business",
        "requirements",
        "Experience",
        "python",
        "scripts",
        "automation",
        "tests",
        "data",
        "validation",
        "methods",
        "post",
        "requests",
        "Node",
        "API",
        "server",
        "Restful",
        "API",
        "postman",
        "PL",
        "SQL",
        "procedures",
        "functions",
        "Packages",
        "application",
        "Restful",
        "Web",
        "services",
        "integration",
        "monitoring",
        "devices",
        "Docker",
        "images",
        "Docker",
        "file",
        "Docker",
        "container",
        "snapshots",
        "images",
        "Docker",
        "volumes",
        "web",
        "application",
        "configurations",
        "servers",
        "Ansible",
        "Used",
        "Mongoose",
        "MongoDB",
        "Node",
        "JS",
        "Angular",
        "CLI",
        "NPM",
        "Angular",
        "Application",
        "programming",
        "automations",
        "Jenkins",
        "Ansible",
        "UnixLinux",
        "OS",
        "cloud",
        "Docker",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Angular",
        "services",
        "REST",
        "APIs",
        "data",
        "database",
        "Angular",
        "Pipes",
        "data",
        "view",
        "MVT",
        "design",
        "staffuser",
        "modules",
        "Django",
        "Framework",
        "Deployed",
        "Docker",
        "applications",
        "Kubernetes",
        "Google",
        "Cloud",
        "Platform",
        "GCP",
        "Djangos",
        "builtin",
        "authentication",
        "purposes",
        "Login",
        "authentication",
        "security",
        "admin",
        "customization",
        "user",
        "models",
        "Django",
        "framework",
        "MongoDB",
        "database",
        "Django",
        "Web",
        "application",
        "Python",
        "packages",
        "NumPy",
        "Pandas",
        "analysis",
        "records",
        "variety",
        "ecommerce",
        "websites",
        "toast",
        "notifications",
        "reporting",
        "call",
        "center",
        "enhancements",
        "bug",
        "fixes",
        "ASP",
        "CICD",
        "Script",
        "PHP",
        "MySQL",
        "HTML",
        "JavaScript",
        "Expertise",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "forms",
        "HTML",
        "validations",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "user",
        "interface",
        "HTML5",
        "CSS3",
        "Angular",
        "Bootstrap",
        "code",
        "application",
        "AWS",
        "Version",
        "Backups",
        "source",
        "GitHub",
        "PYTHON",
        "DEVELOPER",
        "MASTERCARD",
        "MAHARASHTRA",
        "MAHARASHTRA",
        "November",
        "September",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Worked",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "Wrote",
        "Python",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "Integrated",
        "RedisCache",
        "Djangorestframework",
        "data",
        "WebServices",
        "data",
        "systems",
        "Experience",
        "playbooks",
        "applications",
        "infrastructure",
        "activities",
        "Continuous",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Delivery",
        "CD",
        "process",
        "implementation",
        "Jenkins",
        "Shell",
        "script",
        "design",
        "development",
        "Unix",
        "Shell",
        "Scripting",
        "part",
        "ETL",
        "Process",
        "process",
        "loading",
        "Jenkins",
        "configuring",
        "integration",
        "CI",
        "End",
        "End",
        "automation",
        "build",
        "Development",
        "code",
        "Python",
        "code",
        "Companys",
        "Source",
        "control",
        "Bitbucket",
        "Companys",
        "Sever",
        "CICD",
        "procedures",
        "Jenkins",
        "Scrumbasis",
        "design",
        "patterns",
        "MVC",
        "Django",
        "Flask",
        "application",
        "Apache",
        "tomcat",
        "server",
        "applications",
        "Docker",
        "Bash",
        "Perl",
        "Python",
        "daytoday",
        "tasks",
        "notification",
        "service",
        "request",
        "AWS",
        "API",
        "Gateway",
        "response",
        "Lambda",
        "data",
        "Dynamo",
        "DB",
        "notification",
        "AWS",
        "SNS",
        "Wrote",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "development",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "XML",
        "format",
        "Knowledge",
        "DevOps",
        "Environment",
        "automation",
        "engineer",
        "technologies",
        "applications",
        "GIT",
        "SVN",
        "Puppet",
        "Docker",
        "AWS",
        "integration",
        "deployments",
        "Jenkins",
        "Docker",
        "Ansible",
        "AWS",
        "Cloud",
        "Templates",
        "Docker",
        "images",
        "Docker",
        "Hub",
        "phases",
        "project",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "loading",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Work",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "programming",
        "automations",
        "Jenkins",
        "Ansible",
        "UnixLinux",
        "OS",
        "cloud",
        "Docker",
        "Services",
        "APIs",
        "Postman",
        "tool",
        "Web",
        "API",
        "product",
        "situations",
        "applications",
        "CI",
        "tools",
        "Jenkin",
        "Education",
        "Masters",
        "Skills",
        "JQuery",
        "Django",
        "Docker",
        "Jenkins",
        "CICD",
        "Ansible",
        "Automation",
        "Scripting",
        "Reactjs",
        "S3",
        "EC2",
        "Mongo",
        "AWS",
        "years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:55:06.893887",
    "resume_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER SYMANTEC Los Angeles CA 4 Years of Experience in creating multiple Web Based Software applications using Python Django Angular Node JS and Express JS Involved in all phases of software development life cycle SDLC including gathering Requirements Analysis Design Implementation Testing and Maintenance of python web applications Experience in developing APIs for the application using Python Django MongoDB Express JS Angular and NodeJS Familiar with the installation of various packages such as express mongoose bodyparser etc using the node package manager npm Proficiency in creating single page applications SPA using HTML5 CSS3 CICD Script JavaScript Angular Bootstrap Experience in developing applications using Model Template View architecture using Python and Django web application framework Extensive experience in developing Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular2 Used AJAX and jQuery for transmitting JSON data objects between frontend and backend Experience in building MEAN applications using MongoDB ExpressJS Angular Node JS creating Web services components of Restful Web services to interact with UI Interfaces using REST API with Node JS Express JS Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Used JQuery for selecting particular DOM elements when parsing HTML Experience on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Implemented serverside technologies with restful API and MVC design patterns with Django framework Experience in implementation of Django objectrelational mapping layers ORM effectively Experience in setting up REST API Framework using Python Django Rest Framework Hands on experience in Designing and developing APIs for the application using Python Django MongoDB Express ReactJS and NodeJS Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Created RESTful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB and used SOAP and Restful API for information extraction Developed a custom skill My Office Assistant in Alexa using AWS lambda function written in Python which connects to an accounting CRM and get the information that it is being requested for Created functions and assigned roles in AWS Lambda to run python scripts Used AWS Lambda with java to perform event driven processing Created Lambda jobs and configured Roles using AWS CLI Experienced with Python Data Science libraries such as NumPy Matplotlib and Pandas for data manipulation and analysis Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Proficiency in implementing and working with CRUD operations inside MySQL SQLite and MongoDB understanding of Pythons best practices PEP8 and unit testing experience in working with various Python Integrated Development PyCharm Eclipse Sublime Text and Notepad Strong familiarity with Agile Scrum Methodologies in Software Development experience in deploying the web application using Amazon Web Services experience in using version control systems like GitHub Work Experience PYTHON DEVELOPER SYMANTEC Mountain View CA April 2018 to Present Responsibilities Integrated the Django application with SQLite database management system in this project involved in creating data models in Django and Django migrations Experienced in developing a portal to manage and entities in a content management system using Python and Django Designed and managed API system deployment using fast http server and Amazon AWS architecture Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS and jQuery Created Models Views and templates using Django Framework used NumPy for any mathematical calculations and created data analysis models with Pandas and matplotlib Involved in Architecture and Capacity planning for MongoDB Cassandra multishaded clusters Implemented python scripts for mongo DB import export dump and restore Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Responsible for on boarding Application teams to build and deploy their code using Git Hub Jenkins Nexus and Ansible Developed a Django REST web services using Python and Django to retrieve and save data developed and tested features for UI using Python HTML CICD Script CSS and JavaScript Automated builds using Maven and scheduled automated nightly builds using Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Developed Python based APIs by using Flask SQL Alchemy and PostgreSQL and created data access modules in python Used Django REST APIs to access the database designed and developed a responsive UI page using Bootstrap Automated various infrastructure activities like Continuous Deployment Application Server setup Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins Skilled in using Pythons collections module for manipulating and looping through different user defined objects and developed user interface using CSS HTML CICD Script JavaScript and jQuery Gathered and analyzed the requirements and converted them into User Requirement Specifications and Functional Requirement Specifications for the designers and developers to understand them as per their perspective Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazons EC2 instances Worked on objectoriented programming OOP concepts using Python Django and Linux and developed webbased applications using python Django XML CSS HTML JavaScript Angular JS and JQuery Experience with JSON based REST Web services and Amazon Web Services AWS and worked on Amazon services like Amazon Cloud EC2 Worked on ReactJS for its code reusability and integrated Bootstrap Used Redux architecture in the whole process to connect Actions Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL database package Worked on ReactJs Virtual Dom and React views rendering using components which contains additional components called custom HTML tags PYTHON DEVELOPER ACTIVISION BLIZZARD Santa Monica CA November 2016 to July 2017 Responsibilities Connected the database and the application server by using the Mongoose and created a RESTful API server with Nodejs and Express Developed interfaces using JavaScript HTML technologies for several web applications to fetch and graphically present required data from database Analyzed and improved application efficiency by optimizing queries and caching contents for Django Using Node JS Express JS handled HTTP RequestResponse calls using Angular Router module and developed a Single Page Application Developed crossbrowserplatform with ReactJs nodeJs JQuery AJAX and HTML5CSS3 to desired design specs for single page layout using code standards Created UI from scratch using ReactJs Prepared test data files using Linux Shell scripts Perl script as per the business requirements Experience in developing python scripts for automation and performing functional tests and data validation Created methods get post put delete to make requests to the Node API server and tested Restful API using postman Successfully created and debugged many PL SQL procedures functions and Packages for the application Used Restful Web services for integration with various monitoring devices Created Docker images using a Docker file worked on Docker container snapshots removing images and managing Docker volumes Responsible for debugging and troubleshooting the web application Manage the configurations of multiple servers using Ansible Used Mongoose to access the MongoDB from Node JS and used Angular CLI and NPM for scaffolding the Angular Application Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Managed developed and designed a dashboard control panel for customers and Administrators using Django Used Angular services to consume the REST APIs and retrieve data from database and Angular Pipes to filter the data to display it in the view Assisted in developing the MVT design of the staffuser and login modules run on Django Framework Deployed Docker containerized applications using Kubernetes in Google Cloud Platform GCP Used Djangos builtin authentication for the purposes of Login authentication and security created and managed the admin customization by building extended user models using Django framework Used MongoDB as the database for this Django Web application and Python packages like NumPy Pandas to perform and display the analysis on medical records Worked on a variety of ecommerce websites creating toast notifications statistical reporting call center enhancements and bug fixes using ASP CICD Script PHP MySQL HTML JavaScript Expertise in developing consumerbased features and applications with Python Django HTML Behavior Driven Development BDD and pairbased programming Worked on creating the Docker containers and Docker consoles for managing the application life cycle Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap assisted in developing the user interface using HTML5 CSS3 Angular and Bootstrap Involved for debugging and troubleshooting the code and participated in deploying the application using AWS and maintained the Version and Backups of the source using GitHub PYTHON DEVELOPER MASTERCARD MAHARASHTRA MAHARASHTRA IN November 2014 to September 2016 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications and develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster and implemented RESTful WebServices for sending and receiving the data between multiple systems Experience in writing playbooks for Ansible and deploying applications using Ansible Automated various infrastructure activities like Continuous Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Worked on design and development of Unix Shell Scripting as a part of the ETL Process to automate the process of loading Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Implemented Bash Perl Python scripting to automate many daytoday tasks Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Docker AWS etc Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Involved in various phases of the project like Analysis Design Development and Testing and developed and tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading and created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Used AngularJS Services for consuming RESTful APIs and utilized Postman tool to debug Web API Tested and debugged the product in controlled and real situations and deployed third partys applications using various CI tools like Jenkin Education Masters Skills JQuery Django Docker Jenkins CICD Ansible Automation Scripting Reactjs S3 EC2 Mongo AWS 4 years",
    "unique_id": "0675caa1-578e-499f-b0f1-8bf54331db7c"
}