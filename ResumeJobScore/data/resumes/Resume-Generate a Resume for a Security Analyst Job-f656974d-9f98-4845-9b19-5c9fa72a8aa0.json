{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer State Farm TX Dallas TX Experience in software development in Python libraries used libraries Beautiful Soup numpy scipy re matplotlib Pythontwitter Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm emacs In depth knowledge of different web frameworks DjangoZope Pyramid Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in ObjectOriented design Good knowledge of various Design Patterns and UML Proficient in SQL databases MS SQL MySQL Oracle noSQL Mongo DB Cassandra Handson experience in UNIX and Linux Kernels Efficient in using Python Spark API and efficient in using apache Spark Efficient in using apache Hive and hive query language Used Hive to analyses data by writing SQL like queries called HiveQL Used Spark SQL to query structured data inside Spark programs using Data Frame API or SQL Working experience on Amazon Web Services AWS Cloud services like EC2 S3 EBS RDS VPC and IAM Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Provided security and managed user access and quota using AWS Identity and Access Management IAM Build servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Used AWS lambda to run code virtually Migrating physical LinuxWindows servers to cloud AWS and testing Basic knowledge in Front end development technologies like HTML XML CSS JQuery JSON and JavaScript DOJO Bootstrap Nodejs Angularjs backbonejs Requirejs Good knowledge of server Apache Tomcat Web logic Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Strong skills in writing technical and functional documents defined by the business requirements Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Maintained Automated Scripts and troubleshoot their issues for each Site Release Feature and Small Enhancement Project Well experienced in unit testing integration testing and endend testing Strong understanding of Agile and Scrum Software Development Life Cycle Methodologies Experienced in performing tests for nondeterministic code testing multithreaded code test design patterns and more Involved in the issue resolution and Root Cause Analysis Developmental experience on Windows NT95982000XP UNIX and LINUX platforms Authorized to work in the US for any employer Work Experience Python Developer State Farm TX March 2018 to Present Responsibilities Closely worked with Product owners for gathering business requirements design development and deployment Understanding product teams use cases to automate the manual task with phantom playbooks Used GITLAB version control tool to coordinate teamdevelopment Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript Bootstrap and JSON Installation and configuration Apache Web server on multiple servers Created Python modules to extract data from external PostgreSQL Designed Playbooks andapps for Phantom application Designed and implemented a userfriendly website interface using Python and Djangos view controller and templating language Responsible Identifying and implementing mechanism to onboarding multiple customers to phantom Production environment Upgrading Phantom Orchestration serversversions to latest versions using puppet configuration management tool Developed and tested many features for dashboard using Django CSS and JavaScript Responsible for maintaining Phantom application on multiple servers Responsible for debugging and troubleshooting Phantom web application in production environment Implemented RESTful WebServices for sending and receiving the data between multiple systems Involved in working with Python open stock APIs Experience in using containers like Docker Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernates and worked on with REST API Using a Dockerfilecreated docker images worked on Docker container removing images and managing Docker volumes Environment Python 27 Linux Django Flask Eclipse Shell Scripting HTML Git CSS AJAX Bug zilla Apache Web Server Apache spark Phantom Puppet Python Developer Metlife Warwick RI Warwick RI August 2017 to March 2018 Responsibilities Participated in the complete SDLC process Written many programs to parse excel file and process many user data with data validations Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies Designed high availability environment for Application servers and database servers on EC2 by using ELB and Autoscaling Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Add project users to the AWS account with multi factor authentication enabled and least privilege permissions AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Used Subversion version control tool to coordinate teamdevelopment Developed tools to automate some base tasks using Shell Scripting Python Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript Bootstrap and JSON Worked with Regular Expressions URLLIB modules Develop applications that use MongoDB database and PyMongo Integrating multiple databases and data sources in to one system Managed and trained peers on the installation of MYSQL and in writing queries to achieve performance optimization Created backend database TSQL stored procedures and Jasper Reports Wrote Python modules to extractload asset data from the MySQL source database Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Experience in Kubernetes writing the scripts in Perl and Shell Scripts for managing various enterprise applications Created multiple Python and UNIX shell Scripts for various application level tasks Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed and tested many features for dashboard using Django CSS and JavaScript Created unit testregression test framework for workingnew code Using Git as version control tool to coordinate teamdevelopment Built development environment with JIRA StashGit Developed entire frontend and backend modules using Python on Django Web Framework Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Created Docker images using a Docker file worked on Docker container snapshots removing images and managing Docker volumes Integration of MavenNexus Jenkins Urban Code Deploy with PatternsRelease Git Confluence Jira Developed automation scripting in Python core using Puppet to deploy and manage Java applications across Linux servers Responsible for debugging and troubleshooting the web application Participated in writing scripts for test automation Environment Python 27 AWS Django MySQL Oracle 112 Linux Django Eclipse Shell Scripting HTML XHTML Git CSS AJAX Bug zilla JavaScript Apache Web Server Apache spark Python Developer TIAA New York NY March 2016 to July 2017 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Experienced in build and deployment of Java applications on to different environments such as QA UAT and Production Build and deployment of scripts using python scripting Shell to setup development and QA environments Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Migrated applications to the AWS cloud Build and configure a virtual data centers in the Amazon Web Services cloud to support Enterprise Data Warehouse hosting including Virtual Private Cloud VPC Public and Private Subnets Security Groups Route Tables Elastic Load Balancer Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Use AWS Beanstalk for deploying and scaling web applications and services developed with Java Worked with Version Control tools like GIT Used Python and Django creating graphics XML json processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Packaging build Test and Deploy chain SVN with DevTestProd Branching Model for weekly releases Hands on standard of SCM tools Git CICD JenkinsMaven process Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Coordinated with developers Business Analyst and Mangers to make sure that code is deployed in the Production Environment Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Generated property list for every application dynamically using python Created branches in GIT implementation parallel development process Created deployment request tickets in Bugzilla for the deploying the code to Production Provided ongoing support and administration for Jenkins SonarQube fortify scan GIT and build automations Integrated Jenkins with various Devops tools such as Nexus Sonar Qube Puppet etc Involved in migration of CI tool stack from SVN to GIT Maven to Gradle Build force to Jenkins Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development Used Splunk for centralized logging and debugging experienced in Installing Configuring and Monitoring using NAGIOS Developed GIT hooks for the local repository code commit and remote repository code push functionality and on Git Hub Creating the Brokers for the use of Kubernetes Kafka zookeeper Installed Jenkins on Linux machines and created master and slave configurations to implement multiple parallel builds Environment AWS GIT Jenkins Nexus Django Linux PythonShell script Tomcat SVN Gradle Nagios Splunk Kubernetes Python Developer Zensar technologies Hyderabad Telangana February 2014 to November 2015 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Wrote python routines to log into the websites and fetch data for selected options Followed Agile Methodologies and SCRUM Process Develop programs to automate the testing of RAID controller firmware and utilities using Python Java Java Script Responsible for Amazon web services AWS infrastructure with automation and configuration management tool such as chef Worked on JavaScript MVC Framework like Angularjs Worked with Open Stack Commandline client Created backend database TSQL stored procedures and Jasper Reports Used Python modules such as requests urllib urllib2 for web crawling Worked on a resulting report of the application and Tableau reports Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Built kubernetes environment deployed via terraform Built AMIs with packer Setup a Docker cluster built own PaaS and used Kubernetescluster for orchestration and testing Deployed Docker containerized applications using Kubernetes in Google Cloud PlatformGCP Log monitoring and generating visual representations of logs using ELK stack Implement CICD tools Upgrade Backup Restore DNS LDAP and SSL setup Utilize PyUnit the Python unit test framework for all Python applications ExportedImported data between different data sources using SQL Server Management Studio Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Perform S3 buckets creation policies and IAM role based policies Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Deploy applications on AWS by using Elastic Beanstalk Environment Python 2730 Django 1518 AWS C XML Agile SCRUM PyUnit MYSQL CSS MySQL DHTML HTML JavaScript Angularjs Shell Scripts Git Linux Unix and Windows Python Developer IVY COMPTECH IN May 2013 to February 2014 Responsibilities Involved in the analysis and development of Software Development Life Cycle SDLC Contributed in developing a web services middletier in Python to integrate with an existing MySQL backend Wrote several internal API utilities and micro services to carry out specific tasks Wrote and executed exhaustive SQL queries using Python with help from various query builders in Python to frame the queries Migrated MySQL to NoSQL data store using ETL processes using Python Tasks included CRUD elaborate cleansing of data and packing it into the expected format JSON Developed Python scripts to perform auditing tasks and generating Excel reports to support engineering a logistics sales and inventory management system Worked as assistant to Web Programmer in creating DjangoFlask Web apps Generated sample JSON format queries for testing REST endpoints Frequently performed adhoc File IO tasks in python Dealt with CSV JSON Text XML and XLSX files Used shell scripting to automate repetitive tasks Followed a testdriven approach closely Used Pythons Unit Testing extensively Environment Python MySQL PostgreSQL Jira Flask REST JSON CSV Excel Eclipse Education Masters Skills AMAZON WEB SERVICES C DJANGO DOCKER Git Additional Information TECHNICAL SKILLS Cloud Amazon Web Services Python Libraries Pandas Numpy urlilib matplotlib UnitTest JSON CSV XML XLS Python Framework Django Flask Version Control Tools Git Github Web Technologies HTML CSS JavaScript Bug Tracking Tools Jira Bugzilla ServiceNow HPE Service Manager Scripting Languages Python Java HiveQL Advanced PLSQL SQL IDEs SplunkSQL Developer IntelliJ Languages C C Database Oracle 11g10g9i DB2 MSSQL Server MySQL MSAccess PostgreSQL NoSQL Mongo DB SQLite3 Software Development Lifecycle Agile Methodology Scrum framework Operating System Red Hat Ubuntu Debian Fedora CentOS Windows Solaris Mac OS Repository Management Nexus JFrog Artifactory Build Tools Maven Ant Gradle Web and Application Servers JBoss Apache Tomcat Web Sphere Web Logic Nginx Container Orchestration Tools Docker Swarm Kubernetes EC2 Container Services",
    "entities": [
        "Tomcat SVN Gradle Nagios Splunk Kubernetes Python Developer Zensar technologies",
        "REST API Created Docker",
        "ExportedImported",
        "Spark Efficient",
        "QA UAT",
        "JQuery Experienced",
        "UNIX",
        "webapp2",
        "Data Frame API",
        "Followed Agile Methodologies",
        "the Production Environment Wrote Python OO Design",
        "Amazon Web Services AWS",
        "Software Development Life Cycle SDLC Contributed",
        "XML",
        "DHTML",
        "Telangana",
        "Nexus Sonar Qube Puppet etc Involved",
        "Virtual Private Cloud VPC Public and Private Subnets Security Groups Route Tables Elastic Load Balancer Used EC2 Container Service",
        "Shell",
        "Devops",
        "TX",
        "Kubernates",
        "Amazon",
        "ELK",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "Windows Python Developer IVY COMPTECH",
        "Developed",
        "Upgrade Backup Restore DNS LDAP",
        "Shell Scripting Python Designed and Developed User Interface",
        "Business Analyst",
        "Version Control",
        "Dallas",
        "Jasper Reports Wrote",
        "Created Python",
        "Work Experience Python Developer State Farm",
        "Puppet",
        "Kanban",
        "ImportExport",
        "Jenkins Create Jenkins",
        "Linux",
        "Root Cause Analysis Developmental",
        "ObjectOriented",
        "Hyderabad",
        "Docker",
        "Used Pythons Unit Testing extensively Environment Python",
        "RDS",
        "SSL",
        "Django CSS",
        "Spark",
        "GITLAB",
        "GIT",
        "SQL Server Management Studio Designed",
        "Installing Configuring",
        "US",
        "LinuxWindows",
        "QA",
        "Phantom",
        "IAM",
        "LINUX",
        "Present Responsibilities Closely",
        "Created",
        "Phantom Puppet Python Developer Metlife Warwick",
        "AWS",
        "Process Develop",
        "Coordinated",
        "ELB",
        "Python Developer TIAA New York",
        "HTML CSS JavaScript Bootstrap",
        "Kubernetes Kafka",
        "SQL",
        "Git CICD JenkinsMaven",
        "Amazon Web Services",
        "Dockerfilecreated",
        "lPythonspan",
        "PyMongo Integrating",
        "Kubernetes",
        "Server Apache",
        "Amazon Web Services AWS Cloud",
        "Jenkins SonarQube",
        "Hive",
        "AWS Identity and Access Management IAM Build",
        "API utilities",
        "ETL",
        "CRUD",
        "File IO",
        "SCM",
        "Framework Django Flask Version",
        "JavaScript Created",
        "Djangos",
        "Scripts",
        "Front",
        "UML Proficient",
        "SQL Working",
        "Utilized PyUnit",
        "SQL Queries Stored",
        "SVN",
        "Perform S3",
        "AWS GIT Jenkins Nexus",
        "HTML XML CSS",
        "REST",
        "RAID",
        "Git Additional Information TECHNICAL",
        "PatternsRelease Git Confluence",
        "Tableau",
        "Application",
        "Windows Solaris Mac OS Repository Management Nexus JFrog Artifactory Build Tools Maven Ant Gradle Web",
        "Implemented RESTful WebServices"
    ],
    "experience": "Experience in software development in Python libraries used libraries Beautiful Soup numpy scipy re matplotlib Pythontwitter Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm emacs In depth knowledge of different web frameworks DjangoZope Pyramid Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in ObjectOriented design Good knowledge of various Design Patterns and UML Proficient in SQL databases MS SQL MySQL Oracle noSQL Mongo DB Cassandra Handson experience in UNIX and Linux Kernels Efficient in using Python Spark API and efficient in using apache Spark Efficient in using apache Hive and hive query language Used Hive to analyses data by writing SQL like queries called HiveQL Used Spark SQL to query structured data inside Spark programs using Data Frame API or SQL Working experience on Amazon Web Services AWS Cloud services like EC2 S3 EBS RDS VPC and IAM Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Provided security and managed user access and quota using AWS Identity and Access Management IAM Build servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Used AWS lambda to run code virtually Migrating physical LinuxWindows servers to cloud AWS and testing Basic knowledge in Front end development technologies like HTML XML CSS JQuery JSON and JavaScript DOJO Bootstrap Nodejs Angularjs backbonejs Requirejs Good knowledge of server Apache Tomcat Web logic Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Strong skills in writing technical and functional documents defined by the business requirements Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Maintained Automated Scripts and troubleshoot their issues for each Site Release Feature and Small Enhancement Project Well experienced in unit testing integration testing and endend testing Strong understanding of Agile and Scrum Software Development Life Cycle Methodologies Experienced in performing tests for nondeterministic code testing multithreaded code test design patterns and more Involved in the issue resolution and Root Cause Analysis Developmental experience on Windows NT95982000XP UNIX and LINUX platforms Authorized to work in the US for any employer Work Experience Python Developer State Farm TX March 2018 to Present Responsibilities Closely worked with Product owners for gathering business requirements design development and deployment Understanding product teams use cases to automate the manual task with phantom playbooks Used GITLAB version control tool to coordinate teamdevelopment Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript Bootstrap and JSON Installation and configuration Apache Web server on multiple servers Created Python modules to extract data from external PostgreSQL Designed Playbooks andapps for Phantom application Designed and implemented a userfriendly website interface using Python and Djangos view controller and templating language Responsible Identifying and implementing mechanism to onboarding multiple customers to phantom Production environment Upgrading Phantom Orchestration serversversions to latest versions using puppet configuration management tool Developed and tested many features for dashboard using Django CSS and JavaScript Responsible for maintaining Phantom application on multiple servers Responsible for debugging and troubleshooting Phantom web application in production environment Implemented RESTful WebServices for sending and receiving the data between multiple systems Involved in working with Python open stock APIs Experience in using containers like Docker Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernates and worked on with REST API Using a Dockerfilecreated docker images worked on Docker container removing images and managing Docker volumes Environment Python 27 Linux Django Flask Eclipse Shell Scripting HTML Git CSS AJAX Bug zilla Apache Web Server Apache spark Phantom Puppet Python Developer Metlife Warwick RI Warwick RI August 2017 to March 2018 Responsibilities Participated in the complete SDLC process Written many programs to parse excel file and process many user data with data validations Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies Designed high availability environment for Application servers and database servers on EC2 by using ELB and Autoscaling Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Add project users to the AWS account with multi factor authentication enabled and least privilege permissions AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Used Subversion version control tool to coordinate teamdevelopment Developed tools to automate some base tasks using Shell Scripting Python Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript Bootstrap and JSON Worked with Regular Expressions URLLIB modules Develop applications that use MongoDB database and PyMongo Integrating multiple databases and data sources in to one system Managed and trained peers on the installation of MYSQL and in writing queries to achieve performance optimization Created backend database TSQL stored procedures and Jasper Reports Wrote Python modules to extractload asset data from the MySQL source database Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Experience in Kubernetes writing the scripts in Perl and Shell Scripts for managing various enterprise applications Created multiple Python and UNIX shell Scripts for various application level tasks Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed and tested many features for dashboard using Django CSS and JavaScript Created unit testregression test framework for workingnew code Using Git as version control tool to coordinate teamdevelopment Built development environment with JIRA StashGit Developed entire frontend and backend modules using Python on Django Web Framework Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Created Docker images using a Docker file worked on Docker container snapshots removing images and managing Docker volumes Integration of MavenNexus Jenkins Urban Code Deploy with PatternsRelease Git Confluence Jira Developed automation scripting in Python core using Puppet to deploy and manage Java applications across Linux servers Responsible for debugging and troubleshooting the web application Participated in writing scripts for test automation Environment Python 27 AWS Django MySQL Oracle 112 Linux Django Eclipse Shell Scripting HTML XHTML Git CSS AJAX Bug zilla JavaScript Apache Web Server Apache spark Python Developer TIAA New York NY March 2016 to July 2017 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Experienced in build and deployment of Java applications on to different environments such as QA UAT and Production Build and deployment of scripts using python scripting Shell to setup development and QA environments Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Migrated applications to the AWS cloud Build and configure a virtual data centers in the Amazon Web Services cloud to support Enterprise Data Warehouse hosting including Virtual Private Cloud VPC Public and Private Subnets Security Groups Route Tables Elastic Load Balancer Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Use AWS Beanstalk for deploying and scaling web applications and services developed with Java Worked with Version Control tools like GIT Used Python and Django creating graphics XML json processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Packaging build Test and Deploy chain SVN with DevTestProd Branching Model for weekly releases Hands on standard of SCM tools Git CICD JenkinsMaven process Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Coordinated with developers Business Analyst and Mangers to make sure that code is deployed in the Production Environment Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Generated property list for every application dynamically using python Created branches in GIT implementation parallel development process Created deployment request tickets in Bugzilla for the deploying the code to Production Provided ongoing support and administration for Jenkins SonarQube fortify scan GIT and build automations Integrated Jenkins with various Devops tools such as Nexus Sonar Qube Puppet etc Involved in migration of CI tool stack from SVN to GIT Maven to Gradle Build force to Jenkins Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development Used Splunk for centralized logging and debugging experienced in Installing Configuring and Monitoring using NAGIOS Developed GIT hooks for the local repository code commit and remote repository code push functionality and on Git Hub Creating the Brokers for the use of Kubernetes Kafka zookeeper Installed Jenkins on Linux machines and created master and slave configurations to implement multiple parallel builds Environment AWS GIT Jenkins Nexus Django Linux PythonShell script Tomcat SVN Gradle Nagios Splunk Kubernetes Python Developer Zensar technologies Hyderabad Telangana February 2014 to November 2015 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Wrote python routines to log into the websites and fetch data for selected options Followed Agile Methodologies and SCRUM Process Develop programs to automate the testing of RAID controller firmware and utilities using Python Java Java Script Responsible for Amazon web services AWS infrastructure with automation and configuration management tool such as chef Worked on JavaScript MVC Framework like Angularjs Worked with Open Stack Commandline client Created backend database TSQL stored procedures and Jasper Reports Used Python modules such as requests urllib urllib2 for web crawling Worked on a resulting report of the application and Tableau reports Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Built kubernetes environment deployed via terraform Built AMIs with packer Setup a Docker cluster built own PaaS and used Kubernetescluster for orchestration and testing Deployed Docker containerized applications using Kubernetes in Google Cloud PlatformGCP Log monitoring and generating visual representations of logs using ELK stack Implement CICD tools Upgrade Backup Restore DNS LDAP and SSL setup Utilize PyUnit the Python unit test framework for all Python applications ExportedImported data between different data sources using SQL Server Management Studio Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Perform S3 buckets creation policies and IAM role based policies Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Deploy applications on AWS by using Elastic Beanstalk Environment Python 2730 Django 1518 AWS C XML Agile SCRUM PyUnit MYSQL CSS MySQL DHTML HTML JavaScript Angularjs Shell Scripts Git Linux Unix and Windows Python Developer IVY COMPTECH IN May 2013 to February 2014 Responsibilities Involved in the analysis and development of Software Development Life Cycle SDLC Contributed in developing a web services middletier in Python to integrate with an existing MySQL backend Wrote several internal API utilities and micro services to carry out specific tasks Wrote and executed exhaustive SQL queries using Python with help from various query builders in Python to frame the queries Migrated MySQL to NoSQL data store using ETL processes using Python Tasks included CRUD elaborate cleansing of data and packing it into the expected format JSON Developed Python scripts to perform auditing tasks and generating Excel reports to support engineering a logistics sales and inventory management system Worked as assistant to Web Programmer in creating DjangoFlask Web apps Generated sample JSON format queries for testing REST endpoints Frequently performed adhoc File IO tasks in python Dealt with CSV JSON Text XML and XLSX files Used shell scripting to automate repetitive tasks Followed a testdriven approach closely Used Pythons Unit Testing extensively Environment Python MySQL PostgreSQL Jira Flask REST JSON CSV Excel Eclipse Education Masters Skills AMAZON WEB SERVICES C DJANGO DOCKER Git Additional Information TECHNICAL SKILLS Cloud Amazon Web Services Python Libraries Pandas Numpy urlilib matplotlib UnitTest JSON CSV XML XLS Python Framework Django Flask Version Control Tools Git Github Web Technologies HTML CSS JavaScript Bug Tracking Tools Jira Bugzilla ServiceNow HPE Service Manager Scripting Languages Python Java HiveQL Advanced PLSQL SQL IDEs SplunkSQL Developer IntelliJ Languages C C Database Oracle 11g10g9i DB2 MSSQL Server MySQL MSAccess PostgreSQL NoSQL Mongo DB SQLite3 Software Development Lifecycle Agile Methodology Scrum framework Operating System Red Hat Ubuntu Debian Fedora CentOS Windows Solaris Mac OS Repository Management Nexus JFrog Artifactory Build Tools Maven Ant Gradle Web and Application Servers JBoss Apache Tomcat Web Sphere Web Logic Nginx Container Orchestration Tools Docker Swarm Kubernetes EC2 Container Services",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "State",
        "Farm",
        "TX",
        "Dallas",
        "TX",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "scipy",
        "matplotlib",
        "Pythontwitter",
        "Pandas",
        "data",
        "frame",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "emacs",
        "depth",
        "knowledge",
        "web",
        "frameworks",
        "DjangoZope",
        "Pyramid",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Expertise",
        "ObjectOriented",
        "design",
        "knowledge",
        "Design",
        "Patterns",
        "UML",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "noSQL",
        "Mongo",
        "DB",
        "Cassandra",
        "Handson",
        "experience",
        "UNIX",
        "Linux",
        "Kernels",
        "Efficient",
        "Python",
        "Spark",
        "API",
        "apache",
        "Spark",
        "Efficient",
        "apache",
        "Hive",
        "query",
        "language",
        "Hive",
        "analyses",
        "data",
        "SQL",
        "queries",
        "HiveQL",
        "Spark",
        "SQL",
        "data",
        "Spark",
        "programs",
        "Data",
        "Frame",
        "API",
        "SQL",
        "Working",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "services",
        "EC2",
        "S3",
        "EBS",
        "RDS",
        "VPC",
        "IAM",
        "Designed",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Cloud",
        "Formation",
        "Cloud",
        "Watch",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "security",
        "user",
        "access",
        "quota",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "AWS",
        "lambda",
        "code",
        "LinuxWindows",
        "servers",
        "AWS",
        "knowledge",
        "Front",
        "end",
        "development",
        "technologies",
        "HTML",
        "XML",
        "CSS",
        "JQuery",
        "JSON",
        "JavaScript",
        "DOJO",
        "Bootstrap",
        "Nodejs",
        "Angularjs",
        "backbonejs",
        "Requirejs",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "Experience",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Angular",
        "JS",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "types",
        "testing",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "skills",
        "documents",
        "business",
        "requirements",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "Automated",
        "Scripts",
        "issues",
        "Site",
        "Release",
        "Feature",
        "Small",
        "Enhancement",
        "Project",
        "unit",
        "testing",
        "integration",
        "testing",
        "endend",
        "understanding",
        "Agile",
        "Scrum",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Methodologies",
        "tests",
        "code",
        "testing",
        "code",
        "test",
        "design",
        "patterns",
        "issue",
        "resolution",
        "Root",
        "Cause",
        "Analysis",
        "Developmental",
        "experience",
        "Windows",
        "NT95982000XP",
        "UNIX",
        "LINUX",
        "platforms",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "State",
        "Farm",
        "TX",
        "March",
        "Present",
        "Responsibilities",
        "Product",
        "owners",
        "business",
        "requirements",
        "development",
        "Understanding",
        "product",
        "teams",
        "cases",
        "task",
        "playbooks",
        "GITLAB",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JSON",
        "Installation",
        "configuration",
        "Apache",
        "Web",
        "server",
        "servers",
        "Python",
        "modules",
        "data",
        "PostgreSQL",
        "Playbooks",
        "andapps",
        "application",
        "website",
        "interface",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "Responsible",
        "Identifying",
        "mechanism",
        "customers",
        "Production",
        "environment",
        "Phantom",
        "Orchestration",
        "serversversions",
        "versions",
        "puppet",
        "configuration",
        "management",
        "tool",
        "features",
        "dashboard",
        "Django",
        "CSS",
        "JavaScript",
        "Responsible",
        "application",
        "servers",
        "Phantom",
        "web",
        "application",
        "production",
        "environment",
        "WebServices",
        "data",
        "systems",
        "Python",
        "stock",
        "APIs",
        "Experience",
        "containers",
        "Docker",
        "POC",
        "application",
        "service",
        "architecture",
        "architecture",
        "Docker",
        "container",
        "technology",
        "Kubernates",
        "REST",
        "API",
        "docker",
        "images",
        "Docker",
        "container",
        "images",
        "Docker",
        "volumes",
        "Environment",
        "Python",
        "Linux",
        "Django",
        "Flask",
        "Eclipse",
        "Shell",
        "Scripting",
        "HTML",
        "Git",
        "CSS",
        "AJAX",
        "Bug",
        "zilla",
        "Apache",
        "Web",
        "Server",
        "Apache",
        "spark",
        "Phantom",
        "Puppet",
        "Python",
        "Developer",
        "Metlife",
        "Warwick",
        "RI",
        "Warwick",
        "RI",
        "August",
        "March",
        "Responsibilities",
        "SDLC",
        "process",
        "programs",
        "file",
        "user",
        "data",
        "data",
        "validations",
        "network",
        "architecture",
        "AWS",
        "subnets",
        "Internet",
        "Gateway",
        "Route",
        "Perform",
        "S3",
        "buckets",
        "creation",
        "storage",
        "S3",
        "buckets",
        "policies",
        "IAM",
        "policies",
        "availability",
        "environment",
        "Application",
        "servers",
        "database",
        "servers",
        "EC2",
        "ELB",
        "Autoscaling",
        "Cloudwatch",
        "AWS",
        "cloud",
        "resources",
        "applications",
        "AWS",
        "alarm",
        "notification",
        "service",
        "Add",
        "project",
        "users",
        "AWS",
        "factor",
        "authentication",
        "privilege",
        "permissions",
        "AWS",
        "ImportExport",
        "amounts",
        "data",
        "AWS",
        "storage",
        "devices",
        "transport",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "tools",
        "base",
        "tasks",
        "Shell",
        "Scripting",
        "Python",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JSON",
        "Regular",
        "Expressions",
        "modules",
        "applications",
        "database",
        "PyMongo",
        "databases",
        "data",
        "sources",
        "system",
        "peers",
        "installation",
        "MYSQL",
        "queries",
        "performance",
        "optimization",
        "database",
        "TSQL",
        "procedures",
        "Jasper",
        "Reports",
        "Wrote",
        "Python",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "handson",
        "engineering",
        "implantation",
        "knowledge",
        "container",
        "orchestration",
        "infrastructure",
        "management",
        "tools",
        "Kubernetes",
        "Experience",
        "Kubernetes",
        "scripts",
        "Perl",
        "Shell",
        "Scripts",
        "enterprise",
        "applications",
        "Python",
        "UNIX",
        "shell",
        "Scripts",
        "application",
        "level",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "features",
        "dashboard",
        "Django",
        "CSS",
        "JavaScript",
        "Created",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Git",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "development",
        "environment",
        "JIRA",
        "StashGit",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "POC",
        "application",
        "service",
        "architecture",
        "architecture",
        "Docker",
        "container",
        "technology",
        "Kubernetes",
        "REST",
        "API",
        "Created",
        "Docker",
        "images",
        "Docker",
        "file",
        "Docker",
        "container",
        "snapshots",
        "images",
        "Docker",
        "volumes",
        "Integration",
        "MavenNexus",
        "Jenkins",
        "Urban",
        "Code",
        "Deploy",
        "PatternsRelease",
        "Git",
        "Confluence",
        "Jira",
        "automation",
        "Python",
        "core",
        "Puppet",
        "Java",
        "applications",
        "Linux",
        "servers",
        "web",
        "application",
        "scripts",
        "test",
        "automation",
        "Environment",
        "Python",
        "AWS",
        "Django",
        "MySQL",
        "Oracle",
        "Linux",
        "Django",
        "Eclipse",
        "Shell",
        "Scripting",
        "HTML",
        "XHTML",
        "Git",
        "CSS",
        "AJAX",
        "Bug",
        "zilla",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Apache",
        "spark",
        "Python",
        "Developer",
        "TIAA",
        "New",
        "York",
        "NY",
        "March",
        "July",
        "Responsibilities",
        "partnerships",
        "business",
        "unit",
        "knowledge",
        "base",
        "business",
        "line",
        "business",
        "plan",
        "products",
        "processes",
        "build",
        "deployment",
        "Java",
        "applications",
        "environments",
        "QA",
        "UAT",
        "Production",
        "Build",
        "deployment",
        "scripts",
        "python",
        "Shell",
        "development",
        "QA",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "applications",
        "AWS",
        "cloud",
        "Build",
        "data",
        "centers",
        "Amazon",
        "Web",
        "Services",
        "cloud",
        "Enterprise",
        "Data",
        "Warehouse",
        "Virtual",
        "Cloud",
        "VPC",
        "Public",
        "Private",
        "Subnets",
        "Security",
        "Groups",
        "Route",
        "Tables",
        "Elastic",
        "Load",
        "Balancer",
        "EC2",
        "Container",
        "Service",
        "ECS",
        "Docker",
        "containers",
        "applications",
        "cluster",
        "Amazon",
        "EC2",
        "AWS",
        "Beanstalk",
        "web",
        "applications",
        "services",
        "Java",
        "Worked",
        "Version",
        "Control",
        "tools",
        "GIT",
        "Python",
        "Django",
        "graphics",
        "XML",
        "json",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Packaging",
        "build",
        "Test",
        "chain",
        "SVN",
        "DevTestProd",
        "Branching",
        "Model",
        "releases",
        "Hands",
        "standard",
        "SCM",
        "Git",
        "CICD",
        "JenkinsMaven",
        "process",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "developers",
        "Business",
        "Analyst",
        "Mangers",
        "code",
        "Production",
        "Environment",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Installation",
        "Python",
        "Linux",
        "test",
        "beds",
        "JSON",
        "REST",
        "Web",
        "services",
        "property",
        "list",
        "application",
        "python",
        "branches",
        "GIT",
        "implementation",
        "parallel",
        "development",
        "process",
        "deployment",
        "request",
        "tickets",
        "Bugzilla",
        "code",
        "Production",
        "support",
        "administration",
        "Jenkins",
        "SonarQube",
        "GIT",
        "automations",
        "Integrated",
        "Jenkins",
        "Devops",
        "tools",
        "Nexus",
        "Sonar",
        "Qube",
        "Puppet",
        "migration",
        "CI",
        "tool",
        "stack",
        "SVN",
        "GIT",
        "Maven",
        "Gradle",
        "Build",
        "force",
        "Jenkins",
        "Create",
        "Jenkins",
        "pipeline",
        "jobs",
        "Puppet",
        "release",
        "process",
        "module",
        "deployment",
        "Kanban",
        "methodology",
        "Puppet",
        "development",
        "Splunk",
        "logging",
        "debugging",
        "Configuring",
        "Monitoring",
        "NAGIOS",
        "Developed",
        "GIT",
        "hooks",
        "repository",
        "code",
        "commit",
        "repository",
        "code",
        "push",
        "functionality",
        "Git",
        "Hub",
        "Brokers",
        "use",
        "Kubernetes",
        "Kafka",
        "zookeeper",
        "Installed",
        "Jenkins",
        "Linux",
        "machines",
        "master",
        "slave",
        "configurations",
        "builds",
        "Environment",
        "AWS",
        "GIT",
        "Jenkins",
        "Nexus",
        "Django",
        "Linux",
        "PythonShell",
        "Tomcat",
        "SVN",
        "Gradle",
        "Nagios",
        "Kubernetes",
        "Python",
        "Developer",
        "Zensar",
        "Hyderabad",
        "Telangana",
        "February",
        "November",
        "Responsibilities",
        "partnerships",
        "business",
        "unit",
        "knowledge",
        "base",
        "business",
        "line",
        "business",
        "plan",
        "products",
        "processes",
        "python",
        "routines",
        "websites",
        "data",
        "options",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "Develop",
        "programs",
        "testing",
        "RAID",
        "controller",
        "firmware",
        "utilities",
        "Python",
        "Java",
        "Java",
        "Script",
        "Responsible",
        "Amazon",
        "web",
        "services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tool",
        "chef",
        "Worked",
        "JavaScript",
        "MVC",
        "Framework",
        "Angularjs",
        "Open",
        "Stack",
        "Commandline",
        "client",
        "backend",
        "database",
        "TSQL",
        "procedures",
        "Jasper",
        "Reports",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Worked",
        "report",
        "application",
        "Tableau",
        "Hands",
        "tools",
        "GitGitHub",
        "Ansible",
        "Artifactory",
        "Jenkins",
        "OpenStack",
        "Balance",
        "NodeProxy",
        "VMWare",
        "Open",
        "Source",
        "software",
        "testing",
        "delivery",
        "pipelines",
        "kubernetes",
        "environment",
        "terraform",
        "AMIs",
        "packer",
        "Setup",
        "Docker",
        "cluster",
        "own",
        "PaaS",
        "Kubernetescluster",
        "orchestration",
        "Deployed",
        "Docker",
        "applications",
        "Kubernetes",
        "Google",
        "Cloud",
        "Log",
        "monitoring",
        "representations",
        "logs",
        "ELK",
        "stack",
        "Implement",
        "CICD",
        "tools",
        "Upgrade",
        "Backup",
        "Restore",
        "DNS",
        "LDAP",
        "SSL",
        "setup",
        "Utilize",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Perform",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "policies",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "auto",
        "scaling",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "Deploy",
        "applications",
        "AWS",
        "Elastic",
        "Beanstalk",
        "Environment",
        "Python",
        "Django",
        "AWS",
        "C",
        "XML",
        "SCRUM",
        "PyUnit",
        "MYSQL",
        "CSS",
        "MySQL",
        "DHTML",
        "HTML",
        "JavaScript",
        "Angularjs",
        "Shell",
        "Scripts",
        "Git",
        "Linux",
        "Unix",
        "Windows",
        "Python",
        "Developer",
        "IVY",
        "May",
        "February",
        "Responsibilities",
        "analysis",
        "development",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "web",
        "services",
        "middletier",
        "Python",
        "MySQL",
        "backend",
        "API",
        "utilities",
        "micro",
        "services",
        "tasks",
        "Wrote",
        "SQL",
        "queries",
        "Python",
        "help",
        "query",
        "builders",
        "Python",
        "queries",
        "MySQL",
        "NoSQL",
        "data",
        "store",
        "ETL",
        "processes",
        "Python",
        "Tasks",
        "CRUD",
        "cleansing",
        "data",
        "format",
        "JSON",
        "Python",
        "scripts",
        "auditing",
        "tasks",
        "Excel",
        "reports",
        "logistics",
        "sales",
        "inventory",
        "management",
        "system",
        "assistant",
        "Web",
        "Programmer",
        "DjangoFlask",
        "Web",
        "apps",
        "sample",
        "format",
        "testing",
        "REST",
        "endpoints",
        "adhoc",
        "File",
        "IO",
        "tasks",
        "python",
        "Dealt",
        "CSV",
        "JSON",
        "Text",
        "XML",
        "XLSX",
        "files",
        "shell",
        "scripting",
        "tasks",
        "testdriven",
        "approach",
        "Pythons",
        "Unit",
        "Testing",
        "Environment",
        "Python",
        "MySQL",
        "PostgreSQL",
        "Jira",
        "Flask",
        "JSON",
        "CSV",
        "Excel",
        "Eclipse",
        "Education",
        "Masters",
        "Skills",
        "AMAZON",
        "WEB",
        "SERVICES",
        "C",
        "DJANGO",
        "DOCKER",
        "Git",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "Python",
        "Pandas",
        "Numpy",
        "urlilib",
        "matplotlib",
        "UnitTest",
        "CSV",
        "XML",
        "XLS",
        "Python",
        "Framework",
        "Django",
        "Flask",
        "Version",
        "Control",
        "Tools",
        "Git",
        "Github",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Bug",
        "Tracking",
        "Tools",
        "Jira",
        "Bugzilla",
        "ServiceNow",
        "HPE",
        "Service",
        "Manager",
        "Scripting",
        "Languages",
        "Python",
        "Java",
        "HiveQL",
        "Advanced",
        "PLSQL",
        "SQL",
        "IDEs",
        "SplunkSQL",
        "Developer",
        "IntelliJ",
        "Languages",
        "C",
        "C",
        "Database",
        "Oracle",
        "DB2",
        "MSSQL",
        "Server",
        "MySQL",
        "MSAccess",
        "PostgreSQL",
        "NoSQL",
        "Mongo",
        "DB",
        "SQLite3",
        "Software",
        "Development",
        "Lifecycle",
        "Agile",
        "Methodology",
        "Scrum",
        "framework",
        "Operating",
        "System",
        "Red",
        "Hat",
        "Ubuntu",
        "Debian",
        "Fedora",
        "CentOS",
        "Windows",
        "Solaris",
        "Mac",
        "OS",
        "Repository",
        "Management",
        "Nexus",
        "JFrog",
        "Artifactory",
        "Build",
        "Tools",
        "Maven",
        "Ant",
        "Gradle",
        "Web",
        "Application",
        "Servers",
        "JBoss",
        "Apache",
        "Tomcat",
        "Web",
        "Sphere",
        "Web",
        "Logic",
        "Nginx",
        "Container",
        "Orchestration",
        "Tools",
        "Docker",
        "Swarm",
        "Kubernetes",
        "EC2",
        "Container",
        "Services"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:31:04.639502",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer State Farm TX Dallas TX Experience in software development in Python libraries used libraries Beautiful Soup numpy scipy re matplotlib Pythontwitter Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm emacs In depth knowledge of different web frameworks DjangoZope Pyramid Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in ObjectOriented design Good knowledge of various Design Patterns and UML Proficient in SQL databases MS SQL MySQL Oracle noSQL Mongo DB Cassandra Handson experience in UNIX and Linux Kernels Efficient in using Python Spark API and efficient in using apache Spark Efficient in using apache Hive and hive query language Used Hive to analyses data by writing SQL like queries called HiveQL Used Spark SQL to query structured data inside Spark programs using Data Frame API or SQL Working experience on Amazon Web Services AWS Cloud services like EC2 S3 EBS RDS VPC and IAM Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Provided security and managed user access and quota using AWS Identity and Access Management IAM Build servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Used AWS lambda to run code virtually Migrating physical LinuxWindows servers to cloud AWS and testing Basic knowledge in Front end development technologies like HTML XML CSS JQuery JSON and JavaScript DOJO Bootstrap Nodejs Angularjs backbonejs Requirejs Good knowledge of server Apache Tomcat Web logic Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Strong skills in writing technical and functional documents defined by the business requirements Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Maintained Automated Scripts and troubleshoot their issues for each Site Release Feature and Small Enhancement Project Well experienced in unit testing integration testing and endend testing Strong understanding of Agile and Scrum Software Development Life Cycle Methodologies Experienced in performing tests for nondeterministic code testing multithreaded code test design patterns and more Involved in the issue resolution and Root Cause Analysis Developmental experience on Windows NT95982000XP UNIX and LINUX platforms Authorized to work in the US for any employer Work Experience Python Developer State Farm TX March 2018 to Present Responsibilities Closely worked with Product owners for gathering business requirements design development and deployment Understanding product teams use cases to automate the manual task with phantom playbooks Used GITLAB version control tool to coordinate teamdevelopment Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript Bootstrap and JSON Installation and configuration Apache Web server on multiple servers Created Python modules to extract data from external PostgreSQL Designed Playbooks andapps for Phantom application Designed and implemented a userfriendly website interface using Python and Djangos view controller and templating language Responsible Identifying and implementing mechanism to onboarding multiple customers to phantom Production environment Upgrading Phantom Orchestration serversversions to latest versions using puppet configuration management tool Developed and tested many features for dashboard using Django CSS and JavaScript Responsible for maintaining Phantom application on multiple servers Responsible for debugging and troubleshooting Phantom web application in production environment Implemented RESTful WebServices for sending and receiving the data between multiple systems Involved in working with Python open stock APIs Experience in using containers like Docker Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernates and worked on with REST API Using a Dockerfilecreated docker images worked on Docker container removing images and managing Docker volumes Environment Python 27 Linux Django Flask Eclipse Shell Scripting HTML Git CSS AJAX Bug zilla Apache Web Server Apache spark Phantom Puppet Python Developer Metlife Warwick RI Warwick RI August 2017 to March 2018 Responsibilities Participated in the complete SDLC process Written many programs to parse excel file and process many user data with data validations Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies Designed high availability environment for Application servers and database servers on EC2 by using ELB and Autoscaling Used Cloudwatch for monitoring AWS cloud resources and the applications that deployed on AWS by creating new alarm enable notification service Add project users to the AWS account with multi factor authentication enabled and least privilege permissions AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Used Subversion version control tool to coordinate teamdevelopment Developed tools to automate some base tasks using Shell Scripting Python Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript Bootstrap and JSON Worked with Regular Expressions URLLIB modules Develop applications that use MongoDB database and PyMongo Integrating multiple databases and data sources in to one system Managed and trained peers on the installation of MYSQL and in writing queries to achieve performance optimization Created backend database TSQL stored procedures and Jasper Reports Wrote Python modules to extractload asset data from the MySQL source database Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Experience in Kubernetes writing the scripts in Perl and Shell Scripts for managing various enterprise applications Created multiple Python and UNIX shell Scripts for various application level tasks Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed and tested many features for dashboard using Django CSS and JavaScript Created unit testregression test framework for workingnew code Using Git as version control tool to coordinate teamdevelopment Built development environment with JIRA StashGit Developed entire frontend and backend modules using Python on Django Web Framework Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Created Docker images using a Docker file worked on Docker container snapshots removing images and managing Docker volumes Integration of MavenNexus Jenkins Urban Code Deploy with PatternsRelease Git Confluence Jira Developed automation scripting in Python core using Puppet to deploy and manage Java applications across Linux servers Responsible for debugging and troubleshooting the web application Participated in writing scripts for test automation Environment Python 27 AWS Django MySQL Oracle 112 Linux Django Eclipse Shell Scripting HTML XHTML Git CSS AJAX Bug zilla JavaScript Apache Web Server Apache spark Python Developer TIAA New York NY March 2016 to July 2017 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Experienced in build and deployment of Java applications on to different environments such as QA UAT and Production Build and deployment of scripts using python scripting Shell to setup development and QA environments Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Migrated applications to the AWS cloud Build and configure a virtual data centers in the Amazon Web Services cloud to support Enterprise Data Warehouse hosting including Virtual Private Cloud VPC Public and Private Subnets Security Groups Route Tables Elastic Load Balancer Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Use AWS Beanstalk for deploying and scaling web applications and services developed with Java Worked with Version Control tools like GIT Used Python and Django creating graphics XML json processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Packaging build Test and Deploy chain SVN with DevTestProd Branching Model for weekly releases Hands on standard of SCM tools Git CICD JenkinsMaven process Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Coordinated with developers Business Analyst and Mangers to make sure that code is deployed in the Production Environment Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Generated property list for every application dynamically using python Created branches in GIT implementation parallel development process Created deployment request tickets in Bugzilla for the deploying the code to Production Provided ongoing support and administration for Jenkins SonarQube fortify scan GIT and build automations Integrated Jenkins with various Devops tools such as Nexus Sonar Qube Puppet etc Involved in migration of CI tool stack from SVN to GIT Maven to Gradle Build force to Jenkins Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development Used Splunk for centralized logging and debugging experienced in Installing Configuring and Monitoring using NAGIOS Developed GIT hooks for the local repository code commit and remote repository code push functionality and on Git Hub Creating the Brokers for the use of Kubernetes Kafka zookeeper Installed Jenkins on Linux machines and created master and slave configurations to implement multiple parallel builds Environment AWS GIT Jenkins Nexus Django Linux PythonShell script Tomcat SVN Gradle Nagios Splunk Kubernetes Python Developer Zensar technologies Hyderabad Telangana February 2014 to November 2015 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Wrote python routines to log into the websites and fetch data for selected options Followed Agile Methodologies and SCRUM Process Develop programs to automate the testing of RAID controller firmware and utilities using Python Java Java Script Responsible for Amazon web services AWS infrastructure with automation and configuration management tool such as chef Worked on JavaScript MVC Framework like Angularjs Worked with Open Stack Commandline client Created backend database TSQL stored procedures and Jasper Reports Used Python modules such as requests urllib urllib2 for web crawling Worked on a resulting report of the application and Tableau reports Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Built kubernetes environment deployed via terraform Built AMIs with packer Setup a Docker cluster built own PaaS and used Kubernetescluster for orchestration and testing Deployed Docker containerized applications using Kubernetes in Google Cloud PlatformGCP Log monitoring and generating visual representations of logs using ELK stack Implement CICD tools Upgrade Backup Restore DNS LDAP and SSL setup Utilize PyUnit the Python unit test framework for all Python applications ExportedImported data between different data sources using SQL Server Management Studio Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Perform S3 buckets creation policies and IAM role based policies Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Deploy applications on AWS by using Elastic Beanstalk Environment Python 2730 Django 1518 AWS C XML Agile SCRUM PyUnit MYSQL CSS MySQL DHTML HTML JavaScript Angularjs Shell Scripts Git Linux Unix and Windows Python Developer IVY COMPTECH IN May 2013 to February 2014 Responsibilities Involved in the analysis and development of Software Development Life Cycle SDLC Contributed in developing a web services middletier in Python to integrate with an existing MySQL backend Wrote several internal API utilities and micro services to carry out specific tasks Wrote and executed exhaustive SQL queries using Python with help from various query builders in Python to frame the queries Migrated MySQL to NoSQL data store using ETL processes using Python Tasks included CRUD elaborate cleansing of data and packing it into the expected format JSON Developed Python scripts to perform auditing tasks and generating Excel reports to support engineering a logistics sales and inventory management system Worked as assistant to Web Programmer in creating DjangoFlask Web apps Generated sample JSON format queries for testing REST endpoints Frequently performed adhoc File IO tasks in python Dealt with CSV JSON Text XML and XLSX files Used shell scripting to automate repetitive tasks Followed a testdriven approach closely Used Pythons Unit Testing extensively Environment Python MySQL PostgreSQL Jira Flask REST JSON CSV Excel Eclipse Education Masters Skills AMAZON WEB SERVICES C DJANGO DOCKER Git Additional Information TECHNICAL SKILLS Cloud Amazon Web Services Python Libraries Pandas Numpy urlilib matplotlib UnitTest JSON CSV XML XLS Python Framework Django Flask Version Control Tools Git Github Web Technologies HTML CSS JavaScript Bug Tracking Tools Jira Bugzilla ServiceNow HPE Service Manager Scripting Languages Python Java HiveQL Advanced PLSQL SQL IDEs SplunkSQL Developer IntelliJ Languages C C Database Oracle 11g10g9i DB2 MSSQL Server MySQL MSAccess PostgreSQL NoSQL Mongo DB SQLite3 Software Development Lifecycle Agile Methodology Scrum framework Operating System Red Hat Ubuntu Debian Fedora CentOS Windows Solaris Mac OS Repository Management Nexus JFrog Artifactory Build Tools Maven Ant Gradle Web and Application Servers JBoss Apache Tomcat Web Sphere Web Logic Nginx Container Orchestration Tools Docker Swarm Kubernetes EC2 Container Services",
    "unique_id": "f656974d-9f98-4845-9b19-5c9fa72a8aa0"
}