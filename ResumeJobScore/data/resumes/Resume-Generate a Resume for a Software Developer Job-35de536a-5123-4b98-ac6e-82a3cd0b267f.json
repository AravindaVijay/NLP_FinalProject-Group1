{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer The Home Depot Irvine CA Engineering professional with 5 years of experience as a Web Application Developer and coding analytical programming using Python Django Flask Experienced with full Software Development Life Cycle SDLC architecting scalable platforms object oriented programming database design and agile methodologies Experience in developing webbased applications using Python 2734 Django 1413 Flask Webapp2 Angularjs VB HTML DHTML JavaScript and JQuery Experience in using new tools and technical developments such librariesBeautiful Soup Numpy Scipy Matplotlib Pickle PySide Pandas Dataframe urllib2 to drive improvements throughout entire software development lifecycle Experienced in working with various Python Integrated Development Environments like Pycharm PySpark PyScripter Spyder and Sublime Text Proficient in Front end development experience using HTML XML CSS JQuery JSON JavaScript CSS and Bootstrap Familiar with JSON based REST Web services Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience using web services like Amazon Web Services AWS EC2 and AWS S3 Implemented data transfer from SQL server to Redshift using AWS data pipeline AWS S3 bucket AWS EC2 worker group and AWS SNS Experience configuring and developing with different Database servers including MySQL MSSQL Oracle and Mongo Db Experience in using UNIX shell Scripts for automating batch programs Proficient in Software Design and Development with a solid background in Developing and Experience developing applications in Linux Environment Experienced in Agile Methodologies and SCRUM Process Strong Knowledge of web application security and access control Highly motivated dedicated quick learner and have proven ability to build and manage a team and work individually Excellent written and oral communication skills with resultsoriented attitude Excellent debugging problem solving optimization and testing skills Sponsorship required to work in the US Work Experience Python Developer The Home Depot Atlanta GA June 2017 to Present Responsibilities Designed database Model Views and APIs using Python for interactive web based solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Worked on server side applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib Scipy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Built Random Forest based models using PySpark on Databricks for predicting profile field prediction Implemented NLP classifier using Keras CNN for faster case resolution of user complaints Developed anomaly detection cronjob on Google Analytics data using Python Pandas and Jinja2 Build a Tensorflow Object Detection transfer learning model for custom dataset of client Built data pipelines and data transformation jobs using Boto Pandas Numpy for Google Analytics Data and Amazon Redshift Data Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Environment Python Django Tableau XML JSON JavaScript JQuery AngularJS PostgreSQL Flask SciPy Pandas Numpy Backbone JS Restful Web services Linux Git Amazon s3 MySQL Mongo DB TSQL Python Developer MetLife New York NY September 2015 to May 2017 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to automate many daytoday tasks Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkin Environment Python 3527 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Associate Python Developer Meditab Software Inc December 2013 to August 2015 Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python PyQuery Shell Scripting JSON Rest Django Celery Flash SQL UNIX Windows PostgreSQL and python libraries such as Numpy SQL Alchemy AWS Education Masters Skills Amazon Elastic Compute Cloud 1 year AWS 5 years Bootstrap 3 years CSS 3 years databases 1 year Django 5 years EC2 1 year Git 5 years HTML 5 years jQuery 3 years JSON 5 years Linux 3 years MYSQL 5 years oracle 3 years Python 5 years Redis 1 year scripting 5 years Shell scripting 3 years SQL 5 years XML 3 years PHP Javascript HTML 5",
    "entities": [
        "Python Django Flask Experienced",
        "GUI",
        "PySpark on Databricks",
        "Nodejs",
        "Python 2734 Django 1413",
        "AWS SNS Experience",
        "UNIX",
        "Working",
        "JSON",
        "OpenStack",
        "Amazon Web Services AWS",
        "Node Package",
        "Panda",
        "Implemented NLP",
        "XML",
        "DHTML",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "Shell",
        "Amazon",
        "Linux Environment Experienced",
        "Python",
        "Amazon AWS S3",
        "Mongo",
        "Developed",
        "CSS Bootstrap",
        "Python Unit",
        "Software Design and Development",
        "Analysis Design Development and Testing Developed",
        "Developing",
        "Develop",
        "AGILE",
        "AWS S3 Implemented",
        "Created Data",
        "Linux",
        "Google Analytics Data",
        "Flask",
        "Built",
        "VMWare API",
        "RDS",
        "Views",
        "PyQt",
        "Amazon Redshift Data",
        "Redux",
        "Python on Django",
        "API",
        "US",
        "HTML CSS JavaScript",
        "Present Responsibilities Designed",
        "AWS",
        "Django PostgreSQL Designed",
        "AWS SNS Wrote",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Bash Designed",
        "Backup and Restore",
        "Random Forest",
        "Numpy SQL Alchemy AWS Education Masters Skills",
        "SQL",
        "Development of Isomorphic",
        "Redshift",
        "Django Oracle DB PostgreSQL",
        "lPythonspan",
        "Python Django",
        "Git Collect",
        "Administrators",
        "Amazon Web Services AWS EC2",
        "SQL Alchemy",
        "CI",
        "Python OOP Worked",
        "Amazon AWS",
        "Sublime Text Proficient",
        "TestDriven",
        "Used Django Framework",
        "Python Integrated Development Environments",
        "Pycharm PySpark PyScripter Spyder",
        "Python Develop",
        "Scripts",
        "RedisCache",
        "Front",
        "Google Analytics",
        "CSS",
        "HTML XML CSS",
        "REST",
        "TDD",
        "Implemented RESTful WebServices"
    ],
    "experience": "Experience in developing webbased applications using Python 2734 Django 1413 Flask Webapp2 Angularjs VB HTML DHTML JavaScript and JQuery Experience in using new tools and technical developments such librariesBeautiful Soup Numpy Scipy Matplotlib Pickle PySide Pandas Dataframe urllib2 to drive improvements throughout entire software development lifecycle Experienced in working with various Python Integrated Development Environments like Pycharm PySpark PyScripter Spyder and Sublime Text Proficient in Front end development experience using HTML XML CSS JQuery JSON JavaScript CSS and Bootstrap Familiar with JSON based REST Web services Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience using web services like Amazon Web Services AWS EC2 and AWS S3 Implemented data transfer from SQL server to Redshift using AWS data pipeline AWS S3 bucket AWS EC2 worker group and AWS SNS Experience configuring and developing with different Database servers including MySQL MSSQL Oracle and Mongo Db Experience in using UNIX shell Scripts for automating batch programs Proficient in Software Design and Development with a solid background in Developing and Experience developing applications in Linux Environment Experienced in Agile Methodologies and SCRUM Process Strong Knowledge of web application security and access control Highly motivated dedicated quick learner and have proven ability to build and manage a team and work individually Excellent written and oral communication skills with resultsoriented attitude Excellent debugging problem solving optimization and testing skills Sponsorship required to work in the US Work Experience Python Developer The Home Depot Atlanta GA June 2017 to Present Responsibilities Designed database Model Views and APIs using Python for interactive web based solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Worked on server side applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib Scipy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Built Random Forest based models using PySpark on Databricks for predicting profile field prediction Implemented NLP classifier using Keras CNN for faster case resolution of user complaints Developed anomaly detection cronjob on Google Analytics data using Python Pandas and Jinja2 Build a Tensorflow Object Detection transfer learning model for custom dataset of client Built data pipelines and data transformation jobs using Boto Pandas Numpy for Google Analytics Data and Amazon Redshift Data Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Environment Python Django Tableau XML JSON JavaScript JQuery AngularJS PostgreSQL Flask SciPy Pandas Numpy Backbone JS Restful Web services Linux Git Amazon s3 MySQL Mongo DB TSQL Python Developer MetLife New York NY September 2015 to May 2017 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to automate many daytoday tasks Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkin Environment Python 3527 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Associate Python Developer Meditab Software Inc December 2013 to August 2015 Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python PyQuery Shell Scripting JSON Rest Django Celery Flash SQL UNIX Windows PostgreSQL and python libraries such as Numpy SQL Alchemy AWS Education Masters Skills Amazon Elastic Compute Cloud 1 year AWS 5 years Bootstrap 3 years CSS 3 years databases 1 year Django 5 years EC2 1 year Git 5 years HTML 5 years jQuery 3 years JSON 5 years Linux 3 years MYSQL 5 years oracle 3 years Python 5 years Redis 1 year scripting 5 years Shell scripting 3 years SQL 5 years XML 3 years PHP Javascript HTML 5",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Home",
        "Depot",
        "Irvine",
        "CA",
        "Engineering",
        "years",
        "experience",
        "Web",
        "Application",
        "Developer",
        "programming",
        "Python",
        "Django",
        "Flask",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "Experience",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Webapp2",
        "Angularjs",
        "VB",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Experience",
        "tools",
        "developments",
        "Soup",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "Pickle",
        "PySide",
        "Pandas",
        "Dataframe",
        "urllib2",
        "improvements",
        "software",
        "development",
        "lifecycle",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Pycharm",
        "PySpark",
        "PyScripter",
        "Spyder",
        "Sublime",
        "Text",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "HTML",
        "XML",
        "CSS",
        "JQuery",
        "JSON",
        "JavaScript",
        "CSS",
        "Bootstrap",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Experience",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "data",
        "transfer",
        "SQL",
        "server",
        "Redshift",
        "AWS",
        "data",
        "pipeline",
        "AWS",
        "S3",
        "bucket",
        "AWS",
        "EC2",
        "worker",
        "group",
        "AWS",
        "SNS",
        "Experience",
        "Database",
        "servers",
        "MySQL",
        "MSSQL",
        "Oracle",
        "Mongo",
        "Db",
        "Experience",
        "UNIX",
        "shell",
        "Scripts",
        "batch",
        "programs",
        "Proficient",
        "Software",
        "Design",
        "Development",
        "background",
        "Developing",
        "Experience",
        "applications",
        "Linux",
        "Environment",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "Strong",
        "Knowledge",
        "web",
        "application",
        "security",
        "access",
        "control",
        "learner",
        "ability",
        "team",
        "Excellent",
        "communication",
        "skills",
        "attitude",
        "debugging",
        "problem",
        "optimization",
        "testing",
        "skills",
        "Sponsorship",
        "US",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Home",
        "Depot",
        "Atlanta",
        "GA",
        "June",
        "Present",
        "Responsibilities",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Djangos",
        "ORM",
        "model",
        "Developed",
        "web",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "server",
        "side",
        "applications",
        "Django",
        "Python",
        "programming",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "matplotlib",
        "Scipy",
        "NumPy",
        "Nodejs",
        "backend",
        "client",
        "web",
        "application",
        "tools",
        "base",
        "tasks",
        "Python",
        "Shell",
        "scripting",
        "XML",
        "Random",
        "Forest",
        "models",
        "PySpark",
        "Databricks",
        "profile",
        "field",
        "prediction",
        "NLP",
        "classifier",
        "Keras",
        "CNN",
        "case",
        "resolution",
        "user",
        "anomaly",
        "detection",
        "cronjob",
        "Google",
        "Analytics",
        "data",
        "Python",
        "Pandas",
        "Jinja2",
        "Build",
        "Tensorflow",
        "Object",
        "Detection",
        "transfer",
        "model",
        "custom",
        "dataset",
        "client",
        "data",
        "pipelines",
        "data",
        "transformation",
        "jobs",
        "Boto",
        "Pandas",
        "Numpy",
        "Google",
        "Analytics",
        "Data",
        "Amazon",
        "Redshift",
        "Data",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "client",
        "web",
        "application",
        "Working",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "testing",
        "web",
        "application",
        "Python",
        "stock",
        "APIs",
        "Design",
        "web",
        "applications",
        "Python",
        "Develop",
        "applications",
        "database",
        "pymongo",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "Wrote",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PostgreSQLMYSQL",
        "features",
        "table",
        "types",
        "oracle",
        "indexing",
        "Backup",
        "Restore",
        "experience",
        "PostgreSQL",
        "MYSQL",
        "database",
        "backups",
        "point",
        "time",
        "recovery",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "Environment",
        "Python",
        "Django",
        "Tableau",
        "XML",
        "JSON",
        "JavaScript",
        "JQuery",
        "PostgreSQL",
        "Flask",
        "SciPy",
        "Pandas",
        "Numpy",
        "Backbone",
        "JS",
        "Restful",
        "Web",
        "services",
        "Linux",
        "Git",
        "Amazon",
        "s3",
        "MySQL",
        "Mongo",
        "DB",
        "TSQL",
        "Python",
        "Developer",
        "MetLife",
        "New",
        "York",
        "NY",
        "September",
        "May",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Worked",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "Wrote",
        "Python",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "Integrated",
        "RedisCache",
        "Djangorestframework",
        "data",
        "WebServices",
        "data",
        "systems",
        "Jenkins",
        "configuring",
        "integration",
        "CI",
        "End",
        "End",
        "automation",
        "build",
        "deployments",
        "Bash",
        "Perl",
        "Python",
        "daytoday",
        "tasks",
        "notification",
        "service",
        "request",
        "AWS",
        "API",
        "Gateway",
        "response",
        "Lambda",
        "data",
        "Dynamo",
        "DB",
        "notification",
        "AWS",
        "SNS",
        "Wrote",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "development",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "XML",
        "format",
        "phases",
        "project",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Developed",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Work",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "product",
        "situations",
        "applications",
        "CI",
        "tools",
        "Jenkin",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "AWS",
        "API",
        "Gateway",
        "REST",
        "API",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "Cloud",
        "Watch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Associate",
        "Python",
        "Developer",
        "Meditab",
        "Software",
        "Inc",
        "December",
        "August",
        "Responsibilities",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "application",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "Collect",
        "data",
        "performance",
        "query",
        "operations",
        "instance",
        "Python",
        "scripts",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "expression",
        "search",
        "results",
        "combination",
        "Angular2",
        "builtin",
        "custom",
        "pipes",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behaviour",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "web",
        "services",
        "Nodejs",
        "dependencies",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "calls",
        "development",
        "Python",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "analysis",
        "Django",
        "PostgreSQL",
        "automation",
        "scripts",
        "records",
        "Mongo",
        "DB",
        "export",
        "command",
        "files",
        "machine",
        "help",
        "ftplib",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "Python",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "Pytest",
        "application",
        "TestDriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Environment",
        "Python",
        "PyQuery",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Django",
        "Celery",
        "Flash",
        "SQL",
        "UNIX",
        "Windows",
        "PostgreSQL",
        "python",
        "libraries",
        "Numpy",
        "SQL",
        "Alchemy",
        "AWS",
        "Education",
        "Masters",
        "Skills",
        "Amazon",
        "Elastic",
        "Compute",
        "Cloud",
        "year",
        "AWS",
        "years",
        "Bootstrap",
        "years",
        "CSS",
        "years",
        "year",
        "Django",
        "years",
        "EC2",
        "year",
        "Git",
        "years",
        "HTML",
        "years",
        "jQuery",
        "years",
        "JSON",
        "years",
        "Linux",
        "years",
        "MYSQL",
        "years",
        "oracle",
        "years",
        "Python",
        "years",
        "Redis",
        "year",
        "years",
        "Shell",
        "years",
        "SQL",
        "years",
        "XML",
        "years",
        "PHP",
        "Javascript",
        "HTML"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:12:50.561014",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer The Home Depot Irvine CA Engineering professional with 5 years of experience as a Web Application Developer and coding analytical programming using Python Django Flask Experienced with full Software Development Life Cycle SDLC architecting scalable platforms object oriented programming database design and agile methodologies Experience in developing webbased applications using Python 2734 Django 1413 Flask Webapp2 Angularjs VB HTML DHTML JavaScript and JQuery Experience in using new tools and technical developments such librariesBeautiful Soup Numpy Scipy Matplotlib Pickle PySide Pandas Dataframe urllib2 to drive improvements throughout entire software development lifecycle Experienced in working with various Python Integrated Development Environments like Pycharm PySpark PyScripter Spyder and Sublime Text Proficient in Front end development experience using HTML XML CSS JQuery JSON JavaScript CSS and Bootstrap Familiar with JSON based REST Web services Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience using web services like Amazon Web Services AWS EC2 and AWS S3 Implemented data transfer from SQL server to Redshift using AWS data pipeline AWS S3 bucket AWS EC2 worker group and AWS SNS Experience configuring and developing with different Database servers including MySQL MSSQL Oracle and Mongo Db Experience in using UNIX shell Scripts for automating batch programs Proficient in Software Design and Development with a solid background in Developing and Experience developing applications in Linux Environment Experienced in Agile Methodologies and SCRUM Process Strong Knowledge of web application security and access control Highly motivated dedicated quick learner and have proven ability to build and manage a team and work individually Excellent written and oral communication skills with resultsoriented attitude Excellent debugging problem solving optimization and testing skills Sponsorship required to work in the US Work Experience Python Developer The Home Depot Atlanta GA June 2017 to Present Responsibilities Designed database Model Views and APIs using Python for interactive web based solutions Used data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Worked on server side applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib Scipy NumPy and Built efficient Nodejs backend for client web application Developed tools to automate some base tasks using Python Shell scripting and XML Built Random Forest based models using PySpark on Databricks for predicting profile field prediction Implemented NLP classifier using Keras CNN for faster case resolution of user complaints Developed anomaly detection cronjob on Google Analytics data using Python Pandas and Jinja2 Build a Tensorflow Object Detection transfer learning model for custom dataset of client Built data pipelines and data transformation jobs using Boto Pandas Numpy for Google Analytics Data and Amazon Redshift Data Used PyQt to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Responsible for designing developing testing deploying and maintaining the web application Involved in working with Python open stock APIs Design develop and deploy engaging web applications using Python Develop applications that use MongoDB database and pymongo Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Developed RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Environment Python Django Tableau XML JSON JavaScript JQuery AngularJS PostgreSQL Flask SciPy Pandas Numpy Backbone JS Restful Web services Linux Git Amazon s3 MySQL Mongo DB TSQL Python Developer MetLife New York NY September 2015 to May 2017 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications using Python and Django in test driven Development Worked on front end frame works like CSS Bootstrap for development of Web applications Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to automate many daytoday tasks Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from Dynamo DB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Work lets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkin Environment Python 3527 Django 2016 HTML5 CSS AWS API Gateway REST API Spring framework AngularJS HTML Amazon S3 Cloud Watch eclipse MSSQL Server GIT Jira Jenkins Confluence Associate Python Developer Meditab Software Inc December 2013 to August 2015 Responsibilities Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application Used Test driven approach TDD for developing services required for the application Managed datasets using Panda data frames and MYSQL Queried the database queries using Python Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Environment Python PyQuery Shell Scripting JSON Rest Django Celery Flash SQL UNIX Windows PostgreSQL and python libraries such as Numpy SQL Alchemy AWS Education Masters Skills Amazon Elastic Compute Cloud 1 year AWS 5 years Bootstrap 3 years CSS 3 years databases 1 year Django 5 years EC2 1 year Git 5 years HTML 5 years jQuery 3 years JSON 5 years Linux 3 years MYSQL 5 years oracle 3 years Python 5 years Redis 1 year scripting 5 years Shell scripting 3 years SQL 5 years XML 3 years PHP Javascript HTML 5",
    "unique_id": "35de536a-5123-4b98-ac6e-82a3cd0b267f"
}