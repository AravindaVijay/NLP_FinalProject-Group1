{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer American Express Phoenix AZ Around 8 years of extensive IT experience in Analysis Design Testing Deployment of various web based and clientserverapplications in multiplatform environments with JAVAJ2EE technologies and involved in all phases of Software Development Life Cycle SDLC Proficient in designing and developing web applications which are highly scalable secure transactional highperformance and easy to maintain Experience in developing application using Software Development methodologies like Water Fall Agile SCRUM and TestDriven Development TDD Experience in FrontEnd UI development using HTML5 CSS3 Bootstrap Ajax JavaScript JQuery AngularJS and NodeJS Experience with Java 18 features such as Lambdas for making function calls by using functional interfaces which makes code readable and concise Experience in implementing Java18 features and like parallel streams lambdas and filters Experience in developing cloudbased applications using Spring Cloud Pivotal Cloud Foundry and AWS Experience in working with AWS like EC2 EBS ELB S3 SQS Lambda Dynamo DBand Elastic Search Expertise in developing and implementing application based on SOA Service Oriented Architecture and Micro Service Architecture Expertise in developing enterprise applications with various open source frameworks like JavaJ2EE JSP JSTL Servlets EJB Struts Spring Core IOC MVC AOP Security Boot Batch Web Services JMS JPA JDBC and Hibernate Hands on experience in design and development of robust and highly scalable applications and APIs based on REST and SOAP applications using AXISWSDL UDDI XML JAXWS JAXRS JAXB JAXRPC and Jersey Apache CXF frameworks Experience in implementing Core Java concepts and strong understanding of Garbage Collector SWING Collections Multithreading Event handling Exception handling Generics and Serialization Experience in design patterns like Singleton Factory Prototype Business Delegate Session Faade Pattern Service locator Visitor Observer Decorator Front Controller DAO MVC Abstract Factory and Factory Pattern for reusing most efficient and effective strategies for new development Expertise in XML technologies such as DTDXSL XSLT XML schemas XSL and parsers like SAX DOM Expertise in developing and consuming REST and SOAP based Web Services Experienced with JAXRS specification like Jersey andRest Easy to Implement REST based Application Experienced with JAXRPC JAXWS specification like Apache Axis I Apache Axis II and Apache CXF to Implement SOAP based Application and tested it using Soap UI Experienced in the persistence layer using JPA JDBC and Hibernate to persist data to the database Experience with Java Messaging Services JMS like Rabbit MQ Active MQ and Apache camel Hands on experience working with Relational Databases like Oracle DB2 My SQL and No SQL databases like MongoDB andDynamo DB Proficient in creatingBusiness tables PLSQL Stored procedures and writing SQL queries to retrieve data from the database Pleasant experience in different IDEs like Eclipse RAD Spring Tool Suite and IntelliJ IDEA Experience in working with various application and web servers like JBOSS BES Web Logic IBM Web Sphere Glassfish and Apache Tomcat Developing test cases and determining application functionality using JUnit Mockito and Log4j Experienced with build automation tools like Maven Gradle ANT and Jenkins for CICD Worked with different version control systems like Tortoise SVN GIT CVS and Visual Source Safe Expertise in Docker containers leveraging Linux containers and AMIs to create Docker ImagesContainers Experience in development deployment and troubleshooting Web based and enterprisebased applications on Windows UNIX and Linux platforms Effective communication and analytical skills and a demonstrated ability to handle multiple tasks as well as work independently or in a team Work Experience Full Stack Java Developer American Express Phoenix AZ September 2018 to Present Description American Express is a banking and global financial services company that provides customers for access to products insights and experiences that enrich lives and build business success The project was involved for creating UI Screens for Amex productservice and also developing an internal Java coding by retrieving data from client side processing it and saving within the database It also involved for fetching the data from database and displaying it to the user Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Developed the viewcontroller components using JSPs HTML5 CSS3 AJAX JavaScript jQuery Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS Handson experience in developing integration with Elastic search in any of the programming languages like JAVA and JavaScript Having knowledge of advance reporting using Elastic search and NodeJS Implemented core features of AngularJS frameworks such as dependency Injection Databinding Filters Directives Templates Services and DeepLinkingDesigning Used Java 18 features like stream and Lambda expressions Maintained Interface compatibility and concurrency in the project using Java 18 new features like default staticmethods and ConcurrencyAPI Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Designed and developed Micro Services business components using Spring Involved in the development of Micro Services for all the models using combination of Spring Boot and Spring Security Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Developed APIs to read and publish data from Elastic Search cluster using native Java Transport client as well as REST client Worked on Spring Integration with the Elastic Search Implemented the RESTAPIs and data transformers using the JAVA connector which involves the JAVA8 features Lambda and Streams in particular Used Spring MVC framework for implementing ModelView Controller MVC architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Used Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc Used Spring Batch for processing large amount of data like transaction management job processing resource management and logging Secured the APIs by implementing OAuth 20 tokenbased authenticationauthorization scheme using Spring Security Designed and developed thirdparty Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol Used Hibernate ORM framework as persistenceengine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java Involved in writing SQL and StoredProcedures for handling complex queries with help of TOAD and access them through Java Programs from OracleDatabase Worked with MongoDB to store nonrelational data into collection and retrieve them whenever required Worked on setting up Maven scripts to build package and deploy application code to the target WebLogic Application Servers and worked on continuous integration servers like Jenkins Hands on Coding to build REST Micro Services using SpringCloud Oracle XSD JSON Spring Config and Jenkins Worked on developing RESTful endpoints to cache application specific data in inmemory dataclusters like REDIS and exposed them with RESTful endpoints Focused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality Worked on Log4J to validate functionalities and Mockito framework JUnit for unit testing Performed automation testing and authored test scripts using Selenium Web Driver Selenium Grid and JUnit Worked in Agile TDD environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Environment AgileSCRUM Java 18 HTML5 CSS3 JavaScript JQuery Ajax Bootstrap AngularJS AWS Micro Services Hibernate Spring MongoDB Spring Batch Spring Boot Spring Security XML GIT JSP Spring MVC JDBC Mockito JUnit Maven IBM WebSphere BackboneJS Selenium Restful Log4J SOA Java Server Pages JIRA Spring Security Jenkins and STS Sr Java Developer Enterprise Holdings St Louis MO April 2016 to September 2018 Description Enterprise Holdings and its affiliates offer extensive car rentals carsharing truck rental By using different brands like Enterprise National and Alamo We can access those car rentals through the web and mobile applications are fleet management retails car sales and other transportation services Responsibilities Involved in all the phases of SDLC including Requirements Collection Design Analysis of the Customer Specifications Development and Customization of the Application using SOA Application is implemented using agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Developed frontend content using HTML5 CSS3 JavaScript JQuery Ajax and AngularJS Applied data transformation rules to transform code from one format to another for at using NodeJS Created the NodeJS Express server to build MVC framework from frontend side AngularJS to back end Developed clientside application ina clean MVC architecture andresponsive web pages using Bootstrap Involved in System builds using Spring Model View Controller MVC architecture Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface and SpringAOP for reusability logging purpose Used HibernateORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented and developed Restful web services with JAXRS using Jersey as provider and implemented security using OAUTH Worked with Springs JDBC DAO module to interact with MySQL and implemented database logging Developed and Consumed SOAP based Web Services with JAXWS specification Implemented DAO layer using Spring Integration and Hibernate to persist the data to the database Written complex SQL queries HQL created business tables and PLSQL procedures to store and retrieve data from the database Implemented SOA architectureusing JMS for sending and receiving messages while creating web services Used Rabbit MQ as Java Messaging Service for producing and consuming data between applications Developed JUnit test cases for elements web beans handlers and view helper classes Focused on Test Driven DevelopmentTDD for creating detailed JUnit tests for every single piece of functionality before writing the functionality Configured development environment using Web Sphere server for developers integration testing Used Maven as build automation tool andJenkins to perform continuous Integration Used GIT for version control tool and RAD for IDE Environment Java J2EE HTML5 CSS3 Bootstrap JavaScript JQuery AngularJS Spring Core Spring Security Spring MVC Spring IOC Hibernate OAuth MySQL REST SOAP JAXRS JAXWS Jersey JMS Rabbit MQ Docker Junit TDD SOA Web Sphere Maven Jenkins GIT Agile Methodology and RAD Java Developer Level 3 Communications Broomfield CO November 2014 to April 2016 DescriptionLevel 3 Communications is an American multinational telecommunications and Internet service provider company The project is about checking the connectivity to the network elements of the particular device It deals with the connection to the port and checks the interface status updown and BGP status updown by using the peer address Responsibilities Using Agile methodologies to plan work for every iteration and used continuous integration tool to make the build passes before deploying the code to other environments Used Spring MVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Used Spring Security for Authentication and Authorization of the application Extensively used JSON to parse the data from server side to satisfy the business requirement Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for Oracle Worked on Hibernate for mapping the java objects to relational database and SQL queries to fetch the data insert and update the data from the database Used Hibernate in Data Access Layer to access and update information in the database Extensively used HQL and SQL for querying databases Consumed Web Services to interact with other external interfaces to exchange the data in different forms by using Restful service Implemented SOA architecture with Web Services using SOAP WSDL UDDI and XML using Apache CXFframework and worked on parsing the XML files using DOMSAX parsers Created tables triggers PLSQL Stored Procedures SQL queries Joins i2ntegrityconstraints and views for IBM DB2 Used Multithreading to improve overall performance using Singleton pattern in Hibernate Utility class Implemented Restful and SOAP based Web Services and used Soap UI for testing Used Docker to collaborate code run and deliver more securely for both Linux Windows server Used Spring JMS module for lookup for the queues and MDBs for the listeners Involved in Unit Testing of various modules by generating the Test Cases Performed deployment of applications on Web Logic Involved in day to day handling of JIRA issues production issues at time that involved data inconsistencies that required to be solved in very less time Used Jenkins as build management tool for continuous integration process and used GIT as Version Control Involved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase Participated in Code Reviews of other modules documents and test cases Written LINUX shell scripts to identify user login information Environment Java J2EE HTML CSS Java Script JSP JSTL Spring IOC MVC DAO Security Hibernate IBM DB2 XML XSD SOAP UI Restful SOAP JAXRS JAXWS WSDL JMS JUnit Web Logic Jenkins Gradle GIT JIRA Agile Methodology Windows Linux JavaJ2EE Developer Colonial Life Insurance Columbia SC August 2012 to November 2014 DescriptionThis is an online application that enables clients to access review and update their products purchased from Colonial Life Insurance The primary users of this application are Colonial Life Insurance policy owners agents and customer service representatives The application provides an integrated environment for account management policy changesrenewals monthly premium dues alerts claims processing status Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology Developed User Interface using JSP JSF JSTL HTML CSS3 Java Script jQuery Used various jQuery UI controls and corresponding Event handlers Used Spring MVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Used Spring Security for Authentication and Authorization of the application Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for DB2 Worked on Hibernate in Data Access Layer for mapping the java objects to relational database and SQL queries to fetch the data insert and update the data from the database Consumed Web Services to interact with other external interfaces to exchange the data in different forms by using RESTful service Implemented SOA architecture with Web Services using SOAP WSDL and XML using Apache CXFframework and worked on parsing the XML files using DOMSAX parsers Extensively used JSON to parse the data from server side to satisfy the business requirement Created Tables Triggers PLSQL Stored Procedures SQL queries Joins and views for IBM DB2 Implemented RESTful and SOAP based Web Services and used Soap UI for testing Used Spring JMS module for lookup for the queues and MDBs for the listeners Involved in Unit Testing of various modules by generating the Test Cases Performed deployment of applications on JBOSS Written LINUX shell scripts to identify user login information Involved in day to day handling of JIRA issues production issues at time that involved data inconsistencies that required to be solved in very less time Involved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase Participated in Code Reviews of other modules documents test cases Environment Java J2EE HTML CSS3 JavaScript jQuery AngularJS JSP JSTL Spring Hibernate XML XSD SOAP UI Web Services RESTful SOAP WSDL Log4j JUnit IBM DB2 JBOSS Jenkins SVN Eclipse IDE JIRA Agile Methodology Linux Rational Rose and UML Education Bachelors Skills Eclipse J2ee Java Hibernate Spring Jax Jaxrpc Jaxws Jboss jquery Jsp Jstl Servlet Struts Database Db2 Oracle Plsql Sql Amazon web services Additional Information Technical Skills Languages C C Java 18 J2EE SQL PLSQL MarkupXML Technologies JSP JSTL HTML5 CSS3 JavaScript Bootstrap JQuery Ajax AngularJS ReactJS XSD XSLXSLT SAXDOM and JSON Tools Framework Servlet Struts Spring Spring IOC Spring AOP Spring MVC Spring Security Spring Boot Spring Data Spring Web Flow Jasper reports Log4j and GroovyGrails Build Automation ANT MAVEN Jenkins Bamboo Gradle Web services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Micro services Axis2 and Apache CXF Cloud Technologies Amazon Web Services EC2 SQS RDS IAM S3 Pivotal Cloud Foundry and Spring Cloud WebApp Servers Web Sphere Apache Tomcat JBOSS Web Logic Server and Apache Camel Database Oracle My SQL TOAD DB2 Cassandra MongoDB and Dynamo DB IDEs Eclipse Net Beans RAD IntelliJ and Spring Tool Suite STS OR mapping Hibernate IBatis and JPA Testing Tools Others Selenium TestNG JUnit Mockito Soap UI Putty Rational Clear Quest and Star Team Version Control Tortoise SVN CVS Rational Clear case and Git OS Environment Windows UNIX Linux Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns",
    "entities": [
        "System",
        "Micro Services",
        "Used Hibernate",
        "Version Control Involved",
        "Maven Gradle ANT",
        "Objects",
        "Java Messaging Service",
        "JSON Tools Framework Servlet",
        "Hibernate IBatis",
        "Security Hibernate",
        "TestDriven Development TDD Experience",
        "Rabbit MQ Active",
        "MVC Abstract Factory",
        "Applied",
        "Jersey",
        "Offer Users Convenient Payment Methods",
        "SpringCloud Oracle XSD JSON",
        "Spring IOC",
        "Hibernate Hands",
        "MVC Spring",
        "Java Messaging Services JMS like",
        "IBM",
        "Implemented Dependency Injection IOC",
        "XML",
        "Bootstrap Involved",
        "WebLogic Application Servers",
        "OAuth",
        "OracleDatabase Worked",
        "Description Enterprise Holdings",
        "Hibernate Utility",
        "JAXWS",
        "JUnit",
        "Springs",
        "Amazon",
        "NodeJS Express",
        "SOA Service Oriented Architecture and Micro Service Architecture Expertise",
        "JAVAJ2EE",
        "Developed and Consumed SOAP",
        "Tortoise",
        "Spring Security Designed",
        "DOMSAX",
        "Spring boot micro services",
        "Singleton Factory Prototype Business Delegate Session Faade Pattern Service",
        "Oracle Relational",
        "DAO",
        "Injection Databinding Filters Directives Templates Services",
        "Jenkins Hands",
        "Mockito",
        "Docker ImagesContainers Experience",
        "RAD",
        "Responsibilities Involved",
        "Relational Databases",
        "Restful",
        "Requirements Collection Design Analysis",
        "MQ",
        "Analysis Design Testing Deployment",
        "Colonial Life Insurance Columbia",
        "XML XSD",
        "Selenium Web Driver Selenium Grid",
        "HTML5",
        "DTDXSL XSLT XML",
        "Linux",
        "JSP",
        "the Customer Specifications Development and Customization of the Application using SOA Application",
        "JBOSS Jenkins SVN",
        "Bug",
        "Docker",
        "Responsibilities Using Agile",
        "NodeJS Created",
        "Eclipse RAD Spring Tool Suite",
        "ConcurrencyAPI Developed",
        "UI Restful SOAP",
        "SQLbased",
        "Web Logic Involved",
        "jQuery UI",
        "MVC",
        "Interface",
        "Garbage Collector SWING Collections Multithreading Event",
        "STS",
        "GIT",
        "Additional Information Technical Skills Languages C C",
        "Exception handling Generics and Serialization Experience",
        "StoredProcedures",
        "Web Services",
        "DB2 Worked on Hibernate in Data Access Layer",
        "Star Team Version",
        "Integrated Spring and Hibernate",
        "Hibernate Used Spring Security for Authentication and Authorization",
        "AWS",
        "Software Development Life Cycle SDLC Proficient",
        "the Test Cases Performed",
        "Oracle",
        "Web Services Experienced",
        "Hibernate Queries",
        "Coding",
        "Singleton",
        "Used Spring Security for Authentication and Authorization",
        "Amex",
        "Implemented Restful",
        "JavaJ2EE JSP JSTL",
        "CXF",
        "NodeJS Implemented",
        "SQL",
        "OAuth Protocol Used Hibernate",
        "BGP",
        "Log4j",
        "Hibernate Handled Transaction Management",
        "SAX DOM Expertise",
        "Apache CXF Cloud Technologies Amazon Web Services",
        "Software Development",
        "Micro Service Architecture",
        "IOC Hibernate",
        "JAXRS",
        "the Elastic Search Implemented",
        "Created Tables Triggers PLSQL Stored Procedures",
        "SVN CVS Rational Clear",
        "Used Spring",
        "Handson",
        "Oracle Worked on Hibernate",
        "Colonial Life Insurance",
        "SQS",
        "Application Experienced",
        "JAVA",
        "RESTful Service",
        "Maven",
        "Performed",
        "UI Web Services RESTful SOAP",
        "lJavaspan",
        "Hibernate Implemented",
        "XSL",
        "Apache CXFframework",
        "Git OS Environment Windows UNIX Linux Design Patterns",
        "Oracle DB2 My SQL",
        "Present Description American Express",
        "HibernateORM",
        "SVN",
        "andDynamo DB Proficient",
        "Maintained Interface",
        "REST",
        "Joins",
        "REST Micro Services",
        "FrontEnd UI",
        "Application",
        "TOAD",
        "Software Development Life Cycle",
        "Soap UI Experienced",
        "Enterprise National",
        "AWS Micro Services",
        "Dependency Injection",
        "Integration"
    ],
    "experience": "Experience in developing application using Software Development methodologies like Water Fall Agile SCRUM and TestDriven Development TDD Experience in FrontEnd UI development using HTML5 CSS3 Bootstrap Ajax JavaScript JQuery AngularJS and NodeJS Experience with Java 18 features such as Lambdas for making function calls by using functional interfaces which makes code readable and concise Experience in implementing Java18 features and like parallel streams lambdas and filters Experience in developing cloudbased applications using Spring Cloud Pivotal Cloud Foundry and AWS Experience in working with AWS like EC2 EBS ELB S3 SQS Lambda Dynamo DBand Elastic Search Expertise in developing and implementing application based on SOA Service Oriented Architecture and Micro Service Architecture Expertise in developing enterprise applications with various open source frameworks like JavaJ2EE JSP JSTL Servlets EJB Struts Spring Core IOC MVC AOP Security Boot Batch Web Services JMS JPA JDBC and Hibernate Hands on experience in design and development of robust and highly scalable applications and APIs based on REST and SOAP applications using AXISWSDL UDDI XML JAXWS JAXRS JAXB JAXRPC and Jersey Apache CXF frameworks Experience in implementing Core Java concepts and strong understanding of Garbage Collector SWING Collections Multithreading Event handling Exception handling Generics and Serialization Experience in design patterns like Singleton Factory Prototype Business Delegate Session Faade Pattern Service locator Visitor Observer Decorator Front Controller DAO MVC Abstract Factory and Factory Pattern for reusing most efficient and effective strategies for new development Expertise in XML technologies such as DTDXSL XSLT XML schemas XSL and parsers like SAX DOM Expertise in developing and consuming REST and SOAP based Web Services Experienced with JAXRS specification like Jersey andRest Easy to Implement REST based Application Experienced with JAXRPC JAXWS specification like Apache Axis I Apache Axis II and Apache CXF to Implement SOAP based Application and tested it using Soap UI Experienced in the persistence layer using JPA JDBC and Hibernate to persist data to the database Experience with Java Messaging Services JMS like Rabbit MQ Active MQ and Apache camel Hands on experience working with Relational Databases like Oracle DB2 My SQL and No SQL databases like MongoDB andDynamo DB Proficient in creatingBusiness tables PLSQL Stored procedures and writing SQL queries to retrieve data from the database Pleasant experience in different IDEs like Eclipse RAD Spring Tool Suite and IntelliJ IDEA Experience in working with various application and web servers like JBOSS BES Web Logic IBM Web Sphere Glassfish and Apache Tomcat Developing test cases and determining application functionality using JUnit Mockito and Log4j Experienced with build automation tools like Maven Gradle ANT and Jenkins for CICD Worked with different version control systems like Tortoise SVN GIT CVS and Visual Source Safe Expertise in Docker containers leveraging Linux containers and AMIs to create Docker ImagesContainers Experience in development deployment and troubleshooting Web based and enterprisebased applications on Windows UNIX and Linux platforms Effective communication and analytical skills and a demonstrated ability to handle multiple tasks as well as work independently or in a team Work Experience Full Stack Java Developer American Express Phoenix AZ September 2018 to Present Description American Express is a banking and global financial services company that provides customers for access to products insights and experiences that enrich lives and build business success The project was involved for creating UI Screens for Amex productservice and also developing an internal Java coding by retrieving data from client side processing it and saving within the database It also involved for fetching the data from database and displaying it to the user Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Developed the viewcontroller components using JSPs HTML5 CSS3 AJAX JavaScript jQuery Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS Handson experience in developing integration with Elastic search in any of the programming languages like JAVA and JavaScript Having knowledge of advance reporting using Elastic search and NodeJS Implemented core features of AngularJS frameworks such as dependency Injection Databinding Filters Directives Templates Services and DeepLinkingDesigning Used Java 18 features like stream and Lambda expressions Maintained Interface compatibility and concurrency in the project using Java 18 new features like default staticmethods and ConcurrencyAPI Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Designed and developed Micro Services business components using Spring Involved in the development of Micro Services for all the models using combination of Spring Boot and Spring Security Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Developed APIs to read and publish data from Elastic Search cluster using native Java Transport client as well as REST client Worked on Spring Integration with the Elastic Search Implemented the RESTAPIs and data transformers using the JAVA connector which involves the JAVA8 features Lambda and Streams in particular Used Spring MVC framework for implementing ModelView Controller MVC architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Used Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc Used Spring Batch for processing large amount of data like transaction management job processing resource management and logging Secured the APIs by implementing OAuth 20 tokenbased authenticationauthorization scheme using Spring Security Designed and developed thirdparty Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol Used Hibernate ORM framework as persistenceengine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java Involved in writing SQL and StoredProcedures for handling complex queries with help of TOAD and access them through Java Programs from OracleDatabase Worked with MongoDB to store nonrelational data into collection and retrieve them whenever required Worked on setting up Maven scripts to build package and deploy application code to the target WebLogic Application Servers and worked on continuous integration servers like Jenkins Hands on Coding to build REST Micro Services using SpringCloud Oracle XSD JSON Spring Config and Jenkins Worked on developing RESTful endpoints to cache application specific data in inmemory dataclusters like REDIS and exposed them with RESTful endpoints Focused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality Worked on Log4J to validate functionalities and Mockito framework JUnit for unit testing Performed automation testing and authored test scripts using Selenium Web Driver Selenium Grid and JUnit Worked in Agile TDD environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Environment AgileSCRUM Java 18 HTML5 CSS3 JavaScript JQuery Ajax Bootstrap AngularJS AWS Micro Services Hibernate Spring MongoDB Spring Batch Spring Boot Spring Security XML GIT JSP Spring MVC JDBC Mockito JUnit Maven IBM WebSphere BackboneJS Selenium Restful Log4J SOA Java Server Pages JIRA Spring Security Jenkins and STS Sr Java Developer Enterprise Holdings St Louis MO April 2016 to September 2018 Description Enterprise Holdings and its affiliates offer extensive car rentals carsharing truck rental By using different brands like Enterprise National and Alamo We can access those car rentals through the web and mobile applications are fleet management retails car sales and other transportation services Responsibilities Involved in all the phases of SDLC including Requirements Collection Design Analysis of the Customer Specifications Development and Customization of the Application using SOA Application is implemented using agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Developed frontend content using HTML5 CSS3 JavaScript JQuery Ajax and AngularJS Applied data transformation rules to transform code from one format to another for at using NodeJS Created the NodeJS Express server to build MVC framework from frontend side AngularJS to back end Developed clientside application ina clean MVC architecture andresponsive web pages using Bootstrap Involved in System builds using Spring Model View Controller MVC architecture Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface and SpringAOP for reusability logging purpose Used HibernateORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented and developed Restful web services with JAXRS using Jersey as provider and implemented security using OAUTH Worked with Springs JDBC DAO module to interact with MySQL and implemented database logging Developed and Consumed SOAP based Web Services with JAXWS specification Implemented DAO layer using Spring Integration and Hibernate to persist the data to the database Written complex SQL queries HQL created business tables and PLSQL procedures to store and retrieve data from the database Implemented SOA architectureusing JMS for sending and receiving messages while creating web services Used Rabbit MQ as Java Messaging Service for producing and consuming data between applications Developed JUnit test cases for elements web beans handlers and view helper classes Focused on Test Driven DevelopmentTDD for creating detailed JUnit tests for every single piece of functionality before writing the functionality Configured development environment using Web Sphere server for developers integration testing Used Maven as build automation tool andJenkins to perform continuous Integration Used GIT for version control tool and RAD for IDE Environment Java J2EE HTML5 CSS3 Bootstrap JavaScript JQuery AngularJS Spring Core Spring Security Spring MVC Spring IOC Hibernate OAuth MySQL REST SOAP JAXRS JAXWS Jersey JMS Rabbit MQ Docker Junit TDD SOA Web Sphere Maven Jenkins GIT Agile Methodology and RAD Java Developer Level 3 Communications Broomfield CO November 2014 to April 2016 DescriptionLevel 3 Communications is an American multinational telecommunications and Internet service provider company The project is about checking the connectivity to the network elements of the particular device It deals with the connection to the port and checks the interface status updown and BGP status updown by using the peer address Responsibilities Using Agile methodologies to plan work for every iteration and used continuous integration tool to make the build passes before deploying the code to other environments Used Spring MVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Used Spring Security for Authentication and Authorization of the application Extensively used JSON to parse the data from server side to satisfy the business requirement Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for Oracle Worked on Hibernate for mapping the java objects to relational database and SQL queries to fetch the data insert and update the data from the database Used Hibernate in Data Access Layer to access and update information in the database Extensively used HQL and SQL for querying databases Consumed Web Services to interact with other external interfaces to exchange the data in different forms by using Restful service Implemented SOA architecture with Web Services using SOAP WSDL UDDI and XML using Apache CXFframework and worked on parsing the XML files using DOMSAX parsers Created tables triggers PLSQL Stored Procedures SQL queries Joins i2ntegrityconstraints and views for IBM DB2 Used Multithreading to improve overall performance using Singleton pattern in Hibernate Utility class Implemented Restful and SOAP based Web Services and used Soap UI for testing Used Docker to collaborate code run and deliver more securely for both Linux Windows server Used Spring JMS module for lookup for the queues and MDBs for the listeners Involved in Unit Testing of various modules by generating the Test Cases Performed deployment of applications on Web Logic Involved in day to day handling of JIRA issues production issues at time that involved data inconsistencies that required to be solved in very less time Used Jenkins as build management tool for continuous integration process and used GIT as Version Control Involved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase Participated in Code Reviews of other modules documents and test cases Written LINUX shell scripts to identify user login information Environment Java J2EE HTML CSS Java Script JSP JSTL Spring IOC MVC DAO Security Hibernate IBM DB2 XML XSD SOAP UI Restful SOAP JAXRS JAXWS WSDL JMS JUnit Web Logic Jenkins Gradle GIT JIRA Agile Methodology Windows Linux JavaJ2EE Developer Colonial Life Insurance Columbia SC August 2012 to November 2014 DescriptionThis is an online application that enables clients to access review and update their products purchased from Colonial Life Insurance The primary users of this application are Colonial Life Insurance policy owners agents and customer service representatives The application provides an integrated environment for account management policy changesrenewals monthly premium dues alerts claims processing status Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology Developed User Interface using JSP JSF JSTL HTML CSS3 Java Script jQuery Used various jQuery UI controls and corresponding Event handlers Used Spring MVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Used Spring Security for Authentication and Authorization of the application Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for DB2 Worked on Hibernate in Data Access Layer for mapping the java objects to relational database and SQL queries to fetch the data insert and update the data from the database Consumed Web Services to interact with other external interfaces to exchange the data in different forms by using RESTful service Implemented SOA architecture with Web Services using SOAP WSDL and XML using Apache CXFframework and worked on parsing the XML files using DOMSAX parsers Extensively used JSON to parse the data from server side to satisfy the business requirement Created Tables Triggers PLSQL Stored Procedures SQL queries Joins and views for IBM DB2 Implemented RESTful and SOAP based Web Services and used Soap UI for testing Used Spring JMS module for lookup for the queues and MDBs for the listeners Involved in Unit Testing of various modules by generating the Test Cases Performed deployment of applications on JBOSS Written LINUX shell scripts to identify user login information Involved in day to day handling of JIRA issues production issues at time that involved data inconsistencies that required to be solved in very less time Involved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase Participated in Code Reviews of other modules documents test cases Environment Java J2EE HTML CSS3 JavaScript jQuery AngularJS JSP JSTL Spring Hibernate XML XSD SOAP UI Web Services RESTful SOAP WSDL Log4j JUnit IBM DB2 JBOSS Jenkins SVN Eclipse IDE JIRA Agile Methodology Linux Rational Rose and UML Education Bachelors Skills Eclipse J2ee Java Hibernate Spring Jax Jaxrpc Jaxws Jboss jquery Jsp Jstl Servlet Struts Database Db2 Oracle Plsql Sql Amazon web services Additional Information Technical Skills Languages C C Java 18 J2EE SQL PLSQL MarkupXML Technologies JSP JSTL HTML5 CSS3 JavaScript Bootstrap JQuery Ajax AngularJS ReactJS XSD XSLXSLT SAXDOM and JSON Tools Framework Servlet Struts Spring Spring IOC Spring AOP Spring MVC Spring Security Spring Boot Spring Data Spring Web Flow Jasper reports Log4j and GroovyGrails Build Automation ANT MAVEN Jenkins Bamboo Gradle Web services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Micro services Axis2 and Apache CXF Cloud Technologies Amazon Web Services EC2 SQS RDS IAM S3 Pivotal Cloud Foundry and Spring Cloud WebApp Servers Web Sphere Apache Tomcat JBOSS Web Logic Server and Apache Camel Database Oracle My SQL TOAD DB2 Cassandra MongoDB and Dynamo DB IDEs Eclipse Net Beans RAD IntelliJ and Spring Tool Suite STS OR mapping Hibernate IBatis and JPA Testing Tools Others Selenium TestNG JUnit Mockito Soap UI Putty Rational Clear Quest and Star Team Version Control Tortoise SVN CVS Rational Clear case and Git OS Environment Windows UNIX Linux Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "American",
        "Express",
        "Phoenix",
        "AZ",
        "years",
        "IT",
        "experience",
        "Analysis",
        "Design",
        "Testing",
        "Deployment",
        "web",
        "clientserverapplications",
        "multiplatform",
        "environments",
        "JAVAJ2EE",
        "technologies",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Proficient",
        "web",
        "applications",
        "highperformance",
        "Experience",
        "application",
        "Software",
        "Development",
        "methodologies",
        "Water",
        "Fall",
        "Agile",
        "SCRUM",
        "TestDriven",
        "Development",
        "TDD",
        "Experience",
        "FrontEnd",
        "UI",
        "development",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Ajax",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "NodeJS",
        "Experience",
        "Java",
        "features",
        "Lambdas",
        "function",
        "calls",
        "interfaces",
        "code",
        "Experience",
        "Java18",
        "features",
        "streams",
        "lambdas",
        "Experience",
        "applications",
        "Spring",
        "Cloud",
        "Cloud",
        "Foundry",
        "AWS",
        "Experience",
        "AWS",
        "EC2",
        "EBS",
        "ELB",
        "S3",
        "SQS",
        "Lambda",
        "Dynamo",
        "DBand",
        "Elastic",
        "Search",
        "Expertise",
        "application",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "Micro",
        "Service",
        "Architecture",
        "Expertise",
        "enterprise",
        "applications",
        "source",
        "frameworks",
        "JavaJ2EE",
        "JSP",
        "JSTL",
        "Servlets",
        "EJB",
        "Struts",
        "Spring",
        "Core",
        "IOC",
        "MVC",
        "AOP",
        "Security",
        "Boot",
        "Batch",
        "Web",
        "Services",
        "JMS",
        "JPA",
        "JDBC",
        "Hibernate",
        "Hands",
        "experience",
        "design",
        "development",
        "applications",
        "APIs",
        "REST",
        "applications",
        "AXISWSDL",
        "UDDI",
        "XML",
        "JAXWS",
        "JAXRS",
        "JAXB",
        "JAXRPC",
        "Jersey",
        "Apache",
        "CXF",
        "frameworks",
        "Experience",
        "Core",
        "Java",
        "concepts",
        "understanding",
        "Garbage",
        "Collector",
        "SWING",
        "Collections",
        "Multithreading",
        "Event",
        "Exception",
        "Generics",
        "Serialization",
        "Experience",
        "design",
        "patterns",
        "Singleton",
        "Factory",
        "Prototype",
        "Business",
        "Delegate",
        "Session",
        "Faade",
        "Pattern",
        "Service",
        "locator",
        "Visitor",
        "Observer",
        "Decorator",
        "Front",
        "Controller",
        "DAO",
        "MVC",
        "Abstract",
        "Factory",
        "Factory",
        "Pattern",
        "strategies",
        "development",
        "Expertise",
        "XML",
        "technologies",
        "DTDXSL",
        "XSLT",
        "XML",
        "schemas",
        "XSL",
        "parsers",
        "SAX",
        "DOM",
        "Expertise",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "JAXRS",
        "specification",
        "Jersey",
        "andRest",
        "Easy",
        "REST",
        "Application",
        "JAXRPC",
        "JAXWS",
        "specification",
        "Apache",
        "Axis",
        "I",
        "Apache",
        "Axis",
        "II",
        "Apache",
        "CXF",
        "SOAP",
        "Application",
        "Soap",
        "UI",
        "persistence",
        "layer",
        "JPA",
        "JDBC",
        "Hibernate",
        "data",
        "database",
        "Experience",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "Rabbit",
        "MQ",
        "MQ",
        "Apache",
        "camel",
        "Hands",
        "experience",
        "Relational",
        "Databases",
        "Oracle",
        "DB2",
        "SQL",
        "SQL",
        "MongoDB",
        "andDynamo",
        "DB",
        "Proficient",
        "tables",
        "procedures",
        "SQL",
        "queries",
        "data",
        "database",
        "experience",
        "IDEs",
        "Eclipse",
        "RAD",
        "Spring",
        "Tool",
        "Suite",
        "IntelliJ",
        "IDEA",
        "Experience",
        "application",
        "web",
        "servers",
        "JBOSS",
        "BES",
        "Web",
        "Logic",
        "IBM",
        "Web",
        "Sphere",
        "Glassfish",
        "Apache",
        "Tomcat",
        "test",
        "cases",
        "application",
        "functionality",
        "JUnit",
        "Mockito",
        "Log4j",
        "build",
        "automation",
        "tools",
        "Maven",
        "Gradle",
        "ANT",
        "Jenkins",
        "CICD",
        "version",
        "control",
        "systems",
        "Tortoise",
        "SVN",
        "GIT",
        "CVS",
        "Visual",
        "Source",
        "Safe",
        "Expertise",
        "Docker",
        "containers",
        "Linux",
        "containers",
        "AMIs",
        "Docker",
        "ImagesContainers",
        "Experience",
        "development",
        "deployment",
        "troubleshooting",
        "Web",
        "applications",
        "Windows",
        "UNIX",
        "Linux",
        "communication",
        "skills",
        "ability",
        "tasks",
        "work",
        "team",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "American",
        "Express",
        "Phoenix",
        "AZ",
        "September",
        "Present",
        "Description",
        "American",
        "Express",
        "banking",
        "services",
        "company",
        "customers",
        "access",
        "products",
        "insights",
        "experiences",
        "business",
        "success",
        "project",
        "UI",
        "Screens",
        "Amex",
        "productservice",
        "Java",
        "data",
        "client",
        "side",
        "database",
        "data",
        "database",
        "user",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "viewcontroller",
        "components",
        "JSPs",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "jQuery",
        "logic",
        "navigation",
        "screen",
        "screen",
        "login",
        "functionality",
        "client",
        "side",
        "AngularJS",
        "Handson",
        "experience",
        "integration",
        "search",
        "programming",
        "languages",
        "JAVA",
        "JavaScript",
        "knowledge",
        "advance",
        "reporting",
        "search",
        "NodeJS",
        "core",
        "features",
        "AngularJS",
        "frameworks",
        "dependency",
        "Injection",
        "Databinding",
        "Filters",
        "Directives",
        "Templates",
        "Services",
        "DeepLinkingDesigning",
        "Java",
        "features",
        "stream",
        "Lambda",
        "expressions",
        "Interface",
        "compatibility",
        "concurrency",
        "project",
        "Java",
        "features",
        "default",
        "staticmethods",
        "ConcurrencyAPI",
        "application",
        "application",
        "Micro",
        "Service",
        "Architecture",
        "RESTful",
        "Service",
        "deployments",
        "AWS",
        "Spring",
        "Cloud",
        "AWS",
        "Micro",
        "Services",
        "business",
        "components",
        "Spring",
        "development",
        "Micro",
        "Services",
        "models",
        "combination",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Responsible",
        "instance",
        "Amazon",
        "EC2",
        "AWS",
        "application",
        "Deployed",
        "Docker",
        "Spring",
        "boot",
        "micro",
        "services",
        "AWS",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "AWS",
        "console",
        "APIs",
        "data",
        "Elastic",
        "Search",
        "cluster",
        "Java",
        "Transport",
        "client",
        "REST",
        "client",
        "Spring",
        "Integration",
        "Elastic",
        "Search",
        "RESTAPIs",
        "data",
        "transformers",
        "JAVA",
        "connector",
        "JAVA8",
        "Lambda",
        "Streams",
        "Used",
        "Spring",
        "MVC",
        "framework",
        "ModelView",
        "Controller",
        "MVC",
        "architecture",
        "Web",
        "tier",
        "level",
        "layer",
        "application",
        "complexity",
        "integration",
        "maintenance",
        "Spring",
        "AOP",
        "concerns",
        "data",
        "transactions",
        "details",
        "Spring",
        "Batch",
        "amount",
        "data",
        "transaction",
        "management",
        "job",
        "processing",
        "resource",
        "management",
        "Secured",
        "APIs",
        "OAuth",
        "authenticationauthorization",
        "scheme",
        "Spring",
        "Security",
        "thirdparty",
        "Payment",
        "services",
        "Users",
        "Convenient",
        "Payment",
        "Methods",
        "OAuth",
        "Protocol",
        "Hibernate",
        "ORM",
        "framework",
        "persistenceengine",
        "Hibernate",
        "Queries",
        "mapping",
        "Oracle",
        "database",
        "Objects",
        "Java",
        "SQL",
        "StoredProcedures",
        "queries",
        "help",
        "TOAD",
        "Java",
        "Programs",
        "OracleDatabase",
        "Worked",
        "data",
        "collection",
        "Worked",
        "Maven",
        "scripts",
        "package",
        "application",
        "code",
        "target",
        "WebLogic",
        "Application",
        "Servers",
        "integration",
        "servers",
        "Jenkins",
        "Hands",
        "REST",
        "Micro",
        "Services",
        "SpringCloud",
        "Oracle",
        "XSD",
        "JSON",
        "Spring",
        "Config",
        "Jenkins",
        "endpoints",
        "cache",
        "application",
        "data",
        "dataclusters",
        "REDIS",
        "endpoints",
        "Test",
        "Driven",
        "Development",
        "JUnit",
        "tests",
        "piece",
        "functionality",
        "functionality",
        "Log4J",
        "functionalities",
        "Mockito",
        "framework",
        "JUnit",
        "unit",
        "Performed",
        "automation",
        "testing",
        "test",
        "scripts",
        "Selenium",
        "Web",
        "Driver",
        "Selenium",
        "Grid",
        "JUnit",
        "Agile",
        "TDD",
        "environment",
        "SDLC",
        "tools",
        "GIT",
        "Jira",
        "Jenkins",
        "Maven",
        "build",
        "packaging",
        "deployments",
        "application",
        "components",
        "Environment",
        "AgileSCRUM",
        "Java",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Ajax",
        "Bootstrap",
        "AWS",
        "Micro",
        "Services",
        "Hibernate",
        "Spring",
        "MongoDB",
        "Spring",
        "Batch",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "XML",
        "GIT",
        "JSP",
        "Spring",
        "MVC",
        "JDBC",
        "Mockito",
        "JUnit",
        "Maven",
        "IBM",
        "WebSphere",
        "Selenium",
        "Restful",
        "SOA",
        "Java",
        "Server",
        "Pages",
        "JIRA",
        "Spring",
        "Security",
        "Jenkins",
        "STS",
        "Sr",
        "Java",
        "Developer",
        "Enterprise",
        "Holdings",
        "St",
        "Louis",
        "MO",
        "April",
        "September",
        "Description",
        "Enterprise",
        "Holdings",
        "affiliates",
        "car",
        "rentals",
        "truck",
        "rental",
        "brands",
        "Enterprise",
        "National",
        "Alamo",
        "car",
        "rentals",
        "web",
        "applications",
        "fleet",
        "management",
        "retails",
        "car",
        "sales",
        "transportation",
        "services",
        "Responsibilities",
        "phases",
        "SDLC",
        "Requirements",
        "Collection",
        "Design",
        "Analysis",
        "Customer",
        "Specifications",
        "Development",
        "Customization",
        "Application",
        "SOA",
        "Application",
        "methodology",
        "SCRUM",
        "meeting",
        "status",
        "issues",
        "frontend",
        "content",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Ajax",
        "data",
        "transformation",
        "rules",
        "code",
        "format",
        "NodeJS",
        "NodeJS",
        "Express",
        "server",
        "MVC",
        "framework",
        "frontend",
        "side",
        "application",
        "ina",
        "clean",
        "MVC",
        "architecture",
        "web",
        "pages",
        "Bootstrap",
        "System",
        "Spring",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "Dependency",
        "Injection",
        "IOC",
        "feature",
        "spring",
        "framework",
        "beans",
        "User",
        "Interface",
        "reusability",
        "purpose",
        "HibernateORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "web",
        "services",
        "JAXRS",
        "Jersey",
        "provider",
        "security",
        "OAUTH",
        "Springs",
        "JDBC",
        "DAO",
        "module",
        "MySQL",
        "database",
        "Developed",
        "Consumed",
        "SOAP",
        "Web",
        "Services",
        "JAXWS",
        "specification",
        "DAO",
        "layer",
        "Spring",
        "Integration",
        "Hibernate",
        "data",
        "database",
        "SQL",
        "HQL",
        "business",
        "tables",
        "PLSQL",
        "procedures",
        "data",
        "database",
        "SOA",
        "JMS",
        "messages",
        "web",
        "services",
        "Rabbit",
        "MQ",
        "Java",
        "Messaging",
        "Service",
        "data",
        "applications",
        "JUnit",
        "test",
        "cases",
        "elements",
        "web",
        "beans",
        "handlers",
        "helper",
        "classes",
        "Test",
        "DevelopmentTDD",
        "JUnit",
        "tests",
        "piece",
        "functionality",
        "functionality",
        "Configured",
        "development",
        "environment",
        "Web",
        "Sphere",
        "server",
        "developers",
        "integration",
        "testing",
        "Maven",
        "build",
        "automation",
        "tool",
        "andJenkins",
        "Integration",
        "GIT",
        "version",
        "control",
        "tool",
        "RAD",
        "IDE",
        "Environment",
        "Java",
        "J2EE",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "Spring",
        "Core",
        "Spring",
        "Security",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Hibernate",
        "OAuth",
        "MySQL",
        "REST",
        "SOAP",
        "JAXRS",
        "JAXWS",
        "Jersey",
        "JMS",
        "Rabbit",
        "MQ",
        "Docker",
        "Junit",
        "TDD",
        "SOA",
        "Web",
        "Sphere",
        "Maven",
        "Jenkins",
        "GIT",
        "Agile",
        "Methodology",
        "RAD",
        "Java",
        "Developer",
        "Level",
        "Communications",
        "Broomfield",
        "CO",
        "November",
        "April",
        "DescriptionLevel",
        "Communications",
        "telecommunications",
        "Internet",
        "service",
        "provider",
        "company",
        "project",
        "connectivity",
        "network",
        "elements",
        "device",
        "connection",
        "port",
        "interface",
        "status",
        "updown",
        "BGP",
        "status",
        "updown",
        "peer",
        "address",
        "Responsibilities",
        "methodologies",
        "work",
        "iteration",
        "integration",
        "tool",
        "build",
        "passes",
        "code",
        "environments",
        "Spring",
        "MVC",
        "Dependency",
        "Injection",
        "presentation",
        "business",
        "logic",
        "coupling",
        "layers",
        "business",
        "layer",
        "services",
        "components",
        "Spring",
        "IOC",
        "cross",
        "concerns",
        "Logging",
        "User",
        "Interface",
        "exceptions",
        "Transactions",
        "Spring",
        "AOP",
        "Integrated",
        "Spring",
        "DAO",
        "data",
        "access",
        "Hibernate",
        "persistence",
        "framework",
        "Hibernate",
        "Handled",
        "Transaction",
        "Management",
        "data",
        "source",
        "Spring",
        "Security",
        "Authentication",
        "Authorization",
        "application",
        "JSON",
        "data",
        "server",
        "side",
        "business",
        "requirement",
        "Hibernate",
        "mapping",
        "files",
        "business",
        "logic",
        "Object",
        "relationships",
        "Integrated",
        "Spring",
        "Hibernate",
        "components",
        "services",
        "Hibernate",
        "spring",
        "Established",
        "Database",
        "Connectivity",
        "JDBC",
        "Hibernate",
        "mapping",
        "Spring",
        "ORM",
        "Oracle",
        "Worked",
        "Hibernate",
        "objects",
        "database",
        "SQL",
        "data",
        "data",
        "database",
        "Hibernate",
        "Data",
        "Access",
        "Layer",
        "information",
        "database",
        "HQL",
        "SQL",
        "databases",
        "Consumed",
        "Web",
        "Services",
        "interfaces",
        "data",
        "forms",
        "service",
        "SOA",
        "architecture",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "UDDI",
        "XML",
        "Apache",
        "CXFframework",
        "XML",
        "files",
        "DOMSAX",
        "parsers",
        "Created",
        "tables",
        "PLSQL",
        "Stored",
        "Procedures",
        "SQL",
        "i2ntegrityconstraints",
        "views",
        "IBM",
        "DB2",
        "Multithreading",
        "performance",
        "Singleton",
        "pattern",
        "Hibernate",
        "Utility",
        "class",
        "SOAP",
        "Web",
        "Services",
        "Soap",
        "UI",
        "Docker",
        "code",
        "run",
        "Linux",
        "Windows",
        "server",
        "Spring",
        "JMS",
        "module",
        "lookup",
        "queues",
        "MDBs",
        "listeners",
        "Unit",
        "Testing",
        "modules",
        "Test",
        "Cases",
        "deployment",
        "applications",
        "Web",
        "Logic",
        "day",
        "day",
        "handling",
        "JIRA",
        "production",
        "issues",
        "time",
        "data",
        "inconsistencies",
        "time",
        "Jenkins",
        "management",
        "tool",
        "integration",
        "process",
        "GIT",
        "Version",
        "Control",
        "Bug",
        "fixing",
        "modules",
        "testing",
        "teams",
        "application",
        "Integration",
        "testing",
        "phase",
        "Code",
        "Reviews",
        "modules",
        "documents",
        "test",
        "cases",
        "LINUX",
        "shell",
        "scripts",
        "user",
        "login",
        "information",
        "Environment",
        "Java",
        "J2EE",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "JSP",
        "JSTL",
        "Spring",
        "IOC",
        "MVC",
        "DAO",
        "Security",
        "Hibernate",
        "IBM",
        "DB2",
        "XML",
        "XSD",
        "SOAP",
        "UI",
        "Restful",
        "SOAP",
        "JAXRS",
        "JAXWS",
        "WSDL",
        "JMS",
        "JUnit",
        "Web",
        "Logic",
        "Jenkins",
        "Gradle",
        "GIT",
        "JIRA",
        "Agile",
        "Methodology",
        "Linux",
        "JavaJ2EE",
        "Developer",
        "Colonial",
        "Life",
        "Insurance",
        "Columbia",
        "SC",
        "August",
        "November",
        "DescriptionThis",
        "application",
        "clients",
        "review",
        "products",
        "Colonial",
        "Life",
        "Insurance",
        "users",
        "application",
        "Colonial",
        "Life",
        "Insurance",
        "policy",
        "owners",
        "agents",
        "customer",
        "service",
        "representatives",
        "application",
        "environment",
        "account",
        "management",
        "policy",
        "changesrenewals",
        "premium",
        "dues",
        "claims",
        "status",
        "Responsibilities",
        "phases",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "Agile",
        "Methodology",
        "Developed",
        "User",
        "Interface",
        "JSP",
        "JSF",
        "JSTL",
        "HTML",
        "CSS3",
        "Java",
        "Script",
        "jQuery",
        "jQuery",
        "UI",
        "controls",
        "Event",
        "handlers",
        "Spring",
        "MVC",
        "Dependency",
        "Injection",
        "presentation",
        "business",
        "logic",
        "coupling",
        "layers",
        "business",
        "layer",
        "services",
        "components",
        "Spring",
        "IOC",
        "cross",
        "concerns",
        "Logging",
        "User",
        "Interface",
        "exceptions",
        "Transactions",
        "Spring",
        "AOP",
        "Integrated",
        "Spring",
        "DAO",
        "data",
        "access",
        "Hibernate",
        "Used",
        "Spring",
        "Security",
        "Authentication",
        "Authorization",
        "application",
        "persistence",
        "framework",
        "Hibernate",
        "Handled",
        "Transaction",
        "Management",
        "data",
        "source",
        "Hibernate",
        "mapping",
        "files",
        "business",
        "logic",
        "Object",
        "relationships",
        "Integrated",
        "Spring",
        "Hibernate",
        "components",
        "services",
        "Hibernate",
        "spring",
        "Established",
        "Database",
        "Connectivity",
        "JDBC",
        "Hibernate",
        "mapping",
        "Spring",
        "ORM",
        "DB2",
        "Hibernate",
        "Data",
        "Access",
        "Layer",
        "objects",
        "database",
        "SQL",
        "data",
        "data",
        "database",
        "Consumed",
        "Web",
        "Services",
        "interfaces",
        "data",
        "forms",
        "service",
        "SOA",
        "architecture",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "XML",
        "Apache",
        "CXFframework",
        "XML",
        "files",
        "DOMSAX",
        "parsers",
        "JSON",
        "data",
        "server",
        "side",
        "business",
        "requirement",
        "Created",
        "Tables",
        "Triggers",
        "PLSQL",
        "Stored",
        "Procedures",
        "SQL",
        "Joins",
        "views",
        "IBM",
        "DB2",
        "SOAP",
        "Web",
        "Services",
        "Soap",
        "UI",
        "Spring",
        "JMS",
        "module",
        "lookup",
        "queues",
        "MDBs",
        "listeners",
        "Unit",
        "Testing",
        "modules",
        "Test",
        "Cases",
        "deployment",
        "applications",
        "JBOSS",
        "Written",
        "LINUX",
        "shell",
        "scripts",
        "user",
        "login",
        "information",
        "day",
        "day",
        "handling",
        "JIRA",
        "production",
        "issues",
        "time",
        "data",
        "inconsistencies",
        "time",
        "Bug",
        "fixing",
        "modules",
        "testing",
        "teams",
        "application",
        "Integration",
        "testing",
        "phase",
        "Code",
        "Reviews",
        "modules",
        "documents",
        "test",
        "cases",
        "Environment",
        "Java",
        "J2EE",
        "HTML",
        "CSS3",
        "JavaScript",
        "jQuery",
        "JSP",
        "JSTL",
        "Spring",
        "Hibernate",
        "XML",
        "XSD",
        "SOAP",
        "UI",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "Log4j",
        "JUnit",
        "IBM",
        "DB2",
        "JBOSS",
        "Jenkins",
        "SVN",
        "Eclipse",
        "IDE",
        "JIRA",
        "Agile",
        "Methodology",
        "Linux",
        "Rational",
        "Rose",
        "UML",
        "Education",
        "Bachelors",
        "Skills",
        "Eclipse",
        "J2ee",
        "Java",
        "Hibernate",
        "Spring",
        "Jax",
        "Jaxrpc",
        "Jaxws",
        "Jboss",
        "jquery",
        "Jsp",
        "Jstl",
        "Servlet",
        "Struts",
        "Database",
        "Db2",
        "Oracle",
        "Plsql",
        "Sql",
        "Amazon",
        "web",
        "services",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "C",
        "C",
        "Java",
        "J2EE",
        "SQL",
        "PLSQL",
        "MarkupXML",
        "Technologies",
        "JSP",
        "JSTL",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "Ajax",
        "ReactJS",
        "XSD",
        "XSLXSLT",
        "SAXDOM",
        "JSON",
        "Tools",
        "Framework",
        "Servlet",
        "Struts",
        "Spring",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "Spring",
        "Web",
        "Flow",
        "Jasper",
        "reports",
        "Log4j",
        "GroovyGrails",
        "Build",
        "Automation",
        "ANT",
        "MAVEN",
        "Jenkins",
        "Bamboo",
        "Gradle",
        "Web",
        "services",
        "RESTful",
        "UDDI",
        "WSDL",
        "JAXRPC",
        "JAXRS",
        "JAXWS",
        "JAXB",
        "Micro",
        "services",
        "Axis2",
        "Apache",
        "CXF",
        "Cloud",
        "Technologies",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "SQS",
        "RDS",
        "IAM",
        "S3",
        "Cloud",
        "Foundry",
        "Spring",
        "Cloud",
        "WebApp",
        "Servers",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "JBOSS",
        "Web",
        "Logic",
        "Server",
        "Apache",
        "Camel",
        "Database",
        "Oracle",
        "SQL",
        "TOAD",
        "DB2",
        "Cassandra",
        "MongoDB",
        "Dynamo",
        "DB",
        "IDEs",
        "Eclipse",
        "Net",
        "Beans",
        "RAD",
        "IntelliJ",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "mapping",
        "Hibernate",
        "IBatis",
        "JPA",
        "Testing",
        "Tools",
        "Others",
        "Selenium",
        "TestNG",
        "JUnit",
        "Mockito",
        "Soap",
        "UI",
        "Putty",
        "Rational",
        "Clear",
        "Quest",
        "Star",
        "Team",
        "Version",
        "Control",
        "Tortoise",
        "SVN",
        "CVS",
        "Rational",
        "Clear",
        "case",
        "Git",
        "OS",
        "Environment",
        "Windows",
        "UNIX",
        "Linux",
        "Design",
        "Patterns",
        "MVC",
        "Front",
        "Controller",
        "Singleton",
        "Business",
        "Delegate",
        "DAO",
        "patterns"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:38:51.956064",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer American Express Phoenix AZ Around 8 years of extensive IT experience in Analysis Design Testing Deployment of various web based and clientserverapplications in multiplatform environments with JAVAJ2EE technologies and involved in all phases of Software Development Life Cycle SDLC Proficient in designing and developing web applications which are highly scalable secure transactional highperformance and easy to maintain Experience in developing application using Software Development methodologies like Water Fall Agile SCRUM and TestDriven Development TDD Experience in FrontEnd UI development using HTML5 CSS3 Bootstrap Ajax JavaScript JQuery AngularJS and NodeJS Experience with Java 18 features such as Lambdas for making function calls by using functional interfaces which makes code readable and concise Experience in implementing Java18 features and like parallel streams lambdas and filters Experience in developing cloudbased applications using Spring Cloud Pivotal Cloud Foundry and AWS Experience in working with AWS like EC2 EBS ELB S3 SQS Lambda Dynamo DBand Elastic Search Expertise in developing and implementing application based on SOA Service Oriented Architecture and Micro Service Architecture Expertise in developing enterprise applications with various open source frameworks like JavaJ2EE JSP JSTL Servlets EJB Struts Spring Core IOC MVC AOP Security Boot Batch Web Services JMS JPA JDBC and Hibernate Hands on experience in design and development of robust and highly scalable applications and APIs based on REST and SOAP applications using AXISWSDL UDDI XML JAXWS JAXRS JAXB JAXRPC and Jersey Apache CXF frameworks Experience in implementing Core Java concepts and strong understanding of Garbage Collector SWING Collections Multithreading Event handling Exception handling Generics and Serialization Experience in design patterns like Singleton Factory Prototype Business Delegate Session Faade Pattern Service locator Visitor Observer Decorator Front Controller DAO MVC Abstract Factory and Factory Pattern for reusing most efficient and effective strategies for new development Expertise in XML technologies such as DTDXSL XSLT XML schemas XSL and parsers like SAX DOM Expertise in developing and consuming REST and SOAP based Web Services Experienced with JAXRS specification like Jersey andRest Easy to Implement REST based Application Experienced with JAXRPC JAXWS specification like Apache Axis I Apache Axis II and Apache CXF to Implement SOAP based Application and tested it using Soap UI Experienced in the persistence layer using JPA JDBC and Hibernate to persist data to the database Experience with Java Messaging Services JMS like Rabbit MQ Active MQ and Apache camel Hands on experience working with Relational Databases like Oracle DB2 My SQL and No SQL databases like MongoDB andDynamo DB Proficient in creatingBusiness tables PLSQL Stored procedures and writing SQL queries to retrieve data from the database Pleasant experience in different IDEs like Eclipse RAD Spring Tool Suite and IntelliJ IDEA Experience in working with various application and web servers like JBOSS BES Web Logic IBM Web Sphere Glassfish and Apache Tomcat Developing test cases and determining application functionality using JUnit Mockito and Log4j Experienced with build automation tools like Maven Gradle ANT and Jenkins for CICD Worked with different version control systems like Tortoise SVN GIT CVS and Visual Source Safe Expertise in Docker containers leveraging Linux containers and AMIs to create Docker ImagesContainers Experience in development deployment and troubleshooting Web based and enterprisebased applications on Windows UNIX and Linux platforms Effective communication and analytical skills and a demonstrated ability to handle multiple tasks as well as work independently or in a team Work Experience Full Stack Java Developer American Express Phoenix AZ September 2018 to Present Description American Express is a banking and global financial services company that provides customers for access to products insights and experiences that enrich lives and build business success The project was involved for creating UI Screens for Amex productservice and also developing an internal Java coding by retrieving data from client side processing it and saving within the database It also involved for fetching the data from database and displaying it to the user Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Developed the viewcontroller components using JSPs HTML5 CSS3 AJAX JavaScript jQuery Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS Handson experience in developing integration with Elastic search in any of the programming languages like JAVA and JavaScript Having knowledge of advance reporting using Elastic search and NodeJS Implemented core features of AngularJS frameworks such as dependency Injection Databinding Filters Directives Templates Services and DeepLinkingDesigning Used Java 18 features like stream and Lambda expressions Maintained Interface compatibility and concurrency in the project using Java 18 new features like default staticmethods and ConcurrencyAPI Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Designed and developed Micro Services business components using Spring Involved in the development of Micro Services for all the models using combination of Spring Boot and Spring Security Responsible for creating an instance on Amazon EC2 AWS and deployed the application on it Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Developed APIs to read and publish data from Elastic Search cluster using native Java Transport client as well as REST client Worked on Spring Integration with the Elastic Search Implemented the RESTAPIs and data transformers using the JAVA connector which involves the JAVA8 features Lambda and Streams in particular Used Spring MVC framework for implementing ModelView Controller MVC architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Used Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc Used Spring Batch for processing large amount of data like transaction management job processing resource management and logging Secured the APIs by implementing OAuth 20 tokenbased authenticationauthorization scheme using Spring Security Designed and developed thirdparty Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol Used Hibernate ORM framework as persistenceengine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java Involved in writing SQL and StoredProcedures for handling complex queries with help of TOAD and access them through Java Programs from OracleDatabase Worked with MongoDB to store nonrelational data into collection and retrieve them whenever required Worked on setting up Maven scripts to build package and deploy application code to the target WebLogic Application Servers and worked on continuous integration servers like Jenkins Hands on Coding to build REST Micro Services using SpringCloud Oracle XSD JSON Spring Config and Jenkins Worked on developing RESTful endpoints to cache application specific data in inmemory dataclusters like REDIS and exposed them with RESTful endpoints Focused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality Worked on Log4J to validate functionalities and Mockito framework JUnit for unit testing Performed automation testing and authored test scripts using Selenium Web Driver Selenium Grid and JUnit Worked in Agile TDD environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Environment AgileSCRUM Java 18 HTML5 CSS3 JavaScript JQuery Ajax Bootstrap AngularJS AWS Micro Services Hibernate Spring MongoDB Spring Batch Spring Boot Spring Security XML GIT JSP Spring MVC JDBC Mockito JUnit Maven IBM WebSphere BackboneJS Selenium Restful Log4J SOA Java Server Pages JIRA Spring Security Jenkins and STS Sr Java Developer Enterprise Holdings St Louis MO April 2016 to September 2018 Description Enterprise Holdings and its affiliates offer extensive car rentals carsharing truck rental By using different brands like Enterprise National and Alamo We can access those car rentals through the web and mobile applications are fleet management retails car sales and other transportation services Responsibilities Involved in all the phases of SDLC including Requirements Collection Design Analysis of the Customer Specifications Development and Customization of the Application using SOA Application is implemented using agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Developed frontend content using HTML5 CSS3 JavaScript JQuery Ajax and AngularJS Applied data transformation rules to transform code from one format to another for at using NodeJS Created the NodeJS Express server to build MVC framework from frontend side AngularJS to back end Developed clientside application ina clean MVC architecture andresponsive web pages using Bootstrap Involved in System builds using Spring Model View Controller MVC architecture Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface and SpringAOP for reusability logging purpose Used HibernateORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented and developed Restful web services with JAXRS using Jersey as provider and implemented security using OAUTH Worked with Springs JDBC DAO module to interact with MySQL and implemented database logging Developed and Consumed SOAP based Web Services with JAXWS specification Implemented DAO layer using Spring Integration and Hibernate to persist the data to the database Written complex SQL queries HQL created business tables and PLSQL procedures to store and retrieve data from the database Implemented SOA architectureusing JMS for sending and receiving messages while creating web services Used Rabbit MQ as Java Messaging Service for producing and consuming data between applications Developed JUnit test cases for elements web beans handlers and view helper classes Focused on Test Driven DevelopmentTDD for creating detailed JUnit tests for every single piece of functionality before writing the functionality Configured development environment using Web Sphere server for developers integration testing Used Maven as build automation tool andJenkins to perform continuous Integration Used GIT for version control tool and RAD for IDE Environment Java J2EE HTML5 CSS3 Bootstrap JavaScript JQuery AngularJS Spring Core Spring Security Spring MVC Spring IOC Hibernate OAuth MySQL REST SOAP JAXRS JAXWS Jersey JMS Rabbit MQ Docker Junit TDD SOA Web Sphere Maven Jenkins GIT Agile Methodology and RAD Java Developer Level 3 Communications Broomfield CO November 2014 to April 2016 DescriptionLevel 3 Communications is an American multinational telecommunications and Internet service provider company The project is about checking the connectivity to the network elements of the particular device It deals with the connection to the port and checks the interface status updown and BGP status updown by using the peer address Responsibilities Using Agile methodologies to plan work for every iteration and used continuous integration tool to make the build passes before deploying the code to other environments Used Spring MVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Used Spring Security for Authentication and Authorization of the application Extensively used JSON to parse the data from server side to satisfy the business requirement Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for Oracle Worked on Hibernate for mapping the java objects to relational database and SQL queries to fetch the data insert and update the data from the database Used Hibernate in Data Access Layer to access and update information in the database Extensively used HQL and SQL for querying databases Consumed Web Services to interact with other external interfaces to exchange the data in different forms by using Restful service Implemented SOA architecture with Web Services using SOAP WSDL UDDI and XML using Apache CXFframework and worked on parsing the XML files using DOMSAX parsers Created tables triggers PLSQL Stored Procedures SQL queries Joins i2ntegrityconstraints and views for IBM DB2 Used Multithreading to improve overall performance using Singleton pattern in Hibernate Utility class Implemented Restful and SOAP based Web Services and used Soap UI for testing Used Docker to collaborate code run and deliver more securely for both Linux Windows server Used Spring JMS module for lookup for the queues and MDBs for the listeners Involved in Unit Testing of various modules by generating the Test Cases Performed deployment of applications on Web Logic Involved in day to day handling of JIRA issues production issues at time that involved data inconsistencies that required to be solved in very less time Used Jenkins as build management tool for continuous integration process and used GIT as Version Control Involved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase Participated in Code Reviews of other modules documents and test cases Written LINUX shell scripts to identify user login information Environment Java J2EE HTML CSS Java Script JSP JSTL Spring IOC MVC DAO Security Hibernate IBM DB2 XML XSD SOAP UI Restful SOAP JAXRS JAXWS WSDL JMS JUnit Web Logic Jenkins Gradle GIT JIRA Agile Methodology Windows Linux JavaJ2EE Developer Colonial Life Insurance Columbia SC August 2012 to November 2014 DescriptionThis is an online application that enables clients to access review and update their products purchased from Colonial Life Insurance The primary users of this application are Colonial Life Insurance policy owners agents and customer service representatives The application provides an integrated environment for account management policy changesrenewals monthly premium dues alerts claims processing status Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology Developed User Interface using JSP JSF JSTL HTML CSS3 Java Script jQuery Used various jQuery UI controls and corresponding Event handlers Used Spring MVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Used Spring Security for Authentication and Authorization of the application Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for DB2 Worked on Hibernate in Data Access Layer for mapping the java objects to relational database and SQL queries to fetch the data insert and update the data from the database Consumed Web Services to interact with other external interfaces to exchange the data in different forms by using RESTful service Implemented SOA architecture with Web Services using SOAP WSDL and XML using Apache CXFframework and worked on parsing the XML files using DOMSAX parsers Extensively used JSON to parse the data from server side to satisfy the business requirement Created Tables Triggers PLSQL Stored Procedures SQL queries Joins and views for IBM DB2 Implemented RESTful and SOAP based Web Services and used Soap UI for testing Used Spring JMS module for lookup for the queues and MDBs for the listeners Involved in Unit Testing of various modules by generating the Test Cases Performed deployment of applications on JBOSS Written LINUX shell scripts to identify user login information Involved in day to day handling of JIRA issues production issues at time that involved data inconsistencies that required to be solved in very less time Involved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase Participated in Code Reviews of other modules documents test cases Environment Java J2EE HTML CSS3 JavaScript jQuery AngularJS JSP JSTL Spring Hibernate XML XSD SOAP UI Web Services RESTful SOAP WSDL Log4j JUnit IBM DB2 JBOSS Jenkins SVN Eclipse IDE JIRA Agile Methodology Linux Rational Rose and UML Education Bachelors Skills Eclipse J2ee Java Hibernate Spring Jax Jaxrpc Jaxws Jboss jquery Jsp Jstl Servlet Struts Database Db2 Oracle Plsql Sql Amazon web services Additional Information Technical Skills Languages C C Java 18 J2EE SQL PLSQL MarkupXML Technologies JSP JSTL HTML5 CSS3 JavaScript Bootstrap JQuery Ajax AngularJS ReactJS XSD XSLXSLT SAXDOM and JSON Tools Framework Servlet Struts Spring Spring IOC Spring AOP Spring MVC Spring Security Spring Boot Spring Data Spring Web Flow Jasper reports Log4j and GroovyGrails Build Automation ANT MAVEN Jenkins Bamboo Gradle Web services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Micro services Axis2 and Apache CXF Cloud Technologies Amazon Web Services EC2 SQS RDS IAM S3 Pivotal Cloud Foundry and Spring Cloud WebApp Servers Web Sphere Apache Tomcat JBOSS Web Logic Server and Apache Camel Database Oracle My SQL TOAD DB2 Cassandra MongoDB and Dynamo DB IDEs Eclipse Net Beans RAD IntelliJ and Spring Tool Suite STS OR mapping Hibernate IBatis and JPA Testing Tools Others Selenium TestNG JUnit Mockito Soap UI Putty Rational Clear Quest and Star Team Version Control Tortoise SVN CVS Rational Clear case and Git OS Environment Windows UNIX Linux Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns",
    "unique_id": "3ea2da93-0666-46a3-b536-50835353e87e"
}