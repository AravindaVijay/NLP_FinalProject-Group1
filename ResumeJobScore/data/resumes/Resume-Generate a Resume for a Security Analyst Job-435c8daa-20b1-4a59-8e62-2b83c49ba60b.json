{
    "clean_data": "JAVA DEVELOPER span lJAVAspan span lDEVELOPERspan JAVA DEVELOPER TMobile Bellevue WA Around 4 Years of experience as developer in Software Development Life Cycle including Analysis Design Development Testing and Implementation of Cross Platform Web application ClientServer InternetIntranet using JAVAJ2EE Technologies Experience in project delivery application design application development unit integration testing production support enhancement of various size projects Expertise in programming skills and development experience of multitier web applications enterprise applications in languagestechnologies like JAVA J2EE Struts Spring Servlets JSP JDBC XML Web services SOA and Hibernate that ensures clear separation of layers and rapid application development Extensive experience in developing web application using Spring Framework Model View Controller MVC Architecture Struts framework Hibernate framework XML Extjs Experience in deploying applications in web and app servers like BEA Web logic Websphere81 Enterprise and Apache Tomcat Servers Experience in preparing project related documents using Microsoft Office Suite like MSOffice MSExcel MSPowerPoint MSVisio MSProject Plan etc Extensive experience in Java J2EE programming JDBC JPA Servlets JSP JSTL Spring Hibernate Experience in AWS services like EC2 EBS ELB S3 SQS RDS DynamoDB Lambda API Gateway CloudWatch CloudFormation and Elastic Beanstalk Strong experience in Full Stack web technologies like J2EE Servlets Swing Hibernate Spring MVC Spring boot AJAX jQuery JSON EJB JBOSS JDBC JSP HTML Angular 24 JavaScript CSS XML Log4J Experience of different angular versions including Angular 2 and Angular 4 extensive features for loading Expertise in implementing IOCDependency Injection features in various aspects of Spring Framework Experience in developing applications using Angularjs Nodejs Bootstrap like Grids Toolbars Panels ComboBox and Button etc Strong experience in developing and deploying applications through application servers like Apache Tomcat IBM WebSphere WebLogic and Jboss along with environments like Nodejs Proficient in UML concepts with use case modelingrealization design patterns Data and object modeling Proficiency in developing Model View Controller MVC Architecture based applications using Spring Framework Experience working in environments using Agile SCRUM Water Fall methodologies Good knowledge on J2EE Design Patterns like MVC Architecture Singleton Factory Pattern Front Controller and Data Access Object Expertise with Application servers and Web servers like Jboss Apache Tomcat Extensive work in implementing Dependency Injection Inversion of Control IoC Spring MVC Spring JDBC and Auto Wiring concepts using Spring framework Experienced in front End technologies web development using HTML5 DHTML XHTML CSS3 jQuery JSON JavaScript ReactJS NodeJS Angular JS Angular 5 Bootstrap AJAX XSD Tag Libraries Developed layouts using HTML5 CCS3 Angular24 Bootstrap AJAX JSON and jQuery Expertise in Web Services including different technologies and standards like SOAPUDDIWSDL REST Jersey Extensive experience working with RDBMS such as MySQL MS SQL Server PostgreSQL DB2 Oracle and NoSQL database like MongoDB Experience in developing unit test cases Integration test cases using Junit with Miskito also good Knowledge on Service Oriented Architecture SOA Experience in containerbased technologies like Docker Kubernetes and OpenShift along with the development of Microservices architecture using Spring Boot Developed microservices to load the data from DynamoDB to Kafka topics for reporting and Used Git to control the build version Implemented Spring AOP for logging mechanism Experience in using Maven and ANT for build automation Experience in Angular 5 formerly Angular2 with implementing typescript components twoway data binding Experience in developing and a solid understanding of Service Oriented Architecture and Microservices Architecture Extensive experience in working on multiple operating systems including UNIX Sun Solaris Linux and Microsoft Windows Authorized to work in the US for any employer Work Experience JAVA DEVELOPER TMobile Bellevue WA October 2018 to Present Responsibilities Participated in most phases of SDLC Software Development Life Cycle of ecommerce application development including Business requirement analysis design coding and testing Participated to HTML5 CSS3 JavaScript and Angular2 to create attractive and friendly UI Interacted with RESTful Web services using Angular 2 Http Module Worked on Angular 2 components Angular 4 and on POCs Design and Coding of various JAVA J2EE modules like Spring Boot Spring MVC Spring Rest Hibernate JPA Implemented Hibernate annotation mapping on backend Java Beans using Spring Hibernate DAO support API build the relationship between Database and Java Beans Expertise in implementing Web Services based on Service Oriented Architecture SOA using SOAP Restful Web Services Develop enhance and maintain a Spring Boot based micro services application Designed and developed SOAP and Restful web services using WSDL SOAP JAX_WS JAXRS CXF AXIS JERSEY REST Template and SOAP UI Done the configuration and deployment of multitier applications using severs like WebSphere Web Logic and Tomcat Worked experience in Hibernate ORM tool Done the various operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Done the real time monitoring and alerting the applications deployed in AWS using Cloud Watch Cloud Trail and Simple Notification Service to maximize resource allocations Worked on Docker to build a microservice based architecture using Spring Boot Worked on NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Involved in building and deploying Apache Ant Maven scripts for deployment and customizing WARJAR file management for web applications Worked on JIRA for bug tracking and Confluence Pages for report creation and other project management purposes Developed serverside application to interact with database using Spring Boot and Hibernate Wrote native SQL HQL queries stored procedures triggers callable statement and prepared statement Used Load Get and Criteria methods to manipulate data in the database Configured Spring MVC framework and integrated Hibernate 35 to Spring 3 framework Consumed REST based microservices with Rest template based on RESTful APIs Deployed applications on AWS by using Elastic Beanstalk Developed API for using AWS Lambda to manage the servers and run the code in AWS Created RESTful Web Service based on Jersey Restful API provide data accessibility Used Apache Kafka cluster as messaging system between the Microservices Used Apache Kafka for keeping the track of all the activities on the website used for some of the largescale message processing applications and Inter process messaging for temporary storage of messages rather than the messages being stored in long term memory storages Implemented a POC with Spark SQL to interpret complex JSON records Used Cassandra as a storage for Spark analytics and worked on Mongo dB Implemented Pyspark using Python for faster testing and processing of data Used Eclipse based Spring Tool Suite STS for development and debugging Spring Boot Used Junit Mockito and test rest template for testing the rest services and camel routes etc Using Jenkins for building and deploying the projects and worked on Stash GIT repository software Involved in development of test environment on Docker containers and configuring the Docker containers using Kubernetes Used Agile Methodology in whole development attended daily and weekly SCRUM meetings to update the work status and issue clarifications etc JAVA DEVELOPER McKesson San Francisco CA August 2017 to September 2018 Responsibilities Worked as a Java Developer on the project with JavaScript ES6 React Redux Saga RESTful services HTML5CSS3SASSBootstrap and Gitlab Currently using Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used Spring Core Annotations for Spring DI and Spring MVC for REST API s and Spring Boot for microservices Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Used TestNG for white box testing of application Created test conditionstest data Worked on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Worked on Jenkins to deploy web services to cloud so CICD Continuous Integration Continuous Delivery goals are achieved and code quality metrics are met Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Involved in creating tables and worked on My SQL and PLSQL to write Stored Procedures functions in the application and packages for complex Inserts and updates in the database Involved in Stored Procedures User Defined functions Views and implemented the Error Handling in the Stored Procedures and SQL objects and Modified already existing stored Used Java 8 REST and Spring Framework for developing the application Implemented the persistence layer using Hibernate and configured Hibernate with Spring to interact with the Cassandra Database from the DAO Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Developed Customized Spring Multi Action controllers for handling similar operations and configured spring and Spring JDBC frameworks to develop fullfledged MVC and DB interaction application Worked on Software Development Life Cycle SDLC including Requirement analysis Design Development Testing and Maintenance Used AJAX based on JQUERY and JSON technologies for making Asynchronous Http requests along with JavaScript Followed TDD approach and creating environment for unit testing useracceptance testing and facilitating Integration tests with JUNIT TESTNG Selenium tests and SwaggerUI Developed Automated selenium tests using testing and executor service where 2 actors can sign documents in parallel Developed the components using Angular 6 needed for the application from the scratch and customizing from various Angular related libraries to meet the applications functionality Enhanced legacy application by building new components in Angular 6 and typescript Configured Selenium Web Driver TestNG Maven tool and created Selenium automation scripts in java using TestNG prior to agile release Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for RESTAPIs and Spring Boot for Microservices Used Hibernate Criteria API to apply filtration rules and logical conditions on persistence objects Build servers using AWS which includes importing necessary volumes launching the EC2 instance creating security groups autoscaling load balancers Route 53 and SNS as per the architecture Managed Chef Cookbooks to automate system operations and AWS Cloud management Developed applications based on MVC frameworks such as Spring MVC Spring Boot Spring Cloud Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group AutoScaling and RDS in Cloud Formation JSON templates Used Hibernate as an Object Relational Mapping tool for the data persistence Developed Spring REST web services to serve multiple applications across the organization The data is provided in Json and used Jackson library Also consumed REST web services Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Used Json to fetch data from CA groups and load in customer application Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Installed Ranger in all environments for Second Level of security in Kafka Broker Developed an internal application using ReactJS Nextjs Express and NodeJS for Relationship Mangers Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG used GIT as version management JIRA for defect management system Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Developed Flex Custom Events for communication between various components and for Event Bubbling Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Developed Flex Custom Events for communication between various components and for Event Bubbling Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form JAVA DEVELOPER Citi Bank Mumbai Maharashtra September 2016 to June 2017 Responsibilities Worked with various teams to understand business objectives and implementation of business logic Worked with business technical teams to gather requirements and implement user friendly responses for 8 real time backend services especially for exceptionsfailures Experience working in Agile development following SCRUM process Sprint and daily standup meetings Used Spring Dependency Injection to make application easy to test and integrate Worked on UI components using angular JS Worked with advanced MVC framework such as SpringIOC AOP MVC for implementing backend functionality Followed Java J2EE design patterns and the coding guidelines to design and develop scalable reliable and robust software Worked with GIT which is used as a version control tool in the project Added logging and debugging capabilities using Log4j Serverside implemented on J2EE IntelliJ platform Created team specific Agile process flow in JIRA to move tasks from one activity to another Developed REST based Web Services using JAXRS and Axis to interact with backend systems Implemented the Project structure based on Spring MVC pattern using spring boot Configured Spring Cloud Config Server for externalized configuration Created and maintained mapping file and transaction control in Hibernate Used JSON parsing to implement REST Web Services Worked with Swagger UI to extensively test new changes Used Spring framework and J2EE components Utilized Spring MVC IoC AOP and DAO modules Developed controller classes backend processes complex services and database interaction Added security for service layer methods using Spring Security Applied industry best practices and standards when project requirements were lagging Designed dynamic clientside JavaScript codes to build web forms and simulate process for web application page navigation and form validation Involved in consuming producing Restful web services using JAXRS Installed WebSphere Server for handling HTTP RequestResponse The request and response from the client are controlled using Session Tracking in JSP Used Swagger and Postman for API development deployment and testing the functionality Involved in transforming XML data into Java Objects using a JAXB binding tool Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Implemented logging on 14 repositories to enable better metricslogging and setup alarms for each failure type permission issues file generation issues container restarts Implemented CICD pipelines with Jenkins to setup pull request preprod and prod deployment workflows with regression test suites Used Jenkins to build and stage the projects Written client interfaces and implementation classes to consume the web services Used RAD IDE for developing the applications and IBM Web sphere server for deploying various components of application JAVA DEVELOPER HCL Gurgaon Delhi Delhi October 2015 to August 2016 Responsibilities Involved in creating a reusable component using React JS for DOM Manipulation Migrated the existing environment and applications into Java8 and Tomcat 8 on Test Server Worked on Tomcat Server domain using upgraded version extensively used MVC architecture and Tomcat for deployment purposes Created the build instructions docs and used to run weekly production build and release tags for all the applications Implemented TestNG automation framework is that the crucial functions of the application and implemented Regression Test to verify the existing functionality Spring MVC and Hibernate was used for developing java REST services on the back end Used the feature of React JS of running the server and rendering the virtual DOM returning to the browser as a regular page Built S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Worked on creation of exhaustive JUnit Unit Test Cases for each Java class that is being developed for this application using a mocking framework Mockito using Test Driven Development technique Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Used Spring Boot which is radically faster in building services and develop Spring based application with minimal configuration Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Integrated Kafka with Flume in sand box Environment using Kafka source and Kafka sink Created Automation script using Selenium WebDriver and executed scripts on different browsers Used JavaScript libraries to create slider and pageturning animations on calendar widgets Used Web APIs Media Type Formatter into JSON XML or whatever format you want to add as a Media Type Formatter Developed various web pages and components using Angular 6 by implementing predefined components from Node Package Manager NPM Delivered mobile app for book reading capability with HTML5 Sencha and online services with FlashFlex Used Babel to Transpile ES6 and JSX code into JavaScript that can load on the browser Used JERSEY framework to implement the JAXRS Java API for XML and RESTful Service Developed SQL stored procedures and prepared statements for updating and accessing data from database Worked under Eclipse Integrated Development Environment IDEused Clear Case Version Control for Project Configuration Management Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Worked on Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Created REST APIs Microservices and EJB using Express RouterModelController architecture Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping Developed to provide RESTful API utilizing Spring Boot with Spring MVC built Spring based Java and Scala Microservices to support Enterprise Web application Written various AWS Lambda services for automating the process of taking EBS Snapshots every day in production environment on the cloud Deployed applications on AWS by using Elastic Beanstalk Integrated delivery CI and CD using Jenkins and Ansible Configured Route 53 by using CFT templates assigned the DNS mapping for the AWS servers and troubleshoot the issues of the load balancers auto scaling groups and Route 53 Converted commercial QTP Scripts to open source Selenium WebDriver scripts to maximize the profits of the company without compromising Quality Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Worked on Kafka Backup Index Log4j appended minimized logs and Pointed Ambari server logs to NAS Storage Developed a frontend application using React Js and FLUX architecture for internal teams productivity use Worked on React Js and working with React Flux architecture for developing Single Page Applications SPAs Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Tiles Plugin to struts for designing JSP page layouts and in cooperating with common menus Creating the project startup UI ie Generic XHTML face let templates error handling data tables using JSF Interacted with the business teams and worked on modeling the database schema and created tables queries PLSQL stored procedures database triggers Installed Kafka manager for consumer lags and for monitoring Kafka Metrics also this has been used for adding topics Partitions etc Created and enhanced numerous test scripts to handle changes in the objects in the tested applications GUI and in the testing environment using Selenium WebDriver Involved in solving the issues related to PROD TEST server environments also developed reports using Crystal Reports Developed and continuously deployed javabased applications using CICD techniques Performed Verification and validation process for the code written by making use of JavaScript testing frameworks Jasmine and Karma Developed API driven RWAs by integrating Angular with Bootstrap and APIs Extensively used JavaScript library D3js for manipulating documents based on data and for datadriven approach to DOM manipulation Used Subversion SVN as the configuration management tool to manage the code repository Work on project buildscript by using MAVEN and deployed on Tomcat also used log4J for enabling logging and debugging at run time Used JMS Java Mailing Service API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Education Masters in Information Systems Skills Java Java J2Ee Spring Hibernate JSP Angularjs Javascript J2Ee ReactJS AWS SQL SDLC",
    "entities": [
        "lJAVAspan",
        "Second Level",
        "Spring Bootbased",
        "Spring Framework",
        "WebSphere Server",
        "SNS",
        "Jboss Apache Tomcat Extensive",
        "FlashFlex Used Babel to Transpile ES6",
        "GUI",
        "Kubernetes Used Agile Methodology",
        "JS Worked",
        "BEA",
        "Nodejs Proficient",
        "Rest Hibernate JPA Implemented Hibernate",
        "Kubernetes Created Pods",
        "IOCDependency Injection",
        "Spring Tool Suite STS for development",
        "WebSphere Web Logic",
        "Angular 6",
        "REST Jersey Extensive",
        "Spring Annotation",
        "Java Server Pages",
        "Scala Microservices",
        "Created Automation",
        "IBM",
        "Auto Wiring",
        "J2EE Servlets Swing Hibernate Spring",
        "jQuery Expertise",
        "Node Package",
        "NAS Storage Developed",
        "XML",
        "MySQL MS SQL Server PostgreSQL DB2",
        "JAVAJ2EE Technologies",
        "JavaScript ES6 React",
        "JUnit",
        "AWS Created RESTful Web Service",
        "HBase",
        "SDLC Software Development Life Cycle",
        "Apache Spark",
        "Amazon",
        "JUNIT TESTNG Selenium",
        "Configuring AWS EC2",
        "UNIX Sun Solaris Linux",
        "Stored Procedures",
        "Developed",
        "DAO",
        "Influx DB",
        "Kerberos",
        "Version Control",
        "EBS Snapshots",
        "REST API s",
        "JDBC JPA Servlets",
        "Spring Sleuth",
        "UML",
        "Delhi",
        "Restful",
        "Created AWS Security Groups",
        "JQUERY",
        "AWS Cloud",
        "iText",
        "REST Web Services Worked",
        "UI Interacted",
        "RD",
        "HTML5",
        "Cassandra using Spark",
        "SOA",
        "IFP",
        "Linux",
        "JSP",
        "Regression Test",
        "Spring DI",
        "React Js",
        "Factory Singleton Service Locator",
        "Docker",
        "Kubernetes Implemented Redux Sagas",
        "RDS",
        "MSVisio MSProject Plan etc Extensive",
        "SSL",
        "Views",
        "Kubernetes Created",
        "Data Access Object Expertise with Application",
        "MVC",
        "Tomcat 8",
        "Interface",
        "JPA Annotation",
        "Spark",
        "Agile",
        "EJB",
        "Nextjs Express",
        "GIT",
        "Validate",
        "Education Masters",
        "CICD Continuous Integration",
        "Inter",
        "Event Bubbling Created",
        "API",
        "US",
        "Database",
        "OpenShift",
        "AWS Worked",
        "Apache Tomcat Servers",
        "POJO",
        "PDF",
        "Created",
        "Gitlab",
        "AWS",
        "CA",
        "Microsoft Windows Authorized",
        "Managed Chef Cookbooks",
        "Button",
        "CFT",
        "Boot Spring Cloud Setup",
        "Quality Created Database",
        "React JS",
        "JSX",
        "Relational Database Services",
        "java",
        "Jersey Restful API",
        "Tomcat Server",
        "SQL",
        "SOAP Restful Web Services Develop",
        "Express RouterModelController",
        "Microsoft Office",
        "Bootstrap",
        "Test Driven Development",
        "React Flux",
        "MAVEN",
        "Rest",
        "Kerberos Implemented Kafka Security Features",
        "Citi Bank",
        "the Cassandra Database",
        "JAXRS",
        "Worked on React Js",
        "Virtual Private Clouds VPC Elastic Load Balancers ELB",
        "Hive",
        "CICD",
        "NETFLIX",
        "Serverside",
        "Nodejs Bootstrap",
        "Hive connectors Used Storm and Kafka Services",
        "Test NG",
        "Rational Rose Created Servlets",
        "Stash GIT",
        "IoC AOP",
        "Hibernate Used JSON",
        "SQS",
        "Backend",
        "JAVA",
        "Utilized Spring",
        "Spring Hibernate",
        "Maven",
        "Build",
        "Spark SQL",
        "MVC Architecture Singleton Factory",
        "JavaScript",
        "ANT",
        "WARJAR",
        "TestNG",
        "Simple Notification Service",
        "Worked on JDK 8",
        "UI",
        "Selenium WebDriver Involved",
        "Service Oriented Architecture and Microservices Architecture Extensive",
        "JSP Servlets",
        "Selenium WebDriver",
        "SVN",
        "Expertise",
        "CSS",
        "NodeJS for Relationship Mangers Worked",
        "Java Message Service",
        "Data Access Object Developed Flex Custom",
        "REST",
        "Tomcat",
        "Performed Verification",
        "Angular with Bootstrap",
        "Worked on Software Development Life Cycle",
        "NoSQL",
        "Software Development Life Cycle",
        "Sprint",
        "Stream Installed Ranger",
        "DNS"
    ],
    "experience": "Experience in project delivery application design application development unit integration testing production support enhancement of various size projects Expertise in programming skills and development experience of multitier web applications enterprise applications in languagestechnologies like JAVA J2EE Struts Spring Servlets JSP JDBC XML Web services SOA and Hibernate that ensures clear separation of layers and rapid application development Extensive experience in developing web application using Spring Framework Model View Controller MVC Architecture Struts framework Hibernate framework XML Extjs Experience in deploying applications in web and app servers like BEA Web logic Websphere81 Enterprise and Apache Tomcat Servers Experience in preparing project related documents using Microsoft Office Suite like MSOffice MSExcel MSPowerPoint MSVisio MSProject Plan etc Extensive experience in Java J2EE programming JDBC JPA Servlets JSP JSTL Spring Hibernate Experience in AWS services like EC2 EBS ELB S3 SQS RDS DynamoDB Lambda API Gateway CloudWatch CloudFormation and Elastic Beanstalk Strong experience in Full Stack web technologies like J2EE Servlets Swing Hibernate Spring MVC Spring boot AJAX jQuery JSON EJB JBOSS JDBC JSP HTML Angular 24 JavaScript CSS XML Log4J Experience of different angular versions including Angular 2 and Angular 4 extensive features for loading Expertise in implementing IOCDependency Injection features in various aspects of Spring Framework Experience in developing applications using Angularjs Nodejs Bootstrap like Grids Toolbars Panels ComboBox and Button etc Strong experience in developing and deploying applications through application servers like Apache Tomcat IBM WebSphere WebLogic and Jboss along with environments like Nodejs Proficient in UML concepts with use case modelingrealization design patterns Data and object modeling Proficiency in developing Model View Controller MVC Architecture based applications using Spring Framework Experience working in environments using Agile SCRUM Water Fall methodologies Good knowledge on J2EE Design Patterns like MVC Architecture Singleton Factory Pattern Front Controller and Data Access Object Expertise with Application servers and Web servers like Jboss Apache Tomcat Extensive work in implementing Dependency Injection Inversion of Control IoC Spring MVC Spring JDBC and Auto Wiring concepts using Spring framework Experienced in front End technologies web development using HTML5 DHTML XHTML CSS3 jQuery JSON JavaScript ReactJS NodeJS Angular JS Angular 5 Bootstrap AJAX XSD Tag Libraries Developed layouts using HTML5 CCS3 Angular24 Bootstrap AJAX JSON and jQuery Expertise in Web Services including different technologies and standards like SOAPUDDIWSDL REST Jersey Extensive experience working with RDBMS such as MySQL MS SQL Server PostgreSQL DB2 Oracle and NoSQL database like MongoDB Experience in developing unit test cases Integration test cases using Junit with Miskito also good Knowledge on Service Oriented Architecture SOA Experience in containerbased technologies like Docker Kubernetes and OpenShift along with the development of Microservices architecture using Spring Boot Developed microservices to load the data from DynamoDB to Kafka topics for reporting and Used Git to control the build version Implemented Spring AOP for logging mechanism Experience in using Maven and ANT for build automation Experience in Angular 5 formerly Angular2 with implementing typescript components twoway data binding Experience in developing and a solid understanding of Service Oriented Architecture and Microservices Architecture Extensive experience in working on multiple operating systems including UNIX Sun Solaris Linux and Microsoft Windows Authorized to work in the US for any employer Work Experience JAVA DEVELOPER TMobile Bellevue WA October 2018 to Present Responsibilities Participated in most phases of SDLC Software Development Life Cycle of ecommerce application development including Business requirement analysis design coding and testing Participated to HTML5 CSS3 JavaScript and Angular2 to create attractive and friendly UI Interacted with RESTful Web services using Angular 2 Http Module Worked on Angular 2 components Angular 4 and on POCs Design and Coding of various JAVA J2EE modules like Spring Boot Spring MVC Spring Rest Hibernate JPA Implemented Hibernate annotation mapping on backend Java Beans using Spring Hibernate DAO support API build the relationship between Database and Java Beans Expertise in implementing Web Services based on Service Oriented Architecture SOA using SOAP Restful Web Services Develop enhance and maintain a Spring Boot based micro services application Designed and developed SOAP and Restful web services using WSDL SOAP JAX_WS JAXRS CXF AXIS JERSEY REST Template and SOAP UI Done the configuration and deployment of multitier applications using severs like WebSphere Web Logic and Tomcat Worked experience in Hibernate ORM tool Done the various operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Done the real time monitoring and alerting the applications deployed in AWS using Cloud Watch Cloud Trail and Simple Notification Service to maximize resource allocations Worked on Docker to build a microservice based architecture using Spring Boot Worked on NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Involved in building and deploying Apache Ant Maven scripts for deployment and customizing WARJAR file management for web applications Worked on JIRA for bug tracking and Confluence Pages for report creation and other project management purposes Developed serverside application to interact with database using Spring Boot and Hibernate Wrote native SQL HQL queries stored procedures triggers callable statement and prepared statement Used Load Get and Criteria methods to manipulate data in the database Configured Spring MVC framework and integrated Hibernate 35 to Spring 3 framework Consumed REST based microservices with Rest template based on RESTful APIs Deployed applications on AWS by using Elastic Beanstalk Developed API for using AWS Lambda to manage the servers and run the code in AWS Created RESTful Web Service based on Jersey Restful API provide data accessibility Used Apache Kafka cluster as messaging system between the Microservices Used Apache Kafka for keeping the track of all the activities on the website used for some of the largescale message processing applications and Inter process messaging for temporary storage of messages rather than the messages being stored in long term memory storages Implemented a POC with Spark SQL to interpret complex JSON records Used Cassandra as a storage for Spark analytics and worked on Mongo dB Implemented Pyspark using Python for faster testing and processing of data Used Eclipse based Spring Tool Suite STS for development and debugging Spring Boot Used Junit Mockito and test rest template for testing the rest services and camel routes etc Using Jenkins for building and deploying the projects and worked on Stash GIT repository software Involved in development of test environment on Docker containers and configuring the Docker containers using Kubernetes Used Agile Methodology in whole development attended daily and weekly SCRUM meetings to update the work status and issue clarifications etc JAVA DEVELOPER McKesson San Francisco CA August 2017 to September 2018 Responsibilities Worked as a Java Developer on the project with JavaScript ES6 React Redux Saga RESTful services HTML5CSS3SASSBootstrap and Gitlab Currently using Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used Spring Core Annotations for Spring DI and Spring MVC for REST API s and Spring Boot for microservices Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Used TestNG for white box testing of application Created test conditionstest data Worked on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Worked on Jenkins to deploy web services to cloud so CICD Continuous Integration Continuous Delivery goals are achieved and code quality metrics are met Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Involved in creating tables and worked on My SQL and PLSQL to write Stored Procedures functions in the application and packages for complex Inserts and updates in the database Involved in Stored Procedures User Defined functions Views and implemented the Error Handling in the Stored Procedures and SQL objects and Modified already existing stored Used Java 8 REST and Spring Framework for developing the application Implemented the persistence layer using Hibernate and configured Hibernate with Spring to interact with the Cassandra Database from the DAO Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Developed Customized Spring Multi Action controllers for handling similar operations and configured spring and Spring JDBC frameworks to develop fullfledged MVC and DB interaction application Worked on Software Development Life Cycle SDLC including Requirement analysis Design Development Testing and Maintenance Used AJAX based on JQUERY and JSON technologies for making Asynchronous Http requests along with JavaScript Followed TDD approach and creating environment for unit testing useracceptance testing and facilitating Integration tests with JUNIT TESTNG Selenium tests and SwaggerUI Developed Automated selenium tests using testing and executor service where 2 actors can sign documents in parallel Developed the components using Angular 6 needed for the application from the scratch and customizing from various Angular related libraries to meet the applications functionality Enhanced legacy application by building new components in Angular 6 and typescript Configured Selenium Web Driver TestNG Maven tool and created Selenium automation scripts in java using TestNG prior to agile release Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for RESTAPIs and Spring Boot for Microservices Used Hibernate Criteria API to apply filtration rules and logical conditions on persistence objects Build servers using AWS which includes importing necessary volumes launching the EC2 instance creating security groups autoscaling load balancers Route 53 and SNS as per the architecture Managed Chef Cookbooks to automate system operations and AWS Cloud management Developed applications based on MVC frameworks such as Spring MVC Spring Boot Spring Cloud Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group AutoScaling and RDS in Cloud Formation JSON templates Used Hibernate as an Object Relational Mapping tool for the data persistence Developed Spring REST web services to serve multiple applications across the organization The data is provided in Json and used Jackson library Also consumed REST web services Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Used Json to fetch data from CA groups and load in customer application Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Installed Ranger in all environments for Second Level of security in Kafka Broker Developed an internal application using ReactJS Nextjs Express and NodeJS for Relationship Mangers Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG used GIT as version management JIRA for defect management system Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Developed Flex Custom Events for communication between various components and for Event Bubbling Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Developed Flex Custom Events for communication between various components and for Event Bubbling Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form JAVA DEVELOPER Citi Bank Mumbai Maharashtra September 2016 to June 2017 Responsibilities Worked with various teams to understand business objectives and implementation of business logic Worked with business technical teams to gather requirements and implement user friendly responses for 8 real time backend services especially for exceptionsfailures Experience working in Agile development following SCRUM process Sprint and daily standup meetings Used Spring Dependency Injection to make application easy to test and integrate Worked on UI components using angular JS Worked with advanced MVC framework such as SpringIOC AOP MVC for implementing backend functionality Followed Java J2EE design patterns and the coding guidelines to design and develop scalable reliable and robust software Worked with GIT which is used as a version control tool in the project Added logging and debugging capabilities using Log4j Serverside implemented on J2EE IntelliJ platform Created team specific Agile process flow in JIRA to move tasks from one activity to another Developed REST based Web Services using JAXRS and Axis to interact with backend systems Implemented the Project structure based on Spring MVC pattern using spring boot Configured Spring Cloud Config Server for externalized configuration Created and maintained mapping file and transaction control in Hibernate Used JSON parsing to implement REST Web Services Worked with Swagger UI to extensively test new changes Used Spring framework and J2EE components Utilized Spring MVC IoC AOP and DAO modules Developed controller classes backend processes complex services and database interaction Added security for service layer methods using Spring Security Applied industry best practices and standards when project requirements were lagging Designed dynamic clientside JavaScript codes to build web forms and simulate process for web application page navigation and form validation Involved in consuming producing Restful web services using JAXRS Installed WebSphere Server for handling HTTP RequestResponse The request and response from the client are controlled using Session Tracking in JSP Used Swagger and Postman for API development deployment and testing the functionality Involved in transforming XML data into Java Objects using a JAXB binding tool Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Implemented logging on 14 repositories to enable better metricslogging and setup alarms for each failure type permission issues file generation issues container restarts Implemented CICD pipelines with Jenkins to setup pull request preprod and prod deployment workflows with regression test suites Used Jenkins to build and stage the projects Written client interfaces and implementation classes to consume the web services Used RAD IDE for developing the applications and IBM Web sphere server for deploying various components of application JAVA DEVELOPER HCL Gurgaon Delhi Delhi October 2015 to August 2016 Responsibilities Involved in creating a reusable component using React JS for DOM Manipulation Migrated the existing environment and applications into Java8 and Tomcat 8 on Test Server Worked on Tomcat Server domain using upgraded version extensively used MVC architecture and Tomcat for deployment purposes Created the build instructions docs and used to run weekly production build and release tags for all the applications Implemented TestNG automation framework is that the crucial functions of the application and implemented Regression Test to verify the existing functionality Spring MVC and Hibernate was used for developing java REST services on the back end Used the feature of React JS of running the server and rendering the virtual DOM returning to the browser as a regular page Built S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Worked on creation of exhaustive JUnit Unit Test Cases for each Java class that is being developed for this application using a mocking framework Mockito using Test Driven Development technique Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Used Spring Boot which is radically faster in building services and develop Spring based application with minimal configuration Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Integrated Kafka with Flume in sand box Environment using Kafka source and Kafka sink Created Automation script using Selenium WebDriver and executed scripts on different browsers Used JavaScript libraries to create slider and pageturning animations on calendar widgets Used Web APIs Media Type Formatter into JSON XML or whatever format you want to add as a Media Type Formatter Developed various web pages and components using Angular 6 by implementing predefined components from Node Package Manager NPM Delivered mobile app for book reading capability with HTML5 Sencha and online services with FlashFlex Used Babel to Transpile ES6 and JSX code into JavaScript that can load on the browser Used JERSEY framework to implement the JAXRS Java API for XML and RESTful Service Developed SQL stored procedures and prepared statements for updating and accessing data from database Worked under Eclipse Integrated Development Environment IDEused Clear Case Version Control for Project Configuration Management Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Worked on Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Created REST APIs Microservices and EJB using Express RouterModelController architecture Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping Developed to provide RESTful API utilizing Spring Boot with Spring MVC built Spring based Java and Scala Microservices to support Enterprise Web application Written various AWS Lambda services for automating the process of taking EBS Snapshots every day in production environment on the cloud Deployed applications on AWS by using Elastic Beanstalk Integrated delivery CI and CD using Jenkins and Ansible Configured Route 53 by using CFT templates assigned the DNS mapping for the AWS servers and troubleshoot the issues of the load balancers auto scaling groups and Route 53 Converted commercial QTP Scripts to open source Selenium WebDriver scripts to maximize the profits of the company without compromising Quality Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Worked on Kafka Backup Index Log4j appended minimized logs and Pointed Ambari server logs to NAS Storage Developed a frontend application using React Js and FLUX architecture for internal teams productivity use Worked on React Js and working with React Flux architecture for developing Single Page Applications SPAs Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Tiles Plugin to struts for designing JSP page layouts and in cooperating with common menus Creating the project startup UI ie Generic XHTML face let templates error handling data tables using JSF Interacted with the business teams and worked on modeling the database schema and created tables queries PLSQL stored procedures database triggers Installed Kafka manager for consumer lags and for monitoring Kafka Metrics also this has been used for adding topics Partitions etc Created and enhanced numerous test scripts to handle changes in the objects in the tested applications GUI and in the testing environment using Selenium WebDriver Involved in solving the issues related to PROD TEST server environments also developed reports using Crystal Reports Developed and continuously deployed javabased applications using CICD techniques Performed Verification and validation process for the code written by making use of JavaScript testing frameworks Jasmine and Karma Developed API driven RWAs by integrating Angular with Bootstrap and APIs Extensively used JavaScript library D3js for manipulating documents based on data and for datadriven approach to DOM manipulation Used Subversion SVN as the configuration management tool to manage the code repository Work on project buildscript by using MAVEN and deployed on Tomcat also used log4J for enabling logging and debugging at run time Used JMS Java Mailing Service API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Education Masters in Information Systems Skills Java Java J2Ee Spring Hibernate JSP Angularjs Javascript J2Ee ReactJS AWS SQL SDLC",
    "extracted_keywords": [
        "DEVELOPER",
        "lJAVAspan",
        "span",
        "lDEVELOPERspan",
        "DEVELOPER",
        "TMobile",
        "Bellevue",
        "WA",
        "Years",
        "experience",
        "developer",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "Cross",
        "Platform",
        "Web",
        "application",
        "ClientServer",
        "InternetIntranet",
        "JAVAJ2EE",
        "Technologies",
        "Experience",
        "project",
        "delivery",
        "application",
        "design",
        "application",
        "development",
        "unit",
        "integration",
        "testing",
        "production",
        "support",
        "enhancement",
        "size",
        "projects",
        "Expertise",
        "programming",
        "skills",
        "development",
        "experience",
        "web",
        "applications",
        "enterprise",
        "applications",
        "languagestechnologies",
        "J2EE",
        "Struts",
        "Spring",
        "Servlets",
        "JSP",
        "JDBC",
        "XML",
        "Web",
        "services",
        "SOA",
        "Hibernate",
        "separation",
        "layers",
        "application",
        "development",
        "experience",
        "web",
        "application",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Controller",
        "MVC",
        "Architecture",
        "Struts",
        "framework",
        "Hibernate",
        "framework",
        "XML",
        "Extjs",
        "Experience",
        "applications",
        "web",
        "servers",
        "BEA",
        "Web",
        "logic",
        "Websphere81",
        "Enterprise",
        "Apache",
        "Tomcat",
        "Servers",
        "Experience",
        "project",
        "documents",
        "Microsoft",
        "Office",
        "Suite",
        "MSOffice",
        "MSExcel",
        "MSPowerPoint",
        "MSVisio",
        "MSProject",
        "Plan",
        "experience",
        "Java",
        "J2EE",
        "programming",
        "JDBC",
        "JPA",
        "Servlets",
        "JSP",
        "JSTL",
        "Spring",
        "Hibernate",
        "Experience",
        "AWS",
        "services",
        "EC2",
        "EBS",
        "ELB",
        "S3",
        "SQS",
        "RDS",
        "DynamoDB",
        "Lambda",
        "API",
        "Gateway",
        "CloudWatch",
        "CloudFormation",
        "Elastic",
        "Beanstalk",
        "Strong",
        "experience",
        "Full",
        "Stack",
        "web",
        "technologies",
        "J2EE",
        "Servlets",
        "Swing",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "boot",
        "AJAX",
        "jQuery",
        "JSON",
        "EJB",
        "JBOSS",
        "JDBC",
        "JSP",
        "HTML",
        "Angular",
        "JavaScript",
        "CSS",
        "XML",
        "Log4J",
        "Experience",
        "versions",
        "Angular",
        "features",
        "Expertise",
        "IOCDependency",
        "Injection",
        "features",
        "aspects",
        "Spring",
        "Framework",
        "Experience",
        "applications",
        "Angularjs",
        "Nodejs",
        "Bootstrap",
        "Grids",
        "Toolbars",
        "Panels",
        "ComboBox",
        "Button",
        "experience",
        "applications",
        "application",
        "servers",
        "Apache",
        "Tomcat",
        "IBM",
        "WebSphere",
        "WebLogic",
        "Jboss",
        "environments",
        "Nodejs",
        "Proficient",
        "UML",
        "concepts",
        "use",
        "case",
        "modelingrealization",
        "design",
        "patterns",
        "Data",
        "Proficiency",
        "Model",
        "View",
        "Controller",
        "MVC",
        "Architecture",
        "applications",
        "Spring",
        "Framework",
        "Experience",
        "environments",
        "Agile",
        "SCRUM",
        "Water",
        "Fall",
        "knowledge",
        "J2EE",
        "Design",
        "Patterns",
        "MVC",
        "Architecture",
        "Singleton",
        "Factory",
        "Pattern",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Expertise",
        "Application",
        "servers",
        "Web",
        "servers",
        "Jboss",
        "Apache",
        "Tomcat",
        "work",
        "Dependency",
        "Injection",
        "Inversion",
        "Control",
        "IoC",
        "Spring",
        "MVC",
        "Spring",
        "JDBC",
        "Auto",
        "Wiring",
        "concepts",
        "Spring",
        "framework",
        "End",
        "technologies",
        "web",
        "development",
        "HTML5",
        "DHTML",
        "XHTML",
        "CSS3",
        "jQuery",
        "JSON",
        "JavaScript",
        "ReactJS",
        "NodeJS",
        "Angular",
        "JS",
        "Angular",
        "Bootstrap",
        "AJAX",
        "XSD",
        "Tag",
        "layouts",
        "HTML5",
        "CCS3",
        "Angular24",
        "Bootstrap",
        "AJAX",
        "JSON",
        "jQuery",
        "Expertise",
        "Web",
        "Services",
        "technologies",
        "standards",
        "SOAPUDDIWSDL",
        "REST",
        "Jersey",
        "experience",
        "RDBMS",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "PostgreSQL",
        "DB2",
        "Oracle",
        "NoSQL",
        "database",
        "MongoDB",
        "Experience",
        "unit",
        "test",
        "cases",
        "Integration",
        "test",
        "cases",
        "Junit",
        "Miskito",
        "Knowledge",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Experience",
        "technologies",
        "Docker",
        "Kubernetes",
        "OpenShift",
        "development",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "microservices",
        "data",
        "DynamoDB",
        "Kafka",
        "topics",
        "reporting",
        "Git",
        "build",
        "version",
        "Spring",
        "AOP",
        "mechanism",
        "Experience",
        "Maven",
        "ANT",
        "build",
        "automation",
        "Experience",
        "Angular",
        "typescript",
        "components",
        "twoway",
        "data",
        "Experience",
        "understanding",
        "Service",
        "Oriented",
        "Architecture",
        "Microservices",
        "Architecture",
        "experience",
        "operating",
        "systems",
        "UNIX",
        "Sun",
        "Solaris",
        "Linux",
        "Microsoft",
        "Windows",
        "US",
        "employer",
        "Work",
        "Experience",
        "DEVELOPER",
        "TMobile",
        "Bellevue",
        "WA",
        "October",
        "Present",
        "Responsibilities",
        "phases",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "ecommerce",
        "application",
        "development",
        "Business",
        "requirement",
        "analysis",
        "design",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular2",
        "UI",
        "Web",
        "services",
        "Angular",
        "Http",
        "Module",
        "Worked",
        "Angular",
        "components",
        "POCs",
        "Design",
        "Coding",
        "JAVA",
        "J2EE",
        "modules",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "Rest",
        "Hibernate",
        "JPA",
        "Hibernate",
        "annotation",
        "mapping",
        "Java",
        "Beans",
        "Spring",
        "Hibernate",
        "DAO",
        "support",
        "API",
        "relationship",
        "Database",
        "Java",
        "Beans",
        "Expertise",
        "Web",
        "Services",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "SOAP",
        "Restful",
        "Web",
        "Services",
        "Develop",
        "enhance",
        "Spring",
        "Boot",
        "micro",
        "services",
        "application",
        "SOAP",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "JAX_WS",
        "JAXRS",
        "CXF",
        "AXIS",
        "JERSEY",
        "REST",
        "Template",
        "SOAP",
        "UI",
        "configuration",
        "deployment",
        "applications",
        "severs",
        "WebSphere",
        "Web",
        "Logic",
        "Tomcat",
        "Worked",
        "experience",
        "Hibernate",
        "ORM",
        "tool",
        "operations",
        "maintenance",
        "support",
        "AWS",
        "cloud",
        "resources",
        "EC2",
        "instances",
        "S3",
        "Clouds",
        "VPC",
        "Elastic",
        "Load",
        "Balancers",
        "ELB",
        "Relational",
        "Database",
        "Services",
        "RDS",
        "time",
        "monitoring",
        "applications",
        "AWS",
        "Cloud",
        "Watch",
        "Cloud",
        "Trail",
        "Simple",
        "Notification",
        "Service",
        "resource",
        "allocations",
        "Docker",
        "microservice",
        "architecture",
        "Spring",
        "Boot",
        "NoSQL",
        "databases",
        "Cassandra",
        "MongoDB",
        "Apache",
        "Spark",
        "cluster",
        "management",
        "Apache",
        "Kafka",
        "system",
        "Apache",
        "Ant",
        "Maven",
        "scripts",
        "deployment",
        "WARJAR",
        "file",
        "management",
        "web",
        "applications",
        "JIRA",
        "bug",
        "tracking",
        "Confluence",
        "Pages",
        "report",
        "creation",
        "project",
        "management",
        "purposes",
        "serverside",
        "application",
        "database",
        "Spring",
        "Boot",
        "Hibernate",
        "Wrote",
        "SQL",
        "HQL",
        "procedures",
        "statement",
        "statement",
        "Load",
        "Get",
        "Criteria",
        "methods",
        "data",
        "database",
        "Configured",
        "Spring",
        "MVC",
        "framework",
        "Hibernate",
        "Spring",
        "framework",
        "Consumed",
        "REST",
        "microservices",
        "Rest",
        "template",
        "APIs",
        "applications",
        "AWS",
        "Elastic",
        "Beanstalk",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "RESTful",
        "Web",
        "Service",
        "Jersey",
        "Restful",
        "API",
        "data",
        "accessibility",
        "Apache",
        "Kafka",
        "cluster",
        "system",
        "Microservices",
        "Apache",
        "Kafka",
        "track",
        "activities",
        "website",
        "largescale",
        "message",
        "processing",
        "applications",
        "Inter",
        "process",
        "storage",
        "messages",
        "messages",
        "term",
        "memory",
        "storages",
        "POC",
        "Spark",
        "SQL",
        "records",
        "Cassandra",
        "storage",
        "Spark",
        "analytics",
        "Mongo",
        "Pyspark",
        "Python",
        "testing",
        "processing",
        "data",
        "Eclipse",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "development",
        "Spring",
        "Boot",
        "Junit",
        "Mockito",
        "test",
        "rest",
        "template",
        "rest",
        "services",
        "camel",
        "routes",
        "Jenkins",
        "projects",
        "Stash",
        "GIT",
        "repository",
        "software",
        "development",
        "test",
        "environment",
        "Docker",
        "containers",
        "Docker",
        "containers",
        "Kubernetes",
        "Agile",
        "Methodology",
        "development",
        "SCRUM",
        "meetings",
        "work",
        "status",
        "clarifications",
        "DEVELOPER",
        "McKesson",
        "San",
        "Francisco",
        "CA",
        "August",
        "September",
        "Responsibilities",
        "Java",
        "Developer",
        "project",
        "JavaScript",
        "ES6",
        "React",
        "Redux",
        "Saga",
        "services",
        "HTML5CSS3SASSBootstrap",
        "Gitlab",
        "Jenkins",
        "pipelines",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "Redux",
        "Sagas",
        "actions",
        "reducers",
        "API",
        "calls",
        "redux",
        "saga",
        "middleware",
        "redux",
        "application",
        "state",
        "redux",
        "actions",
        "Ajax",
        "JSON",
        "JavaScript",
        "functions",
        "User",
        "selections",
        "radio",
        "button",
        "dropdown",
        "menu",
        "selections",
        "cookie",
        "Spring",
        "Core",
        "Annotations",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "API",
        "Spring",
        "Boot",
        "microservices",
        "CSS",
        "templates",
        "use",
        "pages",
        "website",
        "CSS",
        "background",
        "text",
        "border",
        "margin",
        "padding",
        "table",
        "TestNG",
        "white",
        "box",
        "testing",
        "application",
        "test",
        "conditionstest",
        "data",
        "Keyword",
        "Driven",
        "Data",
        "Driven",
        "Hybrid",
        "framework",
        "Selenium",
        "Web",
        "Driver",
        "Jenkins",
        "web",
        "services",
        "CICD",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "goals",
        "code",
        "quality",
        "metrics",
        "topics",
        "Kafka",
        "cluster",
        "environment",
        "Kafka",
        "cluster",
        "Kerberos",
        "Kafka",
        "Security",
        "Features",
        "SSL",
        "grainfines",
        "security",
        "Kerberos",
        "users",
        "groups",
        "security",
        "features",
        "frameworks",
        "Reactjs",
        "highquality",
        "components",
        "Frontend",
        "solution",
        "tables",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "functions",
        "application",
        "packages",
        "Inserts",
        "updates",
        "database",
        "Stored",
        "Procedures",
        "User",
        "functions",
        "Views",
        "Error",
        "Handling",
        "Stored",
        "Procedures",
        "SQL",
        "objects",
        "Modified",
        "Java",
        "REST",
        "Spring",
        "Framework",
        "application",
        "persistence",
        "layer",
        "Hibernate",
        "Hibernate",
        "Spring",
        "Cassandra",
        "Database",
        "DAO",
        "Java",
        "persistence",
        "layer",
        "application",
        "migration",
        "Cassandra",
        "Spark",
        "data",
        "Cassandra",
        "Cluster",
        "Customized",
        "Spring",
        "Multi",
        "Action",
        "operations",
        "spring",
        "Spring",
        "JDBC",
        "frameworks",
        "MVC",
        "DB",
        "interaction",
        "application",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Requirement",
        "analysis",
        "Design",
        "Development",
        "Testing",
        "Maintenance",
        "Used",
        "AJAX",
        "JQUERY",
        "JSON",
        "technologies",
        "Asynchronous",
        "Http",
        "requests",
        "JavaScript",
        "TDD",
        "approach",
        "environment",
        "unit",
        "testing",
        "useracceptance",
        "Integration",
        "tests",
        "JUNIT",
        "TESTNG",
        "Selenium",
        "tests",
        "selenium",
        "tests",
        "testing",
        "executor",
        "service",
        "actors",
        "documents",
        "components",
        "Angular",
        "application",
        "scratch",
        "libraries",
        "applications",
        "functionality",
        "legacy",
        "application",
        "components",
        "Angular",
        "typescript",
        "Configured",
        "Selenium",
        "Web",
        "Driver",
        "TestNG",
        "Maven",
        "tool",
        "Selenium",
        "automation",
        "scripts",
        "TestNG",
        "release",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "RESTAPIs",
        "Spring",
        "Boot",
        "Microservices",
        "Hibernate",
        "Criteria",
        "API",
        "filtration",
        "rules",
        "conditions",
        "persistence",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "instance",
        "security",
        "groups",
        "load",
        "balancers",
        "Route",
        "SNS",
        "architecture",
        "Managed",
        "Chef",
        "Cookbooks",
        "system",
        "operations",
        "AWS",
        "Cloud",
        "management",
        "applications",
        "MVC",
        "frameworks",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Setup",
        "AWS",
        "infrastructure",
        "resources",
        "VPC",
        "EC2",
        "S3",
        "IAM",
        "EBS",
        "Security",
        "Group",
        "AutoScaling",
        "RDS",
        "Cloud",
        "Formation",
        "templates",
        "Hibernate",
        "Object",
        "Relational",
        "Mapping",
        "tool",
        "data",
        "persistence",
        "Developed",
        "Spring",
        "REST",
        "web",
        "services",
        "applications",
        "organization",
        "data",
        "Json",
        "Jackson",
        "library",
        "REST",
        "web",
        "services",
        "Web",
        "Application",
        "Angular",
        "JS",
        "Bootstrap",
        "CSS",
        "Web",
        "Services",
        "Json",
        "data",
        "CA",
        "groups",
        "load",
        "customer",
        "application",
        "analysis",
        "needs",
        "goals",
        "development",
        "implementation",
        "application",
        "systems",
        "business",
        "personnel",
        "AWS",
        "cloud",
        "resources",
        "troubleshooting",
        "EC2",
        "instances",
        "S3",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "Elastic",
        "Search",
        "Relational",
        "Database",
        "Services",
        "RDS",
        "AWS",
        "Route",
        "traffic",
        "regions",
        "AWS",
        "Security",
        "Groups",
        "Configuring",
        "AWS",
        "EC2",
        "instances",
        "Java",
        "API",
        "Amazon",
        "SQS",
        "emails",
        "micro",
        "services",
        "Spring",
        "Sleuth",
        "Config",
        "Server",
        "NETFLIX",
        "OSS",
        "Eureka",
        "Hystrix",
        "Zuul",
        "containerization",
        "tools",
        "Docker",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "docker",
        "host",
        "JDK",
        "code",
        "interfaces",
        "default",
        "methods",
        "interfaces",
        "filters",
        "Stream",
        "Installed",
        "Ranger",
        "environments",
        "Level",
        "security",
        "Kafka",
        "Broker",
        "application",
        "ReactJS",
        "Nextjs",
        "Express",
        "NodeJS",
        "Relationship",
        "Mangers",
        "Oracle",
        "PLSQL",
        "database",
        "HQL",
        "query",
        "data",
        "database",
        "Annotations",
        "Hibernate",
        "mapping",
        "Apache",
        "Camel",
        "Java",
        "Message",
        "Service",
        "JMS",
        "API",
        "email",
        "notifications",
        "employee",
        "notifications",
        "GIT",
        "Version",
        "Control",
        "iText",
        "pdf",
        "form",
        "tree",
        "unit",
        "testing",
        "Test",
        "NG",
        "GIT",
        "version",
        "management",
        "JIRA",
        "management",
        "system",
        "user",
        "interfaces",
        "JSP",
        "Servlets",
        "Spring",
        "framework",
        "DAO",
        "layer",
        "Hibernate",
        "system",
        "performance",
        "analysis",
        "design",
        "UML",
        "uses",
        "cases",
        "domain",
        "model",
        "Activity",
        "diagrams",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "generation",
        "engineering",
        "tool",
        "Rational",
        "Rose",
        "Created",
        "Servlets",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "submittals",
        "Enterprise",
        "Java",
        "Bean",
        "EJB",
        "components",
        "information",
        "Session",
        "Facade",
        "Flex",
        "Custom",
        "Events",
        "communication",
        "components",
        "Event",
        "error",
        "handling",
        "framework",
        "business",
        "validation",
        "errors",
        "application",
        "error",
        "IFP",
        "error",
        "table",
        "J2EE",
        "design",
        "patterns",
        "project",
        "Factory",
        "Singleton",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Object",
        "Flex",
        "Custom",
        "Events",
        "communication",
        "components",
        "Event",
        "JavaScript",
        "data",
        "entry",
        "form",
        "form",
        "information",
        "stamp",
        "PDF",
        "form",
        "DEVELOPER",
        "Citi",
        "Bank",
        "Mumbai",
        "Maharashtra",
        "September",
        "June",
        "Responsibilities",
        "teams",
        "business",
        "objectives",
        "implementation",
        "business",
        "logic",
        "business",
        "teams",
        "requirements",
        "user",
        "responses",
        "time",
        "backend",
        "services",
        "Experience",
        "development",
        "SCRUM",
        "process",
        "Sprint",
        "standup",
        "meetings",
        "Spring",
        "Dependency",
        "Injection",
        "application",
        "Worked",
        "UI",
        "components",
        "JS",
        "Worked",
        "MVC",
        "framework",
        "SpringIOC",
        "AOP",
        "MVC",
        "functionality",
        "Java",
        "J2EE",
        "design",
        "patterns",
        "guidelines",
        "software",
        "GIT",
        "version",
        "control",
        "tool",
        "project",
        "capabilities",
        "Log4j",
        "Serverside",
        "J2EE",
        "IntelliJ",
        "platform",
        "team",
        "process",
        "flow",
        "JIRA",
        "tasks",
        "activity",
        "Developed",
        "REST",
        "Web",
        "Services",
        "JAXRS",
        "Axis",
        "systems",
        "Project",
        "structure",
        "Spring",
        "MVC",
        "pattern",
        "spring",
        "boot",
        "Configured",
        "Spring",
        "Cloud",
        "Config",
        "Server",
        "configuration",
        "mapping",
        "file",
        "transaction",
        "control",
        "Hibernate",
        "JSON",
        "REST",
        "Web",
        "Services",
        "Swagger",
        "UI",
        "changes",
        "Spring",
        "framework",
        "J2EE",
        "components",
        "Spring",
        "MVC",
        "IoC",
        "AOP",
        "DAO",
        "modules",
        "controller",
        "classes",
        "backend",
        "services",
        "database",
        "interaction",
        "security",
        "service",
        "layer",
        "methods",
        "Spring",
        "Security",
        "industry",
        "practices",
        "standards",
        "project",
        "requirements",
        "JavaScript",
        "codes",
        "web",
        "forms",
        "process",
        "web",
        "application",
        "page",
        "navigation",
        "form",
        "validation",
        "Restful",
        "web",
        "services",
        "JAXRS",
        "Installed",
        "WebSphere",
        "Server",
        "HTTP",
        "RequestResponse",
        "request",
        "response",
        "client",
        "Session",
        "Tracking",
        "JSP",
        "Used",
        "Swagger",
        "Postman",
        "API",
        "development",
        "deployment",
        "functionality",
        "XML",
        "data",
        "Java",
        "Objects",
        "JAXB",
        "tool",
        "GIT",
        "source",
        "control",
        "management",
        "speed",
        "advantage",
        "systems",
        "server",
        "repositories",
        "metricslogging",
        "setup",
        "alarms",
        "failure",
        "type",
        "permission",
        "issues",
        "file",
        "generation",
        "issues",
        "container",
        "restarts",
        "CICD",
        "pipelines",
        "Jenkins",
        "request",
        "preprod",
        "prod",
        "deployment",
        "workflows",
        "regression",
        "test",
        "suites",
        "Jenkins",
        "projects",
        "client",
        "interfaces",
        "implementation",
        "classes",
        "web",
        "services",
        "RAD",
        "IDE",
        "applications",
        "IBM",
        "Web",
        "sphere",
        "server",
        "components",
        "application",
        "DEVELOPER",
        "HCL",
        "Gurgaon",
        "Delhi",
        "Delhi",
        "October",
        "August",
        "Responsibilities",
        "component",
        "React",
        "JS",
        "DOM",
        "Manipulation",
        "environment",
        "applications",
        "Java8",
        "Tomcat",
        "Test",
        "Server",
        "Tomcat",
        "Server",
        "domain",
        "version",
        "MVC",
        "architecture",
        "Tomcat",
        "deployment",
        "purposes",
        "build",
        "instructions",
        "docs",
        "production",
        "build",
        "tags",
        "applications",
        "TestNG",
        "automation",
        "framework",
        "functions",
        "application",
        "Regression",
        "Test",
        "functionality",
        "Spring",
        "MVC",
        "Hibernate",
        "REST",
        "services",
        "end",
        "feature",
        "React",
        "JS",
        "server",
        "DOM",
        "browser",
        "page",
        "S3",
        "buckets",
        "policies",
        "S3",
        "buckets",
        "S3",
        "bucket",
        "Glacier",
        "storage",
        "backup",
        "AWS",
        "creation",
        "JUnit",
        "Unit",
        "Test",
        "Cases",
        "Java",
        "class",
        "application",
        "mocking",
        "framework",
        "Mockito",
        "Test",
        "Driven",
        "Development",
        "technique",
        "Spring",
        "MVC",
        "Model",
        "View",
        "Controller",
        "user",
        "requests",
        "controllers",
        "request",
        "flow",
        "tier",
        "application",
        "Spring",
        "Boot",
        "building",
        "services",
        "Spring",
        "application",
        "configuration",
        "installing",
        "Confluent",
        "Kafka",
        "RD",
        "line",
        "installation",
        "HDFS",
        "connector",
        "Hive",
        "connectors",
        "Storm",
        "Kafka",
        "Services",
        "data",
        "HBase",
        "Hive",
        "tables",
        "Kafka",
        "cluster",
        "nodes",
        "brokers",
        "Integrated",
        "Kafka",
        "Flume",
        "sand",
        "box",
        "Environment",
        "Kafka",
        "source",
        "Kafka",
        "sink",
        "Created",
        "Automation",
        "script",
        "Selenium",
        "WebDriver",
        "scripts",
        "browsers",
        "JavaScript",
        "slider",
        "animations",
        "calendar",
        "widgets",
        "Web",
        "APIs",
        "Media",
        "Type",
        "Formatter",
        "XML",
        "format",
        "Media",
        "Type",
        "Formatter",
        "web",
        "pages",
        "components",
        "Angular",
        "components",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "app",
        "book",
        "reading",
        "capability",
        "HTML5",
        "Sencha",
        "services",
        "FlashFlex",
        "Babel",
        "Transpile",
        "ES6",
        "JSX",
        "code",
        "JavaScript",
        "browser",
        "JERSEY",
        "framework",
        "JAXRS",
        "Java",
        "API",
        "XML",
        "RESTful",
        "Service",
        "Developed",
        "SQL",
        "procedures",
        "statements",
        "data",
        "database",
        "Eclipse",
        "Integrated",
        "Development",
        "Environment",
        "Clear",
        "Case",
        "Version",
        "Control",
        "Project",
        "Configuration",
        "Management",
        "Spring",
        "Configuration",
        "Annotation",
        "configuration",
        "hibernate",
        "JPA",
        "Annotation",
        "POJO",
        "classes",
        "Spring",
        "Annotation",
        "spring",
        "boot",
        "application",
        "Jenkins",
        "pipelines",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "Created",
        "REST",
        "APIs",
        "Microservices",
        "EJB",
        "Express",
        "architecture",
        "Spring",
        "Features",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "AOP",
        "Aspect",
        "Oriented",
        "Programming",
        "Hibernate",
        "ORM",
        "Object",
        "Relational",
        "Mapping",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "Java",
        "Scala",
        "Microservices",
        "Enterprise",
        "Web",
        "application",
        "AWS",
        "Lambda",
        "services",
        "process",
        "EBS",
        "Snapshots",
        "day",
        "production",
        "environment",
        "cloud",
        "Deployed",
        "applications",
        "AWS",
        "Elastic",
        "Beanstalk",
        "Integrated",
        "delivery",
        "CI",
        "CD",
        "Jenkins",
        "Ansible",
        "Configured",
        "Route",
        "CFT",
        "templates",
        "DNS",
        "mapping",
        "AWS",
        "servers",
        "issues",
        "load",
        "auto",
        "scaling",
        "groups",
        "Route",
        "QTP",
        "Scripts",
        "source",
        "Selenium",
        "WebDriver",
        "profits",
        "company",
        "Quality",
        "Created",
        "Database",
        "Influx",
        "DB",
        "Interface",
        "Kafka",
        "measurements",
        "Databases",
        "Kafka",
        "Backup",
        "Index",
        "Log4j",
        "logs",
        "Pointed",
        "Ambari",
        "server",
        "logs",
        "NAS",
        "Storage",
        "frontend",
        "application",
        "React",
        "Js",
        "FLUX",
        "architecture",
        "teams",
        "productivity",
        "use",
        "React",
        "Js",
        "React",
        "Flux",
        "architecture",
        "Single",
        "Page",
        "Applications",
        "SPAs",
        "microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "REST",
        "endpoints",
        "Tiles",
        "Plugin",
        "struts",
        "JSP",
        "page",
        "layouts",
        "menus",
        "project",
        "UI",
        "Generic",
        "XHTML",
        "face",
        "templates",
        "data",
        "tables",
        "JSF",
        "Interacted",
        "business",
        "teams",
        "database",
        "schema",
        "tables",
        "queries",
        "procedures",
        "database",
        "Installed",
        "Kafka",
        "manager",
        "consumer",
        "lags",
        "Kafka",
        "Metrics",
        "topics",
        "Partitions",
        "test",
        "scripts",
        "changes",
        "objects",
        "applications",
        "GUI",
        "testing",
        "environment",
        "Selenium",
        "WebDriver",
        "issues",
        "TEST",
        "server",
        "environments",
        "reports",
        "Crystal",
        "Reports",
        "Developed",
        "applications",
        "CICD",
        "techniques",
        "Performed",
        "Verification",
        "validation",
        "process",
        "code",
        "use",
        "JavaScript",
        "testing",
        "frameworks",
        "Jasmine",
        "Karma",
        "Developed",
        "API",
        "RWAs",
        "Angular",
        "Bootstrap",
        "APIs",
        "JavaScript",
        "library",
        "D3js",
        "documents",
        "data",
        "approach",
        "DOM",
        "manipulation",
        "Subversion",
        "SVN",
        "configuration",
        "management",
        "tool",
        "code",
        "repository",
        "Work",
        "project",
        "buildscript",
        "MAVEN",
        "Tomcat",
        "logging",
        "time",
        "JMS",
        "Java",
        "Mailing",
        "Service",
        "API",
        "notifications",
        "success",
        "failure",
        "processes",
        "mail",
        "notifications",
        "system",
        "problems",
        "Education",
        "Masters",
        "Information",
        "Systems",
        "Skills",
        "Java",
        "Java",
        "J2Ee",
        "Spring",
        "Hibernate",
        "JSP",
        "Angularjs",
        "Javascript",
        "ReactJS",
        "AWS",
        "SQL",
        "SDLC"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:27:55.963998",
    "resume_data": "JAVA DEVELOPER span lJAVAspan span lDEVELOPERspan JAVA DEVELOPER TMobile Bellevue WA Around 4 Years of experience as developer in Software Development Life Cycle including Analysis Design Development Testing and Implementation of Cross Platform Web application ClientServer InternetIntranet using JAVAJ2EE Technologies Experience in project delivery application design application development unit integration testing production support enhancement of various size projects Expertise in programming skills and development experience of multitier web applications enterprise applications in languagestechnologies like JAVA J2EE Struts Spring Servlets JSP JDBC XML Web services SOA and Hibernate that ensures clear separation of layers and rapid application development Extensive experience in developing web application using Spring Framework Model View Controller MVC Architecture Struts framework Hibernate framework XML Extjs Experience in deploying applications in web and app servers like BEA Web logic Websphere81 Enterprise and Apache Tomcat Servers Experience in preparing project related documents using Microsoft Office Suite like MSOffice MSExcel MSPowerPoint MSVisio MSProject Plan etc Extensive experience in Java J2EE programming JDBC JPA Servlets JSP JSTL Spring Hibernate Experience in AWS services like EC2 EBS ELB S3 SQS RDS DynamoDB Lambda API Gateway CloudWatch CloudFormation and Elastic Beanstalk Strong experience in Full Stack web technologies like J2EE Servlets Swing Hibernate Spring MVC Spring boot AJAX jQuery JSON EJB JBOSS JDBC JSP HTML Angular 24 JavaScript CSS XML Log4J Experience of different angular versions including Angular 2 and Angular 4 extensive features for loading Expertise in implementing IOCDependency Injection features in various aspects of Spring Framework Experience in developing applications using Angularjs Nodejs Bootstrap like Grids Toolbars Panels ComboBox and Button etc Strong experience in developing and deploying applications through application servers like Apache Tomcat IBM WebSphere WebLogic and Jboss along with environments like Nodejs Proficient in UML concepts with use case modelingrealization design patterns Data and object modeling Proficiency in developing Model View Controller MVC Architecture based applications using Spring Framework Experience working in environments using Agile SCRUM Water Fall methodologies Good knowledge on J2EE Design Patterns like MVC Architecture Singleton Factory Pattern Front Controller and Data Access Object Expertise with Application servers and Web servers like Jboss Apache Tomcat Extensive work in implementing Dependency Injection Inversion of Control IoC Spring MVC Spring JDBC and Auto Wiring concepts using Spring framework Experienced in front End technologies web development using HTML5 DHTML XHTML CSS3 jQuery JSON JavaScript ReactJS NodeJS Angular JS Angular 5 Bootstrap AJAX XSD Tag Libraries Developed layouts using HTML5 CCS3 Angular24 Bootstrap AJAX JSON and jQuery Expertise in Web Services including different technologies and standards like SOAPUDDIWSDL REST Jersey Extensive experience working with RDBMS such as MySQL MS SQL Server PostgreSQL DB2 Oracle and NoSQL database like MongoDB Experience in developing unit test cases Integration test cases using Junit with Miskito also good Knowledge on Service Oriented Architecture SOA Experience in containerbased technologies like Docker Kubernetes and OpenShift along with the development of Microservices architecture using Spring Boot Developed microservices to load the data from DynamoDB to Kafka topics for reporting and Used Git to control the build version Implemented Spring AOP for logging mechanism Experience in using Maven and ANT for build automation Experience in Angular 5 formerly Angular2 with implementing typescript components twoway data binding Experience in developing and a solid understanding of Service Oriented Architecture and Microservices Architecture Extensive experience in working on multiple operating systems including UNIX Sun Solaris Linux and Microsoft Windows Authorized to work in the US for any employer Work Experience JAVA DEVELOPER TMobile Bellevue WA October 2018 to Present Responsibilities Participated in most phases of SDLC Software Development Life Cycle of ecommerce application development including Business requirement analysis design coding and testing Participated to HTML5 CSS3 JavaScript and Angular2 to create attractive and friendly UI Interacted with RESTful Web services using Angular 2 Http Module Worked on Angular 2 components Angular 4 and on POCs Design and Coding of various JAVA J2EE modules like Spring Boot Spring MVC Spring Rest Hibernate JPA Implemented Hibernate annotation mapping on backend Java Beans using Spring Hibernate DAO support API build the relationship between Database and Java Beans Expertise in implementing Web Services based on Service Oriented Architecture SOA using SOAP Restful Web Services Develop enhance and maintain a Spring Boot based micro services application Designed and developed SOAP and Restful web services using WSDL SOAP JAX_WS JAXRS CXF AXIS JERSEY REST Template and SOAP UI Done the configuration and deployment of multitier applications using severs like WebSphere Web Logic and Tomcat Worked experience in Hibernate ORM tool Done the various operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Done the real time monitoring and alerting the applications deployed in AWS using Cloud Watch Cloud Trail and Simple Notification Service to maximize resource allocations Worked on Docker to build a microservice based architecture using Spring Boot Worked on NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Involved in building and deploying Apache Ant Maven scripts for deployment and customizing WARJAR file management for web applications Worked on JIRA for bug tracking and Confluence Pages for report creation and other project management purposes Developed serverside application to interact with database using Spring Boot and Hibernate Wrote native SQL HQL queries stored procedures triggers callable statement and prepared statement Used Load Get and Criteria methods to manipulate data in the database Configured Spring MVC framework and integrated Hibernate 35 to Spring 3 framework Consumed REST based microservices with Rest template based on RESTful APIs Deployed applications on AWS by using Elastic Beanstalk Developed API for using AWS Lambda to manage the servers and run the code in AWS Created RESTful Web Service based on Jersey Restful API provide data accessibility Used Apache Kafka cluster as messaging system between the Microservices Used Apache Kafka for keeping the track of all the activities on the website used for some of the largescale message processing applications and Inter process messaging for temporary storage of messages rather than the messages being stored in long term memory storages Implemented a POC with Spark SQL to interpret complex JSON records Used Cassandra as a storage for Spark analytics and worked on Mongo dB Implemented Pyspark using Python for faster testing and processing of data Used Eclipse based Spring Tool Suite STS for development and debugging Spring Boot Used Junit Mockito and test rest template for testing the rest services and camel routes etc Using Jenkins for building and deploying the projects and worked on Stash GIT repository software Involved in development of test environment on Docker containers and configuring the Docker containers using Kubernetes Used Agile Methodology in whole development attended daily and weekly SCRUM meetings to update the work status and issue clarifications etc JAVA DEVELOPER McKesson San Francisco CA August 2017 to September 2018 Responsibilities Worked as a Java Developer on the project with JavaScript ES6 React Redux Saga RESTful services HTML5CSS3SASSBootstrap and Gitlab Currently using Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Implemented Redux Sagas with actions and reducers to implement a sync API calls Worked on redux saga middleware to access redux application state and dispatched redux actions Written Ajax driven JSON consuming JavaScript functions to save User selections such as radio button dropdown menu selections into a cookie Used Spring Core Annotations for Spring DI and Spring MVC for REST API s and Spring Boot for microservices Worked in designing the CSS templates for use in all pages on the website working with CSS background positioning text border margin padding and table Used TestNG for white box testing of application Created test conditionstest data Worked on Keyword Driven Data Driven and Hybrid framework using Selenium Web Driver Worked on Jenkins to deploy web services to cloud so CICD Continuous Integration Continuous Delivery goals are achieved and code quality metrics are met Designed and implemented topics in new Kafka cluster in all environment successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL further with more grainfines security I set up Kerberos to have users and groups this will enable more advanced security features Worked on leading frameworks as Reactjs to build highquality scalable and reusable components and Frontend solution Involved in creating tables and worked on My SQL and PLSQL to write Stored Procedures functions in the application and packages for complex Inserts and updates in the database Involved in Stored Procedures User Defined functions Views and implemented the Error Handling in the Stored Procedures and SQL objects and Modified already existing stored Used Java 8 REST and Spring Framework for developing the application Implemented the persistence layer using Hibernate and configured Hibernate with Spring to interact with the Cassandra Database from the DAO Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Developed Customized Spring Multi Action controllers for handling similar operations and configured spring and Spring JDBC frameworks to develop fullfledged MVC and DB interaction application Worked on Software Development Life Cycle SDLC including Requirement analysis Design Development Testing and Maintenance Used AJAX based on JQUERY and JSON technologies for making Asynchronous Http requests along with JavaScript Followed TDD approach and creating environment for unit testing useracceptance testing and facilitating Integration tests with JUNIT TESTNG Selenium tests and SwaggerUI Developed Automated selenium tests using testing and executor service where 2 actors can sign documents in parallel Developed the components using Angular 6 needed for the application from the scratch and customizing from various Angular related libraries to meet the applications functionality Enhanced legacy application by building new components in Angular 6 and typescript Configured Selenium Web Driver TestNG Maven tool and created Selenium automation scripts in java using TestNG prior to agile release Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for RESTAPIs and Spring Boot for Microservices Used Hibernate Criteria API to apply filtration rules and logical conditions on persistence objects Build servers using AWS which includes importing necessary volumes launching the EC2 instance creating security groups autoscaling load balancers Route 53 and SNS as per the architecture Managed Chef Cookbooks to automate system operations and AWS Cloud management Developed applications based on MVC frameworks such as Spring MVC Spring Boot Spring Cloud Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Security Group AutoScaling and RDS in Cloud Formation JSON templates Used Hibernate as an Object Relational Mapping tool for the data persistence Developed Spring REST web services to serve multiple applications across the organization The data is provided in Json and used Jackson library Also consumed REST web services Developed dynamic responsive Web Application by integrating Angular JS with Bootstrap and LESS CSS which is further integrated with Web Services Used Json to fetch data from CA groups and load in customer application Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run under docker host Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream Installed Ranger in all environments for Second Level of security in Kafka Broker Developed an internal application using ReactJS Nextjs Express and NodeJS for Relationship Mangers Worked on Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Used GIT as Version Control and iText to generate pdf in the form of a tree Done unit testing using Test NG used GIT as version management JIRA for defect management system Developed all the user interfaces using JSP Servlets and Spring framework also developed the DAO layer using Hibernate and used the caching system for realtime performance Worked on objectoriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Created Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Developed Flex Custom Events for communication between various components and for Event Bubbling Created error handling framework and persisted all the business validation errors and application error in to IFP error table Used various J2EE design patterns in the project such as Factory Singleton Service Locator and Data Access Object Developed Flex Custom Events for communication between various components and for Event Bubbling Utilized JavaScript to present a data entry form that when submitted transferred form information to the digital stamp placed on the PDF form JAVA DEVELOPER Citi Bank Mumbai Maharashtra September 2016 to June 2017 Responsibilities Worked with various teams to understand business objectives and implementation of business logic Worked with business technical teams to gather requirements and implement user friendly responses for 8 real time backend services especially for exceptionsfailures Experience working in Agile development following SCRUM process Sprint and daily standup meetings Used Spring Dependency Injection to make application easy to test and integrate Worked on UI components using angular JS Worked with advanced MVC framework such as SpringIOC AOP MVC for implementing backend functionality Followed Java J2EE design patterns and the coding guidelines to design and develop scalable reliable and robust software Worked with GIT which is used as a version control tool in the project Added logging and debugging capabilities using Log4j Serverside implemented on J2EE IntelliJ platform Created team specific Agile process flow in JIRA to move tasks from one activity to another Developed REST based Web Services using JAXRS and Axis to interact with backend systems Implemented the Project structure based on Spring MVC pattern using spring boot Configured Spring Cloud Config Server for externalized configuration Created and maintained mapping file and transaction control in Hibernate Used JSON parsing to implement REST Web Services Worked with Swagger UI to extensively test new changes Used Spring framework and J2EE components Utilized Spring MVC IoC AOP and DAO modules Developed controller classes backend processes complex services and database interaction Added security for service layer methods using Spring Security Applied industry best practices and standards when project requirements were lagging Designed dynamic clientside JavaScript codes to build web forms and simulate process for web application page navigation and form validation Involved in consuming producing Restful web services using JAXRS Installed WebSphere Server for handling HTTP RequestResponse The request and response from the client are controlled using Session Tracking in JSP Used Swagger and Postman for API development deployment and testing the functionality Involved in transforming XML data into Java Objects using a JAXB binding tool Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Implemented logging on 14 repositories to enable better metricslogging and setup alarms for each failure type permission issues file generation issues container restarts Implemented CICD pipelines with Jenkins to setup pull request preprod and prod deployment workflows with regression test suites Used Jenkins to build and stage the projects Written client interfaces and implementation classes to consume the web services Used RAD IDE for developing the applications and IBM Web sphere server for deploying various components of application JAVA DEVELOPER HCL Gurgaon Delhi Delhi October 2015 to August 2016 Responsibilities Involved in creating a reusable component using React JS for DOM Manipulation Migrated the existing environment and applications into Java8 and Tomcat 8 on Test Server Worked on Tomcat Server domain using upgraded version extensively used MVC architecture and Tomcat for deployment purposes Created the build instructions docs and used to run weekly production build and release tags for all the applications Implemented TestNG automation framework is that the crucial functions of the application and implemented Regression Test to verify the existing functionality Spring MVC and Hibernate was used for developing java REST services on the back end Used the feature of React JS of running the server and rendering the virtual DOM returning to the browser as a regular page Built S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Worked on creation of exhaustive JUnit Unit Test Cases for each Java class that is being developed for this application using a mocking framework Mockito using Test Driven Development technique Used Spring MVC Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Used Spring Boot which is radically faster in building services and develop Spring based application with minimal configuration Done the installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Integrated Kafka with Flume in sand box Environment using Kafka source and Kafka sink Created Automation script using Selenium WebDriver and executed scripts on different browsers Used JavaScript libraries to create slider and pageturning animations on calendar widgets Used Web APIs Media Type Formatter into JSON XML or whatever format you want to add as a Media Type Formatter Developed various web pages and components using Angular 6 by implementing predefined components from Node Package Manager NPM Delivered mobile app for book reading capability with HTML5 Sencha and online services with FlashFlex Used Babel to Transpile ES6 and JSX code into JavaScript that can load on the browser Used JERSEY framework to implement the JAXRS Java API for XML and RESTful Service Developed SQL stored procedures and prepared statements for updating and accessing data from database Worked under Eclipse Integrated Development Environment IDEused Clear Case Version Control for Project Configuration Management Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Worked on Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Created REST APIs Microservices and EJB using Express RouterModelController architecture Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping Developed to provide RESTful API utilizing Spring Boot with Spring MVC built Spring based Java and Scala Microservices to support Enterprise Web application Written various AWS Lambda services for automating the process of taking EBS Snapshots every day in production environment on the cloud Deployed applications on AWS by using Elastic Beanstalk Integrated delivery CI and CD using Jenkins and Ansible Configured Route 53 by using CFT templates assigned the DNS mapping for the AWS servers and troubleshoot the issues of the load balancers auto scaling groups and Route 53 Converted commercial QTP Scripts to open source Selenium WebDriver scripts to maximize the profits of the company without compromising Quality Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Worked on Kafka Backup Index Log4j appended minimized logs and Pointed Ambari server logs to NAS Storage Developed a frontend application using React Js and FLUX architecture for internal teams productivity use Worked on React Js and working with React Flux architecture for developing Single Page Applications SPAs Used microservice architecture with Spring Bootbased services interacting through REST endpoints Used Tiles Plugin to struts for designing JSP page layouts and in cooperating with common menus Creating the project startup UI ie Generic XHTML face let templates error handling data tables using JSF Interacted with the business teams and worked on modeling the database schema and created tables queries PLSQL stored procedures database triggers Installed Kafka manager for consumer lags and for monitoring Kafka Metrics also this has been used for adding topics Partitions etc Created and enhanced numerous test scripts to handle changes in the objects in the tested applications GUI and in the testing environment using Selenium WebDriver Involved in solving the issues related to PROD TEST server environments also developed reports using Crystal Reports Developed and continuously deployed javabased applications using CICD techniques Performed Verification and validation process for the code written by making use of JavaScript testing frameworks Jasmine and Karma Developed API driven RWAs by integrating Angular with Bootstrap and APIs Extensively used JavaScript library D3js for manipulating documents based on data and for datadriven approach to DOM manipulation Used Subversion SVN as the configuration management tool to manage the code repository Work on project buildscript by using MAVEN and deployed on Tomcat also used log4J for enabling logging and debugging at run time Used JMS Java Mailing Service API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Education Masters in Information Systems Skills Java Java J2Ee Spring Hibernate JSP Angularjs Javascript J2Ee ReactJS AWS SQL SDLC",
    "unique_id": "435c8daa-20b1-4a59-8e62-2b83c49ba60b"
}