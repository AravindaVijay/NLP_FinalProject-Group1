{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Navistar Springfield OH Overall 7 years of industrial experience as professional developer and has more than 4 years of experience in Designing Developing Deploying and maintaining web application based on Django Python platforms More than 2 years of experience in developing Web Applications using Django and Flask inclusive of experience in UI using JavaScript AngularJS and ReactRedux Experience in application development using PYTHON Django HTML5 CSS JavaScript and jQuery MySQL PostgreSQL and SQLite Designing and developing fullstack applications across multiple platforms using modern industryadopted languages and frameworks Worked on a new web app built in React and Redux using ES6 Developed entire frontend and backend modules using Python on Django Web Framework with GIT Good experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text PyCharm Microsoft Visual Code Strong knowledge of ObjectOriented Design and Programming concepts and Experience in Object Oriented Programming OOP concepts using Python C Experienced in Working on Big Data Integration and Analytics based on Hadoop Spark and NoSQL databases like HBase and MongoDB Handson experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment Experience in developing Web Services REST API with Python programming language Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Basic knowledge on Rest API JSON Parsing jQuery and Angular JS Experience in Shell Scripting SQL Server UNIX and Linux Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Good knowledge of Apache server Apache Server Tomcat and Web logic in application servers Experience in designing the automation framework using Shell scripting Experience in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Created EBS volumes for storing application files for use with EC2 instances whenever they are mounted to them Wrote and executed various MYSQL database queries from python using pythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Designed and developed presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautiful Soup for web scrapping Experienced in Agile Methodologies Scrum stories and Sprints experience in a Python based environment Highly motivated dedicated quick learner and have proven ability to work individually and as a team Authorized to work in the US for any employer Work Experience Python Developer Navistar Springfield OH December 2018 to Present Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Contributed to development of security policies and processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Interact with backend using Java and Hibernate Framework Involved in Coding of Enterprise Java Beans which implements business rules and business logic Involved in developing the Java classes and JavaBeans Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Involved in the development of guidelineschecklist for streamlining of activities for Data Management DM in study stepup to closeout phase Tracked status and progress of data management for allocated projectstrials Represented data management and coordinated with internalexternal teams Played a key role in the Data Quality Improvement by reducing data errors Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Worked PHP as a server side scripting language for web pages Used PHP to write dynamically generated pages quickly Worked on middle tier and persistence layer Created service and model layer classes and Value objectsPOJO to hold values between java classes and database fields Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAPUI for testing web service for server side changes Environment Python 27 Django 18 Celery MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm Apache Spark AWS EC2 S3 RDS Google Cloud Python Developer State of Oregon Salem OR September 2017 to November 2018 Responsibilities Created APIs database Model and Views UtilizationPythonin order to build responsive web page application Performed troubleshooting fixed and deployed manyPython bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented user interface guidelines and standards throughout the development and maintenance of the website using the CSS HTML JavaScript and JQuery PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed inPythonand Bash Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Added support for Apache web server and RDS to host staticmedia files and the database into AmazonCloud Developed user friendly and sophisticated graphicalrepresentation of the catalogue of items that would be configured for a piece of equipment Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Object Oriented Design code for manufacturing quality monitoring logging and debuggingcodeoptimization Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library BeautifulSoup for web scrapping to extract data for building graphs Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shellscripting Monitoring Python scripts run as daemons in the UNIXLinux system background to collect trigger and feed arrival information Helped calculating SLA misses Work on SCRs source change request involved working on Perl PythonPHP and ShellScripting CreatedPythonMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Ensured code quality by writing unit tests using Pytest Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation ENVIRONMENT Python Django HTML5 CSS XML AJAX MySQL JavaScript Angular JS Backbone JS JQuery Pyquery Bootstrap Mongo DB Postgre SQL TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Shell Atlanta GA September 2016 to August 2017 Responsibilities Exposed to various phases of Software Development Life Cycle using Agile Scrum Software development methodology Implemented Design Patterns like Singleton Factory Template and DAO patterns Selecting appropriate AWS services to design and deploy an application based on given requirements Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Developed strategy to migrate DevTestProduction from an enterprise VMware infrastructure to the IaaSAmazon Web Services AWS Cloud environment including runbook processes and procedures Leveraged AWS cloud services such as EC2 autoscaling and VPC to build secure highly scalable and flexible systems that handled expected and unexpected load bursts Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into AmazonCloud Coded various business process methods required for creation of Web Services related to customer information and provider information using JAXWS SOAP WSDL and JAXRS REST web services Worked with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Developed highperformance distributed queueing system Scala Redis Akka closure MQ messaging Json Developed new functionality for interactive healthcare system Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS Angular2 Angular4WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Angular2 Angular4Adobe flash Used Ansible for automating cloud deployment process Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shellscripting Worked on PythonOpenStack APIs and used Numpy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Involved in deployment using Docker Container on AWS Involved in configured DNS DHCP Active Directory with strong focus on Domain Controller maintenance including Windows Server Developed Restful APIs using Python Flask and SQLAlchemy data models as well as Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pairbasedprogramming Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Utilized PyUnit the PythonUnit test framework for all Python applications and used Django Database APIs to access database objects Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Implemented Log4j mechanism for logging at different modules within the application Implemented Test Driven development TDD using frameworks like Junit Mockito and Easy mock Environment Python 27 DJango 17 CSS HTML JavaScript Bootstrap Apache Web Server AJAX JQuery Pandas MySQL Restful APIs JavaBeans Servlets Agile Scrum Heroku JIRA GIT Python Developer Hans InfoTech IN December 2013 to May 2016 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQL and Linux Implemented and tested many features for dashboard using Flask CSS and JavaScript Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation and deployment of AWS EC2 environments for proof of concept of design assumptions Introduced to encapsulate the existing structures used by Keymap and help S3 IndexKeymap scale infinitely Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Designing ETL process and creation of ETL design and system design documents Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Architecting and deploying AWS EC2 and S3based environments Worked in Python on a SQL database Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Environment Python 3x Django Flask Shell Scripting AWS Pandas PyUnit OOAD MS Visio HTTP JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Zensar technologies Hyderabad Telangana September 2012 to November 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Work with team of developers on python applications for RISK management Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Made Django web based apps for Insurance premium calculations Generated property list for every application dynamically using Python Rewrite existing Java C application in Python Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Used Pandas library for statistical Analysis Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed ColdFusion Components custom tags and modified CF Objects Designed the architecture of the hardware environments and methodology of the code Involved in entire lifecycle of the projects including Design Development and Deployment Wrote AJAX framework to transform Datasets and tables into HTTPserializable JSON strings Build SQL NO SQL queries implementing functions packages views triggers and tables Environment Python 2x Django 14 Java Script Matplotlib Plotly HTML JQuery JSON AJAX XML CSS Oracle MySQL Bootstrap SOAP Web Services Beautiful Soup Jenkins SVN Linux Eclipse Education Masters Skills Django Docker Git Javascript Perl Php Python Ruby Scripting Css Sharepoint Microsoft sql server Sql server Mysql Oracle Plsql Sql Android Ios Linux",
    "entities": [
        "JAXWS SOAP WSDL",
        "the Data Quality Improvement",
        "AWS EC2",
        "ShellScripting",
        "Java PHP Nodejs Python Ruby",
        "HTML AJAX CSS",
        "SQLAlchemy",
        "UNIX",
        "the CSS HTML JavaScript",
        "Created UseCase",
        "ReactRedux",
        "SQLite Designing",
        "webapp2",
        "Present Responsibilities Implemented",
        "Interfacing",
        "Design Patterns",
        "Represented",
        "Amazon Web Services AWS",
        "Panda",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "SOAP",
        "React",
        "Pandas PyUnit",
        "Shell",
        "State",
        "HBase",
        "PyCharm Microsoft",
        "JQuery Contributed",
        "LAMP",
        "Creation",
        "UNIXLinux",
        "Amazon AWS S3",
        "DAO",
        "Puppet",
        "Project Status",
        "Design Development and Deployment Wrote",
        "Angular4Adobe",
        "MQ",
        "Develop",
        "Software Development Life Cycle using Agile Scrum Software",
        "Created Data",
        "JSP",
        "Flask",
        "MVC Singleton",
        "Hyderabad",
        "Shell Scripting",
        "S3based",
        "RDS",
        "PyQt",
        "Docker Container",
        "PythonDjango",
        "Django Curl XML JSON",
        "AWS Involved",
        "HTML CSS",
        "Development of Python",
        "API",
        "US",
        "HTML CSS JavaScript",
        "Created",
        "DNS DHCP Active Directory",
        "AWS",
        "Sprints",
        "Oracle MySQL Bootstrap SOAP Web Services",
        "Singleton",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Developed ColdFusion Components",
        "Python Object Oriented Design",
        "Used Selenium Library",
        "Sql",
        "Data Management DM",
        "SQL",
        "Flask CSS",
        "lPythonspan",
        "Administrators",
        "Bash Developed GUI",
        "jQuery MySQL PostgreSQL",
        "Wireshark",
        "Developer Zensar technologies",
        "Amazon AWS",
        "Handson",
        "CF Objects Designed",
        "Working on Big Data Integration and Analytics",
        "Pandas",
        "ETL",
        "Leveraged AWS",
        "Build",
        "Djangos",
        "JavaScript",
        "Django Python",
        "Python C Experienced",
        "UI",
        "Data Layer and Search",
        "Microsoft",
        "GIT Good",
        "Utilized PyUnit",
        "MS Visio Created",
        "CSS",
        "Hadoop Spark",
        "ObjectOriented Design",
        "REST",
        "PHP",
        "NoSQL",
        "TDD",
        "Monitoring Python",
        "SLA",
        "Value",
        "Model and Views UtilizationPythonin"
    ],
    "experience": "Experience in application development using PYTHON Django HTML5 CSS JavaScript and jQuery MySQL PostgreSQL and SQLite Designing and developing fullstack applications across multiple platforms using modern industryadopted languages and frameworks Worked on a new web app built in React and Redux using ES6 Developed entire frontend and backend modules using Python on Django Web Framework with GIT Good experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text PyCharm Microsoft Visual Code Strong knowledge of ObjectOriented Design and Programming concepts and Experience in Object Oriented Programming OOP concepts using Python C Experienced in Working on Big Data Integration and Analytics based on Hadoop Spark and NoSQL databases like HBase and MongoDB Handson experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment Experience in developing Web Services REST API with Python programming language Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Basic knowledge on Rest API JSON Parsing jQuery and Angular JS Experience in Shell Scripting SQL Server UNIX and Linux Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Good knowledge of Apache server Apache Server Tomcat and Web logic in application servers Experience in designing the automation framework using Shell scripting Experience in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Created EBS volumes for storing application files for use with EC2 instances whenever they are mounted to them Wrote and executed various MYSQL database queries from python using pythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Designed and developed presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautiful Soup for web scrapping Experienced in Agile Methodologies Scrum stories and Sprints experience in a Python based environment Highly motivated dedicated quick learner and have proven ability to work individually and as a team Authorized to work in the US for any employer Work Experience Python Developer Navistar Springfield OH December 2018 to Present Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Contributed to development of security policies and processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Interact with backend using Java and Hibernate Framework Involved in Coding of Enterprise Java Beans which implements business rules and business logic Involved in developing the Java classes and JavaBeans Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Involved in the development of guidelineschecklist for streamlining of activities for Data Management DM in study stepup to closeout phase Tracked status and progress of data management for allocated projectstrials Represented data management and coordinated with internalexternal teams Played a key role in the Data Quality Improvement by reducing data errors Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Worked PHP as a server side scripting language for web pages Used PHP to write dynamically generated pages quickly Worked on middle tier and persistence layer Created service and model layer classes and Value objectsPOJO to hold values between java classes and database fields Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAPUI for testing web service for server side changes Environment Python 27 Django 18 Celery MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm Apache Spark AWS EC2 S3 RDS Google Cloud Python Developer State of Oregon Salem OR September 2017 to November 2018 Responsibilities Created APIs database Model and Views UtilizationPythonin order to build responsive web page application Performed troubleshooting fixed and deployed manyPython bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented user interface guidelines and standards throughout the development and maintenance of the website using the CSS HTML JavaScript and JQuery PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed inPythonand Bash Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Added support for Apache web server and RDS to host staticmedia files and the database into AmazonCloud Developed user friendly and sophisticated graphicalrepresentation of the catalogue of items that would be configured for a piece of equipment Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Object Oriented Design code for manufacturing quality monitoring logging and debuggingcodeoptimization Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library BeautifulSoup for web scrapping to extract data for building graphs Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shellscripting Monitoring Python scripts run as daemons in the UNIXLinux system background to collect trigger and feed arrival information Helped calculating SLA misses Work on SCRs source change request involved working on Perl PythonPHP and ShellScripting CreatedPythonMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Ensured code quality by writing unit tests using Pytest Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation ENVIRONMENT Python Django HTML5 CSS XML AJAX MySQL JavaScript Angular JS Backbone JS JQuery Pyquery Bootstrap Mongo DB Postgre SQL TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Shell Atlanta GA September 2016 to August 2017 Responsibilities Exposed to various phases of Software Development Life Cycle using Agile Scrum Software development methodology Implemented Design Patterns like Singleton Factory Template and DAO patterns Selecting appropriate AWS services to design and deploy an application based on given requirements Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Developed strategy to migrate DevTestProduction from an enterprise VMware infrastructure to the IaaSAmazon Web Services AWS Cloud environment including runbook processes and procedures Leveraged AWS cloud services such as EC2 autoscaling and VPC to build secure highly scalable and flexible systems that handled expected and unexpected load bursts Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into AmazonCloud Coded various business process methods required for creation of Web Services related to customer information and provider information using JAXWS SOAP WSDL and JAXRS REST web services Worked with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Developed highperformance distributed queueing system Scala Redis Akka closure MQ messaging Json Developed new functionality for interactive healthcare system Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS Angular2 Angular4WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Angular2 Angular4Adobe flash Used Ansible for automating cloud deployment process Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shellscripting Worked on PythonOpenStack APIs and used Numpy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Involved in deployment using Docker Container on AWS Involved in configured DNS DHCP Active Directory with strong focus on Domain Controller maintenance including Windows Server Developed Restful APIs using Python Flask and SQLAlchemy data models as well as Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pairbasedprogramming Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Utilized PyUnit the PythonUnit test framework for all Python applications and used Django Database APIs to access database objects Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Implemented Log4j mechanism for logging at different modules within the application Implemented Test Driven development TDD using frameworks like Junit Mockito and Easy mock Environment Python 27 DJango 17 CSS HTML JavaScript Bootstrap Apache Web Server AJAX JQuery Pandas MySQL Restful APIs JavaBeans Servlets Agile Scrum Heroku JIRA GIT Python Developer Hans InfoTech IN December 2013 to May 2016 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQL and Linux Implemented and tested many features for dashboard using Flask CSS and JavaScript Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation and deployment of AWS EC2 environments for proof of concept of design assumptions Introduced to encapsulate the existing structures used by Keymap and help S3 IndexKeymap scale infinitely Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Designing ETL process and creation of ETL design and system design documents Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Architecting and deploying AWS EC2 and S3based environments Worked in Python on a SQL database Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Environment Python 3x Django Flask Shell Scripting AWS Pandas PyUnit OOAD MS Visio HTTP JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Zensar technologies Hyderabad Telangana September 2012 to November 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Work with team of developers on python applications for RISK management Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Made Django web based apps for Insurance premium calculations Generated property list for every application dynamically using Python Rewrite existing Java C application in Python Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Used Pandas library for statistical Analysis Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed ColdFusion Components custom tags and modified CF Objects Designed the architecture of the hardware environments and methodology of the code Involved in entire lifecycle of the projects including Design Development and Deployment Wrote AJAX framework to transform Datasets and tables into HTTPserializable JSON strings Build SQL NO SQL queries implementing functions packages views triggers and tables Environment Python 2x Django 14 Java Script Matplotlib Plotly HTML JQuery JSON AJAX XML CSS Oracle MySQL Bootstrap SOAP Web Services Beautiful Soup Jenkins SVN Linux Eclipse Education Masters Skills Django Docker Git Javascript Perl Php Python Ruby Scripting Css Sharepoint Microsoft sql server Sql server Mysql Oracle Plsql Sql Android Ios Linux",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Navistar",
        "Springfield",
        "OH",
        "years",
        "experience",
        "developer",
        "years",
        "experience",
        "Designing",
        "Developing",
        "Deploying",
        "web",
        "application",
        "Django",
        "Python",
        "years",
        "experience",
        "Web",
        "Applications",
        "Django",
        "Flask",
        "inclusive",
        "experience",
        "UI",
        "JavaScript",
        "AngularJS",
        "ReactRedux",
        "Experience",
        "application",
        "development",
        "PYTHON",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "jQuery",
        "MySQL",
        "PostgreSQL",
        "SQLite",
        "Designing",
        "fullstack",
        "applications",
        "platforms",
        "languages",
        "frameworks",
        "web",
        "app",
        "React",
        "Redux",
        "ES6",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "Good",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Pandas",
        "data",
        "frame",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "PyCharm",
        "Microsoft",
        "Visual",
        "Code",
        "knowledge",
        "ObjectOriented",
        "Design",
        "Programming",
        "concepts",
        "Experience",
        "Object",
        "Programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "Working",
        "Big",
        "Data",
        "Integration",
        "Analytics",
        "Hadoop",
        "Spark",
        "NoSQL",
        "HBase",
        "MongoDB",
        "Handson",
        "experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Experience",
        "Web",
        "Services",
        "REST",
        "API",
        "Python",
        "programming",
        "language",
        "Experience",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "frameworks",
        "DJANGO",
        "knowledge",
        "Rest",
        "API",
        "JSON",
        "jQuery",
        "Angular",
        "JS",
        "Experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "knowledge",
        "Apache",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Web",
        "logic",
        "application",
        "servers",
        "Experience",
        "automation",
        "framework",
        "Shell",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "cloud",
        "platform",
        "EC2",
        "clouds",
        "VPCs",
        "Storage",
        "models",
        "EBS",
        "S3",
        "instance",
        "storage",
        "Elastic",
        "Load",
        "Balancers",
        "ELBs",
        "EBS",
        "volumes",
        "application",
        "files",
        "use",
        "EC2",
        "instances",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "pythonMySQL",
        "connector",
        "MySQL",
        "package",
        "python",
        "scripts",
        "XML",
        "reports",
        "information",
        "database",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "PERL",
        "script",
        "data",
        "text",
        "files",
        "web",
        "automation",
        "file",
        "formats",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "SQL",
        "PostgreSQL",
        "database",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "Sprints",
        "experience",
        "Python",
        "environment",
        "learner",
        "ability",
        "team",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Navistar",
        "Springfield",
        "OH",
        "December",
        "Present",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Contributed",
        "development",
        "security",
        "policies",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "PHP",
        "unit",
        "test",
        "cases",
        "Data",
        "Layer",
        "Search",
        "server",
        "classes",
        "Django",
        "Curl",
        "XML",
        "REST",
        "base",
        "services",
        "MongoDB",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "MongoDB",
        "Interact",
        "backend",
        "Java",
        "Hibernate",
        "Framework",
        "Coding",
        "Enterprise",
        "Java",
        "Beans",
        "business",
        "rules",
        "business",
        "logic",
        "Java",
        "classes",
        "JavaBeans",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Used",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "development",
        "guidelineschecklist",
        "activities",
        "Data",
        "Management",
        "DM",
        "study",
        "stepup",
        "closeout",
        "phase",
        "status",
        "progress",
        "data",
        "management",
        "projectstrials",
        "data",
        "management",
        "teams",
        "role",
        "Data",
        "Quality",
        "Improvement",
        "data",
        "errors",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Utilize",
        "knowledge",
        "experience",
        "LAMP",
        "leadingedge",
        "products",
        "technology",
        "conjunction",
        "industry",
        "business",
        "skills",
        "solutions",
        "customer",
        "Worked",
        "PHP",
        "server",
        "side",
        "scripting",
        "language",
        "web",
        "pages",
        "PHP",
        "pages",
        "tier",
        "persistence",
        "layer",
        "service",
        "model",
        "layer",
        "classes",
        "Value",
        "values",
        "classes",
        "database",
        "fields",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "REST",
        "SOAPUI",
        "testing",
        "web",
        "service",
        "server",
        "side",
        "changes",
        "Environment",
        "Python",
        "Django",
        "Celery",
        "MongoDB",
        "MySQL",
        "AJAX",
        "SOAP",
        "REST",
        "JQuery",
        "JavaScript",
        "Bootstrap",
        "PyCharm",
        "Apache",
        "Spark",
        "AWS",
        "EC2",
        "S3",
        "RDS",
        "Google",
        "Cloud",
        "Python",
        "Developer",
        "State",
        "Oregon",
        "Salem",
        "September",
        "November",
        "Responsibilities",
        "APIs",
        "database",
        "Model",
        "Views",
        "UtilizationPythonin",
        "order",
        "web",
        "page",
        "application",
        "Performed",
        "troubleshooting",
        "manyPython",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQLDB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Bash",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "Python",
        "code",
        "web",
        "browser",
        "support",
        "Apache",
        "web",
        "server",
        "RDS",
        "files",
        "database",
        "AmazonCloud",
        "Developed",
        "user",
        "graphicalrepresentation",
        "catalogue",
        "items",
        "piece",
        "equipment",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "capacity",
        "planning",
        "reports",
        "Python",
        "packages",
        "matplotlib",
        "workflows",
        "Python",
        "scripts",
        "UNIX",
        "shell",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "code",
        "quality",
        "monitoring",
        "logging",
        "debuggingcodeoptimization",
        "operations",
        "calculation",
        "purpose",
        "python",
        "libraries",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Python",
        "library",
        "BeautifulSoup",
        "web",
        "data",
        "graphs",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "status",
        "jobs",
        "Monitoring",
        "Python",
        "scripts",
        "daemons",
        "UNIXLinux",
        "system",
        "background",
        "trigger",
        "feed",
        "arrival",
        "information",
        "SLA",
        "misses",
        "SCRs",
        "source",
        "change",
        "request",
        "Perl",
        "PythonPHP",
        "ShellScripting",
        "CreatedPythonMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Flash",
        "developer",
        "data",
        "query",
        "strings",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "tracking",
        "options",
        "application",
        "algorithm",
        "data",
        "address",
        "generation",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "AJAX",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "Pyquery",
        "Bootstrap",
        "Mongo",
        "DB",
        "Postgre",
        "SQL",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "Shell",
        "Atlanta",
        "GA",
        "September",
        "August",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Agile",
        "Scrum",
        "Software",
        "development",
        "methodology",
        "Design",
        "Patterns",
        "Singleton",
        "Factory",
        "Template",
        "DAO",
        "patterns",
        "AWS",
        "services",
        "application",
        "requirements",
        "AWS",
        "Beanstalk",
        "web",
        "applications",
        "services",
        "Java",
        "PHP",
        "Nodejs",
        "Python",
        "Ruby",
        "Docker",
        "servers",
        "Apache",
        "IIS",
        "strategy",
        "DevTestProduction",
        "enterprise",
        "VMware",
        "infrastructure",
        "IaaSAmazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "environment",
        "runbook",
        "processes",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "autoscaling",
        "systems",
        "load",
        "bursts",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "AmazonCloud",
        "business",
        "process",
        "methods",
        "creation",
        "Web",
        "Services",
        "customer",
        "information",
        "provider",
        "information",
        "JAXWS",
        "SOAP",
        "WSDL",
        "JAXRS",
        "REST",
        "web",
        "services",
        "Requests",
        "Pysftp",
        "Gnupg",
        "ReportLab",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "HTTPLib2",
        "Urllib2",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Data",
        "tables",
        "PyQt",
        "patient",
        "policy",
        "information",
        "update",
        "patient",
        "records",
        "highperformance",
        "system",
        "Scala",
        "Redis",
        "Akka",
        "closure",
        "MQ",
        "Json",
        "functionality",
        "healthcare",
        "system",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "presentation",
        "layer",
        "CSS",
        "framework",
        "NodeJS",
        "Angular2",
        "Angular4WireFraming",
        "HTML5",
        "Responsible",
        "framework",
        "UI",
        "development",
        "Developed",
        "html",
        "HTML5",
        "CSS3",
        "JSON",
        "Angular2",
        "Angular4Adobe",
        "flash",
        "Ansible",
        "cloud",
        "deployment",
        "process",
        "JSP",
        "views",
        "functionality",
        "UI",
        "screens",
        "client",
        "technologies",
        "JQuery",
        "JavaScript",
        "HTML",
        "CSS",
        "files",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQLDB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "APIs",
        "Python",
        "Flask",
        "SQLAlchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "status",
        "jobs",
        "Worked",
        "PythonOpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "deployment",
        "Docker",
        "Container",
        "AWS",
        "DNS",
        "Active",
        "Directory",
        "focus",
        "Domain",
        "Controller",
        "maintenance",
        "Windows",
        "Server",
        "Developed",
        "APIs",
        "Python",
        "Flask",
        "SQLAlchemy",
        "data",
        "models",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "OracleDB",
        "PostgreSQL",
        "VMWareAPI",
        "integration",
        "system",
        "Git",
        "MySQL",
        "Jenkins",
        "custom",
        "tools",
        "Python",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MySQL",
        "database",
        "Python",
        "Python",
        "MySQL",
        "connector",
        "MySQLdb",
        "package",
        "information",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "integration",
        "methodologies",
        "client",
        "web",
        "portals",
        "software",
        "infrastructure",
        "APIs",
        "vendor",
        "frameworks",
        "solutions",
        "Docker",
        "Jenkins",
        "Git",
        "Puppet",
        "microservices",
        "deployment",
        "PyUnit",
        "PythonUnit",
        "test",
        "framework",
        "Python",
        "applications",
        "Django",
        "Database",
        "APIs",
        "database",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "tracking",
        "options",
        "application",
        "algorithm",
        "data",
        "address",
        "generation",
        "Log4j",
        "mechanism",
        "modules",
        "application",
        "Test",
        "development",
        "TDD",
        "frameworks",
        "Junit",
        "Mockito",
        "Easy",
        "Environment",
        "Python",
        "DJango",
        "CSS",
        "HTML",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "AJAX",
        "JQuery",
        "Pandas",
        "MySQL",
        "APIs",
        "JavaBeans",
        "Servlets",
        "Agile",
        "Scrum",
        "Heroku",
        "JIRA",
        "GIT",
        "Python",
        "Developer",
        "Hans",
        "InfoTech",
        "December",
        "May",
        "Responsibilities",
        "partnerships",
        "business",
        "unit",
        "knowledge",
        "base",
        "business",
        "line",
        "business",
        "plan",
        "products",
        "processes",
        "Created",
        "UseCase",
        "diagrams",
        "State",
        "diagrams",
        "MS",
        "Visio",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "features",
        "dashboard",
        "Flask",
        "CSS",
        "JavaScript",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "Creation",
        "deployment",
        "AWS",
        "EC2",
        "environments",
        "proof",
        "concept",
        "design",
        "assumptions",
        "structures",
        "Keymap",
        "S3",
        "IndexKeymap",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Designing",
        "ETL",
        "process",
        "creation",
        "ETL",
        "design",
        "system",
        "design",
        "documents",
        "Installation",
        "Python",
        "Linux",
        "test",
        "beds",
        "JSON",
        "REST",
        "Web",
        "services",
        "AWS",
        "EC2",
        "environments",
        "Python",
        "SQL",
        "database",
        "presentations",
        "Project",
        "Status",
        "Current",
        "Open",
        "Issues",
        "Report",
        "Users",
        "Stakeholders",
        "groups",
        "meetings",
        "development",
        "testing",
        "team",
        "requirements",
        "updates",
        "development",
        "testing",
        "role",
        "planning",
        "testing",
        "system",
        "enhancements",
        "conversions",
        "project",
        "manager",
        "project",
        "Environment",
        "Python",
        "Django",
        "Flask",
        "Shell",
        "Scripting",
        "AWS",
        "Pandas",
        "PyUnit",
        "MS",
        "Visio",
        "HTTP",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Zensar",
        "Hyderabad",
        "Telangana",
        "September",
        "November",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Django",
        "web",
        "apps",
        "Insurance",
        "premium",
        "calculations",
        "property",
        "list",
        "application",
        "Python",
        "Rewrite",
        "Java",
        "C",
        "application",
        "Python",
        "Django",
        "APIs",
        "database",
        "access",
        "Python",
        "hotel",
        "availability",
        "information",
        "XML",
        "files",
        "Pandas",
        "library",
        "Analysis",
        "Apache",
        "Couchdb",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "ColdFusion",
        "Components",
        "custom",
        "tags",
        "CF",
        "Objects",
        "architecture",
        "hardware",
        "environments",
        "methodology",
        "code",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "tables",
        "JSON",
        "strings",
        "Build",
        "SQL",
        "SQL",
        "functions",
        "packages",
        "views",
        "triggers",
        "tables",
        "Environment",
        "Python",
        "Django",
        "Java",
        "Script",
        "Matplotlib",
        "HTML",
        "JQuery",
        "JSON",
        "AJAX",
        "XML",
        "CSS",
        "Oracle",
        "MySQL",
        "Bootstrap",
        "SOAP",
        "Web",
        "Services",
        "Beautiful",
        "Soup",
        "Jenkins",
        "SVN",
        "Linux",
        "Eclipse",
        "Education",
        "Masters",
        "Skills",
        "Django",
        "Docker",
        "Git",
        "Javascript",
        "Perl",
        "Php",
        "Python",
        "Ruby",
        "Scripting",
        "Css",
        "Sharepoint",
        "Microsoft",
        "server",
        "Sql",
        "server",
        "Mysql",
        "Oracle",
        "Plsql",
        "Sql",
        "Android",
        "Ios",
        "Linux"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:59:20.998076",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Navistar Springfield OH Overall 7 years of industrial experience as professional developer and has more than 4 years of experience in Designing Developing Deploying and maintaining web application based on Django Python platforms More than 2 years of experience in developing Web Applications using Django and Flask inclusive of experience in UI using JavaScript AngularJS and ReactRedux Experience in application development using PYTHON Django HTML5 CSS JavaScript and jQuery MySQL PostgreSQL and SQLite Designing and developing fullstack applications across multiple platforms using modern industryadopted languages and frameworks Worked on a new web app built in React and Redux using ES6 Developed entire frontend and backend modules using Python on Django Web Framework with GIT Good experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib Pandas data frame urllib2 MySQL dB for database connectivity and IDEs sublime text PyCharm Microsoft Visual Code Strong knowledge of ObjectOriented Design and Programming concepts and Experience in Object Oriented Programming OOP concepts using Python C Experienced in Working on Big Data Integration and Analytics based on Hadoop Spark and NoSQL databases like HBase and MongoDB Handson experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment Experience in developing Web Services REST API with Python programming language Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Basic knowledge on Rest API JSON Parsing jQuery and Angular JS Experience in Shell Scripting SQL Server UNIX and Linux Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Good knowledge of Apache server Apache Server Tomcat and Web logic in application servers Experience in designing the automation framework using Shell scripting Experience in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Created EBS volumes for storing application files for use with EC2 instances whenever they are mounted to them Wrote and executed various MYSQL database queries from python using pythonMySQL connector and MySQL dB package Used python scripts to parse XML and JSON reports and load the information in database Designed and developed presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautiful Soup for web scrapping Experienced in Agile Methodologies Scrum stories and Sprints experience in a Python based environment Highly motivated dedicated quick learner and have proven ability to work individually and as a team Authorized to work in the US for any employer Work Experience Python Developer Navistar Springfield OH December 2018 to Present Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Contributed to development of security policies and processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Interact with backend using Java and Hibernate Framework Involved in Coding of Enterprise Java Beans which implements business rules and business logic Involved in developing the Java classes and JavaBeans Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Involved in the development of guidelineschecklist for streamlining of activities for Data Management DM in study stepup to closeout phase Tracked status and progress of data management for allocated projectstrials Represented data management and coordinated with internalexternal teams Played a key role in the Data Quality Improvement by reducing data errors Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Worked PHP as a server side scripting language for web pages Used PHP to write dynamically generated pages quickly Worked on middle tier and persistence layer Created service and model layer classes and Value objectsPOJO to hold values between java classes and database fields Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAPUI for testing web service for server side changes Environment Python 27 Django 18 Celery MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm Apache Spark AWS EC2 S3 RDS Google Cloud Python Developer State of Oregon Salem OR September 2017 to November 2018 Responsibilities Created APIs database Model and Views UtilizationPythonin order to build responsive web page application Performed troubleshooting fixed and deployed manyPython bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented user interface guidelines and standards throughout the development and maintenance of the website using the CSS HTML JavaScript and JQuery PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed inPythonand Bash Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Added support for Apache web server and RDS to host staticmedia files and the database into AmazonCloud Developed user friendly and sophisticated graphicalrepresentation of the catalogue of items that would be configured for a piece of equipment Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Generating various capacity planning reports graphical using Python packages like Numpy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Object Oriented Design code for manufacturing quality monitoring logging and debuggingcodeoptimization Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library BeautifulSoup for web scrapping to extract data for building graphs Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shellscripting Monitoring Python scripts run as daemons in the UNIXLinux system background to collect trigger and feed arrival information Helped calculating SLA misses Work on SCRs source change request involved working on Perl PythonPHP and ShellScripting CreatedPythonMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Ensured code quality by writing unit tests using Pytest Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation ENVIRONMENT Python Django HTML5 CSS XML AJAX MySQL JavaScript Angular JS Backbone JS JQuery Pyquery Bootstrap Mongo DB Postgre SQL TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Shell Atlanta GA September 2016 to August 2017 Responsibilities Exposed to various phases of Software Development Life Cycle using Agile Scrum Software development methodology Implemented Design Patterns like Singleton Factory Template and DAO patterns Selecting appropriate AWS services to design and deploy an application based on given requirements Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Developed strategy to migrate DevTestProduction from an enterprise VMware infrastructure to the IaaSAmazon Web Services AWS Cloud environment including runbook processes and procedures Leveraged AWS cloud services such as EC2 autoscaling and VPC to build secure highly scalable and flexible systems that handled expected and unexpected load bursts Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into AmazonCloud Coded various business process methods required for creation of Web Services related to customer information and provider information using JAXWS SOAP WSDL and JAXRS REST web services Worked with Requests Pysftp Gnupg ReportLab Numpy Scipy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Created Data tables utilizing PyQt to display patient and policy information and add delete update patient records Developed highperformance distributed queueing system Scala Redis Akka closure MQ messaging Json Developed new functionality for interactive healthcare system Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS Angular2 Angular4WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Angular2 Angular4Adobe flash Used Ansible for automating cloud deployment process Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shellscripting Worked on PythonOpenStack APIs and used Numpy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Involved in deployment using Docker Container on AWS Involved in configured DNS DHCP Active Directory with strong focus on Domain Controller maintenance including Windows Server Developed Restful APIs using Python Flask and SQLAlchemy data models as well as Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pairbasedprogramming Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Utilized PyUnit the PythonUnit test framework for all Python applications and used Django Database APIs to access database objects Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Implemented Log4j mechanism for logging at different modules within the application Implemented Test Driven development TDD using frameworks like Junit Mockito and Easy mock Environment Python 27 DJango 17 CSS HTML JavaScript Bootstrap Apache Web Server AJAX JQuery Pandas MySQL Restful APIs JavaBeans Servlets Agile Scrum Heroku JIRA GIT Python Developer Hans InfoTech IN December 2013 to May 2016 Responsibilities Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQL and Linux Implemented and tested many features for dashboard using Flask CSS and JavaScript Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation and deployment of AWS EC2 environments for proof of concept of design assumptions Introduced to encapsulate the existing structures used by Keymap and help S3 IndexKeymap scale infinitely Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Designing ETL process and creation of ETL design and system design documents Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Architecting and deploying AWS EC2 and S3based environments Worked in Python on a SQL database Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Environment Python 3x Django Flask Shell Scripting AWS Pandas PyUnit OOAD MS Visio HTTP JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Zensar technologies Hyderabad Telangana September 2012 to November 2013 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Work with team of developers on python applications for RISK management Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Made Django web based apps for Insurance premium calculations Generated property list for every application dynamically using Python Rewrite existing Java C application in Python Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Used Pandas library for statistical Analysis Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed ColdFusion Components custom tags and modified CF Objects Designed the architecture of the hardware environments and methodology of the code Involved in entire lifecycle of the projects including Design Development and Deployment Wrote AJAX framework to transform Datasets and tables into HTTPserializable JSON strings Build SQL NO SQL queries implementing functions packages views triggers and tables Environment Python 2x Django 14 Java Script Matplotlib Plotly HTML JQuery JSON AJAX XML CSS Oracle MySQL Bootstrap SOAP Web Services Beautiful Soup Jenkins SVN Linux Eclipse Education Masters Skills Django Docker Git Javascript Perl Php Python Ruby Scripting Css Sharepoint Microsoft sql server Sql server Mysql Oracle Plsql Sql Android Ios Linux",
    "unique_id": "4e356ec7-4724-4722-8df0-a25cba5983df"
}