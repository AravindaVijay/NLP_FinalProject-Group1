{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Bank of America NY Work Experience Sr Python Developer Bank of America NY January 2017 to Present Responsibilities Designed views and templates with Python Djangos view controller and templating language to create a web interface Designed presentation part in JSP Dynamic content and HTML for static pages Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Design and develop ETL APIs which will automate the data mining in different database sources Deployed project into Amazon web services AWS using amazon elastic bean stalk Used TCPIP protocol to connect with server which has database available to connect for the ETL tool Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Used JavaScript and JSON to update a portion of a webpage Handled potential points of failure through error handling and communication of failure Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Used on Djangos APIs to access database objects Used Awaits and Google Analytics to analyze web traffic Prepared test data files using Linux Shell scripts Perl script as per the business requirements Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Responsible for design of the backend request processing system and interface between CPO and Perl scripts from scratch Participated in the development of application architecture and blueprints to define application components platforms interfaces and development tools Created Python scripts to automate AWS services which includes web servers ELB Cloud Front distribution database EC2 and database security groups S3 bucket and application configuration Started developing with Django and currently developing with Django 10 Created entire application using Python Perl PostgreSQL and Linux Used Wire shark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Designed and developed the user interface of the project with HTML CSS and JavaScript Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management systems using MySQL databases Written Python Scripts to parse the XML documents and load the data in database Utilized the existing Python and Django modules and rewritten to deliver data in required formats Clientside validations and manipulations are done using JavaScript and jQuery Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Utilized Subversion control tool to coordinate team work Used Selenium Libraries to write fully functioning test automation process Build highperformance streaming REST server in Flask Developed user interface using HTML CSS AJAX and JavaScript Worked on APIs deploying queries status codes requests to retrieve data in json format Worked on data exchange from website using xml java and web services Worked on python scripts to parse XML documents and load the data in database Coordinated with team members to improve quality assurance and mitigate risks Wrote stored procedures in MySQL Created a portable fully automated test tool allowing 247 integration support for two development sites around the world and decreasing code turnaround time from 4 hours to 1 hour Automated the daily and weekly build process to allow us to build daily builds twice a day for faster turnaround time for submitted code changes Automated the code release process bring the total time for code releases from 8 hours to 1 hour Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Built Web pages that are more userinteractive using AJAX JavaScript and ReactJS Implemented a review process in integration automation using Review Board and Gerrit that eliminated the need for a 5 hour per week daily approval meeting Resolved QA bugs for front end and back end Played a key role in a department wide transition from Subversion to Git which resulted in an increase in efficiency for the development community Developed a mail script that extracts code defects data per component for a daily report to drive reducing defects in the codebase Created modern REST APIs from existing information assets Designed the UI using HTML5 Angular JS JQuery and CSS Manage a technician that oversees automation and carries out daily tasks Deploying managing and operating scale highly available and fault tolerant systems to AWS Development of modules using Angular JS and HTML Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Python Developer Google Mountain View CA December 2015 to December 2016 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design database Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsoft ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used jQuery libraries for all clientside JavaScript manipulations Involved in developing a Restful service using Python Flask framework Python Developer Dell Round Rock TX January 2012 to November 2014 Responsibilities Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Worked with team of developers on Python applications for RISK management Developed Python application for Google Analytics aggregation and reporting Worked on Python Open stack APIs used Python scripts to update content in the database and manipulate files Implemented machine learning schemes using Python libraries sickielearn and SciPy Experience in MVC architecture using Django for webbased application in OOP concepts Worked on several python packages like Matplotlib cx Freeze Pillow NumPy sockets Worked on ETL Processing which consists of data transformation data sourcing and also mapping Conversion and loading Worked on design and development of Unix Shell Scripting as a part of the ETL Process to automate the process of loading Worked on ETL tasks like pulling pushing data from and too various servers Tested and evaluated results for inclusion into software product Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Pandas library for statistical Analysis using R Studio Automating Email Process Downloading and uploading the files through Perl Scripting Worked on front end frame works like CSS Bootstrap for development of Web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Machine learning techniques like unsupervised Classification optimization and prediction Worked on Python open stack APIs Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Associated with working cloud computing platforms like open stack Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on development of SQL and stored procedures on MYSQL Engaged in Design Development Deployment Testing and Implementation Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 27 NET Query MVW HTML5 Shell Scripting JSON Apache Web Server SQL UNIX Windows and Python libraries Python Developer Nationwide Insurance Group Columbus OH May 2010 to December 2011 Responsibilities Design develop test deploy and maintenance of the website Worked on Teradata SQL queries Teradata Indexes Utilities such as Molad Trump Fast load and Fast Export Used Teradata OLAP functions like RANK ROWNUMBER QUALIFY CSUM and SAMPLE Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using PHP Python Designed and developed data management system using MySQL Rewrite existing Java modules to deliver certain format of data Wrote python scripts to parse XML documents and loaded the data in database Generated property list for every application dynamically using python Handled all the clientside validation using JavaScript Creating unit testregression test framework for existing code Created a Test Automation Framework with Selenium for test automation process Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting of web application Skills PHP Javascript Git HTML 5 jQuery",
    "entities": [
        "GUI",
        "HTML AJAX CSS",
        "Interfacing",
        "Teradata Indexes Utilities",
        "AWS Development",
        "Panda",
        "SOAP",
        "XML",
        "Python Developer Nationwide Insurance Group",
        "Conversion",
        "Flask Developed",
        "HTML CSS AJAX",
        "Shell",
        "Created a Test Automation Framework with Selenium",
        "Used Selenium Libraries",
        "TX",
        "Amazon",
        "Python Flask framework Python Developer Dell Round Rock",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "CSS Bootstrap",
        "Created Python",
        "CPO",
        "Git",
        "Restful",
        "jQuery Developed",
        "API RESTful Web Service",
        "Classification",
        "Responsibilities Instigated",
        "AJAX JavaScript",
        "RDS",
        "PHP Python Designed",
        "Angular JS",
        "MVC",
        "Flask SQL Alchemy",
        "jQuery Experienced",
        "HTML CSS",
        "HTML CSS JavaScript",
        "QA",
        "Present Responsibilities Designed",
        "CSS Manage",
        "Created",
        "AWS",
        "OOP",
        "SQL",
        "Used Awaits",
        "Bootstrap",
        "lPythonspan",
        "Wireshark",
        "Developed Python",
        "Utilized Python",
        "Pandas",
        "Skills PHP Javascript Git HTML 5",
        "MySQL Responsible for Debugging",
        "SQLite",
        "ETL",
        "cat5",
        "Utilized Subversion",
        "Djangos",
        "JavaScript",
        "UI",
        "Data Layer and Search",
        "JavaScript manipulations Involved",
        "Google Analytics",
        "Microsoft",
        "ISA",
        "JSP Dynamic",
        "jQuery",
        "the ETL Process",
        "REST",
        "JavaScript Entire Front",
        "Review Board",
        "MySQL Created",
        "BASH",
        "Django 10 Created",
        "Troubleshoot",
        "DHCP"
    ],
    "experience": "Experience Sr Python Developer Bank of America NY January 2017 to Present Responsibilities Designed views and templates with Python Djangos view controller and templating language to create a web interface Designed presentation part in JSP Dynamic content and HTML for static pages Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Design and develop ETL APIs which will automate the data mining in different database sources Deployed project into Amazon web services AWS using amazon elastic bean stalk Used TCPIP protocol to connect with server which has database available to connect for the ETL tool Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Used JavaScript and JSON to update a portion of a webpage Handled potential points of failure through error handling and communication of failure Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Used on Djangos APIs to access database objects Used Awaits and Google Analytics to analyze web traffic Prepared test data files using Linux Shell scripts Perl script as per the business requirements Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Responsible for design of the backend request processing system and interface between CPO and Perl scripts from scratch Participated in the development of application architecture and blueprints to define application components platforms interfaces and development tools Created Python scripts to automate AWS services which includes web servers ELB Cloud Front distribution database EC2 and database security groups S3 bucket and application configuration Started developing with Django and currently developing with Django 10 Created entire application using Python Perl PostgreSQL and Linux Used Wire shark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Designed and developed the user interface of the project with HTML CSS and JavaScript Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management systems using MySQL databases Written Python Scripts to parse the XML documents and load the data in database Utilized the existing Python and Django modules and rewritten to deliver data in required formats Clientside validations and manipulations are done using JavaScript and jQuery Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Utilized Subversion control tool to coordinate team work Used Selenium Libraries to write fully functioning test automation process Build highperformance streaming REST server in Flask Developed user interface using HTML CSS AJAX and JavaScript Worked on APIs deploying queries status codes requests to retrieve data in json format Worked on data exchange from website using xml java and web services Worked on python scripts to parse XML documents and load the data in database Coordinated with team members to improve quality assurance and mitigate risks Wrote stored procedures in MySQL Created a portable fully automated test tool allowing 247 integration support for two development sites around the world and decreasing code turnaround time from 4 hours to 1 hour Automated the daily and weekly build process to allow us to build daily builds twice a day for faster turnaround time for submitted code changes Automated the code release process bring the total time for code releases from 8 hours to 1 hour Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Built Web pages that are more userinteractive using AJAX JavaScript and ReactJS Implemented a review process in integration automation using Review Board and Gerrit that eliminated the need for a 5 hour per week daily approval meeting Resolved QA bugs for front end and back end Played a key role in a department wide transition from Subversion to Git which resulted in an increase in efficiency for the development community Developed a mail script that extracts code defects data per component for a daily report to drive reducing defects in the codebase Created modern REST APIs from existing information assets Designed the UI using HTML5 Angular JS JQuery and CSS Manage a technician that oversees automation and carries out daily tasks Deploying managing and operating scale highly available and fault tolerant systems to AWS Development of modules using Angular JS and HTML Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Python Developer Google Mountain View CA December 2015 to December 2016 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design database Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsoft ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used jQuery libraries for all clientside JavaScript manipulations Involved in developing a Restful service using Python Flask framework Python Developer Dell Round Rock TX January 2012 to November 2014 Responsibilities Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Worked with team of developers on Python applications for RISK management Developed Python application for Google Analytics aggregation and reporting Worked on Python Open stack APIs used Python scripts to update content in the database and manipulate files Implemented machine learning schemes using Python libraries sickielearn and SciPy Experience in MVC architecture using Django for webbased application in OOP concepts Worked on several python packages like Matplotlib cx Freeze Pillow NumPy sockets Worked on ETL Processing which consists of data transformation data sourcing and also mapping Conversion and loading Worked on design and development of Unix Shell Scripting as a part of the ETL Process to automate the process of loading Worked on ETL tasks like pulling pushing data from and too various servers Tested and evaluated results for inclusion into software product Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Pandas library for statistical Analysis using R Studio Automating Email Process Downloading and uploading the files through Perl Scripting Worked on front end frame works like CSS Bootstrap for development of Web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Machine learning techniques like unsupervised Classification optimization and prediction Worked on Python open stack APIs Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Associated with working cloud computing platforms like open stack Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on development of SQL and stored procedures on MYSQL Engaged in Design Development Deployment Testing and Implementation Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 27 NET Query MVW HTML5 Shell Scripting JSON Apache Web Server SQL UNIX Windows and Python libraries Python Developer Nationwide Insurance Group Columbus OH May 2010 to December 2011 Responsibilities Design develop test deploy and maintenance of the website Worked on Teradata SQL queries Teradata Indexes Utilities such as Molad Trump Fast load and Fast Export Used Teradata OLAP functions like RANK ROWNUMBER QUALIFY CSUM and SAMPLE Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using PHP Python Designed and developed data management system using MySQL Rewrite existing Java modules to deliver certain format of data Wrote python scripts to parse XML documents and loaded the data in database Generated property list for every application dynamically using python Handled all the clientside validation using JavaScript Creating unit testregression test framework for existing code Created a Test Automation Framework with Selenium for test automation process Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting of web application Skills PHP Javascript Git HTML 5 jQuery",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Bank",
        "America",
        "NY",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Bank",
        "America",
        "NY",
        "January",
        "Present",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "web",
        "interface",
        "presentation",
        "part",
        "JSP",
        "content",
        "HTML",
        "pages",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Design",
        "ETL",
        "APIs",
        "data",
        "mining",
        "database",
        "sources",
        "project",
        "Amazon",
        "web",
        "services",
        "AWS",
        "amazon",
        "bean",
        "stalk",
        "TCPIP",
        "protocol",
        "server",
        "database",
        "ETL",
        "tool",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "scripts",
        "system",
        "administration",
        "AWS",
        "languages",
        "BASH",
        "Python",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "parts",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "process",
        "execution",
        "team",
        "members",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "Djangos",
        "APIs",
        "database",
        "Awaits",
        "Google",
        "Analytics",
        "web",
        "traffic",
        "Prepared",
        "test",
        "data",
        "files",
        "Linux",
        "Shell",
        "Perl",
        "script",
        "business",
        "requirements",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "design",
        "request",
        "processing",
        "system",
        "interface",
        "CPO",
        "Perl",
        "scripts",
        "scratch",
        "development",
        "application",
        "architecture",
        "blueprints",
        "application",
        "components",
        "interfaces",
        "development",
        "tools",
        "Python",
        "scripts",
        "AWS",
        "services",
        "web",
        "servers",
        "ELB",
        "Cloud",
        "Front",
        "distribution",
        "database",
        "EC2",
        "database",
        "security",
        "groups",
        "S3",
        "bucket",
        "application",
        "configuration",
        "Django",
        "Django",
        "application",
        "Python",
        "Perl",
        "PostgreSQL",
        "Linux",
        "Used",
        "Wire",
        "shark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "user",
        "interface",
        "project",
        "HTML",
        "CSS",
        "JavaScript",
        "Entire",
        "Front",
        "end",
        "end",
        "modules",
        "project",
        "Python",
        "Django",
        "Framework",
        "data",
        "management",
        "systems",
        "MySQL",
        "databases",
        "Python",
        "Scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Python",
        "Django",
        "modules",
        "data",
        "formats",
        "validations",
        "manipulations",
        "JavaScript",
        "jQuery",
        "indexes",
        "views",
        "constraints",
        "procedures",
        "cursors",
        "user",
        "functions",
        "subroutines",
        "MySQL",
        "Debugging",
        "application",
        "Subversion",
        "control",
        "tool",
        "team",
        "work",
        "Selenium",
        "Libraries",
        "test",
        "automation",
        "process",
        "Build",
        "highperformance",
        "REST",
        "server",
        "Flask",
        "Developed",
        "user",
        "interface",
        "HTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "APIs",
        "queries",
        "status",
        "requests",
        "data",
        "json",
        "format",
        "data",
        "exchange",
        "website",
        "xml",
        "java",
        "web",
        "services",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "team",
        "members",
        "quality",
        "assurance",
        "mitigate",
        "risks",
        "Wrote",
        "procedures",
        "MySQL",
        "test",
        "tool",
        "integration",
        "support",
        "development",
        "sites",
        "world",
        "code",
        "turnaround",
        "time",
        "hours",
        "hour",
        "build",
        "process",
        "builds",
        "day",
        "turnaround",
        "time",
        "code",
        "changes",
        "code",
        "release",
        "process",
        "time",
        "code",
        "releases",
        "hours",
        "hour",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Web",
        "pages",
        "AJAX",
        "JavaScript",
        "ReactJS",
        "review",
        "process",
        "integration",
        "automation",
        "Review",
        "Board",
        "Gerrit",
        "need",
        "hour",
        "week",
        "approval",
        "meeting",
        "Resolved",
        "QA",
        "bugs",
        "end",
        "end",
        "role",
        "department",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "mail",
        "script",
        "code",
        "defects",
        "data",
        "component",
        "report",
        "defects",
        "codebase",
        "REST",
        "APIs",
        "information",
        "assets",
        "UI",
        "HTML5",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "Manage",
        "technician",
        "automation",
        "tasks",
        "operating",
        "scale",
        "systems",
        "AWS",
        "Development",
        "modules",
        "Angular",
        "JS",
        "HTML",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "Python",
        "Developer",
        "Google",
        "Mountain",
        "View",
        "CA",
        "December",
        "December",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Python",
        "NumPy",
        "matplotlib",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Used",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Parsers",
        "Python",
        "data",
        "design",
        "database",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Hardware",
        "installation",
        "patch",
        "panels",
        "fiber",
        "optic",
        "connectivity",
        "hubs",
        "cat5",
        "RJ45",
        "connectors",
        "Setup",
        "Windows",
        "clients",
        "PC",
        "kiosks",
        "hospital",
        "Windows",
        "XP",
        "workstations",
        "software",
        "configuration",
        "TCPIP",
        "network",
        "interface",
        "cards",
        "internet",
        "security",
        "acceleration",
        "network",
        "Microsoft",
        "ISA",
        "server",
        "test",
        "cases",
        "Data",
        "Layer",
        "Search",
        "server",
        "classes",
        "Django",
        "XML",
        "base",
        "services",
        "MongoDB",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "MongoDB",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "reports",
        "package",
        "NumPy",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "party",
        "jQuerybased",
        "plugins",
        "Data",
        "tables",
        "JavaScript",
        "Form",
        "Submit",
        "UI",
        "elements",
        "development",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "jQuery",
        "JavaScript",
        "manipulations",
        "service",
        "Python",
        "Flask",
        "framework",
        "Python",
        "Developer",
        "Dell",
        "Round",
        "Rock",
        "TX",
        "January",
        "November",
        "Responsibilities",
        "requirement",
        "gathering",
        "analysis",
        "phase",
        "project",
        "business",
        "requirements",
        "workshopsmeetings",
        "business",
        "users",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "Python",
        "application",
        "Google",
        "Analytics",
        "aggregation",
        "Worked",
        "Python",
        "stack",
        "APIs",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "machine",
        "learning",
        "schemes",
        "Python",
        "libraries",
        "sickielearn",
        "SciPy",
        "Experience",
        "MVC",
        "architecture",
        "Django",
        "application",
        "OOP",
        "concepts",
        "python",
        "packages",
        "Matplotlib",
        "cx",
        "Freeze",
        "Pillow",
        "NumPy",
        "sockets",
        "ETL",
        "Processing",
        "data",
        "transformation",
        "data",
        "Conversion",
        "loading",
        "design",
        "development",
        "Unix",
        "Shell",
        "Scripting",
        "part",
        "ETL",
        "Process",
        "process",
        "loading",
        "ETL",
        "tasks",
        "data",
        "servers",
        "results",
        "inclusion",
        "software",
        "product",
        "machine",
        "solutions",
        "Python",
        "millions",
        "Twitter",
        "users",
        "data",
        "product",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "form",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "time",
        "series",
        "data",
        "data",
        "manipulation",
        "Pandas",
        "library",
        "Analysis",
        "R",
        "Studio",
        "Automating",
        "Email",
        "Process",
        "files",
        "Perl",
        "Scripting",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "interface",
        "MVC",
        "architecture",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "pages",
        "JS",
        "jquery",
        "pages",
        "Interfacing",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Used",
        "Machine",
        "techniques",
        "Classification",
        "optimization",
        "prediction",
        "Python",
        "stack",
        "APIs",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "cloud",
        "computing",
        "platforms",
        "stack",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "project",
        "JIRA",
        "Agile",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Environment",
        "Python",
        "NET",
        "Query",
        "MVW",
        "HTML5",
        "Shell",
        "Scripting",
        "JSON",
        "Apache",
        "Web",
        "Server",
        "SQL",
        "UNIX",
        "Windows",
        "Python",
        "Python",
        "Developer",
        "Nationwide",
        "Insurance",
        "Group",
        "Columbus",
        "OH",
        "December",
        "Responsibilities",
        "Design",
        "test",
        "deploy",
        "maintenance",
        "website",
        "Teradata",
        "SQL",
        "Teradata",
        "Indexes",
        "Utilities",
        "Molad",
        "Trump",
        "load",
        "Fast",
        "Export",
        "Teradata",
        "OLAP",
        "functions",
        "RANK",
        "CSUM",
        "SAMPLE",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "PHP",
        "Python",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "Java",
        "modules",
        "format",
        "data",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "python",
        "validation",
        "JavaScript",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Test",
        "Automation",
        "Framework",
        "Selenium",
        "test",
        "automation",
        "process",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "troubleshooting",
        "web",
        "application",
        "Skills",
        "PHP",
        "Javascript",
        "Git",
        "HTML",
        "jQuery"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:06:18.916362",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Bank of America NY Work Experience Sr Python Developer Bank of America NY January 2017 to Present Responsibilities Designed views and templates with Python Djangos view controller and templating language to create a web interface Designed presentation part in JSP Dynamic content and HTML for static pages Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Design and develop ETL APIs which will automate the data mining in different database sources Deployed project into Amazon web services AWS using amazon elastic bean stalk Used TCPIP protocol to connect with server which has database available to connect for the ETL tool Developed tools using Python Shell scripting XML to automate some of the menial tasks Able to create scripts for system administration and AWS using languages such as BASH and Python Used JavaScript and JSON to update a portion of a webpage Handled potential points of failure through error handling and communication of failure Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Used on Djangos APIs to access database objects Used Awaits and Google Analytics to analyze web traffic Prepared test data files using Linux Shell scripts Perl script as per the business requirements Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Responsible for design of the backend request processing system and interface between CPO and Perl scripts from scratch Participated in the development of application architecture and blueprints to define application components platforms interfaces and development tools Created Python scripts to automate AWS services which includes web servers ELB Cloud Front distribution database EC2 and database security groups S3 bucket and application configuration Started developing with Django and currently developing with Django 10 Created entire application using Python Perl PostgreSQL and Linux Used Wire shark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Designed and developed the user interface of the project with HTML CSS and JavaScript Entire Front end and back end modules of the project are developed using Python with Django Framework Designed and developed the data management systems using MySQL databases Written Python Scripts to parse the XML documents and load the data in database Utilized the existing Python and Django modules and rewritten to deliver data in required formats Clientside validations and manipulations are done using JavaScript and jQuery Experienced in writing indexes views constraints stored procedures triggers cursors and user defined functions or subroutines in MySQL Responsible for Debugging and troubleshooting the application Utilized Subversion control tool to coordinate team work Used Selenium Libraries to write fully functioning test automation process Build highperformance streaming REST server in Flask Developed user interface using HTML CSS AJAX and JavaScript Worked on APIs deploying queries status codes requests to retrieve data in json format Worked on data exchange from website using xml java and web services Worked on python scripts to parse XML documents and load the data in database Coordinated with team members to improve quality assurance and mitigate risks Wrote stored procedures in MySQL Created a portable fully automated test tool allowing 247 integration support for two development sites around the world and decreasing code turnaround time from 4 hours to 1 hour Automated the daily and weekly build process to allow us to build daily builds twice a day for faster turnaround time for submitted code changes Automated the code release process bring the total time for code releases from 8 hours to 1 hour Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Built Web pages that are more userinteractive using AJAX JavaScript and ReactJS Implemented a review process in integration automation using Review Board and Gerrit that eliminated the need for a 5 hour per week daily approval meeting Resolved QA bugs for front end and back end Played a key role in a department wide transition from Subversion to Git which resulted in an increase in efficiency for the development community Developed a mail script that extracts code defects data per component for a daily report to drive reducing defects in the codebase Created modern REST APIs from existing information assets Designed the UI using HTML5 Angular JS JQuery and CSS Manage a technician that oversees automation and carries out daily tasks Deploying managing and operating scale highly available and fault tolerant systems to AWS Development of modules using Angular JS and HTML Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Python Developer Google Mountain View CA December 2015 to December 2016 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design database Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsoft ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used jQuery libraries for all clientside JavaScript manipulations Involved in developing a Restful service using Python Flask framework Python Developer Dell Round Rock TX January 2012 to November 2014 Responsibilities Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Worked with team of developers on Python applications for RISK management Developed Python application for Google Analytics aggregation and reporting Worked on Python Open stack APIs used Python scripts to update content in the database and manipulate files Implemented machine learning schemes using Python libraries sickielearn and SciPy Experience in MVC architecture using Django for webbased application in OOP concepts Worked on several python packages like Matplotlib cx_ Freeze Pillow NumPy sockets Worked on ETL Processing which consists of data transformation data sourcing and also mapping Conversion and loading Worked on design and development of Unix Shell Scripting as a part of the ETL Process to automate the process of loading Worked on ETL tasks like pulling pushing data from and too various servers Tested and evaluated results for inclusion into software product Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Pandas library for statistical Analysis using R Studio Automating Email Process Downloading and uploading the files through Perl Scripting Worked on front end frame works like CSS Bootstrap for development of Web application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Integrate the dynamic pages with Angular JS and jquery to make the pages dynamic Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Machine learning techniques like unsupervised Classification optimization and prediction Worked on Python open stack APIs Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Associated with working cloud computing platforms like open stack Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on development of SQL and stored procedures on MYSQL Engaged in Design Development Deployment Testing and Implementation Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python 27 NET Query MVW HTML5 Shell Scripting JSON Apache Web Server SQL UNIX Windows and Python libraries Python Developer Nationwide Insurance Group Columbus OH May 2010 to December 2011 Responsibilities Design develop test deploy and maintenance of the website Worked on Teradata SQL queries Teradata Indexes Utilities such as Molad Trump Fast load and Fast Export Used Teradata OLAP functions like RANK ROW_NUMBER QUALIFY CSUM and SAMPLE Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using PHP Python Designed and developed data management system using MySQL Rewrite existing Java modules to deliver certain format of data Wrote python scripts to parse XML documents and loaded the data in database Generated property list for every application dynamically using python Handled all the clientside validation using JavaScript Creating unit testregression test framework for existing code Created a Test Automation Framework with Selenium for test automation process Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting of web application Skills PHP Javascript Git HTML 5 jQuery",
    "unique_id": "d06297a4-de81-4f62-aefc-04c8bc99bdd6"
}