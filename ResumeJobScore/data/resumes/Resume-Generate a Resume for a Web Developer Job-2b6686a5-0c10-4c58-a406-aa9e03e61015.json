{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Sonikpass San Francisco CA Over 8 years of experience as a WebApplication Developer analytical programming software development and design using Python Django Experienced with Python Libraries Beautiful Soup NumPy Pandas data frame Matplotlib pythontwitter urllib2 Experience in developing webbased applications using Python 2730 Django PHP AngularJs Reactjs C XML CSS HTML JavaScript and jQuery Extensive experience in designing and implementing various web applications in WAMP Windows Apache MySQL PHP Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs WebStorm Intellij and Visual Studio Having good experience in MEAN Stack Mongo DB Expressjs Angularjs and Nodejs applications Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experience with Django and Flask a highlevel Python Web framework Experienced in MVC frameworks like Flask and Pyramid and MVT framework like django Experience in Implementation of MVC MVW architecture using Servlet Django and RESTful SOAP web service and SOAPUI Experience and understanding of React Redux life cycle with components and rendering to DOM Good experience in Shell Scripting UNIX commands Experience in developing applications in Linux Environments such as Red Hat CentOS Ubuntu Good Experience in Linux Bash scripting and following PEP Guidelines in Python Experience in working with Relational DB RDBMD like SQLite MYSQL Workbench PostgreSQL AURORA and NoSQL database MongoDB for database connectivity Experience in analyzing and handling large datasets using Oracle Relational database Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic Knowledge on JSON based REST Web services and Amazon Web services Basic knowledge on Rest API and JSON Parsing jQuery and Angular JS Experience in building frameworks in Python for Test Automation Hands on Machine Learning Experience and SAS experience Excellent Experience in Code Refactoring and Udeploy Solid ability to code in JavaScript Thorough knowledge in various frontend tools like HTML JavaScript XML jQuery and AJAX Experience in Bash Shell Scripting SQL and Java Full stack web development using Python Having Good Experience in Object Oriented Concepts with C and Python27 3x Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Experienced on Installation Integration and Configuration of third party tools Content Management System CODEIGNITER Zend Laravel Smarty Managing Amazon Web Services AWS infrastructure with automation and orchestration tools such as Chef Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Experienced in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups Code review Pert Chart Gant Chart Good Experience in error and exceptional handling Proven ability in working with Shell scripting for designing automation framework Knowledge of automation technology such as Chef Ansible and Puppet Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Developed and designed email marketing campaigns using HTML JavaScript and CSS Maintained customers relationship management databases MySQL PostgreSQL Unit testing for the entire code and fixing bugs in unit testing Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Authorized to work in the US for any employer Work Experience Python Developer Sonikpass San Francisco CA June 2017 to Present The Project is based on the bulk messaging services and Oauth module It provides secure auth and messaging services to all companies Also make Web iOS Application on Different Client Requirements and maintain that web applications Responsibilities Developed the application using agile methodology and Scrum method of project management Developed web applications in Django Frameworks model view control MVC architecture Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software methodology principles Different testing methodologies like unit testing Integration testing web application testing Worked very closely with designer tightly integrating Flash into the CMS with the use of FlashVars stored in the Django models Design and implement Provisioning Server 56 upgrade to Provisioning Server 61 Developed test scripts for automation with Selenium PythonDjango based web application Postgre SQL DB and integrations with 3rd party email messaging storage services Architected designed and implemented SAML and symmetric key based Single Sign On service provider systems Build development environment with JIRA Implemented multisite Enterprise SOA using Oracle SOA Suite and also worked in SOA architecture WebSphere Message broker for integration Also Created Angular JS controllers directives models for different modules of the application Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python Environment Python Django14 HTMLCSS MS SQL Server 2012 MySQL Script Eclipse GIT GitHub AWS Linux Shell Scripting Python Developer LPL San Diego CA February 2015 to June 2017 Description LPL is the financial Advisor My role is to develop a Web application for users for Retirement Plan Payments RPP to provide an automated web application for users to select modify and delete existing or new plans This also allows users to manage their investments online to get the best market rates instantly Responsibilities Worked in Agile development following Scrum process Sprint and daily standup meetings Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Worked on frontend and backend modules using Python on Django Web Framework Implemented and enhanced CRUD operations for the applications using the MVT Model View Template architecture of Django framework and Python conducting code reviews Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Created APIs database Model and Views Utilization Python to build responsive web page application Wrote Python modules to extractload asset data from the MySQL source database Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Used PyUnit the Python unit test framework for all Python applications Worked on Jenkins continuous integration tool for deployment of project Worked with product teams to improve documentation of Ansible development environments identified additional tests for Ansible roles that could be done via Test Kitchen Docker and Serverspec or GitLab CI Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Installed and maintained Jenkins for Continuous Delivery as well as automate Ansible Playbook runs against production infrastructure Participated in requirement gathering and worked closely with the architect in designing and modeling Developed tested and debugged software tools for clients and internal customers of the organization Coded test programs and evaluated existing engineering processes Search engine optimization by replacing existing database with MongoDB NoSQL Database Documented company Restful APIs using Swagger for internal and third part use and also worked on Unit testing and Integration testing Used Git for the version control Created a Git repository and added the project to GitHub Collaborated with internal teams and external teams to solve the issues and giving feedbacks Worked on objectoriented programming OOP concepts using Python Django and Linux Used JIRA for bug tracking and issue tracking Practical experience with working on multiple environments like development testing production Documented the problems and progress of project most accurately Environment Python Django HTML5CSS MySQL JavaScript Eclipse Linux Shell Scripting Ansible jQuery GitHub JIRA Python Developer Kinderd Health Louisville KY December 2012 to February 2015 Description Kinderd Health is a health care sector My role is to provide the user interface to the end user including the final look feel and behavior of the interface in different contexts along with building web applications using Django framework for implementing Dependency Injection and utilized features like MVT Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Interacted with the client endusers during requirements gathering sessions Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Implemented Business logic worked on data exchange processed XML and HTML using python 27 and its familiar framework Django Restful web services using Python REST API Framework Developed Application to access JSON and XML from Restful Webservices from consumer side using JavaScript and AngularJS Used AWS Cloud Watch to monitor and store logging information Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Responsible for handling the integration of database systems Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured pyBuilder for application builds and deploying it Upgraded internal and customer TLSSSL Apache Web Server configurations trained staff on proper implementations potential issuesconcerns and automated changes with Ansible Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text Atom PyCharm Jira GIT pybuilder unit test Firebug Web Services HTML5CSS XML JSON Ajax Python Developer Illumina CA September 2010 to December 2012 Description Web applications are developed to store and retrieve data by implementing HTML CSS Bootstrap JavaScript for user interface and Django ReactJs Python based packages are implemented Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Built Python scripts to identify and correct erroneous data in PostgreSQL database using clustering regression and statistics Used standard Python modules eg csv robot parser itertools pickle jinja2 lxml for development Worked extensively with Bootstrap JavaScript and jQuery to optimize the user experience Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed entire frontend and backend modules using PHP Python Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Rewrite existing Java modules to deliver certain format of data Handled all the clientside validation using JavaScript Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting of web application Design develop test deploy and maintenance of the website Environment Python 26 Django web framework Java MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server REST API Beautiful Soup Education Bachelors",
    "entities": [
        "jQuery Extensive",
        "Red Hat",
        "RPP",
        "Implementation of MVC MVW",
        "Content Management System CODEIGNITER Zend Laravel Smarty",
        "Test Driven Development TDD",
        "Nodejs",
        "Mesos Designed",
        "LAMP Linux",
        "Model and Views Utilization Python",
        "Amazon Web Services AWS",
        "PHP Python",
        "Louisville",
        "XML",
        "jQuery Created",
        "Chef Ansible",
        "Software Development Life Cycle Database",
        "Software Development Life Cycle SDLC",
        "Shell",
        "the Performance of Stored Procedures and Queries Installed",
        "Amazon",
        "Bootstrap Working",
        "WebSphere",
        "Python",
        "Python REST API Framework Developed Application",
        "Developed",
        "Oracle Relational",
        "Bash",
        "HTML JavaScript",
        "Agile Software",
        "MultiThreading",
        "Waterfall",
        "Object Oriented Concepts",
        "GitHub Collaborated",
        "Firebug Web Services",
        "Provisioning Server",
        "Description Kinderd Health",
        "Bash Involved",
        "SOA",
        "HTML CSS Bootstrap JavaScript",
        "Development and Enhancement Projects Experienced",
        "Responsibilities Created Python",
        "Flask",
        "Shell Scripting",
        "HTML CSS jQuery",
        "Created a Git",
        "Bash Shell Scripting",
        "SQLbased",
        "MVC",
        "Spark",
        "PythonDjango",
        "Agile",
        "SQL PHP",
        "PythonPerl",
        "GIT",
        "Python Spring Security Responsible",
        "Bugzilla Developed",
        "Workbench PostgreSQL AURORA",
        "IBM WebSphere Application Deployment",
        "Django Implemented Business",
        "UNIX Authorized",
        "US",
        "HTML CSS JavaScript",
        "Python for Test Automation Hands on Machine Learning",
        "MySQL PostgreSQL Unit",
        "Jenkins Docker Ansible",
        "WAMP Windows Apache",
        "Coded",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Restful Webservices",
        "HTML",
        "SAS",
        "PHP Developed Consumerbased",
        "Python Spring IOC Inversion",
        "Test Kitchen Docker",
        "Daily Standups Code",
        "lPythonspan",
        "Responsibilities Worked",
        "React Redux",
        "FlashVars",
        "WebApplication Developer",
        "Wrote",
        "Practical",
        "Relational DB RDBMD",
        "CRUD",
        "Application Server",
        "Oracle SOA Suite",
        "DOM Good",
        "Performed",
        "PEP Guidelines",
        "Firebug Used JIRA",
        "API Integration Created",
        "Single Sign",
        "JavaScript Using Subversion",
        "SDLC Requirement Analysis Design Development and Testing",
        "MVT Responsibilities Involved",
        "Description LPL",
        "CMS",
        "Bootstrap JavaScript",
        "jQuery",
        "REST",
        "CSS Maintained",
        "NoSQL",
        "HTMLCSSjQuery",
        "Sprint",
        "Integration",
        "Present The Project"
    ],
    "experience": "Experience in developing webbased applications using Python 2730 Django PHP AngularJs Reactjs C XML CSS HTML JavaScript and jQuery Extensive experience in designing and implementing various web applications in WAMP Windows Apache MySQL PHP Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs WebStorm Intellij and Visual Studio Having good experience in MEAN Stack Mongo DB Expressjs Angularjs and Nodejs applications Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experience with Django and Flask a highlevel Python Web framework Experienced in MVC frameworks like Flask and Pyramid and MVT framework like django Experience in Implementation of MVC MVW architecture using Servlet Django and RESTful SOAP web service and SOAPUI Experience and understanding of React Redux life cycle with components and rendering to DOM Good experience in Shell Scripting UNIX commands Experience in developing applications in Linux Environments such as Red Hat CentOS Ubuntu Good Experience in Linux Bash scripting and following PEP Guidelines in Python Experience in working with Relational DB RDBMD like SQLite MYSQL Workbench PostgreSQL AURORA and NoSQL database MongoDB for database connectivity Experience in analyzing and handling large datasets using Oracle Relational database Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic Knowledge on JSON based REST Web services and Amazon Web services Basic knowledge on Rest API and JSON Parsing jQuery and Angular JS Experience in building frameworks in Python for Test Automation Hands on Machine Learning Experience and SAS experience Excellent Experience in Code Refactoring and Udeploy Solid ability to code in JavaScript Thorough knowledge in various frontend tools like HTML JavaScript XML jQuery and AJAX Experience in Bash Shell Scripting SQL and Java Full stack web development using Python Having Good Experience in Object Oriented Concepts with C and Python27 3x Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Experienced on Installation Integration and Configuration of third party tools Content Management System CODEIGNITER Zend Laravel Smarty Managing Amazon Web Services AWS infrastructure with automation and orchestration tools such as Chef Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Experienced in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups Code review Pert Chart Gant Chart Good Experience in error and exceptional handling Proven ability in working with Shell scripting for designing automation framework Knowledge of automation technology such as Chef Ansible and Puppet Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Developed and designed email marketing campaigns using HTML JavaScript and CSS Maintained customers relationship management databases MySQL PostgreSQL Unit testing for the entire code and fixing bugs in unit testing Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Authorized to work in the US for any employer Work Experience Python Developer Sonikpass San Francisco CA June 2017 to Present The Project is based on the bulk messaging services and Oauth module It provides secure auth and messaging services to all companies Also make Web iOS Application on Different Client Requirements and maintain that web applications Responsibilities Developed the application using agile methodology and Scrum method of project management Developed web applications in Django Frameworks model view control MVC architecture Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software methodology principles Different testing methodologies like unit testing Integration testing web application testing Worked very closely with designer tightly integrating Flash into the CMS with the use of FlashVars stored in the Django models Design and implement Provisioning Server 56 upgrade to Provisioning Server 61 Developed test scripts for automation with Selenium PythonDjango based web application Postgre SQL DB and integrations with 3rd party email messaging storage services Architected designed and implemented SAML and symmetric key based Single Sign On service provider systems Build development environment with JIRA Implemented multisite Enterprise SOA using Oracle SOA Suite and also worked in SOA architecture WebSphere Message broker for integration Also Created Angular JS controllers directives models for different modules of the application Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python Environment Python Django14 HTMLCSS MS SQL Server 2012 MySQL Script Eclipse GIT GitHub AWS Linux Shell Scripting Python Developer LPL San Diego CA February 2015 to June 2017 Description LPL is the financial Advisor My role is to develop a Web application for users for Retirement Plan Payments RPP to provide an automated web application for users to select modify and delete existing or new plans This also allows users to manage their investments online to get the best market rates instantly Responsibilities Worked in Agile development following Scrum process Sprint and daily standup meetings Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Worked on frontend and backend modules using Python on Django Web Framework Implemented and enhanced CRUD operations for the applications using the MVT Model View Template architecture of Django framework and Python conducting code reviews Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Created APIs database Model and Views Utilization Python to build responsive web page application Wrote Python modules to extractload asset data from the MySQL source database Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Used PyUnit the Python unit test framework for all Python applications Worked on Jenkins continuous integration tool for deployment of project Worked with product teams to improve documentation of Ansible development environments identified additional tests for Ansible roles that could be done via Test Kitchen Docker and Serverspec or GitLab CI Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Installed and maintained Jenkins for Continuous Delivery as well as automate Ansible Playbook runs against production infrastructure Participated in requirement gathering and worked closely with the architect in designing and modeling Developed tested and debugged software tools for clients and internal customers of the organization Coded test programs and evaluated existing engineering processes Search engine optimization by replacing existing database with MongoDB NoSQL Database Documented company Restful APIs using Swagger for internal and third part use and also worked on Unit testing and Integration testing Used Git for the version control Created a Git repository and added the project to GitHub Collaborated with internal teams and external teams to solve the issues and giving feedbacks Worked on objectoriented programming OOP concepts using Python Django and Linux Used JIRA for bug tracking and issue tracking Practical experience with working on multiple environments like development testing production Documented the problems and progress of project most accurately Environment Python Django HTML5CSS MySQL JavaScript Eclipse Linux Shell Scripting Ansible jQuery GitHub JIRA Python Developer Kinderd Health Louisville KY December 2012 to February 2015 Description Kinderd Health is a health care sector My role is to provide the user interface to the end user including the final look feel and behavior of the interface in different contexts along with building web applications using Django framework for implementing Dependency Injection and utilized features like MVT Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Interacted with the client endusers during requirements gathering sessions Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Implemented Business logic worked on data exchange processed XML and HTML using python 27 and its familiar framework Django Restful web services using Python REST API Framework Developed Application to access JSON and XML from Restful Webservices from consumer side using JavaScript and AngularJS Used AWS Cloud Watch to monitor and store logging information Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Responsible for handling the integration of database systems Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured pyBuilder for application builds and deploying it Upgraded internal and customer TLSSSL Apache Web Server configurations trained staff on proper implementations potential issuesconcerns and automated changes with Ansible Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text Atom PyCharm Jira GIT pybuilder unit test Firebug Web Services HTML5CSS XML JSON Ajax Python Developer Illumina CA September 2010 to December 2012 Description Web applications are developed to store and retrieve data by implementing HTML CSS Bootstrap JavaScript for user interface and Django ReactJs Python based packages are implemented Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Built Python scripts to identify and correct erroneous data in PostgreSQL database using clustering regression and statistics Used standard Python modules eg csv robot parser itertools pickle jinja2 lxml for development Worked extensively with Bootstrap JavaScript and jQuery to optimize the user experience Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed entire frontend and backend modules using PHP Python Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Rewrite existing Java modules to deliver certain format of data Handled all the clientside validation using JavaScript Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting of web application Design develop test deploy and maintenance of the website Environment Python 26 Django web framework Java MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server REST API Beautiful Soup Education Bachelors",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Sonikpass",
        "San",
        "Francisco",
        "CA",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "software",
        "development",
        "design",
        "Python",
        "Django",
        "Python",
        "Libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "Pandas",
        "data",
        "frame",
        "Matplotlib",
        "pythontwitter",
        "urllib2",
        "Experience",
        "applications",
        "Python",
        "Django",
        "PHP",
        "AngularJs",
        "Reactjs",
        "C",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "experience",
        "web",
        "applications",
        "WAMP",
        "Windows",
        "Apache",
        "MySQL",
        "PHP",
        "Consumerbased",
        "custom",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "IDEs",
        "Jupiter",
        "Notebook",
        "PyCharm",
        "Emacs",
        "WebStorm",
        "Intellij",
        "Visual",
        "Studio",
        "experience",
        "MEAN",
        "Stack",
        "Mongo",
        "DB",
        "Expressjs",
        "Angularjs",
        "Nodejs",
        "experience",
        "web",
        "applications",
        "LAMP",
        "Linux",
        "Apache",
        "MY",
        "SQL",
        "PHP",
        "Environments",
        "python",
        "automation",
        "CI",
        "pipelines",
        "Docker",
        "provisioningautomation",
        "Experience",
        "Django",
        "Flask",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "MVC",
        "frameworks",
        "Flask",
        "Pyramid",
        "MVT",
        "framework",
        "django",
        "Experience",
        "Implementation",
        "MVC",
        "MVW",
        "architecture",
        "Servlet",
        "Django",
        "SOAP",
        "web",
        "service",
        "SOAPUI",
        "Experience",
        "understanding",
        "React",
        "Redux",
        "life",
        "cycle",
        "components",
        "DOM",
        "experience",
        "Shell",
        "Scripting",
        "UNIX",
        "Experience",
        "applications",
        "Linux",
        "Environments",
        "Red",
        "Hat",
        "CentOS",
        "Ubuntu",
        "Good",
        "Experience",
        "Linux",
        "Bash",
        "PEP",
        "Guidelines",
        "Python",
        "Experience",
        "Relational",
        "DB",
        "RDBMD",
        "SQLite",
        "MYSQL",
        "Workbench",
        "PostgreSQL",
        "AURORA",
        "NoSQL",
        "database",
        "MongoDB",
        "database",
        "connectivity",
        "Experience",
        "datasets",
        "Oracle",
        "Relational",
        "database",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "Basic",
        "Knowledge",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "knowledge",
        "Rest",
        "API",
        "JSON",
        "jQuery",
        "Angular",
        "JS",
        "Experience",
        "frameworks",
        "Python",
        "Test",
        "Automation",
        "Hands",
        "Machine",
        "Learning",
        "Experience",
        "SAS",
        "experience",
        "Excellent",
        "Experience",
        "Code",
        "Refactoring",
        "Udeploy",
        "ability",
        "JavaScript",
        "Thorough",
        "knowledge",
        "frontend",
        "tools",
        "HTML",
        "JavaScript",
        "XML",
        "jQuery",
        "AJAX",
        "Experience",
        "Bash",
        "Shell",
        "Scripting",
        "SQL",
        "Java",
        "Full",
        "stack",
        "web",
        "development",
        "Python",
        "Good",
        "Experience",
        "Object",
        "Oriented",
        "Concepts",
        "C",
        "Python27",
        "experience",
        "PythonPerl",
        "phases",
        "data",
        "processing",
        "pipeline",
        "Installation",
        "Integration",
        "Configuration",
        "party",
        "tools",
        "Content",
        "Management",
        "System",
        "CODEIGNITER",
        "Zend",
        "Laravel",
        "Smarty",
        "Managing",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "orchestration",
        "tools",
        "Chef",
        "knowledge",
        "IBM",
        "WebSphere",
        "Application",
        "Deployment",
        "maintenance",
        "application",
        "Application",
        "Server",
        "clusters",
        "concept",
        "IBM",
        "Tivoli",
        "Monitoring",
        "knowledge",
        "phases",
        "SDLC",
        "Requirement",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Development",
        "Enhancement",
        "Projects",
        "Agile",
        "Methodologies",
        "SCRUM",
        "process",
        "Sprint",
        "planning",
        "backlog",
        "Daily",
        "Standups",
        "Code",
        "review",
        "Pert",
        "Chart",
        "Gant",
        "Chart",
        "Good",
        "Experience",
        "error",
        "ability",
        "Shell",
        "scripting",
        "automation",
        "framework",
        "Knowledge",
        "automation",
        "technology",
        "Chef",
        "Ansible",
        "Puppet",
        "Experience",
        "test",
        "plans",
        "test",
        "cases",
        "specifications",
        "test",
        "coverage",
        "Familiar",
        "Agile",
        "Waterfall",
        "development",
        "methodologies",
        "Agile",
        "Methodologies",
        "Scrum",
        "standup",
        "meetings",
        "servers",
        "Active",
        "Directory",
        "maintenance",
        "Hands",
        "experience",
        "bug",
        "tracking",
        "tools",
        "JIRA",
        "Bugzilla",
        "Developed",
        "email",
        "marketing",
        "campaigns",
        "HTML",
        "JavaScript",
        "CSS",
        "customers",
        "relationship",
        "management",
        "MySQL",
        "PostgreSQL",
        "Unit",
        "testing",
        "code",
        "bugs",
        "unit",
        "testing",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "operating",
        "systems",
        "Windows",
        "Ubuntu",
        "Linux",
        "UNIX",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Sonikpass",
        "San",
        "Francisco",
        "CA",
        "June",
        "Present",
        "Project",
        "services",
        "Oauth",
        "module",
        "auth",
        "services",
        "companies",
        "Web",
        "Application",
        "Different",
        "Client",
        "Requirements",
        "web",
        "applications",
        "Responsibilities",
        "application",
        "methodology",
        "Scrum",
        "method",
        "project",
        "management",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "designer",
        "Flash",
        "CMS",
        "use",
        "FlashVars",
        "Django",
        "Design",
        "Provisioning",
        "Server",
        "upgrade",
        "Provisioning",
        "Server",
        "test",
        "scripts",
        "automation",
        "Selenium",
        "PythonDjango",
        "web",
        "application",
        "Postgre",
        "SQL",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "SAML",
        "key",
        "Single",
        "Sign",
        "service",
        "provider",
        "systems",
        "Build",
        "development",
        "environment",
        "JIRA",
        "multisite",
        "Enterprise",
        "SOA",
        "Oracle",
        "SOA",
        "Suite",
        "SOA",
        "architecture",
        "WebSphere",
        "Message",
        "broker",
        "integration",
        "JS",
        "directives",
        "models",
        "modules",
        "application",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Python",
        "Environment",
        "Python",
        "Django14",
        "HTMLCSS",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "Script",
        "Eclipse",
        "GIT",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "LPL",
        "San",
        "Diego",
        "CA",
        "February",
        "June",
        "Description",
        "LPL",
        "Advisor",
        "role",
        "Web",
        "application",
        "users",
        "Retirement",
        "Plan",
        "Payments",
        "RPP",
        "web",
        "application",
        "users",
        "plans",
        "users",
        "investments",
        "market",
        "rates",
        "Responsibilities",
        "development",
        "Scrum",
        "process",
        "Sprint",
        "standup",
        "meetings",
        "Views",
        "Templates",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "CRUD",
        "operations",
        "applications",
        "MVT",
        "Model",
        "View",
        "Template",
        "architecture",
        "Django",
        "framework",
        "Python",
        "code",
        "reviews",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "APIs",
        "database",
        "Model",
        "Views",
        "Utilization",
        "Python",
        "web",
        "page",
        "application",
        "Wrote",
        "Python",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "GitHub",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "Mesos",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "product",
        "teams",
        "documentation",
        "development",
        "environments",
        "tests",
        "roles",
        "Test",
        "Kitchen",
        "Docker",
        "Serverspec",
        "GitLab",
        "CI",
        "integration",
        "deployments",
        "Jenkins",
        "Docker",
        "Ansible",
        "AWS",
        "Cloud",
        "Templates",
        "Jenkins",
        "Continuous",
        "Delivery",
        "Ansible",
        "Playbook",
        "production",
        "infrastructure",
        "requirement",
        "gathering",
        "architect",
        "Developed",
        "software",
        "tools",
        "clients",
        "customers",
        "organization",
        "test",
        "programs",
        "engineering",
        "processes",
        "Search",
        "engine",
        "optimization",
        "database",
        "MongoDB",
        "NoSQL",
        "Database",
        "company",
        "APIs",
        "Swagger",
        "part",
        "use",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Git",
        "version",
        "control",
        "Git",
        "repository",
        "project",
        "GitHub",
        "Collaborated",
        "teams",
        "teams",
        "issues",
        "feedbacks",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Django",
        "Linux",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "experience",
        "environments",
        "development",
        "testing",
        "production",
        "problems",
        "progress",
        "project",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "MySQL",
        "JavaScript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "Ansible",
        "jQuery",
        "GitHub",
        "JIRA",
        "Python",
        "Developer",
        "Kinderd",
        "Health",
        "Louisville",
        "KY",
        "December",
        "February",
        "Description",
        "Kinderd",
        "Health",
        "health",
        "care",
        "sector",
        "role",
        "user",
        "interface",
        "end",
        "user",
        "look",
        "behavior",
        "interface",
        "contexts",
        "building",
        "web",
        "applications",
        "Django",
        "framework",
        "Dependency",
        "Injection",
        "features",
        "MVT",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "client",
        "endusers",
        "requirements",
        "sessions",
        "UI",
        "HTML",
        "CSS",
        "jQuery",
        "Bootstrap",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "HTML",
        "python",
        "framework",
        "Django",
        "Restful",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "Developed",
        "Application",
        "XML",
        "Restful",
        "Webservices",
        "consumer",
        "side",
        "JavaScript",
        "AWS",
        "Cloud",
        "information",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "Responsible",
        "integration",
        "database",
        "systems",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Performance",
        "tuning",
        "Performance",
        "Stored",
        "Procedures",
        "Queries",
        "Installed",
        "pyBuilder",
        "application",
        "builds",
        "customer",
        "TLSSSL",
        "Apache",
        "Web",
        "Server",
        "configurations",
        "staff",
        "implementations",
        "issuesconcerns",
        "changes",
        "Ansible",
        "Responsible",
        "web",
        "application",
        "programming",
        "company",
        "product",
        "management",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "AWS",
        "HTML",
        "CSS",
        "MySQL",
        "JavaScript",
        "jQuery",
        "Sublime",
        "Text",
        "Atom",
        "PyCharm",
        "Jira",
        "GIT",
        "pybuilder",
        "unit",
        "test",
        "Firebug",
        "Web",
        "Services",
        "HTML5CSS",
        "XML",
        "Python",
        "Developer",
        "Illumina",
        "CA",
        "September",
        "December",
        "Description",
        "Web",
        "applications",
        "data",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "user",
        "interface",
        "Django",
        "ReactJs",
        "Python",
        "packages",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Python",
        "scripts",
        "data",
        "PostgreSQL",
        "database",
        "clustering",
        "regression",
        "statistics",
        "Python",
        "modules",
        "eg",
        "csv",
        "robot",
        "parser",
        "itertools",
        "pickle",
        "jinja2",
        "lxml",
        "development",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "user",
        "experience",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "frontend",
        "modules",
        "PHP",
        "Python",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Rewrite",
        "Java",
        "modules",
        "format",
        "data",
        "validation",
        "JavaScript",
        "Using",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "troubleshooting",
        "web",
        "application",
        "Design",
        "test",
        "deploy",
        "maintenance",
        "website",
        "Environment",
        "Python",
        "Django",
        "web",
        "framework",
        "Java",
        "MySQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "REST",
        "API",
        "Beautiful",
        "Soup",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:58:49.172442",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Sonikpass San Francisco CA Over 8 years of experience as a WebApplication Developer analytical programming software development and design using Python Django Experienced with Python Libraries Beautiful Soup NumPy Pandas data frame Matplotlib pythontwitter urllib2 Experience in developing webbased applications using Python 2730 Django PHP AngularJs Reactjs C XML CSS HTML JavaScript and jQuery Extensive experience in designing and implementing various web applications in WAMP Windows Apache MySQL PHP Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs WebStorm Intellij and Visual Studio Having good experience in MEAN Stack Mongo DB Expressjs Angularjs and Nodejs applications Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experience with Django and Flask a highlevel Python Web framework Experienced in MVC frameworks like Flask and Pyramid and MVT framework like django Experience in Implementation of MVC MVW architecture using Servlet Django and RESTful SOAP web service and SOAPUI Experience and understanding of React Redux life cycle with components and rendering to DOM Good experience in Shell Scripting UNIX commands Experience in developing applications in Linux Environments such as Red Hat CentOS Ubuntu Good Experience in Linux Bash scripting and following PEP Guidelines in Python Experience in working with Relational DB RDBMD like SQLite MYSQL Workbench PostgreSQL AURORA and NoSQL database MongoDB for database connectivity Experience in analyzing and handling large datasets using Oracle Relational database Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic Knowledge on JSON based REST Web services and Amazon Web services Basic knowledge on Rest API and JSON Parsing jQuery and Angular JS Experience in building frameworks in Python for Test Automation Hands on Machine Learning Experience and SAS experience Excellent Experience in Code Refactoring and Udeploy Solid ability to code in JavaScript Thorough knowledge in various frontend tools like HTML JavaScript XML jQuery and AJAX Experience in Bash Shell Scripting SQL and Java Full stack web development using Python Having Good Experience in Object Oriented Concepts with C and Python27 3x Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Experienced on Installation Integration and Configuration of third party tools Content Management System CODEIGNITER Zend Laravel Smarty Managing Amazon Web Services AWS infrastructure with automation and orchestration tools such as Chef Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Experienced in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups Code review Pert Chart Gant Chart Good Experience in error and exceptional handling Proven ability in working with Shell scripting for designing automation framework Knowledge of automation technology such as Chef Ansible and Puppet Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Developed and designed email marketing campaigns using HTML JavaScript and CSS Maintained customers relationship management databases MySQL PostgreSQL Unit testing for the entire code and fixing bugs in unit testing Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Authorized to work in the US for any employer Work Experience Python Developer Sonikpass San Francisco CA June 2017 to Present The Project is based on the bulk messaging services and Oauth module It provides secure auth and messaging services to all companies Also make Web iOS Application on Different Client Requirements and maintain that web applications Responsibilities Developed the application using agile methodology and Scrum method of project management Developed web applications in Django Frameworks model view control MVC architecture Exposure on MultiThreading factory to distribute learning process backtesting and into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software methodology principles Different testing methodologies like unit testing Integration testing web application testing Worked very closely with designer tightly integrating Flash into the CMS with the use of FlashVars stored in the Django models Design and implement Provisioning Server 56 upgrade to Provisioning Server 61 Developed test scripts for automation with Selenium PythonDjango based web application Postgre SQL DB and integrations with 3rd party email messaging storage services Architected designed and implemented SAML and symmetric key based Single Sign On service provider systems Build development environment with JIRA Implemented multisite Enterprise SOA using Oracle SOA Suite and also worked in SOA architecture WebSphere Message broker for integration Also Created Angular JS controllers directives models for different modules of the application Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python Environment Python Django14 HTMLCSS MS SQL Server 2012 MySQL Script Eclipse GIT GitHub AWS Linux Shell Scripting Python Developer LPL San Diego CA February 2015 to June 2017 Description LPL is the financial Advisor My role is to develop a Web application for users for Retirement Plan Payments RPP to provide an automated web application for users to select modify and delete existing or new plans This also allows users to manage their investments online to get the best market rates instantly Responsibilities Worked in Agile development following Scrum process Sprint and daily standup meetings Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Worked on frontend and backend modules using Python on Django Web Framework Implemented and enhanced CRUD operations for the applications using the MVT Model View Template architecture of Django framework and Python conducting code reviews Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Created APIs database Model and Views Utilization Python to build responsive web page application Wrote Python modules to extractload asset data from the MySQL source database Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Used PyUnit the Python unit test framework for all Python applications Worked on Jenkins continuous integration tool for deployment of project Worked with product teams to improve documentation of Ansible development environments identified additional tests for Ansible roles that could be done via Test Kitchen Docker and Serverspec or GitLab CI Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Installed and maintained Jenkins for Continuous Delivery as well as automate Ansible Playbook runs against production infrastructure Participated in requirement gathering and worked closely with the architect in designing and modeling Developed tested and debugged software tools for clients and internal customers of the organization Coded test programs and evaluated existing engineering processes Search engine optimization by replacing existing database with MongoDB NoSQL Database Documented company Restful APIs using Swagger for internal and third part use and also worked on Unit testing and Integration testing Used Git for the version control Created a Git repository and added the project to GitHub Collaborated with internal teams and external teams to solve the issues and giving feedbacks Worked on objectoriented programming OOP concepts using Python Django and Linux Used JIRA for bug tracking and issue tracking Practical experience with working on multiple environments like development testing production Documented the problems and progress of project most accurately Environment Python Django HTML5CSS MySQL JavaScript Eclipse Linux Shell Scripting Ansible jQuery GitHub JIRA Python Developer Kinderd Health Louisville KY December 2012 to February 2015 Description Kinderd Health is a health care sector My role is to provide the user interface to the end user including the final look feel and behavior of the interface in different contexts along with building web applications using Django framework for implementing Dependency Injection and utilized features like MVT Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Interacted with the client endusers during requirements gathering sessions Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Implemented Business logic worked on data exchange processed XML and HTML using python 27 and its familiar framework Django Restful web services using Python REST API Framework Developed Application to access JSON and XML from Restful Webservices from consumer side using JavaScript and AngularJS Used AWS Cloud Watch to monitor and store logging information Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Responsible for handling the integration of database systems Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured pyBuilder for application builds and deploying it Upgraded internal and customer TLSSSL Apache Web Server configurations trained staff on proper implementations potential issuesconcerns and automated changes with Ansible Responsible for debugging and troubleshooting the web application Developed objectoriented programming to enhance company product management Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Environment Python Django Web Framework AWS HTML CSS MySQL JavaScript jQuery Sublime Text Atom PyCharm Jira GIT pybuilder unit test Firebug Web Services HTML5CSS XML JSON Ajax Python Developer Illumina CA September 2010 to December 2012 Description Web applications are developed to store and retrieve data by implementing HTML CSS Bootstrap JavaScript for user interface and Django ReactJs Python based packages are implemented Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Built Python scripts to identify and correct erroneous data in PostgreSQL database using clustering regression and statistics Used standard Python modules eg csv robot parser itertools pickle jinja2 lxml for development Worked extensively with Bootstrap JavaScript and jQuery to optimize the user experience Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed entire frontend and backend modules using PHP Python Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Rewrite existing Java modules to deliver certain format of data Handled all the clientside validation using JavaScript Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting of web application Design develop test deploy and maintenance of the website Environment Python 26 Django web framework Java MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server REST API Beautiful Soup Education Bachelors",
    "unique_id": "2b6686a5-0c10-4c58-a406-aa9e03e61015"
}