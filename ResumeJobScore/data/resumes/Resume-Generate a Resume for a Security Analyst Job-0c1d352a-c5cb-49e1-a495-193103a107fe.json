{
    "clean_data": "Java Developer Java span lDeveloperspan Java Developer CenturyLink Corporate Headquarters Monroe LA Java Developer having around 7 years of experience in Application Analysis Design Development Integration Deployment and Maintenance Standalone and ClientServer based Software Applications Strong experience in User Interface development using web technologies like HTML5 CSS3SAASLESS BOOTSTRAP JAVASCRIPT JQUERY AJAX Good understanding of JavaScript ES6 arrow functions blockscoped constructs template literals promises multiline strings and ES7 async functions Observables Object RestSpread Properties Expertise in analyzing and debugging the DOM Layout JavaScript functions Cascading Styles across crossbrowser using chrome inspector and other developer tools Experience in applying the latest software development approaches including MVC MVVM event driven applications using AJAX Object Oriented OO JavaScript JSON Experience in using Web Services RESTFUL web services Proficient in Object Oriented DesignDevelopment OOD Object Oriented Analysis and Design OOAD Model View Control MVC design pattern and TestDrivenDevelopment TDD Expertise in using Node JS with Express JS or Hapi JS which provides a robust set of features for web and mobile applications Expertise in using Java script build tools like Grunt Gulp and Bower as an automation tools for performing repetitive tasks in unit testing Experienced in all phases of usability testing including user profiles and personals task analysis contextual research test moderation and reporting using Mocha and Chai for Node JS Experience with Core Java Multithreading Transaction Management Exception Handling Concurrency Collections Data structures Lambda Expressions Functional Interfaces and JDBC Strong experience in Microservice SOA architecture and Cloud Native application design development testing and deployment of webbased and Enterprise ClientServer business applications using OOP JavaJ2EE technologies Expertise in developing SOA Service Oriented Architecture and Microservices architecture using J2EE Web Services based on Restful JAXRS SOAP JAXWS JAXRPC and JAXR Java API for XML Registries using frameworks like Apache CXF Jersey Axis and Spring framework NodeJS Express JS Hapi JS Solid experience in using the Spring AOP facets Transactional Management Logging Security and Authentication Expertise in using Spring Boot to create standalone applications and for building web service and created dynamic documentation for RESTful webservice using Swagger API using Spring Boot Used Spring Boot which is radically faster in building cloud Micro services and develop Spring based application with very less configuration Implemented Spring Boot Actuator to monitor and manage the application Implemented microservices using RESTful API with Spring Boot and Apache CFX Integrated micro services with Hibernate ORM using Spring Boot and wrote HQL queries for data access Strong experience in Spring Framework modules such as Spring MVC Spring IOC AOP and Spring JDBC Spring Data Spring REST Spring JTA Spring IO Spring Security Spring Boot Extensive experience in developing scalable reliable efficient web and enterprise applications using frameworks like JSP EJB Java Persistence API JNDI JMS Struts JSF Prime Faces and Spring Community framework projects Experience in understanding and using NoSQL databases like Mongo DB Apache Cassandra DynamoDB Couch DB and Redis Good knowledge on working with Relational database ORM frameworks like Hibernate JPA Spring Data Ibatis and NoSQL ORM frameworks like Mongoose connector Cassandra Node Driver Better understanding of implementation using Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Expertise in using Hystrix circuit breaker library for lowering network latency and fault tolerance and Zuul gateway for routing monitoring security Experience in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and Apache Camel to integrate the enterprise application technologies with existing JVM environment Building realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite Hands on experience in implementation of PCF Pivotal Cloud Foundry PAAS Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Well experienced in using various AWS Amazon Web Services IAAS Infrastructure As a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Used Kubernetes Linux container for deploying and scaling containerized applications Implemented Docker container service build pipe line Jenkins Bamboo and GoCD for Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Good experience using Docker for installing upgrading testing removing and running software applications Good understanding of OpenShift platform in managing Docker containers and Kubernetes Clusters Good experience on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Well experienced with build tools like Gradle Maven and ANT Good practical experience with Javabased logging utility ie log4J Unit tested web services using Junit Mockito Easy mock Spring Junit Runner Test NG and hence achieved the goals of Test Driven Development TDD Work Experience Java Developer CenturyLink Corporate Headquarters Monroe LA July 2018 to Present Description Serves as a technical team member in the planning designing developing implementing andor supporting complex to moderately complex new or revised processes systems or networks Ensures functional and technical designs support customer requirements Develops an understanding of the Auto Club Group business strategy and competitive environment and translate and implements business strategies into technology solutions My role is to assist in development of various applications and maintain quality for same and perform trouble shot to resolve all application issues Responsibilities The application is developed on Micro Service Oriented Architecture using Spring Boot and Node JS Cassandra and MySQL to integrate and communicate with the already existing applications Implemented the associated business modules integration using Spring Boot and Oracle Cassandra Used Spring Dependency Injection annotations and Spring MVC components to implement business layer and navigation part of application Developed several RESTful API web services which produces both XML and JSON to perform tasks leveraged by both web and mobile applications Documented the REST APIs using Swagger2 API for briefing the services involved in the application Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernate second level EH Cache Used Redis for caching and Elastic Search which resulted in enhanced performance of the application Implemented Rabbit MQ Services for reliable and asynchronous exchange of important information such as payment status report Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Developed data transformer for converting legacy data from Source tables to Avro format and fed into Kafka using Camel to process the file for multiple routes to different host locations Implemented Spring Netflix Zuul API gateway and Eureka service registry for reverse proxy and Dynamic service discovery of APIs Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for social websites logins using Spring Social module Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code Pipeline and Amazon ECS Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Created AWS Lambda functions for AWS config rules using Nodejs Heavily used Lambda function on text object methods Context object properties using Nodejs Developed Unit test cases using Junit Cucumber for Spring Used MOCKITO to mock interfaces so that a dummy functionality can be added to a mock interface that can be used in Unit testing Responsible for developing GUI user interfaces using JSP CSS HTML part of view development for the new enhancements or new modules Also carried out validations of user requests using JavaScript Designing and implementing the User Interface using HTML CSSCSS3 SASS and Bootstrap for responsive design for the exposed enterprise application Involved in the development of presentation layer and GUI responsive development using JSP HTML5 CSSCSS3 Bootstrap Used Spring Data JPA as the ORM framework to connect with MYSQL database and Cassandra data node to connect with Cassandra database and Verified data integrity on Cassandra cluster while batch loading Implemented GraphQL server using Relay framework that allows us to query the multiple RESTful API backends asynchronously without having to write promise logic that avoids cumbersome call backs Used various jQuery and Bootstrap plugin like date picker Bootstrap selectors for responsive designing in usage of different devices Created a new cluster and container management tool using Kubernetes for Zero downtime Deployment Used Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application in the cloud Experience in Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Environment HTML5 CSS 3 JavaScript AWS S3 NPM Gulp Expressjs RESTful Web Services Web Pack Babel Spring Boot Jersey Micro Services Rest Services AWS Node JS GitHub JIRA Jenkins Swagger Netflix OSS Eureka ribbon Zuul Api gateway hystrix circuit breaker docker Java Developer CGI Lafayette LA December 2017 to June 2018 Description Develop applications and components based on using a Java technology stack and develop high quality service oriented architecture and microservices Implement new features in a collaborative team environment with product managers UIUX designers business analyst and testers Proactively recommend new product features to improve quality performance and the user experience Ensures that software meets or exceed specified standards and enduser requirements Responsibilities Developed the frontend featuring rich web interface implemented using HTML CSS3 and Bootstrap for responsive design Implement the MERN web application using technologies MongoDB Hapi JS Node JS along with HTML5 CSS3 JavaScript jQuery Bootstrap and other web technologies Closely worked with Application using Nodejs libraries NPM gulp directories to generate desired view Used Node JS along with Hapi JS to achieve reusability and gain centralized logic and Implemented generating the verification hash code using crypto package on Node JS and added user validations and user permissions by using Node JS Worked with Node JS framework including authoring complex directives services controllers and filters Developed readable and writable streams of Node JS to process the data from external means of the application Configured Hapi JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Migrating existing application into REST based Microservices to provide all the CRUD capabilities using Spring Boot Worked with Microservice architecture using Spring Boot to modularized code and deployed microservices using Spring Boot to get range of nonfunctional features and used Spring Rest to create rest producers and rest Clients using Spring RestTemplate Involved in webservices design and development Responsible for creating and consuming web services using REST and XML Worked in integrating JMS with SPRING BOOT by providing an instance which is embed with Active MQ Designed and developed RESTFUL web services using Spring Boot and Jersey framework Used Swagger specification for documenting REST APIs which exposes description of a RESTFUL web services to different clients Implemented the function to send and receive AMQP messages on RabbitMQ synchronously asynchronously and send JMS message on the edge device Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Worked on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Authenticating Users and to provide the security to RESTful web services using JSON Web Tokenizer Responsible for migrating existing modules in IBM MQ to Apache Kafka and worked on creating Kafka adaptors for decoupling the application dependency Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch upon MongoDB for analytics and visualization of the users login Created a new cluster and container management tool using Kubernetes for Zero downtime Deployment and Created instances for AWS EC2 and created AWS s3 buckets to monitor the access to the hosted files Used Amazon Web Services AWS for promoting code in various Environments Deployed EC2 instances provisioning on AWS environment and implemented security groups administered Amazon VPCs Implemented Spring Cloud Netflix ZUUL to building microservices to communicate with each other Implemented Netflix OSSOpen Source Software for Feasible changes after the deployment Used JIRA as the bug tracking system to track and maintain the history of bugsissues on everyday basis and used Log4js for automated logging of error messages Automated different Unit Test Cases using Jasmine and Karma Testing Frameworks on Angular Involved in creating unit testing of various layers using JUnit with Easy Mock and created automated test scripts for integration testing using Selenium Environment Cassandra DB MySQL DB HTML CSS3 Typescript Redux NPM Spring Docker Jenkins REST Spring Boot Jersey Mocha Chai AWS RabbitMQ JIRA Junit Mockito Java Developer American Automobile Association Lake Mary FL April 2016 to November 2017 Description American Automobile Association is an automobile Insurance company headquartered in Lake Mary Florida My role is to provide technical support to all production systems and perform various tests on all application codes and design new codes for all design specifications Responsibilities Involved in analysis outline and advancement and testing periods of the application improvement SDLC utilizing Agile Scrum procedure Developed Frontend pages using HTML CSS3using SAAS J Query and JavaScript Used AJAX and Custom HTML Helper Classes to implement asynchronous calls to the server to update the changes Developed a Module that enables the administrator to provide access rights to users based on their credentials Used AJAX Controls like Script Manager and Update Panel to develop the GUI Used Spring MVC to implement MVC Design Pattern and responsible for creating ModelValue Objects in MVC Design Pattern Worked on Spring Framework handling major concepts like Dependency Injections Spring IoC Containers Transaction Management Declaratives annotations based Worked with Spring Batch to convert xml files to data base records using Quartz Scheduler Worked on serverside validation using various web forms through annotation based approach Implemented the Spring IOC for the core business application logic and created various Advice before after methods as required using Spring AOP Used Ibatis ORM Framework to interact with database and used for connecting to the database and mapping the entities by using annotations Wrote SQL Queries PLSQL stored procedures triggers packages on Oracle database Strong experience in integration tools like Apache CXF Apache Camel Spring Integration and Mule ESB to integrate the enterprise application technologies with existing JVM environment Developed SOAP services with JAXWS using Apache CXF framework with data representation in XML format Configured Log4j for adding the debugging information in the code base and Implemented security functionality for various projects using Site minder SSO Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Used Load Balancer in Pivotal Cloud Foundry to improve the performance and reliability of the server and deployed a single instance of HAProxy for test environments in pivotal cloud Foundry Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Used Rabbit MQ for transport of data in Queue in between components of the application Performing unit Testing utilizing JUnit and ridiculing systems like JMock and Mockito and ensured code changes wont break existing Unit Tests Environment HTML CSS3 JQuery JavaScript Agile AJAX HTML Spring MVC Spring Container Spring AOP HQL Hibernate SQL Log4j Pivotal Cloud Foundry Rabbit MQ Apache Active MQ J Mock Mockito Java Developer Faujnet Solutions Hyderabad Telangana November 2013 to October 2015 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules within this sub modules will maintain storing registering details of joining patient details and over all day activities maintains a database Responsibilities The application is designed using J2EE design patterns and technologies based on MVC based Monolithic architecture Front end interactive UI is developed using HTML CSS Jquery and Java script Agile methodology is used for development of the application Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Implemented persistence layer between the database and service layers with IBatis ORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Involved in the development of underwriting process which involves communications without side systems and developed message Driven Beans for receiving and processing data using IBM MQ JMS Implemented Java Mail and used its thirdparty command line email to automate email sending and receiving in the application Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere EJB Session Beans were used to process request from user interface using OSS Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment Environment HTML CSS J query Java script DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Java Mail UNIX Shell Scripts JTA ANT IBM Web sphere IBM MQ JMS J2EE IBatis IBM WebSphere SOPA WSDL Spring IOC Spring AOP Junit Mokito Associate Software Engineer Intergraph Hyderabad Telangana July 2012 to October 2013 Description Intergraph Corporation is an American software development and services company It provides enterprise engineering and geospatially powered software to businesses governments and organizations around the world My role is to contribute to the entire development life cycles write well designed testable and efficient code I should ensure that designs are in compliance to the specifications Responsibilities Involved in requirements gathering and analyzing them in the discussion sessions Coordinate with BA group for better understanding of functional requirements Analyze and Design the business requirements to document and implement Responsible for developing GUI user interfaces using JSP CSS HTML JavaScript part of view development for the new enhancements or new modules Involved in the extensive coding of JavaScript to handle the clientside validations Developed Java Servlets and objects using J2EE Standards Worked on Struts framework and production support issues of the existing applications Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Implemented Multithreading for handling multiple requests and for high performance Created many Stored procedures and scheduled jobs to support our applications for to create reports for customers Worked on database interaction layer for insertions updating and retrieval operations of data from oracle database by writing stored procedures Developed model components using session beans and used local message driven beans MDB to interact to session using EJB Responsible in creating Servlets which route submittals to appropriate Enterprise Java Bean EJB components and render retrieved information JMS is used for exchanging the information Successfully wrote and implemented SQL Queries Stored procedures and Triggers in SQL SERVER Designed and developed MDB that consumed the messages from the Java message queue Used JDBC to access Oracle database for accessing customer information Involved in coding for JUnit test cases ANT for building the application Created migration document and supported the migration of packages and objects to production environment Environment Spring 3x Java 6 HTML5 CSS3 Hibernate 30 Tomcat 70 My SQL Server Eclipse Apache CXF Microsoft Vision Spring Security Accenture estimator jQuery and AWS Education Masters Texas AM University Bachelors in Electrical and Electronics Engineering in MVSR Engineering Osmania University Hyderabad Telangana Skills ECLIPSE EJB J2EE JAVA HIBERNATE",
    "entities": [
        "Restful JAXRS SOAP",
        "HTML CSSCSS3",
        "AMQP",
        "Spring Framework",
        "AJAX",
        "AWS EC2",
        "GUI",
        "ORM",
        "Implemented Rabbit MQ Services",
        "Relational",
        "MVC Design Pattern Worked",
        "JSON Web Tokenizer Responsible",
        "HAProxy",
        "Jersey",
        "HTTP",
        "JTA",
        "IBM",
        "Amazon Web Services AWS",
        "the Auto Club Group",
        "Observables Object RestSpread Properties Expertise",
        "Camel",
        "Foundry Implemented",
        "XML",
        "Verified",
        "Spring Community",
        "Telangana",
        "Auxiliary Services Each",
        "OSS Developed UNIX",
        "JavaScript AWS S3",
        "IBM WebSphere",
        "Nodejs Heavily",
        "JAXWS",
        "Coordinate",
        "JUnit",
        "Transactional Management Logging Security",
        "Automated",
        "ModelValue Objects",
        "Amazon",
        "NodeJS Express",
        "Abstract Factory Created Stored Procedures Functions",
        "ELK",
        "AJAX Object Oriented OO JavaScript JSON",
        "Development of Action Forms Action Servlets Action",
        "Texas AM University Bachelors",
        "JMock",
        "Developed",
        "Hibernate ORM",
        "ANT Good",
        "GitHub JIRA Jenkins Swagger Netflix",
        "Mockito",
        "Spring MVC",
        "ES7",
        "Responsibilities Involved",
        "Hapi JS",
        "Pivotal Functional Service",
        "Triggers",
        "Spring Container",
        "HTML5 CSS3SAASLESS BOOTSTRAP",
        "Core Java Multithreading Transaction Management Exception Handling Concurrency Collections Data",
        "HTML5",
        "Description Intergraph Corporation",
        "Lambda Expressions Functional Interfaces",
        "JSP",
        "Micro",
        "Deployment and Created",
        "Worked with Spring Batch",
        "Environments Deployed",
        "Easy Mock",
        "Docker",
        "Monolithic architecture Front end interactive UI",
        "RDS",
        "Jenkins CICD",
        "Views",
        "Wrote Unit",
        "J2EE Web Services",
        "MVC",
        "Created AWS",
        "SQL SERVER",
        "Authenticating Users",
        "AWS Education Masters",
        "Electrical and Electronics Engineering",
        "EJB",
        "User Interface",
        "Node JS",
        "Chai",
        "Rabbit MQ",
        "API",
        "Dependency Injection IOC Annotations",
        "OpenShift",
        "Analyze and Design",
        "Spring JDBC",
        "JSF Prime Faces",
        "Created",
        "AWS",
        "Apache CXF",
        "Implemented",
        "SOA Service Oriented Architecture and Microservices",
        "JBOSS Application",
        "Kubernetes Clusters Good",
        "ClientServer",
        "OOP JavaJ2EE",
        "ELK Expertise",
        "TDD Expertise",
        "fed",
        "Amazon ECS Installed",
        "Elasticsearch",
        "RESTFUL",
        "SQL",
        "UIUX",
        "Amazon Web Services",
        "Kubernetes for Zero downtime",
        "the Spring IOC",
        "Spring IOC Protection",
        "Bootstrap",
        "Created many Stored",
        "Apache CXF Apache",
        "MVC Design Pattern",
        "Developer American Automobile Association",
        "HTML CSS3",
        "IBatis ORM Involved",
        "Description American Automobile Association",
        "Nodejs Developed Unit",
        "Zuul",
        "Hibernate JPA Spring Data Ibatis",
        "Hospital Management System",
        "Developed SOAP",
        "Continuous Deployment",
        "CRUD",
        "Pivotal Application Service Pivotal Container Service",
        "Advice",
        "Express JS",
        "Implemented Netflix OSSOpen Source Software for Feasible",
        "HTML CSS Jquery",
        "MVC Business Delegate Session Facade Service Locator Data Access Object Singleton",
        "Node JS Worked",
        "Custom HTML Helper Classes",
        "JavaScript",
        "ANT",
        "BA",
        "java environment Environment HTML CSS",
        "Application Analysis Design Development Integration Deployment and Maintenance Standalone",
        "Continuous Integration",
        "Cursor",
        "Description Develop",
        "Queue",
        "Expertise",
        "Dependency Injections Spring IoC Containers Transaction Management Declaratives",
        "Spring Social",
        "EJB Responsible",
        "jQuery",
        "Apache Active",
        "REST",
        "Implemented Spring Netflix Zuul API",
        "NoSQL",
        "MVSR Engineering Osmania University Hyderabad",
        "Micro Service Oriented Architecture",
        "Monitoring",
        "EBS",
        "Application using Nodejs libraries NPM",
        "Mongo DB",
        "Boot Jersey Micro Services Rest Services AWS",
        "Microservice",
        "Node",
        "Update Panel"
    ],
    "experience": "Experience in applying the latest software development approaches including MVC MVVM event driven applications using AJAX Object Oriented OO JavaScript JSON Experience in using Web Services RESTFUL web services Proficient in Object Oriented DesignDevelopment OOD Object Oriented Analysis and Design OOAD Model View Control MVC design pattern and TestDrivenDevelopment TDD Expertise in using Node JS with Express JS or Hapi JS which provides a robust set of features for web and mobile applications Expertise in using Java script build tools like Grunt Gulp and Bower as an automation tools for performing repetitive tasks in unit testing Experienced in all phases of usability testing including user profiles and personals task analysis contextual research test moderation and reporting using Mocha and Chai for Node JS Experience with Core Java Multithreading Transaction Management Exception Handling Concurrency Collections Data structures Lambda Expressions Functional Interfaces and JDBC Strong experience in Microservice SOA architecture and Cloud Native application design development testing and deployment of webbased and Enterprise ClientServer business applications using OOP JavaJ2EE technologies Expertise in developing SOA Service Oriented Architecture and Microservices architecture using J2EE Web Services based on Restful JAXRS SOAP JAXWS JAXRPC and JAXR Java API for XML Registries using frameworks like Apache CXF Jersey Axis and Spring framework NodeJS Express JS Hapi JS Solid experience in using the Spring AOP facets Transactional Management Logging Security and Authentication Expertise in using Spring Boot to create standalone applications and for building web service and created dynamic documentation for RESTful webservice using Swagger API using Spring Boot Used Spring Boot which is radically faster in building cloud Micro services and develop Spring based application with very less configuration Implemented Spring Boot Actuator to monitor and manage the application Implemented microservices using RESTful API with Spring Boot and Apache CFX Integrated micro services with Hibernate ORM using Spring Boot and wrote HQL queries for data access Strong experience in Spring Framework modules such as Spring MVC Spring IOC AOP and Spring JDBC Spring Data Spring REST Spring JTA Spring IO Spring Security Spring Boot Extensive experience in developing scalable reliable efficient web and enterprise applications using frameworks like JSP EJB Java Persistence API JNDI JMS Struts JSF Prime Faces and Spring Community framework projects Experience in understanding and using NoSQL databases like Mongo DB Apache Cassandra DynamoDB Couch DB and Redis Good knowledge on working with Relational database ORM frameworks like Hibernate JPA Spring Data Ibatis and NoSQL ORM frameworks like Mongoose connector Cassandra Node Driver Better understanding of implementation using Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Expertise in using Hystrix circuit breaker library for lowering network latency and fault tolerance and Zuul gateway for routing monitoring security Experience in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and Apache Camel to integrate the enterprise application technologies with existing JVM environment Building realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite Hands on experience in implementation of PCF Pivotal Cloud Foundry PAAS Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Well experienced in using various AWS Amazon Web Services IAAS Infrastructure As a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Used Kubernetes Linux container for deploying and scaling containerized applications Implemented Docker container service build pipe line Jenkins Bamboo and GoCD for Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Good experience using Docker for installing upgrading testing removing and running software applications Good understanding of OpenShift platform in managing Docker containers and Kubernetes Clusters Good experience on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Well experienced with build tools like Gradle Maven and ANT Good practical experience with Javabased logging utility ie log4J Unit tested web services using Junit Mockito Easy mock Spring Junit Runner Test NG and hence achieved the goals of Test Driven Development TDD Work Experience Java Developer CenturyLink Corporate Headquarters Monroe LA July 2018 to Present Description Serves as a technical team member in the planning designing developing implementing andor supporting complex to moderately complex new or revised processes systems or networks Ensures functional and technical designs support customer requirements Develops an understanding of the Auto Club Group business strategy and competitive environment and translate and implements business strategies into technology solutions My role is to assist in development of various applications and maintain quality for same and perform trouble shot to resolve all application issues Responsibilities The application is developed on Micro Service Oriented Architecture using Spring Boot and Node JS Cassandra and MySQL to integrate and communicate with the already existing applications Implemented the associated business modules integration using Spring Boot and Oracle Cassandra Used Spring Dependency Injection annotations and Spring MVC components to implement business layer and navigation part of application Developed several RESTful API web services which produces both XML and JSON to perform tasks leveraged by both web and mobile applications Documented the REST APIs using Swagger2 API for briefing the services involved in the application Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernate second level EH Cache Used Redis for caching and Elastic Search which resulted in enhanced performance of the application Implemented Rabbit MQ Services for reliable and asynchronous exchange of important information such as payment status report Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Developed data transformer for converting legacy data from Source tables to Avro format and fed into Kafka using Camel to process the file for multiple routes to different host locations Implemented Spring Netflix Zuul API gateway and Eureka service registry for reverse proxy and Dynamic service discovery of APIs Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for social websites logins using Spring Social module Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code Pipeline and Amazon ECS Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Created AWS Lambda functions for AWS config rules using Nodejs Heavily used Lambda function on text object methods Context object properties using Nodejs Developed Unit test cases using Junit Cucumber for Spring Used MOCKITO to mock interfaces so that a dummy functionality can be added to a mock interface that can be used in Unit testing Responsible for developing GUI user interfaces using JSP CSS HTML part of view development for the new enhancements or new modules Also carried out validations of user requests using JavaScript Designing and implementing the User Interface using HTML CSSCSS3 SASS and Bootstrap for responsive design for the exposed enterprise application Involved in the development of presentation layer and GUI responsive development using JSP HTML5 CSSCSS3 Bootstrap Used Spring Data JPA as the ORM framework to connect with MYSQL database and Cassandra data node to connect with Cassandra database and Verified data integrity on Cassandra cluster while batch loading Implemented GraphQL server using Relay framework that allows us to query the multiple RESTful API backends asynchronously without having to write promise logic that avoids cumbersome call backs Used various jQuery and Bootstrap plugin like date picker Bootstrap selectors for responsive designing in usage of different devices Created a new cluster and container management tool using Kubernetes for Zero downtime Deployment Used Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application in the cloud Experience in Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Environment HTML5 CSS 3 JavaScript AWS S3 NPM Gulp Expressjs RESTful Web Services Web Pack Babel Spring Boot Jersey Micro Services Rest Services AWS Node JS GitHub JIRA Jenkins Swagger Netflix OSS Eureka ribbon Zuul Api gateway hystrix circuit breaker docker Java Developer CGI Lafayette LA December 2017 to June 2018 Description Develop applications and components based on using a Java technology stack and develop high quality service oriented architecture and microservices Implement new features in a collaborative team environment with product managers UIUX designers business analyst and testers Proactively recommend new product features to improve quality performance and the user experience Ensures that software meets or exceed specified standards and enduser requirements Responsibilities Developed the frontend featuring rich web interface implemented using HTML CSS3 and Bootstrap for responsive design Implement the MERN web application using technologies MongoDB Hapi JS Node JS along with HTML5 CSS3 JavaScript jQuery Bootstrap and other web technologies Closely worked with Application using Nodejs libraries NPM gulp directories to generate desired view Used Node JS along with Hapi JS to achieve reusability and gain centralized logic and Implemented generating the verification hash code using crypto package on Node JS and added user validations and user permissions by using Node JS Worked with Node JS framework including authoring complex directives services controllers and filters Developed readable and writable streams of Node JS to process the data from external means of the application Configured Hapi JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Migrating existing application into REST based Microservices to provide all the CRUD capabilities using Spring Boot Worked with Microservice architecture using Spring Boot to modularized code and deployed microservices using Spring Boot to get range of nonfunctional features and used Spring Rest to create rest producers and rest Clients using Spring RestTemplate Involved in webservices design and development Responsible for creating and consuming web services using REST and XML Worked in integrating JMS with SPRING BOOT by providing an instance which is embed with Active MQ Designed and developed RESTFUL web services using Spring Boot and Jersey framework Used Swagger specification for documenting REST APIs which exposes description of a RESTFUL web services to different clients Implemented the function to send and receive AMQP messages on RabbitMQ synchronously asynchronously and send JMS message on the edge device Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Worked on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Authenticating Users and to provide the security to RESTful web services using JSON Web Tokenizer Responsible for migrating existing modules in IBM MQ to Apache Kafka and worked on creating Kafka adaptors for decoupling the application dependency Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch upon MongoDB for analytics and visualization of the users login Created a new cluster and container management tool using Kubernetes for Zero downtime Deployment and Created instances for AWS EC2 and created AWS s3 buckets to monitor the access to the hosted files Used Amazon Web Services AWS for promoting code in various Environments Deployed EC2 instances provisioning on AWS environment and implemented security groups administered Amazon VPCs Implemented Spring Cloud Netflix ZUUL to building microservices to communicate with each other Implemented Netflix OSSOpen Source Software for Feasible changes after the deployment Used JIRA as the bug tracking system to track and maintain the history of bugsissues on everyday basis and used Log4js for automated logging of error messages Automated different Unit Test Cases using Jasmine and Karma Testing Frameworks on Angular Involved in creating unit testing of various layers using JUnit with Easy Mock and created automated test scripts for integration testing using Selenium Environment Cassandra DB MySQL DB HTML CSS3 Typescript Redux NPM Spring Docker Jenkins REST Spring Boot Jersey Mocha Chai AWS RabbitMQ JIRA Junit Mockito Java Developer American Automobile Association Lake Mary FL April 2016 to November 2017 Description American Automobile Association is an automobile Insurance company headquartered in Lake Mary Florida My role is to provide technical support to all production systems and perform various tests on all application codes and design new codes for all design specifications Responsibilities Involved in analysis outline and advancement and testing periods of the application improvement SDLC utilizing Agile Scrum procedure Developed Frontend pages using HTML CSS3using SAAS J Query and JavaScript Used AJAX and Custom HTML Helper Classes to implement asynchronous calls to the server to update the changes Developed a Module that enables the administrator to provide access rights to users based on their credentials Used AJAX Controls like Script Manager and Update Panel to develop the GUI Used Spring MVC to implement MVC Design Pattern and responsible for creating ModelValue Objects in MVC Design Pattern Worked on Spring Framework handling major concepts like Dependency Injections Spring IoC Containers Transaction Management Declaratives annotations based Worked with Spring Batch to convert xml files to data base records using Quartz Scheduler Worked on serverside validation using various web forms through annotation based approach Implemented the Spring IOC for the core business application logic and created various Advice before after methods as required using Spring AOP Used Ibatis ORM Framework to interact with database and used for connecting to the database and mapping the entities by using annotations Wrote SQL Queries PLSQL stored procedures triggers packages on Oracle database Strong experience in integration tools like Apache CXF Apache Camel Spring Integration and Mule ESB to integrate the enterprise application technologies with existing JVM environment Developed SOAP services with JAXWS using Apache CXF framework with data representation in XML format Configured Log4j for adding the debugging information in the code base and Implemented security functionality for various projects using Site minder SSO Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Used Load Balancer in Pivotal Cloud Foundry to improve the performance and reliability of the server and deployed a single instance of HAProxy for test environments in pivotal cloud Foundry Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Used Rabbit MQ for transport of data in Queue in between components of the application Performing unit Testing utilizing JUnit and ridiculing systems like JMock and Mockito and ensured code changes wo nt break existing Unit Tests Environment HTML CSS3 JQuery JavaScript Agile AJAX HTML Spring MVC Spring Container Spring AOP HQL Hibernate SQL Log4j Pivotal Cloud Foundry Rabbit MQ Apache Active MQ J Mock Mockito Java Developer Faujnet Solutions Hyderabad Telangana November 2013 to October 2015 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules within this sub modules will maintain storing registering details of joining patient details and over all day activities maintains a database Responsibilities The application is designed using J2EE design patterns and technologies based on MVC based Monolithic architecture Front end interactive UI is developed using HTML CSS Jquery and Java script Agile methodology is used for development of the application Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Implemented persistence layer between the database and service layers with IBatis ORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Involved in the development of underwriting process which involves communications without side systems and developed message Driven Beans for receiving and processing data using IBM MQ JMS Implemented Java Mail and used its thirdparty command line email to automate email sending and receiving in the application Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere EJB Session Beans were used to process request from user interface using OSS Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment Environment HTML CSS J query Java script DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Java Mail UNIX Shell Scripts JTA ANT IBM Web sphere IBM MQ JMS J2EE IBatis IBM WebSphere SOPA WSDL Spring IOC Spring AOP Junit Mokito Associate Software Engineer Intergraph Hyderabad Telangana July 2012 to October 2013 Description Intergraph Corporation is an American software development and services company It provides enterprise engineering and geospatially powered software to businesses governments and organizations around the world My role is to contribute to the entire development life cycles write well designed testable and efficient code I should ensure that designs are in compliance to the specifications Responsibilities Involved in requirements gathering and analyzing them in the discussion sessions Coordinate with BA group for better understanding of functional requirements Analyze and Design the business requirements to document and implement Responsible for developing GUI user interfaces using JSP CSS HTML JavaScript part of view development for the new enhancements or new modules Involved in the extensive coding of JavaScript to handle the clientside validations Developed Java Servlets and objects using J2EE Standards Worked on Struts framework and production support issues of the existing applications Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Implemented Multithreading for handling multiple requests and for high performance Created many Stored procedures and scheduled jobs to support our applications for to create reports for customers Worked on database interaction layer for insertions updating and retrieval operations of data from oracle database by writing stored procedures Developed model components using session beans and used local message driven beans MDB to interact to session using EJB Responsible in creating Servlets which route submittals to appropriate Enterprise Java Bean EJB components and render retrieved information JMS is used for exchanging the information Successfully wrote and implemented SQL Queries Stored procedures and Triggers in SQL SERVER Designed and developed MDB that consumed the messages from the Java message queue Used JDBC to access Oracle database for accessing customer information Involved in coding for JUnit test cases ANT for building the application Created migration document and supported the migration of packages and objects to production environment Environment Spring 3x Java 6 HTML5 CSS3 Hibernate 30 Tomcat 70 My SQL Server Eclipse Apache CXF Microsoft Vision Spring Security Accenture estimator jQuery and AWS Education Masters Texas AM University Bachelors in Electrical and Electronics Engineering in MVSR Engineering Osmania University Hyderabad Telangana Skills ECLIPSE EJB J2EE JAVA HIBERNATE",
    "extracted_keywords": [
        "Java",
        "Developer",
        "Java",
        "lDeveloperspan",
        "Java",
        "Developer",
        "CenturyLink",
        "Corporate",
        "Headquarters",
        "Monroe",
        "LA",
        "Java",
        "Developer",
        "years",
        "experience",
        "Application",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "Deployment",
        "Maintenance",
        "Standalone",
        "ClientServer",
        "Software",
        "Applications",
        "Strong",
        "experience",
        "User",
        "Interface",
        "development",
        "web",
        "technologies",
        "HTML5",
        "CSS3SAASLESS",
        "BOOTSTRAP",
        "JAVASCRIPT",
        "JQUERY",
        "AJAX",
        "understanding",
        "JavaScript",
        "ES6",
        "arrow",
        "functions",
        "constructs",
        "template",
        "literals",
        "multiline",
        "strings",
        "ES7",
        "async",
        "functions",
        "Observables",
        "Object",
        "RestSpread",
        "Properties",
        "Expertise",
        "DOM",
        "Layout",
        "JavaScript",
        "functions",
        "Styles",
        "crossbrowser",
        "chrome",
        "inspector",
        "developer",
        "tools",
        "Experience",
        "software",
        "development",
        "approaches",
        "MVC",
        "MVVM",
        "event",
        "applications",
        "AJAX",
        "Object",
        "OO",
        "JavaScript",
        "JSON",
        "Experience",
        "Web",
        "Services",
        "RESTFUL",
        "web",
        "services",
        "Proficient",
        "Object",
        "Oriented",
        "DesignDevelopment",
        "OOD",
        "Object",
        "Oriented",
        "Analysis",
        "Design",
        "OOAD",
        "Model",
        "View",
        "Control",
        "MVC",
        "design",
        "pattern",
        "TestDrivenDevelopment",
        "TDD",
        "Expertise",
        "Node",
        "JS",
        "Express",
        "JS",
        "Hapi",
        "JS",
        "set",
        "features",
        "web",
        "applications",
        "Expertise",
        "Java",
        "script",
        "build",
        "tools",
        "Grunt",
        "Gulp",
        "Bower",
        "automation",
        "tools",
        "tasks",
        "unit",
        "testing",
        "phases",
        "usability",
        "testing",
        "user",
        "profiles",
        "personals",
        "task",
        "analysis",
        "research",
        "test",
        "moderation",
        "reporting",
        "Mocha",
        "Chai",
        "Node",
        "JS",
        "Experience",
        "Core",
        "Java",
        "Multithreading",
        "Transaction",
        "Management",
        "Exception",
        "Handling",
        "Concurrency",
        "Collections",
        "Data",
        "structures",
        "Lambda",
        "Expressions",
        "Functional",
        "Interfaces",
        "JDBC",
        "Strong",
        "experience",
        "Microservice",
        "SOA",
        "architecture",
        "Cloud",
        "Native",
        "application",
        "design",
        "development",
        "testing",
        "deployment",
        "Enterprise",
        "ClientServer",
        "business",
        "applications",
        "OOP",
        "JavaJ2EE",
        "technologies",
        "Expertise",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "Microservices",
        "architecture",
        "J2EE",
        "Web",
        "Services",
        "Restful",
        "JAXRS",
        "SOAP",
        "JAXWS",
        "JAXRPC",
        "JAXR",
        "Java",
        "API",
        "XML",
        "Registries",
        "frameworks",
        "Apache",
        "CXF",
        "Jersey",
        "Axis",
        "Spring",
        "framework",
        "NodeJS",
        "Express",
        "JS",
        "Hapi",
        "JS",
        "experience",
        "Spring",
        "AOP",
        "Transactional",
        "Management",
        "Logging",
        "Security",
        "Authentication",
        "Expertise",
        "Spring",
        "Boot",
        "applications",
        "web",
        "service",
        "documentation",
        "webservice",
        "Swagger",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "services",
        "Spring",
        "application",
        "configuration",
        "Spring",
        "Boot",
        "Actuator",
        "application",
        "microservices",
        "API",
        "Spring",
        "Boot",
        "Apache",
        "CFX",
        "Integrated",
        "micro",
        "services",
        "Hibernate",
        "ORM",
        "Spring",
        "Boot",
        "HQL",
        "queries",
        "data",
        "access",
        "experience",
        "Spring",
        "Framework",
        "modules",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "AOP",
        "Spring",
        "JDBC",
        "Spring",
        "Data",
        "Spring",
        "REST",
        "Spring",
        "JTA",
        "Spring",
        "IO",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "experience",
        "web",
        "enterprise",
        "applications",
        "frameworks",
        "JSP",
        "EJB",
        "Java",
        "Persistence",
        "API",
        "JNDI",
        "JMS",
        "Struts",
        "JSF",
        "Prime",
        "Faces",
        "Spring",
        "Community",
        "framework",
        "Experience",
        "understanding",
        "NoSQL",
        "databases",
        "Mongo",
        "DB",
        "Apache",
        "Cassandra",
        "DynamoDB",
        "Couch",
        "DB",
        "Redis",
        "knowledge",
        "database",
        "ORM",
        "frameworks",
        "Hibernate",
        "JPA",
        "Spring",
        "Data",
        "Ibatis",
        "NoSQL",
        "ORM",
        "frameworks",
        "Mongoose",
        "connector",
        "Cassandra",
        "Node",
        "Driver",
        "understanding",
        "implementation",
        "Spring",
        "CloudNetflix",
        "OSS",
        "stack",
        "microservices",
        "deployment",
        "auto",
        "configurations",
        "Eureka",
        "Service",
        "Discovery",
        "Server",
        "Ribbon",
        "Dynamic",
        "Routing",
        "Load",
        "Balancer",
        "Hystrix",
        "Circuit",
        "Breaker",
        "Zuul",
        "Edge",
        "proxy",
        "Monitoring",
        "log",
        "ELK",
        "Expertise",
        "Hystrix",
        "circuit",
        "breaker",
        "library",
        "network",
        "latency",
        "tolerance",
        "Zuul",
        "gateway",
        "security",
        "Experience",
        "integration",
        "tools",
        "Spring",
        "Integration",
        "Mule",
        "ESB",
        "Apache",
        "CXF",
        "Apache",
        "Kafka",
        "Apache",
        "Camel",
        "enterprise",
        "application",
        "technologies",
        "JVM",
        "environment",
        "dashboard",
        "applications",
        "visualization",
        "analytics",
        "Apache",
        "Web",
        "servers",
        "Elastic",
        "Search",
        "Logstash",
        "Kibana",
        "ELK",
        "D3JS",
        "Grafana",
        "Splunk",
        "Graphite",
        "Hands",
        "experience",
        "implementation",
        "PCF",
        "Cloud",
        "Foundry",
        "PAAS",
        "Platform",
        "Service",
        "services",
        "Pivotal",
        "Application",
        "Service",
        "Pivotal",
        "Container",
        "Service",
        "Pivotal",
        "Functional",
        "Service",
        "applications",
        "cloud",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "IAAS",
        "Infrastructure",
        "Service",
        "Components",
        "EC2",
        "running",
        "applications",
        "machines",
        "S3",
        "Glacier",
        "term",
        "data",
        "EBS",
        "block",
        "level",
        "storage",
        "Elastic",
        "Cache",
        "Dynamo",
        "DB",
        "SQS",
        "message",
        "RDS",
        "database",
        "cloud",
        "Lambda",
        "server",
        "program",
        "functions",
        "Kubernetes",
        "Linux",
        "container",
        "applications",
        "Docker",
        "container",
        "service",
        "build",
        "pipe",
        "line",
        "Jenkins",
        "Bamboo",
        "GoCD",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "cloud",
        "experience",
        "Docker",
        "upgrading",
        "testing",
        "software",
        "applications",
        "understanding",
        "OpenShift",
        "platform",
        "Docker",
        "containers",
        "Kubernetes",
        "Clusters",
        "experience",
        "Docker",
        "hub",
        "Docker",
        "images",
        "images",
        "middleware",
        "installations",
        "domain",
        "configurations",
        "build",
        "tools",
        "Gradle",
        "Maven",
        "ANT",
        "experience",
        "Javabased",
        "utility",
        "log4J",
        "Unit",
        "web",
        "services",
        "Junit",
        "Mockito",
        "Easy",
        "Spring",
        "Junit",
        "Runner",
        "Test",
        "NG",
        "goals",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "CenturyLink",
        "Corporate",
        "Headquarters",
        "Monroe",
        "LA",
        "July",
        "Present",
        "Description",
        "team",
        "member",
        "planning",
        "complex",
        "processes",
        "systems",
        "networks",
        "Ensures",
        "designs",
        "customer",
        "requirements",
        "understanding",
        "Auto",
        "Club",
        "Group",
        "business",
        "strategy",
        "environment",
        "business",
        "strategies",
        "technology",
        "solutions",
        "role",
        "development",
        "applications",
        "quality",
        "trouble",
        "application",
        "issues",
        "Responsibilities",
        "application",
        "Micro",
        "Service",
        "Oriented",
        "Architecture",
        "Spring",
        "Boot",
        "Node",
        "JS",
        "Cassandra",
        "MySQL",
        "applications",
        "business",
        "modules",
        "integration",
        "Spring",
        "Boot",
        "Oracle",
        "Cassandra",
        "Spring",
        "Dependency",
        "Injection",
        "annotations",
        "Spring",
        "MVC",
        "components",
        "business",
        "layer",
        "navigation",
        "part",
        "application",
        "API",
        "web",
        "services",
        "XML",
        "JSON",
        "tasks",
        "web",
        "applications",
        "REST",
        "APIs",
        "Swagger2",
        "API",
        "services",
        "application",
        "Configured",
        "JBOSS",
        "Application",
        "server",
        "Oracle",
        "database",
        "Hibernate",
        "ORM",
        "framework",
        "functionalities",
        "Hibernate",
        "level",
        "EH",
        "Cache",
        "Redis",
        "Elastic",
        "Search",
        "performance",
        "application",
        "Rabbit",
        "MQ",
        "Services",
        "exchange",
        "information",
        "payment",
        "status",
        "report",
        "Kafka",
        "manager",
        "consumer",
        "logs",
        "Kafka",
        "Metrics",
        "topics",
        "Partitions",
        "analytics",
        "purpose",
        "data",
        "transformer",
        "legacy",
        "data",
        "Source",
        "tables",
        "Avro",
        "format",
        "Kafka",
        "Camel",
        "file",
        "routes",
        "host",
        "locations",
        "Spring",
        "Netflix",
        "Zuul",
        "API",
        "gateway",
        "Eureka",
        "service",
        "registry",
        "proxy",
        "service",
        "discovery",
        "APIs",
        "Spring",
        "Security",
        "OAuth",
        "mechanism",
        "authentication",
        "websites",
        "Spring",
        "Social",
        "module",
        "Docker",
        "image",
        "services",
        "Docker",
        "file",
        "delivery",
        "pipeline",
        "containers",
        "AWS",
        "Code",
        "Pipeline",
        "Amazon",
        "ECS",
        "Installed",
        "NoSQL",
        "database",
        "clusters",
        "AWS",
        "Virtual",
        "Cloud",
        "Network",
        "data",
        "cloud",
        "AWS",
        "Lambda",
        "functions",
        "AWS",
        "config",
        "rules",
        "Nodejs",
        "Lambda",
        "function",
        "text",
        "object",
        "methods",
        "Context",
        "object",
        "properties",
        "Nodejs",
        "Developed",
        "Unit",
        "test",
        "cases",
        "Junit",
        "Cucumber",
        "Spring",
        "MOCKITO",
        "interfaces",
        "functionality",
        "interface",
        "Unit",
        "GUI",
        "user",
        "interfaces",
        "JSP",
        "CSS",
        "HTML",
        "part",
        "view",
        "development",
        "enhancements",
        "modules",
        "validations",
        "user",
        "requests",
        "JavaScript",
        "Designing",
        "User",
        "Interface",
        "HTML",
        "CSSCSS3",
        "SASS",
        "Bootstrap",
        "design",
        "enterprise",
        "application",
        "development",
        "presentation",
        "layer",
        "GUI",
        "development",
        "JSP",
        "HTML5",
        "CSSCSS3",
        "Bootstrap",
        "Spring",
        "Data",
        "JPA",
        "ORM",
        "framework",
        "MYSQL",
        "database",
        "Cassandra",
        "data",
        "node",
        "Cassandra",
        "database",
        "Verified",
        "data",
        "integrity",
        "Cassandra",
        "cluster",
        "batch",
        "loading",
        "GraphQL",
        "server",
        "Relay",
        "framework",
        "API",
        "backends",
        "promise",
        "logic",
        "call",
        "backs",
        "jQuery",
        "Bootstrap",
        "plugin",
        "date",
        "picker",
        "Bootstrap",
        "selectors",
        "designing",
        "usage",
        "devices",
        "cluster",
        "container",
        "management",
        "tool",
        "Kubernetes",
        "Zero",
        "downtime",
        "Deployment",
        "delivery",
        "Continuous",
        "Integration",
        "CDCI",
        "tools",
        "Docker",
        "Jenkins",
        "application",
        "cloud",
        "Experience",
        "Docker",
        "Engine",
        "Docker",
        "Machine",
        "environment",
        "micro",
        "environments",
        "application",
        "Environment",
        "HTML5",
        "CSS",
        "JavaScript",
        "AWS",
        "S3",
        "NPM",
        "Gulp",
        "Expressjs",
        "Web",
        "Services",
        "Web",
        "Pack",
        "Babel",
        "Spring",
        "Boot",
        "Jersey",
        "Micro",
        "Services",
        "Rest",
        "Services",
        "Node",
        "JS",
        "GitHub",
        "JIRA",
        "Jenkins",
        "Swagger",
        "Netflix",
        "OSS",
        "Eureka",
        "ribbon",
        "Zuul",
        "Api",
        "gateway",
        "circuit",
        "breaker",
        "docker",
        "Java",
        "Developer",
        "CGI",
        "Lafayette",
        "LA",
        "December",
        "June",
        "Description",
        "Develop",
        "applications",
        "components",
        "Java",
        "technology",
        "stack",
        "quality",
        "service",
        "architecture",
        "microservices",
        "features",
        "team",
        "environment",
        "product",
        "managers",
        "UIUX",
        "business",
        "analyst",
        "testers",
        "product",
        "quality",
        "performance",
        "user",
        "experience",
        "software",
        "standards",
        "requirements",
        "Responsibilities",
        "frontend",
        "web",
        "interface",
        "HTML",
        "CSS3",
        "Bootstrap",
        "design",
        "Implement",
        "MERN",
        "web",
        "application",
        "technologies",
        "Hapi",
        "JS",
        "Node",
        "JS",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "web",
        "technologies",
        "Application",
        "Nodejs",
        "libraries",
        "NPM",
        "gulp",
        "directories",
        "view",
        "Node",
        "JS",
        "Hapi",
        "JS",
        "reusability",
        "logic",
        "verification",
        "hash",
        "code",
        "package",
        "Node",
        "JS",
        "user",
        "validations",
        "user",
        "permissions",
        "Node",
        "JS",
        "Node",
        "JS",
        "framework",
        "directives",
        "services",
        "controllers",
        "filters",
        "streams",
        "Node",
        "JS",
        "data",
        "means",
        "application",
        "Configured",
        "Hapi",
        "JS",
        "node",
        "http",
        "framework",
        "middlewares",
        "HTTP",
        "requests",
        "frontend",
        "web",
        "packs",
        "starter",
        "boiler",
        "plates",
        "application",
        "REST",
        "Microservices",
        "CRUD",
        "capabilities",
        "Spring",
        "Boot",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "code",
        "microservices",
        "Spring",
        "Boot",
        "range",
        "features",
        "Spring",
        "Rest",
        "rest",
        "producers",
        "Clients",
        "Spring",
        "RestTemplate",
        "webservices",
        "design",
        "development",
        "web",
        "services",
        "REST",
        "XML",
        "JMS",
        "SPRING",
        "BOOT",
        "instance",
        "MQ",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "Boot",
        "Jersey",
        "framework",
        "Swagger",
        "specification",
        "REST",
        "APIs",
        "description",
        "RESTFUL",
        "web",
        "services",
        "clients",
        "function",
        "AMQP",
        "messages",
        "RabbitMQ",
        "JMS",
        "message",
        "edge",
        "device",
        "Configured",
        "Docker",
        "container",
        "service",
        "pipe",
        "line",
        "Jenkins",
        "CICD",
        "tool",
        "integrating",
        "application",
        "servers",
        "Docker",
        "hub",
        "Docker",
        "images",
        "images",
        "middleware",
        "installations",
        "domain",
        "configurations",
        "Authenticating",
        "Users",
        "security",
        "web",
        "services",
        "JSON",
        "Web",
        "Tokenizer",
        "Responsible",
        "modules",
        "IBM",
        "MQ",
        "Apache",
        "Kafka",
        "Kafka",
        "adaptors",
        "application",
        "dependency",
        "metrics",
        "collection",
        "mechanism",
        "server",
        "Apache",
        "Kafka",
        "serverside",
        "events",
        "Kibana",
        "logging",
        "monitoring",
        "Elasticsearch",
        "analytics",
        "visualization",
        "users",
        "cluster",
        "container",
        "management",
        "tool",
        "Kubernetes",
        "Zero",
        "downtime",
        "Deployment",
        "Created",
        "instances",
        "AWS",
        "EC2",
        "AWS",
        "s3",
        "buckets",
        "access",
        "files",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "code",
        "Environments",
        "Deployed",
        "EC2",
        "instances",
        "AWS",
        "environment",
        "security",
        "groups",
        "Amazon",
        "VPCs",
        "Spring",
        "Cloud",
        "Netflix",
        "ZUUL",
        "microservices",
        "Netflix",
        "OSSOpen",
        "Source",
        "Software",
        "changes",
        "deployment",
        "JIRA",
        "bug",
        "system",
        "history",
        "bugsissues",
        "basis",
        "Log4js",
        "logging",
        "error",
        "messages",
        "Unit",
        "Test",
        "Cases",
        "Jasmine",
        "Karma",
        "Testing",
        "Frameworks",
        "Angular",
        "Involved",
        "unit",
        "testing",
        "layers",
        "JUnit",
        "Easy",
        "Mock",
        "test",
        "scripts",
        "integration",
        "testing",
        "Selenium",
        "Environment",
        "Cassandra",
        "DB",
        "MySQL",
        "DB",
        "HTML",
        "CSS3",
        "Typescript",
        "Redux",
        "NPM",
        "Spring",
        "Docker",
        "Jenkins",
        "REST",
        "Spring",
        "Boot",
        "Jersey",
        "Mocha",
        "Chai",
        "AWS",
        "JIRA",
        "Junit",
        "Mockito",
        "Java",
        "Developer",
        "American",
        "Automobile",
        "Association",
        "Lake",
        "Mary",
        "FL",
        "April",
        "November",
        "Description",
        "American",
        "Automobile",
        "Association",
        "automobile",
        "Insurance",
        "company",
        "Lake",
        "Mary",
        "Florida",
        "role",
        "support",
        "production",
        "systems",
        "tests",
        "application",
        "codes",
        "codes",
        "design",
        "specifications",
        "Responsibilities",
        "analysis",
        "outline",
        "advancement",
        "testing",
        "periods",
        "application",
        "improvement",
        "SDLC",
        "Agile",
        "Scrum",
        "procedure",
        "Frontend",
        "pages",
        "HTML",
        "SAAS",
        "J",
        "Query",
        "JavaScript",
        "Used",
        "AJAX",
        "Custom",
        "HTML",
        "Helper",
        "Classes",
        "calls",
        "server",
        "changes",
        "Module",
        "administrator",
        "access",
        "rights",
        "users",
        "credentials",
        "AJAX",
        "Controls",
        "Script",
        "Manager",
        "Update",
        "Panel",
        "GUI",
        "Spring",
        "MVC",
        "MVC",
        "Design",
        "Pattern",
        "ModelValue",
        "Objects",
        "MVC",
        "Design",
        "Pattern",
        "Spring",
        "Framework",
        "concepts",
        "Dependency",
        "Injections",
        "Spring",
        "IoC",
        "Containers",
        "Transaction",
        "Management",
        "Declaratives",
        "annotations",
        "Spring",
        "Batch",
        "xml",
        "files",
        "data",
        "base",
        "records",
        "Quartz",
        "Scheduler",
        "serverside",
        "validation",
        "web",
        "forms",
        "annotation",
        "approach",
        "Spring",
        "IOC",
        "core",
        "business",
        "application",
        "logic",
        "Advice",
        "methods",
        "Spring",
        "AOP",
        "Ibatis",
        "ORM",
        "Framework",
        "database",
        "database",
        "mapping",
        "entities",
        "annotations",
        "Wrote",
        "SQL",
        "Queries",
        "procedures",
        "packages",
        "Oracle",
        "database",
        "experience",
        "integration",
        "tools",
        "Apache",
        "CXF",
        "Apache",
        "Camel",
        "Spring",
        "Integration",
        "Mule",
        "ESB",
        "enterprise",
        "application",
        "technologies",
        "JVM",
        "environment",
        "SOAP",
        "services",
        "JAXWS",
        "Apache",
        "CXF",
        "framework",
        "data",
        "representation",
        "XML",
        "format",
        "Configured",
        "Log4j",
        "information",
        "code",
        "base",
        "security",
        "functionality",
        "projects",
        "Site",
        "minder",
        "SSO",
        "Application",
        "Cloud",
        "Foundry",
        "development",
        "platform",
        "Load",
        "Balancer",
        "Cloud",
        "Foundry",
        "performance",
        "reliability",
        "server",
        "instance",
        "HAProxy",
        "test",
        "environments",
        "cloud",
        "Foundry",
        "function",
        "AMQP",
        "messages",
        "Rabbit",
        "MQ",
        "JMS",
        "message",
        "Apache",
        "MQ",
        "edge",
        "device",
        "Rabbit",
        "MQ",
        "transport",
        "data",
        "Queue",
        "components",
        "application",
        "unit",
        "Testing",
        "JUnit",
        "systems",
        "JMock",
        "Mockito",
        "code",
        "changes",
        "Unit",
        "Tests",
        "Environment",
        "HTML",
        "CSS3",
        "JQuery",
        "JavaScript",
        "Agile",
        "AJAX",
        "HTML",
        "Spring",
        "MVC",
        "Spring",
        "Container",
        "Spring",
        "AOP",
        "HQL",
        "Hibernate",
        "SQL",
        "Log4j",
        "Cloud",
        "Foundry",
        "Rabbit",
        "MQ",
        "Apache",
        "MQ",
        "J",
        "Mock",
        "Mockito",
        "Java",
        "Developer",
        "Faujnet",
        "Solutions",
        "Hyderabad",
        "Telangana",
        "November",
        "October",
        "Description",
        "Hospital",
        "Management",
        "System",
        "Super",
        "Specialty",
        "Hospital",
        "package",
        "activities",
        "servicing",
        "system",
        "package",
        "modules",
        "Administration",
        "Patient",
        "Care",
        "System",
        "Health",
        "Services",
        "Auxiliary",
        "Services",
        "module",
        "sub",
        "modules",
        "sub",
        "modules",
        "details",
        "details",
        "day",
        "activities",
        "database",
        "Responsibilities",
        "application",
        "J2EE",
        "design",
        "patterns",
        "technologies",
        "MVC",
        "Monolithic",
        "architecture",
        "Front",
        "end",
        "UI",
        "HTML",
        "CSS",
        "Jquery",
        "Java",
        "script",
        "methodology",
        "development",
        "application",
        "application",
        "principles",
        "design",
        "patterns",
        "MVC",
        "Business",
        "Delegate",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Object",
        "Singleton",
        "Abstract",
        "Factory",
        "Stored",
        "Procedures",
        "Functions",
        "JDBC",
        "database",
        "Server",
        "database",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Views",
        "SQL",
        "database",
        "end",
        "interfaces",
        "PLSQL",
        "packages",
        "procedures",
        "functions",
        "PLSQL",
        "programs",
        "Cursor",
        "management",
        "Exception",
        "Handling",
        "PLSQL",
        "programs",
        "features",
        "Spring",
        "Dependency",
        "Injection",
        "IOC",
        "Annotations",
        "Spring",
        "Integration",
        "Struts",
        "application",
        "Struts",
        "Framework",
        "ModelViewController",
        "MVC",
        "architecture",
        "persistence",
        "layer",
        "database",
        "service",
        "layers",
        "IBatis",
        "ORM",
        "user",
        "interfaces",
        "JSPs",
        "JSTL",
        "custom",
        "tags",
        "custom",
        "user",
        "interfaces",
        "Eclipse",
        "JSPs",
        "Servlets",
        "Struts",
        "IBM",
        "WEB",
        "SPHERE",
        "server",
        "development",
        "phase",
        "Spring",
        "Security",
        "framework",
        "setup",
        "authentication",
        "authorization",
        "application",
        "sign",
        "Dependency",
        "Injection",
        "components",
        "bean",
        "life",
        "cycle",
        "application",
        "Spring",
        "IOC",
        "Protection",
        "session",
        "fixation",
        "cross",
        "site",
        "request",
        "forgery",
        "application",
        "Spring",
        "Security",
        "modularity",
        "cross",
        "concerns",
        "transaction",
        "management",
        "logging",
        "Spring",
        "AOP",
        "development",
        "underwriting",
        "process",
        "communications",
        "side",
        "systems",
        "message",
        "Beans",
        "processing",
        "data",
        "IBM",
        "MQ",
        "JMS",
        "Java",
        "Mail",
        "thirdparty",
        "command",
        "line",
        "email",
        "email",
        "application",
        "Wrote",
        "Unit",
        "test",
        "cases",
        "JUnit",
        "Mockito",
        "framework",
        "ANT",
        "build",
        "deployment",
        "IBM",
        "WebSphere",
        "EJB",
        "Session",
        "Beans",
        "request",
        "user",
        "interface",
        "OSS",
        "UNIX",
        "Shell",
        "Scripts",
        "batch",
        "jobs",
        "data",
        "servers",
        "JTA",
        "transactions",
        "resources",
        "java",
        "environment",
        "Environment",
        "HTML",
        "CSS",
        "J",
        "query",
        "Java",
        "script",
        "DB2",
        "JDBC",
        "PLSQL",
        "JPA",
        "EJB",
        "Struts",
        "JSP",
        "Servlets",
        "Java",
        "Mail",
        "UNIX",
        "Shell",
        "Scripts",
        "JTA",
        "ANT",
        "IBM",
        "Web",
        "sphere",
        "IBM",
        "MQ",
        "JMS",
        "J2EE",
        "IBatis",
        "IBM",
        "WebSphere",
        "SOPA",
        "WSDL",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Junit",
        "Mokito",
        "Associate",
        "Software",
        "Engineer",
        "Intergraph",
        "Hyderabad",
        "Telangana",
        "July",
        "October",
        "Description",
        "Intergraph",
        "Corporation",
        "software",
        "development",
        "services",
        "company",
        "enterprise",
        "engineering",
        "software",
        "businesses",
        "governments",
        "organizations",
        "world",
        "role",
        "development",
        "life",
        "cycles",
        "code",
        "designs",
        "compliance",
        "specifications",
        "Responsibilities",
        "requirements",
        "discussion",
        "sessions",
        "Coordinate",
        "BA",
        "group",
        "understanding",
        "requirements",
        "Analyze",
        "business",
        "requirements",
        "document",
        "GUI",
        "user",
        "interfaces",
        "JSP",
        "CSS",
        "HTML",
        "JavaScript",
        "part",
        "view",
        "development",
        "enhancements",
        "modules",
        "coding",
        "JavaScript",
        "validations",
        "Java",
        "Servlets",
        "J2EE",
        "Standards",
        "Struts",
        "framework",
        "production",
        "support",
        "issues",
        "applications",
        "Development",
        "Action",
        "Forms",
        "Action",
        "Servlets",
        "Action",
        "Action",
        "Forms",
        "Struts",
        "framework",
        "Multithreading",
        "requests",
        "performance",
        "procedures",
        "jobs",
        "applications",
        "reports",
        "customers",
        "database",
        "interaction",
        "layer",
        "insertions",
        "retrieval",
        "operations",
        "data",
        "oracle",
        "database",
        "procedures",
        "model",
        "components",
        "session",
        "beans",
        "message",
        "MDB",
        "EJB",
        "Responsible",
        "Servlets",
        "submittals",
        "Enterprise",
        "Java",
        "Bean",
        "EJB",
        "components",
        "information",
        "JMS",
        "information",
        "SQL",
        "Queries",
        "procedures",
        "Triggers",
        "SQL",
        "SERVER",
        "MDB",
        "messages",
        "Java",
        "message",
        "queue",
        "JDBC",
        "Oracle",
        "database",
        "customer",
        "information",
        "JUnit",
        "test",
        "cases",
        "ANT",
        "application",
        "migration",
        "document",
        "migration",
        "packages",
        "objects",
        "production",
        "environment",
        "Environment",
        "Spring",
        "Java",
        "HTML5",
        "CSS3",
        "Hibernate",
        "Tomcat",
        "SQL",
        "Server",
        "Eclipse",
        "Apache",
        "CXF",
        "Microsoft",
        "Vision",
        "Spring",
        "Security",
        "Accenture",
        "estimator",
        "jQuery",
        "AWS",
        "Education",
        "Masters",
        "Texas",
        "AM",
        "University",
        "Bachelors",
        "Electrical",
        "Electronics",
        "Engineering",
        "MVSR",
        "Engineering",
        "Osmania",
        "University",
        "Hyderabad",
        "Telangana",
        "Skills",
        "ECLIPSE",
        "EJB",
        "J2EE",
        "HIBERNATE"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:31:43.918647",
    "resume_data": "Java Developer Java span lDeveloperspan Java Developer CenturyLink Corporate Headquarters Monroe LA Java Developer having around 7 years of experience in Application Analysis Design Development Integration Deployment and Maintenance Standalone and ClientServer based Software Applications Strong experience in User Interface development using web technologies like HTML5 CSS3SAASLESS BOOTSTRAP JAVASCRIPT JQUERY AJAX Good understanding of JavaScript ES6 arrow functions blockscoped constructs template literals promises multiline strings and ES7 async functions Observables Object RestSpread Properties Expertise in analyzing and debugging the DOM Layout JavaScript functions Cascading Styles across crossbrowser using chrome inspector and other developer tools Experience in applying the latest software development approaches including MVC MVVM event driven applications using AJAX Object Oriented OO JavaScript JSON Experience in using Web Services RESTFUL web services Proficient in Object Oriented DesignDevelopment OOD Object Oriented Analysis and Design OOAD Model View Control MVC design pattern and TestDrivenDevelopment TDD Expertise in using Node JS with Express JS or Hapi JS which provides a robust set of features for web and mobile applications Expertise in using Java script build tools like Grunt Gulp and Bower as an automation tools for performing repetitive tasks in unit testing Experienced in all phases of usability testing including user profiles and personals task analysis contextual research test moderation and reporting using Mocha and Chai for Node JS Experience with Core Java Multithreading Transaction Management Exception Handling Concurrency Collections Data structures Lambda Expressions Functional Interfaces and JDBC Strong experience in Microservice SOA architecture and Cloud Native application design development testing and deployment of webbased and Enterprise ClientServer business applications using OOP JavaJ2EE technologies Expertise in developing SOA Service Oriented Architecture and Microservices architecture using J2EE Web Services based on Restful JAXRS SOAP JAXWS JAXRPC and JAXR Java API for XML Registries using frameworks like Apache CXF Jersey Axis and Spring framework NodeJS Express JS Hapi JS Solid experience in using the Spring AOP facets Transactional Management Logging Security and Authentication Expertise in using Spring Boot to create standalone applications and for building web service and created dynamic documentation for RESTful webservice using Swagger API using Spring Boot Used Spring Boot which is radically faster in building cloud Micro services and develop Spring based application with very less configuration Implemented Spring Boot Actuator to monitor and manage the application Implemented microservices using RESTful API with Spring Boot and Apache CFX Integrated micro services with Hibernate ORM using Spring Boot and wrote HQL queries for data access Strong experience in Spring Framework modules such as Spring MVC Spring IOC AOP and Spring JDBC Spring Data Spring REST Spring JTA Spring IO Spring Security Spring Boot Extensive experience in developing scalable reliable efficient web and enterprise applications using frameworks like JSP EJB Java Persistence API JNDI JMS Struts JSF Prime Faces and Spring Community framework projects Experience in understanding and using NoSQL databases like Mongo DB Apache Cassandra DynamoDB Couch DB and Redis Good knowledge on working with Relational database ORM frameworks like Hibernate JPA Spring Data Ibatis and NoSQL ORM frameworks like Mongoose connector Cassandra Node Driver Better understanding of implementation using Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Expertise in using Hystrix circuit breaker library for lowering network latency and fault tolerance and Zuul gateway for routing monitoring security Experience in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and Apache Camel to integrate the enterprise application technologies with existing JVM environment Building realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite Hands on experience in implementation of PCF Pivotal Cloud Foundry PAAS Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Well experienced in using various AWS Amazon Web Services IAAS Infrastructure As a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Used Kubernetes Linux container for deploying and scaling containerized applications Implemented Docker container service build pipe line Jenkins Bamboo and GoCD for Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Good experience using Docker for installing upgrading testing removing and running software applications Good understanding of OpenShift platform in managing Docker containers and Kubernetes Clusters Good experience on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Well experienced with build tools like Gradle Maven and ANT Good practical experience with Javabased logging utility ie log4J Unit tested web services using Junit Mockito Easy mock Spring Junit Runner Test NG and hence achieved the goals of Test Driven Development TDD Work Experience Java Developer CenturyLink Corporate Headquarters Monroe LA July 2018 to Present Description Serves as a technical team member in the planning designing developing implementing andor supporting complex to moderately complex new or revised processes systems or networks Ensures functional and technical designs support customer requirements Develops an understanding of the Auto Club Group business strategy and competitive environment and translate and implements business strategies into technology solutions My role is to assist in development of various applications and maintain quality for same and perform trouble shot to resolve all application issues Responsibilities The application is developed on Micro Service Oriented Architecture using Spring Boot and Node JS Cassandra and MySQL to integrate and communicate with the already existing applications Implemented the associated business modules integration using Spring Boot and Oracle Cassandra Used Spring Dependency Injection annotations and Spring MVC components to implement business layer and navigation part of application Developed several RESTful API web services which produces both XML and JSON to perform tasks leveraged by both web and mobile applications Documented the REST APIs using Swagger2 API for briefing the services involved in the application Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernate second level EH Cache Used Redis for caching and Elastic Search which resulted in enhanced performance of the application Implemented Rabbit MQ Services for reliable and asynchronous exchange of important information such as payment status report Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Developed data transformer for converting legacy data from Source tables to Avro format and fed into Kafka using Camel to process the file for multiple routes to different host locations Implemented Spring Netflix Zuul API gateway and Eureka service registry for reverse proxy and Dynamic service discovery of APIs Implemented Spring Security OAuth 20 and OIDC Token mechanism for authentication and authorizing for social websites logins using Spring Social module Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code Pipeline and Amazon ECS Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Created AWS Lambda functions for AWS config rules using Nodejs Heavily used Lambda function on text object methods Context object properties using Nodejs Developed Unit test cases using Junit Cucumber for Spring Used MOCKITO to mock interfaces so that a dummy functionality can be added to a mock interface that can be used in Unit testing Responsible for developing GUI user interfaces using JSP CSS HTML part of view development for the new enhancements or new modules Also carried out validations of user requests using JavaScript Designing and implementing the User Interface using HTML CSSCSS3 SASS and Bootstrap for responsive design for the exposed enterprise application Involved in the development of presentation layer and GUI responsive development using JSP HTML5 CSSCSS3 Bootstrap Used Spring Data JPA as the ORM framework to connect with MYSQL database and Cassandra data node to connect with Cassandra database and Verified data integrity on Cassandra cluster while batch loading Implemented GraphQL server using Relay framework that allows us to query the multiple RESTful API backends asynchronously without having to write promise logic that avoids cumbersome call backs Used various jQuery and Bootstrap plugin like date picker Bootstrap selectors for responsive designing in usage of different devices Created a new cluster and container management tool using Kubernetes for Zero downtime Deployment Used Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application in the cloud Experience in Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Environment HTML5 CSS 3 JavaScript AWS S3 NPM Gulp Expressjs RESTful Web Services Web Pack Babel Spring Boot Jersey Micro Services Rest Services AWS Node JS GitHub JIRA Jenkins Swagger Netflix OSS Eureka ribbon Zuul Api gateway hystrix circuit breaker docker Java Developer CGI Lafayette LA December 2017 to June 2018 Description Develop applications and components based on using a Java technology stack and develop high quality service oriented architecture and microservices Implement new features in a collaborative team environment with product managers UIUX designers business analyst and testers Proactively recommend new product features to improve quality performance and the user experience Ensures that software meets or exceed specified standards and enduser requirements Responsibilities Developed the frontend featuring rich web interface implemented using HTML CSS3 and Bootstrap for responsive design Implement the MERN web application using technologies MongoDB Hapi JS Node JS along with HTML5 CSS3 JavaScript jQuery Bootstrap and other web technologies Closely worked with Application using Nodejs libraries NPM gulp directories to generate desired view Used Node JS along with Hapi JS to achieve reusability and gain centralized logic and Implemented generating the verification hash code using crypto package on Node JS and added user validations and user permissions by using Node JS Worked with Node JS framework including authoring complex directives services controllers and filters Developed readable and writable streams of Node JS to process the data from external means of the application Configured Hapi JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Migrating existing application into REST based Microservices to provide all the CRUD capabilities using Spring Boot Worked with Microservice architecture using Spring Boot to modularized code and deployed microservices using Spring Boot to get range of nonfunctional features and used Spring Rest to create rest producers and rest Clients using Spring RestTemplate Involved in webservices design and development Responsible for creating and consuming web services using REST and XML Worked in integrating JMS with SPRING BOOT by providing an instance which is embed with Active MQ Designed and developed RESTFUL web services using Spring Boot and Jersey framework Used Swagger specification for documenting REST APIs which exposes description of a RESTFUL web services to different clients Implemented the function to send and receive AMQP messages on RabbitMQ synchronously asynchronously and send JMS message on the edge device Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Worked on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Authenticating Users and to provide the security to RESTful web services using JSON Web Tokenizer Responsible for migrating existing modules in IBM MQ to Apache Kafka and worked on creating Kafka adaptors for decoupling the application dependency Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch upon MongoDB for analytics and visualization of the users login Created a new cluster and container management tool using Kubernetes for Zero downtime Deployment and Created instances for AWS EC2 and created AWS s3 buckets to monitor the access to the hosted files Used Amazon Web Services AWS for promoting code in various Environments Deployed EC2 instances provisioning on AWS environment and implemented security groups administered Amazon VPCs Implemented Spring Cloud Netflix ZUUL to building microservices to communicate with each other Implemented Netflix OSSOpen Source Software for Feasible changes after the deployment Used JIRA as the bug tracking system to track and maintain the history of bugsissues on everyday basis and used Log4js for automated logging of error messages Automated different Unit Test Cases using Jasmine and Karma Testing Frameworks on Angular Involved in creating unit testing of various layers using JUnit with Easy Mock and created automated test scripts for integration testing using Selenium Environment Cassandra DB MySQL DB HTML CSS3 Typescript Redux NPM Spring Docker Jenkins REST Spring Boot Jersey Mocha Chai AWS RabbitMQ JIRA Junit Mockito Java Developer American Automobile Association Lake Mary FL April 2016 to November 2017 Description American Automobile Association is an automobile Insurance company headquartered in Lake Mary Florida My role is to provide technical support to all production systems and perform various tests on all application codes and design new codes for all design specifications Responsibilities Involved in analysis outline and advancement and testing periods of the application improvement SDLC utilizing Agile Scrum procedure Developed Frontend pages using HTML CSS3using SAAS J Query and JavaScript Used AJAX and Custom HTML Helper Classes to implement asynchronous calls to the server to update the changes Developed a Module that enables the administrator to provide access rights to users based on their credentials Used AJAX Controls like Script Manager and Update Panel to develop the GUI Used Spring MVC to implement MVC Design Pattern and responsible for creating ModelValue Objects in MVC Design Pattern Worked on Spring Framework handling major concepts like Dependency Injections Spring IoC Containers Transaction Management Declaratives annotations based Worked with Spring Batch to convert xml files to data base records using Quartz Scheduler Worked on serverside validation using various web forms through annotation based approach Implemented the Spring IOC for the core business application logic and created various Advice before after methods as required using Spring AOP Used Ibatis ORM Framework to interact with database and used for connecting to the database and mapping the entities by using annotations Wrote SQL Queries PLSQL stored procedures triggers packages on Oracle database Strong experience in integration tools like Apache CXF Apache Camel Spring Integration and Mule ESB to integrate the enterprise application technologies with existing JVM environment Developed SOAP services with JAXWS using Apache CXF framework with data representation in XML format Configured Log4j for adding the debugging information in the code base and Implemented security functionality for various projects using Site minder SSO Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Used Load Balancer in Pivotal Cloud Foundry to improve the performance and reliability of the server and deployed a single instance of HAProxy for test environments in pivotal cloud Foundry Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Used Rabbit MQ for transport of data in Queue in between components of the application Performing unit Testing utilizing JUnit and ridiculing systems like JMock and Mockito and ensured code changes wont break existing Unit Tests Environment HTML CSS3 JQuery JavaScript Agile AJAX HTML Spring MVC Spring Container Spring AOP HQL Hibernate SQL Log4j Pivotal Cloud Foundry Rabbit MQ Apache Active MQ J Mock Mockito Java Developer Faujnet Solutions Hyderabad Telangana November 2013 to October 2015 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules within this sub modules will maintain storing registering details of joining patient details and over all day activities maintains a database Responsibilities The application is designed using J2EE design patterns and technologies based on MVC based Monolithic architecture Front end interactive UI is developed using HTML CSS Jquery and Java script Agile methodology is used for development of the application Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Implemented persistence layer between the database and service layers with IBatis ORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Involved in the development of underwriting process which involves communications without side systems and developed message Driven Beans for receiving and processing data using IBM MQ JMS Implemented Java Mail and used its thirdparty command line email to automate email sending and receiving in the application Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere EJB Session Beans were used to process request from user interface using OSS Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment Environment HTML CSS J query Java script DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Java Mail UNIX Shell Scripts JTA ANT IBM Web sphere IBM MQ JMS J2EE IBatis IBM WebSphere SOPA WSDL Spring IOC Spring AOP Junit Mokito Associate Software Engineer Intergraph Hyderabad Telangana July 2012 to October 2013 Description Intergraph Corporation is an American software development and services company It provides enterprise engineering and geospatially powered software to businesses governments and organizations around the world My role is to contribute to the entire development life cycles write well designed testable and efficient code I should ensure that designs are in compliance to the specifications Responsibilities Involved in requirements gathering and analyzing them in the discussion sessions Coordinate with BA group for better understanding of functional requirements Analyze and Design the business requirements to document and implement Responsible for developing GUI user interfaces using JSP CSS HTML JavaScript part of view development for the new enhancements or new modules Involved in the extensive coding of JavaScript to handle the clientside validations Developed Java Servlets and objects using J2EE Standards Worked on Struts framework and production support issues of the existing applications Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Implemented Multithreading for handling multiple requests and for high performance Created many Stored procedures and scheduled jobs to support our applications for to create reports for customers Worked on database interaction layer for insertions updating and retrieval operations of data from oracle database by writing stored procedures Developed model components using session beans and used local message driven beans MDB to interact to session using EJB Responsible in creating Servlets which route submittals to appropriate Enterprise Java Bean EJB components and render retrieved information JMS is used for exchanging the information Successfully wrote and implemented SQL Queries Stored procedures and Triggers in SQL SERVER Designed and developed MDB that consumed the messages from the Java message queue Used JDBC to access Oracle database for accessing customer information Involved in coding for JUnit test cases ANT for building the application Created migration document and supported the migration of packages and objects to production environment Environment Spring 3x Java 6 HTML5 CSS3 Hibernate 30 Tomcat 70 My SQL Server Eclipse Apache CXF Microsoft Vision Spring Security Accenture estimator jQuery and AWS Education Masters Texas AM University Bachelors in Electrical and Electronics Engineering in MVSR Engineering Osmania University Hyderabad Telangana Skills ECLIPSE EJB J2EE JAVA HIBERNATE",
    "unique_id": "0c1d352a-c5cb-49e1-a495-193103a107fe"
}