{
    "clean_data": "JavaJ2EE Developer span lJavaspanJ2EE span lDeveloperspan Atlanta GA Authorized to work in the US for any employer Work Experience JavaJ2EE Developer Incomm November 2014 to Present 7 years of Highly Creative Motivated Versatile IT Professional with as a Full Stack Developer on Developing Implementing and maintenance of various Web based and ClientServer based business applications using JavaJ2EE Technologies Full Versatile with Software Development Life Cycle SDLC methodologies like Agile Waterfall and TestDriven Development TDD in both the Web and Enterprise based applications Extensive experience of AWS cloud services like EC2 Cloud watch Cloud Formation S3 VPC ELB AMI SNS RDS IAM Lambda Route 53 and managing security groups on AWS Expertise in Scripting Language like HTML5 CSS3 JavaScript jQuery Ajax AngularJS 24 JSP NodeJS Bootstrap Hands on building Enterprise Applications and Distributed Systems using technologies such as Core Java J2EE Servlets JSP JSF EJB STRUTS Hibernate SPRING SPRING MVC JDBC JMS and XML Utilized Java 8 features like Lambda expressions and Stream API for Bulk data Operations on Collections which would increase the performance of the Application Extensive knowledge of XMLbased standards and protocols such as WSDL and SOAP Service Oriented Architecture SOA development of XSD schemas and implementing both SOAP and REST web services Experience using Spring Modules Spring MVC Spring Boot Spring DAO Spring Data Spring IOC Spring Annotations Spring AOP Spring Transactions and Spring Security Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud High experience in using frameworks like Struts Spring MVC Hibernate and Design Patterns such as MVC Session Faade Front Controller Data Access ObjectDAO Value Object Singleton Service locator for executing multitier highly scalable component based Service driven Enterprise Java application Experience in writing ANT Maven build scripts and configuring them using Log4j and writing JUnit test cases Experience in working with NoSQL database like MongoDB Cassandra Worked on various web servers like WebSphere 609 Tomcat Web Logic JBOSS Experience on Junit Selenium in performing Unit testing Automation testing and have good knowledge of Root cause analysis Strong experience in Finance Health Telecommunication and other domains using diverse technologies Experience in developing applications using different IDEs like Eclipse RAD and Intellij Strong interpersonal skills the ability to interact with people at all levels and strong communication and presentation skills Education Bachelors in Information Technology in Information Technology VIT University Skills Java J2Ee Java J2Ee Spring Hibernate Additional Information TECHNICAL SKILLS Programming Languages C Java 15 18 J2EE PLSQL Web Technologies HTML5 CSS3 XML JavaScript JSP JSTL jQuery AJAX AngularJS24 NodeJS Frame Works Struts 20 JSF 12 Spring 20 40 Hibernate 30 43 and JUnit 45 Microservices Spring Boot Spring Rest Databases Oracle 10g11g MYSQL MongoDB Cassandra WebApplication Servers Apache Tomcat IBM Web Sphere and JBoss Testing JUnit Mockito Selenium Development Tools Eclipse Net Beans IntelliJ Version control GitHub Tortoise SVN Apache Subversion and CVS Bug tracking JIRA Visual studio Tools Utilities Apache Maven Gradle Jenkins ANT and Postman SonarQube spot bugs Operating Systems Windows 710 MacOS Unix and Linux INCOMM ATLANTA GA Nov 2014 Present JavaJ2EE Developer Description InComm is the industry leader in gift card business Generation of Inventory for all InComm transaction processing systems The project is to implement manage User requests generates user data build rule actions allows user access to generated inventory Involved in all the phases of SDLC including Requirements Collection Design Analysis of the Customer Specifications Development and Customization of the Application using SOA Developed frontend content using HTML CSS Angular JS Bootstrap JavaScript jQuery Designed and developed client side application in a clean MVC architecture and responsive web pages using Bootstrap System builds using Spring Model View Controller MVC architecture Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface and Spring AOP for reusability logging purpose Used Spring Core JBPM multithreading as part of enhancing Bundler process with in Content Management System Used ReactJS to create Controllers to handle events triggered by clients and send request to server Wrote business rules using Drools and business logic processing customs declarations Participated in development of a well responsive single page application using ReactJS framework Designed and implemented business rules using DROOLS framework Used Hibernate ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented and developed Restful web services with JAXRS using Jersey as provider and implemented security Developed and Consumed SOAP based Web Services with JAXWS specification Implemented and developed DAO layer using Spring Integration and Hibernate to persist the data to the database Implemented JBOSS application server integration with jBPM process engine and eclipse IDE Worked with java Java8 using Spring Spring MVC Multithreading DBC Hibernate RESTFul Web Services and SOAP Web Services Designed and developed Microservices business components using Spring Boot Designed and prototyped parts of a NoSQL database with Sinfoniastyle coordination Designed and implementation of lowlatency highavailability and performant applications by using Nodejs Written complex SQL queries HQL created business tables and PLSQL procedures to store and retrieve data from the database Developed service infrastructure components in Typescript for a unified web UI initiative Implemented Service Oriented Architecture using JMS for sending and receiving messages while creating web services Created forms to collect and validate data from the user in HTML5 and ReactJS Developed JUnit test cases for elements web beans handlers and view helper classes Used GIT to maintain the version of files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Designed and maintained databases and tested and implemented applications built using Python Wrote internal and external API services using Nodejs modules Implemented MicroServices architecture using Spring Boot for making application smaller and independent Developed single page web applications by using Angular with typescript and jQuery Configured development environment using Web Sphere Application server for developers integration testing Used Maven as build automation tool Involved in enhancementmodification of the product as per the client requirements Environment Java 8 J2EE HTML CSS JavaScript jQuery Spring Core Spring Security Spring MVC Spring IOC REST SOAP JAXRS JAXWS Web Services TypeScript ReactJS NodeJS Jersey JMS Rabbit MQ Service Oriented Architecture GroovyGrails Maven Drools JBPM Web Sphere Application Server GIT NoSQL Python Agile Methodology and Eclipse OPTUMCARE MINNEAPOLIS MN Jul 2013 Oct 2014 Full Stack Java Developer Description Optum is a behemoth in the healthcare industry over 5000 hospitals in its portfolio Optum works with about 300 health plans It is a health care organization that meets patients where they are with care services including primary urgent care and advanced careThe project is about patient portal where you can look at patient personal details medication claiming of medical insurance HMO and Medicare Advanced Plans Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Extensively used Core Java 18 concepts and implemented Collections IO Exception Handling and Generics in logic design and development Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Involved in designing the client side module architecture based on new Angular 24 Framework Used Jersey to implement Restful Web Service and used JSON form to transfer the data All the functionality is implemented using Spring Boot Micro Services and Hibernate ORM Used Spring Core Annotations for Spring DI Spring MVC for REST APIs and Spring Boot for Microservices Installed and configured JBOSSDrools server with MySQL Oracle persistence Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring MVC module to develop MVC Architecture Using Hibernate ORM tool for Memory mapping objectoriented domain model to relational database Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Rest Controllers to replace the existing operations layer which acts as bridge between business layer and the UI Used MongoDB as data storage and utilized aspects like replica sets sharing and clever document design to make service extensible scale and feature wise Developed Unit Test Cases Used JUnit for unit testing of the application Created UNIX shell scripting for periodic generation of reports Deployed Spring Boot based Micro services Docker container using Amazon EC2 container services and using AWS admin console Setting up the automatic build and deployment automation of project by using JENKINS and Maven Experience on implementation of version control software GIT repositories Provided Technical support for production environments resolving the issues analyzing the defects providing and implementing the solution defects Environment JAVA 17 AWS HTML5 CSS3 JAVASCRIPT ANGULAR 24 MICROSERVICES RESTFUL WEB SERVICES HIBERNATE 42 SPRING 4 SPRING BOOT SPRING MVC ORACLE 11G MONGODB Drools TOMCAT KAFKA MAVEN JENKINS JIRA LOG4J JUNIT TESTNG GIT CAPITAL ONE MCLEAN VA Dec 2012 Jun 2013 JavaJ2EE Developer Description Capital One an American Financial bank holding company specializing in credit cards auto loans banking and savings It is the eighthlargest commercial bank in the United States The current application is a part of online banking that a customer leverages to set up his online account and make ebills payment as well as intra account transfers As a part of the Online Banking Software Development Team I helped with various responsibilities to develop a robust functional application code Involved in Design Development and Support phases of Software Development Life Cycle SDLC Application is implemented using Agile Methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Created webpages pages using HTML5 CSS3 JavaScript Restful and AJAX to create interactive frontend GUI Involved in writing Java API for Amazon Lambda to manage some of the AWS services Used AWS Lambda to run the code in the AWS Developed application using Drop Wizard Gradle Hibernate Web Services RESTFUL Worked on Swagger API and autogenerated documentation for all REST calls Developed Spring Configuration files used annotations to auto wire Java Components using Drop Wizard Involved in developing latest version of Object Oriented JavaScript Libraries like Angular 2 and had hands on experience with Web Responsive using Bootstraps templates Created Multiple Reusable UI Directives by defining Angular 2 Directives Attaching Event Listeners Controllers Updating DOM elements Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Designed and developed Micro Services business components and RESTful service endpoints using spring boot Developed the persistence layer using Hibernate Framework by configuring the mappings in hibernate files and created DAO and POJO Involved in writing database connection classes for interacting with Oracle database Incorporated Singleton Pattern to implement the database access classes Imported data from various resources to the Cassandra cluster using Java APIs Used JUnit for unit testing the application and used Log4j tool for debugging the application and measure the Test coverage Implementing the Coding standards review the code by SonarQube and fixing all the code review bugs Working on Google Voice for dependency Injection Used Git as the version control tool Environment JAVA 16 J2EE HTML5 CSS3 JAVSCRIPT ANGULAR JS AJAX SPRING MVC SPRING BOOT SPRING AOP SPRING BATCH RESTFUL HIBERNATE 36 Oracle Cassandra JUNIT 49 KARMAJASMINE APACHE CAMEL GITLAB 70 MAVEN JENKINS AXIS BANK HYDERABAD INDIA JUNE 2011 Nov 2012 Java Developer Description AXIS bank provides funds or loans to people with small business requirements Applicants get their loans sanctioned based on their credit history The applicant information is maintained in a database along with the details of the loan for repayment This data is filtered and that data is used for statistics for generating reports Worked in Waterfall Software Development methodology Involved in prototyping proof of concept design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Designed and developed front view components using HTML CSS JavaScript and JSP Developed Interactive web pages using AJAX and JavaScript Implemented Core Java concepts like Polymorphism Inheritance Multithreading etc Involved in developing various reusable Helper and Utility classes using Java which are being used across all the modules of the application Developed Java classes for implementing Business logics using EJB Stateless session entity message driven beans Deployed and tested the application with web server Tomcat Configured and tested the application with database server Oracle 10g Helped in database design and tuning Created stored procedures Views in the Database Used SVN for version control and developed Scripts by using Ant Involved in communicating with clients daily to ensure their requirements are being met Environment JDK CORE JAVA MULTITHREADING COLLECTIONS JSP SERVLETS XML HTML JAVASCRIPT AJAX EJB 30 UML RAIONAL ROSE JDBC APACHE TOMCAT ORACLE 10G SVN ANT WINDOWS UNIX LINUX",
    "entities": [
        "Micro Services",
        "MAVEN JENKINS AXIS BANK HYDERABAD INDIA JUNE 2011 Nov 2012",
        "JavaJ2EE Developer",
        "AJAX",
        "MVC Session Faade Front Controller Data",
        "Nodejs",
        "BOOT SPRING MVC",
        "the Online Banking Software Development Team",
        "POJO Involved",
        "AWS Developed",
        "Python Wrote",
        "Jersey",
        "Amazon Web Services AWS",
        "Implemented Dependency Injection IOC",
        "Agile Methodology",
        "SOAP",
        "Bootstrap System",
        "Nodejs Written",
        "Coordinate",
        "WSDL and SOAP Service Oriented Architecture SOA",
        "JAXWS",
        "JUnit",
        "Developed Spring Configuration",
        "Stream API for Bulk",
        "Amazon",
        "Developed Unit Test Cases Used JUnit",
        "Work Experience JavaJ2EE Developer Incomm",
        "Spring Boot",
        "Interface Implementation",
        "Hibernate Framework",
        "WebSphere",
        "SQL Server",
        "DAO",
        "Oracle Relational",
        "Ant Involved",
        "MVC Architecture Using Hibernate",
        "DBC Hibernate",
        "Provided Technical",
        "Developed and Consumed",
        "Postman SonarQube",
        "Requirements Collection Design Analysis",
        "HTML5",
        "JavaJ2EE Technologies Full Versatile with",
        "Linux",
        "Oracle 10g Helped",
        "JSP",
        "Bootstraps",
        "Micro",
        "Struts Spring MVC Hibernate and Design Patterns",
        "Bootstrap Hands",
        "Medicare Advanced Plans Involved",
        "SonarQube",
        "UMLRational Rose Designed",
        "Views",
        "Tools Utilities",
        "Content Management System Used",
        "DROOLS",
        "SQLbased",
        "MVC",
        "Finance Health Telecommunication",
        "G SVN ANT WINDOWS",
        "GIT",
        "jQuery Configured",
        "Restful Web Service",
        "API",
        "Web Services",
        "US",
        "HTML CSS JavaScript",
        "Followed Agile Methodology",
        "Operations on Collections",
        "KARMAJASMINE",
        "Drools",
        "Created",
        "IDE Worked",
        "AWS",
        "Spring Boot Micro Services",
        "BOOT SPRING AOP SPRING",
        "Nov 2014",
        "Coding",
        "JSF",
        "Drop Wizard Involved",
        "JENKINS",
        "ClientServer",
        "JBOSSDrools",
        "Created UNIX",
        "EJB Stateless",
        "Information Technology in Information Technology VIT University",
        "Web Responsive",
        "RESTFUL",
        "SQL",
        "Value Object Singleton Service",
        "JAXRS",
        "the United States",
        "Waterfall Software Development",
        "JIRA Visual",
        "American Financial bank",
        "HMO",
        "HTML CSS Angular",
        "Typescript",
        "Sphere Application",
        "Generation of Inventory",
        "Functional Architects Designed Configured",
        "the Customer Specifications Development and Customization of the Application",
        "Software Development Life Cycle SDLC Application",
        "JSP Developed Interactive",
        "Maven",
        "Memory",
        "UML RAIONAL",
        "JavaScript",
        "ANT",
        "Helper and Utility",
        "UI",
        "Collections IO Exception Handling and Generics",
        "XSD",
        "SVN",
        "Working on Google Voice",
        "GUI Involved",
        "REST",
        "Polymorphism Inheritance Multithreading etc Involved",
        "Drop",
        "ATLANTA",
        "Tomcat Configured",
        "NoSQL",
        "Object Oriented JavaScript Libraries like Angular 2",
        "MVC Spring IOC REST SOAP",
        "GitHub Tortoise",
        "Created Multiple Reusable UI",
        "InComm"
    ],
    "experience": "Experience JavaJ2EE Developer Incomm November 2014 to Present 7 years of Highly Creative Motivated Versatile IT Professional with as a Full Stack Developer on Developing Implementing and maintenance of various Web based and ClientServer based business applications using JavaJ2EE Technologies Full Versatile with Software Development Life Cycle SDLC methodologies like Agile Waterfall and TestDriven Development TDD in both the Web and Enterprise based applications Extensive experience of AWS cloud services like EC2 Cloud watch Cloud Formation S3 VPC ELB AMI SNS RDS IAM Lambda Route 53 and managing security groups on AWS Expertise in Scripting Language like HTML5 CSS3 JavaScript jQuery Ajax AngularJS 24 JSP NodeJS Bootstrap Hands on building Enterprise Applications and Distributed Systems using technologies such as Core Java J2EE Servlets JSP JSF EJB STRUTS Hibernate SPRING SPRING MVC JDBC JMS and XML Utilized Java 8 features like Lambda expressions and Stream API for Bulk data Operations on Collections which would increase the performance of the Application Extensive knowledge of XMLbased standards and protocols such as WSDL and SOAP Service Oriented Architecture SOA development of XSD schemas and implementing both SOAP and REST web services Experience using Spring Modules Spring MVC Spring Boot Spring DAO Spring Data Spring IOC Spring Annotations Spring AOP Spring Transactions and Spring Security Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud High experience in using frameworks like Struts Spring MVC Hibernate and Design Patterns such as MVC Session Faade Front Controller Data Access ObjectDAO Value Object Singleton Service locator for executing multitier highly scalable component based Service driven Enterprise Java application Experience in writing ANT Maven build scripts and configuring them using Log4j and writing JUnit test cases Experience in working with NoSQL database like MongoDB Cassandra Worked on various web servers like WebSphere 609 Tomcat Web Logic JBOSS Experience on Junit Selenium in performing Unit testing Automation testing and have good knowledge of Root cause analysis Strong experience in Finance Health Telecommunication and other domains using diverse technologies Experience in developing applications using different IDEs like Eclipse RAD and Intellij Strong interpersonal skills the ability to interact with people at all levels and strong communication and presentation skills Education Bachelors in Information Technology in Information Technology VIT University Skills Java J2Ee Java J2Ee Spring Hibernate Additional Information TECHNICAL SKILLS Programming Languages C Java 15 18 J2EE PLSQL Web Technologies HTML5 CSS3 XML JavaScript JSP JSTL jQuery AJAX AngularJS24 NodeJS Frame Works Struts 20 JSF 12 Spring 20 40 Hibernate 30 43 and JUnit 45 Microservices Spring Boot Spring Rest Databases Oracle 10g11 g MYSQL MongoDB Cassandra WebApplication Servers Apache Tomcat IBM Web Sphere and JBoss Testing JUnit Mockito Selenium Development Tools Eclipse Net Beans IntelliJ Version control GitHub Tortoise SVN Apache Subversion and CVS Bug tracking JIRA Visual studio Tools Utilities Apache Maven Gradle Jenkins ANT and Postman SonarQube spot bugs Operating Systems Windows 710 MacOS Unix and Linux INCOMM ATLANTA GA Nov 2014 Present JavaJ2EE Developer Description InComm is the industry leader in gift card business Generation of Inventory for all InComm transaction processing systems The project is to implement manage User requests generates user data build rule actions allows user access to generated inventory Involved in all the phases of SDLC including Requirements Collection Design Analysis of the Customer Specifications Development and Customization of the Application using SOA Developed frontend content using HTML CSS Angular JS Bootstrap JavaScript jQuery Designed and developed client side application in a clean MVC architecture and responsive web pages using Bootstrap System builds using Spring Model View Controller MVC architecture Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface and Spring AOP for reusability logging purpose Used Spring Core JBPM multithreading as part of enhancing Bundler process with in Content Management System Used ReactJS to create Controllers to handle events triggered by clients and send request to server Wrote business rules using Drools and business logic processing customs declarations Participated in development of a well responsive single page application using ReactJS framework Designed and implemented business rules using DROOLS framework Used Hibernate ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented and developed Restful web services with JAXRS using Jersey as provider and implemented security Developed and Consumed SOAP based Web Services with JAXWS specification Implemented and developed DAO layer using Spring Integration and Hibernate to persist the data to the database Implemented JBOSS application server integration with jBPM process engine and eclipse IDE Worked with java Java8 using Spring Spring MVC Multithreading DBC Hibernate RESTFul Web Services and SOAP Web Services Designed and developed Microservices business components using Spring Boot Designed and prototyped parts of a NoSQL database with Sinfoniastyle coordination Designed and implementation of lowlatency highavailability and performant applications by using Nodejs Written complex SQL queries HQL created business tables and PLSQL procedures to store and retrieve data from the database Developed service infrastructure components in Typescript for a unified web UI initiative Implemented Service Oriented Architecture using JMS for sending and receiving messages while creating web services Created forms to collect and validate data from the user in HTML5 and ReactJS Developed JUnit test cases for elements web beans handlers and view helper classes Used GIT to maintain the version of files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Designed and maintained databases and tested and implemented applications built using Python Wrote internal and external API services using Nodejs modules Implemented MicroServices architecture using Spring Boot for making application smaller and independent Developed single page web applications by using Angular with typescript and jQuery Configured development environment using Web Sphere Application server for developers integration testing Used Maven as build automation tool Involved in enhancementmodification of the product as per the client requirements Environment Java 8 J2EE HTML CSS JavaScript jQuery Spring Core Spring Security Spring MVC Spring IOC REST SOAP JAXRS JAXWS Web Services TypeScript ReactJS NodeJS Jersey JMS Rabbit MQ Service Oriented Architecture GroovyGrails Maven Drools JBPM Web Sphere Application Server GIT NoSQL Python Agile Methodology and Eclipse OPTUMCARE MINNEAPOLIS MN Jul 2013 Oct 2014 Full Stack Java Developer Description Optum is a behemoth in the healthcare industry over 5000 hospitals in its portfolio Optum works with about 300 health plans It is a health care organization that meets patients where they are with care services including primary urgent care and advanced careThe project is about patient portal where you can look at patient personal details medication claiming of medical insurance HMO and Medicare Advanced Plans Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Extensively used Core Java 18 concepts and implemented Collections IO Exception Handling and Generics in logic design and development Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Involved in designing the client side module architecture based on new Angular 24 Framework Used Jersey to implement Restful Web Service and used JSON form to transfer the data All the functionality is implemented using Spring Boot Micro Services and Hibernate ORM Used Spring Core Annotations for Spring DI Spring MVC for REST APIs and Spring Boot for Microservices Installed and configured JBOSSDrools server with MySQL Oracle persistence Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring MVC module to develop MVC Architecture Using Hibernate ORM tool for Memory mapping objectoriented domain model to relational database Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Rest Controllers to replace the existing operations layer which acts as bridge between business layer and the UI Used MongoDB as data storage and utilized aspects like replica sets sharing and clever document design to make service extensible scale and feature wise Developed Unit Test Cases Used JUnit for unit testing of the application Created UNIX shell scripting for periodic generation of reports Deployed Spring Boot based Micro services Docker container using Amazon EC2 container services and using AWS admin console Setting up the automatic build and deployment automation of project by using JENKINS and Maven Experience on implementation of version control software GIT repositories Provided Technical support for production environments resolving the issues analyzing the defects providing and implementing the solution defects Environment JAVA 17 AWS HTML5 CSS3 JAVASCRIPT ANGULAR 24 MICROSERVICES RESTFUL WEB SERVICES HIBERNATE 42 SPRING 4 SPRING BOOT SPRING MVC ORACLE 11 G MONGODB Drools TOMCAT KAFKA MAVEN JENKINS JIRA LOG4J JUNIT TESTNG GIT CAPITAL ONE MCLEAN VA Dec 2012 Jun 2013 JavaJ2EE Developer Description Capital One an American Financial bank holding company specializing in credit cards auto loans banking and savings It is the eighthlargest commercial bank in the United States The current application is a part of online banking that a customer leverages to set up his online account and make ebills payment as well as intra account transfers As a part of the Online Banking Software Development Team I helped with various responsibilities to develop a robust functional application code Involved in Design Development and Support phases of Software Development Life Cycle SDLC Application is implemented using Agile Methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Created webpages pages using HTML5 CSS3 JavaScript Restful and AJAX to create interactive frontend GUI Involved in writing Java API for Amazon Lambda to manage some of the AWS services Used AWS Lambda to run the code in the AWS Developed application using Drop Wizard Gradle Hibernate Web Services RESTFUL Worked on Swagger API and autogenerated documentation for all REST calls Developed Spring Configuration files used annotations to auto wire Java Components using Drop Wizard Involved in developing latest version of Object Oriented JavaScript Libraries like Angular 2 and had hands on experience with Web Responsive using Bootstraps templates Created Multiple Reusable UI Directives by defining Angular 2 Directives Attaching Event Listeners Controllers Updating DOM elements Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Designed and developed Micro Services business components and RESTful service endpoints using spring boot Developed the persistence layer using Hibernate Framework by configuring the mappings in hibernate files and created DAO and POJO Involved in writing database connection classes for interacting with Oracle database Incorporated Singleton Pattern to implement the database access classes Imported data from various resources to the Cassandra cluster using Java APIs Used JUnit for unit testing the application and used Log4j tool for debugging the application and measure the Test coverage Implementing the Coding standards review the code by SonarQube and fixing all the code review bugs Working on Google Voice for dependency Injection Used Git as the version control tool Environment JAVA 16 J2EE HTML5 CSS3 JAVSCRIPT ANGULAR JS AJAX SPRING MVC SPRING BOOT SPRING AOP SPRING BATCH RESTFUL HIBERNATE 36 Oracle Cassandra JUNIT 49 KARMAJASMINE APACHE CAMEL GITLAB 70 MAVEN JENKINS AXIS BANK HYDERABAD INDIA JUNE 2011 Nov 2012 Java Developer Description AXIS bank provides funds or loans to people with small business requirements Applicants get their loans sanctioned based on their credit history The applicant information is maintained in a database along with the details of the loan for repayment This data is filtered and that data is used for statistics for generating reports Worked in Waterfall Software Development methodology Involved in prototyping proof of concept design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Designed and developed front view components using HTML CSS JavaScript and JSP Developed Interactive web pages using AJAX and JavaScript Implemented Core Java concepts like Polymorphism Inheritance Multithreading etc Involved in developing various reusable Helper and Utility classes using Java which are being used across all the modules of the application Developed Java classes for implementing Business logics using EJB Stateless session entity message driven beans Deployed and tested the application with web server Tomcat Configured and tested the application with database server Oracle 10 g Helped in database design and tuning Created stored procedures Views in the Database Used SVN for version control and developed Scripts by using Ant Involved in communicating with clients daily to ensure their requirements are being met Environment JDK CORE JAVA MULTITHREADING COLLECTIONS JSP SERVLETS XML HTML JAVASCRIPT AJAX EJB 30 UML RAIONAL ROSE JDBC APACHE TOMCAT ORACLE 10 G SVN ANT WINDOWS UNIX LINUX",
    "extracted_keywords": [
        "JavaJ2EE",
        "Developer",
        "span",
        "lJavaspanJ2EE",
        "span",
        "lDeveloperspan",
        "Atlanta",
        "GA",
        "US",
        "employer",
        "Work",
        "Experience",
        "JavaJ2EE",
        "Developer",
        "Incomm",
        "November",
        "Present",
        "years",
        "Motivated",
        "Versatile",
        "IT",
        "Professional",
        "Stack",
        "Developer",
        "Implementing",
        "maintenance",
        "Web",
        "ClientServer",
        "business",
        "applications",
        "JavaJ2EE",
        "Technologies",
        "Full",
        "Versatile",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodologies",
        "Agile",
        "Waterfall",
        "TestDriven",
        "Development",
        "TDD",
        "Web",
        "Enterprise",
        "applications",
        "experience",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "Cloud",
        "Cloud",
        "Formation",
        "S3",
        "VPC",
        "ELB",
        "AMI",
        "SNS",
        "RDS",
        "IAM",
        "Lambda",
        "Route",
        "security",
        "groups",
        "AWS",
        "Expertise",
        "Scripting",
        "Language",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Ajax",
        "JSP",
        "NodeJS",
        "Bootstrap",
        "Hands",
        "Enterprise",
        "Applications",
        "Distributed",
        "Systems",
        "technologies",
        "Core",
        "Java",
        "J2EE",
        "Servlets",
        "JSP",
        "JSF",
        "EJB",
        "STRUTS",
        "Hibernate",
        "SPRING",
        "SPRING",
        "MVC",
        "JDBC",
        "JMS",
        "XML",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "Stream",
        "API",
        "Bulk",
        "data",
        "Operations",
        "Collections",
        "performance",
        "Application",
        "knowledge",
        "standards",
        "protocols",
        "WSDL",
        "SOAP",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "development",
        "XSD",
        "schemas",
        "SOAP",
        "REST",
        "web",
        "services",
        "Experience",
        "Spring",
        "Modules",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "DAO",
        "Spring",
        "Data",
        "Spring",
        "IOC",
        "Spring",
        "Annotations",
        "Spring",
        "AOP",
        "Spring",
        "Transactions",
        "Spring",
        "Security",
        "REST",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "experience",
        "frameworks",
        "Struts",
        "Spring",
        "MVC",
        "Hibernate",
        "Design",
        "Patterns",
        "MVC",
        "Session",
        "Faade",
        "Front",
        "Controller",
        "Data",
        "Access",
        "ObjectDAO",
        "Value",
        "Object",
        "Singleton",
        "Service",
        "locator",
        "component",
        "Service",
        "Enterprise",
        "Java",
        "application",
        "Experience",
        "ANT",
        "Maven",
        "scripts",
        "Log4j",
        "JUnit",
        "test",
        "cases",
        "NoSQL",
        "database",
        "MongoDB",
        "Cassandra",
        "web",
        "servers",
        "WebSphere",
        "Tomcat",
        "Web",
        "Logic",
        "JBOSS",
        "Experience",
        "Junit",
        "Selenium",
        "Unit",
        "testing",
        "Automation",
        "testing",
        "knowledge",
        "Root",
        "analysis",
        "experience",
        "Finance",
        "Health",
        "Telecommunication",
        "domains",
        "technologies",
        "Experience",
        "applications",
        "IDEs",
        "Eclipse",
        "RAD",
        "Intellij",
        "Strong",
        "skills",
        "ability",
        "people",
        "levels",
        "communication",
        "presentation",
        "skills",
        "Education",
        "Bachelors",
        "Information",
        "Technology",
        "Information",
        "Technology",
        "VIT",
        "University",
        "Skills",
        "Java",
        "J2Ee",
        "Java",
        "Spring",
        "Hibernate",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Programming",
        "Languages",
        "C",
        "Java",
        "J2EE",
        "PLSQL",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "XML",
        "JavaScript",
        "JSP",
        "JSTL",
        "jQuery",
        "AJAX",
        "AngularJS24",
        "NodeJS",
        "Frame",
        "Struts",
        "JSF",
        "Spring",
        "Hibernate",
        "JUnit",
        "Microservices",
        "Spring",
        "Boot",
        "Spring",
        "Rest",
        "Oracle",
        "g",
        "MYSQL",
        "MongoDB",
        "Cassandra",
        "WebApplication",
        "Servers",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "Sphere",
        "JBoss",
        "Testing",
        "JUnit",
        "Mockito",
        "Selenium",
        "Development",
        "Tools",
        "Eclipse",
        "Net",
        "Beans",
        "IntelliJ",
        "Version",
        "control",
        "GitHub",
        "Tortoise",
        "SVN",
        "Apache",
        "Subversion",
        "CVS",
        "Bug",
        "tracking",
        "JIRA",
        "Visual",
        "studio",
        "Tools",
        "Utilities",
        "Apache",
        "Maven",
        "Gradle",
        "Jenkins",
        "ANT",
        "Postman",
        "SonarQube",
        "spot",
        "bugs",
        "Operating",
        "Systems",
        "Windows",
        "MacOS",
        "Unix",
        "Linux",
        "INCOMM",
        "ATLANTA",
        "GA",
        "Nov",
        "Present",
        "JavaJ2EE",
        "Developer",
        "Description",
        "InComm",
        "industry",
        "leader",
        "gift",
        "card",
        "business",
        "Generation",
        "Inventory",
        "InComm",
        "transaction",
        "processing",
        "systems",
        "project",
        "User",
        "requests",
        "user",
        "data",
        "build",
        "rule",
        "actions",
        "user",
        "access",
        "inventory",
        "phases",
        "SDLC",
        "Requirements",
        "Collection",
        "Design",
        "Analysis",
        "Customer",
        "Specifications",
        "Development",
        "Customization",
        "Application",
        "SOA",
        "frontend",
        "content",
        "HTML",
        "CSS",
        "Angular",
        "JS",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "client",
        "side",
        "application",
        "MVC",
        "architecture",
        "web",
        "pages",
        "Bootstrap",
        "System",
        "Spring",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "Dependency",
        "Injection",
        "IOC",
        "feature",
        "spring",
        "framework",
        "beans",
        "User",
        "Interface",
        "Spring",
        "AOP",
        "reusability",
        "purpose",
        "Spring",
        "Core",
        "JBPM",
        "part",
        "Bundler",
        "process",
        "Content",
        "Management",
        "System",
        "ReactJS",
        "Controllers",
        "events",
        "clients",
        "request",
        "Wrote",
        "business",
        "rules",
        "Drools",
        "business",
        "logic",
        "customs",
        "declarations",
        "development",
        "page",
        "application",
        "ReactJS",
        "framework",
        "business",
        "rules",
        "DROOLS",
        "framework",
        "Hibernate",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "web",
        "services",
        "JAXRS",
        "Jersey",
        "provider",
        "security",
        "Developed",
        "Consumed",
        "SOAP",
        "Web",
        "Services",
        "JAXWS",
        "specification",
        "DAO",
        "layer",
        "Spring",
        "Integration",
        "Hibernate",
        "data",
        "database",
        "JBOSS",
        "application",
        "server",
        "integration",
        "jBPM",
        "process",
        "engine",
        "eclipse",
        "IDE",
        "Worked",
        "java",
        "Java8",
        "Spring",
        "Spring",
        "MVC",
        "Multithreading",
        "DBC",
        "Hibernate",
        "RESTFul",
        "Web",
        "Services",
        "SOAP",
        "Web",
        "Services",
        "Microservices",
        "business",
        "components",
        "Spring",
        "Boot",
        "parts",
        "NoSQL",
        "database",
        "Sinfoniastyle",
        "coordination",
        "implementation",
        "lowlatency",
        "highavailability",
        "applications",
        "Nodejs",
        "SQL",
        "HQL",
        "business",
        "tables",
        "PLSQL",
        "procedures",
        "data",
        "database",
        "service",
        "infrastructure",
        "components",
        "Typescript",
        "web",
        "UI",
        "initiative",
        "Implemented",
        "Service",
        "Oriented",
        "Architecture",
        "JMS",
        "messages",
        "web",
        "services",
        "forms",
        "data",
        "user",
        "HTML5",
        "JUnit",
        "test",
        "cases",
        "elements",
        "web",
        "beans",
        "handlers",
        "helper",
        "classes",
        "GIT",
        "version",
        "files",
        "responsibility",
        "code",
        "merges",
        "branch",
        "trunk",
        "branch",
        "feature",
        "implementation",
        "databases",
        "applications",
        "Python",
        "Wrote",
        "API",
        "services",
        "Nodejs",
        "modules",
        "MicroServices",
        "architecture",
        "Spring",
        "Boot",
        "application",
        "page",
        "web",
        "applications",
        "Angular",
        "typescript",
        "jQuery",
        "Configured",
        "development",
        "environment",
        "Web",
        "Sphere",
        "Application",
        "server",
        "developers",
        "integration",
        "testing",
        "Maven",
        "build",
        "automation",
        "tool",
        "enhancementmodification",
        "product",
        "client",
        "requirements",
        "Environment",
        "Java",
        "J2EE",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Spring",
        "Core",
        "Spring",
        "Security",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "REST",
        "JAXRS",
        "JAXWS",
        "Web",
        "Services",
        "TypeScript",
        "ReactJS",
        "NodeJS",
        "Jersey",
        "JMS",
        "Rabbit",
        "MQ",
        "Service",
        "Oriented",
        "Architecture",
        "GroovyGrails",
        "Maven",
        "Drools",
        "JBPM",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "GIT",
        "NoSQL",
        "Python",
        "Agile",
        "Methodology",
        "Eclipse",
        "OPTUMCARE",
        "MINNEAPOLIS",
        "MN",
        "Jul",
        "Oct",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Description",
        "Optum",
        "behemoth",
        "healthcare",
        "industry",
        "hospitals",
        "portfolio",
        "Optum",
        "health",
        "plans",
        "health",
        "care",
        "organization",
        "patients",
        "care",
        "services",
        "care",
        "careThe",
        "project",
        "details",
        "medication",
        "claiming",
        "insurance",
        "HMO",
        "Medicare",
        "Advanced",
        "Plans",
        "SDLC",
        "software",
        "development",
        "life",
        "cycle",
        "application",
        "requirement",
        "analysis",
        "Agile",
        "Methodology",
        "define",
        "application",
        "business",
        "requirements",
        "efforts",
        "Functional",
        "Architects",
        "Configured",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "multitude",
        "applications",
        "Amazon",
        "cloud",
        "formation",
        "Core",
        "Java",
        "concepts",
        "Collections",
        "IO",
        "Exception",
        "Handling",
        "Generics",
        "design",
        "development",
        "UI",
        "HTML5",
        "CSS3",
        "JSP",
        "JavaScript",
        "cross",
        "browser",
        "functionality",
        "user",
        "interface",
        "client",
        "side",
        "module",
        "architecture",
        "Angular",
        "Framework",
        "Used",
        "Jersey",
        "Restful",
        "Web",
        "Service",
        "form",
        "data",
        "functionality",
        "Spring",
        "Boot",
        "Micro",
        "Services",
        "Hibernate",
        "ORM",
        "Spring",
        "Core",
        "Annotations",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "APIs",
        "Spring",
        "Boot",
        "Microservices",
        "Installed",
        "JBOSSDrools",
        "server",
        "MySQL",
        "Oracle",
        "persistence",
        "REST",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "MVC",
        "module",
        "MVC",
        "Architecture",
        "Hibernate",
        "ORM",
        "tool",
        "Memory",
        "mapping",
        "domain",
        "model",
        "database",
        "POJO",
        "objects",
        "Hibernate",
        "ObjectRelational",
        "Mapping",
        "ORM",
        "tool",
        "data",
        "SQL",
        "Server",
        "Rest",
        "Controllers",
        "operations",
        "layer",
        "bridge",
        "business",
        "layer",
        "UI",
        "MongoDB",
        "data",
        "storage",
        "aspects",
        "replica",
        "sharing",
        "document",
        "design",
        "service",
        "scale",
        "Developed",
        "Unit",
        "Test",
        "Cases",
        "JUnit",
        "unit",
        "testing",
        "application",
        "UNIX",
        "shell",
        "scripting",
        "generation",
        "reports",
        "Deployed",
        "Spring",
        "Boot",
        "Micro",
        "services",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "AWS",
        "admin",
        "console",
        "build",
        "deployment",
        "automation",
        "project",
        "JENKINS",
        "Maven",
        "Experience",
        "implementation",
        "version",
        "control",
        "software",
        "GIT",
        "repositories",
        "support",
        "production",
        "environments",
        "issues",
        "defects",
        "solution",
        "defects",
        "Environment",
        "JAVA",
        "AWS",
        "HTML5",
        "CSS3",
        "JAVASCRIPT",
        "ANGULAR",
        "MICROSERVICES",
        "RESTFUL",
        "WEB",
        "SERVICES",
        "HIBERNATE",
        "SPRING",
        "SPRING",
        "BOOT",
        "SPRING",
        "MVC",
        "ORACLE",
        "G",
        "MONGODB",
        "Drools",
        "TOMCAT",
        "KAFKA",
        "MAVEN",
        "JENKINS",
        "JIRA",
        "LOG4J",
        "JUNIT",
        "TESTNG",
        "GIT",
        "CAPITAL",
        "MCLEAN",
        "VA",
        "Dec",
        "Jun",
        "JavaJ2EE",
        "Developer",
        "Description",
        "Capital",
        "American",
        "Financial",
        "bank",
        "company",
        "credit",
        "cards",
        "auto",
        "loans",
        "banking",
        "savings",
        "bank",
        "United",
        "States",
        "application",
        "part",
        "banking",
        "customer",
        "account",
        "ebills",
        "payment",
        "intra",
        "account",
        "transfers",
        "part",
        "Online",
        "Banking",
        "Software",
        "Development",
        "Team",
        "responsibilities",
        "application",
        "code",
        "Design",
        "Development",
        "Support",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Application",
        "Agile",
        "Methodology",
        "SCRUM",
        "meeting",
        "status",
        "issues",
        "webpages",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Restful",
        "AJAX",
        "frontend",
        "GUI",
        "Java",
        "API",
        "Amazon",
        "Lambda",
        "AWS",
        "services",
        "AWS",
        "Lambda",
        "code",
        "AWS",
        "application",
        "Drop",
        "Wizard",
        "Gradle",
        "Hibernate",
        "Web",
        "Services",
        "RESTFUL",
        "Swagger",
        "API",
        "documentation",
        "REST",
        "Developed",
        "Spring",
        "Configuration",
        "files",
        "annotations",
        "auto",
        "wire",
        "Java",
        "Components",
        "Drop",
        "Wizard",
        "version",
        "Object",
        "Oriented",
        "JavaScript",
        "Libraries",
        "Angular",
        "hands",
        "experience",
        "Web",
        "Responsive",
        "Bootstraps",
        "templates",
        "Multiple",
        "Reusable",
        "UI",
        "Directives",
        "Angular",
        "Directives",
        "Event",
        "Listeners",
        "DOM",
        "elements",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "Services",
        "Spring",
        "application",
        "configuration",
        "Micro",
        "Services",
        "business",
        "components",
        "service",
        "endpoints",
        "spring",
        "boot",
        "persistence",
        "layer",
        "Hibernate",
        "Framework",
        "mappings",
        "hibernate",
        "files",
        "DAO",
        "POJO",
        "database",
        "connection",
        "classes",
        "Oracle",
        "database",
        "Incorporated",
        "Singleton",
        "Pattern",
        "database",
        "access",
        "classes",
        "data",
        "resources",
        "Cassandra",
        "cluster",
        "Java",
        "APIs",
        "JUnit",
        "unit",
        "application",
        "Log4j",
        "tool",
        "application",
        "Test",
        "coverage",
        "standards",
        "code",
        "SonarQube",
        "code",
        "review",
        "Google",
        "Voice",
        "dependency",
        "Injection",
        "Git",
        "version",
        "control",
        "tool",
        "Environment",
        "JAVA",
        "J2EE",
        "HTML5",
        "CSS3",
        "JAVSCRIPT",
        "ANGULAR",
        "JS",
        "AJAX",
        "SPRING",
        "MVC",
        "SPRING",
        "BOOT",
        "SPRING",
        "AOP",
        "SPRING",
        "BATCH",
        "RESTFUL",
        "HIBERNATE",
        "Oracle",
        "Cassandra",
        "JUNIT",
        "KARMAJASMINE",
        "APACHE",
        "CAMEL",
        "GITLAB",
        "MAVEN",
        "JENKINS",
        "AXIS",
        "BANK",
        "HYDERABAD",
        "INDIA",
        "JUNE",
        "Nov",
        "Java",
        "Developer",
        "Description",
        "AXIS",
        "bank",
        "funds",
        "loans",
        "people",
        "business",
        "requirements",
        "Applicants",
        "loans",
        "credit",
        "history",
        "information",
        "database",
        "details",
        "loan",
        "repayment",
        "data",
        "data",
        "statistics",
        "generating",
        "reports",
        "Waterfall",
        "Software",
        "Development",
        "methodology",
        "proof",
        "concept",
        "design",
        "Interface",
        "Implementation",
        "testing",
        "maintenance",
        "use",
        "case",
        "diagrams",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "system",
        "UMLRational",
        "Rose",
        "view",
        "components",
        "HTML",
        "CSS",
        "JavaScript",
        "JSP",
        "Developed",
        "Interactive",
        "web",
        "pages",
        "AJAX",
        "JavaScript",
        "Core",
        "Java",
        "concepts",
        "Polymorphism",
        "Inheritance",
        "Multithreading",
        "Helper",
        "Utility",
        "classes",
        "Java",
        "modules",
        "application",
        "Java",
        "classes",
        "Business",
        "logics",
        "EJB",
        "Stateless",
        "session",
        "entity",
        "message",
        "beans",
        "application",
        "web",
        "server",
        "Tomcat",
        "Configured",
        "application",
        "database",
        "server",
        "Oracle",
        "g",
        "database",
        "design",
        "procedures",
        "Views",
        "Database",
        "SVN",
        "version",
        "control",
        "Scripts",
        "Ant",
        "clients",
        "requirements",
        "Environment",
        "JDK",
        "CORE",
        "MULTITHREADING",
        "COLLECTIONS",
        "JSP",
        "SERVLETS",
        "XML",
        "HTML",
        "JAVASCRIPT",
        "AJAX",
        "EJB",
        "UML",
        "RAIONAL",
        "ROSE",
        "JDBC",
        "APACHE",
        "TOMCAT",
        "G",
        "SVN",
        "ANT",
        "UNIX",
        "LINUX"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:40:51.753853",
    "resume_data": "JavaJ2EE Developer span lJavaspanJ2EE span lDeveloperspan Atlanta GA Authorized to work in the US for any employer Work Experience JavaJ2EE Developer Incomm November 2014 to Present 7 years of Highly Creative Motivated Versatile IT Professional with as a Full Stack Developer on Developing Implementing and maintenance of various Web based and ClientServer based business applications using JavaJ2EE Technologies Full Versatile with Software Development Life Cycle SDLC methodologies like Agile Waterfall and TestDriven Development TDD in both the Web and Enterprise based applications Extensive experience of AWS cloud services like EC2 Cloud watch Cloud Formation S3 VPC ELB AMI SNS RDS IAM Lambda Route 53 and managing security groups on AWS Expertise in Scripting Language like HTML5 CSS3 JavaScript jQuery Ajax AngularJS 24 JSP NodeJS Bootstrap Hands on building Enterprise Applications and Distributed Systems using technologies such as Core Java J2EE Servlets JSP JSF EJB STRUTS Hibernate SPRING SPRING MVC JDBC JMS and XML Utilized Java 8 features like Lambda expressions and Stream API for Bulk data Operations on Collections which would increase the performance of the Application Extensive knowledge of XMLbased standards and protocols such as WSDL and SOAP Service Oriented Architecture SOA development of XSD schemas and implementing both SOAP and REST web services Experience using Spring Modules Spring MVC Spring Boot Spring DAO Spring Data Spring IOC Spring Annotations Spring AOP Spring Transactions and Spring Security Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud High experience in using frameworks like Struts Spring MVC Hibernate and Design Patterns such as MVC Session Faade Front Controller Data Access ObjectDAO Value Object Singleton Service locator for executing multitier highly scalable component based Service driven Enterprise Java application Experience in writing ANT Maven build scripts and configuring them using Log4j and writing JUnit test cases Experience in working with NoSQL database like MongoDB Cassandra Worked on various web servers like WebSphere 609 Tomcat Web Logic JBOSS Experience on Junit Selenium in performing Unit testing Automation testing and have good knowledge of Root cause analysis Strong experience in Finance Health Telecommunication and other domains using diverse technologies Experience in developing applications using different IDEs like Eclipse RAD and Intellij Strong interpersonal skills the ability to interact with people at all levels and strong communication and presentation skills Education Bachelors in Information Technology in Information Technology VIT University Skills Java J2Ee Java J2Ee Spring Hibernate Additional Information TECHNICAL SKILLS Programming Languages C Java 15 18 J2EE PLSQL Web Technologies HTML5 CSS3 XML JavaScript JSP JSTL jQuery AJAX AngularJS24 NodeJS Frame Works Struts 20 JSF 12 Spring 20 40 Hibernate 30 43 and JUnit 45 Microservices Spring Boot Spring Rest Databases Oracle 10g11g MYSQL MongoDB Cassandra WebApplication Servers Apache Tomcat IBM Web Sphere and JBoss Testing JUnit Mockito Selenium Development Tools Eclipse Net Beans IntelliJ Version control GitHub Tortoise SVN Apache Subversion and CVS Bug tracking JIRA Visual studio Tools Utilities Apache Maven Gradle Jenkins ANT and Postman SonarQube spot bugs Operating Systems Windows 710 MacOS Unix and Linux INCOMM ATLANTA GA Nov 2014 Present JavaJ2EE Developer Description InComm is the industry leader in gift card business Generation of Inventory for all InComm transaction processing systems The project is to implement manage User requests generates user data build rule actions allows user access to generated inventory Involved in all the phases of SDLC including Requirements Collection Design Analysis of the Customer Specifications Development and Customization of the Application using SOA Developed frontend content using HTML CSS Angular JS Bootstrap JavaScript jQuery Designed and developed client side application in a clean MVC architecture and responsive web pages using Bootstrap System builds using Spring Model View Controller MVC architecture Implemented Dependency Injection IOC feature of spring framework to inject beans into User Interface and Spring AOP for reusability logging purpose Used Spring Core JBPM multithreading as part of enhancing Bundler process with in Content Management System Used ReactJS to create Controllers to handle events triggered by clients and send request to server Wrote business rules using Drools and business logic processing customs declarations Participated in development of a well responsive single page application using ReactJS framework Designed and implemented business rules using DROOLS framework Used Hibernate ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented and developed Restful web services with JAXRS using Jersey as provider and implemented security Developed and Consumed SOAP based Web Services with JAXWS specification Implemented and developed DAO layer using Spring Integration and Hibernate to persist the data to the database Implemented JBOSS application server integration with jBPM process engine and eclipse IDE Worked with java Java8 using Spring Spring MVC Multithreading DBC Hibernate RESTFul Web Services and SOAP Web Services Designed and developed Microservices business components using Spring Boot Designed and prototyped parts of a NoSQL database with Sinfoniastyle coordination Designed and implementation of lowlatency highavailability and performant applications by using Nodejs Written complex SQL queries HQL created business tables and PLSQL procedures to store and retrieve data from the database Developed service infrastructure components in Typescript for a unified web UI initiative Implemented Service Oriented Architecture using JMS for sending and receiving messages while creating web services Created forms to collect and validate data from the user in HTML5 and ReactJS Developed JUnit test cases for elements web beans handlers and view helper classes Used GIT to maintain the version of files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Designed and maintained databases and tested and implemented applications built using Python Wrote internal and external API services using Nodejs modules Implemented MicroServices architecture using Spring Boot for making application smaller and independent Developed single page web applications by using Angular with typescript and jQuery Configured development environment using Web Sphere Application server for developers integration testing Used Maven as build automation tool Involved in enhancementmodification of the product as per the client requirements Environment Java 8 J2EE HTML CSS JavaScript jQuery Spring Core Spring Security Spring MVC Spring IOC REST SOAP JAXRS JAXWS Web Services TypeScript ReactJS NodeJS Jersey JMS Rabbit MQ Service Oriented Architecture GroovyGrails Maven Drools JBPM Web Sphere Application Server GIT NoSQL Python Agile Methodology and Eclipse OPTUMCARE MINNEAPOLIS MN Jul 2013 Oct 2014 Full Stack Java Developer Description Optum is a behemoth in the healthcare industry over 5000 hospitals in its portfolio Optum works with about 300 health plans It is a health care organization that meets patients where they are with care services including primary urgent care and advanced careThe project is about patient portal where you can look at patient personal details medication claiming of medical insurance HMO and Medicare Advanced Plans Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Extensively used Core Java 18 concepts and implemented Collections IO Exception Handling and Generics in logic design and development Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Involved in designing the client side module architecture based on new Angular 24 Framework Used Jersey to implement Restful Web Service and used JSON form to transfer the data All the functionality is implemented using Spring Boot Micro Services and Hibernate ORM Used Spring Core Annotations for Spring DI Spring MVC for REST APIs and Spring Boot for Microservices Installed and configured JBOSSDrools server with MySQL Oracle persistence Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring MVC module to develop MVC Architecture Using Hibernate ORM tool for Memory mapping objectoriented domain model to relational database Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Rest Controllers to replace the existing operations layer which acts as bridge between business layer and the UI Used MongoDB as data storage and utilized aspects like replica sets sharing and clever document design to make service extensible scale and feature wise Developed Unit Test Cases Used JUnit for unit testing of the application Created UNIX shell scripting for periodic generation of reports Deployed Spring Boot based Micro services Docker container using Amazon EC2 container services and using AWS admin console Setting up the automatic build and deployment automation of project by using JENKINS and Maven Experience on implementation of version control software GIT repositories Provided Technical support for production environments resolving the issues analyzing the defects providing and implementing the solution defects Environment JAVA 17 AWS HTML5 CSS3 JAVASCRIPT ANGULAR 24 MICROSERVICES RESTFUL WEB SERVICES HIBERNATE 42 SPRING 4 SPRING BOOT SPRING MVC ORACLE 11G MONGODB Drools TOMCAT KAFKA MAVEN JENKINS JIRA LOG4J JUNIT TESTNG GIT CAPITAL ONE MCLEAN VA Dec 2012 Jun 2013 JavaJ2EE Developer Description Capital One an American Financial bank holding company specializing in credit cards auto loans banking and savings It is the eighthlargest commercial bank in the United States The current application is a part of online banking that a customer leverages to set up his online account and make ebills payment as well as intra account transfers As a part of the Online Banking Software Development Team I helped with various responsibilities to develop a robust functional application code Involved in Design Development and Support phases of Software Development Life Cycle SDLC Application is implemented using Agile Methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Created webpages pages using HTML5 CSS3 JavaScript Restful and AJAX to create interactive frontend GUI Involved in writing Java API for Amazon Lambda to manage some of the AWS services Used AWS Lambda to run the code in the AWS Developed application using Drop Wizard Gradle Hibernate Web Services RESTFUL Worked on Swagger API and autogenerated documentation for all REST calls Developed Spring Configuration files used annotations to auto wire Java Components using Drop Wizard Involved in developing latest version of Object Oriented JavaScript Libraries like Angular 2 and had hands on experience with Web Responsive using Bootstraps templates Created Multiple Reusable UI Directives by defining Angular 2 Directives Attaching Event Listeners Controllers Updating DOM elements Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Designed and developed Micro Services business components and RESTful service endpoints using spring boot Developed the persistence layer using Hibernate Framework by configuring the mappings in hibernate files and created DAO and POJO Involved in writing database connection classes for interacting with Oracle database Incorporated Singleton Pattern to implement the database access classes Imported data from various resources to the Cassandra cluster using Java APIs Used JUnit for unit testing the application and used Log4j tool for debugging the application and measure the Test coverage Implementing the Coding standards review the code by SonarQube and fixing all the code review bugs Working on Google Voice for dependency Injection Used Git as the version control tool Environment JAVA 16 J2EE HTML5 CSS3 JAVSCRIPT ANGULAR JS AJAX SPRING MVC SPRING BOOT SPRING AOP SPRING BATCH RESTFUL HIBERNATE 36 Oracle Cassandra JUNIT 49 KARMAJASMINE APACHE CAMEL GITLAB 70 MAVEN JENKINS AXIS BANK HYDERABAD INDIA JUNE 2011 Nov 2012 Java Developer Description AXIS bank provides funds or loans to people with small business requirements Applicants get their loans sanctioned based on their credit history The applicant information is maintained in a database along with the details of the loan for repayment This data is filtered and that data is used for statistics for generating reports Worked in Waterfall Software Development methodology Involved in prototyping proof of concept design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Designed and developed front view components using HTML CSS JavaScript and JSP Developed Interactive web pages using AJAX and JavaScript Implemented Core Java concepts like Polymorphism Inheritance Multithreading etc Involved in developing various reusable Helper and Utility classes using Java which are being used across all the modules of the application Developed Java classes for implementing Business logics using EJB Stateless session entity message driven beans Deployed and tested the application with web server Tomcat Configured and tested the application with database server Oracle 10g Helped in database design and tuning Created stored procedures Views in the Database Used SVN for version control and developed Scripts by using Ant Involved in communicating with clients daily to ensure their requirements are being met Environment JDK CORE JAVA MULTITHREADING COLLECTIONS JSP SERVLETS XML HTML JAVASCRIPT AJAX EJB 30 UML RAIONAL ROSE JDBC APACHE TOMCAT ORACLE 10G SVN ANT WINDOWS UNIX LINUX",
    "unique_id": "5c3896df-a114-4347-9bee-faca57b068e5"
}