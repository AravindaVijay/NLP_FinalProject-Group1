{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer NBC Universal New York NY 7 Years of experience in Analysis Design Development Management and Implementation of various standalone and clientserver enterprise PythonDjango based webapplications Developed webbased applications using Python 2726 Django 1413 Mastering in implementing MVC architecture using Django for web based applications in OOP concepts like MultiThreading Exception Handling and Collections Experience with Design code debug operations reporting data analysis and web applications utilizing Python Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Experience in full SDLC starting from Design and Development Testing and documenting the entire life cycle using various methodologies Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid Python web application frameworks Strong expertise in the development of web based applications using Python Django HTML XML Angular JS CSS DHTML JavaScript JSON and Jquery Built web applications by using Python Django AWS Flask Jinja WSGI Fabric PostgreSQL REDIS Special skills in the development of effective userfriendly web applications Experiences in requirement gathering use case development Business Process Flow Business process modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Experience with Unit testing Test driven Development TDD Load Testing Worked on AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Experience in working with Python ORM Libraries including Django ORM Expertise in working with GUI frameworks Tkinter PyQt WxPython Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL and PythonPHP Architecture Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Exceptional problem solving and sound decisionmaking capabilities recognized by associates for the quality of data alternative solutions confident and accurate Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Used python to extract weekly hotel availability information from XML files Used Web Services to get travel destination data and rates Exposure in working for developing a portal to manage and entities in a content management system using Flask Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used the Django Framework to develop the application In depth exposure to creating API for internal and external application using REST and SOAP based design Experienced with full software development life cycle architecting scalable platforms object oriented programming database design and agile methodologies Designed automated the process of installation and configuration of secure DataStax Enterprise Cassandra using chef Experienced in agile and waterfall methodologies with high quality deliverables delivered ontime Wrote Automation test cases using Selenium WebDriver Junit Maven and Spring Participated in requirement gathering and worked closely with the architect in designing and modeling Worked in LAMP Linux Apache MySQL and Python Stack Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Performed Design and Code reviews Worked on development of SQL and stored procedures on MYSQL Installed and configured monitoring scripts for AWS EC2 instances also Configured and deployed project using the Amazon EC2 on AWS Coded test programs and evaluated existing engineering processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked with team of developers Business analysts and Data analysts on Python applications for RISK management Utilized PyUnit the Python Unit test framework for all Python applications For testing purpose used unit test framework unit test Used JIRA for bug tracking and issue tracking and Used Agile Methodology and SCRUM Process Using version control tool GitHub with Jenkins to accumulate all the work done by team members Collaborated with Product Management and User experience experts regarding product definition schedule scope and projectrelated decisions Work Experience Sr Python Developer NBC Universal New York NY January 2016 to Present Django Framework that was used in developing web applications to implement the model view control architecture Developing a middlelayer for serving data to frontend Webapp Was mostly responsible to fix and redesign the buggy Django layer Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Followed AGILE development methodology to develop the application Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing performed PythonDjango based web application and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ExportedImported data between different data sources using SQL Server Management Studio Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts and Delivered automated solutions for science models Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS JavaScript AJAX JavaJ2EE Servlets JSP JDBC XML Python Django PHP Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Implemented configuration changes for data models Maintained and updated existing automated solutions Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis and Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Developed GUI using Tkinter for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Responsible for user validations on client side as well as server side and executed User Acceptance Testing portion Automated the existing scripts for performance calculations using Numpy and SQLalchemy and Django ORM Interacted with QA to develop test plans from highlevel design documentation Implemented RESTful API which returns data from PostgreSQL in JSON format Able to scrape data from external sources and put them into a central database Expertise in Python scripts to phase XML documents and load the data in database Design and developed data management system using PostgreSQL Web service integration customized integrated medfusion secure practice portals Secure Message Web Created Python Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database EC2 and database security groups S3 bucket and application configuration this Script creates stacks single servers or joins web servers to stacks Integrated the userfacing elements developed by frontend developer with server side logic Evangelized the use of web services to implement application integrations Designed and implemented web application server Wrote Junit test cases for unit integration and functional tests run automatically by HudsonJenkins in the builds triggered by each push to Git Built application logic using Python 27 Used the Django Framework to develop the application Used Django APIs for database access Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Developed various algorithms for generating several data patterns Used JIRA for bug tracking and issue tracking Developed PythonDjango application for Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Sr Python Developer Liberty Global Denver CO May 2013 to December 2015 Responsible for Design develop test and maintenance of the website Interaction with client to understand expectations and requirements Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python and Wrote python scripts to parse XML documents and load the data in database Performed testing using Djangos Test Module and used PyTest for writing test cases Generate Python Django forms to record data of online users Developed a fully automated continuous integration system using GIT Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL Created Python Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database EC2 and database security groups S3 bucket and application configuration this Script creates stacks single servers or joins web servers to stacks Extensively used python modules such as requests urllib urllib2 for web crawling Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked in the DevOps team delivered new agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ant maven antifactory chef custom scripting and Jira for ticketing Rewrite existing PythonDjango modules to deliver certain format of data Used Pandas library for statistics Analysis NumPY for Numerical analysis Managed large datasets using Panda data frames and MySQL ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Responsible for debugging and troubleshooting the web application Successfully migrated all the data to the database while the site was in production Experience with automated CM and maintained a CICD pipeline deployment tools such as Chef Puppet or Ansible Maintained build related scripts developed in ANT Python and shell Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Generated Python Django Forms Crispy forms to record data login and signup of online users Designed email marketing campaigns and created responsive web forms that saved data into a database using Python Django Framework Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Python Developer Express Scripts Ann Arbor MI August 2012 to April 2013 Django Framework that was used in developing web applications to implement the model view control architecture Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Followed AGILE development methodology to develop the application Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing performed PythonDjango based web application and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ExportedImported data between different data sources using SQL Server Management Studio Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Developed and executed User Acceptance Testing portion of test plan Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS JavaScript AJAX JavaJ2EE Servlets JSP JDBC XML Python Django PHP Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Implemented configuration changes for data models Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis and Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Strategizing with QA team to integrate SeleniumQTP testing frameworks into the automation tools to achieve test automation process into CICD process Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and SQLalchemy Interacted with QA to develop test plans from highlevel design documentation Python Developer Viacom Inc Manhattan NY November 2009 to July 2012 For the extraction of data from the database various queries were written and a database was created using MYSQL Search engine optimization by replacing existing database with MongoDB NoSQL Database To build and populate DB and to ensure the standards the team of QA was also collaborated For sending and receiving the data between multiple systems RESTful WebServices were implemented Used Amazon Web Services for improved efficiency of storage and fast access Architected and implemented automated cloud infrastructure using Chef and Puppet on multiplatforms on AWS Cloud Servers Features for dashboard were developed and tested using CSS JavaScript Django and Bootstrap Git repository was created and added to GitHub project Experience with the Excel and MATLAB for interfacing matrix with other languages An application was developed in Linux environment and dealt with all its commands Performance and consistency being the main factors of consideration the code was tuned Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Participated in all the stages of software development lifecycle like design development and implementation and testing Django Framework that was used in developing web applications to implement the model view control architecture For database access Django APIsModels have been used Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Views and Templates were developed with Python and Bash scripting and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript jQuery and JSON Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Microsoft SQL Server Stored Procedures and Python Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Different testing methodologies like unit testing Integration testing web application testing was performed Skills Django 8 years Git 8 years HTML 8 years integration 8 years INTEGRATOR 8 years Additional Information Skills Operating Systems Linux Red hat 565 CentOS 67 Ubuntu Windows MAC OS X Languages Python Java Frameworks Django ORM Flask AngularJS TurboGears web2py Openstack Ember Js Scripting languages JavaScript Shell Scripting Markup languages HTML XML Json Databases MySQL MongoDB MS SQL PostgreSQL Oracle Servers Apache Tomcat and IBM Web sphere IDEs Sublime text PyCharm Eclipse Automation tools Jenkins Chef Methodologies tools Agile Scrum Waterfall Model UML Tracking Tools Jira Bugzilla Version Control Systems GIT SVN Bitbucket CVS Cloud Computing Platforms Amazon Web Services AWS Cloud Foundry Puppet Chef AWS Cloud Formation AWS Cloud Front AWS Beanstalk API Integration JSON REST XML SOAP Deployment Jenkins Chef Puppet Salt MS office tools Microsoft Excel Microsoft Word PowerPoint",
    "entities": [
        "Skills Django",
        "AJAX",
        "PythonPHP Architecture Having",
        "Test Driven Development TDD",
        "GUI",
        "CVS Git GitHub",
        "New York",
        "HTML AJAX CSS",
        "Git Built",
        "SQL Server Management Studio Maintained",
        "Agile Software Methodology",
        "DataStax Enterprise Cassandra",
        "webapp2",
        "Developed PythonDjango",
        "JSON",
        "LAMP Linux",
        "Flask Wrote",
        "IBM",
        "the Django Framework",
        "Heroku",
        "Panda",
        "XML",
        "Maintained",
        "Architected",
        "DevOps",
        "Automated",
        "Python Django Framework Extensive",
        "Amazon",
        "Djangos Test Module",
        "Data ImportExport",
        "Python",
        "ANT Python",
        "Evangelized",
        "Developed",
        "Python Django AWS Flask Jinja WSGI Fabric PostgreSQL",
        "WebServices",
        "MATLAB",
        "Python Unit",
        "UML",
        "Additional Information Skills Operating Systems",
        "CSS HTML JavaScript jQuery and JSON Developed",
        "HTML CSS JavaScript AJAX JavaJ2EE Servlets",
        "Chef and Puppet",
        "Numerical",
        "Linux",
        "Collaborated with Product Management",
        "AWS Coded",
        "Oracle DB2",
        "Design and Development Testing",
        "VMWare API",
        "ELB Cloud",
        "Team Foundation",
        "HerokuJenkins",
        "MVC",
        "Sr Python Developer Liberty Global Denver",
        "PythonDjango",
        "Chef Puppet",
        "Bash ExportedImported",
        "Django PHP Managed",
        "API",
        "QA",
        "AWS",
        "WAMP Windows Apache",
        "SQL Server Management Studio Design",
        "Postgres",
        "Amazon Web Services AWS Cloud Foundry Puppet Chef AWS Cloud Formation AWS Cloud Front AWS",
        "Python ORM Libraries",
        "SQL",
        "GitHub",
        "Amazon Web Services",
        "Django Oracle DB PostgreSQL",
        "lPythonspan",
        "Administrators",
        "Amazon Web Services AWS EC2",
        "TurboGears",
        "Python Developer Express",
        "Model View Control",
        "CICD",
        "antifactory chef custom",
        "Python Developer Viacom Inc Manhattan NY",
        "Bash Managed",
        "Pandas",
        "Maven",
        "Performed",
        "CM",
        "Djangos",
        "PostgreSQL",
        "Tkinter PyQt WxPython Experienced",
        "Microsoft",
        "Salt MS",
        "Utilized PyUnit",
        "SQL Queries Stored",
        "Oracle Servers Apache Tomcat",
        "CSS",
        "Tkinter",
        "REST",
        "Developed UI",
        "Analysis Design Development Management and Implementation",
        "PHP",
        "Django Oracle DB PostgreSQL Created",
        "MultiThreading Exception Handling and Collections Experience with",
        "PyTest",
        "Integration",
        "Developed GUI"
    ],
    "experience": "Experience with Design code debug operations reporting data analysis and web applications utilizing Python Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Experience in full SDLC starting from Design and Development Testing and documenting the entire life cycle using various methodologies Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid Python web application frameworks Strong expertise in the development of web based applications using Python Django HTML XML Angular JS CSS DHTML JavaScript JSON and Jquery Built web applications by using Python Django AWS Flask Jinja WSGI Fabric PostgreSQL REDIS Special skills in the development of effective userfriendly web applications Experiences in requirement gathering use case development Business Process Flow Business process modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Experience with Unit testing Test driven Development TDD Load Testing Worked on AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Experience in working with Python ORM Libraries including Django ORM Expertise in working with GUI frameworks Tkinter PyQt WxPython Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL and PythonPHP Architecture Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Exceptional problem solving and sound decisionmaking capabilities recognized by associates for the quality of data alternative solutions confident and accurate Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Used python to extract weekly hotel availability information from XML files Used Web Services to get travel destination data and rates Exposure in working for developing a portal to manage and entities in a content management system using Flask Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used the Django Framework to develop the application In depth exposure to creating API for internal and external application using REST and SOAP based design Experienced with full software development life cycle architecting scalable platforms object oriented programming database design and agile methodologies Designed automated the process of installation and configuration of secure DataStax Enterprise Cassandra using chef Experienced in agile and waterfall methodologies with high quality deliverables delivered ontime Wrote Automation test cases using Selenium WebDriver Junit Maven and Spring Participated in requirement gathering and worked closely with the architect in designing and modeling Worked in LAMP Linux Apache MySQL and Python Stack Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Performed Design and Code reviews Worked on development of SQL and stored procedures on MYSQL Installed and configured monitoring scripts for AWS EC2 instances also Configured and deployed project using the Amazon EC2 on AWS Coded test programs and evaluated existing engineering processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked with team of developers Business analysts and Data analysts on Python applications for RISK management Utilized PyUnit the Python Unit test framework for all Python applications For testing purpose used unit test framework unit test Used JIRA for bug tracking and issue tracking and Used Agile Methodology and SCRUM Process Using version control tool GitHub with Jenkins to accumulate all the work done by team members Collaborated with Product Management and User experience experts regarding product definition schedule scope and projectrelated decisions Work Experience Sr Python Developer NBC Universal New York NY January 2016 to Present Django Framework that was used in developing web applications to implement the model view control architecture Developing a middlelayer for serving data to frontend Webapp Was mostly responsible to fix and redesign the buggy Django layer Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Followed AGILE development methodology to develop the application Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing performed PythonDjango based web application and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ExportedImported data between different data sources using SQL Server Management Studio Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts and Delivered automated solutions for science models Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS JavaScript AJAX JavaJ2EE Servlets JSP JDBC XML Python Django PHP Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Implemented configuration changes for data models Maintained and updated existing automated solutions Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis and Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Developed GUI using Tkinter for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Responsible for user validations on client side as well as server side and executed User Acceptance Testing portion Automated the existing scripts for performance calculations using Numpy and SQLalchemy and Django ORM Interacted with QA to develop test plans from highlevel design documentation Implemented RESTful API which returns data from PostgreSQL in JSON format Able to scrape data from external sources and put them into a central database Expertise in Python scripts to phase XML documents and load the data in database Design and developed data management system using PostgreSQL Web service integration customized integrated medfusion secure practice portals Secure Message Web Created Python Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database EC2 and database security groups S3 bucket and application configuration this Script creates stacks single servers or joins web servers to stacks Integrated the userfacing elements developed by frontend developer with server side logic Evangelized the use of web services to implement application integrations Designed and implemented web application server Wrote Junit test cases for unit integration and functional tests run automatically by HudsonJenkins in the builds triggered by each push to Git Built application logic using Python 27 Used the Django Framework to develop the application Used Django APIs for database access Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Developed various algorithms for generating several data patterns Used JIRA for bug tracking and issue tracking Developed PythonDjango application for Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Sr Python Developer Liberty Global Denver CO May 2013 to December 2015 Responsible for Design develop test and maintenance of the website Interaction with client to understand expectations and requirements Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python and Wrote python scripts to parse XML documents and load the data in database Performed testing using Djangos Test Module and used PyTest for writing test cases Generate Python Django forms to record data of online users Developed a fully automated continuous integration system using GIT Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL Created Python Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database EC2 and database security groups S3 bucket and application configuration this Script creates stacks single servers or joins web servers to stacks Extensively used python modules such as requests urllib urllib2 for web crawling Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked in the DevOps team delivered new agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ant maven antifactory chef custom scripting and Jira for ticketing Rewrite existing PythonDjango modules to deliver certain format of data Used Pandas library for statistics Analysis NumPY for Numerical analysis Managed large datasets using Panda data frames and MySQL ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Responsible for debugging and troubleshooting the web application Successfully migrated all the data to the database while the site was in production Experience with automated CM and maintained a CICD pipeline deployment tools such as Chef Puppet or Ansible Maintained build related scripts developed in ANT Python and shell Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Generated Python Django Forms Crispy forms to record data login and signup of online users Designed email marketing campaigns and created responsive web forms that saved data into a database using Python Django Framework Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Python Developer Express Scripts Ann Arbor MI August 2012 to April 2013 Django Framework that was used in developing web applications to implement the model view control architecture Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Followed AGILE development methodology to develop the application Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing performed PythonDjango based web application and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ExportedImported data between different data sources using SQL Server Management Studio Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Developed and executed User Acceptance Testing portion of test plan Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS JavaScript AJAX JavaJ2EE Servlets JSP JDBC XML Python Django PHP Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Implemented configuration changes for data models Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis and Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Strategizing with QA team to integrate SeleniumQTP testing frameworks into the automation tools to achieve test automation process into CICD process Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and SQLalchemy Interacted with QA to develop test plans from highlevel design documentation Python Developer Viacom Inc Manhattan NY November 2009 to July 2012 For the extraction of data from the database various queries were written and a database was created using MYSQL Search engine optimization by replacing existing database with MongoDB NoSQL Database To build and populate DB and to ensure the standards the team of QA was also collaborated For sending and receiving the data between multiple systems RESTful WebServices were implemented Used Amazon Web Services for improved efficiency of storage and fast access Architected and implemented automated cloud infrastructure using Chef and Puppet on multiplatforms on AWS Cloud Servers Features for dashboard were developed and tested using CSS JavaScript Django and Bootstrap Git repository was created and added to GitHub project Experience with the Excel and MATLAB for interfacing matrix with other languages An application was developed in Linux environment and dealt with all its commands Performance and consistency being the main factors of consideration the code was tuned Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Participated in all the stages of software development lifecycle like design development and implementation and testing Django Framework that was used in developing web applications to implement the model view control architecture For database access Django APIsModels have been used Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Views and Templates were developed with Python and Bash scripting and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript jQuery and JSON Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Microsoft SQL Server Stored Procedures and Python Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Different testing methodologies like unit testing Integration testing web application testing was performed Skills Django 8 years Git 8 years HTML 8 years integration 8 years INTEGRATOR 8 years Additional Information Skills Operating Systems Linux Red hat 565 CentOS 67 Ubuntu Windows MAC OS X Languages Python Java Frameworks Django ORM Flask AngularJS TurboGears web2py Openstack Ember Js Scripting languages JavaScript Shell Scripting Markup languages HTML XML Json Databases MySQL MongoDB MS SQL PostgreSQL Oracle Servers Apache Tomcat and IBM Web sphere IDEs Sublime text PyCharm Eclipse Automation tools Jenkins Chef Methodologies tools Agile Scrum Waterfall Model UML Tracking Tools Jira Bugzilla Version Control Systems GIT SVN Bitbucket CVS Cloud Computing Platforms Amazon Web Services AWS Cloud Foundry Puppet Chef AWS Cloud Formation AWS Cloud Front AWS Beanstalk API Integration JSON REST XML SOAP Deployment Jenkins Chef Puppet Salt MS office tools Microsoft Excel Microsoft Word PowerPoint",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "NBC",
        "Universal",
        "New",
        "York",
        "NY",
        "Years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Management",
        "Implementation",
        "enterprise",
        "PythonDjango",
        "webapplications",
        "applications",
        "Python",
        "Django",
        "Mastering",
        "MVC",
        "architecture",
        "Django",
        "web",
        "applications",
        "OOP",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Experience",
        "Design",
        "code",
        "debug",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Experience",
        "SDLC",
        "Design",
        "Development",
        "Testing",
        "life",
        "cycle",
        "methodologies",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Python",
        "web",
        "application",
        "expertise",
        "development",
        "web",
        "applications",
        "Python",
        "Django",
        "HTML",
        "XML",
        "JS",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "Jquery",
        "web",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Jinja",
        "WSGI",
        "Fabric",
        "PostgreSQL",
        "REDIS",
        "skills",
        "development",
        "web",
        "applications",
        "Experiences",
        "requirement",
        "gathering",
        "use",
        "case",
        "development",
        "Business",
        "Process",
        "Flow",
        "Business",
        "process",
        "UML",
        "use",
        "cases",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "strings",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "DB2",
        "MySQL",
        "Experience",
        "version",
        "control",
        "systems",
        "CVS",
        "Git",
        "GitHub",
        "Amazon",
        "EC2",
        "deployment",
        "Heroku",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "Expertise",
        "GUI",
        "frameworks",
        "Tkinter",
        "PyQt",
        "WxPython",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "PHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "problem",
        "sound",
        "capabilities",
        "associates",
        "quality",
        "data",
        "solutions",
        "Performed",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "python",
        "hotel",
        "availability",
        "information",
        "XML",
        "files",
        "Web",
        "Services",
        "travel",
        "destination",
        "data",
        "rates",
        "Exposure",
        "portal",
        "entities",
        "content",
        "management",
        "system",
        "Flask",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "Django",
        "Framework",
        "application",
        "depth",
        "exposure",
        "API",
        "application",
        "REST",
        "SOAP",
        "design",
        "software",
        "development",
        "life",
        "cycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "process",
        "installation",
        "configuration",
        "DataStax",
        "Enterprise",
        "Cassandra",
        "chef",
        "methodologies",
        "quality",
        "deliverables",
        "ontime",
        "Wrote",
        "Automation",
        "test",
        "cases",
        "Selenium",
        "WebDriver",
        "Junit",
        "Maven",
        "Spring",
        "Participated",
        "requirement",
        "gathering",
        "architect",
        "modeling",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "Stack",
        "Issues",
        "Realtime",
        "data",
        "RabbitMQ",
        "Postgres",
        "Cassandra",
        "Performed",
        "Design",
        "Code",
        "reviews",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "Installed",
        "scripts",
        "AWS",
        "EC2",
        "instances",
        "project",
        "Amazon",
        "EC2",
        "AWS",
        "test",
        "programs",
        "engineering",
        "processes",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "team",
        "developers",
        "Business",
        "analysts",
        "Data",
        "analysts",
        "Python",
        "applications",
        "RISK",
        "management",
        "PyUnit",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "applications",
        "testing",
        "purpose",
        "unit",
        "test",
        "framework",
        "unit",
        "test",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "tracking",
        "Agile",
        "Methodology",
        "SCRUM",
        "Process",
        "version",
        "control",
        "tool",
        "GitHub",
        "Jenkins",
        "work",
        "team",
        "members",
        "Product",
        "Management",
        "User",
        "experience",
        "experts",
        "product",
        "definition",
        "schedule",
        "scope",
        "decisions",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "NBC",
        "Universal",
        "New",
        "York",
        "NY",
        "January",
        "Present",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "middlelayer",
        "data",
        "Webapp",
        "Django",
        "layer",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "AGILE",
        "development",
        "methodology",
        "application",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "PythonDjango",
        "web",
        "application",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "Design",
        "custom",
        "scripts",
        "use",
        "version",
        "controller",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Test",
        "custom",
        "scripts",
        "solutions",
        "science",
        "models",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "JavaJ2EE",
        "Servlets",
        "JSP",
        "JDBC",
        "XML",
        "Python",
        "Django",
        "PHP",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "modules",
        "requests",
        "urllib2",
        "web",
        "configuration",
        "changes",
        "data",
        "models",
        "solutions",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "Insurance",
        "premium",
        "datasets",
        "Panda",
        "data",
        "frames",
        "Developed",
        "GUI",
        "Tkinter",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "User",
        "Acceptance",
        "Testing",
        "portion",
        "scripts",
        "performance",
        "calculations",
        "Numpy",
        "SQLalchemy",
        "Django",
        "ORM",
        "QA",
        "test",
        "plans",
        "highlevel",
        "design",
        "documentation",
        "API",
        "data",
        "PostgreSQL",
        "format",
        "data",
        "sources",
        "database",
        "Expertise",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Design",
        "data",
        "management",
        "system",
        "PostgreSQL",
        "Web",
        "service",
        "integration",
        "medfusion",
        "practice",
        "Secure",
        "Message",
        "Web",
        "Python",
        "Scripts",
        "AWS",
        "services",
        "web",
        "servers",
        "ELB",
        "Cloud",
        "Distribution",
        "database",
        "EC2",
        "database",
        "security",
        "groups",
        "S3",
        "bucket",
        "application",
        "configuration",
        "Script",
        "servers",
        "web",
        "servers",
        "Integrated",
        "elements",
        "frontend",
        "developer",
        "server",
        "side",
        "logic",
        "use",
        "web",
        "services",
        "application",
        "integrations",
        "web",
        "application",
        "server",
        "Wrote",
        "Junit",
        "test",
        "cases",
        "unit",
        "integration",
        "tests",
        "HudsonJenkins",
        "builds",
        "push",
        "Git",
        "application",
        "logic",
        "Python",
        "Django",
        "Framework",
        "application",
        "Django",
        "APIs",
        "database",
        "access",
        "Developed",
        "Wrapper",
        "Python",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "algorithms",
        "data",
        "patterns",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "Developed",
        "PythonDjango",
        "application",
        "Analytics",
        "aggregation",
        "Used",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Sr",
        "Python",
        "Developer",
        "Liberty",
        "Global",
        "Denver",
        "CO",
        "May",
        "December",
        "Design",
        "test",
        "maintenance",
        "website",
        "Interaction",
        "client",
        "expectations",
        "requirements",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "PyTest",
        "test",
        "cases",
        "Generate",
        "Python",
        "Django",
        "data",
        "users",
        "integration",
        "system",
        "GIT",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "Python",
        "Scripts",
        "AWS",
        "services",
        "web",
        "servers",
        "ELB",
        "Cloud",
        "Distribution",
        "database",
        "EC2",
        "database",
        "security",
        "groups",
        "S3",
        "bucket",
        "application",
        "configuration",
        "Script",
        "servers",
        "web",
        "servers",
        "stacks",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Experience",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "DevOps",
        "team",
        "environments",
        "buildreleaseconfiguration",
        "deployment",
        "automationmonitoring",
        "Jenkins",
        "ant",
        "maven",
        "antifactory",
        "chef",
        "custom",
        "scripting",
        "Jira",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "NumPY",
        "Numerical",
        "analysis",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "program",
        "users",
        "manuals",
        "documentation",
        "web",
        "application",
        "data",
        "database",
        "site",
        "production",
        "Experience",
        "CM",
        "CICD",
        "pipeline",
        "deployment",
        "tools",
        "Chef",
        "Puppet",
        "Ansible",
        "scripts",
        "ANT",
        "Python",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "Python",
        "Django",
        "Forms",
        "Crispy",
        "forms",
        "data",
        "login",
        "users",
        "email",
        "marketing",
        "campaigns",
        "web",
        "forms",
        "data",
        "database",
        "Python",
        "Django",
        "Framework",
        "code",
        "reviewing",
        "GitHub",
        "pull",
        "requests",
        "code",
        "quality",
        "meetings",
        "peer",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "Developer",
        "Express",
        "Scripts",
        "Ann",
        "Arbor",
        "MI",
        "August",
        "April",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "AGILE",
        "development",
        "methodology",
        "application",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "PythonDjango",
        "web",
        "application",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "Design",
        "custom",
        "scripts",
        "use",
        "version",
        "controller",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Test",
        "custom",
        "scripts",
        "User",
        "Acceptance",
        "Testing",
        "portion",
        "test",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "JavaJ2EE",
        "Servlets",
        "JSP",
        "JDBC",
        "XML",
        "Python",
        "Django",
        "PHP",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "modules",
        "requests",
        "urllib2",
        "web",
        "configuration",
        "changes",
        "data",
        "models",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "Insurance",
        "premium",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "packages",
        "AON",
        "unit",
        "test",
        "data",
        "models",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "QA",
        "team",
        "SeleniumQTP",
        "testing",
        "frameworks",
        "automation",
        "tools",
        "test",
        "automation",
        "process",
        "CICD",
        "process",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "scripts",
        "performance",
        "calculations",
        "Numpy",
        "SQLalchemy",
        "Interacted",
        "QA",
        "test",
        "plans",
        "highlevel",
        "design",
        "documentation",
        "Python",
        "Developer",
        "Viacom",
        "Inc",
        "Manhattan",
        "NY",
        "November",
        "July",
        "extraction",
        "data",
        "database",
        "queries",
        "database",
        "MYSQL",
        "Search",
        "engine",
        "optimization",
        "database",
        "MongoDB",
        "NoSQL",
        "Database",
        "DB",
        "standards",
        "team",
        "QA",
        "data",
        "systems",
        "RESTful",
        "WebServices",
        "Amazon",
        "Web",
        "Services",
        "efficiency",
        "storage",
        "access",
        "cloud",
        "infrastructure",
        "Chef",
        "Puppet",
        "multiplatforms",
        "AWS",
        "Cloud",
        "Servers",
        "Features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Git",
        "repository",
        "GitHub",
        "project",
        "Experience",
        "Excel",
        "MATLAB",
        "matrix",
        "languages",
        "application",
        "Linux",
        "environment",
        "commands",
        "Performance",
        "consistency",
        "factors",
        "consideration",
        "code",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "stages",
        "software",
        "development",
        "lifecycle",
        "design",
        "development",
        "implementation",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "database",
        "access",
        "Django",
        "Business",
        "logic",
        "implementation",
        "data",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Python",
        "Django",
        "Views",
        "Templates",
        "Python",
        "Bash",
        "scripting",
        "website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "language",
        "Developed",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "JSON",
        "C",
        "SOAP",
        "web",
        "service",
        "application",
        "XML",
        "Requests",
        "scheduler",
        "option",
        "things",
        "times",
        "Microsoft",
        "SQL",
        "Server",
        "Stored",
        "Procedures",
        "Python",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "Django",
        "dashboard",
        "custom",
        "look",
        "end",
        "user",
        "study",
        "Django",
        "admin",
        "site",
        "dashboard",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "Skills",
        "Django",
        "years",
        "Git",
        "years",
        "HTML",
        "years",
        "integration",
        "years",
        "INTEGRATOR",
        "years",
        "Additional",
        "Information",
        "Skills",
        "Operating",
        "Systems",
        "Linux",
        "Red",
        "hat",
        "CentOS",
        "Ubuntu",
        "Windows",
        "MAC",
        "OS",
        "X",
        "Languages",
        "Python",
        "Java",
        "Frameworks",
        "Django",
        "ORM",
        "Flask",
        "TurboGears",
        "web2py",
        "Openstack",
        "Ember",
        "Js",
        "Scripting",
        "JavaScript",
        "Shell",
        "Scripting",
        "Markup",
        "HTML",
        "XML",
        "Json",
        "MySQL",
        "MongoDB",
        "MS",
        "SQL",
        "PostgreSQL",
        "Oracle",
        "Servers",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "sphere",
        "IDEs",
        "Sublime",
        "text",
        "PyCharm",
        "Eclipse",
        "Automation",
        "tools",
        "Jenkins",
        "Chef",
        "Methodologies",
        "tools",
        "Agile",
        "Scrum",
        "Waterfall",
        "Model",
        "UML",
        "Tracking",
        "Tools",
        "Jira",
        "Bugzilla",
        "Version",
        "Control",
        "Systems",
        "GIT",
        "SVN",
        "Bitbucket",
        "CVS",
        "Cloud",
        "Computing",
        "Platforms",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Foundry",
        "Puppet",
        "Chef",
        "AWS",
        "Cloud",
        "Formation",
        "Cloud",
        "Front",
        "Beanstalk",
        "API",
        "Integration",
        "JSON",
        "REST",
        "XML",
        "SOAP",
        "Deployment",
        "Jenkins",
        "Chef",
        "Puppet",
        "Salt",
        "MS",
        "office",
        "tools",
        "Microsoft",
        "Excel",
        "Microsoft",
        "Word",
        "PowerPoint"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:06:40.363329",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer NBC Universal New York NY 7 Years of experience in Analysis Design Development Management and Implementation of various standalone and clientserver enterprise PythonDjango based webapplications Developed webbased applications using Python 2726 Django 1413 Mastering in implementing MVC architecture using Django for web based applications in OOP concepts like MultiThreading Exception Handling and Collections Experience with Design code debug operations reporting data analysis and web applications utilizing Python Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Experience in full SDLC starting from Design and Development Testing and documenting the entire life cycle using various methodologies Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid Python web application frameworks Strong expertise in the development of web based applications using Python Django HTML XML Angular JS CSS DHTML JavaScript JSON and Jquery Built web applications by using Python Django AWS Flask Jinja WSGI Fabric PostgreSQL REDIS Special skills in the development of effective userfriendly web applications Experiences in requirement gathering use case development Business Process Flow Business process modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Experience with Unit testing Test driven Development TDD Load Testing Worked on AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Experience in working with Python ORM Libraries including Django ORM Expertise in working with GUI frameworks Tkinter PyQt WxPython Experienced in WAMP Windows Apache MYSQL Python PHP and LAMP Linux Apache MySQL and PythonPHP Architecture Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Exceptional problem solving and sound decisionmaking capabilities recognized by associates for the quality of data alternative solutions confident and accurate Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Used python to extract weekly hotel availability information from XML files Used Web Services to get travel destination data and rates Exposure in working for developing a portal to manage and entities in a content management system using Flask Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Used the Django Framework to develop the application In depth exposure to creating API for internal and external application using REST and SOAP based design Experienced with full software development life cycle architecting scalable platforms object oriented programming database design and agile methodologies Designed automated the process of installation and configuration of secure DataStax Enterprise Cassandra using chef Experienced in agile and waterfall methodologies with high quality deliverables delivered ontime Wrote Automation test cases using Selenium WebDriver Junit Maven and Spring Participated in requirement gathering and worked closely with the architect in designing and modeling Worked in LAMP Linux Apache MySQL and Python Stack Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Performed Design and Code reviews Worked on development of SQL and stored procedures on MYSQL Installed and configured monitoring scripts for AWS EC2 instances also Configured and deployed project using the Amazon EC2 on AWS Coded test programs and evaluated existing engineering processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked with team of developers Business analysts and Data analysts on Python applications for RISK management Utilized PyUnit the Python Unit test framework for all Python applications For testing purpose used unit test framework unit test Used JIRA for bug tracking and issue tracking and Used Agile Methodology and SCRUM Process Using version control tool GitHub with Jenkins to accumulate all the work done by team members Collaborated with Product Management and User experience experts regarding product definition schedule scope and projectrelated decisions Work Experience Sr Python Developer NBC Universal New York NY January 2016 to Present Django Framework that was used in developing web applications to implement the model view control architecture Developing a middlelayer for serving data to frontend Webapp Was mostly responsible to fix and redesign the buggy Django layer Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Followed AGILE development methodology to develop the application Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing performed PythonDjango based web application and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ExportedImported data between different data sources using SQL Server Management Studio Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts and Delivered automated solutions for science models Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS JavaScript AJAX JavaJ2EE Servlets JSP JDBC XML Python Django PHP Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Implemented configuration changes for data models Maintained and updated existing automated solutions Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis and Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Developed GUI using Tkinter for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Responsible for user validations on client side as well as server side and executed User Acceptance Testing portion Automated the existing scripts for performance calculations using Numpy and SQLalchemy and Django ORM Interacted with QA to develop test plans from highlevel design documentation Implemented RESTful API which returns data from PostgreSQL in JSON format Able to scrape data from external sources and put them into a central database Expertise in Python scripts to phase XML documents and load the data in database Design and developed data management system using PostgreSQL Web service integration customized integrated medfusion secure practice portals Secure Message Web Created Python Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database EC2 and database security groups S3 bucket and application configuration this Script creates stacks single servers or joins web servers to stacks Integrated the userfacing elements developed by frontend developer with server side logic Evangelized the use of web services to implement application integrations Designed and implemented web application server Wrote Junit test cases for unit integration and functional tests run automatically by HudsonJenkins in the builds triggered by each push to Git Built application logic using Python 27 Used the Django Framework to develop the application Used Django APIs for database access Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL dB package to retrieve information Developed various algorithms for generating several data patterns Used JIRA for bug tracking and issue tracking Developed PythonDjango application for Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Sr Python Developer Liberty Global Denver CO May 2013 to December 2015 Responsible for Design develop test and maintenance of the website Interaction with client to understand expectations and requirements Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python and Wrote python scripts to parse XML documents and load the data in database Performed testing using Djangos Test Module and used PyTest for writing test cases Generate Python Django forms to record data of online users Developed a fully automated continuous integration system using GIT Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL Created Python Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database EC2 and database security groups S3 bucket and application configuration this Script creates stacks single servers or joins web servers to stacks Extensively used python modules such as requests urllib urllib2 for web crawling Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked in the DevOps team delivered new agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ant maven antifactory chef custom scripting and Jira for ticketing Rewrite existing PythonDjango modules to deliver certain format of data Used Pandas library for statistics Analysis NumPY for Numerical analysis Managed large datasets using Panda data frames and MySQL ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Responsible for debugging and troubleshooting the web application Successfully migrated all the data to the database while the site was in production Experience with automated CM and maintained a CICD pipeline deployment tools such as Chef Puppet or Ansible Maintained build related scripts developed in ANT Python and shell Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Generated Python Django Forms Crispy forms to record data login and signup of online users Designed email marketing campaigns and created responsive web forms that saved data into a database using Python Django Framework Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Python Developer Express Scripts Ann Arbor MI August 2012 to April 2013 Django Framework that was used in developing web applications to implement the model view control architecture Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Followed AGILE development methodology to develop the application Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing performed PythonDjango based web application and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ExportedImported data between different data sources using SQL Server Management Studio Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Developed and executed User Acceptance Testing portion of test plan Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS JavaScript AJAX JavaJ2EE Servlets JSP JDBC XML Python Django PHP Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Extensively used python modules such as requests urllib urllib2 for web crawling Implemented configuration changes for data models Handled potential points of failure through error handling and communication of failure Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis and Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Strategizing with QA team to integrate SeleniumQTP testing frameworks into the automation tools to achieve test automation process into CICD process Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and SQLalchemy Interacted with QA to develop test plans from highlevel design documentation Python Developer Viacom Inc Manhattan NY November 2009 to July 2012 For the extraction of data from the database various queries were written and a database was created using MYSQL Search engine optimization by replacing existing database with MongoDB NoSQL Database To build and populate DB and to ensure the standards the team of QA was also collaborated For sending and receiving the data between multiple systems RESTful WebServices were implemented Used Amazon Web Services for improved efficiency of storage and fast access Architected and implemented automated cloud infrastructure using Chef and Puppet on multiplatforms on AWS Cloud Servers Features for dashboard were developed and tested using CSS JavaScript Django and Bootstrap Git repository was created and added to GitHub project Experience with the Excel and MATLAB for interfacing matrix with other languages An application was developed in Linux environment and dealt with all its commands Performance and consistency being the main factors of consideration the code was tuned Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Participated in all the stages of software development lifecycle like design development and implementation and testing Django Framework that was used in developing web applications to implement the model view control architecture For database access Django APIsModels have been used Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Views and Templates were developed with Python and Bash scripting and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript jQuery and JSON Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Microsoft SQL Server Stored Procedures and Python Scripts were designed and developed for Data ImportExport and Conversions A Django dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Different testing methodologies like unit testing Integration testing web application testing was performed Skills Django 8 years Git 8 years HTML 8 years integration 8 years INTEGRATOR 8 years Additional Information Skills Operating Systems Linux Red hat 565 CentOS 67 Ubuntu Windows MAC OS X Languages Python Java Frameworks Django ORM Flask AngularJS TurboGears web2py Openstack Ember Js Scripting languages JavaScript Shell Scripting Markup languages HTML XML Json Databases MySQL MongoDB MS SQL PostgreSQL Oracle Servers Apache Tomcat and IBM Web sphere IDEs Sublime text PyCharm Eclipse Automation tools Jenkins Chef Methodologies tools Agile Scrum Waterfall Model UML Tracking Tools Jira Bugzilla Version Control Systems GIT SVN Bitbucket CVS Cloud Computing Platforms Amazon Web Services AWS Cloud Foundry Puppet Chef AWS Cloud Formation AWS Cloud Front AWS Beanstalk API Integration JSON REST XML SOAP Deployment Jenkins Chef Puppet Salt MS office tools Microsoft Excel Microsoft Word PowerPoint",
    "unique_id": "ffba54c7-f604-42ba-b29d-4808b8643cae"
}