{
    "clean_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Verisk ISO Chicago IL 7 years of software development experience in requirements Analysis Design Coding Testing and production support of scalable MultiTier distributed enterprise applications using JavaJ2EE technologies Working knowledge in multitiered distributed environment OOAD concepts good understanding of Development Lifecycle SDLC Superior project implementation skills using Java Jsp Servlets JDBC JNDI JSTL RMI EJB Struts Spring JavaScript XMLSAX DOM Webservices JMS Java Mail JAXP WSDL SOAP RESTFul JSON Hibernate Experience on AgileScrum Waterfall RUP and Extreme Programming Test Driven development Pair Programming Code Reviews Extensively worked on coding using core java concepts like multithreading collections serialization Synchronization exception handling generics network APIs and database connections Strong frontend UI development skills using JSP JSP Custom Tag Libraries AJAX HTML5 CSS3 DHTML JavaScript jQuery DOM Responsive Web Design Bootstrap and experience in making WebPages cross browser compatible single page web applications using AngularJS Experience in developing web applications with various open source frameworks like JSF Spring Framework Spring MVC Spring AOP Spring ORM Struts Framework Struts Validation and Tiles Frameworks Handson experience with Spring Spring Data Spring Integration Spring DataRS Spring Security Proficient inpersistence frameworks Hibernate iBATIS JPA to map POJOs to a relational database and using Hibernate Query Language HQL Experience in implementing the declarative enterprise services using Spring AOP and implementation knowledge on spring web flow to manage the application page flows Experience in working with relational databases like Oracle 11g MySQL MS SQL Server using SQL PLSQL and NoSQL databases such as Mongo DB and Cassandra Extensive experience in using SQL and PLSQL to write Stored Procedures Functions Packages snapshots Triggers and optimization with Oracle DB2 and MySQL databasesHands on SQL Performance Tuning Operations and worked on database tools such as TOAD and SQL Loader Experienced in MEAN stack development MongoDB ExpressJS AngularJS NodeJS Experience in AngularJS for application implementation creating modules controllers routeProviders factory services ngrepeat customizable filter http getpost methods and directives to realize functionalities like REST service with Ajax call input validations searchable and sortable contents Handsome experience in writing light weight Nodejs express server and using technologies like JSON to make connections between server and databases like MongoDB and MySQL Experience with Angular JS MVC Framework including authoring complex directives services controllers and filters working with animations routing and states Good Experience working with Nodejs Grunt Bower Express HTTP FS andexperience implementing custom directives in Angular JS Experienced in developing REST based Web API with Node JS using routing frameworks such as Express JS and Restify REST API for CRUD operations to develop MongoDB DAO connectivity Experience in CSS preprocessors SASS LESS Strong experience in Service Oriented Architecture SOA and publishing web servicesSOAP RESTful that include several components like SOAP WSDL XML XSD UDDI JAXRS and JAXWS JAXRPC JAXB Good exposure to tools like SoapUI Postman for testing SOAP and RESTful web services browser plugins like Advanced REST client and also CURL using command line for testing HTTP requests Proficient in JavaJ2EE Design Patterns including singleton command object pool session facade Model View Controller MVC Data Access Object DAO Data Transfer Object DTO and Business Delegate in the development of MultiTier distributed Applications Experience in designing developing applications using Struts 1x2x Frame work Oauth framework and configured the validation framework for validations and Tiles framework for layout management Strong experience in XML related technologies including XSD DTD XSLT XPATH DOMJDOMSAX JAXP JAXB XMLRPC Document Handlers XML Beans and Castor Framework Proficient in handling web and application servers in creating Domain configuring connection pool JMS deploying applications on WebLogic WebSphere Apache Tomcat Glassfish and JBoss Experienced in use of build tools like Apache Ant Maven Gradle Jenkins and logging tools like log4J project tracking tools by JIRA and QC Involved in Unit Test Cases writing and having good knowledge in JUnit used mocking frame work like Mockito JMockit Spring test with Groovy for debugging and testing the applications Expertise in UML which includes creating UseCase diagrams Class diagrams Interaction diagrams Sequence diagrams Activity diagrams using Designer tools like MS Visio Rational Rose Experience in Version Control tools like CVS Clear Case SVN GIT for Source Code version management and merging Source code after intermittent Project releases Development experience in different OS like Windows Linux and UNIX and excellent troubleshooting skills Innovative team player proven to work under tight deadlines and work pressure Ability to learn and merge new technologies quickly Excellent problem solving analytical and communication skills Sponsorship required to work in the US Authorized to work in the US for any employer Work Experience Java Full Stack Developer Verisk ISO Chicago IL August 2016 to Present Responsibilities Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC Followed Agile Scrum Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the application using Spring MVC intensively that leverages classical MVC architecture and JavaScript for major data entry that involved extreme level of data validation at client side Involved in developing code for obtaining bean references in springframework using Dependency Injection Inversion of Control IOC and Aspect Oriented Programming AOP on SpringSource Tool Suite Created the Spring Bean Factory for initializing services Added security for service layer methods using Spring Security Integrated Single sign on sing LDAP and Active directory on Spring security layer successfully maintained users and groups integrity in the application Created and injected Spring services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Extensively used XML Web Services for transferringretrieving data between different providers Extensively involved in developing Restful Web services using Jersey framework JAXRS and REST annotations Implemented Single Page Design and customized directive and filter criteria by using AngularJS Created RESTful APIs in Express and returned logic through AngularJS data binding Wrote tests in Mocha on server side and Jasmine on the client side Utilized AngularJS UIbootstrap components like time picker directives model popups nggrid router progress bar ngIdle ngUpload Implemented flexible routing and nested using AngularJSuirouter Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Developed Hibernate with Spring Integration as the data abstraction to interact with the database and used dependency injection DI using Spring framework and annotations Used Hibernate for mapping java classes with database and created queries with Hibernate query language HQL Extensively used IBM REST API in task assignment reassignment closure and adhoc task implementation Incorporated knowledge of TDD and BDD for front end UI applications and performed endtoend testing with Protractor Maintained the code repository on SVN through frequent and definite updates and built the application using Maven to deploy on WebSphere Server and used Jenkins for continuous integration Environment Spring Framework Hibernate 43 HTML CSS3 AngularJS JavaScript XML JSON RESTful Webservices JMS Websphere Spring Tool Suite SVN Maven JIRA Jenkins log4j Jersey DB2 Java Full Stack Developer Jackson National Life Insurance Franklin TN September 2015 to August 2016 Responsibilities Responsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels Followed iterative application development specified by Agile Scrum methodology consisting of weekly Sprints and stand up meetings and built the application with Test Driven Development TDD Designed the system based on Spring MVC Model architecture Developed a business logic layer using Spring Dependency Injection and client side Javabeans for DAO Design Patterns Developed the spring AOP programming to configure logging for the application and also to track CRUD operations on the database Used Spring Transactions and Spring Web Flow for Payment and Money Transfer Worked on coding standalone batch jobs and providing monitoring and application support using Spring Batches Java Batches and ETL batch jobs Used Spring Batch with Quartz scheduler for generate the reports Involved in design and development of UI component which includes layered POVs and Carousels using frameworks AngularJS JavaScript and Jquery in conjunction with HTML5 CSS3 Bootstrap and LESS Implemented core features of AngularJS framework such as dependency Injection Databinding Filters Directives Templates Services and Deep Linking Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Used Express JS to build a web service to provide access to the models and exposed it using a REST API that emits JSON Secured the app with Passport JS using a local strategy Called REST web services through AngularJS services to get JSON Object and modified the response object to display in UI Developed REST architecture based web services using JAXWS to facilitate communication between client and servers Involved in development of web services for business operations using SOAP WSDL JAXWS JDOM XML XSL and Apache CXF Implemented various design patterns Singleton Data Access Object DAO Command Design Pattern Abstract Factory Factory Method Design Pattern Worked on XML parsing by using JAXB for XML Schema Validation Used XSLT to transform my XML data structure into HTML pages Used Mongoose JS to access the documents from the NodeJS web server and build data models for the entities in the database schema Performed CRUD operations like Update Insert and Delete data in MongoDB and Oracle database management system and handled database access and data transmission based on RESTful web service Configured deployed Java applications on Amazon Web ServicesAWS for a multitude of applications utilizing the AWS stack cloud formation Used Spring ORM Support for Hibernate to manage efficiently Hibernate Resources and consistent exception Hierarchy Implemented persistence layer using various features like XML configuration file for Database connectivity connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control using ORM tool Hibernate 30 framework like HQL queries etc Used Java Message Service JMS for reliable and asynchronous exchange of important information such as order status report delivery report Wrote JMS class to transfer the orders between agents and policy holders Used JMS using RabitMQ to report failure of connectivity between Quad instance and other components in Cluster Extensively used the Log4j for Logging Errors debugging and tracking and Exception statements Created build files using Maven Developed the application using Eclipse IDE GIT for version control and Jenkins for continuous integration Used Hibernate ORM frameworks for database connectivity Developed SQL procedures for login module and written complex SQL queries Worked in an Agile environment delivering output in sprints Used Apache Tomcat 7 as the server to host the application Generated UML artifacts such as use cases sequence diagrams class diagrams using Rational Application Developer Wrote Junit test cases with Mockito Mock MVC test framework resolved bugs and Eclipses debugging tool Involved in various internal releases of the application and supported the application modules during testing and preproduction phases Environment MEAN Stack MongoDB Express AngularJS NodeJS Spring Framework RESTfulWebServices JSON Apache CXF HTML5 CSS3 Bootstrap JMS RabitMQ Hibernate 43 Oracle database Spring Tool Suite Windows 7 JUint Git Maven Jenkins and Tomcat JAVA J2EE Developer Acxiom Corporation Little Rock AR December 2014 to September 2015 Responsibilities Participated in all aspects of the development lifecycle from design to development to deployment and ongoing enhancements Contributed to project by working on end to end flow developing JSPs for front end by developing Servlets BO classes in middle tier and to database by writing various SQL queries and Stored Procedures Extensively used Spring MVC model to implement the application and created Spring Beans using IOC and AOP Developed the controller business logic and DAO classes achieving dependency injection Leveraged Spring as middletier application framework persistence strategy using spring support for Hibernate and declarative transaction management Implement the authentication authorization and accesscontrol features by using Spring Security Implemented remote service access with Spring Remoting Used factory inAngularJS to use the common functions in different views to reduce redundancy and improve maintenance of the code Implemented authentication session to certain routes and cache strategies for certain HTTP requests Used Bootstrapmedia queries to create Responsive Webpages across the different size of screen from phone or Laptop Defined new validations through AngularJS for the forms through HTML and used AJAX JSON to send requests to the server Wrote AJAX calls to populate tables tab menu and other components with JSON data in AngularJS Implemented the integration with the back end system with web services using REST Involved in developing Restful Web services using Jersey framework JAXRS and REST annotations and used JACSON based RESTJSON convertors Work involved extensive usage of HTML5 CSS3 Bootstrap AJAX AngularJS and JavaScript for client side development and validations Implemented JMS based SOAP Web service using Spring CXF JMS config and Mule ESB Built various capabilities in ESB like Security Message routing message transformation transaction management etc Wrote Hibernate configuration files mapping files and defined persistence classes to persist data into MySQL Database Configured Hibernate session factory to integrate Hibernate with Spring and used JPAHibernate to communicate with data layer and XMLJAXB to read XML data Configured IBMMQ in servers as message driven architecture for the exchange of messages between the applicationsCreated topics queues and MDBs for communication using JMSIBM MQ Series Formalized code organization to comply with the official database design and improved table structure Created Database tables and views using HLD Data Model ER Diagrams Configured the connection pools and security for the server Used JUnit to perform unit testing Followed the Maven build life cycle to build the application warear files and deployed into Websphere Application server Used JIRA for task assignment bug tracking and fixture Estimated engineering efforts planned implementations rolled out system changes and triaged production issues Developed project plans adhered to project milestones monitored project progress management reporting resource management coordinated offshore development activities Environment Spring Framework AngularJS NodeJS JavaScript REST SOAP WebServices XML JMSIBM MQ Bootstrap JMS Hibernate JUnit Eclipse Bootstrap AJAX JSON HTML CSS3 MySQL database SVN JIRA Maven Junit WebSphere JAVA J2EE Developer Javelin Capital New York NY August 2011 to November 2014 Responsibilities Involved in business discussions regarding Requirements analysis System Module Specifications and Implementation feasibility analysis with business analysts at all levels Engaged in the development of the entire spectrum of business components including the web interface J2EE based middleware and authentication systems database connectivity systems and relational databases Worked on SOA to develop RESTful Web service to generate and consume services from different modules Implemented MVC Framework to make single page applications for responsive services Involved in invoking the Web Services by making using of Axis REST WSDL SOAP with techniques such as Ajax JQuery JSON JVM DHTML and DOM scripting Extensively usedSpring FrameworksIOC Dependency Injection to inject Service Object using Service Locator Design Pattern into Action Classes Used Spring MVC Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate Used Spring ORM Support for Hibernate to manage efficiently Hibernate Resources and consistent exception Hierarchy Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar actionvalue change listeners with JSF for enhancing the front end GUI layout Used JQueryvalidationframework for front end validations Implemented JSF with Managed Beans Topics and Connection Factories in project Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Constructed JSF Portal Framework at Presentation Tier and Faces Servlet acts as the Front Controller Creating custom JSF Facelet tags for error handling datatables truefalse markers etc Creating generic progress message and error handling using Richfaces Modal component Involved in fixing the bugs at Development and production levels with onsite Offshore delivery model Environment Java J2EE JSF JSP JSTL Servlets Hibernate Spring MVC Spring Security Spring ORM SQL MySQL DB2 JBOSS XML JavaScript JQuery JMS REST SOAP UML JUnit Log4J SVN Gradle TDD JMeter JAVA Developer Sonata Software Ltd January 2009 to July 2011 Responsibilities System was developed using Java J2EE technologies and open source frameworks and application was implemented using struts architecture Implemented MVC architecture and DAO design pattern for maximum abstraction of the application and code reusability Followed agile methodologies to execute project Build the application using TDD Test Driven Development approach Developed various helper classes using Core Java multithreaded programming and Collection classes Involved in all layers like Presentation Layer Business Logic and Data Access Layers Using technologies like SOAP WSDL and UDDI based Web Services Exposing and consuming web services using SOAPWSDL for getting request from external source systems and sending response to external source systems Environment Java J2EE Struts Spring EJB HTML CSS JavaScript AJAX jQuery MVC Oracle WebLogic DAO JDBC Servlets JSP TDD XML SQL JMS Web Services CVS SOAP Eclipse Education Bachelors",
    "entities": [
        "QC Involved",
        "WebSphere Server",
        "Hibernate iBATIS JPA",
        "Angular JS Experienced",
        "GUI",
        "ORM",
        "Nodejs",
        "MS Visio Rational Rose Experience",
        "JACSON",
        "UNIX",
        "Implemented Single Page Design",
        "Action Classes",
        "Test Driven Development TDD Designed",
        "AJAX JSON",
        "Jersey",
        "HTTP",
        "Software Development Lifecycle SDLC",
        "Working",
        "Created Database",
        "JSON",
        "Present Responsibilities Involved",
        "IBM",
        "Spring Beans",
        "Apache CXF Implemented",
        "Hibernate Session Factory",
        "Responsive Webpages",
        "Singleton Data Access Object DAO Command Design Pattern Abstract Factory Factory",
        "Requirements",
        "Express",
        "SOAP",
        "XML",
        "Laptop Defined",
        "Restful Web",
        "JSP JSP Custom Tag Libraries AJAX HTML5",
        "Functional Architects Developed",
        "Coordinate",
        "JAXWS",
        "JIRA",
        "JUnit",
        "WebLogic",
        "JavaJ2EE",
        "Amazon",
        "Responsive Webpage",
        "Jackson National Life Insurance Franklin",
        "Developed Hibernate with Spring Integration",
        "Hibernate Spring",
        "DAO",
        "LDAP",
        "Injection Databinding Filters Directives Templates Services",
        "JSON Secured",
        "Version Control",
        "DI",
        "Implemented MVC Framework",
        "Mockito",
        "Utilized",
        "TDD Test Driven Development",
        "UML",
        "Websphere Application",
        "Servlets",
        "Sequence",
        "Exception",
        "Bootstrapmedia",
        "JMSIBM",
        "CURL",
        "SOA",
        "Spring Security",
        "JSP",
        "Maven Developed",
        "Oracle DB2",
        "IOC",
        "SQL Loader Experienced",
        "Mockito Mock",
        "JPAHibernate",
        "DOM",
        "Model View Controller",
        "Spring Framework RESTfulWebServices",
        "Panel",
        "Developed SQL",
        "MVC",
        "Interface",
        "Hibernate Query Language HQL Experience",
        "JMS Web Services CVS SOAP",
        "JavaScript jQuery DOM Responsive Web Design Bootstrap",
        "GIT",
        "Node JS",
        "HTML5 CSS3 Bootstrap",
        "Wrote Hibernate",
        "Richfaces Modal",
        "MVC Spring AOP Spring ORM",
        "US",
        "Created",
        "Project releases Development",
        "BDD",
        "AWS",
        "XMLJAXB",
        "Sprints",
        "Aspect Oriented Programming AOP on SpringSource Tool Suite Created",
        "Oracle",
        "Presentation Layer Business Logic and Data Access Layers Using",
        "JSF",
        "Extreme Programming Test Driven",
        "JSF Spring Framework Spring",
        "Passport JS",
        "XSLT XPATH DOMJDOMSAX JAXP",
        "CXF",
        "WebPages",
        "SQL",
        "Deep Linking Created",
        "Spring Security Implemented",
        "Hibernate Resources",
        "JAXRS",
        "JSF Facelet",
        "Quartz",
        "UDDI",
        "ETL",
        "CRUD",
        "HLD Data Model ER Diagrams Configured",
        "Update Insert",
        "Backend",
        "UI Developed",
        "Spring AOP",
        "Web Services Exposing",
        "Maven",
        "Build",
        "XSLT",
        "Developer Sonata Software Ltd",
        "AOP Developed",
        "Created RESTful APIs in",
        "Angular JS MVC Framework",
        "JBoss Experienced",
        "JavaScript",
        "UI",
        "XML Web Services",
        "OOAD",
        "WebLogic WebSphere Apache",
        "Delete",
        "Collection classes Involved",
        "XSD",
        "Dependency Injection Inversion of Control IOC",
        "Nodejs Grunt Bower Express",
        "REST Involved",
        "Eclipses",
        "SVN",
        "CSS",
        "REST",
        "Used Express",
        "Rational Application Developer Wrote Junit",
        "the Spring Bean Factory",
        "JMS Java Mail JAXP WSDL SOAP RESTFul JSON Hibernate",
        "NoSQL",
        "TDD",
        "TOAD",
        "Mongo DB",
        "ESB",
        "Designer"
    ],
    "experience": "Experience on AgileScrum Waterfall RUP and Extreme Programming Test Driven development Pair Programming Code Reviews Extensively worked on coding using core java concepts like multithreading collections serialization Synchronization exception handling generics network APIs and database connections Strong frontend UI development skills using JSP JSP Custom Tag Libraries AJAX HTML5 CSS3 DHTML JavaScript jQuery DOM Responsive Web Design Bootstrap and experience in making WebPages cross browser compatible single page web applications using AngularJS Experience in developing web applications with various open source frameworks like JSF Spring Framework Spring MVC Spring AOP Spring ORM Struts Framework Struts Validation and Tiles Frameworks Handson experience with Spring Spring Data Spring Integration Spring DataRS Spring Security Proficient inpersistence frameworks Hibernate iBATIS JPA to map POJOs to a relational database and using Hibernate Query Language HQL Experience in implementing the declarative enterprise services using Spring AOP and implementation knowledge on spring web flow to manage the application page flows Experience in working with relational databases like Oracle 11 g MySQL MS SQL Server using SQL PLSQL and NoSQL databases such as Mongo DB and Cassandra Extensive experience in using SQL and PLSQL to write Stored Procedures Functions Packages snapshots Triggers and optimization with Oracle DB2 and MySQL databasesHands on SQL Performance Tuning Operations and worked on database tools such as TOAD and SQL Loader Experienced in MEAN stack development MongoDB ExpressJS AngularJS NodeJS Experience in AngularJS for application implementation creating modules controllers routeProviders factory services ngrepeat customizable filter http getpost methods and directives to realize functionalities like REST service with Ajax call input validations searchable and sortable contents Handsome experience in writing light weight Nodejs express server and using technologies like JSON to make connections between server and databases like MongoDB and MySQL Experience with Angular JS MVC Framework including authoring complex directives services controllers and filters working with animations routing and states Good Experience working with Nodejs Grunt Bower Express HTTP FS andexperience implementing custom directives in Angular JS Experienced in developing REST based Web API with Node JS using routing frameworks such as Express JS and Restify REST API for CRUD operations to develop MongoDB DAO connectivity Experience in CSS preprocessors SASS LESS Strong experience in Service Oriented Architecture SOA and publishing web servicesSOAP RESTful that include several components like SOAP WSDL XML XSD UDDI JAXRS and JAXWS JAXRPC JAXB Good exposure to tools like SoapUI Postman for testing SOAP and RESTful web services browser plugins like Advanced REST client and also CURL using command line for testing HTTP requests Proficient in JavaJ2EE Design Patterns including singleton command object pool session facade Model View Controller MVC Data Access Object DAO Data Transfer Object DTO and Business Delegate in the development of MultiTier distributed Applications Experience in designing developing applications using Struts 1x2x Frame work Oauth framework and configured the validation framework for validations and Tiles framework for layout management Strong experience in XML related technologies including XSD DTD XSLT XPATH DOMJDOMSAX JAXP JAXB XMLRPC Document Handlers XML Beans and Castor Framework Proficient in handling web and application servers in creating Domain configuring connection pool JMS deploying applications on WebLogic WebSphere Apache Tomcat Glassfish and JBoss Experienced in use of build tools like Apache Ant Maven Gradle Jenkins and logging tools like log4J project tracking tools by JIRA and QC Involved in Unit Test Cases writing and having good knowledge in JUnit used mocking frame work like Mockito JMockit Spring test with Groovy for debugging and testing the applications Expertise in UML which includes creating UseCase diagrams Class diagrams Interaction diagrams Sequence diagrams Activity diagrams using Designer tools like MS Visio Rational Rose Experience in Version Control tools like CVS Clear Case SVN GIT for Source Code version management and merging Source code after intermittent Project releases Development experience in different OS like Windows Linux and UNIX and excellent troubleshooting skills Innovative team player proven to work under tight deadlines and work pressure Ability to learn and merge new technologies quickly Excellent problem solving analytical and communication skills Sponsorship required to work in the US Authorized to work in the US for any employer Work Experience Java Full Stack Developer Verisk ISO Chicago IL August 2016 to Present Responsibilities Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC Followed Agile Scrum Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the application using Spring MVC intensively that leverages classical MVC architecture and JavaScript for major data entry that involved extreme level of data validation at client side Involved in developing code for obtaining bean references in springframework using Dependency Injection Inversion of Control IOC and Aspect Oriented Programming AOP on SpringSource Tool Suite Created the Spring Bean Factory for initializing services Added security for service layer methods using Spring Security Integrated Single sign on sing LDAP and Active directory on Spring security layer successfully maintained users and groups integrity in the application Created and injected Spring services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Extensively used XML Web Services for transferringretrieving data between different providers Extensively involved in developing Restful Web services using Jersey framework JAXRS and REST annotations Implemented Single Page Design and customized directive and filter criteria by using AngularJS Created RESTful APIs in Express and returned logic through AngularJS data binding Wrote tests in Mocha on server side and Jasmine on the client side Utilized AngularJS UIbootstrap components like time picker directives model popups nggrid router progress bar ngIdle ngUpload Implemented flexible routing and nested using AngularJSuirouter Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Developed Hibernate with Spring Integration as the data abstraction to interact with the database and used dependency injection DI using Spring framework and annotations Used Hibernate for mapping java classes with database and created queries with Hibernate query language HQL Extensively used IBM REST API in task assignment reassignment closure and adhoc task implementation Incorporated knowledge of TDD and BDD for front end UI applications and performed endtoend testing with Protractor Maintained the code repository on SVN through frequent and definite updates and built the application using Maven to deploy on WebSphere Server and used Jenkins for continuous integration Environment Spring Framework Hibernate 43 HTML CSS3 AngularJS JavaScript XML JSON RESTful Webservices JMS Websphere Spring Tool Suite SVN Maven JIRA Jenkins log4j Jersey DB2 Java Full Stack Developer Jackson National Life Insurance Franklin TN September 2015 to August 2016 Responsibilities Responsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels Followed iterative application development specified by Agile Scrum methodology consisting of weekly Sprints and stand up meetings and built the application with Test Driven Development TDD Designed the system based on Spring MVC Model architecture Developed a business logic layer using Spring Dependency Injection and client side Javabeans for DAO Design Patterns Developed the spring AOP programming to configure logging for the application and also to track CRUD operations on the database Used Spring Transactions and Spring Web Flow for Payment and Money Transfer Worked on coding standalone batch jobs and providing monitoring and application support using Spring Batches Java Batches and ETL batch jobs Used Spring Batch with Quartz scheduler for generate the reports Involved in design and development of UI component which includes layered POVs and Carousels using frameworks AngularJS JavaScript and Jquery in conjunction with HTML5 CSS3 Bootstrap and LESS Implemented core features of AngularJS framework such as dependency Injection Databinding Filters Directives Templates Services and Deep Linking Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Used Express JS to build a web service to provide access to the models and exposed it using a REST API that emits JSON Secured the app with Passport JS using a local strategy Called REST web services through AngularJS services to get JSON Object and modified the response object to display in UI Developed REST architecture based web services using JAXWS to facilitate communication between client and servers Involved in development of web services for business operations using SOAP WSDL JAXWS JDOM XML XSL and Apache CXF Implemented various design patterns Singleton Data Access Object DAO Command Design Pattern Abstract Factory Factory Method Design Pattern Worked on XML parsing by using JAXB for XML Schema Validation Used XSLT to transform my XML data structure into HTML pages Used Mongoose JS to access the documents from the NodeJS web server and build data models for the entities in the database schema Performed CRUD operations like Update Insert and Delete data in MongoDB and Oracle database management system and handled database access and data transmission based on RESTful web service Configured deployed Java applications on Amazon Web ServicesAWS for a multitude of applications utilizing the AWS stack cloud formation Used Spring ORM Support for Hibernate to manage efficiently Hibernate Resources and consistent exception Hierarchy Implemented persistence layer using various features like XML configuration file for Database connectivity connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control using ORM tool Hibernate 30 framework like HQL queries etc Used Java Message Service JMS for reliable and asynchronous exchange of important information such as order status report delivery report Wrote JMS class to transfer the orders between agents and policy holders Used JMS using RabitMQ to report failure of connectivity between Quad instance and other components in Cluster Extensively used the Log4j for Logging Errors debugging and tracking and Exception statements Created build files using Maven Developed the application using Eclipse IDE GIT for version control and Jenkins for continuous integration Used Hibernate ORM frameworks for database connectivity Developed SQL procedures for login module and written complex SQL queries Worked in an Agile environment delivering output in sprints Used Apache Tomcat 7 as the server to host the application Generated UML artifacts such as use cases sequence diagrams class diagrams using Rational Application Developer Wrote Junit test cases with Mockito Mock MVC test framework resolved bugs and Eclipses debugging tool Involved in various internal releases of the application and supported the application modules during testing and preproduction phases Environment MEAN Stack MongoDB Express AngularJS NodeJS Spring Framework RESTfulWebServices JSON Apache CXF HTML5 CSS3 Bootstrap JMS RabitMQ Hibernate 43 Oracle database Spring Tool Suite Windows 7 JUint Git Maven Jenkins and Tomcat JAVA J2EE Developer Acxiom Corporation Little Rock AR December 2014 to September 2015 Responsibilities Participated in all aspects of the development lifecycle from design to development to deployment and ongoing enhancements Contributed to project by working on end to end flow developing JSPs for front end by developing Servlets BO classes in middle tier and to database by writing various SQL queries and Stored Procedures Extensively used Spring MVC model to implement the application and created Spring Beans using IOC and AOP Developed the controller business logic and DAO classes achieving dependency injection Leveraged Spring as middletier application framework persistence strategy using spring support for Hibernate and declarative transaction management Implement the authentication authorization and accesscontrol features by using Spring Security Implemented remote service access with Spring Remoting Used factory inAngularJS to use the common functions in different views to reduce redundancy and improve maintenance of the code Implemented authentication session to certain routes and cache strategies for certain HTTP requests Used Bootstrapmedia queries to create Responsive Webpages across the different size of screen from phone or Laptop Defined new validations through AngularJS for the forms through HTML and used AJAX JSON to send requests to the server Wrote AJAX calls to populate tables tab menu and other components with JSON data in AngularJS Implemented the integration with the back end system with web services using REST Involved in developing Restful Web services using Jersey framework JAXRS and REST annotations and used JACSON based RESTJSON convertors Work involved extensive usage of HTML5 CSS3 Bootstrap AJAX AngularJS and JavaScript for client side development and validations Implemented JMS based SOAP Web service using Spring CXF JMS config and Mule ESB Built various capabilities in ESB like Security Message routing message transformation transaction management etc Wrote Hibernate configuration files mapping files and defined persistence classes to persist data into MySQL Database Configured Hibernate session factory to integrate Hibernate with Spring and used JPAHibernate to communicate with data layer and XMLJAXB to read XML data Configured IBMMQ in servers as message driven architecture for the exchange of messages between the applicationsCreated topics queues and MDBs for communication using JMSIBM MQ Series Formalized code organization to comply with the official database design and improved table structure Created Database tables and views using HLD Data Model ER Diagrams Configured the connection pools and security for the server Used JUnit to perform unit testing Followed the Maven build life cycle to build the application warear files and deployed into Websphere Application server Used JIRA for task assignment bug tracking and fixture Estimated engineering efforts planned implementations rolled out system changes and triaged production issues Developed project plans adhered to project milestones monitored project progress management reporting resource management coordinated offshore development activities Environment Spring Framework AngularJS NodeJS JavaScript REST SOAP WebServices XML JMSIBM MQ Bootstrap JMS Hibernate JUnit Eclipse Bootstrap AJAX JSON HTML CSS3 MySQL database SVN JIRA Maven Junit WebSphere JAVA J2EE Developer Javelin Capital New York NY August 2011 to November 2014 Responsibilities Involved in business discussions regarding Requirements analysis System Module Specifications and Implementation feasibility analysis with business analysts at all levels Engaged in the development of the entire spectrum of business components including the web interface J2EE based middleware and authentication systems database connectivity systems and relational databases Worked on SOA to develop RESTful Web service to generate and consume services from different modules Implemented MVC Framework to make single page applications for responsive services Involved in invoking the Web Services by making using of Axis REST WSDL SOAP with techniques such as Ajax JQuery JSON JVM DHTML and DOM scripting Extensively usedSpring FrameworksIOC Dependency Injection to inject Service Object using Service Locator Design Pattern into Action Classes Used Spring MVC Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate Used Spring ORM Support for Hibernate to manage efficiently Hibernate Resources and consistent exception Hierarchy Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar actionvalue change listeners with JSF for enhancing the front end GUI layout Used JQueryvalidationframework for front end validations Implemented JSF with Managed Beans Topics and Connection Factories in project Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Constructed JSF Portal Framework at Presentation Tier and Faces Servlet acts as the Front Controller Creating custom JSF Facelet tags for error handling datatables truefalse markers etc Creating generic progress message and error handling using Richfaces Modal component Involved in fixing the bugs at Development and production levels with onsite Offshore delivery model Environment Java J2EE JSF JSP JSTL Servlets Hibernate Spring MVC Spring Security Spring ORM SQL MySQL DB2 JBOSS XML JavaScript JQuery JMS REST SOAP UML JUnit Log4J SVN Gradle TDD JMeter JAVA Developer Sonata Software Ltd January 2009 to July 2011 Responsibilities System was developed using Java J2EE technologies and open source frameworks and application was implemented using struts architecture Implemented MVC architecture and DAO design pattern for maximum abstraction of the application and code reusability Followed agile methodologies to execute project Build the application using TDD Test Driven Development approach Developed various helper classes using Core Java multithreaded programming and Collection classes Involved in all layers like Presentation Layer Business Logic and Data Access Layers Using technologies like SOAP WSDL and UDDI based Web Services Exposing and consuming web services using SOAPWSDL for getting request from external source systems and sending response to external source systems Environment Java J2EE Struts Spring EJB HTML CSS JavaScript AJAX jQuery MVC Oracle WebLogic DAO JDBC Servlets JSP TDD XML SQL JMS Web Services CVS SOAP Eclipse Education Bachelors",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Verisk",
        "ISO",
        "Chicago",
        "IL",
        "years",
        "software",
        "development",
        "experience",
        "requirements",
        "Analysis",
        "Design",
        "Coding",
        "Testing",
        "production",
        "support",
        "enterprise",
        "applications",
        "JavaJ2EE",
        "technologies",
        "knowledge",
        "environment",
        "OOAD",
        "concepts",
        "understanding",
        "Development",
        "Lifecycle",
        "SDLC",
        "Superior",
        "project",
        "implementation",
        "skills",
        "Java",
        "Jsp",
        "Servlets",
        "JDBC",
        "JNDI",
        "JSTL",
        "RMI",
        "EJB",
        "Struts",
        "Spring",
        "JavaScript",
        "XMLSAX",
        "DOM",
        "Webservices",
        "JMS",
        "Java",
        "Mail",
        "JAXP",
        "WSDL",
        "SOAP",
        "RESTFul",
        "JSON",
        "Hibernate",
        "Experience",
        "AgileScrum",
        "Waterfall",
        "RUP",
        "Extreme",
        "Programming",
        "Test",
        "development",
        "Pair",
        "Programming",
        "Code",
        "Reviews",
        "core",
        "concepts",
        "collections",
        "serialization",
        "Synchronization",
        "exception",
        "generics",
        "network",
        "APIs",
        "database",
        "connections",
        "UI",
        "development",
        "skills",
        "JSP",
        "JSP",
        "Custom",
        "Tag",
        "Libraries",
        "AJAX",
        "HTML5",
        "CSS3",
        "DHTML",
        "JavaScript",
        "jQuery",
        "DOM",
        "Responsive",
        "Web",
        "Design",
        "Bootstrap",
        "experience",
        "WebPages",
        "browser",
        "page",
        "web",
        "applications",
        "Experience",
        "web",
        "applications",
        "source",
        "frameworks",
        "JSF",
        "Spring",
        "Framework",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "Spring",
        "ORM",
        "Struts",
        "Framework",
        "Struts",
        "Validation",
        "Tiles",
        "Frameworks",
        "Handson",
        "experience",
        "Spring",
        "Spring",
        "Data",
        "Spring",
        "Integration",
        "Spring",
        "DataRS",
        "Spring",
        "Security",
        "Proficient",
        "inpersistence",
        "frameworks",
        "Hibernate",
        "JPA",
        "POJOs",
        "database",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "Experience",
        "enterprise",
        "services",
        "Spring",
        "AOP",
        "implementation",
        "knowledge",
        "spring",
        "web",
        "flow",
        "application",
        "page",
        "Experience",
        "databases",
        "Oracle",
        "g",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "SQL",
        "PLSQL",
        "NoSQL",
        "Mongo",
        "DB",
        "Cassandra",
        "experience",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Packages",
        "snapshots",
        "Triggers",
        "optimization",
        "Oracle",
        "DB2",
        "MySQL",
        "databasesHands",
        "SQL",
        "Performance",
        "Tuning",
        "Operations",
        "database",
        "tools",
        "TOAD",
        "SQL",
        "Loader",
        "MEAN",
        "development",
        "ExpressJS",
        "NodeJS",
        "Experience",
        "application",
        "implementation",
        "modules",
        "controllers",
        "factory",
        "services",
        "ngrepeat",
        "customizable",
        "filter",
        "http",
        "getpost",
        "methods",
        "directives",
        "functionalities",
        "REST",
        "service",
        "call",
        "input",
        "validations",
        "contents",
        "Handsome",
        "experience",
        "weight",
        "Nodejs",
        "server",
        "technologies",
        "JSON",
        "connections",
        "server",
        "databases",
        "MongoDB",
        "MySQL",
        "Experience",
        "JS",
        "MVC",
        "Framework",
        "directives",
        "services",
        "controllers",
        "filters",
        "animations",
        "Good",
        "Experience",
        "Nodejs",
        "Grunt",
        "Bower",
        "Express",
        "HTTP",
        "FS",
        "andexperience",
        "custom",
        "directives",
        "Angular",
        "JS",
        "REST",
        "Web",
        "API",
        "Node",
        "JS",
        "frameworks",
        "Express",
        "JS",
        "REST",
        "API",
        "CRUD",
        "operations",
        "MongoDB",
        "DAO",
        "connectivity",
        "Experience",
        "CSS",
        "preprocessors",
        "experience",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "publishing",
        "web",
        "servicesSOAP",
        "components",
        "SOAP",
        "WSDL",
        "XML",
        "XSD",
        "UDDI",
        "JAXRS",
        "JAXWS",
        "JAXRPC",
        "JAXB",
        "exposure",
        "tools",
        "SoapUI",
        "Postman",
        "SOAP",
        "web",
        "services",
        "browser",
        "plugins",
        "REST",
        "client",
        "CURL",
        "command",
        "line",
        "HTTP",
        "Proficient",
        "JavaJ2EE",
        "Design",
        "Patterns",
        "singleton",
        "command",
        "object",
        "pool",
        "session",
        "facade",
        "Model",
        "View",
        "Controller",
        "MVC",
        "Data",
        "Access",
        "Object",
        "DAO",
        "Data",
        "Transfer",
        "Object",
        "DTO",
        "Business",
        "Delegate",
        "development",
        "MultiTier",
        "Applications",
        "Experience",
        "applications",
        "Struts",
        "Frame",
        "work",
        "Oauth",
        "framework",
        "validation",
        "framework",
        "validations",
        "Tiles",
        "framework",
        "management",
        "Strong",
        "experience",
        "XML",
        "technologies",
        "XSD",
        "DTD",
        "XSLT",
        "XPATH",
        "DOMJDOMSAX",
        "JAXP",
        "JAXB",
        "XMLRPC",
        "Document",
        "Handlers",
        "XML",
        "Beans",
        "Castor",
        "Framework",
        "Proficient",
        "web",
        "application",
        "servers",
        "Domain",
        "connection",
        "pool",
        "JMS",
        "applications",
        "WebLogic",
        "WebSphere",
        "Apache",
        "Tomcat",
        "Glassfish",
        "JBoss",
        "use",
        "build",
        "tools",
        "Apache",
        "Ant",
        "Maven",
        "Gradle",
        "Jenkins",
        "tools",
        "log4J",
        "project",
        "tracking",
        "tools",
        "JIRA",
        "QC",
        "Unit",
        "Test",
        "Cases",
        "knowledge",
        "JUnit",
        "frame",
        "work",
        "Mockito",
        "JMockit",
        "Spring",
        "test",
        "Groovy",
        "applications",
        "Expertise",
        "UML",
        "UseCase",
        "diagrams",
        "Class",
        "diagrams",
        "Interaction",
        "diagrams",
        "Sequence",
        "diagrams",
        "Activity",
        "diagrams",
        "Designer",
        "tools",
        "MS",
        "Visio",
        "Rational",
        "Rose",
        "Experience",
        "Version",
        "Control",
        "tools",
        "CVS",
        "Clear",
        "Case",
        "SVN",
        "GIT",
        "Source",
        "Code",
        "version",
        "management",
        "Source",
        "code",
        "Project",
        "Development",
        "experience",
        "OS",
        "Windows",
        "Linux",
        "UNIX",
        "troubleshooting",
        "skills",
        "team",
        "player",
        "deadlines",
        "work",
        "pressure",
        "Ability",
        "technologies",
        "problem",
        "communication",
        "skills",
        "Sponsorship",
        "US",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Verisk",
        "ISO",
        "Chicago",
        "IL",
        "August",
        "Present",
        "Responsibilities",
        "analysis",
        "design",
        "development",
        "testing",
        "phases",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "Agile",
        "Scrum",
        "Methodology",
        "define",
        "application",
        "business",
        "requirements",
        "efforts",
        "Functional",
        "Architects",
        "application",
        "Spring",
        "MVC",
        "MVC",
        "architecture",
        "JavaScript",
        "data",
        "entry",
        "level",
        "data",
        "validation",
        "client",
        "side",
        "code",
        "bean",
        "references",
        "springframework",
        "Dependency",
        "Injection",
        "Inversion",
        "Control",
        "IOC",
        "Aspect",
        "Oriented",
        "Programming",
        "AOP",
        "SpringSource",
        "Tool",
        "Suite",
        "Spring",
        "Bean",
        "Factory",
        "services",
        "security",
        "service",
        "layer",
        "methods",
        "Spring",
        "Security",
        "Integrated",
        "Single",
        "sign",
        "LDAP",
        "directory",
        "Spring",
        "security",
        "layer",
        "users",
        "groups",
        "integrity",
        "application",
        "Spring",
        "services",
        "Spring",
        "controllers",
        "DAOs",
        "dependency",
        "injection",
        "wire",
        "objects",
        "business",
        "classes",
        "XML",
        "Web",
        "Services",
        "data",
        "providers",
        "Restful",
        "Web",
        "services",
        "Jersey",
        "framework",
        "JAXRS",
        "REST",
        "annotations",
        "Single",
        "Page",
        "Design",
        "directive",
        "filter",
        "criteria",
        "APIs",
        "Express",
        "logic",
        "data",
        "Wrote",
        "tests",
        "Mocha",
        "server",
        "side",
        "Jasmine",
        "client",
        "side",
        "UIbootstrap",
        "components",
        "time",
        "picker",
        "directives",
        "model",
        "popups",
        "router",
        "progress",
        "bar",
        "ngIdle",
        "ngUpload",
        "routing",
        "AngularJSuirouter",
        "Used",
        "Bootstrap",
        "media",
        "queries",
        "Responsive",
        "Webpage",
        "screensizes",
        "Developed",
        "Hibernate",
        "Spring",
        "Integration",
        "data",
        "abstraction",
        "database",
        "dependency",
        "injection",
        "DI",
        "Spring",
        "framework",
        "annotations",
        "Hibernate",
        "mapping",
        "classes",
        "database",
        "queries",
        "Hibernate",
        "query",
        "language",
        "HQL",
        "IBM",
        "REST",
        "API",
        "task",
        "assignment",
        "reassignment",
        "closure",
        "task",
        "implementation",
        "knowledge",
        "TDD",
        "BDD",
        "end",
        "UI",
        "applications",
        "endtoend",
        "Protractor",
        "code",
        "repository",
        "SVN",
        "updates",
        "application",
        "Maven",
        "WebSphere",
        "Server",
        "Jenkins",
        "integration",
        "Environment",
        "Spring",
        "Framework",
        "Hibernate",
        "HTML",
        "CSS3",
        "JavaScript",
        "XML",
        "JSON",
        "Webservices",
        "JMS",
        "Websphere",
        "Spring",
        "Tool",
        "Suite",
        "SVN",
        "Maven",
        "JIRA",
        "Jenkins",
        "log4j",
        "Jersey",
        "DB2",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Jackson",
        "National",
        "Life",
        "Insurance",
        "Franklin",
        "TN",
        "September",
        "August",
        "Responsibilities",
        "requirements",
        "client",
        "business",
        "unit",
        "design",
        "discussions",
        "implementation",
        "feasibility",
        "analysis",
        "business",
        "analysts",
        "levels",
        "application",
        "development",
        "Agile",
        "Scrum",
        "methodology",
        "Sprints",
        "meetings",
        "application",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "system",
        "Spring",
        "MVC",
        "Model",
        "architecture",
        "business",
        "logic",
        "layer",
        "Spring",
        "Dependency",
        "Injection",
        "client",
        "side",
        "Javabeans",
        "DAO",
        "Design",
        "Patterns",
        "spring",
        "AOP",
        "programming",
        "configure",
        "application",
        "CRUD",
        "operations",
        "database",
        "Spring",
        "Transactions",
        "Spring",
        "Web",
        "Flow",
        "Payment",
        "Money",
        "Transfer",
        "batch",
        "jobs",
        "monitoring",
        "application",
        "support",
        "Spring",
        "Batches",
        "Java",
        "Batches",
        "ETL",
        "batch",
        "jobs",
        "Spring",
        "Batch",
        "Quartz",
        "scheduler",
        "generate",
        "reports",
        "design",
        "development",
        "UI",
        "component",
        "layered",
        "POVs",
        "Carousels",
        "frameworks",
        "JavaScript",
        "Jquery",
        "conjunction",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "core",
        "features",
        "AngularJS",
        "framework",
        "dependency",
        "Injection",
        "Databinding",
        "Filters",
        "Directives",
        "Templates",
        "Services",
        "Deep",
        "Linking",
        "services",
        "filters",
        "filter",
        "functionality",
        "search",
        "box",
        "integrator",
        "functionalities",
        "Express",
        "JS",
        "web",
        "service",
        "access",
        "models",
        "REST",
        "API",
        "JSON",
        "app",
        "Passport",
        "JS",
        "strategy",
        "REST",
        "web",
        "services",
        "services",
        "JSON",
        "Object",
        "response",
        "UI",
        "REST",
        "architecture",
        "web",
        "services",
        "JAXWS",
        "communication",
        "client",
        "servers",
        "development",
        "web",
        "services",
        "business",
        "operations",
        "SOAP",
        "WSDL",
        "JAXWS",
        "JDOM",
        "XML",
        "XSL",
        "Apache",
        "CXF",
        "design",
        "patterns",
        "Singleton",
        "Data",
        "Access",
        "Object",
        "DAO",
        "Command",
        "Design",
        "Pattern",
        "Abstract",
        "Factory",
        "Factory",
        "Method",
        "Design",
        "Pattern",
        "XML",
        "JAXB",
        "XML",
        "Schema",
        "Validation",
        "XSLT",
        "XML",
        "data",
        "structure",
        "HTML",
        "pages",
        "Mongoose",
        "JS",
        "documents",
        "NodeJS",
        "web",
        "server",
        "data",
        "models",
        "entities",
        "database",
        "schema",
        "Performed",
        "CRUD",
        "operations",
        "Update",
        "Insert",
        "Delete",
        "data",
        "MongoDB",
        "Oracle",
        "database",
        "management",
        "system",
        "database",
        "access",
        "data",
        "transmission",
        "web",
        "service",
        "Configured",
        "Java",
        "applications",
        "Amazon",
        "Web",
        "ServicesAWS",
        "multitude",
        "applications",
        "AWS",
        "cloud",
        "formation",
        "Spring",
        "ORM",
        "Support",
        "Hibernate",
        "Hibernate",
        "Resources",
        "exception",
        "Hierarchy",
        "persistence",
        "layer",
        "features",
        "XML",
        "configuration",
        "file",
        "Database",
        "connectivity",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "data",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "ORM",
        "tool",
        "Hibernate",
        "framework",
        "HQL",
        "queries",
        "Java",
        "Message",
        "Service",
        "JMS",
        "exchange",
        "information",
        "order",
        "status",
        "report",
        "delivery",
        "report",
        "Wrote",
        "JMS",
        "class",
        "orders",
        "agents",
        "policy",
        "holders",
        "JMS",
        "RabitMQ",
        "failure",
        "connectivity",
        "Quad",
        "instance",
        "components",
        "Cluster",
        "Extensively",
        "Log4j",
        "Logging",
        "Errors",
        "tracking",
        "Exception",
        "statements",
        "build",
        "files",
        "Maven",
        "Developed",
        "application",
        "Eclipse",
        "IDE",
        "GIT",
        "version",
        "control",
        "Jenkins",
        "integration",
        "Hibernate",
        "ORM",
        "frameworks",
        "database",
        "connectivity",
        "SQL",
        "procedures",
        "login",
        "module",
        "SQL",
        "queries",
        "environment",
        "output",
        "sprints",
        "Apache",
        "Tomcat",
        "server",
        "application",
        "UML",
        "artifacts",
        "use",
        "cases",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "Rational",
        "Application",
        "Developer",
        "Wrote",
        "Junit",
        "test",
        "cases",
        "Mockito",
        "Mock",
        "MVC",
        "test",
        "framework",
        "bugs",
        "Eclipses",
        "tool",
        "releases",
        "application",
        "application",
        "modules",
        "testing",
        "preproduction",
        "phases",
        "Environment",
        "MEAN",
        "Stack",
        "NodeJS",
        "Spring",
        "Framework",
        "RESTfulWebServices",
        "JSON",
        "Apache",
        "CXF",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JMS",
        "Hibernate",
        "Oracle",
        "database",
        "Spring",
        "Tool",
        "Suite",
        "Windows",
        "JUint",
        "Git",
        "Maven",
        "Jenkins",
        "Tomcat",
        "J2EE",
        "Developer",
        "Acxiom",
        "Corporation",
        "Little",
        "Rock",
        "AR",
        "December",
        "September",
        "Responsibilities",
        "aspects",
        "development",
        "lifecycle",
        "design",
        "development",
        "deployment",
        "enhancements",
        "Contributed",
        "end",
        "end",
        "flow",
        "JSPs",
        "end",
        "Servlets",
        "BO",
        "classes",
        "tier",
        "database",
        "SQL",
        "queries",
        "Procedures",
        "Spring",
        "MVC",
        "model",
        "application",
        "Spring",
        "Beans",
        "IOC",
        "AOP",
        "controller",
        "business",
        "logic",
        "DAO",
        "classes",
        "dependency",
        "injection",
        "Leveraged",
        "Spring",
        "application",
        "framework",
        "persistence",
        "strategy",
        "spring",
        "support",
        "Hibernate",
        "transaction",
        "management",
        "authentication",
        "authorization",
        "features",
        "Spring",
        "Security",
        "service",
        "access",
        "Spring",
        "factory",
        "functions",
        "views",
        "redundancy",
        "maintenance",
        "code",
        "authentication",
        "session",
        "routes",
        "cache",
        "strategies",
        "HTTP",
        "requests",
        "Bootstrapmedia",
        "Responsive",
        "Webpages",
        "size",
        "screen",
        "phone",
        "Laptop",
        "validations",
        "forms",
        "HTML",
        "AJAX",
        "JSON",
        "requests",
        "server",
        "Wrote",
        "AJAX",
        "tables",
        "tab",
        "menu",
        "components",
        "data",
        "integration",
        "end",
        "system",
        "web",
        "services",
        "REST",
        "Restful",
        "Web",
        "services",
        "Jersey",
        "framework",
        "JAXRS",
        "REST",
        "annotations",
        "JACSON",
        "RESTJSON",
        "convertors",
        "Work",
        "usage",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "AJAX",
        "AngularJS",
        "JavaScript",
        "client",
        "side",
        "development",
        "validations",
        "JMS",
        "SOAP",
        "Web",
        "service",
        "Spring",
        "CXF",
        "JMS",
        "config",
        "Mule",
        "capabilities",
        "ESB",
        "Security",
        "Message",
        "message",
        "transformation",
        "transaction",
        "management",
        "Wrote",
        "Hibernate",
        "configuration",
        "mapping",
        "files",
        "persistence",
        "classes",
        "data",
        "MySQL",
        "Database",
        "Configured",
        "Hibernate",
        "session",
        "factory",
        "Hibernate",
        "Spring",
        "JPAHibernate",
        "data",
        "layer",
        "XMLJAXB",
        "XML",
        "data",
        "IBMMQ",
        "servers",
        "message",
        "architecture",
        "exchange",
        "messages",
        "topics",
        "queues",
        "MDBs",
        "communication",
        "JMSIBM",
        "MQ",
        "Series",
        "Formalized",
        "code",
        "organization",
        "database",
        "design",
        "table",
        "structure",
        "Database",
        "tables",
        "views",
        "HLD",
        "Data",
        "Model",
        "ER",
        "Diagrams",
        "connection",
        "pools",
        "security",
        "server",
        "JUnit",
        "unit",
        "testing",
        "Maven",
        "life",
        "cycle",
        "application",
        "warear",
        "files",
        "Websphere",
        "Application",
        "server",
        "JIRA",
        "task",
        "assignment",
        "bug",
        "tracking",
        "fixture",
        "engineering",
        "efforts",
        "implementations",
        "system",
        "changes",
        "production",
        "issues",
        "project",
        "plans",
        "milestones",
        "project",
        "progress",
        "management",
        "resource",
        "management",
        "development",
        "activities",
        "Environment",
        "Spring",
        "Framework",
        "NodeJS",
        "JavaScript",
        "REST",
        "SOAP",
        "WebServices",
        "XML",
        "JMSIBM",
        "MQ",
        "Bootstrap",
        "JMS",
        "Hibernate",
        "JUnit",
        "Eclipse",
        "Bootstrap",
        "AJAX",
        "JSON",
        "HTML",
        "CSS3",
        "MySQL",
        "database",
        "SVN",
        "JIRA",
        "Maven",
        "Junit",
        "WebSphere",
        "J2EE",
        "Developer",
        "Javelin",
        "Capital",
        "New",
        "York",
        "NY",
        "August",
        "November",
        "Responsibilities",
        "business",
        "discussions",
        "Requirements",
        "analysis",
        "System",
        "Module",
        "Specifications",
        "Implementation",
        "feasibility",
        "analysis",
        "business",
        "analysts",
        "levels",
        "development",
        "spectrum",
        "business",
        "components",
        "web",
        "interface",
        "J2EE",
        "middleware",
        "authentication",
        "systems",
        "database",
        "connectivity",
        "systems",
        "databases",
        "SOA",
        "Web",
        "service",
        "services",
        "modules",
        "MVC",
        "Framework",
        "page",
        "applications",
        "services",
        "Web",
        "Services",
        "Axis",
        "REST",
        "WSDL",
        "SOAP",
        "techniques",
        "JQuery",
        "JSON",
        "JVM",
        "DHTML",
        "DOM",
        "FrameworksIOC",
        "Dependency",
        "Injection",
        "Service",
        "Object",
        "Service",
        "Locator",
        "Design",
        "Pattern",
        "Action",
        "Classes",
        "Spring",
        "MVC",
        "Spring",
        "ORM",
        "Spring",
        "Security",
        "modules",
        "MySQL",
        "database",
        "persistence",
        "layer",
        "Hibernate",
        "Spring",
        "ORM",
        "Support",
        "Hibernate",
        "Hibernate",
        "Resources",
        "exception",
        "Hierarchy",
        "JSF",
        "user",
        "Interface",
        "components",
        "JSF",
        "tab",
        "panels",
        "Panel",
        "groups",
        "data",
        "components",
        "triggers",
        "calendar",
        "actionvalue",
        "change",
        "listeners",
        "JSF",
        "end",
        "GUI",
        "layout",
        "JQueryvalidationframework",
        "end",
        "validations",
        "JSF",
        "Managed",
        "Beans",
        "Topics",
        "Connection",
        "Factories",
        "project",
        "Model",
        "View",
        "Controller",
        "user",
        "requests",
        "controllers",
        "request",
        "flow",
        "tier",
        "application",
        "JSF",
        "Portal",
        "Framework",
        "Presentation",
        "Tier",
        "Faces",
        "Servlet",
        "acts",
        "Front",
        "Controller",
        "custom",
        "JSF",
        "Facelet",
        "tags",
        "error",
        "handling",
        "datatables",
        "truefalse",
        "markers",
        "progress",
        "message",
        "error",
        "handling",
        "Richfaces",
        "Modal",
        "component",
        "bugs",
        "Development",
        "production",
        "levels",
        "Offshore",
        "delivery",
        "model",
        "Environment",
        "Java",
        "J2EE",
        "JSF",
        "JSP",
        "JSTL",
        "Servlets",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "ORM",
        "SQL",
        "MySQL",
        "DB2",
        "JBOSS",
        "XML",
        "JavaScript",
        "JQuery",
        "JMS",
        "REST",
        "UML",
        "JUnit",
        "SVN",
        "Gradle",
        "TDD",
        "JMeter",
        "Developer",
        "Sonata",
        "Software",
        "Ltd",
        "January",
        "July",
        "Responsibilities",
        "System",
        "Java",
        "J2EE",
        "technologies",
        "source",
        "frameworks",
        "application",
        "struts",
        "architecture",
        "MVC",
        "architecture",
        "DAO",
        "design",
        "pattern",
        "abstraction",
        "application",
        "code",
        "reusability",
        "methodologies",
        "project",
        "Build",
        "application",
        "TDD",
        "Test",
        "Driven",
        "Development",
        "approach",
        "helper",
        "classes",
        "Core",
        "Java",
        "programming",
        "Collection",
        "classes",
        "layers",
        "Presentation",
        "Layer",
        "Business",
        "Logic",
        "Data",
        "Access",
        "Layers",
        "technologies",
        "SOAP",
        "WSDL",
        "UDDI",
        "Web",
        "Services",
        "Exposing",
        "web",
        "services",
        "SOAPWSDL",
        "request",
        "source",
        "systems",
        "response",
        "source",
        "systems",
        "Environment",
        "Java",
        "J2EE",
        "Struts",
        "Spring",
        "EJB",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "jQuery",
        "MVC",
        "Oracle",
        "WebLogic",
        "DAO",
        "JDBC",
        "Servlets",
        "JSP",
        "TDD",
        "XML",
        "SQL",
        "JMS",
        "Web",
        "Services",
        "CVS",
        "SOAP",
        "Eclipse",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:08:44.506694",
    "resume_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Verisk ISO Chicago IL 7 years of software development experience in requirements Analysis Design Coding Testing and production support of scalable MultiTier distributed enterprise applications using JavaJ2EE technologies Working knowledge in multitiered distributed environment OOAD concepts good understanding of Development Lifecycle SDLC Superior project implementation skills using Java Jsp Servlets JDBC JNDI JSTL RMI EJB Struts Spring JavaScript XMLSAX DOM Webservices JMS Java Mail JAXP WSDL SOAP RESTFul JSON Hibernate Experience on AgileScrum Waterfall RUP and Extreme Programming Test Driven development Pair Programming Code Reviews Extensively worked on coding using core java concepts like multithreading collections serialization Synchronization exception handling generics network APIs and database connections Strong frontend UI development skills using JSP JSP Custom Tag Libraries AJAX HTML5 CSS3 DHTML JavaScript jQuery DOM Responsive Web Design Bootstrap and experience in making WebPages cross browser compatible single page web applications using AngularJS Experience in developing web applications with various open source frameworks like JSF Spring Framework Spring MVC Spring AOP Spring ORM Struts Framework Struts Validation and Tiles Frameworks Handson experience with Spring Spring Data Spring Integration Spring DataRS Spring Security Proficient inpersistence frameworks Hibernate iBATIS JPA to map POJOs to a relational database and using Hibernate Query Language HQL Experience in implementing the declarative enterprise services using Spring AOP and implementation knowledge on spring web flow to manage the application page flows Experience in working with relational databases like Oracle 11g MySQL MS SQL Server using SQL PLSQL and NoSQL databases such as Mongo DB and Cassandra Extensive experience in using SQL and PLSQL to write Stored Procedures Functions Packages snapshots Triggers and optimization with Oracle DB2 and MySQL databasesHands on SQL Performance Tuning Operations and worked on database tools such as TOAD and SQL Loader Experienced in MEAN stack development MongoDB ExpressJS AngularJS NodeJS Experience in AngularJS for application implementation creating modules controllers routeProviders factory services ngrepeat customizable filter http getpost methods and directives to realize functionalities like REST service with Ajax call input validations searchable and sortable contents Handsome experience in writing light weight Nodejs express server and using technologies like JSON to make connections between server and databases like MongoDB and MySQL Experience with Angular JS MVC Framework including authoring complex directives services controllers and filters working with animations routing and states Good Experience working with Nodejs Grunt Bower Express HTTP FS andexperience implementing custom directives in Angular JS Experienced in developing REST based Web API with Node JS using routing frameworks such as Express JS and Restify REST API for CRUD operations to develop MongoDB DAO connectivity Experience in CSS preprocessors SASS LESS Strong experience in Service Oriented Architecture SOA and publishing web servicesSOAP RESTful that include several components like SOAP WSDL XML XSD UDDI JAXRS and JAXWS JAXRPC JAXB Good exposure to tools like SoapUI Postman for testing SOAP and RESTful web services browser plugins like Advanced REST client and also CURL using command line for testing HTTP requests Proficient in JavaJ2EE Design Patterns including singleton command object pool session facade Model View Controller MVC Data Access Object DAO Data Transfer Object DTO and Business Delegate in the development of MultiTier distributed Applications Experience in designing developing applications using Struts 1x2x Frame work Oauth framework and configured the validation framework for validations and Tiles framework for layout management Strong experience in XML related technologies including XSD DTD XSLT XPATH DOMJDOMSAX JAXP JAXB XMLRPC Document Handlers XML Beans and Castor Framework Proficient in handling web and application servers in creating Domain configuring connection pool JMS deploying applications on WebLogic WebSphere Apache Tomcat Glassfish and JBoss Experienced in use of build tools like Apache Ant Maven Gradle Jenkins and logging tools like log4J project tracking tools by JIRA and QC Involved in Unit Test Cases writing and having good knowledge in JUnit used mocking frame work like Mockito JMockit Spring test with Groovy for debugging and testing the applications Expertise in UML which includes creating UseCase diagrams Class diagrams Interaction diagrams Sequence diagrams Activity diagrams using Designer tools like MS Visio Rational Rose Experience in Version Control tools like CVS Clear Case SVN GIT for Source Code version management and merging Source code after intermittent Project releases Development experience in different OS like Windows Linux and UNIX and excellent troubleshooting skills Innovative team player proven to work under tight deadlines and work pressure Ability to learn and merge new technologies quickly Excellent problem solving analytical and communication skills Sponsorship required to work in the US Authorized to work in the US for any employer Work Experience Java Full Stack Developer Verisk ISO Chicago IL August 2016 to Present Responsibilities Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC Followed Agile Scrum Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the application using Spring MVC intensively that leverages classical MVC architecture and JavaScript for major data entry that involved extreme level of data validation at client side Involved in developing code for obtaining bean references in springframework using Dependency Injection Inversion of Control IOC and Aspect Oriented Programming AOP on SpringSource Tool Suite Created the Spring Bean Factory for initializing services Added security for service layer methods using Spring Security Integrated Single sign on sing LDAP and Active directory on Spring security layer successfully maintained users and groups integrity in the application Created and injected Spring services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Extensively used XML Web Services for transferringretrieving data between different providers Extensively involved in developing Restful Web services using Jersey framework JAXRS and REST annotations Implemented Single Page Design and customized directive and filter criteria by using AngularJS Created RESTful APIs in Express and returned logic through AngularJS data binding Wrote tests in Mocha on server side and Jasmine on the client side Utilized AngularJS UIbootstrap components like time picker directives model popups nggrid router progress bar ngIdle ngUpload Implemented flexible routing and nested using AngularJSuirouter Used Bootstrap and media queries to create a Responsive Webpage across different screensizes Developed Hibernate with Spring Integration as the data abstraction to interact with the database and used dependency injection DI using Spring framework and annotations Used Hibernate for mapping java classes with database and created queries with Hibernate query language HQL Extensively used IBM REST API in task assignment reassignment closure and adhoc task implementation Incorporated knowledge of TDD and BDD for front end UI applications and performed endtoend testing with Protractor Maintained the code repository on SVN through frequent and definite updates and built the application using Maven to deploy on WebSphere Server and used Jenkins for continuous integration Environment Spring Framework Hibernate 43 HTML CSS3 AngularJS JavaScript XML JSON RESTful Webservices JMS Websphere Spring Tool Suite SVN Maven JIRA Jenkins log4j Jersey DB2 Java Full Stack Developer Jackson National Life Insurance Franklin TN September 2015 to August 2016 Responsibilities Responsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels Followed iterative application development specified by Agile Scrum methodology consisting of weekly Sprints and stand up meetings and built the application with Test Driven Development TDD Designed the system based on Spring MVC Model architecture Developed a business logic layer using Spring Dependency Injection and client side Javabeans for DAO Design Patterns Developed the spring AOP programming to configure logging for the application and also to track CRUD operations on the database Used Spring Transactions and Spring Web Flow for Payment and Money Transfer Worked on coding standalone batch jobs and providing monitoring and application support using Spring Batches Java Batches and ETL batch jobs Used Spring Batch with Quartz scheduler for generate the reports Involved in design and development of UI component which includes layered POVs and Carousels using frameworks AngularJS JavaScript and Jquery in conjunction with HTML5 CSS3 Bootstrap and LESS Implemented core features of AngularJS framework such as dependency Injection Databinding Filters Directives Templates Services and Deep Linking Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Used Express JS to build a web service to provide access to the models and exposed it using a REST API that emits JSON Secured the app with Passport JS using a local strategy Called REST web services through AngularJS services to get JSON Object and modified the response object to display in UI Developed REST architecture based web services using JAXWS to facilitate communication between client and servers Involved in development of web services for business operations using SOAP WSDL JAXWS JDOM XML XSL and Apache CXF Implemented various design patterns Singleton Data Access Object DAO Command Design Pattern Abstract Factory Factory Method Design Pattern Worked on XML parsing by using JAXB for XML Schema Validation Used XSLT to transform my XML data structure into HTML pages Used Mongoose JS to access the documents from the NodeJS web server and build data models for the entities in the database schema Performed CRUD operations like Update Insert and Delete data in MongoDB and Oracle database management system and handled database access and data transmission based on RESTful web service Configured deployed Java applications on Amazon Web ServicesAWS for a multitude of applications utilizing the AWS stack cloud formation Used Spring ORM Support for Hibernate to manage efficiently Hibernate Resources and consistent exception Hierarchy Implemented persistence layer using various features like XML configuration file for Database connectivity connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control using ORM tool Hibernate 30 framework like HQL queries etc Used Java Message Service JMS for reliable and asynchronous exchange of important information such as order status report delivery report Wrote JMS class to transfer the orders between agents and policy holders Used JMS using RabitMQ to report failure of connectivity between Quad instance and other components in Cluster Extensively used the Log4j for Logging Errors debugging and tracking and Exception statements Created build files using Maven Developed the application using Eclipse IDE GIT for version control and Jenkins for continuous integration Used Hibernate ORM frameworks for database connectivity Developed SQL procedures for login module and written complex SQL queries Worked in an Agile environment delivering output in sprints Used Apache Tomcat 7 as the server to host the application Generated UML artifacts such as use cases sequence diagrams class diagrams using Rational Application Developer Wrote Junit test cases with Mockito Mock MVC test framework resolved bugs and Eclipses debugging tool Involved in various internal releases of the application and supported the application modules during testing and preproduction phases Environment MEAN Stack MongoDB Express AngularJS NodeJS Spring Framework RESTfulWebServices JSON Apache CXF HTML5 CSS3 Bootstrap JMS RabitMQ Hibernate 43 Oracle database Spring Tool Suite Windows 7 JUint Git Maven Jenkins and Tomcat JAVA J2EE Developer Acxiom Corporation Little Rock AR December 2014 to September 2015 Responsibilities Participated in all aspects of the development lifecycle from design to development to deployment and ongoing enhancements Contributed to project by working on end to end flow developing JSPs for front end by developing Servlets BO classes in middle tier and to database by writing various SQL queries and Stored Procedures Extensively used Spring MVC model to implement the application and created Spring Beans using IOC and AOP Developed the controller business logic and DAO classes achieving dependency injection Leveraged Spring as middletier application framework persistence strategy using spring support for Hibernate and declarative transaction management Implement the authentication authorization and accesscontrol features by using Spring Security Implemented remote service access with Spring Remoting Used factory inAngularJS to use the common functions in different views to reduce redundancy and improve maintenance of the code Implemented authentication session to certain routes and cache strategies for certain HTTP requests Used Bootstrapmedia queries to create Responsive Webpages across the different size of screen from phone or Laptop Defined new validations through AngularJS for the forms through HTML and used AJAX JSON to send requests to the server Wrote AJAX calls to populate tables tab menu and other components with JSON data in AngularJS Implemented the integration with the back end system with web services using REST Involved in developing Restful Web services using Jersey framework JAXRS and REST annotations and used JACSON based RESTJSON convertors Work involved extensive usage of HTML5 CSS3 Bootstrap AJAX AngularJS and JavaScript for client side development and validations Implemented JMS based SOAP Web service using Spring CXF JMS config and Mule ESB Built various capabilities in ESB like Security Message routing message transformation transaction management etc Wrote Hibernate configuration files mapping files and defined persistence classes to persist data into MySQL Database Configured Hibernate session factory to integrate Hibernate with Spring and used JPAHibernate to communicate with data layer and XMLJAXB to read XML data Configured IBMMQ in servers as message driven architecture for the exchange of messages between the applicationsCreated topics queues and MDBs for communication using JMSIBM MQ Series Formalized code organization to comply with the official database design and improved table structure Created Database tables and views using HLD Data Model ER Diagrams Configured the connection pools and security for the server Used JUnit to perform unit testing Followed the Maven build life cycle to build the application warear files and deployed into Websphere Application server Used JIRA for task assignment bug tracking and fixture Estimated engineering efforts planned implementations rolled out system changes and triaged production issues Developed project plans adhered to project milestones monitored project progress management reporting resource management coordinated offshore development activities Environment Spring Framework AngularJS NodeJS JavaScript REST SOAP WebServices XML JMSIBM MQ Bootstrap JMS Hibernate JUnit Eclipse Bootstrap AJAX JSON HTML CSS3 MySQL database SVN JIRA Maven Junit WebSphere JAVA J2EE Developer Javelin Capital New York NY August 2011 to November 2014 Responsibilities Involved in business discussions regarding Requirements analysis System Module Specifications and Implementation feasibility analysis with business analysts at all levels Engaged in the development of the entire spectrum of business components including the web interface J2EE based middleware and authentication systems database connectivity systems and relational databases Worked on SOA to develop RESTful Web service to generate and consume services from different modules Implemented MVC Framework to make single page applications for responsive services Involved in invoking the Web Services by making using of Axis REST WSDL SOAP with techniques such as Ajax JQuery JSON JVM DHTML and DOM scripting Extensively usedSpring FrameworksIOC Dependency Injection to inject Service Object using Service Locator Design Pattern into Action Classes Used Spring MVC Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate Used Spring ORM Support for Hibernate to manage efficiently Hibernate Resources and consistent exception Hierarchy Implemented JSF framework extensively which involves building the whole user Interface components using JSF tab panels Panel groups and data tables Integrated components like partial triggers calendar actionvalue change listeners with JSF for enhancing the front end GUI layout Used JQueryvalidationframework for front end validations Implemented JSF with Managed Beans Topics and Connection Factories in project Model View Controller to handleintercept the user requests and used various controllers to delegate the request flow to the Backend tier of the application Constructed JSF Portal Framework at Presentation Tier and Faces Servlet acts as the Front Controller Creating custom JSF Facelet tags for error handling datatables truefalse markers etc Creating generic progress message and error handling using Richfaces Modal component Involved in fixing the bugs at Development and production levels with onsite Offshore delivery model Environment Java J2EE JSF JSP JSTL Servlets Hibernate Spring MVC Spring Security Spring ORM SQL MySQL DB2 JBOSS XML JavaScript JQuery JMS REST SOAP UML JUnit Log4J SVN Gradle TDD JMeter JAVA Developer Sonata Software Ltd January 2009 to July 2011 Responsibilities System was developed using Java J2EE technologies and open source frameworks and application was implemented using struts architecture Implemented MVC architecture and DAO design pattern for maximum abstraction of the application and code reusability Followed agile methodologies to execute project Build the application using TDD Test Driven Development approach Developed various helper classes using Core Java multithreaded programming and Collection classes Involved in all layers like Presentation Layer Business Logic and Data Access Layers Using technologies like SOAP WSDL and UDDI based Web Services Exposing and consuming web services using SOAPWSDL for getting request from external source systems and sending response to external source systems Environment Java J2EE Struts Spring EJB HTML CSS JavaScript AJAX jQuery MVC Oracle WebLogic DAO JDBC Servlets JSP TDD XML SQL JMS Web Services CVS SOAP Eclipse Education Bachelors",
    "unique_id": "1c9ec31b-e785-4c57-882e-5355e7b51136"
}