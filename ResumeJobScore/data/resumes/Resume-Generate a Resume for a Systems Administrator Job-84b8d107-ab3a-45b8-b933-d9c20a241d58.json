{
    "clean_data": "Sr Java Front End UI Web Developer Sr Java span lFrontspan span lEndspan UI Web span lDeveloperspan Sr Java Front End UI Web Developer Farmers Insurance Group Wilmington DE Have 7years of IT professional experience with full project development implementation and deployment on WindowsUnix using JAVAJ2EE technology stack Expertise in design and development of web applications using JSP JavaScript HTML5 CSS3 JQUERY AJAX JSON NodeJS AngularJS Angular 2 Reactjs Bootstrap Ext JS Experience in all phases of Software Development Life Cycle SDLC as well as AgileScrum methodologies and TestDriven Development TDD Expert level skills in application development using J2EE technologies like Java Beans Struts JSP JSF EJB JPA Servlets JDBC compliant application servers multithreading clientserver design patterns of J2EE architecture Significant experience in Responsive Web Design RWD Strong hands on writing AngularJS code for developing Single page applications SPA and experience with several in built AngularJS directives expressions and modules Experience with Service Oriented Architecture SOA web service applications Proficiency in developing web services SOAP RESTful that include several components like WSDL XML XSD JAXB JAXRS and JAXWS Also Developed SOAP web services using Apache CXF Implemented the webbased application following the MVC architecture using Spring Framework and used different Spring modules like Spring Core Spring AOP Spring MVC Spring JDBC and Spring with ORM Framework Knowledge in implementing MEAN Stack MongoDB ExpressJS  NodeJS with RESTful stands Experience in AWS Cloud platform and its features which include EC2 AMI EBS Cloud watch Extensive experience in working with different databases such as Oracle SQL Server DB2 MySQL PLSQL and writing Stored Procedures Functions Joins and Triggers for different Data Models Expertise in Core Java concepts like OOPS design Multithreading Generics Exception handling Collections Java reflection Annotation Experience in development deployment and troubleshooting Web based and enterprise based applications on Windows UNIX and Linux platforms Experience in using assistant tools such as Git GitHub CVS and SVN for version control Extensive working experience in Unit testing experience with Jasmine Karma Experienced in writing and implementing test cases using Junit Developed application on servers such as Apache Tomcat WebLogic IBM WebSphere Good understanding of REST APIs extensive experience of integrating services via Ajax using JavaScript jQuery AngularJS and Reactjs Good exposure on using IDES like Eclipse IntelliJ IDEA My Eclipse RAD and NetBeans Experience in using build tools like Ant Maven Gradle logging with Log4j Test Driven Development using Junit Authorized to work in the US for any employer Work Experience Sr Java Front End UI Web Developer Farmers Insurance Group Wilmington DE January 2019 to Present Responsibilities Participated in the complete Software Development Life Cycle including Requirement Analysis design Implementation Testing and Maintenance Interacted with the system analysts business users for design and requirement clarifications Used J2EE patterns such as Controller Singleton factory MVC architecture is used in this application Implemented Spring Framework IOC Inversion of Control design pattern for relationship between application components Working in AWS Identity and Access Management IAM components including user groups roles policies and password policies and provide the same to end user Deploying the application on AWS cloud platform by configuring REDHAT server on EC2 instances Used Spring Framework IOC to separate the application configuration and dependency specification from the actual application code Used Spring ORM module along with Hibernate to deal with database operations Used Spring core Spring Context Spring MVC Framework for the application configuration of different components services in the application Used Hibernate for mapping claim data by connecting to Oracle 11g database Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Used Hibernate extensively to have Database access mechanism with HQL Hibernate query language queries Resolved Runtime Errors and Application Bugs in the Production environment and enhancing the existing application Backend Integration testing of micro services and API services Implemented log4j for logging purposes and debug the application Created micro services using Spring Boot for a new public facing application Involved in production support for maintaining the system developed and resolved the complexities and bugs Implemented the project using the agile methodologies Leaned and migrated the old codes into Angular JS Extensively used Apache Camel for transformation and used both Java DSL and XML DSL Fixed bugs during the System testing Joint System testing and User acceptance testing Created responsive reusable UI components for ABCs SiteCore migration project using CSS3 and HTML5 Implemented Angular 2 Routing and navigation Components Services Used SVN repository for version control Environment Java J2EE Spring Spring Security Hibernate Eclipse WebLogic JSP jQuery XML CSS Junit Maven Oracle11g AngularJS TOAD Log4j UML Apache Camel Agile Microservices Jenkins Splunk Cucumber Griddle POM Rollup Gulp Grunt bootstrap HTML5 and AWS UI Web Developer Farmers Insurance Group Boston MA July 2016 to November 2018 Responsibilities Involved in designing the user experience interface UIUX strategy UI requirements converting findings into UI designs Worked on the RESTWeb API to create the services and used in Angular HTTP service calls and bind the data in the table using ngrepeat attributes Used Angular as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server using Sass Bootstrap Angular24 Created pages for login using single sign on main page containing favorites and page for continuous integration configuration Working experience with modern JavaScript libraries and tooling including Nodejs Developed front end using HTML5 CSS3 JavaScript Redux and Bootstrap Involved in using React JS components ReactDOM Babelwebpack concepts Experience in RESTful web services to integrate between Server side to Client side Used NPM packages to get the dependencies Designed serverside JavaScript codes to build web forms and simulate process for web application page navigation and form validation Used SVN for version control and JIRA for defect tracking Implemented the search functionality for Internal Application using Angular Worked on Mongo DB Concepts Familiar with MongoDB environment Worked with business analysts to understand their business models and goals Improved the performance and response time of the application by implementing AJAX Used JSP Servlets and HTML5 to create web interfaces EnvironmentJavaScript  Redux HTML5 CSS3 NPM SVN JIRA Rally Java Web Developer Southern Glazers Wine and Spirits Miramar FL August 2014 to June 2016 Responsibilities As a Java Programmer Implemented front end with JSP JavaBeans Struts Tag libraries and JSTL Competency in using XML Web Services by using SOAP to transfer data to supply chain and for domain expertise Monitoring Systems Experience in Locator Data Access Object DAO Data Transfer Object DTO Factory and Singleton design patterns Designed the page flow using struts serverside components for DAO layer Worked on Maven to build tool for building jar files Implemented Log4j and commonslogging frameworks for logging the application error and info Provided support for deployment of the application in multiple environments includes SIT UAT and Production Environment Used the Hibernate framework ORM to interact with the database Worked with XML by using SAX and DOM parsers to transfer the data between different components Knowledge in struts tiles framework for the layout management Implemented Stateless Sessions by using Enterprise Java Beans EJB to encapsulate business logics Implemented Web interface with the help of and Struts JSP and Standard Tag Libraries JSTL Performed Performance Tuning on Weblogic server Java JDK and Unix Operating System and Database Tuning Developed functions procedures and packages to implement the systems business logic using PLSQL Responsible for fixing all bugs encountered and communicating back over to the QA team Environment J2EE Java 6 Hibernate Struts SOAP DAO DTO EJB Oracle 10g JDK 16 JSTL XML XSLT HTML XHTML Java Script jQuery UML JavaJ2EE Full Stack Developer Thermo Fisher Scientific Pittsburgh PA April 2012 to July 2014 Description Thermo Fisher Scientific is a leading biotechnology firm in the genetic testing of Laboratory equipment its Headquarters is located in Waltham Massachusetts Its a provider of cloud based platform for scientific data management support through ecommercePhase one of the laboratory informatics application was completed in a short span of two months to aid market expansion of growing business after acquiring Core informatics Responsibilities Understanding and analyzing business requirements Participated in all phases of SDLC Involved in designing Use Case diagrams Class diagrams and Sequence diagrams as a part of design phase Configured Spring framework using the Spring core module to inject dependencies and configured Oracle MySQL Mongo in the module Developed the application by using JSP Servlets Web Services JavaScript WebLogic JAXRS and SaaS Developed RESTful Web Services using Jersey JAXRS to perform CRUD operations on the database server over HTTP and to consume web services for transferring data between different applications Used Spring Boot for developing micro services REST to retrieve data from clientside using Microservice architecture and Pivotal Cloud Foundry PCF for deploying microservices Used Singleton Session Facade and DAO patterns in implementing the application Used Java 18 and Spring 15 to perform CRUD operations on the SOLR engine to create hassle free transactional models Extensively worked with XML Schemas XSD for defining XML elements and attributes Deployed web components presentation components and business components in WebLogic Application Server Used RabbitMQ as the message broker to convert the entire flow as a SOA based architecture Implemented Multithreading concepts in Java classes to avoid deadlocks Created build environment for Java using Git and Maven Developed the test cases with JUnit for Unit testing of the built components Contributed to standardizing project coding code review guidelines and checklist Build CICD using Jenkins GIT JFrog Artifactory saving the image in Docker Private registry Used JIRA to keep track of the project bugs and issues Followed Agile Scrum methodology to track project progress and participated in Scrum meetings Environment Java18 J2EE Microservices Spring MVC IntelliJ Idea AWS Tomcat Application server Pivotal Cloud Foundry REST Webservices SOAP Webservices APIGEE HTML5 CSS3 XML JSON JUnit RabbitMQ Maven Gradle Dockers Oracle MongoDB MySQL JIRA Jenkins Spring Cloud JSP Servlets Web Services JavaScript JAXRS Java Developer Chase wealth Management Manhattan NY August 2011 to March 2012 Description J P Morgan Chase Bank is the wholly owned banking of JPMorgan Co a bank holding company headquartered in Manhattan New York Web Based enterprise application offers services to member banks to assist their cardholders with credit card transaction disputes The application provides functionality that benefits member banks and allows them to provide accurate answers and quick service to cardholders Responsibilities Involved in the complete SDLC including the design of System Architecture development of System Use Cases based on the functional requirements Adapted Agile Methodology from specification Analysis Design System integration Testing Deployment and Maintenance Involved in daily standup meetings to provide regular updates on individual tasks and progress of user stories Used JSP HTML5 CSS3 and JavaScript to construct the dynamic web pages presentation Layer for the application Used Angular 2 and BackboneJS for clientside validation Develop various screens for the front end using Angular JS and used various predefined components Capable to automate the process of testing of application using JAVA script and Spring framework Handed Java MultiThreading part in back end component one thread will be running for each Implemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to the client and handled the security and Authorization using Spring Security and OAuth Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating spring services spring controllers and DAOs to wire objects of business classes Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Used Hibernate Transaction Management SpringHibernate Batch Transactions and Hibernate cache concepts Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available Removed all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot Installed the application on AWS EC2 instances and configured the storage on S3 buckets Used Micro services to communicate using synchronous protocols HTTP and REST Implementing or exposing the Micro services based on Restful API utilizing Spring Boot with Spring MVC Used Jenkins for continuous integration and test automation Deployed and Monitored Micro Services Using Pivotal Cloud Foundry PCF also Managed Domains and Routes with the Cloud Foundry Used Mongo DB as data storage and utilized aspects like replica sets Sharding and clever document design to make service extensible scale and feature wise Use Maven to build the application and deployed on Web Sphere Application Server Used GITHUB as version control tool Environment Java 8 J2SE HTML5 CSS3 AWS jQuery Ajax Rabbit MQ Angular JS Node JS JSON J2EE Spring Framework 420 Spring MVC 42 Hibernate 40 Docker Micro Services Kafka Pivotal Cloud Foundry PCF Bootstrap Web services Restful RAD Python Web Sphere AgileScrum Methodology Maven JIRA JUnit TDD MongoDB GITHUB Senior Java Developer State of WI Wisconsin August 2010 to July 2011 Responsibilities Used JBoss Application Server for deploying various components of applications Worked on log4j for logging errors info and exception Deployed the application in JBOSS EAP Application Server Designed the user interface of the application using Angular JS Bootstrap HTML5 CSS3 and JavaScript Worked on MySQL database to store data and used MYSQL workbench for query optimization Built the application using ANT scripts and deployed using JBoss Application server Written and debugged the ANT Scripts for building the entire web application Involved extensively in developing a POC for adopting Angular 20 as front end framework using RxJs library Ivy Jenkins used for continuous integration and build Experienced in using Log4j and good expertise in Ant tool and IVY tool Used ANT as a build tool and IVY as dependency tool Good knowledge of using JavaScript testing frameworks Jasmine and Karma Experience in Management tools like Team Foundation Server TFS Hands on experience using Source Code Control Systems like Team Foundation Server TFS to build schedule Having good experience in developing an enterprise MERN Stack applications by writing serverside code with Nodejs Basic knowledge in programming language such Java Bash shell scripting Involved in front end development using Visual Studio 2010 and CSS Used Log4j logging framework in the application to store log messages Monitored the error logs using Log4J and fixed the problems Worked extensively with front end technologies like HTML5 CSS3 Bootstrap and JQuery mobile frameworks Used HTML5 JavaScript and jQuery CSS Bootstrap Ajax XML and JSON to create a rich interactive UI Knowledge on CORS crossorigin resource sharing mechanism Utilized Java and spring frameworks for development of enterprise applications Developed integration solutions and prepared programming code Extensively worked with HQL and hibernate criteria queries Wrote unit testing codes using JUnit resolved bugs and other defects using Firebug and Eclipses debugging tool Environment Java 160 java 8 JBoss eap 43 apache ant 171 apache ivy 240 My SQL workbench 52 CE Microsoft Visual Studio 2012TFS Bootstrap JavaScript jqueryui 1103 Log4j SoapUI Education Bachelors Skills ECLIPSE J2EE HIBERNATE INTELLIJ IDEA SPRING Additional Information TECHNICAL SKILLS Languages Java18 J2EE SQL Cpython Web Technologies XML HTML5 CSS3 JSTL JavaScript jQuery JSON AJAX Catalyst Template Toolkit Django Angularjs Nodejs Reactjs J2EE Technologies JSP Servlets JDBC JPA Struts JMS Spring JSF and Web Services Frameworks JSF Spring GWTHIBERNATE SPRING SECURITYSPRING AOPSPRING BOOT Testing Tools JIRA JUnit Jmeter Markup Languages HTML XML SAML UIML IDE Tools Eclipse IntelliJ IDEA 14CE NetBeans MS Visual Studio 2012 Database Server Oracle 9i10g11g SQL Server Postgres No SQL MySQL MongoDB Methodologies OOPSOOAD UML MVC J2EE Design Patterns Version Control Tools GIT SVN TFS Bucket Selenium Operating System MAC Windows 0710 IOS Android UNIX Browsers IE Mozilla Firefox Safari Chrome",
    "entities": [
        "SQL Server Postgres",
        "Oracle SQL Server",
        "System Use Cases",
        "AJAX",
        "New York",
        "Sharding",
        "Massachusetts",
        "Implemented Spring Framework IOC Inversion",
        "UML Apache",
        "lEndspan UI",
        "Leaned",
        "SOLR",
        "Jersey",
        "HTTP",
        "Deployed and Monitored Micro Services Using Pivotal Cloud Foundry PCF",
        "JSP Servlets Web Services",
        "Used Micro",
        "Headquarters",
        "Authorization using Spring Security",
        "Responsive Web Design RWD Strong",
        "Ajax",
        "JPMorgan Co",
        "Annotation Experience",
        "SOAP",
        "XML",
        "J2EE Design Patterns Version",
        "Bootstrap Involved",
        "a Single Page Application",
        "JAXWS",
        "Software Development Life Cycle SDLC",
        "JUnit",
        "Source Code Control Systems",
        "Standard Tag Libraries JSTL Performed",
        "JAVAJ2EE",
        "jQuery CSS Bootstrap Ajax XML",
        "WI Wisconsin",
        "Idea AWS Tomcat Application",
        "DAO",
        "Monitoring Systems",
        "Laboratory",
        "SDLC Involved",
        "Created micro services",
        "NetBeans MS",
        "Oracle 11",
        "Used Spring Data Framework",
        "Responsibilities Involved",
        "Git",
        "DTO Factory",
        "Client",
        "Web Sphere Application Server",
        "Hibernate 40 Docker Micro Services",
        "Sequence",
        "SaaS Developed RESTful Web Services",
        "Core",
        "Monitored",
        "OAuth Developed Business",
        "HTML5",
        "JBoss Application",
        "SOA",
        "Control Tools",
        "Angular 2 Reactjs",
        "Apache Camel",
        "Firebug",
        "JSP",
        "Maven Developed",
        "Micro",
        "Redux HTML5",
        "System Architecture",
        "JBoss",
        "Web Developer Farmers Insurance Group",
        "DOM",
        "Waltham",
        "GITHUB",
        "SIT UAT",
        "Angular JS",
        "TestDriven Development",
        "Working in AWS Identity and Access Management IAM",
        "MVC",
        "Responsibilities Understanding",
        "ReactDOM Babelwebpack",
        "Controller Singleton",
        "EJB",
        "Backend Integration",
        "Jasmine and Karma",
        "Implemented Multithreading",
        "EJB Oracle",
        "the Cloud Foundry Used Mongo DB",
        "API",
        "REDHAT",
        "REST Implementing",
        "US",
        "Team Foundation Server TFS",
        "Spring JDBC",
        "Created",
        "AWS",
        "Server",
        "Singleton",
        "Angular JS Bootstrap HTML5",
        "React JS",
        "MVC Framework",
        "IDEA",
        "SAX",
        "API services",
        "Contributed",
        "SQL",
        "UIUX",
        "CE Microsoft Visual Studio",
        "Internal Application",
        "Docker Private",
        "Manhattan",
        "Ant",
        "Resolved Runtime Errors",
        "Team Foundation Server TFS Hands",
        "WebLogic JSP jQuery XML",
        "WebLogic Application",
        "Hibernate Template",
        "IDES",
        "Visual Studio",
        "Joint System",
        "CRUD",
        "JBOSS EAP Application Server Designed",
        "JAVA",
        "XML DSL Fixed",
        "Maven",
        "Build",
        "JavaScript",
        "Log4j Test Driven Development using Junit Authorized",
        "ANT",
        "UI Knowledge",
        "UI",
        "XML Web Services",
        "Maven Gradle Dockers Oracle",
        "Hibernate Transaction Management",
        "JSP Servlets",
        "Oracle MySQL Mongo",
        "XSD",
        "Eclipses",
        "SVN",
        "CSS",
        "RxJs",
        "Nodejs Basic",
        "Weblogic",
        "SPA",
        "REST",
        "Adapted Agile Methodology",
        "Data Models Expertise",
        "NetBeans",
        "lFrontspan",
        "Routes",
        "Software Development Life Cycle",
        "Nodejs Developed",
        "JQuery",
        "Locator Data Access Object DAO",
        "Microservice"
    ],
    "experience": "Experience in all phases of Software Development Life Cycle SDLC as well as AgileScrum methodologies and TestDriven Development TDD Expert level skills in application development using J2EE technologies like Java Beans Struts JSP JSF EJB JPA Servlets JDBC compliant application servers multithreading clientserver design patterns of J2EE architecture Significant experience in Responsive Web Design RWD Strong hands on writing AngularJS code for developing Single page applications SPA and experience with several in built AngularJS directives expressions and modules Experience with Service Oriented Architecture SOA web service applications Proficiency in developing web services SOAP RESTful that include several components like WSDL XML XSD JAXB JAXRS and JAXWS Also Developed SOAP web services using Apache CXF Implemented the webbased application following the MVC architecture using Spring Framework and used different Spring modules like Spring Core Spring AOP Spring MVC Spring JDBC and Spring with ORM Framework Knowledge in implementing MEAN Stack MongoDB ExpressJS   NodeJS with RESTful stands Experience in AWS Cloud platform and its features which include EC2 AMI EBS Cloud watch Extensive experience in working with different databases such as Oracle SQL Server DB2 MySQL PLSQL and writing Stored Procedures Functions Joins and Triggers for different Data Models Expertise in Core Java concepts like OOPS design Multithreading Generics Exception handling Collections Java reflection Annotation Experience in development deployment and troubleshooting Web based and enterprise based applications on Windows UNIX and Linux platforms Experience in using assistant tools such as Git GitHub CVS and SVN for version control Extensive working experience in Unit testing experience with Jasmine Karma Experienced in writing and implementing test cases using Junit Developed application on servers such as Apache Tomcat WebLogic IBM WebSphere Good understanding of REST APIs extensive experience of integrating services via Ajax using JavaScript jQuery AngularJS and Reactjs Good exposure on using IDES like Eclipse IntelliJ IDEA My Eclipse RAD and NetBeans Experience in using build tools like Ant Maven Gradle logging with Log4j Test Driven Development using Junit Authorized to work in the US for any employer Work Experience Sr Java Front End UI Web Developer Farmers Insurance Group Wilmington DE January 2019 to Present Responsibilities Participated in the complete Software Development Life Cycle including Requirement Analysis design Implementation Testing and Maintenance Interacted with the system analysts business users for design and requirement clarifications Used J2EE patterns such as Controller Singleton factory MVC architecture is used in this application Implemented Spring Framework IOC Inversion of Control design pattern for relationship between application components Working in AWS Identity and Access Management IAM components including user groups roles policies and password policies and provide the same to end user Deploying the application on AWS cloud platform by configuring REDHAT server on EC2 instances Used Spring Framework IOC to separate the application configuration and dependency specification from the actual application code Used Spring ORM module along with Hibernate to deal with database operations Used Spring core Spring Context Spring MVC Framework for the application configuration of different components services in the application Used Hibernate for mapping claim data by connecting to Oracle 11 g database Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Used Hibernate extensively to have Database access mechanism with HQL Hibernate query language queries Resolved Runtime Errors and Application Bugs in the Production environment and enhancing the existing application Backend Integration testing of micro services and API services Implemented log4j for logging purposes and debug the application Created micro services using Spring Boot for a new public facing application Involved in production support for maintaining the system developed and resolved the complexities and bugs Implemented the project using the agile methodologies Leaned and migrated the old codes into Angular JS Extensively used Apache Camel for transformation and used both Java DSL and XML DSL Fixed bugs during the System testing Joint System testing and User acceptance testing Created responsive reusable UI components for ABCs SiteCore migration project using CSS3 and HTML5 Implemented Angular 2 Routing and navigation Components Services Used SVN repository for version control Environment Java J2EE Spring Spring Security Hibernate Eclipse WebLogic JSP jQuery XML CSS Junit Maven Oracle11 g AngularJS TOAD Log4j UML Apache Camel Agile Microservices Jenkins Splunk Cucumber Griddle POM Rollup Gulp Grunt bootstrap HTML5 and AWS UI Web Developer Farmers Insurance Group Boston MA July 2016 to November 2018 Responsibilities Involved in designing the user experience interface UIUX strategy UI requirements converting findings into UI designs Worked on the RESTWeb API to create the services and used in Angular HTTP service calls and bind the data in the table using ngrepeat attributes Used Angular as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server using Sass Bootstrap Angular24 Created pages for login using single sign on main page containing favorites and page for continuous integration configuration Working experience with modern JavaScript libraries and tooling including Nodejs Developed front end using HTML5 CSS3 JavaScript Redux and Bootstrap Involved in using React JS components ReactDOM Babelwebpack concepts Experience in RESTful web services to integrate between Server side to Client side Used NPM packages to get the dependencies Designed serverside JavaScript codes to build web forms and simulate process for web application page navigation and form validation Used SVN for version control and JIRA for defect tracking Implemented the search functionality for Internal Application using Angular Worked on Mongo DB Concepts Familiar with MongoDB environment Worked with business analysts to understand their business models and goals Improved the performance and response time of the application by implementing AJAX Used JSP Servlets and HTML5 to create web interfaces EnvironmentJavaScript   Redux HTML5 CSS3 NPM SVN JIRA Rally Java Web Developer Southern Glazers Wine and Spirits Miramar FL August 2014 to June 2016 Responsibilities As a Java Programmer Implemented front end with JSP JavaBeans Struts Tag libraries and JSTL Competency in using XML Web Services by using SOAP to transfer data to supply chain and for domain expertise Monitoring Systems Experience in Locator Data Access Object DAO Data Transfer Object DTO Factory and Singleton design patterns Designed the page flow using struts serverside components for DAO layer Worked on Maven to build tool for building jar files Implemented Log4j and commonslogging frameworks for logging the application error and info Provided support for deployment of the application in multiple environments includes SIT UAT and Production Environment Used the Hibernate framework ORM to interact with the database Worked with XML by using SAX and DOM parsers to transfer the data between different components Knowledge in struts tiles framework for the layout management Implemented Stateless Sessions by using Enterprise Java Beans EJB to encapsulate business logics Implemented Web interface with the help of and Struts JSP and Standard Tag Libraries JSTL Performed Performance Tuning on Weblogic server Java JDK and Unix Operating System and Database Tuning Developed functions procedures and packages to implement the systems business logic using PLSQL Responsible for fixing all bugs encountered and communicating back over to the QA team Environment J2EE Java 6 Hibernate Struts SOAP DAO DTO EJB Oracle 10 g JDK 16 JSTL XML XSLT HTML XHTML Java Script jQuery UML JavaJ2EE Full Stack Developer Thermo Fisher Scientific Pittsburgh PA April 2012 to July 2014 Description Thermo Fisher Scientific is a leading biotechnology firm in the genetic testing of Laboratory equipment its Headquarters is located in Waltham Massachusetts Its a provider of cloud based platform for scientific data management support through ecommercePhase one of the laboratory informatics application was completed in a short span of two months to aid market expansion of growing business after acquiring Core informatics Responsibilities Understanding and analyzing business requirements Participated in all phases of SDLC Involved in designing Use Case diagrams Class diagrams and Sequence diagrams as a part of design phase Configured Spring framework using the Spring core module to inject dependencies and configured Oracle MySQL Mongo in the module Developed the application by using JSP Servlets Web Services JavaScript WebLogic JAXRS and SaaS Developed RESTful Web Services using Jersey JAXRS to perform CRUD operations on the database server over HTTP and to consume web services for transferring data between different applications Used Spring Boot for developing micro services REST to retrieve data from clientside using Microservice architecture and Pivotal Cloud Foundry PCF for deploying microservices Used Singleton Session Facade and DAO patterns in implementing the application Used Java 18 and Spring 15 to perform CRUD operations on the SOLR engine to create hassle free transactional models Extensively worked with XML Schemas XSD for defining XML elements and attributes Deployed web components presentation components and business components in WebLogic Application Server Used RabbitMQ as the message broker to convert the entire flow as a SOA based architecture Implemented Multithreading concepts in Java classes to avoid deadlocks Created build environment for Java using Git and Maven Developed the test cases with JUnit for Unit testing of the built components Contributed to standardizing project coding code review guidelines and checklist Build CICD using Jenkins GIT JFrog Artifactory saving the image in Docker Private registry Used JIRA to keep track of the project bugs and issues Followed Agile Scrum methodology to track project progress and participated in Scrum meetings Environment Java18 J2EE Microservices Spring MVC IntelliJ Idea AWS Tomcat Application server Pivotal Cloud Foundry REST Webservices SOAP Webservices APIGEE HTML5 CSS3 XML JSON JUnit RabbitMQ Maven Gradle Dockers Oracle MongoDB MySQL JIRA Jenkins Spring Cloud JSP Servlets Web Services JavaScript JAXRS Java Developer Chase wealth Management Manhattan NY August 2011 to March 2012 Description J P Morgan Chase Bank is the wholly owned banking of JPMorgan Co a bank holding company headquartered in Manhattan New York Web Based enterprise application offers services to member banks to assist their cardholders with credit card transaction disputes The application provides functionality that benefits member banks and allows them to provide accurate answers and quick service to cardholders Responsibilities Involved in the complete SDLC including the design of System Architecture development of System Use Cases based on the functional requirements Adapted Agile Methodology from specification Analysis Design System integration Testing Deployment and Maintenance Involved in daily standup meetings to provide regular updates on individual tasks and progress of user stories Used JSP HTML5 CSS3 and JavaScript to construct the dynamic web pages presentation Layer for the application Used Angular 2 and BackboneJS for clientside validation Develop various screens for the front end using Angular JS and used various predefined components Capable to automate the process of testing of application using JAVA script and Spring framework Handed Java MultiThreading part in back end component one thread will be running for each Implemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to the client and handled the security and Authorization using Spring Security and OAuth Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating spring services spring controllers and DAOs to wire objects of business classes Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Used Hibernate Transaction Management SpringHibernate Batch Transactions and Hibernate cache concepts Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available Removed all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot Installed the application on AWS EC2 instances and configured the storage on S3 buckets Used Micro services to communicate using synchronous protocols HTTP and REST Implementing or exposing the Micro services based on Restful API utilizing Spring Boot with Spring MVC Used Jenkins for continuous integration and test automation Deployed and Monitored Micro Services Using Pivotal Cloud Foundry PCF also Managed Domains and Routes with the Cloud Foundry Used Mongo DB as data storage and utilized aspects like replica sets Sharding and clever document design to make service extensible scale and feature wise Use Maven to build the application and deployed on Web Sphere Application Server Used GITHUB as version control tool Environment Java 8 J2SE HTML5 CSS3 AWS jQuery Ajax Rabbit MQ Angular JS Node JS JSON J2EE Spring Framework 420 Spring MVC 42 Hibernate 40 Docker Micro Services Kafka Pivotal Cloud Foundry PCF Bootstrap Web services Restful RAD Python Web Sphere AgileScrum Methodology Maven JIRA JUnit TDD MongoDB GITHUB Senior Java Developer State of WI Wisconsin August 2010 to July 2011 Responsibilities Used JBoss Application Server for deploying various components of applications Worked on log4j for logging errors info and exception Deployed the application in JBOSS EAP Application Server Designed the user interface of the application using Angular JS Bootstrap HTML5 CSS3 and JavaScript Worked on MySQL database to store data and used MYSQL workbench for query optimization Built the application using ANT scripts and deployed using JBoss Application server Written and debugged the ANT Scripts for building the entire web application Involved extensively in developing a POC for adopting Angular 20 as front end framework using RxJs library Ivy Jenkins used for continuous integration and build Experienced in using Log4j and good expertise in Ant tool and IVY tool Used ANT as a build tool and IVY as dependency tool Good knowledge of using JavaScript testing frameworks Jasmine and Karma Experience in Management tools like Team Foundation Server TFS Hands on experience using Source Code Control Systems like Team Foundation Server TFS to build schedule Having good experience in developing an enterprise MERN Stack applications by writing serverside code with Nodejs Basic knowledge in programming language such Java Bash shell scripting Involved in front end development using Visual Studio 2010 and CSS Used Log4j logging framework in the application to store log messages Monitored the error logs using Log4J and fixed the problems Worked extensively with front end technologies like HTML5 CSS3 Bootstrap and JQuery mobile frameworks Used HTML5 JavaScript and jQuery CSS Bootstrap Ajax XML and JSON to create a rich interactive UI Knowledge on CORS crossorigin resource sharing mechanism Utilized Java and spring frameworks for development of enterprise applications Developed integration solutions and prepared programming code Extensively worked with HQL and hibernate criteria queries Wrote unit testing codes using JUnit resolved bugs and other defects using Firebug and Eclipses debugging tool Environment Java 160 java 8 JBoss eap 43 apache ant 171 apache ivy 240 My SQL workbench 52 CE Microsoft Visual Studio 2012TFS Bootstrap JavaScript jqueryui 1103 Log4j SoapUI Education Bachelors Skills ECLIPSE J2EE HIBERNATE INTELLIJ IDEA SPRING Additional Information TECHNICAL SKILLS Languages Java18 J2EE SQL Cpython Web Technologies XML HTML5 CSS3 JSTL JavaScript jQuery JSON AJAX Catalyst Template Toolkit Django Angularjs Nodejs Reactjs J2EE Technologies JSP Servlets JDBC JPA Struts JMS Spring JSF and Web Services Frameworks JSF Spring GWTHIBERNATE SPRING SECURITYSPRING AOPSPRING BOOT Testing Tools JIRA JUnit Jmeter Markup Languages HTML XML SAML UIML IDE Tools Eclipse IntelliJ IDEA 14CE NetBeans MS Visual Studio 2012 Database Server Oracle 9i10g11 g SQL Server Postgres No SQL MySQL MongoDB Methodologies OOPSOOAD UML MVC J2EE Design Patterns Version Control Tools GIT SVN TFS Bucket Selenium Operating System MAC Windows 0710 IOS Android UNIX Browsers IE Mozilla Firefox Safari Chrome",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Front",
        "End",
        "UI",
        "Web",
        "Developer",
        "Sr",
        "Java",
        "span",
        "lFrontspan",
        "span",
        "lEndspan",
        "UI",
        "Web",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Front",
        "End",
        "UI",
        "Web",
        "Developer",
        "Farmers",
        "Insurance",
        "Group",
        "Wilmington",
        "DE",
        "7years",
        "IT",
        "experience",
        "project",
        "development",
        "implementation",
        "deployment",
        "WindowsUnix",
        "JAVAJ2EE",
        "technology",
        "stack",
        "Expertise",
        "design",
        "development",
        "web",
        "applications",
        "JSP",
        "JavaScript",
        "HTML5",
        "CSS3",
        "JQUERY",
        "AJAX",
        "JSON",
        "NodeJS",
        "Angular",
        "Reactjs",
        "Bootstrap",
        "Ext",
        "JS",
        "Experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "AgileScrum",
        "methodologies",
        "TestDriven",
        "Development",
        "TDD",
        "Expert",
        "level",
        "skills",
        "application",
        "development",
        "J2EE",
        "technologies",
        "Java",
        "Beans",
        "Struts",
        "JSP",
        "JSF",
        "EJB",
        "JPA",
        "Servlets",
        "JDBC",
        "application",
        "servers",
        "design",
        "patterns",
        "J2EE",
        "architecture",
        "experience",
        "Responsive",
        "Web",
        "Design",
        "hands",
        "code",
        "page",
        "applications",
        "SPA",
        "experience",
        "directives",
        "expressions",
        "modules",
        "Experience",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "web",
        "service",
        "applications",
        "Proficiency",
        "web",
        "services",
        "RESTful",
        "components",
        "WSDL",
        "XML",
        "XSD",
        "JAXB",
        "JAXRS",
        "JAXWS",
        "SOAP",
        "web",
        "services",
        "Apache",
        "CXF",
        "application",
        "MVC",
        "architecture",
        "Spring",
        "Framework",
        "Spring",
        "modules",
        "Spring",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "JDBC",
        "Spring",
        "ORM",
        "Framework",
        "Knowledge",
        "MEAN",
        "Stack",
        "MongoDB",
        "ExpressJS",
        "NodeJS",
        "RESTful",
        "Experience",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "EC2",
        "AMI",
        "EBS",
        "Cloud",
        "experience",
        "databases",
        "Oracle",
        "SQL",
        "Server",
        "DB2",
        "MySQL",
        "Stored",
        "Procedures",
        "Functions",
        "Joins",
        "Triggers",
        "Data",
        "Models",
        "Expertise",
        "Core",
        "Java",
        "concepts",
        "design",
        "Multithreading",
        "Generics",
        "Exception",
        "Collections",
        "Java",
        "reflection",
        "Annotation",
        "Experience",
        "development",
        "deployment",
        "troubleshooting",
        "Web",
        "enterprise",
        "applications",
        "Windows",
        "UNIX",
        "Linux",
        "Experience",
        "tools",
        "Git",
        "GitHub",
        "CVS",
        "SVN",
        "version",
        "control",
        "working",
        "experience",
        "Unit",
        "testing",
        "experience",
        "Jasmine",
        "Karma",
        "writing",
        "test",
        "cases",
        "Junit",
        "application",
        "servers",
        "Apache",
        "Tomcat",
        "WebLogic",
        "IBM",
        "WebSphere",
        "understanding",
        "REST",
        "experience",
        "services",
        "JavaScript",
        "jQuery",
        "AngularJS",
        "Reactjs",
        "exposure",
        "IDES",
        "Eclipse",
        "IntelliJ",
        "IDEA",
        "Eclipse",
        "RAD",
        "NetBeans",
        "Experience",
        "build",
        "tools",
        "Ant",
        "Maven",
        "Gradle",
        "Log4j",
        "Test",
        "Driven",
        "Development",
        "Junit",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Front",
        "End",
        "UI",
        "Web",
        "Developer",
        "Farmers",
        "Insurance",
        "Group",
        "Wilmington",
        "DE",
        "January",
        "Present",
        "Responsibilities",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Requirement",
        "Analysis",
        "design",
        "Implementation",
        "Testing",
        "Maintenance",
        "Interacted",
        "system",
        "analysts",
        "business",
        "users",
        "design",
        "requirement",
        "clarifications",
        "J2EE",
        "patterns",
        "Controller",
        "Singleton",
        "factory",
        "MVC",
        "architecture",
        "application",
        "Spring",
        "Framework",
        "IOC",
        "Inversion",
        "Control",
        "design",
        "pattern",
        "relationship",
        "application",
        "components",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "components",
        "user",
        "groups",
        "policies",
        "password",
        "policies",
        "user",
        "application",
        "AWS",
        "cloud",
        "platform",
        "REDHAT",
        "server",
        "EC2",
        "instances",
        "Spring",
        "Framework",
        "IOC",
        "application",
        "configuration",
        "dependency",
        "specification",
        "application",
        "code",
        "Spring",
        "ORM",
        "module",
        "Hibernate",
        "database",
        "operations",
        "Spring",
        "core",
        "Spring",
        "Context",
        "Spring",
        "MVC",
        "Framework",
        "application",
        "configuration",
        "components",
        "services",
        "application",
        "Hibernate",
        "mapping",
        "claim",
        "data",
        "Oracle",
        "g",
        "database",
        "REST",
        "Micro",
        "services",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "JPA",
        "Hibernate",
        "Database",
        "access",
        "mechanism",
        "HQL",
        "Hibernate",
        "query",
        "language",
        "Runtime",
        "Errors",
        "Application",
        "Bugs",
        "Production",
        "environment",
        "application",
        "Backend",
        "Integration",
        "testing",
        "micro",
        "services",
        "API",
        "services",
        "log4j",
        "purposes",
        "application",
        "Created",
        "micro",
        "services",
        "Spring",
        "Boot",
        "facing",
        "application",
        "production",
        "support",
        "system",
        "complexities",
        "bugs",
        "project",
        "methodologies",
        "Leaned",
        "codes",
        "JS",
        "Apache",
        "Camel",
        "transformation",
        "Java",
        "DSL",
        "XML",
        "DSL",
        "bugs",
        "System",
        "Joint",
        "System",
        "testing",
        "User",
        "acceptance",
        "testing",
        "UI",
        "components",
        "ABCs",
        "SiteCore",
        "migration",
        "project",
        "CSS3",
        "HTML5",
        "Angular",
        "Routing",
        "navigation",
        "Components",
        "Services",
        "SVN",
        "repository",
        "version",
        "control",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Spring",
        "Security",
        "Hibernate",
        "Eclipse",
        "WebLogic",
        "JSP",
        "jQuery",
        "XML",
        "CSS",
        "Junit",
        "Maven",
        "Oracle11",
        "g",
        "AngularJS",
        "TOAD",
        "Log4j",
        "UML",
        "Apache",
        "Camel",
        "Agile",
        "Microservices",
        "Jenkins",
        "Splunk",
        "Cucumber",
        "Griddle",
        "POM",
        "Rollup",
        "Gulp",
        "Grunt",
        "bootstrap",
        "HTML5",
        "AWS",
        "UI",
        "Web",
        "Developer",
        "Farmers",
        "Insurance",
        "Group",
        "Boston",
        "MA",
        "July",
        "November",
        "Responsibilities",
        "user",
        "experience",
        "interface",
        "UIUX",
        "strategy",
        "UI",
        "requirements",
        "findings",
        "UI",
        "designs",
        "API",
        "services",
        "Angular",
        "HTTP",
        "service",
        "data",
        "table",
        "ngrepeat",
        "attributes",
        "Angular",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "data",
        "views",
        "data",
        "server",
        "Sass",
        "Bootstrap",
        "Angular24",
        "pages",
        "login",
        "sign",
        "page",
        "favorites",
        "page",
        "integration",
        "configuration",
        "Working",
        "experience",
        "JavaScript",
        "libraries",
        "tooling",
        "Nodejs",
        "end",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Redux",
        "Bootstrap",
        "React",
        "JS",
        "components",
        "Babelwebpack",
        "concepts",
        "Experience",
        "web",
        "services",
        "Server",
        "side",
        "Client",
        "side",
        "NPM",
        "packages",
        "dependencies",
        "serverside",
        "JavaScript",
        "codes",
        "web",
        "forms",
        "process",
        "web",
        "application",
        "page",
        "navigation",
        "validation",
        "SVN",
        "version",
        "control",
        "JIRA",
        "defect",
        "tracking",
        "search",
        "functionality",
        "Internal",
        "Application",
        "Angular",
        "Worked",
        "Mongo",
        "DB",
        "Concepts",
        "Familiar",
        "MongoDB",
        "environment",
        "business",
        "analysts",
        "business",
        "models",
        "goals",
        "performance",
        "response",
        "time",
        "application",
        "AJAX",
        "JSP",
        "Servlets",
        "HTML5",
        "web",
        "interfaces",
        "EnvironmentJavaScript",
        "Redux",
        "HTML5",
        "CSS3",
        "NPM",
        "SVN",
        "JIRA",
        "Rally",
        "Java",
        "Web",
        "Developer",
        "Southern",
        "Glazers",
        "Wine",
        "Spirits",
        "Miramar",
        "FL",
        "August",
        "June",
        "Responsibilities",
        "Java",
        "Programmer",
        "end",
        "JSP",
        "JavaBeans",
        "Struts",
        "Tag",
        "libraries",
        "JSTL",
        "Competency",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "data",
        "chain",
        "domain",
        "expertise",
        "Monitoring",
        "Systems",
        "Experience",
        "Locator",
        "Data",
        "Access",
        "Object",
        "DAO",
        "Data",
        "Transfer",
        "Object",
        "DTO",
        "Factory",
        "Singleton",
        "design",
        "patterns",
        "page",
        "flow",
        "struts",
        "serverside",
        "components",
        "DAO",
        "layer",
        "Maven",
        "tool",
        "jar",
        "files",
        "Log4j",
        "frameworks",
        "application",
        "error",
        "info",
        "support",
        "deployment",
        "application",
        "environments",
        "SIT",
        "UAT",
        "Production",
        "Environment",
        "Hibernate",
        "framework",
        "ORM",
        "database",
        "XML",
        "SAX",
        "DOM",
        "parsers",
        "data",
        "components",
        "Knowledge",
        "struts",
        "tiles",
        "framework",
        "management",
        "Stateless",
        "Sessions",
        "Enterprise",
        "Java",
        "Beans",
        "EJB",
        "business",
        "logics",
        "Web",
        "interface",
        "help",
        "Struts",
        "JSP",
        "Standard",
        "Tag",
        "Libraries",
        "JSTL",
        "Performed",
        "Performance",
        "server",
        "Java",
        "JDK",
        "Unix",
        "Operating",
        "System",
        "Database",
        "functions",
        "procedures",
        "packages",
        "systems",
        "business",
        "logic",
        "PLSQL",
        "bugs",
        "QA",
        "team",
        "Environment",
        "J2EE",
        "Java",
        "Hibernate",
        "Struts",
        "SOAP",
        "DAO",
        "DTO",
        "EJB",
        "Oracle",
        "g",
        "JDK",
        "JSTL",
        "XML",
        "XSLT",
        "HTML",
        "XHTML",
        "Java",
        "Script",
        "jQuery",
        "UML",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Thermo",
        "Fisher",
        "Scientific",
        "Pittsburgh",
        "PA",
        "April",
        "July",
        "Description",
        "Thermo",
        "Fisher",
        "Scientific",
        "biotechnology",
        "firm",
        "testing",
        "Laboratory",
        "equipment",
        "Headquarters",
        "Waltham",
        "Massachusetts",
        "provider",
        "cloud",
        "platform",
        "data",
        "management",
        "support",
        "ecommercePhase",
        "laboratory",
        "informatics",
        "application",
        "span",
        "months",
        "market",
        "expansion",
        "business",
        "Core",
        "informatics",
        "Responsibilities",
        "Understanding",
        "business",
        "requirements",
        "phases",
        "SDLC",
        "Use",
        "Case",
        "diagrams",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "part",
        "design",
        "phase",
        "Configured",
        "Spring",
        "framework",
        "Spring",
        "core",
        "module",
        "dependencies",
        "Oracle",
        "MySQL",
        "Mongo",
        "module",
        "application",
        "JSP",
        "Servlets",
        "Web",
        "Services",
        "JavaScript",
        "WebLogic",
        "JAXRS",
        "SaaS",
        "Web",
        "Services",
        "Jersey",
        "JAXRS",
        "CRUD",
        "operations",
        "database",
        "server",
        "HTTP",
        "web",
        "services",
        "data",
        "applications",
        "Spring",
        "Boot",
        "micro",
        "services",
        "REST",
        "data",
        "Microservice",
        "architecture",
        "Cloud",
        "Foundry",
        "PCF",
        "microservices",
        "Singleton",
        "Session",
        "Facade",
        "DAO",
        "patterns",
        "application",
        "Java",
        "Spring",
        "CRUD",
        "operations",
        "SOLR",
        "engine",
        "hassle",
        "models",
        "XML",
        "Schemas",
        "XSD",
        "XML",
        "elements",
        "web",
        "components",
        "presentation",
        "components",
        "business",
        "components",
        "WebLogic",
        "Application",
        "Server",
        "RabbitMQ",
        "message",
        "broker",
        "flow",
        "SOA",
        "architecture",
        "Multithreading",
        "concepts",
        "Java",
        "classes",
        "deadlocks",
        "build",
        "environment",
        "Java",
        "Git",
        "Maven",
        "test",
        "cases",
        "JUnit",
        "Unit",
        "testing",
        "components",
        "project",
        "code",
        "review",
        "guidelines",
        "checklist",
        "Build",
        "CICD",
        "Jenkins",
        "GIT",
        "JFrog",
        "Artifactory",
        "image",
        "Docker",
        "registry",
        "JIRA",
        "track",
        "project",
        "bugs",
        "issues",
        "Agile",
        "Scrum",
        "methodology",
        "project",
        "progress",
        "Scrum",
        "meetings",
        "Environment",
        "Java18",
        "J2EE",
        "Microservices",
        "Spring",
        "MVC",
        "IntelliJ",
        "Idea",
        "AWS",
        "Tomcat",
        "Application",
        "server",
        "Cloud",
        "Foundry",
        "REST",
        "Webservices",
        "SOAP",
        "Webservices",
        "APIGEE",
        "HTML5",
        "CSS3",
        "XML",
        "JSON",
        "JUnit",
        "RabbitMQ",
        "Maven",
        "Gradle",
        "Dockers",
        "Oracle",
        "MongoDB",
        "MySQL",
        "JIRA",
        "Jenkins",
        "Spring",
        "Cloud",
        "JSP",
        "Servlets",
        "Web",
        "Services",
        "JavaScript",
        "JAXRS",
        "Java",
        "Developer",
        "Chase",
        "wealth",
        "Management",
        "Manhattan",
        "NY",
        "August",
        "March",
        "Description",
        "J",
        "P",
        "Morgan",
        "Chase",
        "Bank",
        "banking",
        "JPMorgan",
        "Co",
        "bank",
        "company",
        "Manhattan",
        "New",
        "York",
        "Web",
        "enterprise",
        "application",
        "services",
        "member",
        "banks",
        "cardholders",
        "credit",
        "card",
        "transaction",
        "disputes",
        "application",
        "functionality",
        "member",
        "banks",
        "answers",
        "service",
        "cardholders",
        "Responsibilities",
        "SDLC",
        "design",
        "System",
        "Architecture",
        "development",
        "System",
        "Use",
        "Cases",
        "requirements",
        "Agile",
        "Methodology",
        "specification",
        "Analysis",
        "Design",
        "System",
        "integration",
        "Testing",
        "Deployment",
        "Maintenance",
        "standup",
        "meetings",
        "updates",
        "tasks",
        "progress",
        "user",
        "stories",
        "JSP",
        "HTML5",
        "CSS3",
        "JavaScript",
        "web",
        "pages",
        "presentation",
        "Layer",
        "application",
        "Angular",
        "BackboneJS",
        "validation",
        "screens",
        "end",
        "JS",
        "components",
        "process",
        "testing",
        "application",
        "JAVA",
        "script",
        "Spring",
        "framework",
        "Java",
        "MultiThreading",
        "part",
        "end",
        "component",
        "thread",
        "Restful",
        "Web",
        "services",
        "data",
        "client",
        "side",
        "REST",
        "API",
        "JS",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "OAuth",
        "Developed",
        "Business",
        "POJOs",
        "data",
        "access",
        "layer",
        "Hibernate",
        "framework",
        "Dependency",
        "injection",
        "spring",
        "services",
        "spring",
        "controllers",
        "DAOs",
        "wire",
        "objects",
        "business",
        "classes",
        "business",
        "components",
        "Spring",
        "Boot",
        "Spring",
        "Dependency",
        "Injection",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "Annotations",
        "Hibernate",
        "Transaction",
        "Management",
        "SpringHibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "concepts",
        "Spring",
        "Data",
        "Framework",
        "features",
        "Spring",
        "JDBC",
        "Spring",
        "ORM",
        "classes",
        "JDBC",
        "Template",
        "Hibernate",
        "Template",
        "database",
        "operations",
        "Data",
        "sources",
        "Removed",
        "XML",
        "configurations",
        "MVC",
        "application",
        "classes",
        "Spring",
        "Boot",
        "application",
        "AWS",
        "EC2",
        "instances",
        "storage",
        "S3",
        "buckets",
        "Micro",
        "services",
        "protocols",
        "HTTP",
        "REST",
        "Implementing",
        "Micro",
        "services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Jenkins",
        "integration",
        "test",
        "automation",
        "Monitored",
        "Micro",
        "Services",
        "Cloud",
        "Foundry",
        "PCF",
        "Managed",
        "Domains",
        "Routes",
        "Cloud",
        "Foundry",
        "Mongo",
        "DB",
        "data",
        "storage",
        "aspects",
        "replica",
        "Sharding",
        "document",
        "design",
        "service",
        "scale",
        "Use",
        "Maven",
        "application",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "GITHUB",
        "version",
        "control",
        "tool",
        "Environment",
        "Java",
        "J2SE",
        "HTML5",
        "CSS3",
        "AWS",
        "jQuery",
        "Ajax",
        "Rabbit",
        "MQ",
        "Angular",
        "JS",
        "Node",
        "JS",
        "JSON",
        "J2EE",
        "Spring",
        "Framework",
        "Spring",
        "MVC",
        "Hibernate",
        "Docker",
        "Micro",
        "Services",
        "Kafka",
        "Cloud",
        "Foundry",
        "PCF",
        "Bootstrap",
        "Web",
        "services",
        "Restful",
        "RAD",
        "Python",
        "Web",
        "Sphere",
        "AgileScrum",
        "Methodology",
        "Maven",
        "JIRA",
        "JUnit",
        "TDD",
        "MongoDB",
        "GITHUB",
        "Senior",
        "Java",
        "Developer",
        "State",
        "WI",
        "Wisconsin",
        "August",
        "July",
        "Responsibilities",
        "JBoss",
        "Application",
        "Server",
        "components",
        "applications",
        "log4j",
        "errors",
        "info",
        "exception",
        "application",
        "JBOSS",
        "EAP",
        "Application",
        "Server",
        "user",
        "interface",
        "application",
        "Angular",
        "JS",
        "Bootstrap",
        "HTML5",
        "CSS3",
        "JavaScript",
        "MySQL",
        "database",
        "data",
        "MYSQL",
        "workbench",
        "query",
        "optimization",
        "application",
        "ANT",
        "scripts",
        "JBoss",
        "Application",
        "server",
        "ANT",
        "Scripts",
        "web",
        "application",
        "POC",
        "Angular",
        "end",
        "framework",
        "RxJs",
        "library",
        "Ivy",
        "Jenkins",
        "integration",
        "Log4j",
        "expertise",
        "Ant",
        "tool",
        "tool",
        "ANT",
        "build",
        "tool",
        "IVY",
        "dependency",
        "tool",
        "knowledge",
        "JavaScript",
        "testing",
        "frameworks",
        "Jasmine",
        "Karma",
        "Experience",
        "Management",
        "tools",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Hands",
        "experience",
        "Source",
        "Code",
        "Control",
        "Systems",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "schedule",
        "experience",
        "enterprise",
        "MERN",
        "Stack",
        "applications",
        "serverside",
        "code",
        "Nodejs",
        "Basic",
        "knowledge",
        "programming",
        "language",
        "Java",
        "Bash",
        "shell",
        "scripting",
        "end",
        "development",
        "Visual",
        "Studio",
        "CSS",
        "Log4j",
        "logging",
        "framework",
        "application",
        "log",
        "messages",
        "error",
        "logs",
        "Log4J",
        "problems",
        "end",
        "technologies",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JQuery",
        "frameworks",
        "HTML5",
        "JavaScript",
        "jQuery",
        "CSS",
        "Bootstrap",
        "XML",
        "JSON",
        "UI",
        "Knowledge",
        "CORS",
        "resource",
        "sharing",
        "mechanism",
        "Java",
        "spring",
        "frameworks",
        "development",
        "enterprise",
        "applications",
        "integration",
        "solutions",
        "programming",
        "code",
        "HQL",
        "hibernate",
        "criteria",
        "queries",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "JUnit",
        "bugs",
        "defects",
        "Firebug",
        "Eclipses",
        "tool",
        "Environment",
        "Java",
        "JBoss",
        "eap",
        "apache",
        "ant",
        "apache",
        "ivy",
        "SQL",
        "workbench",
        "CE",
        "Microsoft",
        "Visual",
        "Studio",
        "Bootstrap",
        "JavaScript",
        "jqueryui",
        "Log4j",
        "SoapUI",
        "Education",
        "Bachelors",
        "Skills",
        "ECLIPSE",
        "J2EE",
        "HIBERNATE",
        "SPRING",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "Java18",
        "J2EE",
        "SQL",
        "Cpython",
        "Web",
        "Technologies",
        "XML",
        "HTML5",
        "CSS3",
        "JSTL",
        "JavaScript",
        "jQuery",
        "JSON",
        "AJAX",
        "Catalyst",
        "Template",
        "Toolkit",
        "Django",
        "Angularjs",
        "Nodejs",
        "Reactjs",
        "J2EE",
        "Technologies",
        "JSP",
        "Servlets",
        "JDBC",
        "JPA",
        "Struts",
        "JMS",
        "Spring",
        "JSF",
        "Web",
        "Services",
        "Frameworks",
        "JSF",
        "Spring",
        "GWTHIBERNATE",
        "SPRING",
        "SECURITYSPRING",
        "AOPSPRING",
        "BOOT",
        "Testing",
        "Tools",
        "JIRA",
        "JUnit",
        "Jmeter",
        "Markup",
        "Languages",
        "HTML",
        "XML",
        "IDE",
        "Tools",
        "Eclipse",
        "IntelliJ",
        "IDEA",
        "14CE",
        "NetBeans",
        "MS",
        "Visual",
        "Studio",
        "Database",
        "Server",
        "Oracle",
        "9i10g11",
        "g",
        "SQL",
        "Server",
        "Postgres",
        "SQL",
        "MySQL",
        "MongoDB",
        "Methodologies",
        "UML",
        "MVC",
        "J2EE",
        "Design",
        "Patterns",
        "Version",
        "Control",
        "Tools",
        "GIT",
        "SVN",
        "TFS",
        "Bucket",
        "Selenium",
        "Operating",
        "System",
        "MAC",
        "Windows",
        "IOS",
        "Android",
        "UNIX",
        "Browsers",
        "IE",
        "Mozilla",
        "Firefox",
        "Safari",
        "Chrome"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:50:58.615852",
    "resume_data": "Sr Java Front End UI Web Developer Sr Java span lFrontspan span lEndspan UI Web span lDeveloperspan Sr Java Front End UI Web Developer Farmers Insurance Group Wilmington DE Have 7years of IT professional experience with full project development implementation and deployment on WindowsUnix using JAVAJ2EE technology stack Expertise in design and development of web applications using JSP JavaScript HTML5 CSS3 JQUERY AJAX JSON NodeJS AngularJS Angular 2 Reactjs Bootstrap Ext JS Experience in all phases of Software Development Life Cycle SDLC as well as AgileScrum methodologies and TestDriven Development TDD Expert level skills in application development using J2EE technologies like Java Beans Struts JSP JSF EJB JPA Servlets JDBC compliant application servers multithreading clientserver design patterns of J2EE architecture Significant experience in Responsive Web Design RWD Strong hands on writing AngularJS code for developing Single page applications SPA and experience with several in built AngularJS directives expressions and modules Experience with Service Oriented Architecture SOA web service applications Proficiency in developing web services SOAP RESTful that include several components like WSDL XML XSD JAXB JAXRS and JAXWS Also Developed SOAP web services using Apache CXF Implemented the webbased application following the MVC architecture using Spring Framework and used different Spring modules like Spring Core Spring AOP Spring MVC Spring JDBC and Spring with ORM Framework Knowledge in implementing MEAN Stack MongoDB ExpressJS AngualrJS NodeJS with RESTful stands Experience in AWS Cloud platform and its features which include EC2 AMI EBS Cloud watch Extensive experience in working with different databases such as Oracle SQL Server DB2 MySQL PLSQL and writing Stored Procedures Functions Joins and Triggers for different Data Models Expertise in Core Java concepts like OOPS design Multithreading Generics Exception handling Collections Java reflection Annotation Experience in development deployment and troubleshooting Web based and enterprise based applications on Windows UNIX and Linux platforms Experience in using assistant tools such as Git GitHub CVS and SVN for version control Extensive working experience in Unit testing experience with Jasmine Karma Experienced in writing and implementing test cases using Junit Developed application on servers such as Apache Tomcat WebLogic IBM WebSphere Good understanding of REST APIs extensive experience of integrating services via Ajax using JavaScript jQuery AngularJS and Reactjs Good exposure on using IDES like Eclipse IntelliJ IDEA My Eclipse RAD and NetBeans Experience in using build tools like Ant Maven Gradle logging with Log4j Test Driven Development using Junit Authorized to work in the US for any employer Work Experience Sr Java Front End UI Web Developer Farmers Insurance Group Wilmington DE January 2019 to Present Responsibilities Participated in the complete Software Development Life Cycle including Requirement Analysis design Implementation Testing and Maintenance Interacted with the system analysts business users for design and requirement clarifications Used J2EE patterns such as Controller Singleton factory MVC architecture is used in this application Implemented Spring Framework IOC Inversion of Control design pattern for relationship between application components Working in AWS Identity and Access Management IAM components including user groups roles policies and password policies and provide the same to end user Deploying the application on AWS cloud platform by configuring REDHAT server on EC2 instances Used Spring Framework IOC to separate the application configuration and dependency specification from the actual application code Used Spring ORM module along with Hibernate to deal with database operations Used Spring core Spring Context Spring MVC Framework for the application configuration of different components services in the application Used Hibernate for mapping claim data by connecting to Oracle 11g database Designed and developed the REST based Micro services using the Spring Boot Spring Data with JPA Used Hibernate extensively to have Database access mechanism with HQL Hibernate query language queries Resolved Runtime Errors and Application Bugs in the Production environment and enhancing the existing application Backend Integration testing of micro services and API services Implemented log4j for logging purposes and debug the application Created micro services using Spring Boot for a new public facing application Involved in production support for maintaining the system developed and resolved the complexities and bugs Implemented the project using the agile methodologies Leaned and migrated the old codes into Angular JS Extensively used Apache Camel for transformation and used both Java DSL and XML DSL Fixed bugs during the System testing Joint System testing and User acceptance testing Created responsive reusable UI components for ABCs SiteCore migration project using CSS3 and HTML5 Implemented Angular 2 Routing and navigation Components Services Used SVN repository for version control Environment Java J2EE Spring Spring Security Hibernate Eclipse WebLogic JSP jQuery XML CSS Junit Maven Oracle11g AngularJS TOAD Log4j UML Apache Camel Agile Microservices Jenkins Splunk Cucumber Griddle POM Rollup Gulp Grunt bootstrap HTML5 and AWS UI Web Developer Farmers Insurance Group Boston MA July 2016 to November 2018 Responsibilities Involved in designing the user experience interface UIUX strategy UI requirements converting findings into UI designs Worked on the RESTWeb API to create the services and used in Angular HTTP service calls and bind the data in the table using ngrepeat attributes Used Angular as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server using Sass Bootstrap Angular24 Created pages for login using single sign on main page containing favorites and page for continuous integration configuration Working experience with modern JavaScript libraries and tooling including Nodejs Developed front end using HTML5 CSS3 JavaScript Redux and Bootstrap Involved in using React JS components ReactDOM Babelwebpack concepts Experience in RESTful web services to integrate between Server side to Client side Used NPM packages to get the dependencies Designed serverside JavaScript codes to build web forms and simulate process for web application page navigation and form validation Used SVN for version control and JIRA for defect tracking Implemented the search functionality for Internal Application using Angular Worked on Mongo DB Concepts Familiar with MongoDB environment Worked with business analysts to understand their business models and goals Improved the performance and response time of the application by implementing AJAX Used JSP Servlets and HTML5 to create web interfaces EnvironmentJavaScript Angular214 Redux HTML5 CSS3 NPM SVN JIRA Rally Java Web Developer Southern Glazers Wine and Spirits Miramar FL August 2014 to June 2016 Responsibilities As a Java Programmer Implemented front end with JSP JavaBeans Struts Tag libraries and JSTL Competency in using XML Web Services by using SOAP to transfer data to supply chain and for domain expertise Monitoring Systems Experience in Locator Data Access Object DAO Data Transfer Object DTO Factory and Singleton design patterns Designed the page flow using struts serverside components for DAO layer Worked on Maven to build tool for building jar files Implemented Log4j and commonslogging frameworks for logging the application error and info Provided support for deployment of the application in multiple environments includes SIT UAT and Production Environment Used the Hibernate framework ORM to interact with the database Worked with XML by using SAX and DOM parsers to transfer the data between different components Knowledge in struts tiles framework for the layout management Implemented Stateless Sessions by using Enterprise Java Beans EJB to encapsulate business logics Implemented Web interface with the help of and Struts JSP and Standard Tag Libraries JSTL Performed Performance Tuning on Weblogic server Java JDK and Unix Operating System and Database Tuning Developed functions procedures and packages to implement the systems business logic using PLSQL Responsible for fixing all bugs encountered and communicating back over to the QA team Environment J2EE Java 6 Hibernate Struts SOAP DAO DTO EJB Oracle 10g JDK 16 JSTL XML XSLT HTML XHTML Java Script jQuery UML JavaJ2EE Full Stack Developer Thermo Fisher Scientific Pittsburgh PA April 2012 to July 2014 Description Thermo Fisher Scientific is a leading biotechnology firm in the genetic testing of Laboratory equipment its Headquarters is located in Waltham Massachusetts Its a provider of cloud based platform for scientific data management support through ecommercePhase one of the laboratory informatics application was completed in a short span of two months to aid market expansion of growing business after acquiring Core informatics Responsibilities Understanding and analyzing business requirements Participated in all phases of SDLC Involved in designing Use Case diagrams Class diagrams and Sequence diagrams as a part of design phase Configured Spring framework using the Spring core module to inject dependencies and configured Oracle MySQL Mongo in the module Developed the application by using JSP Servlets Web Services JavaScript WebLogic JAXRS and SaaS Developed RESTful Web Services using Jersey JAXRS to perform CRUD operations on the database server over HTTP and to consume web services for transferring data between different applications Used Spring Boot for developing micro services REST to retrieve data from clientside using Microservice architecture and Pivotal Cloud Foundry PCF for deploying microservices Used Singleton Session Facade and DAO patterns in implementing the application Used Java 18 and Spring 15 to perform CRUD operations on the SOLR engine to create hassle free transactional models Extensively worked with XML Schemas XSD for defining XML elements and attributes Deployed web components presentation components and business components in WebLogic Application Server Used RabbitMQ as the message broker to convert the entire flow as a SOA based architecture Implemented Multithreading concepts in Java classes to avoid deadlocks Created build environment for Java using Git and Maven Developed the test cases with JUnit for Unit testing of the built components Contributed to standardizing project coding code review guidelines and checklist Build CICD using Jenkins GIT JFrog Artifactory saving the image in Docker Private registry Used JIRA to keep track of the project bugs and issues Followed Agile Scrum methodology to track project progress and participated in Scrum meetings Environment Java18 J2EE Microservices Spring MVC IntelliJ Idea AWS Tomcat Application server Pivotal Cloud Foundry REST Webservices SOAP Webservices APIGEE HTML5 CSS3 XML JSON JUnit RabbitMQ Maven Gradle Dockers Oracle MongoDB MySQL JIRA Jenkins Spring Cloud JSP Servlets Web Services JavaScript JAXRS Java Developer Chase wealth Management Manhattan NY August 2011 to March 2012 Description J P Morgan Chase Bank is the wholly owned banking of JPMorgan Co a bank holding company headquartered in Manhattan New York Web Based enterprise application offers services to member banks to assist their cardholders with credit card transaction disputes The application provides functionality that benefits member banks and allows them to provide accurate answers and quick service to cardholders Responsibilities Involved in the complete SDLC including the design of System Architecture development of System Use Cases based on the functional requirements Adapted Agile Methodology from specification Analysis Design System integration Testing Deployment and Maintenance Involved in daily standup meetings to provide regular updates on individual tasks and progress of user stories Used JSP HTML5 CSS3 and JavaScript to construct the dynamic web pages presentation Layer for the application Used Angular 2 and BackboneJS for clientside validation Develop various screens for the front end using Angular JS and used various predefined components Capable to automate the process of testing of application using JAVA script and Spring framework Handed Java MultiThreading part in back end component one thread will be running for each Implemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to the client and handled the security and Authorization using Spring Security and OAuth Developed Business objects using POJOs and data access layer using Hibernate framework Achieved Dependency injection by creating spring services spring controllers and DAOs to wire objects of business classes Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP and Spring Annotations Used Hibernate Transaction Management SpringHibernate Batch Transactions and Hibernate cache concepts Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available Removed all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot Installed the application on AWS EC2 instances and configured the storage on S3 buckets Used Micro services to communicate using synchronous protocols HTTP and REST Implementing or exposing the Micro services based on Restful API utilizing Spring Boot with Spring MVC Used Jenkins for continuous integration and test automation Deployed and Monitored Micro Services Using Pivotal Cloud Foundry PCF also Managed Domains and Routes with the Cloud Foundry Used Mongo DB as data storage and utilized aspects like replica sets Sharding and clever document design to make service extensible scale and feature wise Use Maven to build the application and deployed on Web Sphere Application Server Used GITHUB as version control tool Environment Java 8 J2SE HTML5 CSS3 AWS jQuery Ajax Rabbit MQ Angular JS Node JS JSON J2EE Spring Framework 420 Spring MVC 42 Hibernate 40 Docker Micro Services Kafka Pivotal Cloud Foundry PCF Bootstrap Web services Restful RAD Python Web Sphere AgileScrum Methodology Maven JIRA JUnit TDD MongoDB GITHUB Senior Java Developer State of WI Wisconsin August 2010 to July 2011 Responsibilities Used JBoss Application Server for deploying various components of applications Worked on log4j for logging errors info and exception Deployed the application in JBOSS EAP Application Server Designed the user interface of the application using Angular JS Bootstrap HTML5 CSS3 and JavaScript Worked on MySQL database to store data and used MYSQL workbench for query optimization Built the application using ANT scripts and deployed using JBoss Application server Written and debugged the ANT Scripts for building the entire web application Involved extensively in developing a POC for adopting Angular 20 as front end framework using RxJs library Ivy Jenkins used for continuous integration and build Experienced in using Log4j and good expertise in Ant tool and IVY tool Used ANT as a build tool and IVY as dependency tool Good knowledge of using JavaScript testing frameworks Jasmine and Karma Experience in Management tools like Team Foundation Server TFS Hands on experience using Source Code Control Systems like Team Foundation Server TFS to build schedule Having good experience in developing an enterprise MERN Stack applications by writing serverside code with Nodejs Basic knowledge in programming language such Java Bash shell scripting Involved in front end development using Visual Studio 2010 and CSS Used Log4j logging framework in the application to store log messages Monitored the error logs using Log4J and fixed the problems Worked extensively with front end technologies like HTML5 CSS3 Bootstrap and JQuery mobile frameworks Used HTML5 JavaScript and jQuery CSS Bootstrap Ajax XML and JSON to create a rich interactive UI Knowledge on CORS crossorigin resource sharing mechanism Utilized Java and spring frameworks for development of enterprise applications Developed integration solutions and prepared programming code Extensively worked with HQL and hibernate criteria queries Wrote unit testing codes using JUnit resolved bugs and other defects using Firebug and Eclipses debugging tool Environment Java 160 java 8 JBoss eap 43 apache ant 171 apache ivy 240 My SQL workbench 52 CE Microsoft Visual Studio 2012TFS Bootstrap JavaScript jqueryui 1103 Log4j SoapUI Education Bachelors Skills ECLIPSE J2EE HIBERNATE INTELLIJ IDEA SPRING Additional Information TECHNICAL SKILLS Languages Java18 J2EE SQL Cpython Web Technologies XML HTML5 CSS3 JSTL JavaScript jQuery JSON AJAX Catalyst Template Toolkit Django Angularjs Nodejs Reactjs J2EE Technologies JSP Servlets JDBC JPA Struts JMS Spring JSF and Web Services Frameworks JSF Spring GWTHIBERNATE SPRING SECURITYSPRING AOPSPRING BOOT Testing Tools JIRA JUnit Jmeter Markup Languages HTML XML SAML UIML IDE Tools Eclipse IntelliJ IDEA 14CE NetBeans MS Visual Studio 2012 Database Server Oracle 9i10g11g SQL Server Postgres No SQL MySQL MongoDB Methodologies OOPSOOAD UML MVC J2EE Design Patterns Version Control Tools GIT SVN TFS Bucket Selenium Operating System MAC Windows 0710 IOS Android UNIX Browsers IE Mozilla Firefox Safari Chrome",
    "unique_id": "84b8d107-ab3a-45b8-b933-d9c20a241d58"
}