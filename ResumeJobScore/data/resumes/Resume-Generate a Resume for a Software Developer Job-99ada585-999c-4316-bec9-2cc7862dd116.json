{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer ADESA Work Experience Python Developer ADESA Carmel IN September 2018 to Present Description ADESA Inc provides whole car auctions and related services to the vehicle remarketing industry in North America The company also offers valueadded services such as auction related transportation reconditioning inspection title and repossession administration remarketing vehicle research and analytical services as well as data as a service Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration CloudTrail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Extensive use of version controlling systems like GIT and SVN Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 372 Django API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Puget Sound Energy Bellevue WA April 2018 to September 2018 Description Puget Sound Energy Inc operates as a regulated electric and natural gas utility company in the United States The company engages in the generation transmission and distribution of electricity and distribution of natural gas Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language tocreate a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many day to day tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 34 27 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse JQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Morgan Stanley New York NY November 2017 to April 2018 Description JPMC is a leading global financial services firm with assets of 2 trillion and operations in more than 60 countries The firm is a leader in investment banking financial services for consumers small business and commercial banking financial transaction processing asset management and private equity Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective webbased applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Python Developer Insurance Inbox Hyderabad Telangana August 2014 to June 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using Pyunit framework Used Jenkins to deploy web services and run unit tests REST API test Java Programmer Lloyds Banking Group Bengaluru Karnataka December 2012 to July 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test",
    "entities": [
        "GIT",
        "Python",
        "Present Description ADESA Inc",
        "Pyunit",
        "Developed",
        "CRUD",
        "Responsibilities Interacted with Business",
        "Jenkins",
        "Terraform",
        "CloudTrail",
        "QA",
        "DB Created",
        "IAM",
        "SQL Server Expertise",
        "Performed",
        "Build",
        "SNS Integration",
        "Python and Flask Postgres Database Wrote",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "UNIX",
        "Djangos",
        "AWS",
        "Agile Software Methodology",
        "Oracle",
        "ANSIBLE",
        "SQL Profiler and Analytics",
        "Terraform Developed Merge",
        "Created Business Logic",
        "Created Terraform",
        "ELB",
        "DjangoREST",
        "Develop",
        "View Sets",
        "the Workflows Worklets Sessions Mappings Source Definitions Target",
        "Performed Unit",
        "Amazon",
        "CSS",
        "PHP Python",
        "SAX",
        "Heroku",
        "Created an AWS Lambda",
        "TestDriven Development TDD",
        "the RPM Package",
        "Design Development and Deployment Testing and Implementation",
        "SQL",
        "Collaborated",
        "OLTP",
        "AWS Experienced",
        "REST",
        "Telangana",
        "Automate",
        "lPythonspan",
        "PyUnit",
        "Bootstrap Implemented RESTful WebServices",
        "SVN Worked",
        "Shell",
        "Software Development Life Cycle",
        "SSH",
        "Implemented Terraform",
        "the United States",
        "CLI",
        "Integration",
        "DOM API",
        "REST API",
        "MVC",
        "MFA"
    ],
    "experience": "Experience Python Developer ADESA Carmel IN September 2018 to Present Description ADESA Inc provides whole car auctions and related services to the vehicle remarketing industry in North America The company also offers valueadded services such as auction related transportation reconditioning inspection title and repossession administration remarketing vehicle research and analytical services as well as data as a service Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration CloudTrail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Extensive use of version controlling systems like GIT and SVN Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 372 Django API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Puget Sound Energy Bellevue WA April 2018 to September 2018 Description Puget Sound Energy Inc operates as a regulated electric and natural gas utility company in the United States The company engages in the generation transmission and distribution of electricity and distribution of natural gas Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language tocreate a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many day to day tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 34 27 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse JQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Morgan Stanley New York NY November 2017 to April 2018 Description JPMC is a leading global financial services firm with assets of 2 trillion and operations in more than 60 countries The firm is a leader in investment banking financial services for consumers small business and commercial banking financial transaction processing asset management and private equity Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective webbased applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Python Developer Insurance Inbox Hyderabad Telangana August 2014 to June 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using Pyunit framework Used Jenkins to deploy web services and run unit tests REST API test Java Programmer Lloyds Banking Group Bengaluru Karnataka December 2012 to July 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "ADESA",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "ADESA",
        "Carmel",
        "September",
        "Present",
        "Description",
        "ADESA",
        "Inc",
        "car",
        "auctions",
        "services",
        "vehicle",
        "industry",
        "North",
        "America",
        "company",
        "services",
        "auction",
        "transportation",
        "inspection",
        "title",
        "repossession",
        "administration",
        "vehicle",
        "research",
        "services",
        "data",
        "service",
        "Responsibilities",
        "Business",
        "team",
        "requirements",
        "experience",
        "AWS",
        "services",
        "S3",
        "ELB",
        "EBS",
        "AutoScaling",
        "Route53",
        "Storefront",
        "IAM",
        "Cloud",
        "Watch",
        "RDS",
        "infrastructure",
        "code",
        "execution",
        "resource",
        "graph",
        "automation",
        "Terraform",
        "Managed",
        "AWS",
        "infrastructure",
        "code",
        "Terraform",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "file",
        "cleaners",
        "Python",
        "libraries",
        "Worked",
        "MVC",
        "architecture",
        "PHP",
        "Python",
        "controller",
        "Build",
        "Lambda",
        "functions",
        "python",
        "process",
        "event",
        "AWS",
        "Lambda",
        "architecture",
        "AWS",
        "S3",
        "Buckets",
        "thumbnail",
        "create",
        "event",
        "user",
        "picture",
        "packages",
        "socket",
        "REST",
        "API",
        "Django",
        "Hands",
        "experience",
        "Business",
        "data",
        "centre",
        "environment",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "JSON",
        "template",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Understanding",
        "configuration",
        "CloudTrail",
        "cloudsecurity",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systems",
        "IAM",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "Environment",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Environment",
        "Lambda",
        "Dynamo",
        "DB",
        "Python",
        "Django",
        "API",
        "Gateway",
        "Java",
        "J2EE",
        "REST",
        "API",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "CloudWatch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Python",
        "Developer",
        "Puget",
        "Sound",
        "Energy",
        "Bellevue",
        "WA",
        "April",
        "September",
        "Description",
        "Puget",
        "Sound",
        "Energy",
        "Inc",
        "gas",
        "utility",
        "company",
        "United",
        "States",
        "company",
        "generation",
        "transmission",
        "distribution",
        "electricity",
        "distribution",
        "gas",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "Experience",
        "collections",
        "Python",
        "user",
        "objects",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Worklets",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "Bash",
        "Perl",
        "Python",
        "Automate",
        "day",
        "day",
        "usage",
        "SQL",
        "Profiler",
        "Analytics",
        "query",
        "optimization",
        "maintenance",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Integration",
        "data",
        "storage",
        "solutions",
        "Django",
        "ORM",
        "system",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "team",
        "QA",
        "DB",
        "standards",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "Environment",
        "Python",
        "Django",
        "Java",
        "SQL",
        "Java",
        "Script",
        "Linux",
        "Shell",
        "Scripting",
        "Mongo",
        "DB",
        "HTML",
        "Angular",
        "JS",
        "Eclipse",
        "JQuery",
        "JSON",
        "XML",
        "CSS",
        "MySQL",
        "Bootstrap",
        "Amazon",
        "s3",
        "Python",
        "Developer",
        "Morgan",
        "Stanley",
        "New",
        "York",
        "NY",
        "November",
        "April",
        "Description",
        "JPMC",
        "services",
        "assets",
        "operations",
        "countries",
        "firm",
        "leader",
        "investment",
        "banking",
        "services",
        "consumers",
        "business",
        "banking",
        "transaction",
        "asset",
        "management",
        "equity",
        "Responsibilities",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "largescale",
        "hightraffic",
        "Python",
        "web",
        "applications",
        "features",
        "core",
        "functionality",
        "platforms",
        "services",
        "support",
        "host",
        "production",
        "QA",
        "development",
        "OLTP",
        "hundreds",
        "store",
        "Installation",
        "migrating",
        "patching",
        "DB2",
        "Oracle",
        "SQL",
        "Server",
        "Expertise",
        "database",
        "connections",
        "Python",
        "packages",
        "MySQL",
        "Python",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "delivery",
        "code",
        "principles",
        "TestDriven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "channels",
        "Django",
        "Used",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behaviour",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "expressions",
        "order",
        "pattern",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Skilled",
        "Collections",
        "Python",
        "user",
        "objects",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "skills",
        "user",
        "applications",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Bugzilla",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "Insurance",
        "Inbox",
        "Hyderabad",
        "Telangana",
        "August",
        "June",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "REST",
        "style",
        "web",
        "services",
        "Python",
        "Flask",
        "Postgres",
        "Database",
        "Wrote",
        "SQL",
        "queries",
        "PLSQL",
        "functions",
        "Command",
        "Line",
        "Interface",
        "CLI",
        "tool",
        "hat",
        "Linux",
        "Pythons",
        "XML",
        "parser",
        "SAX",
        "DOM",
        "API",
        "amounts",
        "data",
        "DB",
        "Linux",
        "Services",
        "REST",
        "web",
        "services",
        "Shell",
        "script",
        "Build",
        "RPM",
        "Package",
        "Product",
        "upgrade",
        "features",
        "Design",
        "test",
        "cases",
        "REST",
        "API",
        "REST",
        "API",
        "test",
        "framework",
        "development",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "Design",
        "test",
        "cases",
        "CLI",
        "automation",
        "Python",
        "Unit",
        "testing",
        "unit",
        "test",
        "cases",
        "Pyunit",
        "framework",
        "Jenkins",
        "web",
        "services",
        "unit",
        "REST",
        "API",
        "test",
        "Java",
        "Programmer",
        "Lloyds",
        "Banking",
        "Group",
        "Bengaluru",
        "Karnataka",
        "December",
        "July",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "REST",
        "style",
        "web",
        "services",
        "Python",
        "Flask",
        "Postgres",
        "Database",
        "Wrote",
        "SQL",
        "queries",
        "PLSQL",
        "functions",
        "Command",
        "Line",
        "Interface",
        "CLI",
        "tool",
        "hat",
        "Linux",
        "Pythons",
        "XML",
        "parser",
        "SAX",
        "DOM",
        "API",
        "amounts",
        "data",
        "DB",
        "Linux",
        "Services",
        "REST",
        "web",
        "services",
        "Shell",
        "script",
        "Build",
        "RPM",
        "Package",
        "Product",
        "upgrade",
        "features",
        "Design",
        "test",
        "cases",
        "REST",
        "API",
        "REST",
        "API",
        "test",
        "framework",
        "development",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "Design",
        "test",
        "cases",
        "CLI",
        "automation",
        "Python",
        "Unit",
        "testing",
        "unit",
        "test",
        "cases",
        "PyUnit",
        "framework",
        "Jenkins",
        "web",
        "services",
        "unit",
        "REST",
        "API",
        "test"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:06:03.032532",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer ADESA Work Experience Python Developer ADESA Carmel IN September 2018 to Present Description ADESA Inc provides whole car auctions and related services to the vehicle remarketing industry in North America The company also offers valueadded services such as auction related transportation reconditioning inspection title and repossession administration remarketing vehicle research and analytical services as well as data as a service Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration CloudTrail cloudsecurity technologies VPC Security Groups etc and cloudpermission systems IAM Extensive use of version controlling systems like GIT and SVN Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment Lambda Dynamo DB Python 372 Django API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Python Developer Puget Sound Energy Bellevue WA April 2018 to September 2018 Description Puget Sound Energy Inc operates as a regulated electric and natural gas utility company in the United States The company engages in the generation transmission and distribution of electricity and distribution of natural gas Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language tocreate a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many day to day tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 34 27 Django 1917 Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse JQuery JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer Morgan Stanley New York NY November 2017 to April 2018 Description JPMC is a leading global financial services firm with assets of 2 trillion and operations in more than 60 countries The firm is a leader in investment banking financial services for consumers small business and commercial banking financial transaction processing asset management and private equity Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective webbased applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Python Developer Insurance Inbox Hyderabad Telangana August 2014 to June 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using Pyunit framework Used Jenkins to deploy web services and run unit tests REST API test Java Programmer Lloyds Banking Group Bengaluru Karnataka December 2012 to July 2014 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modelling analysis design and development Designed and Developed the REST style web services using Python and Flask Postgres Database Wrote complex SQL queries and PLSQL functions Developed the Command Line Interface CLI tool for Red hat Linux Used Pythons XML parser architectures SAX and DOM API for tracking small amounts of data without requiring the DB Created the Linux Services to run REST web services using Shell script Build the RPM Package for the Product with the upgrade features support Design and developed the test cases for REST API Involved REST API test framework development Used Python Library Beautiful Soup for web scrapping Design and develop the test cases for CLI automation using Python Involved in Unit testing and developed the unit test cases using PyUnit framework Used Jenkins to deploy web services and run unit tests REST API test",
    "unique_id": "99ada585-999c-4316-bec9-2cc7862dd116"
}