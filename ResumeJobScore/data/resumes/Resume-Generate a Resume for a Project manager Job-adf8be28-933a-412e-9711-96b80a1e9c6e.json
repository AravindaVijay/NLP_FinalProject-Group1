{
    "clean_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER VISA RTG Around 6 years of professional experience in IT Industry with strong hands on analysis design and development of enterprise applications Equipped with the knowledge of various softwares organizing technical demonstrations with sound understanding and skill of creating new software systems designing analysis testing database development and coding for modules while structuring customized solutions to meet customers specific needs Strong experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs Sublime text Spyder PyCharm Eclipse Emacs Good experience in Python in creating scalable and robust applications along with other technologies Proficient in developing Web Services SOAP RESTful in Python using XML JSON Driven to architect Big Data solutions on multiple platforms using data analytics Strong experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop cass Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Expertise in practicing the SDLC models agile methods with Scrum Extreme Programming Ticketing systems using JIRA and TestDriven Development TDD Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript jQuery MVC3 Bootstrap RESTful RUBY and AJAX Expertise in working with different databases like Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Experience in implementing core cache and abstraction with Jasmine and Redis cache server Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Flask Web2Py and Pyramid Excellent experience with python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux Well versed with Version control systems such as Git SVNand CVS Worked on Several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Experienced in implementing Cloud solutions in AWS EC2 EMR S3 Cloudwatch Lambda Cloudtrail SNS SES EBS CLI VPC ELB IAM Redshift RDS Root53 Google Cloud Microsoft Azure Experience in project deployment using Google CloudJenkins Elasticsearch and using web Services like Amazon Web Services AWS Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI Experience in using UNIX Shell Scripts for automating batch programs Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Good knowledge on front end frame works like CSS Bootstrap Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Good experience in developing web applications implementing Model View Control architecture using Django Flask and Pyramid Python web application frameworks Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django and Flask Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL PostgreSQL DB2 Having good knowledge in using NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in working with SQL Alchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Work Experience PYTHON DEVELOPER VISA Foster City CA February 2018 to Present Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed front end and backend of the application using Python on Django Web Framework Implemented the application using Python Spring IOCInversion of Control Django Framework and Apache spark handled the security using Python Spring Security Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Worked on implementing Spark Framework a Java based Web Frame work Worked and learned a great deal from AWS cloud services like EC2 S3 Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development also involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches Build Restful API web services using Node JS and Express JS and used a Full complement of Express Angular JS Nodejs and Mongo DB to store and present assessments Worked on Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Involved in developing the AngularJS Meteor framework for the Single Page Application development Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Performed Restful routing using Nodejs which submits my form data to the Mongo DB database Developed existing network mapping microservices using python Nmap and deployed it on kubernetes Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python also run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization deployed the project into Jenkins using GIT version control system Developed spark application working with Spark Context SparkSQL Data Frame Pair RDDs Wrote Restful web services to communicate with Mongo DB and performed CRUD operations on Mongo DB using Restful web API services Managed Linux and windows virtual servers on AWS EC2 using opensource chef server Worked on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for querying Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through mo as a CICD Process Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs to Kafka topics and handful in use of version controlling systems like GIT and SVN Worked on importing the realtime data to Hadoop using Kafka and implemented the Oozie job Experience Schedule Recurring Hadoop Jobs with Apache Oozie Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Utilized Python libraries wx Python NumPy Twisted and matplotlib and designing mobile search application system requirements and coded backend and frontend in Python Created Chef roles for different Applications and services and to spin in different environments Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Implemented SQL Alchemy which is a python library for complete access over SQL Having expertise on performance testing of the applications on Mongo DB using Studio3T and OPS Manager Developed Hibernate with Spring Integration as the data abstraction to interact with the database of Mongo DB Worked on Element tree XML API in python to parse XML documents and load the data in database Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs as well used Angular JS as the development framework to build a singlepage application PYTHON DEVELOPER WELLS FARGO San Francisco CA April 2016 to February 2018 Worked on several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed and designed system to collect data from multiple portal using Kafka and then process it using spark Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon CloudWorked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Worked on installation of Docker using Docker toolbox used GIT for the version control and deployed project into AWS Created RESTful APIs calls with server parse output report of excel files wrote scripts in Python for extracting data from HTML file Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment worked on creation of custom Docker container images tagging and pushing the images Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster also used Storm and Kafka Services to push data to HBase and Hive tables Used Chef deployed and configured for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Used Spark Streaming APIs to perform transformations and actions on the fly for building common Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Spark Streaming to divide streaming data into batches as an input to Spark engine for batch processing Good experience using various Python libraries including Beautiful Soup NumPy SciPy Matplotlib pythontwitter Urllib Pandas data frame network for database connectivity to speed up development Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Worked on bugtracking Jira source code management tools Git GitHub Stash and team collaboration software SAAS tool Confluence Worked on big data Technologies particularly Hadoop Hive Pig as well as Spark also installed and maintained web servers Tomcat and Apache HTTP in UNIX Worked on various Python packages such as SQL Alchemy Pickle PySide PySpark PyMongo PyTable Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git PYTHON DEVELOPER BANK OF AMERICA Charlotte NC October 2015 to March 2016 Used Agile methodology for rewriting existing PythonDjango modules to deliver certain format of data and responsible for debugging the project monitored on JIRA Designed front end using UI HTML Bootstrap CSSCSS3 and JavaScript with serverside technologies including databases for development of Web applications Extensively used JavaScript MVC Framework AngularJS to make rich internet web application for a Single page application Worked with the LinuxUnix admin team to set up configure initialize and troubleshoot a Cassandra cluster Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Wrote unit test cases individually and in suits with Pytest and PyUnit on SOAP messages stored by creating SOAP services Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using PySpark library and python Installed Kerberos secured Kafka cluster with no encryption on Dev and Prod Also set up Kafka ACLs into it Developed Test Cases and Test Scripts in selenium web driver with Java using Cucumber framework with build management tool Maven Accessed public datasets and use TensorFlow and SQL Alchemy to load process clean and transform data Worked on JSF Framework integrated with EJB 30 as well as Hibernate 4 Modify existing codes and developed PLSQL packages to perform Certain Specialized functions enhancement on Oracle application Used log4j for logging automated steps and script errors Implemented Spark using Scala for faster testing and processing of data responsible to manage data from different sources Installed Red Hat based Linux systems and familiar with specific configuration component of Red Hat Analyzed the SQL scripts and designed solutions to implement using PySpark utilized Kubernetes and Docker for the runtime environment of the CICD system to build and test deploy Developed serverbased web traffic statistical analysis tool using Flask Pandas and tested it in interaction with MySQL Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Developed Spark Streaming script to consume topics from distributed messaging source Kafka for realtime processing Worked on Kafka Backup Index Log4j appender minimized logs and Pointed ambari server logs to NAS Storage Worked with the migration of existing code repository from ClearCase multisite to TFS and used Eclipse to connect to central CVS repository and SVN repository servers Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Bottle Pyramid and Cherrypie framework with REST API and MongoDB as back end database Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Involved in writing application level code to interact with Web APIs web services using JSON Used Perforce version control system and Python tools for visual studio PTVS IDE Worked with AWS EC2 Container Service plugin in Jenkins which automates Jenkins masterslave configuration by creating temporary slaves Integrated AWSRDS Oracle to AWSHive using DynamoDB and MariaDB with direct connect Developed API services in Reactjs Nodejs while leveraging RabbitMQ for distributed architectures Experience in Linux and Unix Bash scripting and following PEP Guidelines Used Py Query to modify pure http templates that can be used for web scrapping or for theming applications Created custom columns while ingesting data into Hadoop lake using PyTable PySpark PyMongo Pickle and PySide PYTHON DEVELOPER DELL Mumbai Maharashtra May 2013 to February 2015 Done the representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Performed Inheritance based Object Relational Mappings in tables to simplify the data using Hibernate ORM Developed views and templates with Django view controller and template to create a userfriendly website interface Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Developed Action classes Action Forms and Struts Configuration file to handle required UI actions JSPs for Views Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Deployed an AWS cloud server for Python using uptodate and consistent interface with Boto3 Created methods get post put delete to make requests to the API server and tested Restful API using postman Designed and Developed SQL database structure with Django Framework using agile methodology Designed and developed a responsive UI page using Bootstrap Analysis Design Implementation Testing and Maintenance Developed project using Django Oracle SQL Angular 2 JavaScript HTML5 CSS3 and Bootstrap Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Extensive knowledge of building single page applications SPA using HTML CSS JavaScript Angular Bootstrap with Python development Education Master of Science in Computer Science North Western Polytechnic University 2016 Bachelor of Engineering in Electronics and Telecommunication Pune University Pune Maharashtra 2011",
    "entities": [
        "Implemented Spark",
        "Object Oriented Programming",
        "Spark Context",
        "AJAX",
        "Maven Accessed",
        "GUI",
        "PyTable PySpark PyMongo Pickle",
        "Nodejs",
        "UNIX",
        "Python Spring Security Develop",
        "Sublime Text",
        "LinuxUnix",
        "Reactjs Nodejs",
        "JSF Framework",
        "Specialized",
        "HTML CSS JavaScript Angular Bootstrap",
        "LINUX Experienced",
        "Created Database",
        "Design Patterns",
        "Apache Cassandra 311 Couchbase Kubernetes",
        "LAMP Linux",
        "GIT Repository Setup",
        "Science in Computer Science North Western Polytechnic University",
        "CVS",
        "Django Oracle SQL Angular",
        "Panda",
        "Design Development and Deployment Testing and Implementation",
        "Model View Control MVC",
        "Hadoop",
        "XML",
        "SOAP",
        "DHTML",
        "jQuery Created",
        "Oracle MySQL PostgreSQL DB2",
        "Developed Chef Cookbooks",
        "PyUnit",
        "Installed Kerberos",
        "JIRA",
        "SVN Worked",
        "Chef Serverworkstation",
        "ONCORE",
        "ClearCase",
        "Implemented Terraform",
        "HBase",
        "Apache Spark",
        "Amazon",
        "Storm and Kafka Services",
        "Maven Repository and Deployment",
        "JSON Used Perforce",
        "Bigdata Integration and Analytics",
        "the Single Page Application",
        "Pyunit",
        "Test Automation",
        "Stored Procedures",
        "Developed",
        "SQL Having",
        "Amazon AWS S3",
        "Jenkins",
        "Influx DB",
        "Python REST API Frame",
        "CSS Bootstrap",
        "Amazon Web Services AWS Experience",
        "NC",
        "Cherrypie",
        "Oracle Application Server",
        "San Francisco",
        "Puppet",
        "Kanban",
        "Git",
        "Restful",
        "Django Framework",
        "DDL",
        "ANSIBLE",
        "Views Developed",
        "DjangoREST",
        "RD",
        "PythonPHP",
        "Chef Done",
        "API RESTful Web Service",
        "Linux",
        "MVC Singleton",
        "AWS Lambda and CloudWatch Used Spark Streaming",
        "Version",
        "SDLC",
        "Shell Scripting",
        "Docker",
        "Unix Bash",
        "RDS",
        "UI HTML Bootstrap CSSCSS3",
        "Created a",
        "CLI",
        "Interface",
        "Flask SQL Alchemy",
        "Spark",
        "PythonDjango",
        "Validate",
        "EJB",
        "GIT",
        "Node JS",
        "Python on Django",
        "SIT",
        "API",
        "IAM",
        "Web Frame",
        "Created",
        "Oracle MySQL PostgreSQL",
        "AWS",
        "WAMP Windows Apache",
        "Python Created Chef",
        "Oracle",
        "PySpark",
        "UAT Proficient",
        "HTML",
        "Developed Test Cases",
        "Red Hat Analyzed",
        "Bootstrap RESTful RUBY",
        "RESTFUL",
        "SQL",
        "TSQL Queries",
        "DML",
        "AWS Created",
        "Administrators",
        "TestDriven Development TDD Experienced",
        "Ant",
        "PySpark utilized Kubernetes",
        "Object Relational Mappings",
        "Developed Action classes Action Forms and Struts Configuration",
        "SSH",
        "SQL Alchemy",
        "RESTAPI",
        "CI",
        "Big Data",
        "Model View Control",
        "CSS Bootstrap Proficient",
        "Hive",
        "CICD",
        "Telecommunication Pune University",
        "MultiThreading Exception Handling",
        "Express Angular JS Nodejs",
        "Python Django PHP C XML",
        "Pandas",
        "Release Branches Build Restful API",
        "AJAX Expertise",
        "SQLite",
        "CRUD",
        "Bootstrap Analysis Design Implementation Testing",
        "PythonPHP Architecture Expertise",
        "Maven",
        "Worked on Mongo DB",
        "NAS Storage",
        "Performed Inheritance",
        "Developed API services",
        "Spark SQL",
        "Djangos",
        "JavaScript",
        "CDC",
        "Pyramid Excellent",
        "UI",
        "Django WSGI",
        "SVN",
        "View Sets",
        "Pytest",
        "Tomcat",
        "SPA",
        "Data",
        "Present Created Terraform",
        "Nmap",
        "PHP",
        "NoSQL",
        "AWS EC2 Container Service",
        "HTMLCSSjQuery",
        "Google CloudJenkins Elasticsearch",
        "Apache Spark Hadoop",
        "Mongo DB",
        "Single Page Application",
        "MFA"
    ],
    "experience": "Experience in implementing core cache and abstraction with Jasmine and Redis cache server Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Flask Web2Py and Pyramid Excellent experience with python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux Well versed with Version control systems such as Git SVNand CVS Worked on Several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Experienced in implementing Cloud solutions in AWS EC2 EMR S3 Cloudwatch Lambda Cloudtrail SNS SES EBS CLI VPC ELB IAM Redshift RDS Root53 Google Cloud Microsoft Azure Experience in project deployment using Google CloudJenkins Elasticsearch and using web Services like Amazon Web Services AWS Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI Experience in using UNIX Shell Scripts for automating batch programs Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Good knowledge on front end frame works like CSS Bootstrap Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Good experience in developing web applications implementing Model View Control architecture using Django Flask and Pyramid Python web application frameworks Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django and Flask Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL PostgreSQL DB2 Having good knowledge in using NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in working with SQL Alchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Work Experience PYTHON DEVELOPER VISA Foster City CA February 2018 to Present Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed front end and backend of the application using Python on Django Web Framework Implemented the application using Python Spring IOCInversion of Control Django Framework and Apache spark handled the security using Python Spring Security Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Worked on implementing Spark Framework a Java based Web Frame work Worked and learned a great deal from AWS cloud services like EC2 S3 Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development also involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches Build Restful API web services using Node JS and Express JS and used a Full complement of Express Angular JS Nodejs and Mongo DB to store and present assessments Worked on Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Involved in developing the AngularJS Meteor framework for the Single Page Application development Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Performed Restful routing using Nodejs which submits my form data to the Mongo DB database Developed existing network mapping microservices using python Nmap and deployed it on kubernetes Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python also run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization deployed the project into Jenkins using GIT version control system Developed spark application working with Spark Context SparkSQL Data Frame Pair RDDs Wrote Restful web services to communicate with Mongo DB and performed CRUD operations on Mongo DB using Restful web API services Managed Linux and windows virtual servers on AWS EC2 using opensource chef server Worked on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for querying Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through mo as a CICD Process Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs to Kafka topics and handful in use of version controlling systems like GIT and SVN Worked on importing the realtime data to Hadoop using Kafka and implemented the Oozie job Experience Schedule Recurring Hadoop Jobs with Apache Oozie Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Utilized Python libraries wx Python NumPy Twisted and matplotlib and designing mobile search application system requirements and coded backend and frontend in Python Created Chef roles for different Applications and services and to spin in different environments Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Implemented SQL Alchemy which is a python library for complete access over SQL Having expertise on performance testing of the applications on Mongo DB using Studio3 T and OPS Manager Developed Hibernate with Spring Integration as the data abstraction to interact with the database of Mongo DB Worked on Element tree XML API in python to parse XML documents and load the data in database Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs as well used Angular JS as the development framework to build a singlepage application PYTHON DEVELOPER WELLS FARGO San Francisco CA April 2016 to February 2018 Worked on several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed and designed system to collect data from multiple portal using Kafka and then process it using spark Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon CloudWorked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Worked on installation of Docker using Docker toolbox used GIT for the version control and deployed project into AWS Created RESTful APIs calls with server parse output report of excel files wrote scripts in Python for extracting data from HTML file Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment worked on creation of custom Docker container images tagging and pushing the images Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster also used Storm and Kafka Services to push data to HBase and Hive tables Used Chef deployed and configured for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Used Spark Streaming APIs to perform transformations and actions on the fly for building common Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Spark Streaming to divide streaming data into batches as an input to Spark engine for batch processing Good experience using various Python libraries including Beautiful Soup NumPy SciPy Matplotlib pythontwitter Urllib Pandas data frame network for database connectivity to speed up development Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Worked on bugtracking Jira source code management tools Git GitHub Stash and team collaboration software SAAS tool Confluence Worked on big data Technologies particularly Hadoop Hive Pig as well as Spark also installed and maintained web servers Tomcat and Apache HTTP in UNIX Worked on various Python packages such as SQL Alchemy Pickle PySide PySpark PyMongo PyTable Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git PYTHON DEVELOPER BANK OF AMERICA Charlotte NC October 2015 to March 2016 Used Agile methodology for rewriting existing PythonDjango modules to deliver certain format of data and responsible for debugging the project monitored on JIRA Designed front end using UI HTML Bootstrap CSSCSS3 and JavaScript with serverside technologies including databases for development of Web applications Extensively used JavaScript MVC Framework AngularJS to make rich internet web application for a Single page application Worked with the LinuxUnix admin team to set up configure initialize and troubleshoot a Cassandra cluster Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Wrote unit test cases individually and in suits with Pytest and PyUnit on SOAP messages stored by creating SOAP services Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using PySpark library and python Installed Kerberos secured Kafka cluster with no encryption on Dev and Prod Also set up Kafka ACLs into it Developed Test Cases and Test Scripts in selenium web driver with Java using Cucumber framework with build management tool Maven Accessed public datasets and use TensorFlow and SQL Alchemy to load process clean and transform data Worked on JSF Framework integrated with EJB 30 as well as Hibernate 4 Modify existing codes and developed PLSQL packages to perform Certain Specialized functions enhancement on Oracle application Used log4j for logging automated steps and script errors Implemented Spark using Scala for faster testing and processing of data responsible to manage data from different sources Installed Red Hat based Linux systems and familiar with specific configuration component of Red Hat Analyzed the SQL scripts and designed solutions to implement using PySpark utilized Kubernetes and Docker for the runtime environment of the CICD system to build and test deploy Developed serverbased web traffic statistical analysis tool using Flask Pandas and tested it in interaction with MySQL Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Developed Spark Streaming script to consume topics from distributed messaging source Kafka for realtime processing Worked on Kafka Backup Index Log4j appender minimized logs and Pointed ambari server logs to NAS Storage Worked with the migration of existing code repository from ClearCase multisite to TFS and used Eclipse to connect to central CVS repository and SVN repository servers Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Bottle Pyramid and Cherrypie framework with REST API and MongoDB as back end database Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Involved in writing application level code to interact with Web APIs web services using JSON Used Perforce version control system and Python tools for visual studio PTVS IDE Worked with AWS EC2 Container Service plugin in Jenkins which automates Jenkins masterslave configuration by creating temporary slaves Integrated AWSRDS Oracle to AWSHive using DynamoDB and MariaDB with direct connect Developed API services in Reactjs Nodejs while leveraging RabbitMQ for distributed architectures Experience in Linux and Unix Bash scripting and following PEP Guidelines Used Py Query to modify pure http templates that can be used for web scrapping or for theming applications Created custom columns while ingesting data into Hadoop lake using PyTable PySpark PyMongo Pickle and PySide PYTHON DEVELOPER DELL Mumbai Maharashtra May 2013 to February 2015 Done the representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Performed Inheritance based Object Relational Mappings in tables to simplify the data using Hibernate ORM Developed views and templates with Django view controller and template to create a userfriendly website interface Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Developed Action classes Action Forms and Struts Configuration file to handle required UI actions JSPs for Views Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Deployed an AWS cloud server for Python using uptodate and consistent interface with Boto3 Created methods get post put delete to make requests to the API server and tested Restful API using postman Designed and Developed SQL database structure with Django Framework using agile methodology Designed and developed a responsive UI page using Bootstrap Analysis Design Implementation Testing and Maintenance Developed project using Django Oracle SQL Angular 2 JavaScript HTML5 CSS3 and Bootstrap Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Extensive knowledge of building single page applications SPA using HTML CSS JavaScript Angular Bootstrap with Python development Education Master of Science in Computer Science North Western Polytechnic University 2016 Bachelor of Engineering in Electronics and Telecommunication Pune University Pune Maharashtra 2011",
    "extracted_keywords": [
        "PYTHON",
        "DEVELOPER",
        "lPYTHONspan",
        "span",
        "lDEVELOPERspan",
        "PYTHON",
        "DEVELOPER",
        "VISA",
        "RTG",
        "years",
        "experience",
        "IT",
        "Industry",
        "hands",
        "analysis",
        "design",
        "development",
        "enterprise",
        "applications",
        "knowledge",
        "softwares",
        "demonstrations",
        "understanding",
        "skill",
        "software",
        "systems",
        "analysis",
        "testing",
        "database",
        "development",
        "modules",
        "solutions",
        "customers",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "Sublime",
        "text",
        "Spyder",
        "PyCharm",
        "Eclipse",
        "Emacs",
        "experience",
        "Python",
        "applications",
        "technologies",
        "Proficient",
        "Web",
        "Services",
        "SOAP",
        "Python",
        "XML",
        "JSON",
        "Data",
        "solutions",
        "platforms",
        "data",
        "analytics",
        "experience",
        "data",
        "Bigdata",
        "Integration",
        "Analytics",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "cass",
        "Hands",
        "experience",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Expertise",
        "SDLC",
        "models",
        "methods",
        "Scrum",
        "Extreme",
        "Programming",
        "Ticketing",
        "systems",
        "JIRA",
        "TestDriven",
        "Development",
        "TDD",
        "applications",
        "Python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "jQuery",
        "MVC3",
        "Bootstrap",
        "RUBY",
        "AJAX",
        "Expertise",
        "databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "knowledge",
        "NoSQL",
        "database",
        "MongoDB",
        "Experience",
        "core",
        "cache",
        "abstraction",
        "Jasmine",
        "Redis",
        "cache",
        "server",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Web2Py",
        "Pyramid",
        "Excellent",
        "experience",
        "python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "Red",
        "Hat",
        "Linux",
        "Well",
        "Version",
        "control",
        "systems",
        "Git",
        "SVNand",
        "CVS",
        "deployment",
        "tools",
        "Google",
        "Cloud",
        "Jenkins",
        "Ansible",
        "Pylint",
        "cpp",
        "Check",
        "Coverity",
        "Cloud",
        "solutions",
        "AWS",
        "EC2",
        "EMR",
        "S3",
        "Cloudwatch",
        "Lambda",
        "Cloudtrail",
        "SNS",
        "SES",
        "EBS",
        "CLI",
        "VPC",
        "ELB",
        "IAM",
        "Redshift",
        "RDS",
        "Root53",
        "Google",
        "Cloud",
        "Microsoft",
        "Azure",
        "Experience",
        "project",
        "deployment",
        "Google",
        "CloudJenkins",
        "Elasticsearch",
        "web",
        "Services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Experience",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "frameworks",
        "Django",
        "WSGI",
        "Experience",
        "UNIX",
        "Shell",
        "Scripts",
        "batch",
        "programs",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "Serializable",
        "strings",
        "knowledge",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "Proficient",
        "SQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Cursor",
        "Packages",
        "DDL",
        "DML",
        "operations",
        "MySQL",
        "PostgreSQL",
        "database",
        "Modified",
        "Stored",
        "Procedures",
        "TSQL",
        "Queries",
        "query",
        "execution",
        "process",
        "knowledge",
        "REST",
        "API",
        "development",
        "idea",
        "tools",
        "Bugzilla",
        "JIRA",
        "Good",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Python",
        "web",
        "application",
        "frameworks",
        "understanding",
        "protocolstechnologies",
        "HTTP",
        "LDAP",
        "JDBC",
        "SSL",
        "ServletJSP",
        "SQL",
        "HTML",
        "XML",
        "experience",
        "Object",
        "Oriented",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Knowledge",
        "Python",
        "REST",
        "API",
        "Frame",
        "work",
        "Django",
        "Flask",
        "Good",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "DB2",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "Couchbase",
        "Kubernetes",
        "Mongo",
        "DB",
        "Orient",
        "DBF",
        "net",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Data",
        "analytics",
        "data",
        "Excel",
        "data",
        "operating",
        "systems",
        "Windows",
        "UNIX",
        "LINUX",
        "Shell",
        "Scripting",
        "UNIX",
        "Experience",
        "applications",
        "Application",
        "Servers",
        "TOMCAT",
        "Web",
        "Logic",
        "Oracle",
        "Application",
        "Server",
        "Experience",
        "SQL",
        "Alchemy",
        "databases",
        "Mongo",
        "DB",
        "Cassandra",
        "Oracle",
        "MySQL",
        "Familiarity",
        "development",
        "practices",
        "code",
        "reviews",
        "unit",
        "testing",
        "system",
        "integration",
        "testing",
        "SIT",
        "user",
        "acceptance",
        "testing",
        "UAT",
        "Proficient",
        "editors",
        "Eclipse",
        "Visual",
        "Studio",
        "Code",
        "PyCharm",
        "Py",
        "Scripter",
        "Notepad",
        "Sublime",
        "Text",
        "applications",
        "Expertise",
        "Unit",
        "testing",
        "Pyunit",
        "framework",
        "Test",
        "Automation",
        "Robot",
        "Framework",
        "Error",
        "Logging",
        "Sentry",
        "Work",
        "Experience",
        "PYTHON",
        "DEVELOPER",
        "VISA",
        "Foster",
        "City",
        "CA",
        "February",
        "Present",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "application",
        "Python",
        "Spring",
        "IOCInversion",
        "Control",
        "Django",
        "Framework",
        "Apache",
        "spark",
        "security",
        "Python",
        "Spring",
        "Security",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Spark",
        "Framework",
        "Java",
        "Web",
        "Frame",
        "work",
        "deal",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "S3",
        "Create",
        "Jenkins",
        "pipeline",
        "jobs",
        "Puppet",
        "release",
        "process",
        "module",
        "deployment",
        "Kanban",
        "methodology",
        "Puppet",
        "development",
        "GIT",
        "Puppet",
        "integrity",
        "applications",
        "Production",
        "Development",
        "Test",
        "Release",
        "Branches",
        "Restful",
        "API",
        "web",
        "services",
        "Node",
        "JS",
        "Express",
        "JS",
        "complement",
        "Express",
        "Angular",
        "JS",
        "Nodejs",
        "Mongo",
        "DB",
        "assessments",
        "Mongo",
        "DB",
        "concern",
        "loss",
        "data",
        "system",
        "failures",
        "read",
        "preferences",
        "Mongo",
        "DB",
        "replica",
        "Meteor",
        "framework",
        "Single",
        "Page",
        "Application",
        "development",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "pie",
        "Web",
        "Framework",
        "Git",
        "Deployed",
        "Microservices",
        "cloud",
        "foundry",
        "domains",
        "Performed",
        "routing",
        "Nodejs",
        "form",
        "data",
        "Mongo",
        "DB",
        "database",
        "network",
        "mapping",
        "microservices",
        "python",
        "Nmap",
        "kubernetes",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "JSON",
        "template",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "spark",
        "application",
        "Spark",
        "Context",
        "SparkSQL",
        "Data",
        "Frame",
        "Pair",
        "RDDs",
        "Wrote",
        "Restful",
        "web",
        "services",
        "Mongo",
        "DB",
        "CRUD",
        "operations",
        "Mongo",
        "DB",
        "Restful",
        "web",
        "API",
        "services",
        "Managed",
        "Linux",
        "servers",
        "AWS",
        "EC2",
        "chef",
        "server",
        "Apache",
        "Spark",
        "jobs",
        "Scala",
        "test",
        "environment",
        "data",
        "processing",
        "Spark",
        "SQL",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Understanding",
        "configuration",
        "Cloud",
        "Trail",
        "cloudsecurity",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systemsIAM",
        "Experience",
        "Installing",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "mo",
        "CICD",
        "Process",
        "Configured",
        "Jenkins",
        "CI",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Done",
        "POC",
        "Kafka",
        "Spark",
        "Streaming",
        "data",
        "application",
        "analytics",
        "application",
        "Wrote",
        "Kafka",
        "producers",
        "data",
        "rest",
        "APIs",
        "Kafka",
        "topics",
        "handful",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "data",
        "Hadoop",
        "Kafka",
        "Oozie",
        "job",
        "Experience",
        "Schedule",
        "Recurring",
        "Hadoop",
        "Jobs",
        "Apache",
        "Oozie",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "wx",
        "Python",
        "NumPy",
        "Twisted",
        "matplotlib",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Python",
        "Created",
        "Chef",
        "roles",
        "Applications",
        "services",
        "environments",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "SQL",
        "Alchemy",
        "library",
        "access",
        "SQL",
        "expertise",
        "performance",
        "testing",
        "applications",
        "Mongo",
        "DB",
        "Studio3",
        "T",
        "OPS",
        "Manager",
        "Hibernate",
        "Spring",
        "Integration",
        "data",
        "abstraction",
        "database",
        "Mongo",
        "DB",
        "Worked",
        "Element",
        "tree",
        "XML",
        "API",
        "python",
        "XML",
        "documents",
        "data",
        "database",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "JS",
        "development",
        "framework",
        "singlepage",
        "application",
        "PYTHON",
        "DEVELOPER",
        "WELLS",
        "San",
        "Francisco",
        "CA",
        "April",
        "February",
        "Python",
        "libraries",
        "Python",
        "NumPy",
        "matplotlib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "system",
        "data",
        "portal",
        "Kafka",
        "spark",
        "Developed",
        "Chef",
        "Cookbooks",
        "Apache",
        "Tomcat",
        "Jenkins",
        "deployment",
        "automation",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "CloudWorked",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "Numerical",
        "analysis",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "installation",
        "Docker",
        "Docker",
        "toolbox",
        "GIT",
        "version",
        "control",
        "project",
        "AWS",
        "APIs",
        "server",
        "parse",
        "output",
        "report",
        "files",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Jenkins",
        "testing",
        "integration",
        "deployment",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "project",
        "JIRA",
        "Agile",
        "Confluent",
        "Kafka",
        "RD",
        "line",
        "installation",
        "HDFS",
        "connector",
        "Hive",
        "connectors",
        "Performed",
        "Disk",
        "Space",
        "management",
        "users",
        "groups",
        "cluster",
        "Storm",
        "Kafka",
        "Services",
        "data",
        "HBase",
        "Hive",
        "tables",
        "Chef",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "Spark",
        "Streaming",
        "APIs",
        "transformations",
        "actions",
        "fly",
        "Installed",
        "configuration",
        "tool",
        "Chef",
        "Serverworkstation",
        "nodes",
        "CLI",
        "tools",
        "AWS",
        "nodes",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "UML",
        "Rational",
        "Rose",
        "Usecase",
        "Class",
        "Object",
        "diagrams",
        "techniques",
        "Spark",
        "Streaming",
        "streaming",
        "data",
        "batches",
        "input",
        "Spark",
        "engine",
        "batch",
        "experience",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Urllib",
        "Pandas",
        "data",
        "frame",
        "network",
        "database",
        "connectivity",
        "development",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "Jira",
        "source",
        "code",
        "management",
        "tools",
        "Git",
        "GitHub",
        "Stash",
        "team",
        "collaboration",
        "software",
        "SAAS",
        "tool",
        "Confluence",
        "data",
        "Technologies",
        "Hadoop",
        "Hive",
        "Pig",
        "Spark",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Python",
        "packages",
        "SQL",
        "Alchemy",
        "Pickle",
        "PySide",
        "PySpark",
        "PyMongo",
        "PyTable",
        "Responsible",
        "testing",
        "web",
        "application",
        "databases",
        "Pandas",
        "data",
        "frames",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "project",
        "Amazon",
        "web",
        "services",
        "AWS",
        "amazon",
        "bean",
        "stalk",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "pie",
        "Web",
        "Framework",
        "Git",
        "PYTHON",
        "DEVELOPER",
        "BANK",
        "AMERICA",
        "Charlotte",
        "NC",
        "October",
        "March",
        "methodology",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "project",
        "JIRA",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "CSSCSS3",
        "JavaScript",
        "serverside",
        "technologies",
        "databases",
        "development",
        "Web",
        "applications",
        "JavaScript",
        "MVC",
        "Framework",
        "AngularJS",
        "internet",
        "web",
        "application",
        "page",
        "application",
        "LinuxUnix",
        "admin",
        "team",
        "configure",
        "initialize",
        "Cassandra",
        "cluster",
        "applications",
        "RESTFUL",
        "architecture",
        "Nodejs",
        "PHP",
        "languages",
        "Wrote",
        "unit",
        "test",
        "cases",
        "suits",
        "Pytest",
        "PyUnit",
        "SOAP",
        "messages",
        "services",
        "module",
        "CDC",
        "change",
        "data",
        "capture",
        "python",
        "AWS",
        "GLUE",
        "PySpark",
        "library",
        "Installed",
        "Kerberos",
        "Kafka",
        "cluster",
        "encryption",
        "Dev",
        "Prod",
        "Kafka",
        "ACLs",
        "Test",
        "Cases",
        "Test",
        "Scripts",
        "selenium",
        "web",
        "driver",
        "Java",
        "Cucumber",
        "framework",
        "build",
        "management",
        "tool",
        "Maven",
        "datasets",
        "TensorFlow",
        "SQL",
        "Alchemy",
        "process",
        "data",
        "JSF",
        "Framework",
        "EJB",
        "Hibernate",
        "codes",
        "PLSQL",
        "packages",
        "Certain",
        "Specialized",
        "functions",
        "enhancement",
        "Oracle",
        "application",
        "log4j",
        "steps",
        "script",
        "errors",
        "Spark",
        "Scala",
        "testing",
        "processing",
        "data",
        "data",
        "sources",
        "Red",
        "Hat",
        "Linux",
        "systems",
        "configuration",
        "component",
        "Red",
        "Hat",
        "SQL",
        "scripts",
        "solutions",
        "PySpark",
        "Kubernetes",
        "Docker",
        "runtime",
        "environment",
        "CICD",
        "system",
        "test",
        "Developed",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "interaction",
        "MySQL",
        "Created",
        "Database",
        "Influx",
        "DB",
        "Interface",
        "Kafka",
        "measurements",
        "Databases",
        "Developed",
        "Spark",
        "Streaming",
        "script",
        "topics",
        "source",
        "Kafka",
        "processing",
        "Kafka",
        "Backup",
        "Index",
        "Log4j",
        "appender",
        "minimized",
        "logs",
        "Pointed",
        "server",
        "logs",
        "NAS",
        "Storage",
        "migration",
        "code",
        "repository",
        "ClearCase",
        "multisite",
        "TFS",
        "Eclipse",
        "CVS",
        "repository",
        "SVN",
        "repository",
        "servers",
        "configuration",
        "tool",
        "Chef",
        "Serverworkstation",
        "nodes",
        "CLI",
        "tools",
        "AWS",
        "nodes",
        "Bottle",
        "Pyramid",
        "Cherrypie",
        "framework",
        "REST",
        "API",
        "MongoDB",
        "end",
        "database",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Python",
        "Scala",
        "application",
        "level",
        "code",
        "Web",
        "APIs",
        "web",
        "services",
        "JSON",
        "Perforce",
        "version",
        "control",
        "system",
        "Python",
        "tools",
        "studio",
        "PTVS",
        "IDE",
        "AWS",
        "EC2",
        "Container",
        "Service",
        "plugin",
        "Jenkins",
        "Jenkins",
        "configuration",
        "slaves",
        "AWSRDS",
        "Oracle",
        "DynamoDB",
        "connect",
        "API",
        "services",
        "Reactjs",
        "Nodejs",
        "RabbitMQ",
        "architectures",
        "Experience",
        "Linux",
        "Unix",
        "Bash",
        "scripting",
        "PEP",
        "Guidelines",
        "Py",
        "Query",
        "http",
        "templates",
        "web",
        "scrapping",
        "applications",
        "custom",
        "columns",
        "data",
        "Hadoop",
        "lake",
        "PyTable",
        "PySpark",
        "PyMongo",
        "Pickle",
        "PySide",
        "PYTHON",
        "DEVELOPER",
        "DELL",
        "Mumbai",
        "Maharashtra",
        "May",
        "February",
        "representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Performed",
        "Inheritance",
        "Object",
        "Relational",
        "Mappings",
        "tables",
        "data",
        "Hibernate",
        "ORM",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "website",
        "interface",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "RESTAPI",
        "Developed",
        "Action",
        "classes",
        "Action",
        "Forms",
        "Struts",
        "Configuration",
        "file",
        "UI",
        "actions",
        "JSPs",
        "Views",
        "projects",
        "web",
        "page",
        "Single",
        "Page",
        "Application",
        "SPA",
        "AngularJS",
        "JavaScript",
        "API",
        "delivery",
        "driver",
        "application",
        "AWS",
        "cloud",
        "server",
        "Python",
        "interface",
        "methods",
        "post",
        "requests",
        "API",
        "server",
        "Restful",
        "API",
        "postman",
        "SQL",
        "database",
        "structure",
        "Django",
        "Framework",
        "methodology",
        "UI",
        "page",
        "Bootstrap",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Maintenance",
        "project",
        "Django",
        "Oracle",
        "SQL",
        "Angular",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "knowledge",
        "page",
        "applications",
        "SPA",
        "HTML",
        "CSS",
        "JavaScript",
        "Angular",
        "Bootstrap",
        "Python",
        "development",
        "Education",
        "Master",
        "Science",
        "Computer",
        "Science",
        "North",
        "Western",
        "Polytechnic",
        "University",
        "Bachelor",
        "Engineering",
        "Electronics",
        "Telecommunication",
        "Pune",
        "University",
        "Pune",
        "Maharashtra"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:58:06.521048",
    "resume_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER VISA RTG Around 6 years of professional experience in IT Industry with strong hands on analysis design and development of enterprise applications Equipped with the knowledge of various softwares organizing technical demonstrations with sound understanding and skill of creating new software systems designing analysis testing database development and coding for modules while structuring customized solutions to meet customers specific needs Strong experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs Sublime text Spyder PyCharm Eclipse Emacs Good experience in Python in creating scalable and robust applications along with other technologies Proficient in developing Web Services SOAP RESTful in Python using XML JSON Driven to architect Big Data solutions on multiple platforms using data analytics Strong experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop cass Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Expertise in practicing the SDLC models agile methods with Scrum Extreme Programming Ticketing systems using JIRA and TestDriven Development TDD Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript jQuery MVC3 Bootstrap RESTful RUBY and AJAX Expertise in working with different databases like Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Experience in implementing core cache and abstraction with Jasmine and Redis cache server Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Flask Web2Py and Pyramid Excellent experience with python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux Well versed with Version control systems such as Git SVNand CVS Worked on Several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Experienced in implementing Cloud solutions in AWS EC2 EMR S3 Cloudwatch Lambda Cloudtrail SNS SES EBS CLI VPC ELB IAM Redshift RDS Root53 Google Cloud Microsoft Azure Experience in project deployment using Google CloudJenkins Elasticsearch and using web Services like Amazon Web Services AWS Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI Experience in using UNIX Shell Scripts for automating batch programs Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings Good knowledge on front end frame works like CSS Bootstrap Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Good experience in developing web applications implementing Model View Control architecture using Django Flask and Pyramid Python web application frameworks Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge about setting up Python REST API Frame work using Django and Flask Good at writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL PostgreSQL DB2 Having good knowledge in using NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Worked on various operating systems like Windows UNIX and LINUX Experienced in Shell Scripting and UNIX commands Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in working with SQL Alchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Familiarity with development best practices such as code reviews unit testing system integration testing SIT and user acceptance testing UAT Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Expertise in performing Unit testing using Pyunit framework and Test Automation used Robot Framework along with Error Logging using Sentry Work Experience PYTHON DEVELOPER VISA Foster City CA February 2018 to Present Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed front end and backend of the application using Python on Django Web Framework Implemented the application using Python Spring IOCInversion of Control Django Framework and Apache spark handled the security using Python Spring Security Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Worked on implementing Spark Framework a Java based Web Frame work Worked and learned a great deal from AWS cloud services like EC2 S3 Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development also involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches Build Restful API web services using Node JS and Express JS and used a Full complement of Express Angular JS Nodejs and Mongo DB to store and present assessments Worked on Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Involved in developing the AngularJS Meteor framework for the Single Page Application development Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Performed Restful routing using Nodejs which submits my form data to the Mongo DB database Developed existing network mapping microservices using python Nmap and deployed it on kubernetes Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python also run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization deployed the project into Jenkins using GIT version control system Developed spark application working with Spark Context SparkSQL Data Frame Pair RDDs Wrote Restful web services to communicate with Mongo DB and performed CRUD operations on Mongo DB using Restful web API services Managed Linux and windows virtual servers on AWS EC2 using opensource chef server Worked on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for querying Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through mo as a CICD Process Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs to Kafka topics and handful in use of version controlling systems like GIT and SVN Worked on importing the realtime data to Hadoop using Kafka and implemented the Oozie job Experience Schedule Recurring Hadoop Jobs with Apache Oozie Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Utilized Python libraries wx Python NumPy Twisted and matplotlib and designing mobile search application system requirements and coded backend and frontend in Python Created Chef roles for different Applications and services and to spin in different environments Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Implemented SQL Alchemy which is a python library for complete access over SQL Having expertise on performance testing of the applications on Mongo DB using Studio3T and OPS Manager Developed Hibernate with Spring Integration as the data abstraction to interact with the database of Mongo DB Worked on Element tree XML API in python to parse XML documents and load the data in database Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs as well used Angular JS as the development framework to build a singlepage application PYTHON DEVELOPER WELLS FARGO San Francisco CA April 2016 to February 2018 Worked on several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed and designed system to collect data from multiple portal using Kafka and then process it using spark Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon CloudWorked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Worked on installation of Docker using Docker toolbox used GIT for the version control and deployed project into AWS Created RESTful APIs calls with server parse output report of excel files wrote scripts in Python for extracting data from HTML file Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment worked on creation of custom Docker container images tagging and pushing the images Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster also used Storm and Kafka Services to push data to HBase and Hive tables Used Chef deployed and configured for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Used Spark Streaming APIs to perform transformations and actions on the fly for building common Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Spark Streaming to divide streaming data into batches as an input to Spark engine for batch processing Good experience using various Python libraries including Beautiful Soup NumPy SciPy Matplotlib pythontwitter Urllib Pandas data frame network for database connectivity to speed up development Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Worked on bugtracking Jira source code management tools Git GitHub Stash and team collaboration software SAAS tool Confluence Worked on big data Technologies particularly Hadoop Hive Pig as well as Spark also installed and maintained web servers Tomcat and Apache HTTP in UNIX Worked on various Python packages such as SQL Alchemy Pickle PySide PySpark PyMongo PyTable Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git PYTHON DEVELOPER BANK OF AMERICA Charlotte NC October 2015 to March 2016 Used Agile methodology for rewriting existing PythonDjango modules to deliver certain format of data and responsible for debugging the project monitored on JIRA Designed front end using UI HTML Bootstrap CSSCSS3 and JavaScript with serverside technologies including databases for development of Web applications Extensively used JavaScript MVC Framework AngularJS to make rich internet web application for a Single page application Worked with the LinuxUnix admin team to set up configure initialize and troubleshoot a Cassandra cluster Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Wrote unit test cases individually and in suits with Pytest and PyUnit on SOAP messages stored by creating SOAP services Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using PySpark library and python Installed Kerberos secured Kafka cluster with no encryption on Dev and Prod Also set up Kafka ACLs into it Developed Test Cases and Test Scripts in selenium web driver with Java using Cucumber framework with build management tool Maven Accessed public datasets and use TensorFlow and SQL Alchemy to load process clean and transform data Worked on JSF Framework integrated with EJB 30 as well as Hibernate 4 Modify existing codes and developed PLSQL packages to perform Certain Specialized functions enhancement on Oracle application Used log4j for logging automated steps and script errors Implemented Spark using Scala for faster testing and processing of data responsible to manage data from different sources Installed Red Hat based Linux systems and familiar with specific configuration component of Red Hat Analyzed the SQL scripts and designed solutions to implement using PySpark utilized Kubernetes and Docker for the runtime environment of the CICD system to build and test deploy Developed serverbased web traffic statistical analysis tool using Flask Pandas and tested it in interaction with MySQL Created Database on Influx DB also worked on Interface created for Kafka also checked the measurements on Databases Developed Spark Streaming script to consume topics from distributed messaging source Kafka for realtime processing Worked on Kafka Backup Index Log4j appender minimized logs and Pointed ambari server logs to NAS Storage Worked with the migration of existing code repository from ClearCase multisite to TFS and used Eclipse to connect to central CVS repository and SVN repository servers Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Bottle Pyramid and Cherrypie framework with REST API and MongoDB as back end database Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Involved in writing application level code to interact with Web APIs web services using JSON Used Perforce version control system and Python tools for visual studio PTVS IDE Worked with AWS EC2 Container Service plugin in Jenkins which automates Jenkins masterslave configuration by creating temporary slaves Integrated AWSRDS Oracle to AWSHive using DynamoDB and MariaDB with direct connect Developed API services in Reactjs Nodejs while leveraging RabbitMQ for distributed architectures Experience in Linux and Unix Bash scripting and following PEP Guidelines Used Py Query to modify pure http templates that can be used for web scrapping or for theming applications Created custom columns while ingesting data into Hadoop lake using PyTable PySpark PyMongo Pickle and PySide PYTHON DEVELOPER DELL Mumbai Maharashtra May 2013 to February 2015 Done the representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Performed Inheritance based Object Relational Mappings in tables to simplify the data using Hibernate ORM Developed views and templates with Django view controller and template to create a userfriendly website interface Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Developed Action classes Action Forms and Struts Configuration file to handle required UI actions JSPs for Views Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Deployed an AWS cloud server for Python using uptodate and consistent interface with Boto3 Created methods get post put delete to make requests to the API server and tested Restful API using postman Designed and Developed SQL database structure with Django Framework using agile methodology Designed and developed a responsive UI page using Bootstrap Analysis Design Implementation Testing and Maintenance Developed project using Django Oracle SQL Angular 2 JavaScript HTML5 CSS3 and Bootstrap Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Extensive knowledge of building single page applications SPA using HTML CSS JavaScript Angular Bootstrap with Python development Education Master of Science in Computer Science North Western Polytechnic University 2016 Bachelor of Engineering in Electronics and Telecommunication Pune University Pune Maharashtra 2011",
    "unique_id": "adf8be28-933a-412e-9711-96b80a1e9c6e"
}