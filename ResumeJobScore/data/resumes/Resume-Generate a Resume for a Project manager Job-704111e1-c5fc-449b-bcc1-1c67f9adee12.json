{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer TD Bank Manhattan NY Around 7 years of experience as a WebApplication Developer and coding with analytical programming using Python Django C Experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience object oriented programming OOP concepts using Python Django and Linux Experienced in developing webbased applications using Python Django PHP C XML CSS 5 HTML DHTML JavaScript and Jquery Experienced in installing configuring modifying testing and deploying applications with Apache Handson experience in Unix and Linux Kernals Proficient in Front end development experience using HTML XML CSS 5 JQuery JSON and Javascript CSS 5 Bootstrap Have very good experience in developing Test Frameworks and experience on working with Django framework Experience in AWS services such as EC2 ELB AutoScaling EC2 Container Service S3 IAM VPC RDS Cloudwatch Lambda EMR AWS Workspaces Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Good experience in Python Django Zope Pyramid Framework Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Transformed the manual release procedure for microservices to automation build on JenkinsHudson by working with multiple functional teams Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Expertize in designing developing middleware components for software in CC using STL multithreading data structures and design patterns Experience in configuration management tools such as Ansible Chef and Puppet Good understanding of Python best Practices PEP8 Good knowledge of NET Framework features including Namespace Inheritance and Delegates Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Extensively used UNIX shell Scripts for automating batch programs Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL database Expertise in client scripting language and server side scripting languages like JavaScript JQuery JSON DOJO bootstrap Nodejs Angularjs backbonejs Requirejs Experienced in MVW frameworks like FlaskDjango Angular JS Java Script JQuery and Nodejs Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Worked on Celery Task queue and service broker using RabbitMQ Experience with Jsp Servlets Web Services SOAP REST and Tomcat Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Authorized to work in the US for any employer Work Experience Sr Python Developer TD Bank Cherry Hill NJ January 2016 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed Business Logic using Python on Django Web Framework Worked mainly on Core Java C STL data structures UNIX multithreading Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used Python based GUI components for the front end functionality such as selection criteria created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and linux server Responsible for specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boto fabric and AWS Cloud Formation Templates Used Python to extract weekly hotel availability information from XML files Used WebServices to get travel destination data and rates Participated in requirement gathering and worked closely with the architect in designing and modeling Performed Design and Code reviews and used GITHub for version control Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Used python modules such as requests urllib urllib2 for web crawling Involved in writing stored procedures designed and developed data management system using MySQL Interfacing with supervisors systems administrators and production to ensure production deadlines are met Python Developer Charles Schwab Corporation San Francisco CA May 2014 to December 2015 Responsibilities Write scripts using python modules and its libraries to develop programs that improve processing of access requests Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Installed and configured Apache web servers for directing API calls to different microservices and other applications Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Developed and maintained web services in Jython using RPyC module to process trade data from legacy applications Developed tools using Python Shell scripting XML to automate some of the menial tasks Worked extensively with Bootstrap Java script and jQuery to optimize the user experience Handled all the client side validation using JavaScript Created a custom CMS built using Django AWSAmazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Implemented concept of Dependency Acyclic Graph in existing Deal Model within Python classes for creating dependency over various deals objects across the Banks systems Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Proficient in developing complex SQL Queries Stored Procedures Functional Packages along with performing DDL and DML operations on Databases Scalable databasedriven web application development using a variety of frameworks like ASPNET on C Flask on Python and PHP Developed entire frontend and backend modules using Python on Django Web Framework Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Jefferies Group Jersey City NJ October 2012 to April 2014 Responsibilities Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Used HTMLCSS and Javascript for UI development and converted Visual basic Application to Python MSQL Created scripts for system administration and AWS using languages such as BASH and Python Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Deployment and testing of the applications Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used HTML CSS 5 JQuery JSON and Javascript for front end applications Managed our servers in development testing certification and production Used Linux profiler Valgrind for optimization of code Configured and setup Apache server web servers mail servers ftp server and SSL as well as basic network configuration Worked wResponsible for development and enhancements of all the modules of raildocs and have them running ith the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Implemented locking mechanisms using multi threading functionality Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used GIT for the version control Web Developer MT Bank Buffalo NY November 2010 to September 2012 Responsibilities Worked alone on the project from gather requirement developing the entire application with help from other analyst Wrote python routines to log into the websites and fetch data for selected options Worked on writing and as well as read data from csv and excel file formats Worked on a resulting reports of the application and Tableau reports Performed QA testing on the application Held meetings with client and worked all alone for the entire project with limited help from the client Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Resolved several hidden bugs caused by complicated multithreading issues such as race conditions caused by asynchronous events Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Built application logic using Python Used the Django Framework to develop the application Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Effectively communicated with the external vendors to resolve queries Skills AJAX 6 years CSS 6 years Database 6 years Django 6 years JavaScript 6 years Additional Information Skills Scripting Languages Python UNIX Linux Shell Scripting Bash C C JavaScript SQL Python Libraries Pandas Numpy UnitTest JSON CSV XLS Python Framework Django Pandas Pyramid Flask Ansible Bottle Salt Source version Control GITHUB SVN Emacs Database Sqlite3 MongoDB SQL Cassandra Oracle 8i Operating System Unix Microsoft Windows 7 XP Web Technologies AngularJS JavaScript AJAX HTML CSS 5 and XML Software Development Lifecycle Agile Methodology Scrum Framework",
    "entities": [
        "Jsp Servlets Web Services",
        "Unix",
        "GUI",
        "NET Framework",
        "HTML AJAX CSS",
        "Product Owners Python Developer Jefferies Group",
        "UNIX",
        "Agile Software Methodology",
        "Cherry Hill NJ",
        "the Django Framework",
        "XML",
        "SOAP",
        "JavaScript Implemented",
        "DHTML",
        "Control GITHUB SVN",
        "Shell",
        "csv",
        "CC",
        "Linux Kernals Proficient",
        "STL",
        "Python",
        "FlaskDjango",
        "Amazon AWS S3",
        "Developed",
        "Batch Job Scheduling Deployment",
        "Bash",
        "WebServices",
        "San Francisco",
        "Python Developer Charles Schwab Corporation",
        "Windows",
        "Test Driven DevelopmentTDD",
        "DDL",
        "API Integration Authorized",
        "Performed Design",
        "Linux",
        "Visual",
        "Analysis Proficient",
        "RDS",
        "SSL",
        "GIT",
        "Namespace Inheritance and Delegates Wrote",
        "ELB AutoScaling EC2 Container Service",
        "API",
        "Dependency Acyclic Graph",
        "US",
        "Task Schedulers",
        "CF Objects Wrote",
        "Created",
        "AWS",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Developed ColdFusion Components",
        "Python Object Oriented Design",
        "Cryptography EncryptionHashing Foundation Utilities",
        "SQL",
        "DML",
        "lPythonspan",
        "Python Django C Experience",
        "WebApplication Developer",
        "Work Experience Sr Python Developer TD Bank",
        "JenkinsHudson",
        "MVW",
        "Skills AJAX",
        "Chef for Cloud Automation Automated",
        "Python Django PHP C XML",
        "Pandas",
        "Datatables",
        "CRUD",
        "Agile Software Development",
        "JavaScript Created",
        "Jython",
        "Performed",
        "unittest2",
        "Scripts",
        "SQL Queries Stored Procedures Functional Packages",
        "Front",
        "Developer TD Bank",
        "Microsoft",
        "Grid Installed",
        "Utilized PyUnit",
        "SQL Queries Stored",
        "JavaScript Developed Business Logic",
        "CMS",
        "PHP Developed",
        "Python Used Selenium Library",
        "FPML Financial Products Markup Language",
        "jQuery",
        "Apache Handson",
        "HTML XML CSS",
        "ASPNET",
        "PHP LAMP Project Resolved",
        "MapReduce",
        "HTML CSS 5",
        "PHP",
        "Tableau",
        "BASH",
        "Nodejs Excellent",
        "Tomcat Created Python",
        "Web Developer MT Bank Buffalo NY"
    ],
    "experience": "Experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience object oriented programming OOP concepts using Python Django and Linux Experienced in developing webbased applications using Python Django PHP C XML CSS 5 HTML DHTML JavaScript and Jquery Experienced in installing configuring modifying testing and deploying applications with Apache Handson experience in Unix and Linux Kernals Proficient in Front end development experience using HTML XML CSS 5 JQuery JSON and Javascript CSS 5 Bootstrap Have very good experience in developing Test Frameworks and experience on working with Django framework Experience in AWS services such as EC2 ELB AutoScaling EC2 Container Service S3 IAM VPC RDS Cloudwatch Lambda EMR AWS Workspaces Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Good experience in Python Django Zope Pyramid Framework Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Transformed the manual release procedure for microservices to automation build on JenkinsHudson by working with multiple functional teams Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Expertize in designing developing middleware components for software in CC using STL multithreading data structures and design patterns Experience in configuration management tools such as Ansible Chef and Puppet Good understanding of Python best Practices PEP8 Good knowledge of NET Framework features including Namespace Inheritance and Delegates Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Extensively used UNIX shell Scripts for automating batch programs Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL database Expertise in client scripting language and server side scripting languages like JavaScript JQuery JSON DOJO bootstrap Nodejs Angularjs backbonejs Requirejs Experienced in MVW frameworks like FlaskDjango Angular JS Java Script JQuery and Nodejs Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Worked on Celery Task queue and service broker using RabbitMQ Experience with Jsp Servlets Web Services SOAP REST and Tomcat Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Authorized to work in the US for any employer Work Experience Sr Python Developer TD Bank Cherry Hill NJ January 2016 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed Business Logic using Python on Django Web Framework Worked mainly on Core Java C STL data structures UNIX multithreading Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used Python based GUI components for the front end functionality such as selection criteria created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and linux server Responsible for specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boto fabric and AWS Cloud Formation Templates Used Python to extract weekly hotel availability information from XML files Used WebServices to get travel destination data and rates Participated in requirement gathering and worked closely with the architect in designing and modeling Performed Design and Code reviews and used GITHub for version control Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Used python modules such as requests urllib urllib2 for web crawling Involved in writing stored procedures designed and developed data management system using MySQL Interfacing with supervisors systems administrators and production to ensure production deadlines are met Python Developer Charles Schwab Corporation San Francisco CA May 2014 to December 2015 Responsibilities Write scripts using python modules and its libraries to develop programs that improve processing of access requests Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Installed and configured Apache web servers for directing API calls to different microservices and other applications Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Developed and maintained web services in Jython using RPyC module to process trade data from legacy applications Developed tools using Python Shell scripting XML to automate some of the menial tasks Worked extensively with Bootstrap Java script and jQuery to optimize the user experience Handled all the client side validation using JavaScript Created a custom CMS built using Django AWSAmazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Implemented concept of Dependency Acyclic Graph in existing Deal Model within Python classes for creating dependency over various deals objects across the Banks systems Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Proficient in developing complex SQL Queries Stored Procedures Functional Packages along with performing DDL and DML operations on Databases Scalable databasedriven web application development using a variety of frameworks like ASPNET on C Flask on Python and PHP Developed entire frontend and backend modules using Python on Django Web Framework Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Jefferies Group Jersey City NJ October 2012 to April 2014 Responsibilities Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Used HTMLCSS and Javascript for UI development and converted Visual basic Application to Python MSQL Created scripts for system administration and AWS using languages such as BASH and Python Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Deployment and testing of the applications Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used HTML CSS 5 JQuery JSON and Javascript for front end applications Managed our servers in development testing certification and production Used Linux profiler Valgrind for optimization of code Configured and setup Apache server web servers mail servers ftp server and SSL as well as basic network configuration Worked wResponsible for development and enhancements of all the modules of raildocs and have them running ith the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Implemented locking mechanisms using multi threading functionality Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used GIT for the version control Web Developer MT Bank Buffalo NY November 2010 to September 2012 Responsibilities Worked alone on the project from gather requirement developing the entire application with help from other analyst Wrote python routines to log into the websites and fetch data for selected options Worked on writing and as well as read data from csv and excel file formats Worked on a resulting reports of the application and Tableau reports Performed QA testing on the application Held meetings with client and worked all alone for the entire project with limited help from the client Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Resolved several hidden bugs caused by complicated multithreading issues such as race conditions caused by asynchronous events Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Built application logic using Python Used the Django Framework to develop the application Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Effectively communicated with the external vendors to resolve queries Skills AJAX 6 years CSS 6 years Database 6 years Django 6 years JavaScript 6 years Additional Information Skills Scripting Languages Python UNIX Linux Shell Scripting Bash C C JavaScript SQL Python Libraries Pandas Numpy UnitTest JSON CSV XLS Python Framework Django Pandas Pyramid Flask Ansible Bottle Salt Source version Control GITHUB SVN Emacs Database Sqlite3 MongoDB SQL Cassandra Oracle 8i Operating System Unix Microsoft Windows 7 XP Web Technologies AngularJS JavaScript AJAX HTML CSS 5 and XML Software Development Lifecycle Agile Methodology Scrum Framework",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "TD",
        "Bank",
        "Manhattan",
        "NY",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "Python",
        "Django",
        "C",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "networkx",
        "urllib2",
        "MySQLdb",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "emacs",
        "Experience",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Django",
        "Linux",
        "applications",
        "Python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "Jquery",
        "testing",
        "applications",
        "Apache",
        "Handson",
        "experience",
        "Unix",
        "Linux",
        "Kernals",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "HTML",
        "XML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "CSS",
        "Bootstrap",
        "experience",
        "Test",
        "Frameworks",
        "experience",
        "Django",
        "framework",
        "Experience",
        "AWS",
        "services",
        "EC2",
        "ELB",
        "AutoScaling",
        "EC2",
        "Container",
        "Service",
        "S3",
        "IAM",
        "VPC",
        "RDS",
        "Cloudwatch",
        "Lambda",
        "EMR",
        "Workspaces",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "experience",
        "Python",
        "Django",
        "Zope",
        "Pyramid",
        "Framework",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "noSQL",
        "Cassandra",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Experience",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Angular",
        "JS",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Transformed",
        "release",
        "procedure",
        "microservices",
        "JenkinsHudson",
        "teams",
        "Knowledge",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Agile",
        "Waterfall",
        "Methodologies",
        "Expertize",
        "middleware",
        "components",
        "software",
        "CC",
        "STL",
        "data",
        "structures",
        "design",
        "patterns",
        "Experience",
        "configuration",
        "management",
        "tools",
        "Ansible",
        "Chef",
        "Puppet",
        "Good",
        "understanding",
        "Python",
        "Practices",
        "knowledge",
        "NET",
        "Framework",
        "features",
        "Namespace",
        "Inheritance",
        "Delegates",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "UNIX",
        "shell",
        "Scripts",
        "batch",
        "programs",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "database",
        "Expertise",
        "client",
        "scripting",
        "language",
        "server",
        "side",
        "scripting",
        "languages",
        "JavaScript",
        "JQuery",
        "DOJO",
        "bootstrap",
        "Nodejs",
        "Angularjs",
        "backbonejs",
        "Requirejs",
        "MVW",
        "frameworks",
        "FlaskDjango",
        "Angular",
        "JS",
        "Java",
        "Script",
        "JQuery",
        "Nodejs",
        "Excellent",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "RedHat",
        "Linux",
        "Celery",
        "Task",
        "queue",
        "service",
        "broker",
        "RabbitMQ",
        "Experience",
        "Jsp",
        "Servlets",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Tomcat",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "TD",
        "Bank",
        "Cherry",
        "Hill",
        "NJ",
        "January",
        "Present",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Core",
        "Java",
        "C",
        "STL",
        "data",
        "structures",
        "UNIX",
        "PyUnit",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Django",
        "Database",
        "APIs",
        "database",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Developed",
        "ColdFusion",
        "Components",
        "custom",
        "tags",
        "CF",
        "Objects",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "Django",
        "Framework",
        "application",
        "Django",
        "APIs",
        "database",
        "access",
        "UIS",
        "system",
        "design",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "approach",
        "modulespackagesutilities",
        "eg",
        "Cryptography",
        "EncryptionHashing",
        "Foundation",
        "Utilities",
        "Persona",
        "management",
        "errorexception",
        "management",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "ports",
        "source",
        "events",
        "python",
        "scripts",
        "linux",
        "server",
        "Responsible",
        "specialization",
        "areas",
        "Chef",
        "Cloud",
        "Automation",
        "cloud",
        "deployments",
        "chef",
        "Python",
        "boto",
        "fabric",
        "AWS",
        "Cloud",
        "Formation",
        "Templates",
        "Python",
        "hotel",
        "availability",
        "information",
        "XML",
        "files",
        "WebServices",
        "travel",
        "destination",
        "data",
        "rates",
        "requirement",
        "gathering",
        "architect",
        "Performed",
        "Design",
        "Code",
        "reviews",
        "GITHub",
        "version",
        "control",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "modules",
        "requests",
        "urllib2",
        "web",
        "procedures",
        "data",
        "management",
        "system",
        "MySQL",
        "supervisors",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "Developer",
        "Charles",
        "Schwab",
        "Corporation",
        "San",
        "Francisco",
        "CA",
        "May",
        "December",
        "Responsibilities",
        "scripts",
        "modules",
        "libraries",
        "programs",
        "processing",
        "access",
        "requests",
        "delivery",
        "code",
        "principles",
        "Test",
        "DevelopmentTDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "scale",
        "data",
        "processing",
        "trade",
        "position",
        "level",
        "information",
        "custom",
        "MapReduce",
        "engine",
        "Task",
        "Schedulers",
        "scheduling",
        "job",
        "priority",
        "data",
        "mapreduce",
        "functions",
        "Grid",
        "Installed",
        "Apache",
        "web",
        "servers",
        "API",
        "calls",
        "microservices",
        "applications",
        "time",
        "scripts",
        "sets",
        "data",
        "filtering",
        "data",
        "reports",
        "scale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "Developed",
        "web",
        "services",
        "Jython",
        "RPyC",
        "module",
        "trade",
        "data",
        "legacy",
        "applications",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Bootstrap",
        "Java",
        "script",
        "jQuery",
        "user",
        "experience",
        "client",
        "side",
        "validation",
        "JavaScript",
        "custom",
        "CMS",
        "Django",
        "AWSAmazon",
        "web",
        "service",
        "REST",
        "Json",
        "JavaScript",
        "JQuery",
        "AJAX",
        "components",
        "designer",
        "Photoshop",
        "images",
        "XHTMLCSS",
        "Python",
        "modules",
        "eg",
        "csv",
        "robotparser",
        "itertools",
        "pickle",
        "jinja2",
        "lxml",
        "development",
        "modules",
        "XML",
        "trade",
        "data",
        "trade",
        "objects",
        "trade",
        "data",
        "outbound",
        "FPML",
        "Financial",
        "Products",
        "Markup",
        "Language",
        "DTCC",
        "repositories",
        "concept",
        "Dependency",
        "Acyclic",
        "Graph",
        "Deal",
        "Model",
        "Python",
        "classes",
        "dependency",
        "deals",
        "Banks",
        "systems",
        "custom",
        "query",
        "script",
        "store",
        "index",
        "sets",
        "Object",
        "data",
        "MongoDb",
        "Python",
        "unit",
        "testing",
        "modules",
        "unit",
        "test",
        "custom",
        "frameworks",
        "Agile",
        "Software",
        "Development",
        "methodologies",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Pandas",
        "library",
        "Analysis",
        "Proficient",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Functional",
        "Packages",
        "DDL",
        "DML",
        "operations",
        "Databases",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "ASPNET",
        "C",
        "Flask",
        "Python",
        "PHP",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "methodologies",
        "scrum",
        "standups",
        "Kanban",
        "mode",
        "requirements",
        "Product",
        "Owners",
        "Python",
        "Developer",
        "Jefferies",
        "Group",
        "Jersey",
        "City",
        "NJ",
        "October",
        "April",
        "Responsibilities",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "BIG",
        "DATA",
        "JavaScript",
        "HTMLCSS",
        "Javascript",
        "UI",
        "development",
        "Application",
        "Python",
        "MSQL",
        "scripts",
        "system",
        "administration",
        "AWS",
        "languages",
        "BASH",
        "Python",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "data",
        "access",
        "SQL",
        "procedures",
        "Multithreading",
        "Concurrency",
        "Batch",
        "Job",
        "Scheduling",
        "Deployment",
        "testing",
        "applications",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "status",
        "jobs",
        "shell",
        "scripting",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "servers",
        "development",
        "testing",
        "certification",
        "production",
        "Linux",
        "profiler",
        "Valgrind",
        "optimization",
        "code",
        "Configured",
        "Apache",
        "server",
        "web",
        "servers",
        "mail",
        "servers",
        "server",
        "SSL",
        "network",
        "configuration",
        "wResponsible",
        "development",
        "enhancements",
        "modules",
        "raildocs",
        "ith",
        "design",
        "team",
        "project",
        "structure",
        "presentation",
        "layer",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "mechanisms",
        "threading",
        "functionality",
        "Python",
        "Perl",
        "CGI",
        "JQuery",
        "JavaScript",
        "JSON",
        "end",
        "Windows",
        "Linux",
        "server",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "monitoring",
        "practices",
        "search",
        "data",
        "exchange",
        "website",
        "XML",
        "JAVA",
        "Web",
        "Services",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "GIT",
        "version",
        "control",
        "Web",
        "Developer",
        "MT",
        "Bank",
        "Buffalo",
        "NY",
        "November",
        "September",
        "Responsibilities",
        "project",
        "gather",
        "requirement",
        "application",
        "help",
        "analyst",
        "Wrote",
        "python",
        "routines",
        "websites",
        "data",
        "options",
        "writing",
        "data",
        "csv",
        "file",
        "formats",
        "reports",
        "application",
        "Tableau",
        "Performed",
        "QA",
        "testing",
        "application",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "Install",
        "Configure",
        "Linux",
        "Apache",
        "Oracle",
        "8I",
        "PHP",
        "LAMP",
        "Project",
        "bugs",
        "issues",
        "race",
        "conditions",
        "events",
        "GUI",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "jQuery",
        "application",
        "logic",
        "Python",
        "Django",
        "Framework",
        "application",
        "Django",
        "APIs",
        "database",
        "access",
        "Python",
        "hotel",
        "availability",
        "information",
        "XML",
        "files",
        "requirement",
        "gathering",
        "architect",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "vendors",
        "queries",
        "Skills",
        "AJAX",
        "years",
        "CSS",
        "years",
        "Database",
        "years",
        "Django",
        "years",
        "JavaScript",
        "years",
        "Additional",
        "Information",
        "Skills",
        "Scripting",
        "Languages",
        "Python",
        "UNIX",
        "Linux",
        "Shell",
        "Scripting",
        "Bash",
        "C",
        "C",
        "JavaScript",
        "SQL",
        "Python",
        "Pandas",
        "Numpy",
        "UnitTest",
        "CSV",
        "XLS",
        "Python",
        "Framework",
        "Django",
        "Pandas",
        "Pyramid",
        "Flask",
        "Ansible",
        "Bottle",
        "Salt",
        "Source",
        "version",
        "Control",
        "GITHUB",
        "SVN",
        "Emacs",
        "Database",
        "Sqlite3",
        "MongoDB",
        "SQL",
        "Cassandra",
        "Oracle",
        "Operating",
        "System",
        "Unix",
        "Microsoft",
        "Windows",
        "XP",
        "Web",
        "Technologies",
        "JavaScript",
        "AJAX",
        "HTML",
        "CSS",
        "XML",
        "Software",
        "Development",
        "Lifecycle",
        "Agile",
        "Methodology",
        "Scrum",
        "Framework"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:48:59.225092",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer TD Bank Manhattan NY Around 7 years of experience as a WebApplication Developer and coding with analytical programming using Python Django C Experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experience object oriented programming OOP concepts using Python Django and Linux Experienced in developing webbased applications using Python Django PHP C XML CSS 5 HTML DHTML JavaScript and Jquery Experienced in installing configuring modifying testing and deploying applications with Apache Handson experience in Unix and Linux Kernals Proficient in Front end development experience using HTML XML CSS 5 JQuery JSON and Javascript CSS 5 Bootstrap Have very good experience in developing Test Frameworks and experience on working with Django framework Experience in AWS services such as EC2 ELB AutoScaling EC2 Container Service S3 IAM VPC RDS Cloudwatch Lambda EMR AWS Workspaces Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Good experience in Python Django Zope Pyramid Framework Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB Cassandra Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience in developing webbased applications using Python 2726 Django 1413 PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Transformed the manual release procedure for microservices to automation build on JenkinsHudson by working with multiple functional teams Knowledge of the Software Development Life Cycle SDLC Agile and Waterfall Methodologies Expertize in designing developing middleware components for software in CC using STL multithreading data structures and design patterns Experience in configuration management tools such as Ansible Chef and Puppet Good understanding of Python best Practices PEP8 Good knowledge of NET Framework features including Namespace Inheritance and Delegates Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Experienced in writing SQL Queries Stored procedures functions packages tables views triggers Extensively used UNIX shell Scripts for automating batch programs Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL database Expertise in client scripting language and server side scripting languages like JavaScript JQuery JSON DOJO bootstrap Nodejs Angularjs backbonejs Requirejs Experienced in MVW frameworks like FlaskDjango Angular JS Java Script JQuery and Nodejs Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Worked on Celery Task queue and service broker using RabbitMQ Experience with Jsp Servlets Web Services SOAP REST and Tomcat Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Authorized to work in the US for any employer Work Experience Sr Python Developer TD Bank Cherry Hill NJ January 2016 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed Business Logic using Python on Django Web Framework Worked mainly on Core Java C STL data structures UNIX multithreading Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used Python based GUI components for the front end functionality such as selection criteria created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and linux server Responsible for specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boto fabric and AWS Cloud Formation Templates Used Python to extract weekly hotel availability information from XML files Used WebServices to get travel destination data and rates Participated in requirement gathering and worked closely with the architect in designing and modeling Performed Design and Code reviews and used GITHub for version control Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Used python modules such as requests urllib urllib2 for web crawling Involved in writing stored procedures designed and developed data management system using MySQL Interfacing with supervisors systems administrators and production to ensure production deadlines are met Python Developer Charles Schwab Corporation San Francisco CA May 2014 to December 2015 Responsibilities Write scripts using python modules and its libraries to develop programs that improve processing of access requests Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented large scale data processing of trade and position level information by using a custom built MapReduce engine Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Installed and configured Apache web servers for directing API calls to different microservices and other applications Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Developed and maintained web services in Jython using RPyC module to process trade data from legacy applications Developed tools using Python Shell scripting XML to automate some of the menial tasks Worked extensively with Bootstrap Java script and jQuery to optimize the user experience Handled all the client side validation using JavaScript Created a custom CMS built using Django AWSAmazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Implemented concept of Dependency Acyclic Graph in existing Deal Model within Python classes for creating dependency over various deals objects across the Banks systems Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Proficient in developing complex SQL Queries Stored Procedures Functional Packages along with performing DDL and DML operations on Databases Scalable databasedriven web application development using a variety of frameworks like ASPNET on C Flask on Python and PHP Developed entire frontend and backend modules using Python on Django Web Framework Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Jefferies Group Jersey City NJ October 2012 to April 2014 Responsibilities Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS BIG DATA and JavaScript Used HTMLCSS and Javascript for UI development and converted Visual basic Application to Python MSQL Created scripts for system administration and AWS using languages such as BASH and Python Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we requests from multiple browser to web application Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Deployment and testing of the applications Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used HTML CSS 5 JQuery JSON and Javascript for front end applications Managed our servers in development testing certification and production Used Linux profiler Valgrind for optimization of code Configured and setup Apache server web servers mail servers ftp server and SSL as well as basic network configuration Worked wResponsible for development and enhancements of all the modules of raildocs and have them running ith the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Implemented locking mechanisms using multi threading functionality Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used GIT for the version control Web Developer MT Bank Buffalo NY November 2010 to September 2012 Responsibilities Worked alone on the project from gather requirement developing the entire application with help from other analyst Wrote python routines to log into the websites and fetch data for selected options Worked on writing and as well as read data from csv and excel file formats Worked on a resulting reports of the application and Tableau reports Performed QA testing on the application Held meetings with client and worked all alone for the entire project with limited help from the client Install and Configure Linux with Apache Oracle 8I and PHP LAMP Project Resolved several hidden bugs caused by complicated multithreading issues such as race conditions caused by asynchronous events Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Built application logic using Python Used the Django Framework to develop the application Used Django APIs for database access Used Python to extract weekly hotel availability information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL Effectively communicated with the external vendors to resolve queries Skills AJAX 6 years CSS 6 years Database 6 years Django 6 years JavaScript 6 years Additional Information Skills Scripting Languages Python UNIX Linux Shell Scripting Bash C C JavaScript SQL Python Libraries Pandas Numpy UnitTest JSON CSV XLS Python Framework Django Pandas Pyramid Flask Ansible Bottle Salt Source version Control GITHUB SVN Emacs Database Sqlite3 MongoDB SQL Cassandra Oracle 8i Operating System Unix Microsoft Windows 7 XP Web Technologies AngularJS JavaScript AJAX HTML CSS 5 and XML Software Development Lifecycle Agile Methodology Scrum Framework",
    "unique_id": "704111e1-c5fc-449b-bcc1-1c67f9adee12"
}