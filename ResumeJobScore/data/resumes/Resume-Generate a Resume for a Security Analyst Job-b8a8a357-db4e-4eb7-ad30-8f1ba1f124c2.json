{
    "clean_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Capital One Richmond VA Worked extensively with Java 8 Multithreading Transaction Management Exception Handling and Collections achieving features of functional languages thus ensuring the clarity for the other developers Experience in frameworks like Spring MVC and Struts MVC architecture interceptors action mappings and resource builders Worked with various frameworks in spring such as Spring IOC AOP Spring transaction Management Spring Data Spring JDBC Spring Batch Spring Boot Spring REST Spring JTA Spring IO Spring Cloud and Spring Security Spring security Site Minder Solid experience with various web MVC monolithic frameworks such as JSF Spring MVC and Struts Developed and deployed Micro Services based applications using Spring Boot and Spring Cloud Developed projects on SOA Service Oriented Architecture and Microservices Architecture with RESTful services JAXRS with Spring Boot Spring MVC and implemented SOAP JAXWS Apache CXF WADL WSDL Solid Experience with Java based ORM frameworks such as Hibernate Spring Data and Ibatis Proficient in using Spring Data JPA that helped in creating automatic Data Access Objects DAOs at the compile time Worked with spring cloud config Ribbon Hystrix and Zuul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage authentication monitoring services and routing Extensive experience in FrontEnd UI technologies like HTML5 CSS3 SASS LESS Bootstrap JS DOM in developing dynamic and responsive web pages Extensively used JavaScriptTypescript Ajax and JSON to build highly interactive web pages Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Developed numbers of Typescripts ES6 objects including Components ngModules Providers Services Interfaces and classes utilizing arrow function and optional types Experienced in Various Angular 2040 Backbone JS Knockout JS and Ext JS for rapid CRUD frontend app development and to achieve MVC design flow Proficient in usingHapiJS thatenabled to focus on writing reusable application logic with builtin support for input validation caching authentication and other essential facilities for building web and services applications Involved in developing a fullfledged REST API server with an open source NoSQL database that uses a documentoriented data model MongoDB and Mongoose connector Proficient in using RDBMS concepts and worked with Oracle 8i9i10g11i SQL server and good experience in writing stored procedures functions and triggers using PLSQL JDBC ODBC and JNDI in WebLogic server Excellent experience with Relational databases like MySQL Oracle SQL Server DB2 and No SQL Databases like CouchDB and Cassandra Good understanding of React JS and working with Redux Flux architecture Implemented security functionality for various projects using spring security and Site minder SSO Professional experience in Log4J for extensible logging debugging and error tracing Worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience with build tools like Ant Maven and Gradle for building applications to different environments Extensive hands on experience in setting up CDCI pipelines using Jenkins Bamboo and GoCD Experience in using DevOps tools like Puppet Chef and Docker Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Proficient in using clientside JavaScript build runners namely Bower Grunt Gulp and Web pack Expertise in integration testing automation framework like Selenium automation using Selenium WebDriver Selenium Grid Proficient in writing unit tests for JavaScript based Applications using Karma Jasmine Mocha and Chai testing frameworks Wrote comprehensive test cases and test plans using JUnit TestNG Spock and Mockito for Java based backend applications Designed and created highly scalable highly available fault tolerant highly secured distributed infrastructure IAAS using AWS EC2 instances S3 SQS EBS ELB API Gateway Route 53 CloudFront Auto Scaling Elastic Bean Stalk IAM ECS VPC Cloud Watch Cloud Trial RDS SNS SQS Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Authenticated Users accessing RESTful services using Oauth 20 OIDC and JWT Json Web token Experience in messaging queue services like JMS IBM MQ Rabbit MQ Active MQ and Apache Kafka Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Worked with Log Monitoring tools like Splunk and ELK Elastic Search Kibana and Logstash Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Proficient in applying design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Used various version control software such as SVN GIT CVS Big Bucket for maintaining code repositories Work Experience Full Stack Developer Capital One Richmond VA October 2018 to Present Description Capital One Financial Corporation isa bank holding company specializing in credit cards auto loans banking and savings accountsheadquartered in McLean Virginia Capital One is on a mission to change banking for good and to help people live their best lives Together we will build one of Americas leading informationbased technology companies Responsibilities I have been working as a full stack developer for developing the Application Program Interface APIs using the Java18 as a language and Spring as a Framework Actively involved in Analysis Design Development System Testing and User Acceptance Testing Followed Agile methodology in the Scrum Cycle model Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring micro services Designed and Implemented SPA single page application using Angular4 Module Component Template Metadata Data Binding Directives and Dependency Injection Created Typescript reusable components and services to consume REST APIs using componentbased architecture provided by Angular4 Creating generic service which have async capability and details description about observables Optimized the performance of application using Angular 4 Lazy Loading and ahead of time compilation Used ngrxstore container to manage the application state and ReducersActions to manipulate the state and ngrxeffects to load blogs to store in Angular 4 To allow fully encapsulate custom elements created custom elements HTML imports and Shadow Dom using Angular 4 and implemented Angular Router to enable navigation from one view to the next as user performs application task Implemented the security APIs with access token along with Api key for external consumers Extensive experience working with APIGEE policies of traffic Management Security and Mediations Involved in the implementation of JWT Token which is used across the enterprise for the authentication and authorization of the users who can access the program Configured Docker container service and build pipeline JenkinsCICD tool for continuous integrating and deploying application on servers Performed configuration deployment and support of cloud services including Amazon Web Services AWS Launch various AWS EC2 instance to deploy the application Performed queuing services for the cloud data processing for certain tasks like file upload data processing notice to the OnPremise application using the AWS service SQS AWS Queuing System Used Kubernetes as a portable extensible opensource platform for managing containerized workloads and services that facilitates both declarative configuration and automation Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Netflix OSS spring cloud Used Apache Kafka in cluster as messaging system between the API sand microservices and worked on Splunk search processing language SPL queries reports dashboard and logging using Log4J Implemented Relational Data Base like Oracle and PLSQL store procedures Implemented NoSQL database like Cassandra to store key values for data analytics which is used as a Database for project Worked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser For back end testing we used Junit and Mockito for unit testing and embedded databases like HSQL and function testing we use Spring MVC mock Implemented unit test cases using Karma and Jasmine on client side Environment Angular 4 Java 18 TypeScript J2EE XML JSF Hibernate SQLPLSQL Spring Boot Oracle10g XMI CSS Log4j Subversion JQuery JBoss Application Server Maven Eclipse RALLY UNIX Cassandra 30 AWS S3 EC2 ECS ECR IAM EBS JUnit TestNG Full Stack Developer AutoZone Inc Memphis TN October 2017 to August 2018 Description AutoZone Inc is an American retailer of automotive parts and accessories the largest in the United States AutoZone aims to develop a software application that reduces the gap between the time taken to purchase an item in store to an online purchase which accelerates the process of delivering an automotive part to the customer Thus achieves its primary goal customer satisfaction Responsibilities Developed use cases drawn sequence diagrams and class diagrams for the application and responsible for writing program and functional specifications Involved in total Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot and Apache CXF framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Experience in integrating the internal security model into new projects with Spring Batch Spring MicroServices and Spring Boot Pivotal Cloud Foundry and Netflix Eureka Designing and developed Micro Services using Mongo DB Express JS React JS and Node Js Used Redux Framework architecture like Reducers Containers Saga for integrating the data with ReactNative Application and created and used Reducers that received said Actions to modify Store State Tree Developed the Drag and Drop functionality using ReactDragabble Used ReactAutocomplete for creating google maps location search on the webpage Handled Http Requests using Axios which supports Promise API functionality native to JZ oracle Developed responsive applications using Bootstrapjs Requirejs and Nodejs D3js which allowed the same application to be optimized for both mobile and desktop resolutions Created and consumed RESTful API using Expressjs to provide centralized logic and reusable data retrieval build on top ofNodejs Implemented Nodejs router to make crossdomain requests to API services like GitHub API MongoDB Used Nodejs to run Grunt tasks and compile minify concat and build the project properly Worked with build tools like NPM Bower and Grunt Used continuous build using Jenkins and supported the Application for production deployment and postproduction Worked with the Pivotal Cloud Foundry services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Configured Docker container service and build pipeline Jenkins CICD tool for continuous integrating and deploying application on servers Implemented OAuth 20 Basic AUTH and API Key policies for API Security Designed Developed and maintained Postgre SQL Database architecture Developed back end interfaces using SQL packages stored procedures Functions Procedure Anonymous SQL programs Exception Handling in PLSQL programs Developed unit test cases using Mocha and Chai as unit test runner to test various React JS components Worked on the Splunk architecture and various components indexer forwarder search head deployment server Universal and Heavy forwarder Environment Reactjs Expressjs Nodejs Babel Redux Docker Jenkins Pivotal Cloud Foundry Mongo DB 32 Mongoose Connector Chai Mocha Log4j MAVEN 30 Senior Java Developer Charter Communication Long Beach CADuration October 2016 to September 2017 Description Client is one of the Internet service providers in Aurora The Spectrum Guide team oversees the infrastructure and configuration management for Charters largest application Our goal is to run applications through a repeatable reliable and secure process Spectrum is a rebranding initiative intended to create a consistent marketing message for the variety of residential and commercial offerings created when legacy Charter merged with Time Warner Cable TWC and Bright house Networks BHN The Spectrum TV Application merges several areas of IPbased development into one consumerfacing product and is the first step towards unifying the protocols software systems technologies and experiences from a customer perspective The Spectrum TV App STVA Program is comprised of multiple projects and supported by multiple delivery teams from across Charter Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using Agile methodology for building Service Oriented Architecture SOA Involved in developing user interface with HTML CSS3 SAAS JSON Created a custom responsive web application to replace a legacy lineof business web application using Angular JS Developing and designing SPA user interfaces in AngularJS Worked on Front end by using AngularJS JavaScript Used Angularjs for connecting the APIs using Angularjs http service Designed dynamic and multi browser compatible pages using AngularJS and JavaScript Utilized various JavaScript and jQuery libraries AJAX for form validation and other interactive features Used Spring MVC and Dependency Injection for handling presentation and business logic Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Integrated Spring DAO for data access using Hibernate and handled Transaction Management using the provided data Responsible for designing Hibernate mapping files based on business logic and Object relationships Used Hibernate as Persistence framework mapping the ORM objects to table using Hibernate annotations Developed and consumed SOAP Web Services using JAXWS and Apache CXF Used Jersey to consume HTTPbased RESTful Web Services Used Uniform Interface Concept of REST to build API Responsible to write the different service classes and utility API which will be used across the framework Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Configured Hibernate second level cache using EH Cache to reduce the number of hits to configuration table data Using second level cache EH Cache store entities between sessions scope in the session factory to redundant database calls Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Configured EC2 instance and Route53 for DNS hosting on AWS for dev environment and used AJAX framework for server communication and seamless user experience Worked on Proof of Concept for developing application using Node Js and Mongo DB Used Require Js to improve speed and quality of the code and Log4j for the logging the output to the files Created automation framework and test scripts using Selenium WebDriver for multiple platforms and browsers testing Environment JDK 18 SpringDI MVC Transaction Management AOP JSP JSPEL JSTL Servlets AWS Oracle SOA TOAD HTML CSS XML Angular JS ESB SOAP REST JAXRS Log4J Adobe Dreamweaver Junit Log4J Sun Jersey Quality Center AJAX Hibernate Associate Java Developer Easylink Chennai Tamil Nadu August 2015 to July 2016 Description EasyLinks team of professionals work together to achieve a single goal delivering to your bottom line EasyLink offers a turnkey solution for all your ebusiness needs The most successful websites on the internet focus on being user oriented instead of technology oriented The underlying advantage of User Centered Design UCD is that the best products services result from understanding the need of the end users the people who are going to use it Responsibilities UsedUnderscorejs and Handlebarjsfor templating in most of the code while used Backbonejs as an MVC framework and used java script frameworks like jQuery Extensively used CSS and Bootstrap for styling the HTML elements Developed dynamic web pages using HTML5 CSS3 Bootstrap Less CSS3SASS and AJAX Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Transformed Navigated and Formatted XML documents using XSL XSLT Developed application service components and configured beans using Spring IOC Used JNDI to perform lookup services for the various components of the system Worked with messaging queue services like Rabbit MQ Implemented Backbone Js CRUD operations Create Read Update and Delete and Paginator for pagination for Tables Developed and consumed SOAP Web Services using JAXWS and Apache CXF Involved in migrating code from SOAP to RESTful services Written  criteria queries for data retrievals and have performed the ORM mappings to map java entities to database tables Developed Rest Ful web services in MULE ESB based on Service Oriented Architecture SOA and used AXIS to send service requests to Web Services Used Rabbit MQ for transport of data in Queue in between components of the application Extensively used Java 8 Collections APIs Multithreading in handling batch service requests Developed deployment descriptors for the EJB have to deploy on Web logic Application Server Used MAVEN for project management and build automation Developed code for handling bean references in spring framework using Dependency Injection DI using annotations Developed stored procedures and triggers using PLSQL in order to calculate and update the tables to implement business logic Good working knowledge of tuning and debugging SQL queries and PLSQL code Performed unit testing using JUnit framework with Mockito Experience in Unix and Shell Scripting Environment HTML v30 CSS v30 Java v7 JSF SERVLETS JSF Prime Faces JavaScript JQuery XMLJNDI AJAXSOAP JAXWS WSDL Apache Axis SQL PLSQL Hibernate Spring Oracle Rabbit MQ v20 TOMCAT server Log4J JUnit Mockito Eclipse Maven JIRA Junior Java Developer Faujnet Solutions Private Limited Bengaluru Karnataka July 2013 to June 2015 Description This project is to automate and reduce the manual process on recruitment and interview scheduling As a First Phase we released the product only for Add Candidate and Edit Candidate In the second and final phase we focused on the other modules of RMS Application Data Collector is a webbased tool that requires zero development skills and simplifies the online form creation process for intranet and extranet users The data can be viewed as an aggregated view bar charts as a table view by record or a report view The collected data is stored in a SQL database backedup and maintained by the MIS database Responsibilities Responsible and active in the analysis definition design implementation management and deployment of full software development lifecycle of project Wrote objectoriented JavaScript for transparent presentation of both client and serverside validation Developed User Interface and implementing business process using HTML JSP and Servlets Development of the application that was used to create dynamic JSPs given input from a database table containing information about the contents of the JSP being developed Involved in writing the presentation layer in Java Server Pages JSP Developed deployment descriptors for the EJB have to deploy on Web logic Application Server Developed and implemented the MVC Architectural pattern using STRUTS framework including JSP Servlets and EJB Used Require Js to improve speed and quality of the code and Log4j for the logging the output to the files Monitored the error logs using Log4J and fixing the problem using Junit and Mockito extensively for testing Wrote Servlet programming for the communication between web browser and server Used multithreading in programming to improve overall performance Responsible for coding SQL Statements and Stored procedures for back end communication using JDBC Developed an API to write XML documents from a database Utilized XML and XSL transformation for dynamic webcontent and database connectivity Generated Jar files are deployed on Apache Tomcat Server Environment Java J2EE JSP HTML CSS XML Java Script Eclipse XML JBoss JMS SQL Developer SQLOracleDB2Log4jJunit Education Bachelors in Electronics and Communication Engineering in Electronics and Communication Engineering SJB Institute of Technology Bengaluru Karnataka",
    "entities": [
        "Micro Services",
        "SQS AWS Queuing System Used Kubernetes",
        "Implemented Spring Circuit",
        "Oracle SQL Server",
        "Used Hibernate",
        "AJAX",
        "Analysis Design Development System Testing",
        "Mongo DB Express",
        "ORM",
        "AJAX Development of Action Forms Action Servlets Action",
        "Universal and Heavy forwarder Environment Reactjs Expressjs Nodejs Babel Redux Docker Jenkins Pivotal Cloud Foundry Mongo DB",
        "Nodejs",
        "Relational",
        "STRUTS",
        "Responsibilities UsedUnderscorejs",
        "SQL Database",
        "the Pivotal Cloud Foundry",
        "Responsibilities",
        "Applications using Karma Jasmine Mocha",
        "Jersey",
        "SQL Statements",
        "Used Hibernate Transaction Management Hibernate Batch Transactions",
        "XSLT Developed",
        "Java Server Pages",
        "SPL",
        "Backbonejs",
        "MVC Transaction Management AOP JSP JSPEL",
        "AXIS",
        "Time Warner Cable TWC",
        "MULE",
        "SOAP",
        "XML",
        "Pivotal Functional Service Authenticated Users",
        "Route53",
        "Maven JIRA Junior",
        "Java 8 Multithreading Transaction Management Exception Handling",
        "Business Rules Management System",
        "WebLogic",
        "Description AutoZone Inc",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "DevOps",
        "JAXWS",
        "Transaction Management",
        "Amazon Web Services AWS Launch",
        "Amazon",
        "ELK",
        "Apache CXF Involved",
        "Puppet Chef",
        "JSF Spring",
        "MIS",
        "Developed",
        "Pivotal Functional Service Deployed",
        "IAAS",
        "Mockito",
        "Spring MVC",
        "User Centered Design UCD",
        "Charters",
        "Ant Maven",
        "Redux Framework",
        "Hibernate Spring Data",
        "MQ",
        "MEAN Mongo Express Angular",
        "Redux Flux",
        "JNDI",
        "JSP",
        "Create Read Update",
        "HSQL",
        "the Spring Cloud Service Registry Netflix",
        "Add Candidate and Edit Candidate",
        "Servlets Development",
        "Jenkins CICD",
        "Spring micro services",
        "ReducersActions",
        "Formatted XML",
        "MVC",
        "JMS IBM",
        "Agile",
        "EJB",
        "Mediations Involved",
        "ReactDragabble Used ReactAutocomplete",
        "Data Access Objects",
        "Rabbit MQ",
        "API",
        "Database",
        "Implemented Relational Data Base",
        "Java 8 Collections",
        "Drools",
        "Deployed and Monitored Micro Services",
        "AWS",
        "ECS",
        "Implemented",
        "Components ngModules Providers Services Interfaces",
        "Business Rules Engine Proficient",
        "McLean Virginia Capital One",
        "Aurora The Spectrum Guide",
        "React JS",
        "GitHub API MongoDB Used Nodejs",
        "HTTPbased RESTful Web Services",
        "HTML",
        "TypeScript",
        "APIGEE",
        "Responsibilities Responsible",
        "RESTFUL",
        "SQL",
        "API Security Designed Developed",
        "Selenium WebDriver Selenium Grid Proficient",
        "Implemented Nodejs",
        "The Spectrum TV App STVA Program",
        "MAVEN",
        "Deploying and Configuring Application Web Servers",
        "Node Js",
        "AUTH",
        "the United States",
        "Present Description Capital One Financial Corporation",
        "Used Spring",
        "Angular 4 Lazy Loading",
        "API Key",
        "SOA Service Oriented Architecture and Microservices Architecture",
        "Sun Jersey Quality Center AJAX Hibernate",
        "CRUD",
        "Pivotal Application Service Pivotal Container Service",
        "Oracle WebLogic IBM",
        "ReactNative Application",
        "Maven",
        "Hystrix",
        "Performed",
        "Bright house",
        "JWT",
        "XSL",
        "JavaScript",
        "MQ Active",
        "JMS SQL Developer SQLOracleDB2Log4jJunit Education Bachelors",
        "Communication Engineering in Electronics and",
        "TOMCAT",
        "Front",
        "Shell Scripting Environment HTML",
        "JSP Servlets",
        "Application Server Developed",
        "Selenium WebDriver",
        "SVN",
        "Queue",
        "Description EasyLinks",
        "CSS",
        "Tables Developed",
        "Rabbit MQ Implemented Backbone",
        "Mongoose Connector",
        "jQuery",
        "Management Security",
        "Apache Active",
        "MVC Object Orient Design Singleton Factory",
        "SPA",
        "REST",
        "Drop",
        "Ribbon Hystrix",
        "XMI CSS Log4j Subversion",
        "API Responsible",
        "RMS Application Data Collector",
        "Communication Engineering SJB Institute of Technology",
        "Oracle SOA TOAD HTML CSS XML",
        "NoSQL",
        "Worked with Microservice",
        "FrontEnd UI",
        "Routes",
        "Handlebarjsfor",
        "Dependency Injection",
        "Single Page Application",
        "Oracle 8i9i10g11i",
        "Mongoose connector Proficient",
        "DNS"
    ],
    "experience": "Experience in frameworks like Spring MVC and Struts MVC architecture interceptors action mappings and resource builders Worked with various frameworks in spring such as Spring IOC AOP Spring transaction Management Spring Data Spring JDBC Spring Batch Spring Boot Spring REST Spring JTA Spring IO Spring Cloud and Spring Security Spring security Site Minder Solid experience with various web MVC monolithic frameworks such as JSF Spring MVC and Struts Developed and deployed Micro Services based applications using Spring Boot and Spring Cloud Developed projects on SOA Service Oriented Architecture and Microservices Architecture with RESTful services JAXRS with Spring Boot Spring MVC and implemented SOAP JAXWS Apache CXF WADL WSDL Solid Experience with Java based ORM frameworks such as Hibernate Spring Data and Ibatis Proficient in using Spring Data JPA that helped in creating automatic Data Access Objects DAOs at the compile time Worked with spring cloud config Ribbon Hystrix and Zuul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage authentication monitoring services and routing Extensive experience in FrontEnd UI technologies like HTML5 CSS3 SASS LESS Bootstrap JS DOM in developing dynamic and responsive web pages Extensively used JavaScriptTypescript Ajax and JSON to build highly interactive web pages Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Developed numbers of Typescripts ES6 objects including Components ngModules Providers Services Interfaces and classes utilizing arrow function and optional types Experienced in Various Angular 2040 Backbone JS Knockout JS and Ext JS for rapid CRUD frontend app development and to achieve MVC design flow Proficient in usingHapiJS thatenabled to focus on writing reusable application logic with builtin support for input validation caching authentication and other essential facilities for building web and services applications Involved in developing a fullfledged REST API server with an open source NoSQL database that uses a documentoriented data model MongoDB and Mongoose connector Proficient in using RDBMS concepts and worked with Oracle 8i9i10g11i SQL server and good experience in writing stored procedures functions and triggers using PLSQL JDBC ODBC and JNDI in WebLogic server Excellent experience with Relational databases like MySQL Oracle SQL Server DB2 and No SQL Databases like CouchDB and Cassandra Good understanding of React JS and working with Redux Flux architecture Implemented security functionality for various projects using spring security and Site minder SSO Professional experience in Log4J for extensible logging debugging and error tracing Worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience with build tools like Ant Maven and Gradle for building applications to different environments Extensive hands on experience in setting up CDCI pipelines using Jenkins Bamboo and GoCD Experience in using DevOps tools like Puppet Chef and Docker Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Proficient in using clientside JavaScript build runners namely Bower Grunt Gulp and Web pack Expertise in integration testing automation framework like Selenium automation using Selenium WebDriver Selenium Grid Proficient in writing unit tests for JavaScript based Applications using Karma Jasmine Mocha and Chai testing frameworks Wrote comprehensive test cases and test plans using JUnit TestNG Spock and Mockito for Java based backend applications Designed and created highly scalable highly available fault tolerant highly secured distributed infrastructure IAAS using AWS EC2 instances S3 SQS EBS ELB API Gateway Route 53 CloudFront Auto Scaling Elastic Bean Stalk IAM ECS VPC Cloud Watch Cloud Trial RDS SNS SQS Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Authenticated Users accessing RESTful services using Oauth 20 OIDC and JWT Json Web token Experience in messaging queue services like JMS IBM MQ Rabbit MQ Active MQ and Apache Kafka Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Worked with Log Monitoring tools like Splunk and ELK Elastic Search Kibana and Logstash Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Proficient in applying design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Used various version control software such as SVN GIT CVS Big Bucket for maintaining code repositories Work Experience Full Stack Developer Capital One Richmond VA October 2018 to Present Description Capital One Financial Corporation isa bank holding company specializing in credit cards auto loans banking and savings accountsheadquartered in McLean Virginia Capital One is on a mission to change banking for good and to help people live their best lives Together we will build one of Americas leading informationbased technology companies Responsibilities I have been working as a full stack developer for developing the Application Program Interface APIs using the Java18 as a language and Spring as a Framework Actively involved in Analysis Design Development System Testing and User Acceptance Testing Followed Agile methodology in the Scrum Cycle model Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring micro services Designed and Implemented SPA single page application using Angular4 Module Component Template Metadata Data Binding Directives and Dependency Injection Created Typescript reusable components and services to consume REST APIs using componentbased architecture provided by Angular4 Creating generic service which have async capability and details description about observables Optimized the performance of application using Angular 4 Lazy Loading and ahead of time compilation Used ngrxstore container to manage the application state and ReducersActions to manipulate the state and ngrxeffects to load blogs to store in Angular 4 To allow fully encapsulate custom elements created custom elements HTML imports and Shadow Dom using Angular 4 and implemented Angular Router to enable navigation from one view to the next as user performs application task Implemented the security APIs with access token along with Api key for external consumers Extensive experience working with APIGEE policies of traffic Management Security and Mediations Involved in the implementation of JWT Token which is used across the enterprise for the authentication and authorization of the users who can access the program Configured Docker container service and build pipeline JenkinsCICD tool for continuous integrating and deploying application on servers Performed configuration deployment and support of cloud services including Amazon Web Services AWS Launch various AWS EC2 instance to deploy the application Performed queuing services for the cloud data processing for certain tasks like file upload data processing notice to the OnPremise application using the AWS service SQS AWS Queuing System Used Kubernetes as a portable extensible opensource platform for managing containerized workloads and services that facilitates both declarative configuration and automation Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Netflix OSS spring cloud Used Apache Kafka in cluster as messaging system between the API sand microservices and worked on Splunk search processing language SPL queries reports dashboard and logging using Log4J Implemented Relational Data Base like Oracle and PLSQL store procedures Implemented NoSQL database like Cassandra to store key values for data analytics which is used as a Database for project Worked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser For back end testing we used Junit and Mockito for unit testing and embedded databases like HSQL and function testing we use Spring MVC mock Implemented unit test cases using Karma and Jasmine on client side Environment Angular 4 Java 18 TypeScript J2EE XML JSF Hibernate SQLPLSQL Spring Boot Oracle10 g XMI CSS Log4j Subversion JQuery JBoss Application Server Maven Eclipse RALLY UNIX Cassandra 30 AWS S3 EC2 ECS ECR IAM EBS JUnit TestNG Full Stack Developer AutoZone Inc Memphis TN October 2017 to August 2018 Description AutoZone Inc is an American retailer of automotive parts and accessories the largest in the United States AutoZone aims to develop a software application that reduces the gap between the time taken to purchase an item in store to an online purchase which accelerates the process of delivering an automotive part to the customer Thus achieves its primary goal customer satisfaction Responsibilities Developed use cases drawn sequence diagrams and class diagrams for the application and responsible for writing program and functional specifications Involved in total Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot and Apache CXF framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Experience in integrating the internal security model into new projects with Spring Batch Spring MicroServices and Spring Boot Pivotal Cloud Foundry and Netflix Eureka Designing and developed Micro Services using Mongo DB Express JS React JS and Node Js Used Redux Framework architecture like Reducers Containers Saga for integrating the data with ReactNative Application and created and used Reducers that received said Actions to modify Store State Tree Developed the Drag and Drop functionality using ReactDragabble Used ReactAutocomplete for creating google maps location search on the webpage Handled Http Requests using Axios which supports Promise API functionality native to JZ oracle Developed responsive applications using Bootstrapjs Requirejs and Nodejs D3js which allowed the same application to be optimized for both mobile and desktop resolutions Created and consumed RESTful API using Expressjs to provide centralized logic and reusable data retrieval build on top ofNodejs Implemented Nodejs router to make crossdomain requests to API services like GitHub API MongoDB Used Nodejs to run Grunt tasks and compile minify concat and build the project properly Worked with build tools like NPM Bower and Grunt Used continuous build using Jenkins and supported the Application for production deployment and postproduction Worked with the Pivotal Cloud Foundry services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Configured Docker container service and build pipeline Jenkins CICD tool for continuous integrating and deploying application on servers Implemented OAuth 20 Basic AUTH and API Key policies for API Security Designed Developed and maintained Postgre SQL Database architecture Developed back end interfaces using SQL packages stored procedures Functions Procedure Anonymous SQL programs Exception Handling in PLSQL programs Developed unit test cases using Mocha and Chai as unit test runner to test various React JS components Worked on the Splunk architecture and various components indexer forwarder search head deployment server Universal and Heavy forwarder Environment Reactjs Expressjs Nodejs Babel Redux Docker Jenkins Pivotal Cloud Foundry Mongo DB 32 Mongoose Connector Chai Mocha Log4j MAVEN 30 Senior Java Developer Charter Communication Long Beach CADuration October 2016 to September 2017 Description Client is one of the Internet service providers in Aurora The Spectrum Guide team oversees the infrastructure and configuration management for Charters largest application Our goal is to run applications through a repeatable reliable and secure process Spectrum is a rebranding initiative intended to create a consistent marketing message for the variety of residential and commercial offerings created when legacy Charter merged with Time Warner Cable TWC and Bright house Networks BHN The Spectrum TV Application merges several areas of IPbased development into one consumerfacing product and is the first step towards unifying the protocols software systems technologies and experiences from a customer perspective The Spectrum TV App STVA Program is comprised of multiple projects and supported by multiple delivery teams from across Charter Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using Agile methodology for building Service Oriented Architecture SOA Involved in developing user interface with HTML CSS3 SAAS JSON Created a custom responsive web application to replace a legacy lineof business web application using Angular JS Developing and designing SPA user interfaces in AngularJS Worked on Front end by using AngularJS JavaScript Used Angularjs for connecting the APIs using Angularjs http service Designed dynamic and multi browser compatible pages using AngularJS and JavaScript Utilized various JavaScript and jQuery libraries AJAX for form validation and other interactive features Used Spring MVC and Dependency Injection for handling presentation and business logic Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Integrated Spring DAO for data access using Hibernate and handled Transaction Management using the provided data Responsible for designing Hibernate mapping files based on business logic and Object relationships Used Hibernate as Persistence framework mapping the ORM objects to table using Hibernate annotations Developed and consumed SOAP Web Services using JAXWS and Apache CXF Used Jersey to consume HTTPbased RESTful Web Services Used Uniform Interface Concept of REST to build API Responsible to write the different service classes and utility API which will be used across the framework Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Configured Hibernate second level cache using EH Cache to reduce the number of hits to configuration table data Using second level cache EH Cache store entities between sessions scope in the session factory to redundant database calls Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Configured EC2 instance and Route53 for DNS hosting on AWS for dev environment and used AJAX framework for server communication and seamless user experience Worked on Proof of Concept for developing application using Node Js and Mongo DB Used Require Js to improve speed and quality of the code and Log4j for the logging the output to the files Created automation framework and test scripts using Selenium WebDriver for multiple platforms and browsers testing Environment JDK 18 SpringDI MVC Transaction Management AOP JSP JSPEL JSTL Servlets AWS Oracle SOA TOAD HTML CSS XML Angular JS ESB SOAP REST JAXRS Log4J Adobe Dreamweaver Junit Log4J Sun Jersey Quality Center AJAX Hibernate Associate Java Developer Easylink Chennai Tamil Nadu August 2015 to July 2016 Description EasyLinks team of professionals work together to achieve a single goal delivering to your bottom line EasyLink offers a turnkey solution for all your ebusiness needs The most successful websites on the internet focus on being user oriented instead of technology oriented The underlying advantage of User Centered Design UCD is that the best products services result from understanding the need of the end users the people who are going to use it Responsibilities UsedUnderscorejs and Handlebarjsfor templating in most of the code while used Backbonejs as an MVC framework and used java script frameworks like jQuery Extensively used CSS and Bootstrap for styling the HTML elements Developed dynamic web pages using HTML5 CSS3 Bootstrap Less CSS3SASS and AJAX Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Transformed Navigated and Formatted XML documents using XSL XSLT Developed application service components and configured beans using Spring IOC Used JNDI to perform lookup services for the various components of the system Worked with messaging queue services like Rabbit MQ Implemented Backbone Js CRUD operations Create Read Update and Delete and Paginator for pagination for Tables Developed and consumed SOAP Web Services using JAXWS and Apache CXF Involved in migrating code from SOAP to RESTful services Written   criteria queries for data retrievals and have performed the ORM mappings to map java entities to database tables Developed Rest Ful web services in MULE ESB based on Service Oriented Architecture SOA and used AXIS to send service requests to Web Services Used Rabbit MQ for transport of data in Queue in between components of the application Extensively used Java 8 Collections APIs Multithreading in handling batch service requests Developed deployment descriptors for the EJB have to deploy on Web logic Application Server Used MAVEN for project management and build automation Developed code for handling bean references in spring framework using Dependency Injection DI using annotations Developed stored procedures and triggers using PLSQL in order to calculate and update the tables to implement business logic Good working knowledge of tuning and debugging SQL queries and PLSQL code Performed unit testing using JUnit framework with Mockito Experience in Unix and Shell Scripting Environment HTML v30 CSS v30 Java v7 JSF SERVLETS JSF Prime Faces JavaScript JQuery XMLJNDI AJAXSOAP JAXWS WSDL Apache Axis SQL PLSQL Hibernate Spring Oracle Rabbit MQ v20 TOMCAT server Log4J JUnit Mockito Eclipse Maven JIRA Junior Java Developer Faujnet Solutions Private Limited Bengaluru Karnataka July 2013 to June 2015 Description This project is to automate and reduce the manual process on recruitment and interview scheduling As a First Phase we released the product only for Add Candidate and Edit Candidate In the second and final phase we focused on the other modules of RMS Application Data Collector is a webbased tool that requires zero development skills and simplifies the online form creation process for intranet and extranet users The data can be viewed as an aggregated view bar charts as a table view by record or a report view The collected data is stored in a SQL database backedup and maintained by the MIS database Responsibilities Responsible and active in the analysis definition design implementation management and deployment of full software development lifecycle of project Wrote objectoriented JavaScript for transparent presentation of both client and serverside validation Developed User Interface and implementing business process using HTML JSP and Servlets Development of the application that was used to create dynamic JSPs given input from a database table containing information about the contents of the JSP being developed Involved in writing the presentation layer in Java Server Pages JSP Developed deployment descriptors for the EJB have to deploy on Web logic Application Server Developed and implemented the MVC Architectural pattern using STRUTS framework including JSP Servlets and EJB Used Require Js to improve speed and quality of the code and Log4j for the logging the output to the files Monitored the error logs using Log4J and fixing the problem using Junit and Mockito extensively for testing Wrote Servlet programming for the communication between web browser and server Used multithreading in programming to improve overall performance Responsible for coding SQL Statements and Stored procedures for back end communication using JDBC Developed an API to write XML documents from a database Utilized XML and XSL transformation for dynamic webcontent and database connectivity Generated Jar files are deployed on Apache Tomcat Server Environment Java J2EE JSP HTML CSS XML Java Script Eclipse XML JBoss JMS SQL Developer SQLOracleDB2Log4jJunit Education Bachelors in Electronics and Communication Engineering in Electronics and Communication Engineering SJB Institute of Technology Bengaluru Karnataka",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Developer",
        "Capital",
        "Richmond",
        "VA",
        "Java",
        "Multithreading",
        "Transaction",
        "Management",
        "Exception",
        "Handling",
        "Collections",
        "features",
        "languages",
        "clarity",
        "developers",
        "frameworks",
        "Spring",
        "MVC",
        "Struts",
        "MVC",
        "architecture",
        "interceptors",
        "action",
        "mappings",
        "resource",
        "builders",
        "frameworks",
        "spring",
        "Spring",
        "IOC",
        "AOP",
        "Spring",
        "transaction",
        "Management",
        "Spring",
        "Data",
        "Spring",
        "JDBC",
        "Spring",
        "Batch",
        "Spring",
        "Boot",
        "Spring",
        "REST",
        "Spring",
        "JTA",
        "Spring",
        "IO",
        "Spring",
        "Cloud",
        "Spring",
        "Security",
        "Spring",
        "security",
        "Site",
        "Minder",
        "experience",
        "web",
        "MVC",
        "frameworks",
        "JSF",
        "Spring",
        "MVC",
        "Struts",
        "Developed",
        "Micro",
        "Services",
        "applications",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "projects",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "Microservices",
        "Architecture",
        "services",
        "JAXRS",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "SOAP",
        "JAXWS",
        "Apache",
        "CXF",
        "WADL",
        "WSDL",
        "Experience",
        "Java",
        "ORM",
        "frameworks",
        "Hibernate",
        "Spring",
        "Data",
        "Ibatis",
        "Proficient",
        "Spring",
        "Data",
        "JPA",
        "Data",
        "Access",
        "DAOs",
        "compile",
        "time",
        "spring",
        "cloud",
        "config",
        "Ribbon",
        "Hystrix",
        "Zuul",
        "APIGateway",
        "spring",
        "cloud",
        "Netflix",
        "Eureka",
        "service",
        "load",
        "factors",
        "traffic",
        "resource",
        "usage",
        "authentication",
        "monitoring",
        "services",
        "experience",
        "FrontEnd",
        "UI",
        "technologies",
        "HTML5",
        "CSS3",
        "SASS",
        "Bootstrap",
        "JS",
        "DOM",
        "web",
        "pages",
        "JavaScriptTypescript",
        "Ajax",
        "JSON",
        "web",
        "pages",
        "experience",
        "Single",
        "Page",
        "Application",
        "SPA",
        "MEAN",
        "Mongo",
        "Express",
        "Angular",
        "Node",
        "stack",
        "numbers",
        "Typescripts",
        "objects",
        "Components",
        "ngModules",
        "Providers",
        "Services",
        "Interfaces",
        "classes",
        "arrow",
        "function",
        "types",
        "Various",
        "Angular",
        "Backbone",
        "JS",
        "Knockout",
        "JS",
        "Ext",
        "JS",
        "CRUD",
        "app",
        "development",
        "MVC",
        "design",
        "flow",
        "Proficient",
        "application",
        "logic",
        "support",
        "input",
        "validation",
        "authentication",
        "facilities",
        "building",
        "web",
        "services",
        "applications",
        "REST",
        "API",
        "server",
        "source",
        "NoSQL",
        "database",
        "data",
        "model",
        "MongoDB",
        "Mongoose",
        "connector",
        "Proficient",
        "RDBMS",
        "concepts",
        "Oracle",
        "SQL",
        "server",
        "experience",
        "procedures",
        "functions",
        "triggers",
        "PLSQL",
        "JDBC",
        "ODBC",
        "JNDI",
        "WebLogic",
        "server",
        "experience",
        "Relational",
        "databases",
        "MySQL",
        "Oracle",
        "SQL",
        "Server",
        "DB2",
        "SQL",
        "Databases",
        "CouchDB",
        "Cassandra",
        "understanding",
        "React",
        "JS",
        "Redux",
        "Flux",
        "architecture",
        "security",
        "functionality",
        "projects",
        "spring",
        "security",
        "Site",
        "minder",
        "SSO",
        "Professional",
        "experience",
        "Log4J",
        "debugging",
        "error",
        "tracing",
        "NoSQL",
        "ORM",
        "frameworks",
        "Mongoose",
        "Connector",
        "Cassandra",
        "Node",
        "Driver",
        "Experience",
        "build",
        "tools",
        "Ant",
        "Maven",
        "Gradle",
        "building",
        "applications",
        "environments",
        "hands",
        "experience",
        "CDCI",
        "pipelines",
        "Jenkins",
        "Bamboo",
        "GoCD",
        "Experience",
        "DevOps",
        "tools",
        "Puppet",
        "Chef",
        "Docker",
        "Good",
        "Knowledge",
        "documentation",
        "REST",
        "APIs",
        "Swagger",
        "WADL",
        "JavaScript",
        "build",
        "runners",
        "Bower",
        "Grunt",
        "Gulp",
        "Web",
        "pack",
        "Expertise",
        "integration",
        "testing",
        "automation",
        "framework",
        "Selenium",
        "automation",
        "Selenium",
        "WebDriver",
        "Selenium",
        "Grid",
        "Proficient",
        "unit",
        "tests",
        "JavaScript",
        "Applications",
        "Karma",
        "Jasmine",
        "Mocha",
        "Chai",
        "testing",
        "frameworks",
        "test",
        "cases",
        "test",
        "plans",
        "JUnit",
        "TestNG",
        "Spock",
        "Mockito",
        "Java",
        "applications",
        "fault",
        "infrastructure",
        "IAAS",
        "AWS",
        "EC2",
        "S3",
        "SQS",
        "EBS",
        "ELB",
        "API",
        "Gateway",
        "Route",
        "CloudFront",
        "Auto",
        "Scaling",
        "Elastic",
        "Bean",
        "Stalk",
        "IAM",
        "ECS",
        "VPC",
        "Cloud",
        "Watch",
        "Cloud",
        "Trial",
        "RDS",
        "SNS",
        "SQS",
        "Hands",
        "experience",
        "implementation",
        "Cloud",
        "Foundry",
        "PCF",
        "services",
        "Pivotal",
        "Application",
        "Service",
        "Pivotal",
        "Container",
        "Service",
        "Pivotal",
        "Functional",
        "Service",
        "Authenticated",
        "Users",
        "services",
        "Oauth",
        "OIDC",
        "JWT",
        "Json",
        "Web",
        "Experience",
        "queue",
        "services",
        "JMS",
        "IBM",
        "MQ",
        "Rabbit",
        "MQ",
        "MQ",
        "Apache",
        "Kafka",
        "experience",
        "Deploying",
        "Configuring",
        "Application",
        "Web",
        "Servers",
        "Oracle",
        "WebLogic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Glassfish",
        "Apache",
        "Tomcat",
        "Log",
        "Monitoring",
        "tools",
        "Splunk",
        "ELK",
        "Elastic",
        "Search",
        "Kibana",
        "Logstash",
        "Worked",
        "Drools",
        "Business",
        "Rules",
        "Management",
        "System",
        "BRMS",
        "solution",
        "core",
        "Business",
        "Rules",
        "Engine",
        "Proficient",
        "design",
        "patterns",
        "MVC",
        "Object",
        "Orient",
        "Design",
        "Singleton",
        "Factory",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "Visitor",
        "Observer",
        "Decorator",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "version",
        "control",
        "software",
        "SVN",
        "GIT",
        "CVS",
        "Big",
        "Bucket",
        "code",
        "repositories",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "Capital",
        "Richmond",
        "VA",
        "October",
        "Present",
        "Description",
        "Capital",
        "One",
        "Financial",
        "Corporation",
        "isa",
        "bank",
        "company",
        "credit",
        "cards",
        "auto",
        "loans",
        "banking",
        "savings",
        "McLean",
        "Virginia",
        "Capital",
        "One",
        "mission",
        "banking",
        "good",
        "people",
        "lives",
        "Americas",
        "technology",
        "companies",
        "Responsibilities",
        "stack",
        "developer",
        "Application",
        "Program",
        "Interface",
        "APIs",
        "Java18",
        "language",
        "Spring",
        "Framework",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "methodology",
        "Scrum",
        "Cycle",
        "model",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "code",
        "Rest",
        "APIs",
        "Spring",
        "Rest",
        "Swagger",
        "API",
        "documentation",
        "Spring",
        "Circuit",
        "breaker",
        "pattern",
        "Hystrix",
        "dashboard",
        "Spring",
        "micro",
        "services",
        "SPA",
        "page",
        "application",
        "Angular4",
        "Module",
        "Component",
        "Template",
        "Metadata",
        "Data",
        "Binding",
        "Directives",
        "Dependency",
        "Injection",
        "Created",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "architecture",
        "Angular4",
        "service",
        "async",
        "capability",
        "details",
        "description",
        "observables",
        "performance",
        "application",
        "Angular",
        "Lazy",
        "Loading",
        "time",
        "compilation",
        "ngrxstore",
        "container",
        "application",
        "state",
        "ReducersActions",
        "state",
        "blogs",
        "Angular",
        "custom",
        "elements",
        "custom",
        "elements",
        "HTML",
        "imports",
        "Shadow",
        "Dom",
        "Angular",
        "Angular",
        "Router",
        "navigation",
        "view",
        "user",
        "application",
        "task",
        "security",
        "APIs",
        "access",
        "Api",
        "key",
        "consumers",
        "experience",
        "APIGEE",
        "policies",
        "traffic",
        "Management",
        "Security",
        "Mediations",
        "implementation",
        "JWT",
        "Token",
        "enterprise",
        "authentication",
        "authorization",
        "users",
        "program",
        "Configured",
        "Docker",
        "container",
        "service",
        "pipeline",
        "tool",
        "integrating",
        "application",
        "servers",
        "Performed",
        "configuration",
        "deployment",
        "support",
        "cloud",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "EC2",
        "instance",
        "application",
        "services",
        "data",
        "processing",
        "tasks",
        "file",
        "upload",
        "data",
        "processing",
        "notice",
        "OnPremise",
        "application",
        "AWS",
        "service",
        "SQS",
        "AWS",
        "System",
        "Kubernetes",
        "platform",
        "workloads",
        "services",
        "configuration",
        "automation",
        "Deployed",
        "Monitored",
        "Micro",
        "Services",
        "Spring",
        "Cloud",
        "Foundry",
        "Managed",
        "Domains",
        "Routes",
        "Spring",
        "Cloud",
        "Service",
        "Registry",
        "Netflix",
        "OSS",
        "spring",
        "cloud",
        "Apache",
        "Kafka",
        "cluster",
        "system",
        "API",
        "sand",
        "microservices",
        "Splunk",
        "search",
        "processing",
        "language",
        "SPL",
        "queries",
        "dashboard",
        "Log4J",
        "Implemented",
        "Relational",
        "Data",
        "Base",
        "Oracle",
        "PLSQL",
        "store",
        "procedures",
        "NoSQL",
        "database",
        "Cassandra",
        "values",
        "data",
        "analytics",
        "Database",
        "project",
        "Web",
        "pack",
        "application",
        "source",
        "code",
        "chunks",
        "code",
        "server",
        "browser",
        "end",
        "testing",
        "Junit",
        "Mockito",
        "unit",
        "testing",
        "databases",
        "HSQL",
        "function",
        "testing",
        "Spring",
        "MVC",
        "mock",
        "unit",
        "test",
        "cases",
        "Karma",
        "Jasmine",
        "client",
        "side",
        "Environment",
        "Angular",
        "Java",
        "TypeScript",
        "J2EE",
        "XML",
        "JSF",
        "Hibernate",
        "SQLPLSQL",
        "Spring",
        "Boot",
        "Oracle10",
        "g",
        "XMI",
        "CSS",
        "Log4j",
        "Subversion",
        "JQuery",
        "JBoss",
        "Application",
        "Server",
        "Maven",
        "Eclipse",
        "RALLY",
        "UNIX",
        "Cassandra",
        "AWS",
        "S3",
        "EC2",
        "ECS",
        "ECR",
        "IAM",
        "EBS",
        "JUnit",
        "TestNG",
        "Full",
        "Stack",
        "Developer",
        "AutoZone",
        "Inc",
        "Memphis",
        "TN",
        "October",
        "August",
        "Description",
        "AutoZone",
        "Inc",
        "retailer",
        "parts",
        "accessories",
        "United",
        "States",
        "AutoZone",
        "software",
        "application",
        "gap",
        "time",
        "item",
        "store",
        "purchase",
        "process",
        "part",
        "customer",
        "goal",
        "customer",
        "satisfaction",
        "Responsibilities",
        "use",
        "cases",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "application",
        "program",
        "specifications",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "Microservice",
        "architecture",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "Boot",
        "Apache",
        "CXF",
        "framework",
        "Deployed",
        "Spring",
        "Boot",
        "microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "Experience",
        "security",
        "model",
        "projects",
        "Spring",
        "Batch",
        "Spring",
        "MicroServices",
        "Spring",
        "Boot",
        "Cloud",
        "Foundry",
        "Netflix",
        "Eureka",
        "Designing",
        "Micro",
        "Services",
        "Mongo",
        "DB",
        "Express",
        "JS",
        "React",
        "JS",
        "Node",
        "Js",
        "Used",
        "Redux",
        "Framework",
        "architecture",
        "Reducers",
        "Containers",
        "Saga",
        "data",
        "ReactNative",
        "Application",
        "Reducers",
        "Actions",
        "Store",
        "State",
        "Tree",
        "Drag",
        "Drop",
        "functionality",
        "ReactDragabble",
        "ReactAutocomplete",
        "google",
        "maps",
        "location",
        "search",
        "webpage",
        "Http",
        "Requests",
        "Axios",
        "Promise",
        "API",
        "functionality",
        "JZ",
        "oracle",
        "applications",
        "Bootstrapjs",
        "Requirejs",
        "Nodejs",
        "application",
        "desktop",
        "resolutions",
        "API",
        "Expressjs",
        "logic",
        "data",
        "retrieval",
        "build",
        "top",
        "Nodejs",
        "router",
        "crossdomain",
        "requests",
        "API",
        "services",
        "GitHub",
        "API",
        "Nodejs",
        "Grunt",
        "tasks",
        "compile",
        "minify",
        "concat",
        "project",
        "build",
        "tools",
        "NPM",
        "Bower",
        "Grunt",
        "build",
        "Jenkins",
        "Application",
        "production",
        "deployment",
        "postproduction",
        "Cloud",
        "Foundry",
        "services",
        "Pivotal",
        "Application",
        "Service",
        "Pivotal",
        "Container",
        "Service",
        "Pivotal",
        "Functional",
        "Service",
        "Application",
        "Cloud",
        "Foundry",
        "development",
        "platform",
        "Configured",
        "Docker",
        "container",
        "service",
        "pipeline",
        "Jenkins",
        "CICD",
        "tool",
        "integrating",
        "application",
        "servers",
        "OAuth",
        "Basic",
        "AUTH",
        "API",
        "policies",
        "API",
        "Security",
        "Developed",
        "Postgre",
        "SQL",
        "Database",
        "architecture",
        "end",
        "interfaces",
        "SQL",
        "packages",
        "procedures",
        "Functions",
        "Procedure",
        "Anonymous",
        "SQL",
        "programs",
        "Exception",
        "Handling",
        "PLSQL",
        "programs",
        "unit",
        "test",
        "cases",
        "Mocha",
        "Chai",
        "unit",
        "test",
        "runner",
        "React",
        "JS",
        "components",
        "Splunk",
        "architecture",
        "components",
        "indexer",
        "forwarder",
        "search",
        "head",
        "deployment",
        "server",
        "Universal",
        "Heavy",
        "forwarder",
        "Environment",
        "Reactjs",
        "Expressjs",
        "Nodejs",
        "Babel",
        "Redux",
        "Docker",
        "Jenkins",
        "Pivotal",
        "Cloud",
        "Foundry",
        "Mongo",
        "DB",
        "Mongoose",
        "Connector",
        "Chai",
        "Mocha",
        "Log4j",
        "MAVEN",
        "Senior",
        "Java",
        "Developer",
        "Charter",
        "Communication",
        "Long",
        "Beach",
        "CADuration",
        "October",
        "September",
        "Description",
        "Client",
        "Internet",
        "service",
        "providers",
        "Aurora",
        "Spectrum",
        "Guide",
        "team",
        "infrastructure",
        "configuration",
        "management",
        "Charters",
        "application",
        "goal",
        "applications",
        "process",
        "Spectrum",
        "initiative",
        "marketing",
        "message",
        "variety",
        "offerings",
        "legacy",
        "Charter",
        "Time",
        "Warner",
        "Cable",
        "TWC",
        "Bright",
        "house",
        "Networks",
        "BHN",
        "Spectrum",
        "TV",
        "Application",
        "areas",
        "IPbased",
        "development",
        "product",
        "step",
        "protocols",
        "software",
        "systems",
        "technologies",
        "experiences",
        "customer",
        "perspective",
        "Spectrum",
        "TV",
        "App",
        "STVA",
        "Program",
        "projects",
        "delivery",
        "teams",
        "Charter",
        "Responsibilities",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "application",
        "methodology",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "user",
        "interface",
        "HTML",
        "CSS3",
        "SAAS",
        "JSON",
        "custom",
        "web",
        "application",
        "legacy",
        "business",
        "web",
        "application",
        "Angular",
        "JS",
        "Developing",
        "SPA",
        "user",
        "interfaces",
        "AngularJS",
        "Front",
        "end",
        "JavaScript",
        "Angularjs",
        "APIs",
        "Angularjs",
        "http",
        "service",
        "dynamic",
        "multi",
        "browser",
        "pages",
        "AngularJS",
        "JavaScript",
        "JavaScript",
        "jQuery",
        "AJAX",
        "form",
        "validation",
        "features",
        "Spring",
        "MVC",
        "Dependency",
        "Injection",
        "presentation",
        "business",
        "logic",
        "Dependency",
        "Injection",
        "components",
        "bean",
        "life",
        "cycle",
        "application",
        "Spring",
        "IOC",
        "Integrated",
        "Spring",
        "DAO",
        "data",
        "access",
        "Hibernate",
        "Transaction",
        "Management",
        "data",
        "Hibernate",
        "mapping",
        "files",
        "business",
        "logic",
        "Object",
        "relationships",
        "Hibernate",
        "Persistence",
        "framework",
        "mapping",
        "ORM",
        "table",
        "Hibernate",
        "annotations",
        "SOAP",
        "Web",
        "Services",
        "JAXWS",
        "Apache",
        "CXF",
        "Jersey",
        "HTTPbased",
        "RESTful",
        "Web",
        "Services",
        "Uniform",
        "Interface",
        "Concept",
        "REST",
        "API",
        "service",
        "classes",
        "utility",
        "API",
        "framework",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "concepts",
        "Hibernate",
        "level",
        "cache",
        "EH",
        "Cache",
        "number",
        "hits",
        "configuration",
        "table",
        "data",
        "level",
        "cache",
        "EH",
        "Cache",
        "store",
        "entities",
        "sessions",
        "scope",
        "session",
        "factory",
        "database",
        "calls",
        "function",
        "AMQP",
        "messages",
        "Rabbit",
        "MQ",
        "JMS",
        "message",
        "Apache",
        "MQ",
        "edge",
        "device",
        "EC2",
        "instance",
        "Route53",
        "DNS",
        "AWS",
        "dev",
        "environment",
        "AJAX",
        "framework",
        "server",
        "communication",
        "user",
        "experience",
        "Proof",
        "Concept",
        "application",
        "Node",
        "Js",
        "Mongo",
        "DB",
        "Require",
        "Js",
        "speed",
        "quality",
        "code",
        "Log4j",
        "output",
        "files",
        "automation",
        "framework",
        "test",
        "scripts",
        "Selenium",
        "WebDriver",
        "platforms",
        "browsers",
        "Environment",
        "JDK",
        "SpringDI",
        "MVC",
        "Transaction",
        "Management",
        "AOP",
        "JSP",
        "JSPEL",
        "JSTL",
        "Servlets",
        "AWS",
        "Oracle",
        "SOA",
        "TOAD",
        "HTML",
        "CSS",
        "XML",
        "JS",
        "ESB",
        "SOAP",
        "REST",
        "JAXRS",
        "Log4J",
        "Adobe",
        "Dreamweaver",
        "Junit",
        "Log4J",
        "Sun",
        "Jersey",
        "Quality",
        "Center",
        "AJAX",
        "Hibernate",
        "Associate",
        "Java",
        "Developer",
        "Easylink",
        "Chennai",
        "Tamil",
        "Nadu",
        "August",
        "July",
        "Description",
        "EasyLinks",
        "team",
        "professionals",
        "goal",
        "line",
        "EasyLink",
        "turnkey",
        "solution",
        "ebusiness",
        "websites",
        "internet",
        "focus",
        "user",
        "technology",
        "advantage",
        "User",
        "Centered",
        "Design",
        "UCD",
        "products",
        "services",
        "need",
        "end",
        "people",
        "Responsibilities",
        "UsedUnderscorejs",
        "Handlebarjsfor",
        "code",
        "Backbonejs",
        "MVC",
        "framework",
        "script",
        "frameworks",
        "jQuery",
        "CSS",
        "Bootstrap",
        "HTML",
        "elements",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "AJAX",
        "Development",
        "Action",
        "Forms",
        "Action",
        "Servlets",
        "Action",
        "Action",
        "Forms",
        "Struts",
        "framework",
        "Transformed",
        "Navigated",
        "Formatted",
        "XML",
        "documents",
        "XSL",
        "XSLT",
        "application",
        "service",
        "components",
        "beans",
        "Spring",
        "IOC",
        "JNDI",
        "services",
        "components",
        "system",
        "queue",
        "services",
        "Rabbit",
        "MQ",
        "Backbone",
        "Js",
        "CRUD",
        "operations",
        "Create",
        "Read",
        "Update",
        "Delete",
        "Paginator",
        "pagination",
        "Tables",
        "Developed",
        "SOAP",
        "Web",
        "Services",
        "JAXWS",
        "Apache",
        "CXF",
        "code",
        "SOAP",
        "services",
        "criteria",
        "queries",
        "data",
        "retrievals",
        "ORM",
        "mappings",
        "entities",
        "database",
        "tables",
        "Developed",
        "Rest",
        "Ful",
        "web",
        "services",
        "MULE",
        "ESB",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "AXIS",
        "service",
        "requests",
        "Web",
        "Services",
        "Rabbit",
        "MQ",
        "transport",
        "data",
        "Queue",
        "components",
        "application",
        "Java",
        "Collections",
        "APIs",
        "batch",
        "service",
        "requests",
        "deployment",
        "descriptors",
        "EJB",
        "Web",
        "logic",
        "Application",
        "Server",
        "MAVEN",
        "project",
        "management",
        "automation",
        "code",
        "bean",
        "references",
        "spring",
        "framework",
        "Dependency",
        "Injection",
        "DI",
        "annotations",
        "procedures",
        "triggers",
        "PLSQL",
        "order",
        "tables",
        "business",
        "logic",
        "knowledge",
        "SQL",
        "queries",
        "PLSQL",
        "code",
        "Performed",
        "unit",
        "testing",
        "JUnit",
        "framework",
        "Mockito",
        "Experience",
        "Unix",
        "Shell",
        "Scripting",
        "Environment",
        "HTML",
        "CSS",
        "v30",
        "Java",
        "v7",
        "JSF",
        "JSF",
        "Prime",
        "Faces",
        "JavaScript",
        "JQuery",
        "XMLJNDI",
        "AJAXSOAP",
        "JAXWS",
        "WSDL",
        "Apache",
        "Axis",
        "SQL",
        "PLSQL",
        "Hibernate",
        "Spring",
        "Oracle",
        "Rabbit",
        "MQ",
        "v20",
        "TOMCAT",
        "server",
        "Log4J",
        "JUnit",
        "Mockito",
        "Eclipse",
        "Maven",
        "JIRA",
        "Junior",
        "Java",
        "Developer",
        "Faujnet",
        "Solutions",
        "Private",
        "Limited",
        "Bengaluru",
        "Karnataka",
        "July",
        "June",
        "Description",
        "project",
        "process",
        "recruitment",
        "interview",
        "scheduling",
        "First",
        "Phase",
        "product",
        "Add",
        "Candidate",
        "Edit",
        "Candidate",
        "phase",
        "modules",
        "RMS",
        "Application",
        "Data",
        "Collector",
        "tool",
        "development",
        "skills",
        "simplifies",
        "form",
        "creation",
        "process",
        "intranet",
        "extranet",
        "users",
        "data",
        "view",
        "bar",
        "charts",
        "table",
        "view",
        "record",
        "report",
        "data",
        "SQL",
        "database",
        "backedup",
        "MIS",
        "database",
        "Responsibilities",
        "analysis",
        "definition",
        "design",
        "implementation",
        "management",
        "deployment",
        "software",
        "development",
        "lifecycle",
        "project",
        "Wrote",
        "JavaScript",
        "presentation",
        "client",
        "validation",
        "Developed",
        "User",
        "Interface",
        "business",
        "process",
        "HTML",
        "JSP",
        "Servlets",
        "Development",
        "application",
        "JSPs",
        "input",
        "database",
        "table",
        "information",
        "contents",
        "JSP",
        "presentation",
        "layer",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "deployment",
        "descriptors",
        "EJB",
        "Web",
        "logic",
        "Application",
        "Server",
        "Developed",
        "MVC",
        "Architectural",
        "pattern",
        "STRUTS",
        "framework",
        "JSP",
        "Servlets",
        "EJB",
        "Used",
        "Require",
        "Js",
        "speed",
        "quality",
        "code",
        "Log4j",
        "output",
        "files",
        "error",
        "logs",
        "Log4J",
        "problem",
        "Junit",
        "Mockito",
        "Wrote",
        "Servlet",
        "programming",
        "communication",
        "web",
        "browser",
        "server",
        "programming",
        "performance",
        "SQL",
        "Statements",
        "procedures",
        "end",
        "communication",
        "JDBC",
        "API",
        "XML",
        "documents",
        "database",
        "XML",
        "XSL",
        "transformation",
        "webcontent",
        "database",
        "connectivity",
        "Jar",
        "files",
        "Apache",
        "Tomcat",
        "Server",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "HTML",
        "CSS",
        "XML",
        "Java",
        "Script",
        "Eclipse",
        "XML",
        "JBoss",
        "JMS",
        "SQL",
        "Developer",
        "SQLOracleDB2Log4jJunit",
        "Education",
        "Bachelors",
        "Electronics",
        "Communication",
        "Engineering",
        "Electronics",
        "Communication",
        "Engineering",
        "SJB",
        "Institute",
        "Technology",
        "Bengaluru",
        "Karnataka"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:26:49.770377",
    "resume_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Capital One Richmond VA Worked extensively with Java 8 Multithreading Transaction Management Exception Handling and Collections achieving features of functional languages thus ensuring the clarity for the other developers Experience in frameworks like Spring MVC and Struts MVC architecture interceptors action mappings and resource builders Worked with various frameworks in spring such as Spring IOC AOP Spring transaction Management Spring Data Spring JDBC Spring Batch Spring Boot Spring REST Spring JTA Spring IO Spring Cloud and Spring Security Spring security Site Minder Solid experience with various web MVC monolithic frameworks such as JSF Spring MVC and Struts Developed and deployed Micro Services based applications using Spring Boot and Spring Cloud Developed projects on SOA Service Oriented Architecture and Microservices Architecture with RESTful services JAXRS with Spring Boot Spring MVC and implemented SOAP JAXWS Apache CXF WADL WSDL Solid Experience with Java based ORM frameworks such as Hibernate Spring Data and Ibatis Proficient in using Spring Data JPA that helped in creating automatic Data Access Objects DAOs at the compile time Worked with spring cloud config Ribbon Hystrix and Zuul APIGateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage authentication monitoring services and routing Extensive experience in FrontEnd UI technologies like HTML5 CSS3 SASS LESS Bootstrap JS DOM in developing dynamic and responsive web pages Extensively used JavaScriptTypescript Ajax and JSON to build highly interactive web pages Strong experience in developing Single Page Application SPA using MEAN Mongo Express Angular and Node stack Developed numbers of Typescripts ES6 objects including Components ngModules Providers Services Interfaces and classes utilizing arrow function and optional types Experienced in Various Angular 2040 Backbone JS Knockout JS and Ext JS for rapid CRUD frontend app development and to achieve MVC design flow Proficient in usingHapiJS thatenabled to focus on writing reusable application logic with builtin support for input validation caching authentication and other essential facilities for building web and services applications Involved in developing a fullfledged REST API server with an open source NoSQL database that uses a documentoriented data model MongoDB and Mongoose connector Proficient in using RDBMS concepts and worked with Oracle 8i9i10g11i SQL server and good experience in writing stored procedures functions and triggers using PLSQL JDBC ODBC and JNDI in WebLogic server Excellent experience with Relational databases like MySQL Oracle SQL Server DB2 and No SQL Databases like CouchDB and Cassandra Good understanding of React JS and working with Redux Flux architecture Implemented security functionality for various projects using spring security and Site minder SSO Professional experience in Log4J for extensible logging debugging and error tracing Worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver Experience with build tools like Ant Maven and Gradle for building applications to different environments Extensive hands on experience in setting up CDCI pipelines using Jenkins Bamboo and GoCD Experience in using DevOps tools like Puppet Chef and Docker Good Knowledge in documentation of REST APIs using Swagger 2 and WADL Proficient in using clientside JavaScript build runners namely Bower Grunt Gulp and Web pack Expertise in integration testing automation framework like Selenium automation using Selenium WebDriver Selenium Grid Proficient in writing unit tests for JavaScript based Applications using Karma Jasmine Mocha and Chai testing frameworks Wrote comprehensive test cases and test plans using JUnit TestNG Spock and Mockito for Java based backend applications Designed and created highly scalable highly available fault tolerant highly secured distributed infrastructure IAAS using AWS EC2 instances S3 SQS EBS ELB API Gateway Route 53 CloudFront Auto Scaling Elastic Bean Stalk IAM ECS VPC Cloud Watch Cloud Trial RDS SNS SQS Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Authenticated Users accessing RESTful services using Oauth 20 OIDC and JWT Json Web token Experience in messaging queue services like JMS IBM MQ Rabbit MQ Active MQ and Apache Kafka Extensive experience in Deploying and Configuring Application Web Servers such as Oracle WebLogic IBM WebSphere JBoss Glassfish and Apache Tomcat Worked with Log Monitoring tools like Splunk and ELK Elastic Search Kibana and Logstash Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business Rules Engine Proficient in applying design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Used various version control software such as SVN GIT CVS Big Bucket for maintaining code repositories Work Experience Full Stack Developer Capital One Richmond VA October 2018 to Present Description Capital One Financial Corporation isa bank holding company specializing in credit cards auto loans banking and savings accountsheadquartered in McLean Virginia Capital One is on a mission to change banking for good and to help people live their best lives Together we will build one of Americas leading informationbased technology companies Responsibilities I have been working as a full stack developer for developing the Application Program Interface APIs using the Java18 as a language and Spring as a Framework Actively involved in Analysis Design Development System Testing and User Acceptance Testing Followed Agile methodology in the Scrum Cycle model Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring micro services Designed and Implemented SPA single page application using Angular4 Module Component Template Metadata Data Binding Directives and Dependency Injection Created Typescript reusable components and services to consume REST APIs using componentbased architecture provided by Angular4 Creating generic service which have async capability and details description about observables Optimized the performance of application using Angular 4 Lazy Loading and ahead of time compilation Used ngrxstore container to manage the application state and ReducersActions to manipulate the state and ngrxeffects to load blogs to store in Angular 4 To allow fully encapsulate custom elements created custom elements HTML imports and Shadow Dom using Angular 4 and implemented Angular Router to enable navigation from one view to the next as user performs application task Implemented the security APIs with access token along with Api key for external consumers Extensive experience working with APIGEE policies of traffic Management Security and Mediations Involved in the implementation of JWT Token which is used across the enterprise for the authentication and authorization of the users who can access the program Configured Docker container service and build pipeline JenkinsCICD tool for continuous integrating and deploying application on servers Performed configuration deployment and support of cloud services including Amazon Web Services AWS Launch various AWS EC2 instance to deploy the application Performed queuing services for the cloud data processing for certain tasks like file upload data processing notice to the OnPremise application using the AWS service SQS AWS Queuing System Used Kubernetes as a portable extensible opensource platform for managing containerized workloads and services that facilitates both declarative configuration and automation Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Netflix OSS spring cloud Used Apache Kafka in cluster as messaging system between the API sand microservices and worked on Splunk search processing language SPL queries reports dashboard and logging using Log4J Implemented Relational Data Base like Oracle and PLSQL store procedures Implemented NoSQL database like Cassandra to store key values for data analytics which is used as a Database for project Worked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser For back end testing we used Junit and Mockito for unit testing and embedded databases like HSQL and function testing we use Spring MVC mock Implemented unit test cases using Karma and Jasmine on client side Environment Angular 4 Java 18 TypeScript J2EE XML JSF Hibernate SQLPLSQL Spring Boot Oracle10g XMI CSS Log4j Subversion JQuery JBoss Application Server Maven Eclipse RALLY UNIX Cassandra 30 AWS S3 EC2 ECS ECR IAM EBS JUnit TestNG Full Stack Developer AutoZone Inc Memphis TN October 2017 to August 2018 Description AutoZone Inc is an American retailer of automotive parts and accessories the largest in the United States AutoZone aims to develop a software application that reduces the gap between the time taken to purchase an item in store to an online purchase which accelerates the process of delivering an automotive part to the customer Thus achieves its primary goal customer satisfaction Responsibilities Developed use cases drawn sequence diagrams and class diagrams for the application and responsible for writing program and functional specifications Involved in total Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot and Apache CXF framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Experience in integrating the internal security model into new projects with Spring Batch Spring MicroServices and Spring Boot Pivotal Cloud Foundry and Netflix Eureka Designing and developed Micro Services using Mongo DB Express JS React JS and Node Js Used Redux Framework architecture like Reducers Containers Saga for integrating the data with ReactNative Application and created and used Reducers that received said Actions to modify Store State Tree Developed the Drag and Drop functionality using ReactDragabble Used ReactAutocomplete for creating google maps location search on the webpage Handled Http Requests using Axios which supports Promise API functionality native to JZ oracle Developed responsive applications using Bootstrapjs Requirejs and Nodejs D3js which allowed the same application to be optimized for both mobile and desktop resolutions Created and consumed RESTful API using Expressjs to provide centralized logic and reusable data retrieval build on top ofNodejs Implemented Nodejs router to make crossdomain requests to API services like GitHub API MongoDB Used Nodejs to run Grunt tasks and compile minify concat and build the project properly Worked with build tools like NPM Bower and Grunt Used continuous build using Jenkins and supported the Application for production deployment and postproduction Worked with the Pivotal Cloud Foundry services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service Deployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform Configured Docker container service and build pipeline Jenkins CICD tool for continuous integrating and deploying application on servers Implemented OAuth 20 Basic AUTH and API Key policies for API Security Designed Developed and maintained Postgre SQL Database architecture Developed back end interfaces using SQL packages stored procedures Functions Procedure Anonymous SQL programs Exception Handling in PLSQL programs Developed unit test cases using Mocha and Chai as unit test runner to test various React JS components Worked on the Splunk architecture and various components indexer forwarder search head deployment server Universal and Heavy forwarder Environment Reactjs Expressjs Nodejs Babel Redux Docker Jenkins Pivotal Cloud Foundry Mongo DB 32 Mongoose Connector Chai Mocha Log4j MAVEN 30 Senior Java Developer Charter Communication Long Beach CADuration October 2016 to September 2017 Description Client is one of the Internet service providers in Aurora The Spectrum Guide team oversees the infrastructure and configuration management for Charters largest application Our goal is to run applications through a repeatable reliable and secure process Spectrum is a rebranding initiative intended to create a consistent marketing message for the variety of residential and commercial offerings created when legacy Charter merged with Time Warner Cable TWC and Bright house Networks BHN The Spectrum TV Application merges several areas of IPbased development into one consumerfacing product and is the first step towards unifying the protocols software systems technologies and experiences from a customer perspective The Spectrum TV App STVA Program is comprised of multiple projects and supported by multiple delivery teams from across Charter Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using Agile methodology for building Service Oriented Architecture SOA Involved in developing user interface with HTML CSS3 SAAS JSON Created a custom responsive web application to replace a legacy lineof business web application using Angular JS Developing and designing SPA user interfaces in AngularJS Worked on Front end by using AngularJS JavaScript Used Angularjs for connecting the APIs using Angularjs http service Designed dynamic and multi browser compatible pages using AngularJS and JavaScript Utilized various JavaScript and jQuery libraries AJAX for form validation and other interactive features Used Spring MVC and Dependency Injection for handling presentation and business logic Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Integrated Spring DAO for data access using Hibernate and handled Transaction Management using the provided data Responsible for designing Hibernate mapping files based on business logic and Object relationships Used Hibernate as Persistence framework mapping the ORM objects to table using Hibernate annotations Developed and consumed SOAP Web Services using JAXWS and Apache CXF Used Jersey to consume HTTPbased RESTful Web Services Used Uniform Interface Concept of REST to build API Responsible to write the different service classes and utility API which will be used across the framework Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Configured Hibernate second level cache using EH Cache to reduce the number of hits to configuration table data Using second level cache EH Cache store entities between sessions scope in the session factory to redundant database calls Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Configured EC2 instance and Route53 for DNS hosting on AWS for dev environment and used AJAX framework for server communication and seamless user experience Worked on Proof of Concept for developing application using Node Js and Mongo DB Used Require Js to improve speed and quality of the code and Log4j for the logging the output to the files Created automation framework and test scripts using Selenium WebDriver for multiple platforms and browsers testing Environment JDK 18 SpringDI MVC Transaction Management AOP JSP JSPEL JSTL Servlets AWS Oracle SOA TOAD HTML CSS XML Angular JS ESB SOAP REST JAXRS Log4J Adobe Dreamweaver Junit Log4J Sun Jersey Quality Center AJAX Hibernate Associate Java Developer Easylink Chennai Tamil Nadu August 2015 to July 2016 Description EasyLinks team of professionals work together to achieve a single goal delivering to your bottom line EasyLink offers a turnkey solution for all your ebusiness needs The most successful websites on the internet focus on being user oriented instead of technology oriented The underlying advantage of User Centered Design UCD is that the best products services result from understanding the need of the end users the people who are going to use it Responsibilities UsedUnderscorejs and Handlebarjsfor templating in most of the code while used Backbonejs as an MVC framework and used java script frameworks like jQuery Extensively used CSS and Bootstrap for styling the HTML elements Developed dynamic web pages using HTML5 CSS3 Bootstrap Less CSS3SASS and AJAX Development of Action Forms Action Servlets Action and Validating Action Forms in Struts framework Transformed Navigated and Formatted XML documents using XSL XSLT Developed application service components and configured beans using Spring IOC Used JNDI to perform lookup services for the various components of the system Worked with messaging queue services like Rabbit MQ Implemented Backbone Js CRUD operations Create Read Update and Delete and Paginator for pagination for Tables Developed and consumed SOAP Web Services using JAXWS and Apache CXF Involved in migrating code from SOAP to RESTful services Written IBatis criteria queries for data retrievals and have performed the ORM mappings to map java entities to database tables Developed Rest Ful web services in MULE ESB based on Service Oriented Architecture SOA and used AXIS to send service requests to Web Services Used Rabbit MQ for transport of data in Queue in between components of the application Extensively used Java 8 Collections APIs Multithreading in handling batch service requests Developed deployment descriptors for the EJB have to deploy on Web logic Application Server Used MAVEN for project management and build automation Developed code for handling bean references in spring framework using Dependency Injection DI using annotations Developed stored procedures and triggers using PLSQL in order to calculate and update the tables to implement business logic Good working knowledge of tuning and debugging SQL queries and PLSQL code Performed unit testing using JUnit framework with Mockito Experience in Unix and Shell Scripting Environment HTML v30 CSS v30 Java v7 JSF SERVLETS JSF Prime Faces JavaScript JQuery XMLJNDI AJAXSOAP JAXWS WSDL Apache Axis SQL PLSQL Hibernate Spring Oracle Rabbit MQ v20 TOMCAT server Log4J JUnit Mockito Eclipse Maven JIRA Junior Java Developer Faujnet Solutions Private Limited Bengaluru Karnataka July 2013 to June 2015 Description This project is to automate and reduce the manual process on recruitment and interview scheduling As a First Phase we released the product only for Add Candidate and Edit Candidate In the second and final phase we focused on the other modules of RMS Application Data Collector is a webbased tool that requires zero development skills and simplifies the online form creation process for intranet and extranet users The data can be viewed as an aggregated view bar charts as a table view by record or a report view The collected data is stored in a SQL database backedup and maintained by the MIS database Responsibilities Responsible and active in the analysis definition design implementation management and deployment of full software development lifecycle of project Wrote objectoriented JavaScript for transparent presentation of both client and serverside validation Developed User Interface and implementing business process using HTML JSP and Servlets Development of the application that was used to create dynamic JSPs given input from a database table containing information about the contents of the JSP being developed Involved in writing the presentation layer in Java Server Pages JSP Developed deployment descriptors for the EJB have to deploy on Web logic Application Server Developed and implemented the MVC Architectural pattern using STRUTS framework including JSP Servlets and EJB Used Require Js to improve speed and quality of the code and Log4j for the logging the output to the files Monitored the error logs using Log4J and fixing the problem using Junit and Mockito extensively for testing Wrote Servlet programming for the communication between web browser and server Used multithreading in programming to improve overall performance Responsible for coding SQL Statements and Stored procedures for back end communication using JDBC Developed an API to write XML documents from a database Utilized XML and XSL transformation for dynamic webcontent and database connectivity Generated Jar files are deployed on Apache Tomcat Server Environment Java J2EE JSP HTML CSS XML Java Script Eclipse XML JBoss JMS SQL Developer SQLOracleDB2Log4jJunit Education Bachelors in Electronics and Communication Engineering in Electronics and Communication Engineering SJB Institute of Technology Bengaluru Karnataka",
    "unique_id": "b8a8a357-db4e-4eb7-ad30-8f1ba1f124c2"
}