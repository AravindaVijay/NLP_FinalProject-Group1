{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Walmart New York NY NY Over 5 years of IT experience in Analysis Design Development Implementation and Testing of various standalone and clientserver architecture based enterprise application software in Python on various domains Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Strong experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib Pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Expert in Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python and Django Handy experience in developing WebApplications implementing Model View Control architecture using Django and Flask frameworks Proficient in Front end development experience using 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Good experience with Python frameworks like Flask and WebApp2 Experienced in developing webbased applications using Pyth Django MVC3 Bootstrap HTML and Angularjs Good experience with Python frameworks like Flask and WebApp2 Experienced in developing Web Services with Python programming language Experience in Amazon AWS Cloud platform and its features Experience in developing web services WSDL SOAP and REST and consuming web services with Python programming language Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experience in managing datasets using Panda data frames and MySQL Experience implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB and Cassandra Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Handled potential points of failure through error handling and communication of failure Implemented configuration changes for data models Troubleshoot the process execution and worked with other team members to correct them Excellent working knowledge in UNIX and Linux shell environments using command line utilities Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Walmart Potsdam NY June 2018 to Present Responsibility Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Jenkins for continuous integration services Used Pandas library for statistical Analysis Used the Django Framework to develop the application Build all database mapping classes using Django models Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Worked with JSON based REST Web services and Amazon Web services AWS Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Developed internal auxiliary web apps using Python Flask framework with Angularjs and Bootstrap CSS HTML framework Set up rules and policies with a Nodejs Python back end Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created a Git repository and added the project to GitHub Used Flask framework for application development Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Java PyUnit Pandas HTML DHTML AJAX CSS JavaScript Django Jenkins Amazon Web Services AWS JSON REST Angularjs Bootstrap Nodejs Git JIRA Perl SQL Agile windows and Linux Python Developer Ally Financial Detroit MI November 2014 to December 2016 Responsibility Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Performed testing using Djangos Test Module Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on Python Open stack APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed Business Logic using Python on Django Web Framework Carried out various mathematical operations for calculation purpose using Python libraries Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Managed large datasets using Panda data frames and MySQL Worked with JSON based REST Web services Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Used GitHub for version control Created PyUnit test cases for unit testing Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Utilized Agile process and JIRA issue management to track sprint cycles Managed large datasets using Panda data frames and MySQL Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Supported user groups by handling targetrelated software issuesservice requests identifyingfixing bugs Used data types like dictionaries tuples and object oriented concepts based inheritance features for making complex algorithms of networks Environment Python 3x Django JavaScript JQuery JSON DOJO Bootstrap Nodejs Angularjs HTML DHTML AJAX CSS Open Stack API Panda ANT Jenkins Rake JIRA Agile SQL Windows Python Developer Citi Bank New York NY July 2012 to June 2014 Responsibility Built a GC analytic tool using Python to help clients analyze data and profile risk against a wide spectrum of reinsurance options Developed custom reports using HTML Python and MySQL Developed monitoring and notification tools using Python Documented the revised workflow using confluence wiki Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Python based GUI components for the frontend functionality such as selection criteria Key performance index and filtering of displayed columns to help customers understanding the analytic data Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in MySQL and Native SQL Created PyUnit test cases for unit testing Involved in Developing a Restful service using Python Flask framework Worked with JSON based REST Web services and Amazon Web services AWS Added the navigations and paginations and filtering columns and adding and removing the desired columns for view Used GitHub for version control Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Used PyQuery for selecting particular DOM elements when parsing HTML Worked in an agile development environment Environment Python PyQT PyQuery MySQL HTML CSS JavaScript DOM Ajax AWS JSON agile Web Services SOAP XML PLSQL and Oracle SQL Python Education Masters Skills AJAX 4 years CSS 4 years HTML 4 years JavaScript 4 years Python 4 years Git PHP Android ASP MySQL Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL PHP Python Framework FlaskDjango Angular JS Java Script JQuery and Nodejs Databases MS SQL MySQL Oracle Web Technologies XML CSS HTML DHTML JavaScript JQuery MVC3 Bootstrap RESTful AJAX Web Services SOAP REST Methodologies Agile Scrum Operating Systems Window UNIX Linux",
    "entities": [
        "Python Flask",
        "Native SQL Created PyUnit",
        "GUI",
        "Amazon AWS Cloud",
        "UNIX",
        "Windows Created",
        "Interfacing",
        "Utilize PyUnit",
        "Detroit",
        "OpenStack",
        "Panda",
        "Flask Admin MySQL",
        "Model View Control MVC",
        "XML",
        "DHTML",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "Created PyUnit",
        "Bootstrap CSS",
        "Utilized Agile",
        "JIRA",
        "MySQL Worked",
        "Analysis Design Development Implementation and Testing",
        "Shell",
        "Amazon",
        "Oracle SQL Python Education Masters Skills",
        "WebSphere",
        "HTML Python",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "Integrated Development Environments",
        "Developed",
        "Developed Business Logic",
        "Git",
        "Responsibility Involved",
        "GC",
        "Develop",
        "Created Data",
        "Flask",
        "DOM",
        "Views",
        "PyQt",
        "Oracle Web Technologies XML CSS",
        "AWS Involved",
        "Developed SQL Queries Stored Procedures",
        "Djangos Test Module Designed",
        "API",
        "WebSphere WebLogic Tomcat Web Servers",
        "NGINX",
        "QA",
        "Nodejs Python",
        "Python Developer Walmart New York",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "GitHub Used Flask",
        "Generated Python Django Forms",
        "Pyth Django MVC3",
        "SQL",
        "Oracle SQL",
        "GitHub",
        "lPythonspan",
        "Nginx",
        "SQL Alchemy",
        "Wireshark",
        "Model View Control",
        "MVW",
        "Amazon AWS",
        "Present Responsibility Involved",
        "google analytics",
        "Pandas",
        "Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL PHP",
        "Build",
        "Performed",
        "Djangos",
        "Front",
        "WebApplications",
        "REST",
        "Developer Citi Bank New York",
        "Troubleshoot",
        "Node"
    ],
    "experience": "Experience in Amazon AWS Cloud platform and its features Experience in developing web services WSDL SOAP and REST and consuming web services with Python programming language Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11 g WebSphere 70 85 Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experience in managing datasets using Panda data frames and MySQL Experience implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB and Cassandra Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Handled potential points of failure through error handling and communication of failure Implemented configuration changes for data models Troubleshoot the process execution and worked with other team members to correct them Excellent working knowledge in UNIX and Linux shell environments using command line utilities Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Walmart Potsdam NY June 2018 to Present Responsibility Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Jenkins for continuous integration services Used Pandas library for statistical Analysis Used the Django Framework to develop the application Build all database mapping classes using Django models Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Worked with JSON based REST Web services and Amazon Web services AWS Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Developed internal auxiliary web apps using Python Flask framework with Angularjs and Bootstrap CSS HTML framework Set up rules and policies with a Nodejs Python back end Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created a Git repository and added the project to GitHub Used Flask framework for application development Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Java PyUnit Pandas HTML DHTML AJAX CSS JavaScript Django Jenkins Amazon Web Services AWS JSON REST Angularjs Bootstrap Nodejs Git JIRA Perl SQL Agile windows and Linux Python Developer Ally Financial Detroit MI November 2014 to December 2016 Responsibility Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Performed testing using Djangos Test Module Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on Python Open stack APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed Business Logic using Python on Django Web Framework Carried out various mathematical operations for calculation purpose using Python libraries Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Managed large datasets using Panda data frames and MySQL Worked with JSON based REST Web services Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Used GitHub for version control Created PyUnit test cases for unit testing Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Utilized Agile process and JIRA issue management to track sprint cycles Managed large datasets using Panda data frames and MySQL Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Supported user groups by handling targetrelated software issuesservice requests identifyingfixing bugs Used data types like dictionaries tuples and object oriented concepts based inheritance features for making complex algorithms of networks Environment Python 3x Django JavaScript JQuery JSON DOJO Bootstrap Nodejs Angularjs HTML DHTML AJAX CSS Open Stack API Panda ANT Jenkins Rake JIRA Agile SQL Windows Python Developer Citi Bank New York NY July 2012 to June 2014 Responsibility Built a GC analytic tool using Python to help clients analyze data and profile risk against a wide spectrum of reinsurance options Developed custom reports using HTML Python and MySQL Developed monitoring and notification tools using Python Documented the revised workflow using confluence wiki Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Python based GUI components for the frontend functionality such as selection criteria Key performance index and filtering of displayed columns to help customers understanding the analytic data Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in MySQL and Native SQL Created PyUnit test cases for unit testing Involved in Developing a Restful service using Python Flask framework Worked with JSON based REST Web services and Amazon Web services AWS Added the navigations and paginations and filtering columns and adding and removing the desired columns for view Used GitHub for version control Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Used PyQuery for selecting particular DOM elements when parsing HTML Worked in an agile development environment Environment Python PyQT PyQuery MySQL HTML CSS JavaScript DOM Ajax AWS JSON agile Web Services SOAP XML PLSQL and Oracle SQL Python Education Masters Skills AJAX 4 years CSS 4 years HTML 4 years JavaScript 4 years Python 4 years Git PHP Android ASP MySQL Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL PHP Python Framework FlaskDjango Angular JS Java Script JQuery and Nodejs Databases MS SQL MySQL Oracle Web Technologies XML CSS HTML DHTML JavaScript JQuery MVC3 Bootstrap RESTful AJAX Web Services SOAP REST Methodologies Agile Scrum Operating Systems Window UNIX Linux",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Walmart",
        "New",
        "York",
        "NY",
        "NY",
        "years",
        "IT",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "standalone",
        "architecture",
        "enterprise",
        "application",
        "software",
        "Python",
        "domains",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "scipy",
        "matplotlib",
        "Pythontwitter",
        "Pandas",
        "networkx",
        "urllib2",
        "MySQLdb",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Expert",
        "Enhancement",
        "Support",
        "Implementation",
        "web",
        "standalone",
        "enterprise",
        "applications",
        "Python",
        "Django",
        "Handy",
        "experience",
        "WebApplications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "frameworks",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JSON",
        "Angularjs",
        "Nodejs",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "Node",
        "JS",
        "experience",
        "Python",
        "frameworks",
        "Flask",
        "WebApp2",
        "applications",
        "Pyth",
        "Django",
        "MVC3",
        "Bootstrap",
        "HTML",
        "Angularjs",
        "Good",
        "experience",
        "Python",
        "frameworks",
        "Flask",
        "WebApp2",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Experience",
        "Amazon",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "Python",
        "programming",
        "language",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "Application",
        "Servers",
        "WebSphere",
        "WebLogic",
        "Tomcat",
        "Web",
        "Servers",
        "Apache",
        "server",
        "NGINX",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "Eclipse",
        "MyEclipse",
        "JDeveloper",
        "RAD",
        "Experience",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Experience",
        "Object",
        "Python",
        "Hash",
        "Tables",
        "Dictionaries",
        "Multithreading",
        "Django",
        "MYSQL",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "noSQL",
        "MongoDB",
        "Cassandra",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "configuration",
        "changes",
        "data",
        "models",
        "Troubleshoot",
        "process",
        "execution",
        "team",
        "members",
        "knowledge",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "Ability",
        "technologies",
        "communication",
        "skills",
        "team",
        "player",
        "ability",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Walmart",
        "Potsdam",
        "NY",
        "June",
        "Present",
        "Responsibility",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "solution",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Generated",
        "Python",
        "Django",
        "data",
        "users",
        "Utilize",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Python",
        "batch",
        "processors",
        "feeds",
        "testing",
        "tools",
        "Python",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "websites",
        "data",
        "options",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Jenkins",
        "integration",
        "services",
        "Pandas",
        "library",
        "Analysis",
        "Django",
        "Framework",
        "application",
        "Build",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "AJAX",
        "application",
        "web",
        "servicesAPI",
        "response",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "Angularjs",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "rules",
        "policies",
        "Nodejs",
        "Python",
        "end",
        "web",
        "middleware",
        "end",
        "systems",
        "Python",
        "SQL",
        "Perl",
        "Linux",
        "Windows",
        "Git",
        "repository",
        "project",
        "Flask",
        "framework",
        "application",
        "development",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "3x",
        "Java",
        "PyUnit",
        "Pandas",
        "HTML",
        "DHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Django",
        "Jenkins",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "REST",
        "Angularjs",
        "Bootstrap",
        "Nodejs",
        "Git",
        "JIRA",
        "Perl",
        "SQL",
        "Agile",
        "windows",
        "Linux",
        "Python",
        "Developer",
        "Ally",
        "Financial",
        "Detroit",
        "MI",
        "November",
        "December",
        "Responsibility",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "stack",
        "APIs",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "JSON",
        "REST",
        "Web",
        "services",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "Developed",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "SQL",
        "GitHub",
        "version",
        "control",
        "Created",
        "PyUnit",
        "test",
        "cases",
        "unit",
        "testing",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "user",
        "groups",
        "software",
        "issuesservice",
        "requests",
        "bugs",
        "data",
        "types",
        "dictionaries",
        "tuples",
        "concepts",
        "inheritance",
        "algorithms",
        "networks",
        "Environment",
        "Python",
        "Django",
        "JavaScript",
        "JQuery",
        "DOJO",
        "Bootstrap",
        "Nodejs",
        "Angularjs",
        "HTML",
        "DHTML",
        "AJAX",
        "CSS",
        "Open",
        "Stack",
        "API",
        "Panda",
        "ANT",
        "Jenkins",
        "Rake",
        "JIRA",
        "Agile",
        "SQL",
        "Windows",
        "Python",
        "Developer",
        "Citi",
        "Bank",
        "New",
        "York",
        "NY",
        "July",
        "June",
        "Responsibility",
        "GC",
        "tool",
        "Python",
        "clients",
        "data",
        "risk",
        "spectrum",
        "reinsurance",
        "options",
        "custom",
        "reports",
        "HTML",
        "Python",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "workflow",
        "confluence",
        "wiki",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "performance",
        "index",
        "filtering",
        "columns",
        "customers",
        "data",
        "navigation",
        "rules",
        "application",
        "page",
        "outcomes",
        "controllers",
        "annotations",
        "MySQL",
        "Native",
        "SQL",
        "Created",
        "PyUnit",
        "test",
        "cases",
        "unit",
        "testing",
        "service",
        "Python",
        "Flask",
        "framework",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "navigations",
        "paginations",
        "columns",
        "columns",
        "view",
        "GitHub",
        "version",
        "control",
        "admin",
        "sites",
        "database",
        "information",
        "Flask",
        "Admin",
        "MySQL",
        "SQLite",
        "Used",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "development",
        "environment",
        "Environment",
        "Python",
        "PyQT",
        "PyQuery",
        "MySQL",
        "HTML",
        "CSS",
        "JavaScript",
        "DOM",
        "Ajax",
        "AWS",
        "JSON",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "PLSQL",
        "Oracle",
        "SQL",
        "Python",
        "Education",
        "Masters",
        "Skills",
        "AJAX",
        "years",
        "CSS",
        "years",
        "HTML",
        "years",
        "JavaScript",
        "years",
        "Python",
        "years",
        "Git",
        "PHP",
        "Android",
        "ASP",
        "MySQL",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Python",
        "C",
        "Java",
        "Shell",
        "Script",
        "Perl",
        "SQL",
        "PHP",
        "Python",
        "Framework",
        "FlaskDjango",
        "Angular",
        "JS",
        "Java",
        "Script",
        "JQuery",
        "Nodejs",
        "Databases",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "Web",
        "Technologies",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "MVC3",
        "Bootstrap",
        "AJAX",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Methodologies",
        "Agile",
        "Scrum",
        "Operating",
        "Systems",
        "Window",
        "UNIX",
        "Linux"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:26:52.276412",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Walmart New York NY NY Over 5 years of IT experience in Analysis Design Development Implementation and Testing of various standalone and clientserver architecture based enterprise application software in Python on various domains Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Strong experience of software development in Python libraries used libraries Beautiful Soup numpy scipy matplotlib Pythontwitter Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Expert in Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python and Django Handy experience in developing WebApplications implementing Model View Control architecture using Django and Flask frameworks Proficient in Front end development experience using 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Good experience with Python frameworks like Flask and WebApp2 Experienced in developing webbased applications using Pyth Django MVC3 Bootstrap HTML and Angularjs Good experience with Python frameworks like Flask and WebApp2 Experienced in developing Web Services with Python programming language Experience in Amazon AWS Cloud platform and its features Experience in developing web services WSDL SOAP and REST and consuming web services with Python programming language Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Experience in managing datasets using Panda data frames and MySQL Experience implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Proficient in SQL databases MS SQL MySQL Oracle and noSQL databases MongoDB and Cassandra Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Handled potential points of failure through error handling and communication of failure Implemented configuration changes for data models Troubleshoot the process execution and worked with other team members to correct them Excellent working knowledge in UNIX and Linux shell environments using command line utilities Ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Walmart Potsdam NY June 2018 to Present Responsibility Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Wrote Python routines to log into the websites and fetch data for selected options Developed entire frontend and backend modules using Python on Django Web Framework Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Jenkins for continuous integration services Used Pandas library for statistical Analysis Used the Django Framework to develop the application Build all database mapping classes using Django models Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Worked with JSON based REST Web services and Amazon Web services AWS Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Developed internal auxiliary web apps using Python Flask framework with Angularjs and Bootstrap CSS HTML framework Set up rules and policies with a Nodejs Python back end Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created a Git repository and added the project to GitHub Used Flask framework for application development Utilized Agile process and JIRA issue management to track sprint cycles Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Java PyUnit Pandas HTML DHTML AJAX CSS JavaScript Django Jenkins Amazon Web Services AWS JSON REST Angularjs Bootstrap Nodejs Git JIRA Perl SQL Agile windows and Linux Python Developer Ally Financial Detroit MI November 2014 to December 2016 Responsibility Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Performed testing using Djangos Test Module Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on Python Open stack APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Developed Business Logic using Python on Django Web Framework Carried out various mathematical operations for calculation purpose using Python libraries Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Managed large datasets using Panda data frames and MySQL Worked with JSON based REST Web services Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Used GitHub for version control Created PyUnit test cases for unit testing Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Utilized Agile process and JIRA issue management to track sprint cycles Managed large datasets using Panda data frames and MySQL Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Supported user groups by handling targetrelated software issuesservice requests identifyingfixing bugs Used data types like dictionaries tuples and object oriented concepts based inheritance features for making complex algorithms of networks Environment Python 3x Django JavaScript JQuery JSON DOJO Bootstrap Nodejs Angularjs HTML DHTML AJAX CSS Open Stack API Panda ANT Jenkins Rake JIRA Agile SQL Windows Python Developer Citi Bank New York NY July 2012 to June 2014 Responsibility Built a GC analytic tool using Python to help clients analyze data and profile risk against a wide spectrum of reinsurance options Developed custom reports using HTML Python and MySQL Developed monitoring and notification tools using Python Documented the revised workflow using confluence wiki Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Used Python based GUI components for the frontend functionality such as selection criteria Key performance index and filtering of displayed columns to help customers understanding the analytic data Implemented navigation rules for the application and page outcomes written controllers using annotations Written queries in MySQL and Native SQL Created PyUnit test cases for unit testing Involved in Developing a Restful service using Python Flask framework Worked with JSON based REST Web services and Amazon Web services AWS Added the navigations and paginations and filtering columns and adding and removing the desired columns for view Used GitHub for version control Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Used PyQuery for selecting particular DOM elements when parsing HTML Worked in an agile development environment Environment Python PyQT PyQuery MySQL HTML CSS JavaScript DOM Ajax AWS JSON agile Web Services SOAP XML PLSQL and Oracle SQL Python Education Masters Skills AJAX 4 years CSS 4 years HTML 4 years JavaScript 4 years Python 4 years Git PHP Android ASP MySQL Additional Information Technical Skills Languages Python C Java Shell Script Perl SQL PHP Python Framework FlaskDjango Angular JS Java Script JQuery and Nodejs Databases MS SQL MySQL Oracle Web Technologies XML CSS HTML DHTML JavaScript JQuery MVC3 Bootstrap RESTful AJAX Web Services SOAP REST Methodologies Agile Scrum Operating Systems Window UNIX Linux",
    "unique_id": "1ef6f08f-ca7e-4083-ae68-717dd2b6b4ec"
}