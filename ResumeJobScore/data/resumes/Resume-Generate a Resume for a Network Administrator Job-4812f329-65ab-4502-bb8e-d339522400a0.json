{
    "clean_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Black Knight Financial Services Austin TX Around 7 years of strong software experience in Developing Testing Implementing Enterprise Applications using JavaJ2EE platform and webbased applications using Object Oriented Analysis and DesignOOAD Experienced on various SDLC Software Development Life Cycle like Waterfall Rapid Application Development RAD and Agile SCRUM models Strong experience in User Interface development using web technologies like HTML5 XHTML DHTML CSS3SAASLESS Bootstrap JAVASCRIPT JQUERY AJAX Experienced in MVVM Clientside JavaScript frameworks like Angular 2040and MVC frameworks like Backbone JS Ember Handlebar JS and Knockout JS Experience in React JS which is JavaScript library used for building reusable UI components Implemented React JS and worked with Redux and Fluxarchitecture Extensive experience with Core Java Multithreading Transaction Management Exception Handling Concurrency Collections Data Structures Lambda Expressions Functional Interfaces and JDBC Extensive working experience with various J2EE Frameworks like EJB Struts JSF JSP JSI Prime Faces Expert level skills in spring framework modules like Spring MVC Spring Batch Spring Security Spring Data Spring Boot Spring Cloud Spring JTA Spring AOP Spring Core HandsonexperienceindevelopingserversideJavaScriptframeworksusingNodeJS Hapi JS Express JS Handlebar JS Worked with Spring Cloud Config Hystrix Circuit Breaker Ribbon Apigee API gateway and Zuul APIGateway in the Spring Cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage and implemented security functionality OAuth 20 Spring security User Access Management JWT SSL and SiteMinder SSO Worked on WSDL and WADL implementing SOAP services using Axis2 and Apache CXF JAXWSframeworks Developed Restful web services using JAXRS in JERSEY Apache CXF to expose the data to springmodule Extensively worked on Micro Services with Spring Boot and created dynamic documentation for RESTful webservice usingSwagger Integrated Micro Services with Hibernate ORM using Spring Boot and wrote HQL queries for data access Expertise in creating Databases Tables Stored Procedure Triggers Views User defined data typesUDTCursors Functions data dictionaries and maintaining data integrity and Indexes using SQL Experience with SQL and PLSQL to query various Relational Database Management Systems including Oracle MS SQL MySQL DB2 and PostgreSQL and No SQL databases like Mongo DB CouchDBCassandra Dynamo DB and Graph DB Cassandra Node Driver Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business RulesEngine Hands on experience with build tools like ANT Maven Gradleand logging tools likeLog4J GoodunderstandingofClientsidebuildtoolslikeGulpNPMWebpackGruntand Bower Strong experience in integration tools like Apache CXF Apache Camel Spring Integration and Mule ESB to integrate the enterprise application technologies with existing JVMenvironment Experience in testing with JUnit Framework using Mockito and Easy Mock Spring Junit RunnerJMeter Worked on testing JavaScript structures utilizing Mocha and Chai Protractor Jasmine andKarma Strong Knowledge on automated java based behavioral testing and integration testing of the applications using Cucumber and Seleniumrespectively Experience in building and deployment of EAR WAR JAR files on different environments in IBM WebSphere Application Serverv7 Experience in deploying and configuring application servers such as Oracle WebLogic Glassfish IBM WebSphere Jbossand ApacheTomcat Sound learning on consistent mix and persistent improvement devices like Jenkins Hudson Puppet andBamboo Experience in Unix and Shell Scripting which allows the user to interact with OS Good knowledge in building real time dashboard applications using Elastic Search Logstash and Kibana ELK to profile and monitor the streaming data of theapplication ExperienceinWindowsAzureserviceslikePAASIAASandworkedonstorageslike Blob and SQL Azure Professional experience in Log4J for extensible logging debugging and errortracing Good Knowledge in Amazon Web Services Amazon SQS Amazon EC2 Amazon S3 Amazon Elastic Load Balancing Amazon Simple DB Amazon EBS Amazon Lambda and Amazon CloudFront Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Container Service Pivotal Application Service and Pivotal Functional Service Good experience using Docker for installing upgrading testing removing and running softwareapplications Good understanding of OpenShift platform in managing Docker containersand Kubernetes Clusters Made use of Apache Kafka Active MQ Rabbit MQ IBM MQ as a Message Oriented Middleware for coordinatingapplications UsedvariousversioncontrolsoftwaresuchasGITGITLABSVNCVSBigBucket for maintaining code repositories Work Experience Java Full Stack Developer Black Knight Financial Services Houston TX August 2018 to Present Description Black Knight is the industrys leading provider of technology data and analytics solutions that facilitate and automate many of the business processes across the mortgage lifecycle Black Knight is committed to being a premier business partner that lenders and servicers rely on to achieve their strategic goals realize greater success and better serve their customers by delivering bestinclass technology services and insight with a relentless commitment to excellence innovation integrity and leadership Responsibilities Implementation of the design wireframe using Angular 6 and creating services and exposing it to the backend which runs on Spring Boot Here we also have another layer that makes use of NodeJS mainly used for authentication authorization and session maintenance Developed UI application initially using Angular 40and made use of customized components Implemented customer side validations using Angular 60 and created services on UI for storing and retrieving data from UI to the backend Was under migration of the project converting angular components and updating router Modules Implemented the complete set up with configuration file changes from Angular 4 to Angular 6 Developed key services for authorization and authentication in Node server where we used LDAP Later migrated the authentication from LDAP to Ping AccessSSO Single Sign On Application Created sessions for Login user and setting session timed out for the entire UI application Strong understanding on clientside application and very good at attaining the architectural design for MVC using directives promises and pipes Involved in innovation of the current UI to make an implementation under mobile device access using cross platform technologies such as Ionic which helps in improving the business Involve in development design and implementation of the frontend application using HTML5 CSS3 AJAX Bootstrap 40 Made use of Reactive Forms using Angular 6where most of the validation is done using component rather than using templatedriven which provides in HTML Migrating existing application into REST based Micro services to provide all the CRUD capabilities using Spring Boot Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Made Services independent from each other by implementing Microservices concepts Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Building cloud Microservices and implemented backend using Spring Boot Implementation domain base classes providing basic properties using Spring Data Designed and developed RESTFUL web services using Spring Boot and Jersey framework NODE PACKAGE MANAGER NPM was used to list out the right versions of the packages and their dependencies for the project Worked on a project which handles searching algorithms using Elastic Search which is mainly used for pulling analytics related information using the keywords entered by the end user Authenticating Users and to provide the security to RESTful web services using OAUTH 20 Integrated the ORM Object Relational Mapping tool hibernate to the spring using Spring ORM in our app and used spring transaction API for database related transactions Configured JPA to use Hibernate as ORM tool Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Created persistence layer using Hibernate for sending and retrieving data from the database Implemented PLSQL queries and used Oracle stored procedures Written Stored Procedures using PLSQL and functions and procedure for common utilities using Oracle11g and MySQL Created dynamic schema design through NOSQLCouchDB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability Have experienced on developing web applications using Bootstrap Code Mirror Brackets and Emberjs Involved in the creation of interface to manage user menu and Bulk update of Attributes using NodeJS and jQuery Designed and developed the framework to consume web services hosted in Amazon EC2 instances Building cloud Microservices and implemented backend using Spring Boot And Authored application using Spring Cloud services spring version of Netflix OSSEureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Implemented Spring Cloud Netflix ZUUL to building micro services for communication Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor spring micro services writing serverside request handling and automated functional test cases to validate UI functionality using Nodejs Used Docker Container to address every application across the hybrid cloud and Docker for better collaboration and innovation Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the AWS stack Including EC2 S3 focusing on highavailability fault tolerance and autoscaling Configured AWS EC2 instances domain mapping via Route53 Environment JavaScript HTML5 CSS3LESS AJAX Bootstrap jQuery Spring Security Rabbit MQ Node JS Express JS HTML5Bootstrap40 Site Minder Hibernate4xOIDC Eclipse Java EE Jenkins Log4j Redis Mongo DB Mongoose Connector Oracle JBoss Kibana Elastic search Log stash EBS Elastic Load Balancer Docker Apache tomcat Selenium Spock Karma Jasmine Mockito Junit mock MVC Kubernetes Dump Analysis Netflix Zuul Eureka Java Full Stack Developer Florida Blue Jacksonville FL February 2018 to July 2018 Description Florida Blue is a subsidiary of a notforprofit health solutions company dedicated to serving all Floridians in the pursuit of healthFlorida Blue is an independent licensee of the Blue Cross and Blue Shield Association serving residents and businesses in the state of Florida Responsibilities Involved in the creation of UI specification documents by interacting with business users and design documentation and data modelling for the entire project Expertise in using React JSRedux to build User Interface strong knowledge of state store middleware action creator reducer and container Developed user interface by using the React JS Redux for SPA development and implemented clientside Interface using React JS Written several Axios service calls like GET and POST to make REST service calls Implemented Virtual Dom for ClientSide view rendering services using React JS Proficient in writing react code with help of ECMAScript ES6 Written calls using FETCH API for fetching JSON data Implemented platform modules through spring Java micro and Nodejs services by employing Hapijs as well as frontend React JS Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the Spring bean profiling Worked with Spring Boot for automatic configuration and starter for Maven configuration and performed metrics and externalized configuration Developed RESTFUL web services using Spring Boot and Apace CXF framework Building cloud Microservices and implemented backend using Spring Boot Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Worked with JAVA8 features like Functional Interfaces Stream API for Bulk Data Operations Time API Transaction Management Concurrency API Collection API Calendar API Deployed our Application on Pivotal Cloud Foundry PCF which is used to reduce the development overhead by providing a ready to use platform Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Implemented Netflix OSS Open Source Software for Feasible changes after the deployment Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring microservices Implemented NoSQL database like Cassandra to store key values for data analytics which is used as a Database for this project Maintaining and troubleshooting Cassandra Clusters this includes monitoring and performing troubleshooting as per requirements Worked on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Used Kubernetes to create new cluster and container management tool Used Continuous delivery Continuous Integration CDCI tools Docker and Jenkins to deploy this application Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Used Apache Kafka in cluster as messaging system between the APIs and microservices and worked on Splunk search processing language SPL queries reports dashboard and logging using Log4J Project code build is done using MAVEN tool Worked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser Adopted JMS API to setup mail notification upon the success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Used Splunk to create charts for the log data and analyze log data to know customer expectations Authenticating Users and to provide the security to RESTful web services using OAUTH20 Tested REACT code on client side with CHAI testing framework and MOCHA as test runner Environment React JS Redux Hapi JS Node JS Web pack ECMA6 Mocha and Chai Spring Boot Spring cloud like Ribbon Hystrix Netflix ZUUL Micro services architecture Docker Jenkins Cassandra DB OAUTH Apache Kafka Splunk PCF Swagger Webpack JMS Maven Java Full Stack Developer Cerner Corporation Kansas City MO January 2017 to August 2017 Description Cerner is Health Care Industry which contributes to the systemic improvement of health care delivery and the health of communities Cerner helps transforming health care by eliminatingerror variance and waste forhealth care providers and consumers around the worldProject deals with Emergency department ED for the patients which help the doctors to trackthe patient health record It helps physician to keep track of the patient from the day he enters thehospital to the day he leaves the hospital Responsibilities Experience in building MEAN applications using Angular 20 NodeJS creating Web services components of RESTful Web services to interact with UI Interfaces using REST API with NodeJS ExpressJS and installing clientside dependencies using Bower Developed multiple POCs to create interface between Backend to Frontend by using MongoDB Express AngularJS and Node JS Strong experience in working on modern full stack JavaScript environment like MEAN Mongo Express Angular Node and Angular 20 Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Experience in working with RESTful Web Services and implementing RESTful APIs Experience of working on CSS Pre processors like LESS and SASS along with JavaScript task runners like Grunt JS Involved in the creation of interface to manage user menu and Bulk update of Attributes using Node JS and jQuery Involved in the development of presentation layer and GUI responsive development using JSP HTML5 CSSCSS3 Bootstrap used ClientSide validations were done using Angular20 XSLT and jQuery Implemented UI using Angular 20 for Customer Service Modules and Reports Used HTML and CSS for pages and Styling Created controllers and Angular components mainly Custom Components for Web pages using Angular CLI and Angular 20 Automated different Unit Test Cases using Jasmine and KarmaTesting Frameworks on Angular 20 and Mocha and Chai for react testing Used GULP for magnification of JavaScript files compilation of SAAS files into CSS and for monitoring the application Authenticating Users and to provide the security to RESTful web services using OAUTH 20 Used OAuth 20 as authorization code at the start during signing up into the application Developed test cases for each component in different panels using Junit reported and deployed using Jenkins Implemented RESTful based web services layer to interface with ORACLE and MySQL database using Jerseyws JAXWS JAXRS APIs Worked with Jenkins Continuous Integration and Continuous Deployment CICD Involve in development design and implementation of the frontend application using HTML5 CSS3 AJAX Bootstrap 40 Developed external page using jQuery inside a container when a tab is clicked on via Ajax call and to support auto mode Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Developed application using formbased authentication using Angular JS jQuery and CSS Designed RESTful webservices with JSON representation for handling AJAX requests Created new REST web services and modified existing web services WADLs web application Description Language Also used SOAP UI tool to create test cases and quickly unit test the web service code Created testcases for different test scenarios and integrated the test suite to Jenkins Followed Agile daily Scrum methodology for development process and lead a small offshore development team Created dynamic schema design through NOSQL MongoDB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Shading Used Mongoose connector as ORM Framework to connect with MongoDB and worked with Mongoose libraries like validation type casting query building Designed and developed Spring Boot adapter applications using Rest API Worked with Netflix OSS Eureka service for service registration discovery and spring config for centralized configuration and Ribbon for load balancing at the client side using Spring Cloud Used Spring JPA to perform the CRUD operations and persist the data to the database Bottle microframework implemented with RESTful service and used WADL Web Application Description Language for modelling the resources provided by the services and relationships between them Implemented WebServices to integrate between different applications internal and thirdparty components using RESTful services Involved in developing Unit Test cases and testing the Application using REST Used Mockito for mock creation verification and stubbing Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Implemented Log4j mechanism for logging at different modules within the application Configured Kibana data visualization plugin for Elasticsearch and Logstash Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Used multithreaded environment to run the processes asynchronously using different future calls to access the data Implemented Netflix Zuul API gateway for all the requests from the devices and websites by registering services to Eureka Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Environment Angular 20 HTML5 CSS3 Type Script REACT JS Jasmine Karma GULP NODE PACKAGE MANAGER Spring Boot Cassandra Spring Data Nodejs Apache Kafka Docker AWS EC2 Jenkins Spring AOP Spring Cloud NetflixZuul Hystrix Swagger OAuth 20 Java Developer Faujnet Solutions Hyderabad Telangana August 2014 to July 2017 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules within this sub modules will maintain storing registering details of joining patient details and over all day activities maintains a database Responsibilities The application is designed using J2EE design patterns and technologies based on MVC based Monolithic architecture Front end interactive UI is developed using HTML CSS Jquery and Java script Agile methodology is used for development of the application Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQLStored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using StrutsFramework that leverages the classical ModelViewController MVC architecture Implemented persistence layer between the database and service layers with IBatisORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Involved in the development of underwriting process which involves communications without side systems and developed message Driven Beans for receiving and processing data using IBM MQ JMS Implemented Java Mail and used its thirdparty command line email to automate email sending and receiving in the application Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere EJB Session Beans were used to process request from user interface using OSS Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment Environment HTML CSS J query Java script DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Java Mail UNIX Shell Scripts JTA ANT IBM Web sphere IBM MQ JMS J2EE IBatis IBM WebSphere SOPA WSDL Spring IOC Spring AOP Junit Mokito Java Full Stack Developer Aspire Systems Hyderabad Telangana March 2012 to August 2014 DescriptionAspire Systems is a global technology services firm serving as a trusted technology partner for customers work with some of the worlds most innovative enterprises and independent softwarevendors helping them leverage technology and outsourcing in our specific areas of expertiseOur services include Product Engineering Enterprise Transformation Independent TestingServices and IT Infrastructure Support services Responsibilities Developed UI pages using HTML5 CSS3 JavaScript jQuery AJAX and JSON Developed client side validation code using Javascript and JQuery Developed AJAX Calls for Involved in various phases of Software Development Life Cycle SDLC on the application like Requirement gathering Design Analysis and Code Development Developed and implemented the MVC Architectural pattern using STRUTS 2x framework Implemented POJO based action by STRUTS and also utilized various Tag Support given by the STRUTS 2x Implemented interceptor which is invoke at preprocessing and post processing of a request in STRUTS 2x Implemented OGNL Object Graph Navigation Language of STRUTS 2x to simplify the accessibility of data stored in the ActionContext Loading data from Text Files to Database by using SQL Loader Implemented IBM WebSphere Application Server to deploy the application Worked with Log4J to capture the log that includes runtime exceptions Environment HTML5 CSS3 JavaScript JQuery AJAX JSON SDLC MVC Architectural STRUTS 2x SQL Loader IBM WebSphere Log4J Education Masters Skills AWT BEA BEA WEBLOGIC ECLIPSE EJB J2EE JAVA HIBERNATE SPRING JAX JAXB JAXRPC JAXWS JBOSS JMS JNDI jQuery JSF JSP JSTL Additional Information TECHNICALSKILLS JavaJ2EE Technologies Servlets JSTL JDBC JMS JNDI RMI EJB AWT Applets Multithreading Java Networking Programming Languages Java C C SQL PLSQL ApplicationWeb Servers OracleBEA WebLogic IBM WebSphere JBoss Apache Tomcat Frameworks APIs Struts Spring Spring Boot Hibernate JSF iBATIS JPA Angular JS Angular 204060 Backbone JS D3 React JS NodeJS IDEs Eclipse IBM RAD Net Beans MasterCraft Web technologies JSP JavaScript jQuery AJAX XML XSLT HTML DHTML CSS JSON Adobe Flex Spring MVC Angular JS Angular 204060 NodeJS Debugging Tools Firebug Chrome NoSQL database MongoDB Cassandra Web Services JAXWS JAXRPC JAXRS SOAP REST XML Parser JAXB Apache Axis DOM Methodologies Agile RUP TDD OOAD SDLC CICD Tools Jenkins XL Release Hudson Modeling Tools UML Design Patterns Rational Rose Visio Databases Oracle DB2 SQL Server MySQL MongoDB Version Control CVS GIT SVN Build Tools ANT Maven Gradle Jenkins Hudson",
    "entities": [
        "Micro Services",
        "JUnit Framework",
        "Implemented Spring Circuit",
        "MEAN Mongo Express",
        "AJAX",
        "GUI",
        "JS Express",
        "Nodejs",
        "Reactive Forms using Angular",
        "Jenkins Hudson Puppet andBamboo",
        "Attributes",
        "STRUTS",
        "Bulk",
        "Jersey",
        "HTTP",
        "Spring IOC",
        "JTA",
        "Implemented IBM",
        "Product Engineering Enterprise Transformation Independent TestingServices",
        "Health Care Industry",
        "SPL",
        "Blue Shield Association",
        "IBM",
        "Integrated Micro Services",
        "Oracle MS",
        "ActionContext",
        "Amazon Web Services AWS",
        "SQL Loader",
        "node",
        "Implemented React JS",
        "MasterCraft",
        "Florida Responsibilities Involved",
        "Telangana",
        "Auxiliary Services Each",
        "POST",
        "Route53",
        "OAuth",
        "NOSQL",
        "Business Rules Management System",
        "IBM WebSphere",
        "OSS Developed UNIX",
        "WebLogic",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "MQ IBM",
        "Kansas City",
        "JERSEY Apache CXF",
        "Custom Components",
        "Bootstrap Code Mirror Brackets",
        "JavaJ2EE",
        "Amazon",
        "Spring Boot",
        "Abstract Factory Created Stored Procedures Functions",
        "healthFlorida Blue",
        "Pivotal Functional Service Good",
        "Implemented WebServices",
        "AWT BEA BEA WEBLOGIC",
        "Developed",
        "LDAP",
        "JVMenvironment Experience",
        "Hapi JS Express",
        "NODE",
        "Grunt JS Involved",
        "Description Cerner",
        "Mockito",
        "Unit Test",
        "jQuery Implemented UI",
        "Implemented Virtual Dom",
        "MQ",
        "SpringHibernate API",
        "Spring Cloud",
        "GULP",
        "ORACLE",
        "Kubernetes Clusters Made",
        "HTML5",
        "Implemented Netflix Zuul API",
        "Waterfall Rapid Application",
        "Ribbon Hystrix Netflix ZUUL Micro",
        "JSP",
        "SAAS",
        "Ionic",
        "HTML Migrating",
        "Micro",
        "building micro services",
        "Worked",
        "Angular CLI",
        "Shell Scripting",
        "Jerseyws",
        "StrutsFramework",
        "Docker",
        "Monolithic architecture Front end interactive UI",
        "Jenkins CICD",
        "OS Good",
        "Views",
        "Monitored Micro Services",
        "Wrote Unit",
        "MVC",
        "Interface",
        "Authenticating Users",
        "EJB",
        "jQuery Designed",
        "GIT",
        "User Interface",
        "Node JS",
        "Cassandra Clusters",
        "API",
        "Dependency Injection IOC Annotations",
        "DescriptionAspire Systems",
        "OpenShift",
        "Drools",
        "Created",
        "Description Florida Blue",
        "Deployed and Monitored Micro Services",
        "AWS",
        "the Blue Cross",
        "Oracle",
        "Pivotal Container Service Pivotal Application Service",
        "KarmaTesting Frameworks on Angular",
        "Backbone JS",
        "the Spring Cloud Service Registry Implemented Netflix OSS Open Source Software",
        "React JS",
        "MVC Kubernetes Dump Analysis",
        "Netflix",
        "HTML",
        "AJAX Bootstrap 40 Developed",
        "DesignOOAD Experienced",
        "Apache Kafka Active",
        "RESTFUL",
        "Emberjs Involved",
        "SQL",
        "Business RulesEngine Hands",
        "spring micro",
        "React JS Proficient",
        "Amazon Web Services",
        "CSS Pre",
        "IO",
        "Spring IOC Protection",
        "Axis2",
        "React JSRedux",
        "MAVEN",
        "Nodejs Used Docker Container",
        "Apache CXF Apache",
        "JAXRS",
        "OAUTH",
        "Jenkins Followed Agile",
        "Hospital Management System",
        "IBM WebSphere Application",
        "Unit Test Cases",
        "Object Oriented Analysis",
        "Spring Data Designed",
        "CRUD",
        "Backend",
        "HTML CSS Jquery",
        "ANT Maven Gradleand",
        "Maven",
        "Hystrix",
        "Core Java Multithreading Transaction Management Exception Handling Concurrency Collections Data Structures Lambda Expressions Functional Interfaces",
        "MVC Business Delegate Session Facade Service Locator Data Access Object Singleton",
        "Hapijs",
        "JTA Spring AOP Spring Core",
        "GET",
        "JavaScript",
        "Text Files",
        "ANT",
        "UI",
        "java environment Environment HTML CSS",
        "Functional Interfaces Stream API for Bulk Data Operations Time API Transaction Management Concurrency API Collection",
        "Configured AWS EC2",
        "Continuous Integration",
        "EAR WAR JAR",
        "Amazon CloudFront Hands",
        "AJAX Bootstrap 40",
        "Cursor",
        "JSON Developed",
        "Expertise",
        "CSS",
        "SpringHibernate",
        "Handlebar JS Worked",
        "IBatisORM Involved",
        "Styling Created",
        "jQuery",
        "SPA",
        "REST",
        "Jenkins Implemented",
        "WebSphere JBoss",
        "Hibernate QL Created",
        "MySQL Created",
        "Developed UI",
        "Maintaining",
        "UI Interfaces",
        "jQuery Involved",
        "ORM Framework",
        "Continuous Deployment CICD Involve",
        "Application",
        "Routes",
        "User Access Management JWT SSL",
        "Relational Database Management Systems",
        "SQL Azure Professional",
        "the Spring Cloud Service Registry Deployed",
        "DOJO",
        "Node",
        "Oracle WebLogic",
        "MQ Rabbit",
        "CSS Designed"
    ],
    "experience": "Experience in React JS which is JavaScript library used for building reusable UI components Implemented React JS and worked with Redux and Fluxarchitecture Extensive experience with Core Java Multithreading Transaction Management Exception Handling Concurrency Collections Data Structures Lambda Expressions Functional Interfaces and JDBC Extensive working experience with various J2EE Frameworks like EJB Struts JSF JSP JSI Prime Faces Expert level skills in spring framework modules like Spring MVC Spring Batch Spring Security Spring Data Spring Boot Spring Cloud Spring JTA Spring AOP Spring Core HandsonexperienceindevelopingserversideJavaScriptframeworksusingNodeJS Hapi JS Express JS Handlebar JS Worked with Spring Cloud Config Hystrix Circuit Breaker Ribbon Apigee API gateway and Zuul APIGateway in the Spring Cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage and implemented security functionality OAuth 20 Spring security User Access Management JWT SSL and SiteMinder SSO Worked on WSDL and WADL implementing SOAP services using Axis2 and Apache CXF JAXWSframeworks Developed Restful web services using JAXRS in JERSEY Apache CXF to expose the data to springmodule Extensively worked on Micro Services with Spring Boot and created dynamic documentation for RESTful webservice usingSwagger Integrated Micro Services with Hibernate ORM using Spring Boot and wrote HQL queries for data access Expertise in creating Databases Tables Stored Procedure Triggers Views User defined data typesUDTCursors Functions data dictionaries and maintaining data integrity and Indexes using SQL Experience with SQL and PLSQL to query various Relational Database Management Systems including Oracle MS SQL MySQL DB2 and PostgreSQL and No SQL databases like Mongo DB CouchDBCassandra Dynamo DB and Graph DB Cassandra Node Driver Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business RulesEngine Hands on experience with build tools like ANT Maven Gradleand logging tools likeLog4J GoodunderstandingofClientsidebuildtoolslikeGulpNPMWebpackGruntand Bower Strong experience in integration tools like Apache CXF Apache Camel Spring Integration and Mule ESB to integrate the enterprise application technologies with existing JVMenvironment Experience in testing with JUnit Framework using Mockito and Easy Mock Spring Junit RunnerJMeter Worked on testing JavaScript structures utilizing Mocha and Chai Protractor Jasmine andKarma Strong Knowledge on automated java based behavioral testing and integration testing of the applications using Cucumber and Seleniumrespectively Experience in building and deployment of EAR WAR JAR files on different environments in IBM WebSphere Application Serverv7 Experience in deploying and configuring application servers such as Oracle WebLogic Glassfish IBM WebSphere Jbossand ApacheTomcat Sound learning on consistent mix and persistent improvement devices like Jenkins Hudson Puppet andBamboo Experience in Unix and Shell Scripting which allows the user to interact with OS Good knowledge in building real time dashboard applications using Elastic Search Logstash and Kibana ELK to profile and monitor the streaming data of theapplication ExperienceinWindowsAzureserviceslikePAASIAASandworkedonstorageslike Blob and SQL Azure Professional experience in Log4J for extensible logging debugging and errortracing Good Knowledge in Amazon Web Services Amazon SQS Amazon EC2 Amazon S3 Amazon Elastic Load Balancing Amazon Simple DB Amazon EBS Amazon Lambda and Amazon CloudFront Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Container Service Pivotal Application Service and Pivotal Functional Service Good experience using Docker for installing upgrading testing removing and running softwareapplications Good understanding of OpenShift platform in managing Docker containersand Kubernetes Clusters Made use of Apache Kafka Active MQ Rabbit MQ IBM MQ as a Message Oriented Middleware for coordinatingapplications UsedvariousversioncontrolsoftwaresuchasGITGITLABSVNCVSBigBucket for maintaining code repositories Work Experience Java Full Stack Developer Black Knight Financial Services Houston TX August 2018 to Present Description Black Knight is the industrys leading provider of technology data and analytics solutions that facilitate and automate many of the business processes across the mortgage lifecycle Black Knight is committed to being a premier business partner that lenders and servicers rely on to achieve their strategic goals realize greater success and better serve their customers by delivering bestinclass technology services and insight with a relentless commitment to excellence innovation integrity and leadership Responsibilities Implementation of the design wireframe using Angular 6 and creating services and exposing it to the backend which runs on Spring Boot Here we also have another layer that makes use of NodeJS mainly used for authentication authorization and session maintenance Developed UI application initially using Angular 40and made use of customized components Implemented customer side validations using Angular 60 and created services on UI for storing and retrieving data from UI to the backend Was under migration of the project converting angular components and updating router Modules Implemented the complete set up with configuration file changes from Angular 4 to Angular 6 Developed key services for authorization and authentication in Node server where we used LDAP Later migrated the authentication from LDAP to Ping AccessSSO Single Sign On Application Created sessions for Login user and setting session timed out for the entire UI application Strong understanding on clientside application and very good at attaining the architectural design for MVC using directives promises and pipes Involved in innovation of the current UI to make an implementation under mobile device access using cross platform technologies such as Ionic which helps in improving the business Involve in development design and implementation of the frontend application using HTML5 CSS3 AJAX Bootstrap 40 Made use of Reactive Forms using Angular 6where most of the validation is done using component rather than using templatedriven which provides in HTML Migrating existing application into REST based Micro services to provide all the CRUD capabilities using Spring Boot Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Made Services independent from each other by implementing Microservices concepts Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Building cloud Microservices and implemented backend using Spring Boot Implementation domain base classes providing basic properties using Spring Data Designed and developed RESTFUL web services using Spring Boot and Jersey framework NODE PACKAGE MANAGER NPM was used to list out the right versions of the packages and their dependencies for the project Worked on a project which handles searching algorithms using Elastic Search which is mainly used for pulling analytics related information using the keywords entered by the end user Authenticating Users and to provide the security to RESTful web services using OAUTH 20 Integrated the ORM Object Relational Mapping tool hibernate to the spring using Spring ORM in our app and used spring transaction API for database related transactions Configured JPA to use Hibernate as ORM tool Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Created persistence layer using Hibernate for sending and retrieving data from the database Implemented PLSQL queries and used Oracle stored procedures Written Stored Procedures using PLSQL and functions and procedure for common utilities using Oracle11 g and MySQL Created dynamic schema design through NOSQLCouchDB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability Have experienced on developing web applications using Bootstrap Code Mirror Brackets and Emberjs Involved in the creation of interface to manage user menu and Bulk update of Attributes using NodeJS and jQuery Designed and developed the framework to consume web services hosted in Amazon EC2 instances Building cloud Microservices and implemented backend using Spring Boot And Authored application using Spring Cloud services spring version of Netflix OSSEureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Implemented Spring Cloud Netflix ZUUL to building micro services for communication Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor spring micro services writing serverside request handling and automated functional test cases to validate UI functionality using Nodejs Used Docker Container to address every application across the hybrid cloud and Docker for better collaboration and innovation Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the AWS stack Including EC2 S3 focusing on highavailability fault tolerance and autoscaling Configured AWS EC2 instances domain mapping via Route53 Environment JavaScript HTML5 CSS3LESS AJAX Bootstrap jQuery Spring Security Rabbit MQ Node JS Express JS HTML5Bootstrap40 Site Minder Hibernate4xOIDC Eclipse Java EE Jenkins Log4j Redis Mongo DB Mongoose Connector Oracle JBoss Kibana Elastic search Log stash EBS Elastic Load Balancer Docker Apache tomcat Selenium Spock Karma Jasmine Mockito Junit mock MVC Kubernetes Dump Analysis Netflix Zuul Eureka Java Full Stack Developer Florida Blue Jacksonville FL February 2018 to July 2018 Description Florida Blue is a subsidiary of a notforprofit health solutions company dedicated to serving all Floridians in the pursuit of healthFlorida Blue is an independent licensee of the Blue Cross and Blue Shield Association serving residents and businesses in the state of Florida Responsibilities Involved in the creation of UI specification documents by interacting with business users and design documentation and data modelling for the entire project Expertise in using React JSRedux to build User Interface strong knowledge of state store middleware action creator reducer and container Developed user interface by using the React JS Redux for SPA development and implemented clientside Interface using React JS Written several Axios service calls like GET and POST to make REST service calls Implemented Virtual Dom for ClientSide view rendering services using React JS Proficient in writing react code with help of ECMAScript ES6 Written calls using FETCH API for fetching JSON data Implemented platform modules through spring Java micro and Nodejs services by employing Hapijs as well as frontend React JS Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the Spring bean profiling Worked with Spring Boot for automatic configuration and starter for Maven configuration and performed metrics and externalized configuration Developed RESTFUL web services using Spring Boot and Apace CXF framework Building cloud Microservices and implemented backend using Spring Boot Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Worked with JAVA8 features like Functional Interfaces Stream API for Bulk Data Operations Time API Transaction Management Concurrency API Collection API Calendar API Deployed our Application on Pivotal Cloud Foundry PCF which is used to reduce the development overhead by providing a ready to use platform Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Implemented Netflix OSS Open Source Software for Feasible changes after the deployment Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring microservices Implemented NoSQL database like Cassandra to store key values for data analytics which is used as a Database for this project Maintaining and troubleshooting Cassandra Clusters this includes monitoring and performing troubleshooting as per requirements Worked on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Used Kubernetes to create new cluster and container management tool Used Continuous delivery Continuous Integration CDCI tools Docker and Jenkins to deploy this application Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Used Apache Kafka in cluster as messaging system between the APIs and microservices and worked on Splunk search processing language SPL queries reports dashboard and logging using Log4J Project code build is done using MAVEN tool Worked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser Adopted JMS API to setup mail notification upon the success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Used Splunk to create charts for the log data and analyze log data to know customer expectations Authenticating Users and to provide the security to RESTful web services using OAUTH20 Tested REACT code on client side with CHAI testing framework and MOCHA as test runner Environment React JS Redux Hapi JS Node JS Web pack ECMA6 Mocha and Chai Spring Boot Spring cloud like Ribbon Hystrix Netflix ZUUL Micro services architecture Docker Jenkins Cassandra DB OAUTH Apache Kafka Splunk PCF Swagger Webpack JMS Maven Java Full Stack Developer Cerner Corporation Kansas City MO January 2017 to August 2017 Description Cerner is Health Care Industry which contributes to the systemic improvement of health care delivery and the health of communities Cerner helps transforming health care by eliminatingerror variance and waste forhealth care providers and consumers around the worldProject deals with Emergency department ED for the patients which help the doctors to trackthe patient health record It helps physician to keep track of the patient from the day he enters thehospital to the day he leaves the hospital Responsibilities Experience in building MEAN applications using Angular 20 NodeJS creating Web services components of RESTful Web services to interact with UI Interfaces using REST API with NodeJS ExpressJS and installing clientside dependencies using Bower Developed multiple POCs to create interface between Backend to Frontend by using MongoDB Express AngularJS and Node JS Strong experience in working on modern full stack JavaScript environment like MEAN Mongo Express Angular Node and Angular 20 Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Experience in working with RESTful Web Services and implementing RESTful APIs Experience of working on CSS Pre processors like LESS and SASS along with JavaScript task runners like Grunt JS Involved in the creation of interface to manage user menu and Bulk update of Attributes using Node JS and jQuery Involved in the development of presentation layer and GUI responsive development using JSP HTML5 CSSCSS3 Bootstrap used ClientSide validations were done using Angular20 XSLT and jQuery Implemented UI using Angular 20 for Customer Service Modules and Reports Used HTML and CSS for pages and Styling Created controllers and Angular components mainly Custom Components for Web pages using Angular CLI and Angular 20 Automated different Unit Test Cases using Jasmine and KarmaTesting Frameworks on Angular 20 and Mocha and Chai for react testing Used GULP for magnification of JavaScript files compilation of SAAS files into CSS and for monitoring the application Authenticating Users and to provide the security to RESTful web services using OAUTH 20 Used OAuth 20 as authorization code at the start during signing up into the application Developed test cases for each component in different panels using Junit reported and deployed using Jenkins Implemented RESTful based web services layer to interface with ORACLE and MySQL database using Jerseyws JAXWS JAXRS APIs Worked with Jenkins Continuous Integration and Continuous Deployment CICD Involve in development design and implementation of the frontend application using HTML5 CSS3 AJAX Bootstrap 40 Developed external page using jQuery inside a container when a tab is clicked on via Ajax call and to support auto mode Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Developed application using formbased authentication using Angular JS jQuery and CSS Designed RESTful webservices with JSON representation for handling AJAX requests Created new REST web services and modified existing web services WADLs web application Description Language Also used SOAP UI tool to create test cases and quickly unit test the web service code Created testcases for different test scenarios and integrated the test suite to Jenkins Followed Agile daily Scrum methodology for development process and lead a small offshore development team Created dynamic schema design through NOSQL MongoDB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Shading Used Mongoose connector as ORM Framework to connect with MongoDB and worked with Mongoose libraries like validation type casting query building Designed and developed Spring Boot adapter applications using Rest API Worked with Netflix OSS Eureka service for service registration discovery and spring config for centralized configuration and Ribbon for load balancing at the client side using Spring Cloud Used Spring JPA to perform the CRUD operations and persist the data to the database Bottle microframework implemented with RESTful service and used WADL Web Application Description Language for modelling the resources provided by the services and relationships between them Implemented WebServices to integrate between different applications internal and thirdparty components using RESTful services Involved in developing Unit Test cases and testing the Application using REST Used Mockito for mock creation verification and stubbing Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Implemented Log4j mechanism for logging at different modules within the application Configured Kibana data visualization plugin for Elasticsearch and Logstash Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Used multithreaded environment to run the processes asynchronously using different future calls to access the data Implemented Netflix Zuul API gateway for all the requests from the devices and websites by registering services to Eureka Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Environment Angular 20 HTML5 CSS3 Type Script REACT JS Jasmine Karma GULP NODE PACKAGE MANAGER Spring Boot Cassandra Spring Data Nodejs Apache Kafka Docker AWS EC2 Jenkins Spring AOP Spring Cloud NetflixZuul Hystrix Swagger OAuth 20 Java Developer Faujnet Solutions Hyderabad Telangana August 2014 to July 2017 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules within this sub modules will maintain storing registering details of joining patient details and over all day activities maintains a database Responsibilities The application is designed using J2EE design patterns and technologies based on MVC based Monolithic architecture Front end interactive UI is developed using HTML CSS Jquery and Java script Agile methodology is used for development of the application Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQLStored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using StrutsFramework that leverages the classical ModelViewController MVC architecture Implemented persistence layer between the database and service layers with IBatisORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Involved in the development of underwriting process which involves communications without side systems and developed message Driven Beans for receiving and processing data using IBM MQ JMS Implemented Java Mail and used its thirdparty command line email to automate email sending and receiving in the application Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere EJB Session Beans were used to process request from user interface using OSS Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment Environment HTML CSS J query Java script DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Java Mail UNIX Shell Scripts JTA ANT IBM Web sphere IBM MQ JMS J2EE IBatis IBM WebSphere SOPA WSDL Spring IOC Spring AOP Junit Mokito Java Full Stack Developer Aspire Systems Hyderabad Telangana March 2012 to August 2014 DescriptionAspire Systems is a global technology services firm serving as a trusted technology partner for customers work with some of the worlds most innovative enterprises and independent softwarevendors helping them leverage technology and outsourcing in our specific areas of expertiseOur services include Product Engineering Enterprise Transformation Independent TestingServices and IT Infrastructure Support services Responsibilities Developed UI pages using HTML5 CSS3 JavaScript jQuery AJAX and JSON Developed client side validation code using Javascript and JQuery Developed AJAX Calls for Involved in various phases of Software Development Life Cycle SDLC on the application like Requirement gathering Design Analysis and Code Development Developed and implemented the MVC Architectural pattern using STRUTS 2x framework Implemented POJO based action by STRUTS and also utilized various Tag Support given by the STRUTS 2x Implemented interceptor which is invoke at preprocessing and post processing of a request in STRUTS 2x Implemented OGNL Object Graph Navigation Language of STRUTS 2x to simplify the accessibility of data stored in the ActionContext Loading data from Text Files to Database by using SQL Loader Implemented IBM WebSphere Application Server to deploy the application Worked with Log4J to capture the log that includes runtime exceptions Environment HTML5 CSS3 JavaScript JQuery AJAX JSON SDLC MVC Architectural STRUTS 2x SQL Loader IBM WebSphere Log4J Education Masters Skills AWT BEA BEA WEBLOGIC ECLIPSE EJB J2EE JAVA HIBERNATE SPRING JAX JAXB JAXRPC JAXWS JBOSS JMS JNDI jQuery JSF JSP JSTL Additional Information TECHNICALSKILLS JavaJ2EE Technologies Servlets JSTL JDBC JMS JNDI RMI EJB AWT Applets Multithreading Java Networking Programming Languages Java C C SQL PLSQL ApplicationWeb Servers OracleBEA WebLogic IBM WebSphere JBoss Apache Tomcat Frameworks APIs Struts Spring Spring Boot Hibernate JSF iBATIS JPA Angular JS Angular 204060 Backbone JS D3 React JS NodeJS IDEs Eclipse IBM RAD Net Beans MasterCraft Web technologies JSP JavaScript jQuery AJAX XML XSLT HTML DHTML CSS JSON Adobe Flex Spring MVC Angular JS Angular 204060 NodeJS Debugging Tools Firebug Chrome NoSQL database MongoDB Cassandra Web Services JAXWS JAXRPC JAXRS SOAP REST XML Parser JAXB Apache Axis DOM Methodologies Agile RUP TDD OOAD SDLC CICD Tools Jenkins XL Release Hudson Modeling Tools UML Design Patterns Rational Rose Visio Databases Oracle DB2 SQL Server MySQL MongoDB Version Control CVS GIT SVN Build Tools ANT Maven Gradle Jenkins Hudson",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Black",
        "Knight",
        "Financial",
        "Services",
        "Austin",
        "TX",
        "years",
        "software",
        "experience",
        "Testing",
        "Implementing",
        "Enterprise",
        "Applications",
        "JavaJ2EE",
        "platform",
        "applications",
        "Object",
        "Oriented",
        "Analysis",
        "DesignOOAD",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Waterfall",
        "Rapid",
        "Application",
        "Development",
        "RAD",
        "Agile",
        "SCRUM",
        "experience",
        "User",
        "Interface",
        "development",
        "web",
        "technologies",
        "HTML5",
        "XHTML",
        "DHTML",
        "CSS3SAASLESS",
        "Bootstrap",
        "JAVASCRIPT",
        "JQUERY",
        "AJAX",
        "MVVM",
        "Clientside",
        "JavaScript",
        "frameworks",
        "2040and",
        "MVC",
        "frameworks",
        "Backbone",
        "JS",
        "Ember",
        "Handlebar",
        "JS",
        "Knockout",
        "JS",
        "Experience",
        "React",
        "JS",
        "JavaScript",
        "library",
        "UI",
        "components",
        "React",
        "JS",
        "Redux",
        "Fluxarchitecture",
        "experience",
        "Core",
        "Java",
        "Multithreading",
        "Transaction",
        "Management",
        "Exception",
        "Handling",
        "Concurrency",
        "Collections",
        "Data",
        "Structures",
        "Lambda",
        "Expressions",
        "Functional",
        "Interfaces",
        "JDBC",
        "working",
        "experience",
        "J2EE",
        "Frameworks",
        "EJB",
        "Struts",
        "JSF",
        "JSP",
        "JSI",
        "Prime",
        "Faces",
        "Expert",
        "level",
        "skills",
        "spring",
        "framework",
        "modules",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Data",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "JTA",
        "Spring",
        "AOP",
        "Spring",
        "Core",
        "HandsonexperienceindevelopingserversideJavaScriptframeworksusingNodeJS",
        "Hapi",
        "JS",
        "Express",
        "JS",
        "Handlebar",
        "JS",
        "Spring",
        "Cloud",
        "Config",
        "Hystrix",
        "Circuit",
        "Breaker",
        "Ribbon",
        "Apigee",
        "API",
        "gateway",
        "Zuul",
        "APIGateway",
        "Spring",
        "Cloud",
        "Netflix",
        "Eureka",
        "service",
        "load",
        "factors",
        "traffic",
        "resource",
        "usage",
        "security",
        "functionality",
        "OAuth",
        "Spring",
        "security",
        "User",
        "Access",
        "Management",
        "JWT",
        "SSL",
        "SiteMinder",
        "SSO",
        "Worked",
        "WSDL",
        "services",
        "Apache",
        "CXF",
        "JAXWSframeworks",
        "web",
        "services",
        "JAXRS",
        "JERSEY",
        "Apache",
        "CXF",
        "data",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "documentation",
        "webservice",
        "Integrated",
        "Micro",
        "Services",
        "Hibernate",
        "ORM",
        "Spring",
        "Boot",
        "HQL",
        "queries",
        "data",
        "access",
        "Expertise",
        "Databases",
        "Tables",
        "Stored",
        "Procedure",
        "Triggers",
        "Views",
        "User",
        "data",
        "typesUDTCursors",
        "Functions",
        "data",
        "dictionaries",
        "data",
        "integrity",
        "Indexes",
        "SQL",
        "Experience",
        "SQL",
        "PLSQL",
        "Relational",
        "Database",
        "Management",
        "Systems",
        "Oracle",
        "MS",
        "SQL",
        "MySQL",
        "DB2",
        "PostgreSQL",
        "SQL",
        "Mongo",
        "DB",
        "CouchDBCassandra",
        "Dynamo",
        "DB",
        "Graph",
        "DB",
        "Cassandra",
        "Node",
        "Driver",
        "Drools",
        "Business",
        "Rules",
        "Management",
        "System",
        "BRMS",
        "solution",
        "core",
        "Business",
        "RulesEngine",
        "Hands",
        "experience",
        "build",
        "tools",
        "ANT",
        "Maven",
        "Gradleand",
        "tools",
        "GoodunderstandingofClientsidebuildtoolslikeGulpNPMWebpackGruntand",
        "Bower",
        "Strong",
        "experience",
        "integration",
        "tools",
        "Apache",
        "CXF",
        "Apache",
        "Camel",
        "Spring",
        "Integration",
        "Mule",
        "ESB",
        "enterprise",
        "application",
        "technologies",
        "JVMenvironment",
        "Experience",
        "testing",
        "JUnit",
        "Framework",
        "Mockito",
        "Easy",
        "Mock",
        "Spring",
        "Junit",
        "RunnerJMeter",
        "JavaScript",
        "structures",
        "Mocha",
        "Chai",
        "Protractor",
        "Jasmine",
        "andKarma",
        "Strong",
        "Knowledge",
        "java",
        "testing",
        "integration",
        "testing",
        "applications",
        "Cucumber",
        "Experience",
        "building",
        "deployment",
        "EAR",
        "WAR",
        "JAR",
        "files",
        "environments",
        "IBM",
        "WebSphere",
        "Application",
        "Serverv7",
        "Experience",
        "configuring",
        "application",
        "servers",
        "Oracle",
        "WebLogic",
        "Glassfish",
        "IBM",
        "WebSphere",
        "Jbossand",
        "ApacheTomcat",
        "Sound",
        "mix",
        "improvement",
        "devices",
        "Jenkins",
        "Hudson",
        "Puppet",
        "andBamboo",
        "Experience",
        "Unix",
        "Shell",
        "Scripting",
        "user",
        "OS",
        "knowledge",
        "time",
        "dashboard",
        "applications",
        "Elastic",
        "Search",
        "Logstash",
        "Kibana",
        "ELK",
        "data",
        "theapplication",
        "Blob",
        "SQL",
        "Azure",
        "Professional",
        "experience",
        "Log4J",
        "debugging",
        "Good",
        "Knowledge",
        "Amazon",
        "Web",
        "Services",
        "Amazon",
        "SQS",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "EBS",
        "Amazon",
        "Lambda",
        "Amazon",
        "CloudFront",
        "Hands",
        "experience",
        "implementation",
        "Cloud",
        "Foundry",
        "PCF",
        "services",
        "Pivotal",
        "Container",
        "Service",
        "Pivotal",
        "Application",
        "Service",
        "Pivotal",
        "Functional",
        "Service",
        "Good",
        "experience",
        "Docker",
        "upgrading",
        "testing",
        "softwareapplications",
        "understanding",
        "OpenShift",
        "platform",
        "Docker",
        "containersand",
        "Kubernetes",
        "Clusters",
        "use",
        "Apache",
        "Kafka",
        "MQ",
        "Rabbit",
        "MQ",
        "IBM",
        "MQ",
        "Message",
        "Middleware",
        "coordinatingapplications",
        "code",
        "repositories",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Black",
        "Knight",
        "Financial",
        "Services",
        "Houston",
        "TX",
        "August",
        "Present",
        "Description",
        "Black",
        "Knight",
        "industrys",
        "provider",
        "technology",
        "data",
        "analytics",
        "solutions",
        "business",
        "processes",
        "mortgage",
        "lifecycle",
        "Black",
        "Knight",
        "premier",
        "business",
        "partner",
        "lenders",
        "servicers",
        "goals",
        "success",
        "customers",
        "bestinclass",
        "technology",
        "services",
        "insight",
        "commitment",
        "innovation",
        "integrity",
        "leadership",
        "Responsibilities",
        "Implementation",
        "design",
        "wireframe",
        "Angular",
        "services",
        "backend",
        "Spring",
        "Boot",
        "layer",
        "use",
        "NodeJS",
        "authentication",
        "authorization",
        "session",
        "maintenance",
        "UI",
        "application",
        "Angular",
        "40and",
        "use",
        "components",
        "customer",
        "side",
        "validations",
        "Angular",
        "services",
        "UI",
        "data",
        "UI",
        "backend",
        "migration",
        "project",
        "components",
        "router",
        "Modules",
        "configuration",
        "file",
        "changes",
        "Angular",
        "Angular",
        "services",
        "authorization",
        "authentication",
        "Node",
        "server",
        "LDAP",
        "authentication",
        "LDAP",
        "Ping",
        "AccessSSO",
        "Single",
        "Sign",
        "Application",
        "sessions",
        "Login",
        "user",
        "session",
        "UI",
        "application",
        "understanding",
        "application",
        "design",
        "MVC",
        "directives",
        "promises",
        "pipes",
        "innovation",
        "UI",
        "implementation",
        "device",
        "access",
        "cross",
        "platform",
        "technologies",
        "Ionic",
        "business",
        "development",
        "design",
        "implementation",
        "frontend",
        "application",
        "HTML5",
        "CSS3",
        "AJAX",
        "Bootstrap",
        "use",
        "Reactive",
        "Forms",
        "Angular",
        "validation",
        "component",
        "templatedriven",
        "HTML",
        "Migrating",
        "application",
        "REST",
        "Micro",
        "services",
        "CRUD",
        "capabilities",
        "Spring",
        "Boot",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "Services",
        "Spring",
        "application",
        "configuration",
        "Services",
        "Microservices",
        "concepts",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "code",
        "Rest",
        "APIs",
        "Spring",
        "Rest",
        "Swagger",
        "API",
        "documentation",
        "Building",
        "cloud",
        "Microservices",
        "backend",
        "Spring",
        "Boot",
        "Implementation",
        "domain",
        "base",
        "classes",
        "properties",
        "Spring",
        "Data",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "Boot",
        "Jersey",
        "framework",
        "NODE",
        "PACKAGE",
        "MANAGER",
        "NPM",
        "versions",
        "packages",
        "dependencies",
        "project",
        "project",
        "algorithms",
        "Elastic",
        "Search",
        "analytics",
        "information",
        "keywords",
        "end",
        "user",
        "Authenticating",
        "Users",
        "security",
        "web",
        "services",
        "Integrated",
        "ORM",
        "Object",
        "Relational",
        "Mapping",
        "tool",
        "hibernate",
        "spring",
        "Spring",
        "ORM",
        "app",
        "spring",
        "transaction",
        "API",
        "database",
        "transactions",
        "Configured",
        "JPA",
        "Hibernate",
        "ORM",
        "tool",
        "Spring",
        "IOC",
        "Application",
        "Context",
        "files",
        "database",
        "object",
        "mapping",
        "Hibernate",
        "annotations",
        "Spring",
        "Validators",
        "persistence",
        "layer",
        "service",
        "layer",
        "components",
        "SpringHibernate",
        "API",
        "SpringHibernate",
        "annotations",
        "Hibernate",
        "QL",
        "persistence",
        "layer",
        "Hibernate",
        "data",
        "database",
        "PLSQL",
        "queries",
        "Oracle",
        "procedures",
        "Stored",
        "Procedures",
        "PLSQL",
        "functions",
        "procedure",
        "utilities",
        "Oracle11",
        "g",
        "MySQL",
        "schema",
        "NOSQLCouchDB",
        "queries",
        "data",
        "collection",
        "systems",
        "scalability",
        "web",
        "applications",
        "Bootstrap",
        "Code",
        "Mirror",
        "Brackets",
        "Emberjs",
        "creation",
        "interface",
        "user",
        "menu",
        "update",
        "Attributes",
        "NodeJS",
        "jQuery",
        "framework",
        "web",
        "services",
        "Amazon",
        "EC2",
        "cloud",
        "Microservices",
        "backend",
        "Spring",
        "Boot",
        "application",
        "Spring",
        "Cloud",
        "services",
        "spring",
        "version",
        "Netflix",
        "OSSEureka",
        "Circuit",
        "Breaker",
        "Ribbon",
        "load",
        "Spring",
        "Cloud",
        "Netflix",
        "ZUUL",
        "micro",
        "services",
        "communication",
        "Spring",
        "Circuit",
        "breaker",
        "pattern",
        "Hystrix",
        "dashboard",
        "spring",
        "micro",
        "services",
        "serverside",
        "request",
        "handling",
        "test",
        "cases",
        "UI",
        "functionality",
        "Nodejs",
        "Used",
        "Docker",
        "Container",
        "application",
        "cloud",
        "Docker",
        "collaboration",
        "innovation",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "S3",
        "highavailability",
        "fault",
        "tolerance",
        "Configured",
        "AWS",
        "EC2",
        "instances",
        "mapping",
        "Route53",
        "Environment",
        "JavaScript",
        "HTML5",
        "CSS3LESS",
        "AJAX",
        "Bootstrap",
        "jQuery",
        "Spring",
        "Security",
        "Rabbit",
        "MQ",
        "Node",
        "JS",
        "Express",
        "JS",
        "HTML5Bootstrap40",
        "Site",
        "Minder",
        "Hibernate4xOIDC",
        "Eclipse",
        "Java",
        "EE",
        "Jenkins",
        "Log4j",
        "Redis",
        "Mongo",
        "DB",
        "Mongoose",
        "Connector",
        "Oracle",
        "JBoss",
        "Kibana",
        "Elastic",
        "search",
        "Log",
        "stash",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Docker",
        "Apache",
        "tomcat",
        "Selenium",
        "Spock",
        "Karma",
        "Jasmine",
        "Mockito",
        "Junit",
        "MVC",
        "Kubernetes",
        "Dump",
        "Analysis",
        "Netflix",
        "Zuul",
        "Eureka",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Florida",
        "Blue",
        "Jacksonville",
        "FL",
        "February",
        "July",
        "Description",
        "Florida",
        "Blue",
        "subsidiary",
        "notforprofit",
        "health",
        "solutions",
        "company",
        "Floridians",
        "pursuit",
        "healthFlorida",
        "Blue",
        "licensee",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "Association",
        "residents",
        "businesses",
        "state",
        "Florida",
        "Responsibilities",
        "creation",
        "UI",
        "specification",
        "documents",
        "business",
        "users",
        "design",
        "documentation",
        "data",
        "project",
        "Expertise",
        "React",
        "JSRedux",
        "User",
        "Interface",
        "knowledge",
        "state",
        "store",
        "middleware",
        "action",
        "creator",
        "reducer",
        "container",
        "user",
        "interface",
        "React",
        "JS",
        "Redux",
        "SPA",
        "development",
        "Interface",
        "React",
        "JS",
        "Axios",
        "service",
        "GET",
        "POST",
        "REST",
        "service",
        "Dom",
        "view",
        "services",
        "React",
        "JS",
        "Proficient",
        "react",
        "code",
        "help",
        "ECMAScript",
        "ES6",
        "Written",
        "FETCH",
        "API",
        "JSON",
        "data",
        "platform",
        "modules",
        "spring",
        "Java",
        "micro",
        "Nodejs",
        "services",
        "Hapijs",
        "frontend",
        "React",
        "JS",
        "annotation",
        "approach",
        "application",
        "Spring",
        "Boot",
        "Spring",
        "bean",
        "profiling",
        "Spring",
        "Boot",
        "configuration",
        "starter",
        "Maven",
        "configuration",
        "metrics",
        "configuration",
        "Developed",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "Boot",
        "Apace",
        "CXF",
        "framework",
        "Building",
        "cloud",
        "Microservices",
        "backend",
        "Spring",
        "Boot",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "code",
        "Rest",
        "APIs",
        "Spring",
        "Rest",
        "Swagger",
        "API",
        "documentation",
        "JAVA8",
        "features",
        "Interfaces",
        "Stream",
        "API",
        "Bulk",
        "Data",
        "Operations",
        "Time",
        "API",
        "Transaction",
        "Management",
        "Concurrency",
        "API",
        "Collection",
        "API",
        "Calendar",
        "API",
        "Application",
        "Cloud",
        "Foundry",
        "PCF",
        "development",
        "platform",
        "Deployed",
        "Monitored",
        "Micro",
        "Services",
        "Spring",
        "Cloud",
        "Foundry",
        "Managed",
        "Domains",
        "Routes",
        "Spring",
        "Cloud",
        "Service",
        "Registry",
        "Deployed",
        "Monitored",
        "Micro",
        "Services",
        "Spring",
        "Cloud",
        "Foundry",
        "Managed",
        "Domains",
        "Routes",
        "Spring",
        "Cloud",
        "Service",
        "Registry",
        "Netflix",
        "OSS",
        "Open",
        "Source",
        "Software",
        "changes",
        "deployment",
        "Spring",
        "Circuit",
        "breaker",
        "pattern",
        "Hystrix",
        "dashboard",
        "Spring",
        "microservices",
        "NoSQL",
        "database",
        "Cassandra",
        "values",
        "data",
        "analytics",
        "Database",
        "project",
        "Cassandra",
        "Clusters",
        "troubleshooting",
        "requirements",
        "Docker",
        "hub",
        "Docker",
        "images",
        "images",
        "middleware",
        "installations",
        "domain",
        "configurations",
        "Kubernetes",
        "cluster",
        "container",
        "management",
        "tool",
        "delivery",
        "Continuous",
        "Integration",
        "CDCI",
        "tools",
        "Docker",
        "Jenkins",
        "application",
        "metrics",
        "collection",
        "mechanism",
        "server",
        "Apache",
        "Kafka",
        "serverside",
        "events",
        "Apache",
        "Kafka",
        "cluster",
        "system",
        "APIs",
        "microservices",
        "Splunk",
        "search",
        "processing",
        "language",
        "SPL",
        "queries",
        "dashboard",
        "Project",
        "code",
        "build",
        "MAVEN",
        "tool",
        "Web",
        "pack",
        "application",
        "source",
        "code",
        "chunks",
        "code",
        "server",
        "browser",
        "JMS",
        "API",
        "mail",
        "notification",
        "success",
        "failure",
        "processes",
        "mail",
        "notifications",
        "system",
        "problems",
        "Splunk",
        "charts",
        "log",
        "data",
        "log",
        "data",
        "customer",
        "expectations",
        "Authenticating",
        "Users",
        "security",
        "web",
        "services",
        "REACT",
        "code",
        "client",
        "side",
        "testing",
        "framework",
        "MOCHA",
        "test",
        "runner",
        "Environment",
        "React",
        "JS",
        "Redux",
        "Hapi",
        "JS",
        "Node",
        "JS",
        "Web",
        "pack",
        "ECMA6",
        "Mocha",
        "Chai",
        "Spring",
        "Boot",
        "Spring",
        "cloud",
        "Ribbon",
        "Hystrix",
        "Netflix",
        "ZUUL",
        "Micro",
        "services",
        "architecture",
        "Docker",
        "Jenkins",
        "Cassandra",
        "DB",
        "Apache",
        "Kafka",
        "Splunk",
        "PCF",
        "Swagger",
        "Webpack",
        "JMS",
        "Maven",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Cerner",
        "Corporation",
        "Kansas",
        "City",
        "MO",
        "January",
        "August",
        "Description",
        "Cerner",
        "Health",
        "Care",
        "Industry",
        "improvement",
        "health",
        "care",
        "delivery",
        "health",
        "communities",
        "Cerner",
        "health",
        "care",
        "eliminatingerror",
        "variance",
        "waste",
        "forhealth",
        "care",
        "providers",
        "consumers",
        "worldProject",
        "deals",
        "Emergency",
        "department",
        "ED",
        "patients",
        "doctors",
        "health",
        "record",
        "physician",
        "track",
        "patient",
        "day",
        "day",
        "hospital",
        "Responsibilities",
        "Experience",
        "MEAN",
        "applications",
        "Angular",
        "NodeJS",
        "Web",
        "services",
        "components",
        "Web",
        "services",
        "UI",
        "Interfaces",
        "REST",
        "API",
        "NodeJS",
        "ExpressJS",
        "dependencies",
        "Bower",
        "POCs",
        "interface",
        "Backend",
        "Frontend",
        "Express",
        "AngularJS",
        "Node",
        "JS",
        "Strong",
        "experience",
        "stack",
        "JavaScript",
        "environment",
        "MEAN",
        "Mongo",
        "Express",
        "Angular",
        "Node",
        "Angular",
        "Configured",
        "Express",
        "JS",
        "node",
        "http",
        "framework",
        "middlewares",
        "HTTP",
        "requests",
        "frontend",
        "web",
        "packs",
        "starter",
        "boiler",
        "plates",
        "Web",
        "Services",
        "APIs",
        "Experience",
        "CSS",
        "Pre",
        "processors",
        "SASS",
        "JavaScript",
        "task",
        "runners",
        "Grunt",
        "JS",
        "creation",
        "interface",
        "user",
        "menu",
        "update",
        "Attributes",
        "Node",
        "JS",
        "jQuery",
        "development",
        "presentation",
        "layer",
        "GUI",
        "development",
        "JSP",
        "HTML5",
        "CSSCSS3",
        "Bootstrap",
        "ClientSide",
        "validations",
        "Angular20",
        "XSLT",
        "jQuery",
        "UI",
        "Angular",
        "Customer",
        "Service",
        "Modules",
        "Reports",
        "HTML",
        "CSS",
        "pages",
        "Styling",
        "controllers",
        "components",
        "Custom",
        "Components",
        "Web",
        "pages",
        "Angular",
        "CLI",
        "Angular",
        "Unit",
        "Test",
        "Cases",
        "Jasmine",
        "KarmaTesting",
        "Frameworks",
        "Angular",
        "Mocha",
        "Chai",
        "react",
        "testing",
        "GULP",
        "magnification",
        "JavaScript",
        "compilation",
        "files",
        "CSS",
        "application",
        "Authenticating",
        "Users",
        "security",
        "web",
        "services",
        "Used",
        "OAuth",
        "authorization",
        "code",
        "start",
        "application",
        "test",
        "cases",
        "component",
        "panels",
        "Junit",
        "Jenkins",
        "web",
        "services",
        "layer",
        "ORACLE",
        "MySQL",
        "database",
        "Jerseyws",
        "JAXWS",
        "JAXRS",
        "APIs",
        "Jenkins",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "CICD",
        "development",
        "design",
        "implementation",
        "frontend",
        "application",
        "HTML5",
        "CSS3",
        "AJAX",
        "Bootstrap",
        "page",
        "jQuery",
        "container",
        "tab",
        "call",
        "auto",
        "mode",
        "jQuery",
        "scripting",
        "HTML",
        "DOJO",
        "widgets",
        "package",
        "browser",
        "incompatibilities",
        "IO",
        "package",
        "AJAX",
        "application",
        "authentication",
        "Angular",
        "JS",
        "jQuery",
        "CSS",
        "webservices",
        "representation",
        "AJAX",
        "requests",
        "REST",
        "web",
        "services",
        "web",
        "services",
        "WADLs",
        "web",
        "application",
        "Description",
        "Language",
        "SOAP",
        "UI",
        "tool",
        "test",
        "cases",
        "unit",
        "test",
        "web",
        "service",
        "code",
        "testcases",
        "test",
        "scenarios",
        "test",
        "suite",
        "Jenkins",
        "Scrum",
        "methodology",
        "development",
        "process",
        "development",
        "team",
        "schema",
        "NOSQL",
        "MongoDB",
        "queries",
        "data",
        "collection",
        "systems",
        "scalability",
        "data",
        "volumes",
        "Automatic",
        "Shading",
        "Mongoose",
        "connector",
        "ORM",
        "Framework",
        "MongoDB",
        "Mongoose",
        "libraries",
        "validation",
        "type",
        "query",
        "Spring",
        "Boot",
        "adapter",
        "applications",
        "Rest",
        "API",
        "Netflix",
        "OSS",
        "Eureka",
        "service",
        "service",
        "registration",
        "discovery",
        "spring",
        "config",
        "configuration",
        "Ribbon",
        "load",
        "client",
        "side",
        "Spring",
        "Cloud",
        "Spring",
        "JPA",
        "CRUD",
        "operations",
        "data",
        "database",
        "Bottle",
        "microframework",
        "service",
        "WADL",
        "Web",
        "Application",
        "Description",
        "Language",
        "resources",
        "services",
        "relationships",
        "WebServices",
        "applications",
        "thirdparty",
        "components",
        "services",
        "Unit",
        "Test",
        "cases",
        "Application",
        "REST",
        "Mockito",
        "creation",
        "verification",
        "Log4j",
        "log",
        "runtime",
        "exception",
        "info",
        "issues",
        "Log4j",
        "mechanism",
        "modules",
        "application",
        "Kibana",
        "data",
        "visualization",
        "plugin",
        "Elasticsearch",
        "Logstash",
        "Configured",
        "Docker",
        "container",
        "service",
        "pipe",
        "line",
        "Jenkins",
        "CICD",
        "tool",
        "integrating",
        "application",
        "servers",
        "GIT",
        "source",
        "control",
        "management",
        "speed",
        "advantage",
        "systems",
        "server",
        "environment",
        "processes",
        "calls",
        "data",
        "Netflix",
        "Zuul",
        "API",
        "gateway",
        "requests",
        "devices",
        "websites",
        "services",
        "Eureka",
        "Karma",
        "test",
        "runner",
        "Jasmine",
        "test",
        "framework",
        "tool",
        "testing",
        "application",
        "Environment",
        "Angular",
        "HTML5",
        "CSS3",
        "Type",
        "Script",
        "REACT",
        "JS",
        "Jasmine",
        "Karma",
        "GULP",
        "NODE",
        "PACKAGE",
        "MANAGER",
        "Spring",
        "Boot",
        "Cassandra",
        "Spring",
        "Data",
        "Nodejs",
        "Apache",
        "Kafka",
        "Docker",
        "EC2",
        "Jenkins",
        "Spring",
        "AOP",
        "Spring",
        "Cloud",
        "NetflixZuul",
        "Hystrix",
        "Swagger",
        "OAuth",
        "Java",
        "Developer",
        "Faujnet",
        "Solutions",
        "Hyderabad",
        "Telangana",
        "August",
        "July",
        "Description",
        "Hospital",
        "Management",
        "System",
        "Super",
        "Specialty",
        "Hospital",
        "package",
        "activities",
        "servicing",
        "system",
        "package",
        "modules",
        "Administration",
        "Patient",
        "Care",
        "System",
        "Health",
        "Services",
        "Auxiliary",
        "Services",
        "module",
        "sub",
        "modules",
        "sub",
        "modules",
        "details",
        "details",
        "day",
        "activities",
        "database",
        "Responsibilities",
        "application",
        "J2EE",
        "design",
        "patterns",
        "technologies",
        "MVC",
        "Monolithic",
        "architecture",
        "Front",
        "end",
        "UI",
        "HTML",
        "CSS",
        "Jquery",
        "Java",
        "script",
        "methodology",
        "development",
        "application",
        "application",
        "principles",
        "design",
        "patterns",
        "MVC",
        "Business",
        "Delegate",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Object",
        "Singleton",
        "Abstract",
        "Factory",
        "Stored",
        "Procedures",
        "Functions",
        "JDBC",
        "database",
        "Server",
        "database",
        "PLSQLStored",
        "Procedures",
        "Functions",
        "Triggers",
        "Views",
        "SQL",
        "database",
        "end",
        "interfaces",
        "PLSQL",
        "packages",
        "procedures",
        "functions",
        "PLSQL",
        "programs",
        "Cursor",
        "management",
        "Exception",
        "Handling",
        "PLSQL",
        "programs",
        "features",
        "Spring",
        "Dependency",
        "Injection",
        "IOC",
        "Annotations",
        "Spring",
        "Integration",
        "Struts",
        "application",
        "StrutsFramework",
        "ModelViewController",
        "MVC",
        "architecture",
        "persistence",
        "layer",
        "database",
        "service",
        "layers",
        "IBatisORM",
        "user",
        "interfaces",
        "JSPs",
        "JSTL",
        "custom",
        "tags",
        "custom",
        "user",
        "interfaces",
        "Eclipse",
        "JSPs",
        "Servlets",
        "Struts",
        "IBM",
        "WEB",
        "SPHERE",
        "server",
        "development",
        "phase",
        "Spring",
        "Security",
        "framework",
        "setup",
        "authentication",
        "authorization",
        "application",
        "sign",
        "Dependency",
        "Injection",
        "components",
        "bean",
        "life",
        "cycle",
        "application",
        "Spring",
        "IOC",
        "Protection",
        "session",
        "fixation",
        "cross",
        "site",
        "request",
        "forgery",
        "application",
        "Spring",
        "Security",
        "modularity",
        "cross",
        "concerns",
        "transaction",
        "management",
        "logging",
        "Spring",
        "AOP",
        "development",
        "underwriting",
        "process",
        "communications",
        "side",
        "systems",
        "message",
        "Beans",
        "processing",
        "data",
        "IBM",
        "MQ",
        "JMS",
        "Java",
        "Mail",
        "thirdparty",
        "command",
        "line",
        "email",
        "email",
        "application",
        "Wrote",
        "Unit",
        "test",
        "cases",
        "JUnit",
        "Mockito",
        "framework",
        "ANT",
        "build",
        "deployment",
        "IBM",
        "WebSphere",
        "EJB",
        "Session",
        "Beans",
        "request",
        "user",
        "interface",
        "OSS",
        "UNIX",
        "Shell",
        "Scripts",
        "batch",
        "jobs",
        "data",
        "servers",
        "JTA",
        "transactions",
        "resources",
        "java",
        "environment",
        "Environment",
        "HTML",
        "CSS",
        "J",
        "query",
        "Java",
        "script",
        "DB2",
        "JDBC",
        "PLSQL",
        "JPA",
        "EJB",
        "Struts",
        "JSP",
        "Servlets",
        "Java",
        "Mail",
        "UNIX",
        "Shell",
        "Scripts",
        "JTA",
        "ANT",
        "IBM",
        "Web",
        "sphere",
        "IBM",
        "MQ",
        "JMS",
        "J2EE",
        "IBatis",
        "IBM",
        "WebSphere",
        "SOPA",
        "WSDL",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Junit",
        "Mokito",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Aspire",
        "Systems",
        "Hyderabad",
        "Telangana",
        "March",
        "August",
        "DescriptionAspire",
        "Systems",
        "technology",
        "services",
        "firm",
        "technology",
        "partner",
        "customers",
        "worlds",
        "enterprises",
        "softwarevendors",
        "technology",
        "outsourcing",
        "areas",
        "services",
        "Product",
        "Engineering",
        "Enterprise",
        "Transformation",
        "Independent",
        "TestingServices",
        "IT",
        "Infrastructure",
        "Support",
        "services",
        "Responsibilities",
        "UI",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AJAX",
        "client",
        "side",
        "validation",
        "code",
        "Javascript",
        "JQuery",
        "Developed",
        "AJAX",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "Development",
        "Developed",
        "MVC",
        "Architectural",
        "pattern",
        "STRUTS",
        "framework",
        "POJO",
        "action",
        "STRUTS",
        "Tag",
        "Support",
        "STRUTS",
        "interceptor",
        "invoke",
        "preprocessing",
        "post",
        "processing",
        "request",
        "STRUTS",
        "OGNL",
        "Object",
        "Graph",
        "Navigation",
        "Language",
        "STRUTS",
        "accessibility",
        "data",
        "ActionContext",
        "Loading",
        "data",
        "Text",
        "Files",
        "Database",
        "SQL",
        "Loader",
        "IBM",
        "WebSphere",
        "Application",
        "Server",
        "application",
        "Log4J",
        "log",
        "runtime",
        "exceptions",
        "Environment",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "AJAX",
        "JSON",
        "SDLC",
        "MVC",
        "Architectural",
        "STRUTS",
        "SQL",
        "Loader",
        "IBM",
        "WebSphere",
        "Log4J",
        "Education",
        "Masters",
        "Skills",
        "AWT",
        "BEA",
        "BEA",
        "WEBLOGIC",
        "ECLIPSE",
        "EJB",
        "J2EE",
        "HIBERNATE",
        "SPRING",
        "JAX",
        "JAXB",
        "JAXRPC",
        "JAXWS",
        "JBOSS",
        "JMS",
        "JNDI",
        "jQuery",
        "JSF",
        "JSP",
        "JSTL",
        "Additional",
        "Information",
        "TECHNICALSKILLS",
        "JavaJ2EE",
        "Technologies",
        "Servlets",
        "JSTL",
        "JDBC",
        "JMS",
        "JNDI",
        "RMI",
        "EJB",
        "AWT",
        "Applets",
        "Java",
        "Networking",
        "Programming",
        "Languages",
        "Java",
        "C",
        "C",
        "SQL",
        "PLSQL",
        "ApplicationWeb",
        "Servers",
        "OracleBEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Apache",
        "Tomcat",
        "Frameworks",
        "APIs",
        "Struts",
        "Spring",
        "Spring",
        "Boot",
        "Hibernate",
        "JSF",
        "JPA",
        "Angular",
        "JS",
        "Angular",
        "Backbone",
        "JS",
        "D3",
        "React",
        "JS",
        "NodeJS",
        "IDEs",
        "Eclipse",
        "IBM",
        "RAD",
        "Net",
        "Beans",
        "MasterCraft",
        "Web",
        "technologies",
        "JSP",
        "JavaScript",
        "jQuery",
        "AJAX",
        "XML",
        "XSLT",
        "HTML",
        "DHTML",
        "CSS",
        "JSON",
        "Adobe",
        "Flex",
        "Spring",
        "MVC",
        "Angular",
        "JS",
        "Angular",
        "NodeJS",
        "Debugging",
        "Tools",
        "Firebug",
        "Chrome",
        "NoSQL",
        "database",
        "MongoDB",
        "Cassandra",
        "Web",
        "Services",
        "JAXWS",
        "JAXRPC",
        "JAXRS",
        "SOAP",
        "REST",
        "XML",
        "Parser",
        "JAXB",
        "Apache",
        "Axis",
        "DOM",
        "Methodologies",
        "Agile",
        "RUP",
        "TDD",
        "SDLC",
        "CICD",
        "Tools",
        "Jenkins",
        "XL",
        "Release",
        "Hudson",
        "Modeling",
        "Tools",
        "UML",
        "Design",
        "Patterns",
        "Rational",
        "Rose",
        "Visio",
        "Databases",
        "Oracle",
        "DB2",
        "SQL",
        "Server",
        "MySQL",
        "MongoDB",
        "Version",
        "Control",
        "CVS",
        "GIT",
        "SVN",
        "Build",
        "Tools",
        "ANT",
        "Maven",
        "Gradle",
        "Jenkins",
        "Hudson"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:22:01.649794",
    "resume_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Black Knight Financial Services Austin TX Around 7 years of strong software experience in Developing Testing Implementing Enterprise Applications using JavaJ2EE platform and webbased applications using Object Oriented Analysis and DesignOOAD Experienced on various SDLC Software Development Life Cycle like Waterfall Rapid Application Development RAD and Agile SCRUM models Strong experience in User Interface development using web technologies like HTML5 XHTML DHTML CSS3SAASLESS Bootstrap JAVASCRIPT JQUERY AJAX Experienced in MVVM Clientside JavaScript frameworks like Angular 2040and MVC frameworks like Backbone JS Ember Handlebar JS and Knockout JS Experience in React JS which is JavaScript library used for building reusable UI components Implemented React JS and worked with Redux and Fluxarchitecture Extensive experience with Core Java Multithreading Transaction Management Exception Handling Concurrency Collections Data Structures Lambda Expressions Functional Interfaces and JDBC Extensive working experience with various J2EE Frameworks like EJB Struts JSF JSP JSI Prime Faces Expert level skills in spring framework modules like Spring MVC Spring Batch Spring Security Spring Data Spring Boot Spring Cloud Spring JTA Spring AOP Spring Core HandsonexperienceindevelopingserversideJavaScriptframeworksusingNodeJS Hapi JS Express JS Handlebar JS Worked with Spring Cloud Config Hystrix Circuit Breaker Ribbon Apigee API gateway and Zuul APIGateway in the Spring Cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic resource usage and implemented security functionality OAuth 20 Spring security User Access Management JWT SSL and SiteMinder SSO Worked on WSDL and WADL implementing SOAP services using Axis2 and Apache CXF JAXWSframeworks Developed Restful web services using JAXRS in JERSEY Apache CXF to expose the data to springmodule Extensively worked on Micro Services with Spring Boot and created dynamic documentation for RESTful webservice usingSwagger Integrated Micro Services with Hibernate ORM using Spring Boot and wrote HQL queries for data access Expertise in creating Databases Tables Stored Procedure Triggers Views User defined data typesUDTCursors Functions data dictionaries and maintaining data integrity and Indexes using SQL Experience with SQL and PLSQL to query various Relational Database Management Systems including Oracle MS SQL MySQL DB2 and PostgreSQL and No SQL databases like Mongo DB CouchDBCassandra Dynamo DB and Graph DB Cassandra Node Driver Worked with Drools to provide Business Rules Management System BRMS solution that provides a core Business RulesEngine Hands on experience with build tools like ANT Maven Gradleand logging tools likeLog4J GoodunderstandingofClientsidebuildtoolslikeGulpNPMWebpackGruntand Bower Strong experience in integration tools like Apache CXF Apache Camel Spring Integration and Mule ESB to integrate the enterprise application technologies with existing JVMenvironment Experience in testing with JUnit Framework using Mockito and Easy Mock Spring Junit RunnerJMeter Worked on testing JavaScript structures utilizing Mocha and Chai Protractor Jasmine andKarma Strong Knowledge on automated java based behavioral testing and integration testing of the applications using Cucumber and Seleniumrespectively Experience in building and deployment of EAR WAR JAR files on different environments in IBM WebSphere Application Serverv7 Experience in deploying and configuring application servers such as Oracle WebLogic Glassfish IBM WebSphere Jbossand ApacheTomcat Sound learning on consistent mix and persistent improvement devices like Jenkins Hudson Puppet andBamboo Experience in Unix and Shell Scripting which allows the user to interact with OS Good knowledge in building real time dashboard applications using Elastic Search Logstash and Kibana ELK to profile and monitor the streaming data of theapplication ExperienceinWindowsAzureserviceslikePAASIAASandworkedonstorageslike Blob and SQL Azure Professional experience in Log4J for extensible logging debugging and errortracing Good Knowledge in Amazon Web Services Amazon SQS Amazon EC2 Amazon S3 Amazon Elastic Load Balancing Amazon Simple DB Amazon EBS Amazon Lambda and Amazon CloudFront Hands on experience in implementation of Pivotal Cloud Foundry PCF services such as Pivotal Container Service Pivotal Application Service and Pivotal Functional Service Good experience using Docker for installing upgrading testing removing and running softwareapplications Good understanding of OpenShift platform in managing Docker containersand Kubernetes Clusters Made use of Apache Kafka Active MQ Rabbit MQ IBM MQ as a Message Oriented Middleware for coordinatingapplications UsedvariousversioncontrolsoftwaresuchasGITGITLABSVNCVSBigBucket for maintaining code repositories Work Experience Java Full Stack Developer Black Knight Financial Services Houston TX August 2018 to Present Description Black Knight is the industrys leading provider of technology data and analytics solutions that facilitate and automate many of the business processes across the mortgage lifecycle Black Knight is committed to being a premier business partner that lenders and servicers rely on to achieve their strategic goals realize greater success and better serve their customers by delivering bestinclass technology services and insight with a relentless commitment to excellence innovation integrity and leadership Responsibilities Implementation of the design wireframe using Angular 6 and creating services and exposing it to the backend which runs on Spring Boot Here we also have another layer that makes use of NodeJS mainly used for authentication authorization and session maintenance Developed UI application initially using Angular 40and made use of customized components Implemented customer side validations using Angular 60 and created services on UI for storing and retrieving data from UI to the backend Was under migration of the project converting angular components and updating router Modules Implemented the complete set up with configuration file changes from Angular 4 to Angular 6 Developed key services for authorization and authentication in Node server where we used LDAP Later migrated the authentication from LDAP to Ping AccessSSO Single Sign On Application Created sessions for Login user and setting session timed out for the entire UI application Strong understanding on clientside application and very good at attaining the architectural design for MVC using directives promises and pipes Involved in innovation of the current UI to make an implementation under mobile device access using cross platform technologies such as Ionic which helps in improving the business Involve in development design and implementation of the frontend application using HTML5 CSS3 AJAX Bootstrap 40 Made use of Reactive Forms using Angular 6where most of the validation is done using component rather than using templatedriven which provides in HTML Migrating existing application into REST based Micro services to provide all the CRUD capabilities using Spring Boot Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Made Services independent from each other by implementing Microservices concepts Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Building cloud Microservices and implemented backend using Spring Boot Implementation domain base classes providing basic properties using Spring Data Designed and developed RESTFUL web services using Spring Boot and Jersey framework NODE PACKAGE MANAGER NPM was used to list out the right versions of the packages and their dependencies for the project Worked on a project which handles searching algorithms using Elastic Search which is mainly used for pulling analytics related information using the keywords entered by the end user Authenticating Users and to provide the security to RESTful web services using OAUTH 20 Integrated the ORM Object Relational Mapping tool hibernate to the spring using Spring ORM in our app and used spring transaction API for database related transactions Configured JPA to use Hibernate as ORM tool Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Implemented Spring Validators persistence layer and service layer components using SpringHibernate API and SpringHibernate annotations Extensively used Hibernate QL Created persistence layer using Hibernate for sending and retrieving data from the database Implemented PLSQL queries and used Oracle stored procedures Written Stored Procedures using PLSQL and functions and procedure for common utilities using Oracle11g and MySQL Created dynamic schema design through NOSQLCouchDB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability Have experienced on developing web applications using Bootstrap Code Mirror Brackets and Emberjs Involved in the creation of interface to manage user menu and Bulk update of Attributes using NodeJS and jQuery Designed and developed the framework to consume web services hosted in Amazon EC2 instances Building cloud Microservices and implemented backend using Spring Boot And Authored application using Spring Cloud services spring version of Netflix OSSEureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Implemented Spring Cloud Netflix ZUUL to building micro services for communication Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor spring micro services writing serverside request handling and automated functional test cases to validate UI functionality using Nodejs Used Docker Container to address every application across the hybrid cloud and Docker for better collaboration and innovation Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the AWS stack Including EC2 S3 focusing on highavailability fault tolerance and autoscaling Configured AWS EC2 instances domain mapping via Route53 Environment JavaScript HTML5 CSS3LESS AJAX Bootstrap jQuery Spring Security Rabbit MQ Node JS Express JS HTML5Bootstrap40 Site Minder Hibernate4xOIDC Eclipse Java EE Jenkins Log4j Redis Mongo DB Mongoose Connector Oracle JBoss Kibana Elastic search Log stash EBS Elastic Load Balancer Docker Apache tomcat Selenium Spock Karma Jasmine Mockito Junit mock MVC Kubernetes Dump Analysis Netflix Zuul Eureka Java Full Stack Developer Florida Blue Jacksonville FL February 2018 to July 2018 Description Florida Blue is a subsidiary of a notforprofit health solutions company dedicated to serving all Floridians in the pursuit of healthFlorida Blue is an independent licensee of the Blue Cross and Blue Shield Association serving residents and businesses in the state of Florida Responsibilities Involved in the creation of UI specification documents by interacting with business users and design documentation and data modelling for the entire project Expertise in using React JSRedux to build User Interface strong knowledge of state store middleware action creator reducer and container Developed user interface by using the React JS Redux for SPA development and implemented clientside Interface using React JS Written several Axios service calls like GET and POST to make REST service calls Implemented Virtual Dom for ClientSide view rendering services using React JS Proficient in writing react code with help of ECMAScript ES6 Written calls using FETCH API for fetching JSON data Implemented platform modules through spring Java micro and Nodejs services by employing Hapijs as well as frontend React JS Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the Spring bean profiling Worked with Spring Boot for automatic configuration and starter for Maven configuration and performed metrics and externalized configuration Developed RESTFUL web services using Spring Boot and Apace CXF framework Building cloud Microservices and implemented backend using Spring Boot Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest APIs using Spring Rest and integrated Swagger API for documentation Worked with JAVA8 features like Functional Interfaces Stream API for Bulk Data Operations Time API Transaction Management Concurrency API Collection API Calendar API Deployed our Application on Pivotal Cloud Foundry PCF which is used to reduce the development overhead by providing a ready to use platform Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry Implemented Netflix OSS Open Source Software for Feasible changes after the deployment Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring microservices Implemented NoSQL database like Cassandra to store key values for data analytics which is used as a Database for this project Maintaining and troubleshooting Cassandra Clusters this includes monitoring and performing troubleshooting as per requirements Worked on Docker hub creating Docker images and handling multiple images primarily for middleware installations and domain configurations Used Kubernetes to create new cluster and container management tool Used Continuous delivery Continuous Integration CDCI tools Docker and Jenkins to deploy this application Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream serverside events Used Apache Kafka in cluster as messaging system between the APIs and microservices and worked on Splunk search processing language SPL queries reports dashboard and logging using Log4J Project code build is done using MAVEN tool Worked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser Adopted JMS API to setup mail notification upon the success or failure when the backend processes are completed and to send mail notifications regarding any system related problems Used Splunk to create charts for the log data and analyze log data to know customer expectations Authenticating Users and to provide the security to RESTful web services using OAUTH20 Tested REACT code on client side with CHAI testing framework and MOCHA as test runner Environment React JS Redux Hapi JS Node JS Web pack ECMA6 Mocha and Chai Spring Boot Spring cloud like Ribbon Hystrix Netflix ZUUL Micro services architecture Docker Jenkins Cassandra DB OAUTH Apache Kafka Splunk PCF Swagger Webpack JMS Maven Java Full Stack Developer Cerner Corporation Kansas City MO January 2017 to August 2017 Description Cerner is Health Care Industry which contributes to the systemic improvement of health care delivery and the health of communities Cerner helps transforming health care by eliminatingerror variance and waste forhealth care providers and consumers around the worldProject deals with Emergency department ED for the patients which help the doctors to trackthe patient health record It helps physician to keep track of the patient from the day he enters thehospital to the day he leaves the hospital Responsibilities Experience in building MEAN applications using Angular 20 NodeJS creating Web services components of RESTful Web services to interact with UI Interfaces using REST API with NodeJS ExpressJS and installing clientside dependencies using Bower Developed multiple POCs to create interface between Backend to Frontend by using MongoDB Express AngularJS and Node JS Strong experience in working on modern full stack JavaScript environment like MEAN Mongo Express Angular Node and Angular 20 Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Experience in working with RESTful Web Services and implementing RESTful APIs Experience of working on CSS Pre processors like LESS and SASS along with JavaScript task runners like Grunt JS Involved in the creation of interface to manage user menu and Bulk update of Attributes using Node JS and jQuery Involved in the development of presentation layer and GUI responsive development using JSP HTML5 CSSCSS3 Bootstrap used ClientSide validations were done using Angular20 XSLT and jQuery Implemented UI using Angular 20 for Customer Service Modules and Reports Used HTML and CSS for pages and Styling Created controllers and Angular components mainly Custom Components for Web pages using Angular CLI and Angular 20 Automated different Unit Test Cases using Jasmine and KarmaTesting Frameworks on Angular 20 and Mocha and Chai for react testing Used GULP for magnification of JavaScript files compilation of SAAS files into CSS and for monitoring the application Authenticating Users and to provide the security to RESTful web services using OAUTH 20 Used OAuth 20 as authorization code at the start during signing up into the application Developed test cases for each component in different panels using Junit reported and deployed using Jenkins Implemented RESTful based web services layer to interface with ORACLE and MySQL database using Jerseyws JAXWS JAXRS APIs Worked with Jenkins Continuous Integration and Continuous Deployment CICD Involve in development design and implementation of the frontend application using HTML5 CSS3 AJAX Bootstrap 40 Developed external page using jQuery inside a container when a tab is clicked on via Ajax call and to support auto mode Used jQuery to simplify the clientside scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support Developed application using formbased authentication using Angular JS jQuery and CSS Designed RESTful webservices with JSON representation for handling AJAX requests Created new REST web services and modified existing web services WADLs web application Description Language Also used SOAP UI tool to create test cases and quickly unit test the web service code Created testcases for different test scenarios and integrated the test suite to Jenkins Followed Agile daily Scrum methodology for development process and lead a small offshore development team Created dynamic schema design through NOSQL MongoDB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Shading Used Mongoose connector as ORM Framework to connect with MongoDB and worked with Mongoose libraries like validation type casting query building Designed and developed Spring Boot adapter applications using Rest API Worked with Netflix OSS Eureka service for service registration discovery and spring config for centralized configuration and Ribbon for load balancing at the client side using Spring Cloud Used Spring JPA to perform the CRUD operations and persist the data to the database Bottle microframework implemented with RESTful service and used WADL Web Application Description Language for modelling the resources provided by the services and relationships between them Implemented WebServices to integrate between different applications internal and thirdparty components using RESTful services Involved in developing Unit Test cases and testing the Application using REST Used Mockito for mock creation verification and stubbing Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues Implemented Log4j mechanism for logging at different modules within the application Configured Kibana data visualization plugin for Elasticsearch and Logstash Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Used multithreaded environment to run the processes asynchronously using different future calls to access the data Implemented Netflix Zuul API gateway for all the requests from the devices and websites by registering services to Eureka Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Environment Angular 20 HTML5 CSS3 Type Script REACT JS Jasmine Karma GULP NODE PACKAGE MANAGER Spring Boot Cassandra Spring Data Nodejs Apache Kafka Docker AWS EC2 Jenkins Spring AOP Spring Cloud NetflixZuul Hystrix Swagger OAuth 20 Java Developer Faujnet Solutions Hyderabad Telangana August 2014 to July 2017 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules within this sub modules will maintain storing registering details of joining patient details and over all day activities maintains a database Responsibilities The application is designed using J2EE design patterns and technologies based on MVC based Monolithic architecture Front end interactive UI is developed using HTML CSS Jquery and Java script Agile methodology is used for development of the application Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQLStored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using StrutsFramework that leverages the classical ModelViewController MVC architecture Implemented persistence layer between the database and service layers with IBatisORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC Protection against session fixation clickjacking cross site request forgery for application is implemented using Spring Security To achieve modularity and to handle cross cutting concerns like transaction management logging and profiling Spring AOP is used Involved in the development of underwriting process which involves communications without side systems and developed message Driven Beans for receiving and processing data using IBM MQ JMS Implemented Java Mail and used its thirdparty command line email to automate email sending and receiving in the application Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere EJB Session Beans were used to process request from user interface using OSS Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment Environment HTML CSS J query Java script DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Java Mail UNIX Shell Scripts JTA ANT IBM Web sphere IBM MQ JMS J2EE IBatis IBM WebSphere SOPA WSDL Spring IOC Spring AOP Junit Mokito Java Full Stack Developer Aspire Systems Hyderabad Telangana March 2012 to August 2014 DescriptionAspire Systems is a global technology services firm serving as a trusted technology partner for customers work with some of the worlds most innovative enterprises and independent softwarevendors helping them leverage technology and outsourcing in our specific areas of expertiseOur services include Product Engineering Enterprise Transformation Independent TestingServices and IT Infrastructure Support services Responsibilities Developed UI pages using HTML5 CSS3 JavaScript jQuery AJAX and JSON Developed client side validation code using Javascript and JQuery Developed AJAX Calls for Involved in various phases of Software Development Life Cycle SDLC on the application like Requirement gathering Design Analysis and Code Development Developed and implemented the MVC Architectural pattern using STRUTS 2x framework Implemented POJO based action by STRUTS and also utilized various Tag Support given by the STRUTS 2x Implemented interceptor which is invoke at preprocessing and post processing of a request in STRUTS 2x Implemented OGNL Object Graph Navigation Language of STRUTS 2x to simplify the accessibility of data stored in the ActionContext Loading data from Text Files to Database by using SQL Loader Implemented IBM WebSphere Application Server to deploy the application Worked with Log4J to capture the log that includes runtime exceptions Environment HTML5 CSS3 JavaScript JQuery AJAX JSON SDLC MVC Architectural STRUTS 2x SQL Loader IBM WebSphere Log4J Education Masters Skills AWT BEA BEA WEBLOGIC ECLIPSE EJB J2EE JAVA HIBERNATE SPRING JAX JAXB JAXRPC JAXWS JBOSS JMS JNDI jQuery JSF JSP JSTL Additional Information TECHNICALSKILLS JavaJ2EE Technologies Servlets JSTL JDBC JMS JNDI RMI EJB AWT Applets Multithreading Java Networking Programming Languages Java C C SQL PLSQL ApplicationWeb Servers OracleBEA WebLogic IBM WebSphere JBoss Apache Tomcat Frameworks APIs Struts Spring Spring Boot Hibernate JSF iBATIS JPA Angular JS Angular 204060 Backbone JS D3 React JS NodeJS IDEs Eclipse IBM RAD Net Beans MasterCraft Web technologies JSP JavaScript jQuery AJAX XML XSLT HTML DHTML CSS JSON Adobe Flex Spring MVC Angular JS Angular 204060 NodeJS Debugging Tools Firebug Chrome NoSQL database MongoDB Cassandra Web Services JAXWS JAXRPC JAXRS SOAP REST XML Parser JAXB Apache Axis DOM Methodologies Agile RUP TDD OOAD SDLC CICD Tools Jenkins XL Release Hudson Modeling Tools UML Design Patterns Rational Rose Visio Databases Oracle DB2 SQL Server MySQL MongoDB Version Control CVS GIT SVN Build Tools ANT Maven Gradle Jenkins Hudson",
    "unique_id": "4812f329-65ab-4502-bb8e-d339522400a0"
}