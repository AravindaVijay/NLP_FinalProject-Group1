{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer eBay Enterprise Boston MA Authorized to work in the US for any employer Work Experience Sr Python Developer eBay Enterprise Boston MA October 2015 to Present eBay Enterprise Inc is a multinational ecommerce corporation that specialized in creating developing and running online shopping sites for brick and mortar brands and retailers Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework and views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects and JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the front end functionality such as selection criteria Amazon Web Services AWS for improved efficiency of storage and fast access Created test harness to enable comprehensive testing utilizing Pythonand added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design and created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTM and Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component alongwith Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created UI Screens for initiation and validation and worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance and used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Involved in writing stored procedures using MySQL and interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 34 Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Comcast Greenwood Village CO May 2013 to September 2015 Comcast Corporation formerly registered as Comcast Holdings is an American global mass media conglomerate and is the largest broadcasting and cable television company in the world by revenue Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework and tools using Python Shell scripting XML to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module and used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Created Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Wrote Python scripts to parse XML documents and load the data in database and generated property list for every application dynamically using Python also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 and JavaScript and handled all the client side validation using JavaScript Designed and developed data management system using MySQL and created a Git repository and added the project to GitHub Built development environment with JIRA and created unit testregression test framework for workingnew code and responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer Pay Pal San Jose CA October 2011 to April 2013 PayPal Holdings Inc is an American company operating a worldwide online payments system Online money transfers serve as electronic alternatives to traditional paper methods like checks and money orders Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python 26 and used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data and used Angularjs to build efficient backend for client web application and Python to extract information from XML files Worked on Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP11 XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL and developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask and Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search and effectively communicated with the external vendors to resolve queries and used GIT for the version control Environment Python 2627 JavaScript Django Framework 13 CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Python Developer GE Energy Waukesha WI November 2009 to September 2011 Payroll ERP is developed to satisfy all the Payroll needs of a corporate This software is used to aid in automating and providing timely and accurate payroll processing for all types of employees Payroll software has builtin functions to accommodate the life cycle of payroll processing This system captures details of different categories of Employees and generates pay slips detailing their income details calculated based on the Organization Budget lines Income tax details and others Responsibilities Worked with team of developers on Python applications for RISK management Made Django web based apps for Insurance premium calculations Designed the architecture of the hardware environments and methodology of the code Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used Python OS module on UNIX environment made job cloning and forking Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Involved in testing RESTFull API like Twilio Facebook and Twitter Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts agile Restfull UNIX and Windows Additional Information TECHNICAL SKILLS Languages Python Java C C Embedded SQL PostgreSQL Frameworks Django AngularJS Hibernate Sqlalchemy Orm Scripting Languages HTML CSS Java Script JQuery Angular JS Databases MS SQL Server MSAccess MY SQL Oracle SQLite PLSQL User Interfaces HTML HTML5 DHTML CSS XML DOM XAML IIS AJAX SOAP Restful WSDL Web Services Angular JS Operating Systems Linux Windows Windows Server 2003 Version Control Team Foundation Server TFS Subversion Clear Case Protocols TCPIP HTTP FTP Tools IDE PowerShell Jenkins build process Eclipse Pydev Wing 31 Django South Fabric deployment tool Pytest Selenium SoapUI Chef Jenkins PyCharm Sublime Eclipse NetBeans SDLC Waterfall RAD Agile Scrum Packages MS Office Word Excel and PowerPoint MS outlook Lotus Notes Others GIT PIP PEP8 Celery Redis RESTful Web Services Heroku OpenCV DjangoDebugToolbar Datastage CA workload automation Service now Microstartegy Quality center",
    "entities": [
        "GIT",
        "Python",
        "Present eBay Enterprise Inc",
        "Pandas",
        "Amazon AWS S3",
        "Developed",
        "API",
        "GUI",
        "US",
        "Windows Additional Information TECHNICAL SKILLS Languages Python Java C C Embedded SQL PostgreSQL",
        "RESTFull API like Twilio Facebook",
        "Pandas API",
        "Created UI",
        "Created Python",
        "Created",
        "Djangos",
        "BDD",
        "UNIX",
        "Developed Business Logic",
        "Git",
        "Pythonand",
        "UI",
        "the Organization Budget lines Income",
        "UML Rational Rose for Object Oriented AnalysisObject Oriented Design",
        "Interfacing",
        "Bash Designed",
        "Payroll",
        "HTML CSS JQuery JSON",
        "Object Diagrams",
        "Version Control Team Foundation",
        "Django Database",
        "HTML",
        "CSS",
        "Responsibilities Responsible",
        "Amazon Web Services AWS",
        "JavaScript Involved",
        "Design Development and Deployment Testing and Implementation",
        "SQL",
        "Python Developer GE Energy",
        "DOM JSON PHP HTML5",
        "Provided GUI",
        "XML",
        "eBay Enterprise",
        "Amazon AWS",
        "FTP Tools",
        "lPythonspan",
        "Pandas PyQt PyQuery",
        "PHP",
        "Comcast Corporation",
        "Done Job",
        "JIRA",
        "DOM",
        "Worked on Service Oriented Architecture SOA",
        "PowerShell Jenkins",
        "RDS",
        "Shell",
        "GitHub Built",
        "PowerPoint MS",
        "Lotus Notes Others",
        "Views",
        "HTM",
        "PyQt",
        "Wireshark",
        "Work Experience Sr Python Developer eBay Enterprise",
        "Comcast Holdings",
        "Djangos Test Module"
    ],
    "experience": "Experience Sr Python Developer eBay Enterprise Boston MA October 2015 to Present eBay Enterprise Inc is a multinational ecommerce corporation that specialized in creating developing and running online shopping sites for brick and mortar brands and retailers Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework and views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects and JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the front end functionality such as selection criteria Amazon Web Services AWS for improved efficiency of storage and fast access Created test harness to enable comprehensive testing utilizing Pythonand added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design and created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTM and Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component alongwith Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created UI Screens for initiation and validation and worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance and used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Involved in writing stored procedures using MySQL and interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 34 Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Comcast Greenwood Village CO May 2013 to September 2015 Comcast Corporation formerly registered as Comcast Holdings is an American global mass media conglomerate and is the largest broadcasting and cable television company in the world by revenue Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework and tools using Python Shell scripting XML to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module and used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Created Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Wrote Python scripts to parse XML documents and load the data in database and generated property list for every application dynamically using Python also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 and JavaScript and handled all the client side validation using JavaScript Designed and developed data management system using MySQL and created a Git repository and added the project to GitHub Built development environment with JIRA and created unit testregression test framework for workingnew code and responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer Pay Pal San Jose CA October 2011 to April 2013 PayPal Holdings Inc is an American company operating a worldwide online payments system Online money transfers serve as electronic alternatives to traditional paper methods like checks and money orders Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python 26 and used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data and used Angularjs to build efficient backend for client web application and Python to extract information from XML files Worked on Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP11 XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL and developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask and Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search and effectively communicated with the external vendors to resolve queries and used GIT for the version control Environment Python 2627 JavaScript Django Framework 13 CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Python Developer GE Energy Waukesha WI November 2009 to September 2011 Payroll ERP is developed to satisfy all the Payroll needs of a corporate This software is used to aid in automating and providing timely and accurate payroll processing for all types of employees Payroll software has builtin functions to accommodate the life cycle of payroll processing This system captures details of different categories of Employees and generates pay slips detailing their income details calculated based on the Organization Budget lines Income tax details and others Responsibilities Worked with team of developers on Python applications for RISK management Made Django web based apps for Insurance premium calculations Designed the architecture of the hardware environments and methodology of the code Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used Python OS module on UNIX environment made job cloning and forking Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Involved in testing RESTFull API like Twilio Facebook and Twitter Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts agile Restfull UNIX and Windows Additional Information TECHNICAL SKILLS Languages Python Java C C Embedded SQL PostgreSQL Frameworks Django AngularJS Hibernate Sqlalchemy Orm Scripting Languages HTML CSS Java Script JQuery Angular JS Databases MS SQL Server MSAccess MY SQL Oracle SQLite PLSQL User Interfaces HTML HTML5 DHTML CSS XML DOM XAML IIS AJAX SOAP Restful WSDL Web Services Angular JS Operating Systems Linux Windows Windows Server 2003 Version Control Team Foundation Server TFS Subversion Clear Case Protocols TCPIP HTTP FTP Tools IDE PowerShell Jenkins build process Eclipse Pydev Wing 31 Django South Fabric deployment tool Pytest Selenium SoapUI Chef Jenkins PyCharm Sublime Eclipse NetBeans SDLC Waterfall RAD Agile Scrum Packages MS Office Word Excel and PowerPoint MS outlook Lotus Notes Others GIT PIP PEP8 Celery Redis RESTful Web Services Heroku OpenCV DjangoDebugToolbar Datastage CA workload automation Service now Microstartegy Quality center",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "eBay",
        "Enterprise",
        "Boston",
        "MA",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "eBay",
        "Enterprise",
        "Boston",
        "MA",
        "October",
        "Present",
        "eBay",
        "Enterprise",
        "Inc",
        "ecommerce",
        "corporation",
        "shopping",
        "sites",
        "brick",
        "mortar",
        "brands",
        "retailers",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Django",
        "Database",
        "APIs",
        "database",
        "objects",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "test",
        "harness",
        "testing",
        "Pythonand",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTM",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Pandas",
        "library",
        "Analysis",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "Shell",
        "Scripting",
        "AWS",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Wireshark",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Angularjs",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Comcast",
        "Greenwood",
        "Village",
        "CO",
        "May",
        "September",
        "Comcast",
        "Corporation",
        "Comcast",
        "Holdings",
        "mass",
        "media",
        "conglomerate",
        "broadcasting",
        "cable",
        "television",
        "company",
        "world",
        "revenue",
        "Responsibilities",
        "requirement",
        "gathering",
        "architect",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "PyQt",
        "functionality",
        "filtering",
        "columns",
        "customers",
        "transactions",
        "statements",
        "navigation",
        "rules",
        "application",
        "page",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Web",
        "development",
        "programming",
        "engineering",
        "Django",
        "UWSGI",
        "SQL",
        "admin",
        "tools",
        "BDD",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Python",
        "scripts",
        "data",
        "access",
        "analysis",
        "Scripts",
        "DataFeeds",
        "XLS",
        "FIXML",
        "process",
        "system",
        "monitoring",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "Python",
        "Bootstrap",
        "Angularjs",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "UI",
        "website",
        "HTML5",
        "XHTML",
        "AJAX",
        "CSS3",
        "JavaScript",
        "client",
        "side",
        "validation",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Git",
        "repository",
        "project",
        "development",
        "environment",
        "JIRA",
        "unit",
        "testregression",
        "test",
        "framework",
        "workingnew",
        "code",
        "web",
        "application",
        "Environment",
        "Python",
        "Django",
        "Java",
        "Angularjs",
        "Bootstrap",
        "Bash",
        "PyQt",
        "XML",
        "Shell",
        "Scripting",
        "MySQL",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Jenkins",
        "Apache",
        "Web",
        "Server",
        "Linux",
        "Python",
        "Developer",
        "Pay",
        "Pal",
        "San",
        "Jose",
        "CA",
        "October",
        "April",
        "PayPal",
        "Holdings",
        "Inc",
        "company",
        "payments",
        "Online",
        "money",
        "transfers",
        "alternatives",
        "paper",
        "methods",
        "checks",
        "money",
        "orders",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "UseCase",
        "Class",
        "Object",
        "Diagrams",
        "UML",
        "Rational",
        "Rose",
        "Object",
        "Oriented",
        "AnalysisObject",
        "Oriented",
        "Design",
        "techniques",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "Python",
        "Django",
        "APIs",
        "database",
        "access",
        "GUI",
        "PyQt",
        "end",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "backend",
        "client",
        "web",
        "application",
        "Python",
        "information",
        "XML",
        "files",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "technologies",
        "Web",
        "Services",
        "WSDLs",
        "SOAP11",
        "XML",
        "XSD",
        "XSLT",
        "requirement",
        "gathering",
        "architect",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "monitoring",
        "practices",
        "search",
        "vendors",
        "queries",
        "GIT",
        "version",
        "control",
        "Environment",
        "Python",
        "JavaScript",
        "Django",
        "Framework",
        "CSS",
        "SQL",
        "MySQL",
        "LAMP",
        "JQuery",
        "Adobe",
        "Dreamweaver",
        "Apache",
        "web",
        "server",
        "Python",
        "Developer",
        "GE",
        "Energy",
        "Waukesha",
        "WI",
        "November",
        "September",
        "Payroll",
        "ERP",
        "Payroll",
        "software",
        "payroll",
        "processing",
        "types",
        "employees",
        "Payroll",
        "software",
        "builtin",
        "functions",
        "life",
        "cycle",
        "payroll",
        "processing",
        "system",
        "details",
        "categories",
        "Employees",
        "pay",
        "slips",
        "income",
        "details",
        "Organization",
        "Budget",
        "lines",
        "Income",
        "tax",
        "details",
        "others",
        "Responsibilities",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "Django",
        "web",
        "apps",
        "Insurance",
        "premium",
        "calculations",
        "architecture",
        "hardware",
        "environments",
        "methodology",
        "code",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "status",
        "jobs",
        "shell",
        "scripting",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "client",
        "side",
        "validation",
        "JavaScript",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "Python",
        "programs",
        "block",
        "codes",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "RESTFull",
        "API",
        "Twilio",
        "Facebook",
        "Twitter",
        "data",
        "management",
        "system",
        "MySQL",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "Environment",
        "Python",
        "Django",
        "XML",
        "Java",
        "Apache",
        "CSS",
        "MySQL",
        "JSON",
        "DHTML",
        "HTML",
        "JavaScript",
        "Shell",
        "Scripts",
        "Restfull",
        "UNIX",
        "Windows",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Python",
        "Java",
        "C",
        "C",
        "SQL",
        "PostgreSQL",
        "Frameworks",
        "Django",
        "Hibernate",
        "Sqlalchemy",
        "Orm",
        "Scripting",
        "Languages",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "JQuery",
        "Angular",
        "JS",
        "Databases",
        "MS",
        "SQL",
        "Server",
        "MSAccess",
        "MY",
        "SQL",
        "Oracle",
        "SQLite",
        "PLSQL",
        "User",
        "Interfaces",
        "HTML",
        "HTML5",
        "DHTML",
        "CSS",
        "XML",
        "DOM",
        "XAML",
        "IIS",
        "AJAX",
        "SOAP",
        "Restful",
        "WSDL",
        "Web",
        "Services",
        "Angular",
        "JS",
        "Operating",
        "Systems",
        "Linux",
        "Windows",
        "Windows",
        "Server",
        "Version",
        "Control",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Subversion",
        "Clear",
        "Case",
        "Protocols",
        "HTTP",
        "FTP",
        "Tools",
        "IDE",
        "PowerShell",
        "Jenkins",
        "process",
        "Eclipse",
        "Pydev",
        "Wing",
        "Django",
        "South",
        "Fabric",
        "deployment",
        "tool",
        "Pytest",
        "Selenium",
        "SoapUI",
        "Chef",
        "Jenkins",
        "PyCharm",
        "Sublime",
        "Eclipse",
        "NetBeans",
        "Waterfall",
        "RAD",
        "Agile",
        "Scrum",
        "Packages",
        "MS",
        "Office",
        "Word",
        "Excel",
        "PowerPoint",
        "MS",
        "outlook",
        "Lotus",
        "Others",
        "GIT",
        "PIP",
        "PEP8",
        "Celery",
        "Redis",
        "RESTful",
        "Web",
        "Services",
        "Heroku",
        "OpenCV",
        "DjangoDebugToolbar",
        "Datastage",
        "CA",
        "workload",
        "automation",
        "Service",
        "Microstartegy",
        "Quality",
        "center"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:20:40.795766",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer eBay Enterprise Boston MA Authorized to work in the US for any employer Work Experience Sr Python Developer eBay Enterprise Boston MA October 2015 to Present eBay Enterprise Inc is a multinational ecommerce corporation that specialized in creating developing and running online shopping sites for brick and mortar brands and retailers Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework and views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django Database APIs to access database objects and JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the front end functionality such as selection criteria Amazon Web Services AWS for improved efficiency of storage and fast access Created test harness to enable comprehensive testing utilizing Pythonand added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design and created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTM and Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component alongwith Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created UI Screens for initiation and validation and worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance and used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Involved in writing stored procedures using MySQL and interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 34 Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Comcast Greenwood Village CO May 2013 to September 2015 Comcast Corporation formerly registered as Comcast Holdings is an American global mass media conglomerate and is the largest broadcasting and cable television company in the world by revenue Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework and tools using Python Shell scripting XML to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module and used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Created Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Wrote Python scripts to parse XML documents and load the data in database and generated property list for every application dynamically using Python also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 and JavaScript and handled all the client side validation using JavaScript Designed and developed data management system using MySQL and created a Git repository and added the project to GitHub Built development environment with JIRA and created unit testregression test framework for workingnew code and responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer Pay Pal San Jose CA October 2011 to April 2013 PayPal Holdings Inc is an American company operating a worldwide online payments system Online money transfers serve as electronic alternatives to traditional paper methods like checks and money orders Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed UseCase Class and Object Diagrams using UML Rational Rose for Object Oriented AnalysisObject Oriented Design techniques Designed and developed data management system using MySQL Built application logic using Python 26 and used Django APIs for database access Provided GUI utilizing PyQt for the end user to create modify and view reports based on client data and used Angularjs to build efficient backend for client web application and Python to extract information from XML files Worked on Service Oriented Architecture SOA and its related technologies like Web Services BPEL WSDLs SOAP11 XML XSD XSLT etc Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on development of SQL and stored procedures on MYSQL and developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask and Cassandra schema for the APIs Implemented monitoring and established best practices around using elastic search and effectively communicated with the external vendors to resolve queries and used GIT for the version control Environment Python 2627 JavaScript Django Framework 13 CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server Python Developer GE Energy Waukesha WI November 2009 to September 2011 Payroll ERP is developed to satisfy all the Payroll needs of a corporate This software is used to aid in automating and providing timely and accurate payroll processing for all types of employees Payroll software has builtin functions to accommodate the life cycle of payroll processing This system captures details of different categories of Employees and generates pay slips detailing their income details calculated based on the Organization Budget lines Income tax details and others Responsibilities Worked with team of developers on Python applications for RISK management Made Django web based apps for Insurance premium calculations Designed the architecture of the hardware environments and methodology of the code Done Job scheduling batchjob scheduling and process control forking and cloning of jobs and checking the status of the jobs using shell scripting Used Python OS module on UNIX environment made job cloning and forking Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Involved in writing application level code to interact with APIs Web Services using JSON Used Unit Test Python library for testing many Python programs and block of codes Used HTML CSS JQuery JSON and Javascript for front end applications Involved in testing RESTFull API like Twilio Facebook and Twitter Designed and developed data management system using MySQL Involved in Agile Methodologies and SCRUM Process Participated in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Django XML Java Apache CSS MySQL JSON DHTML HTML JavaScript Shell Scripts agile Restfull UNIX and Windows Additional Information TECHNICAL SKILLS Languages Python Java C C Embedded SQL PostgreSQL Frameworks Django AngularJS Hibernate Sqlalchemy Orm Scripting Languages HTML CSS Java Script JQuery Angular JS Databases MS SQL Server MSAccess MY SQL Oracle SQLite PLSQL User Interfaces HTML HTML5 DHTML CSS XML DOM XAML IIS AJAX SOAP Restful WSDL Web Services Angular JS Operating Systems Linux Windows Windows Server 2003 Version Control Team Foundation Server TFS Subversion Clear Case Protocols TCPIP HTTP FTP Tools IDE PowerShell Jenkins build process Eclipse Pydev Wing 31 Django South Fabric deployment tool Pytest Selenium SoapUI Chef Jenkins PyCharm Sublime Eclipse NetBeans SDLC Waterfall RAD Agile Scrum Packages MS Office Word Excel and PowerPoint MS outlook Lotus Notes Others GIT PIP PEP8 Celery Redis RESTful Web Services Heroku OpenCV DjangoDebugToolbar Datastage CA workload automation Service now Microstartegy Quality center",
    "unique_id": "a1e078ed-6b7a-4ee7-8705-9dc3174ab186"
}