{
    "clean_data": "DevOps Engineer DevOps Engineer DevOps Engineer 1 Daimler Trucks Ladson SC Around 8 years of comprehensive experience in the areas of DevOps AWS and Linux Administration Highly motivated and committed DevOps Engineer experienced in Automating configuring and deploying instances on AWS Microsoft Azure and Rackspace cloud environments and Data centers Created and deployed VMs on the Microsoft cloud service Azure managed the virtual networks Azure AD and SQL Build and configure a virtual data center in the AWS cloud to support Enterprise Data Warehouse hosting including Virtual Private Cloud VPC Public and Private Subnets Security Groups Route Tables Elastic Load Balancer Provide highly durable and available data by creating and managing policies for S3 data store versioning life cycle policies Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Designed highly available cost effective and fault tolerant systems using multiple EC2 instances Auto Scaling Elastic Load Balance and AMIs and Glacier for QA and UAT environments as well as infrastructure servers for GIT and Chef AWS Meta data Management Automating AWS EMR Building AWS Datalake solution Building Infrastructure as a service using Cloud Formation Managing Amazon instances by taking AMIs and performing administration and monitoring of Amazon instances like EC2 using Amazon Cloud Watch Experience on CDN to deliver webpages and other content based on geographic locations of the user Transfer data from Datacenters to cloud using AWS ImportExport Snowball service Manage Amazon Redshift clusters such as launching the cluster and specifying the node type as well Setup and build AWS infrastructure various resources VPC EC2 RDB S3 IAM EBS Security Group Auto Scaling SES SNS and RDS in Cloud Formation JSON templates Used Amazon Route53 to manage DNS zones and also give public DNS names to elastic load balancers IPs Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers like Apache Create configure and manage Resource Pools and CPU Load Balancing Experience in building enterprise Applications and Distributed Systems using technologies such as Core Java J2EE Servlets JSP JSF EJB STRUTS Hibernate SPRING Swing JDBC JMS EMS and XML Worked on AWS for deploying EC2 instances consisting of various flavours viz OEL RHEL CentOS Ubuntu and Solaris in both Linux and Windows Authorized to work in the US for any employer Work Experience DevOps Engineer 1 Daimler Trucks Ladson SC November 2017 to Present for a team that involves three different development teams and multiple simultaneous software releases Configure monitor and automate Amazon Web Services as well as involved in deploying the content cloud platform on Amazon Web Services using EC2 S3 and EBS Experience in upgrading Hadoop 13 to 22 using Ansible Defining Release Process Policy for projects early in SDLC Installation Configuration and Management of RDBMS and NoSql tools such as DynamoDB Creating S3 buckets and maintained and utilized the policy management of S3 buckets and Glacier for storage and backup on AWS Involved heavily in setting up the CICD pipeline using Jenkins Maven Nexus GitHub CHEF Terraform and AWS Performed all necessary daytoday TFSSubversionGIT support for different projects Worked on creating ASPNET MVC WCF and REST API application development Automation of Business reports using Bash scripts in Unix on Datalake by sending them to business owners Virtual Machine Backup and Recover from a Recovery Services Vault using Azure PowerShell and Portal Configured an AWS Virtual Private Cloud VPC and Database Subnet Group for isolation of resources within the Amazon RDS Aurora DB cluster Experienced in endtoend API Design and development using JEE Spring Integration Framework and Spring Boot for micro services Merging release branches back to master after the production release and resolving of conflicts during merging in both TFS and GIT Led POC and Product Evaluation for Data Strategy Data Excellence program that is aimed to optimize Teradata and establish future state using DataLake for data consumption Experience in creating notifications and alarms for EC2 instances using CloudWatch Implemented Terraform modules for deployment of applications across multiple cloud providers Created Puppet manifests classes and modules to automate system operations Automated deployment modules of IIS web applications bindings and configuration settings using a combination of PowerShell scripts and Puppet Launched Amazon EC2 Cloud Instances using Amazon Web Services Linux Ubuntu 1404 and Configured launched instances with respect to specific applications Created branches and managed the source code for various applications in GIT Configured GIT with Jenkins and schedule jobs using POLL SCM option Responsible for installing Jenkins master and slave nodes and also configure Jenkins builds for continuous integration and delivery Code Quality Analysis techniques are performed by integrating Check style Find bugs with CI tools Build scripts using ANT and MAVEN build tools in Jenkins to move from one environment to other environments Developed and tested many features in an AGILE environment using Ruby on Rails HTML5 CSS JavaScript Bootstrap RSpec and Html Designed the mobile application using java design patterns such as Singleton and Factory Create and setup automated nightly build environment for java projects using MAVEN Collaborated with development support teams to setup a continuous delivery environment with the use of Docker Made changes to the Ruby on rails application for the support of internationalization Developed Java Spring Boot mobile applications to StoreExtract data infrom LDAP and Cassandra database Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST Using Axis and Jersey frameworks Implemented the Project structure based on Spring MVC pattern using spring boot Edited TSQL stored procedures Worked in different environments like DEV QA Datalake and Analytics Cluster as part of Hadoop Development Automate build process by writing Maven build scripts Developed JavaScript functions for Client side validations Configure and managing daily and hourly scheduled snapshots backup Using Jenkins AWS CodeDeploy plugin to deploy and Chef for unattended bootstrapping in AWS Developed and implemented software release management strategies for various applications according to agile process Resolved update merge and password authentication issues in Bamboo and JIRA Kept track of all releases and request of the developers through infrastructure management tool Environment AWS S3 EBS Elastic Load balancer ELB Auto Scaling groups VPC IAM Cloud Watch Glacier DynamoDB Opsworks shell scripts GIT Docker Chef Maven Jenkins Puppet Python Apache Tomcat6x7x Windows and Linux environment VMware ESXESXi Server and Workstation Role as DevopsAWS Engineer 2 Conoco Phillips Houston TX August 2016 to November 2017 Responsibilities Involved in deploying the content Cloud platform on AWS using EC2 S3 and EBS Experience in Performance Tuning and Query Optimization in AWS Redshift Performed AWS cloud deployments for web applications with monitoring using CloudWatch and VPC to manage network configurations Set up CI Continuous Integration for major releases in Jenkins and TFS Built a new CI pipeline Testing and deployment automation with Docker Jenkins and Ansible Worked on creating the modules driven AWS Infrastructure with Terraform Configured Elastic Load Balancers with EC2 Auto scaling groups Hands on experience with IAM to set up user roles with corresponding user and group policies using JSON Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Automating backups by shell for Linux and PowerShell scripts for windows to transfer data in S3 bucket Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances Our Line Of Business consists of 4 Ansible towers We have main playbook Yaml for maintaining roles inventory files and groups variables Knowledge in syncing Onpremises Windows Server Active Directory to Azure AD AAD using Azure AD connect Configured Single Sign on SSO Access to users in Azure Active Directory Experience in working with Ansible versions 18 20 Tower version 21 Configured Shared Access Signature SAS tokens and Storage Access Policies in Azure cloud Infrastructure Knowledge on Syncing on premises Active Directory users to office 365 with Azure AD connect and ADFS to make easy to user moving Responsible for configuring diagnostics and remote debugging in Azure Architecture Implemented runtime configuration changes using Azure portal in cloud service Experience working with AWS Simple calculator to estimate pricing for corporate proposals Using Jenkins AWS Code Deploy plugin to deploy to AWS Configuration of various plugins for Jenkins for automation of the workflow and to optimize and smooth running of build jobs Implemented rapidprovisioning and lifecycle management for Ubuntu 120 Linux using Amazon EC2 Chef and custom RubyBash scripts Wrote Ansible Playbooks with PythonSSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Coordinate with team lead and other developers to implement features according to specifications and helped in refactoring JAVA code to enhance the performance along with fixing issues and application support Managed Maven environment by setting up local remote and central repositories with required configuration in maven configuration files Defined dependencies and plugins in Maven pomxml for various activities and integrated Maven with GIT to manage and deploy project related tags Used MVC architecture Business Delegate Session facade Data Access Object Value Object and Singleton patterns Writing chef recipes for various applications and deploying them in AWS using Terraform Written code using Java Spring and also used REST service to connect the Oracle and display it on the browser Primarily used Ruby to write GIT applications and Chef Recipes Written Teraform templates Chef cookbooks recipes and pushed them onto Chef server for configuring EC2 Instances Created Infrastructure Git repositories for Terraform in order to launch the stacks Created Chef Cookbooks for sudo users and network configurations using Chef Server Worked with Puppet and Chef which is used to manage Linux but later versions support Microsoft Windows Creating manifests and classes in Puppet for automation Installed Setup and monitored Hadoop clusters for development and production environment using Cloudera CDH3 CDH4 Apache Tomcat Hortonworks Ambari on Ubuntu 1204 Python Redhat Centos Windows Worked on infrastructure with Docker containerization Experience working on Terraform which is used to create and compose all the components necessary to run application Wrote data purge and server monitoring utilities for GemFire process Experience in working with GIT to store the code and integrated it to Ansible Tower to deploy the playbooks Worked on Amazon Web Services for deploying EC2 instances consisting of various flavors viz OEL RHEL CentOS and Ubuntu 1204 in Linux and Windows 2008 and 2012 Changed the existing Terraform templates to Cloud Formation Templates for use in AWS environment Architect design implement support and evaluate securityfocused tools and services Conducted performance testing of Apache and Tomcat management services Implemented Web Services integration components from SOA using SOAP Web Services Develop and interpret security policies and procedures Work item modification creation security management and code management in TFS Perform daytoday operation and troubleshooting of VMs Created triggers for efficient access control of the ClearCase operations to invoke operations before or after the execution of vital ClearCase events to restrict or provide access to users Deployed the applications on multiple WebLogic Servers and maintained Load balancing high availability and Fail over functionalities Unit tested the utilities and coordinated the issues with Gemfire team Experience in Writing Python modules for Ansible customizations Implemented integrated and managed Perforce as well as instituting accurate and automated build and release methodologies for Binary compilation for Apache HTTPHTTPS Tomcat PHP and MySQL Worked on configuring data sources for JBOSS with various versions of databases Involved in writing SQL queries to implement the schema related changes for internationalization and debugged the build errors using SQL queries to make sure Database is not corrupted Designed Methodologies to troubleshoot based on the issues and documented all the procedures to educate team members Coordinated and solved issues with QA Team who were using the utilities as their testing tool for Gemfire AWS Terraform templates for any automation requirements in AWS services Experience with threat modeling especially for web application and web APIs Configured and monitored distributed and multiplatform servers using Nagios Evaluate and recommend new and emerging security products and technologies Environment AWS AWS lambda S3 EBS Redshift IAM EC2 Elastic Load Balancer AWS Auto Scaling Teraform Apache Tomcat Nagios MySQL PHP Perforce Jenkins Maven Docker Puppet JBOSS 422GA JSONWeb Logic Application Server 9x 10x Chef GIT Oracle Windows and Linux Role as AWSCloud Infrastructure Engineer 3 XL Catlin Stamford CT January 2016 to July 2016 Responsibilities Responsible for versioning the source code releasing binary files creating and applying labels on source files and release files Creating the AWS Security groups to enable firewall Test cloud level deployments in AWS Amazon Web Services for future cloud deployments Managed Linux staging and testing environments and also automated application packaging and deployments Configured and managed Nagios for monitoring over existing AWS Cloud platform Build Nagios monitors for new services being deployed Supported Puppet master server and around 500 Clients by installing agents and managed multiple modules and manifests Defined instances in code next to relevant configuration on what running and then created the instances via Puppet Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Responsible for design and maintenance of the SubversionGIT Repositories views and the access control strategies Integrate GIT into Jenkins to automate the code checkout process Responsible for User Management Plugin Management and EndtoEnd automation of Build and Deployment process using Jenkins Experience with Build Management tools like Maven for writing buildxml and Pomxml Managed the Maven Repository using Nexus tool and used the same to share the snapshots and releases of internal projects Automated Linux production servers setup using Puppet scripts Documented release builds and source control processes and plans Analyze and resolve compilation and deployment errors related to code development branching merging and building of source code Created multiple Python scripts for various application level tasks Worked with Oracle Database Admin to keep all the specified tables as assigned by developments in sync for every release Used Oracle to connect to various databases and to check for the invalid objects after and before each release Build and maintain SQL scripts and execute different scripts for different environments Created Instances in Apache WebServer and JBOSS Application server in QA and Production environments Documented the SCM process and policies of the company and recommended some process changes Worked with scrum and development team in overseeing bug tracking test prioritization test automation and releases Educated team about continuous integration and automated testing practices and supported them throughout development Maintain and enhance current build procedures for all software development projects Environment Jenkins Maven GIT Puppets Scripts Python Nexus Oracle 10g Apache JBOSS Application Server Cloud computing tools Role as Java Developer 4 Avaya Santa Clara CA November 2013 to November 2014 Responsibilities Participated in requirement gathering and framework implementation sessions through Agile TDD methodology Designed and developed Application based on Spring framework using MVC UI Layer implemented with Struts Struts validation JSF JQuery JavaScript AJAX CSS and HTML Extensively used Core Java such as Exceptions and Collections Used AngularJS as the development framework to build a singlepage application Added security features to the application using HTTPS and password security features Created DAO classes for invoking stored proceduresqueries to retrieve from Oracle database Used Maven framework to develop automated build scripts Employed Hibernate as a persistence mechanism to implement object relational mapping Used SOAP based messaging format to transfer requests and responses and validated the request and responses against XML Schema Definition Developed PLSQL scripts for data conversion Worked on Eclipse for development and deployment of application in Web Logic Application Server Used Log4j for logging messages and Rational Clear Case for version Control Used Jira to access and track the bugs or defects Used GIT as source control tool Used JUnit framework and Selenium WebDriver for Unit Testing Involved in Designing Coding Testing gathering and analyzing system requirements Involved in protocol designing for communication between server and multiple locos Developed Shared assemblies for reusability of common functionality Drawing line graphs bar charts and pie charts Developed different type of services like communication service for receiving the data from different locos using socket programming Multithreading and decoding the received data Developed email and SMS services for sending email and SMS alerts to the railway customers The application is based on the MVCII Architecture using Apache Struts framework Designed and developed user interface screens using HTML DHTML and JSP Developed and maintained the data layer using the EJBs Environment Spring Microservices using Spring Boot 135 Struts JQuery Junit JMS XML JSP HTML5 CSS AngularJS AJAX HQL JQuery RAD Hibernate 30 JPA RestFul Web Services AWS EC2 Clear Case Spring MVC Scala Maven DB2 Teradata RDBMS GCC Collection GDB debugger and IBM WebSphere Role as Java Developer 5 Tech Mahindra Hyderabad Telangana January 2010 to January 2010 Responsibilities Developed various J2EE components like Servlets JSP JSTL AJAX SAX JAXP JNDI and JMS Used Spring MVC framework to enable the interactions between JSPView layer and implemented different DPs Data Operations were performed using Spring ORM wiring with Hibernate Developed and implemented Spring and J2EE based MVC ModelViewController framework for the application Implemented business layer using Core java Spring Beans using dependency injection Spring annotations Used a micro service architecture with Spring Bootbased services interacting through a combination of REST and MQ and leveraging AWS to build test and deploy Identity microservices Worked on service oriented systems that utilize REST web frameworks SOAP and message queue technologies Spring MVC 4 Spring REST Template Spring Integration Developing database adapter web services adapter messaging adapter and custom workflow for nonoracle system using Camel and Implemented Apache Camel routes using CamelSpring XML and CamelSpring processor beans Set up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system Designed and developed JSP pages using Spring MVC 30 framework and also created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components Developed serverside services using Java Spring Web Services SOAP Restful WSDL JAXB JAXRPC Implemented features like logging user session validation using SpringAOP module and Spring IOC Integrated Spring with Hibernate using configurations and implemented DAOlayer to save entities into data base Set up Secure Sockets LayerSSL communication in Websphere application server Experience working with Oracle EBS modules Experienced in collaborating with senior backend and senior mobile developers in an Agile Scrum Methodology Environments Red Hat Linux RHEL 45 UNIX Python Logical Volume Manager Global File System Red Hat Cluster Servers Maven Puppet Nagios BMC Oracle MySQL Shell scripts Perl scripts Apache Tomcat SAN SUSE VMware Education Bachelor of Engineering in Information Technologies in Information Technologies Anna University June 2009 Bachelors Skills Apache 4 years AWS 4 years Database 4 years GIT 4 years Maven 4 years AWS S3 EBS Elastic Load balancer ELB Auto Scaling groups VPC IAM Cloud Watch Glacier DynamoDB Opsworks shell scripts GIT Docker Chef Maven Jenkins Additional Information Technical Expertise Cloud Infrastructure AWS OpenStack MS Azure Rackspace Configuration management Tools Puppet Chef Vagrant Docker Ansible and Opswork Continuous Integration Tools Jenkins Bamboo Hudson Build Master Travis CI Build Tools ANT MAVEN Gradle Build Forge CMAKE MS Build Versioning Tools GIT ClearCase Perforce CVS Subversion Scripting Shell Python PLSQL Java AWTSwing C XML HTML Groovy Ruby and Perl Languages C C PHP PLSQL and JavaJ2EE Web Technologies Java Script Node Js Servlets JDBC a CSS Virtualization Tools VMware vSphere Oracle Virtualbox VMware Workstation WebApp server Web Logic Application Server 9x 10x WebSphere6x7x8x Apache Tomcat5x7x AWS JBOSS422GA Database DynamoDB MongoDB Oracle SQL Server MySQL Operating System Windows Linux Unix Solaris RHEL Centos Ubuntu SUSE Network Services LDAP DNS NIS DHCP NFS Web mail FTP Logging Monitoring Tools Nagios Splunk Logstash Terraform Key QualificationsStrengths Infrastructure Automation and Development API management Artifacts Management Programming for Cloud Configuration Management BuildRelease Engineering Orchestration and Deployment Performance RequirementsSLAs Access Management Agile Methodology",
    "entities": [
        "Responsible for User Management Plugin Management",
        "AWS ImportExport Snowball",
        "REST Using Axis",
        "Spring Bootbased",
        "Oracle SQL Server",
        "DevOps AWS",
        "DevOps Engineer DevOps Engineer",
        "Build Nagios",
        "Build and Deployment",
        "Request",
        "Java PHP Nodejs Python Ruby",
        "Implemented Apache Camel",
        "Pomxml",
        "Virtual Private Cloud VPC Public and Private Subnets Security Groups Route Tables Elastic Load Balancer",
        "the Ruby on rails application",
        "AWS Developed",
        "the Maven Repository",
        "Created Instances",
        "EBS Security Group Auto Scaling SES SNS",
        "Onpremises Windows Server Active Directory",
        "Jersey",
        "Using Jenkins AWS CodeDeploy",
        "Maven Puppet",
        "Created Terraform",
        "Maven Jenkins Additional Information Technical Expertise Cloud Infrastructure AWS",
        "IBM",
        "CloudWatch Implemented Terraform",
        "TFS",
        "BMC Oracle",
        "CamelSpring",
        "Web Logic Application Server",
        "Camel",
        "Hadoop",
        "SOAP",
        "RestFul Web Services AWS",
        "Telangana",
        "SDLC Installation Configuration and Management",
        "Created DAO",
        "JUnit",
        "Web Logic Application Server Used",
        "ClearCase",
        "Secure Sockets LayerSSL",
        "Shell",
        "MAVEN Collaborated",
        "StoreExtract",
        "Exceptions and Collections Used",
        "DataLake",
        "Rational Clear Case",
        "Developed Shared",
        "Terraform Configured Elastic Load Balancers",
        "UAT",
        "Amazon",
        "CamelSpring XML",
        "AWS Microsoft Azure",
        "CDH3",
        "XML Worked",
        "CI Continuous Integration",
        "Architect",
        "Installed Setup",
        "Jenkins Maven Nexus",
        "Developed",
        "Jenkins",
        "Bash",
        "WebLogic Servers",
        "Monitoring Tools Nagios",
        "Perforce CVS Subversion Scripting Shell Python",
        "Terraform Written",
        "Apache Create",
        "Amazon Redshift",
        "VMware",
        "Puppet",
        "AWS Security Groups",
        "Windows",
        "Client",
        "MQ",
        "AWS Cloud",
        "Core",
        "Java Spring Web Services SOAP Restful WSDL",
        "TFS Perform",
        "CloudWatch",
        "Chef Server Worked",
        "Recover",
        "Data Access Object Value Object",
        "AGILE",
        "SOA",
        "Linux",
        "AWS Performed",
        "JSP",
        "Hibernate Developed",
        "DevOps Engineer",
        "Ubuntu 1204 Python Redhat Centos Windows Worked",
        "JSPView",
        "DEV QA Datalake and Analytics Cluster",
        "Servlets JSP JSTL AJAX SAX JAXP JNDI",
        "Amazon EC2 Chef",
        "Docker",
        "RDS",
        "Oracle EBS modules Experienced",
        "Nexus",
        "Configure",
        "Building Infrastructure",
        "Recovery Services Vault",
        "Html Designed",
        "MVC",
        "Oracle Database Admin",
        "JSP Developed",
        "JSON Used AWS",
        "EndtoEnd",
        "AWS Involved",
        "GIT",
        "Supported Puppet",
        "Storage Access Policies",
        "DAOlayer",
        "SpringAOP",
        "US",
        "Terraform",
        "Database",
        "QA",
        "maven",
        "Santa Clara",
        "IAM",
        "Rackspace Configuration",
        "REST API application development Automation of Business",
        "AWS Amazon Web Services",
        "Created",
        "NoSql",
        "XL Catlin Stamford CT",
        "Global File System Red Hat Cluster Servers",
        "AWS",
        "Server",
        "Instances Created Infrastructure Git",
        "Data Operations",
        "Legacy Systems",
        "Websphere",
        "Code Quality Analysis",
        "Coordinated",
        "JEE Spring Integration Framework",
        "Database Subnet Group",
        "Singleton",
        "Oracle",
        "JBOSS Application",
        "Daimler Trucks Ladson",
        "Bamboo",
        "HTML",
        "java",
        "SAS",
        "CDN",
        "Engineer 2 Conoco",
        "Automating",
        "PHP Perforce",
        "SQL",
        "Chef AWS",
        "SNS Automating",
        "Amazon Web Services",
        "PowerShell",
        "MAVEN",
        "SMS",
        "J2EE",
        "API Design",
        "Virtual Machine Backup",
        "Created Puppet",
        "Tower",
        "AWS Datalake",
        "CI",
        "CICD",
        "Identity",
        "FTP",
        "Datacenters",
        "Puppet Connected",
        "PythonSSH",
        "Resource Pools",
        "Azure Active Directory",
        "SCM",
        "JAVA",
        "Artifacts Management Programming for Cloud Configuration Management BuildRelease Engineering Orchestration and Deployment Performance RequirementsSLAs Access Management",
        "Maven",
        "Linux Administration Highly",
        "Opswork Continuous Integration",
        "ADFS",
        "ANT",
        "the MVCII Architecture",
        "Product Evaluation for Data Strategy Data Excellence",
        "Microsoft",
        "Datalake",
        "Gemfire AWS Terraform",
        "HTML DHTML",
        "Hadoop Development Automate",
        "AWSCloud Infrastructure",
        "GemFire",
        "Selenium WebDriver",
        "JavaJ2EE Web Technologies",
        "Created Chef Cookbooks",
        "HTTPS",
        "Tomcat",
        "Data",
        "REST",
        "Build Management",
        "Implemented Web Services",
        "CPU Load Balancing Experience",
        "AWS Security",
        "Workstation Role",
        "AWS Configuration",
        "QA Team",
        "Application",
        "ELB Auto Scaling",
        "EBS",
        "Teradata",
        "Dispatch",
        "Azure Architecture Implemented",
        "DNS"
    ],
    "experience": "Experience on CDN to deliver webpages and other content based on geographic locations of the user Transfer data from Datacenters to cloud using AWS ImportExport Snowball service Manage Amazon Redshift clusters such as launching the cluster and specifying the node type as well Setup and build AWS infrastructure various resources VPC EC2 RDB S3 IAM EBS Security Group Auto Scaling SES SNS and RDS in Cloud Formation JSON templates Used Amazon Route53 to manage DNS zones and also give public DNS names to elastic load balancers IPs Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers like Apache Create configure and manage Resource Pools and CPU Load Balancing Experience in building enterprise Applications and Distributed Systems using technologies such as Core Java J2EE Servlets JSP JSF EJB STRUTS Hibernate SPRING Swing JDBC JMS EMS and XML Worked on AWS for deploying EC2 instances consisting of various flavours viz OEL RHEL CentOS Ubuntu and Solaris in both Linux and Windows Authorized to work in the US for any employer Work Experience DevOps Engineer 1 Daimler Trucks Ladson SC November 2017 to Present for a team that involves three different development teams and multiple simultaneous software releases Configure monitor and automate Amazon Web Services as well as involved in deploying the content cloud platform on Amazon Web Services using EC2 S3 and EBS Experience in upgrading Hadoop 13 to 22 using Ansible Defining Release Process Policy for projects early in SDLC Installation Configuration and Management of RDBMS and NoSql tools such as DynamoDB Creating S3 buckets and maintained and utilized the policy management of S3 buckets and Glacier for storage and backup on AWS Involved heavily in setting up the CICD pipeline using Jenkins Maven Nexus GitHub CHEF Terraform and AWS Performed all necessary daytoday TFSSubversionGIT support for different projects Worked on creating ASPNET MVC WCF and REST API application development Automation of Business reports using Bash scripts in Unix on Datalake by sending them to business owners Virtual Machine Backup and Recover from a Recovery Services Vault using Azure PowerShell and Portal Configured an AWS Virtual Private Cloud VPC and Database Subnet Group for isolation of resources within the Amazon RDS Aurora DB cluster Experienced in endtoend API Design and development using JEE Spring Integration Framework and Spring Boot for micro services Merging release branches back to master after the production release and resolving of conflicts during merging in both TFS and GIT Led POC and Product Evaluation for Data Strategy Data Excellence program that is aimed to optimize Teradata and establish future state using DataLake for data consumption Experience in creating notifications and alarms for EC2 instances using CloudWatch Implemented Terraform modules for deployment of applications across multiple cloud providers Created Puppet manifests classes and modules to automate system operations Automated deployment modules of IIS web applications bindings and configuration settings using a combination of PowerShell scripts and Puppet Launched Amazon EC2 Cloud Instances using Amazon Web Services Linux Ubuntu 1404 and Configured launched instances with respect to specific applications Created branches and managed the source code for various applications in GIT Configured GIT with Jenkins and schedule jobs using POLL SCM option Responsible for installing Jenkins master and slave nodes and also configure Jenkins builds for continuous integration and delivery Code Quality Analysis techniques are performed by integrating Check style Find bugs with CI tools Build scripts using ANT and MAVEN build tools in Jenkins to move from one environment to other environments Developed and tested many features in an AGILE environment using Ruby on Rails HTML5 CSS JavaScript Bootstrap RSpec and Html Designed the mobile application using java design patterns such as Singleton and Factory Create and setup automated nightly build environment for java projects using MAVEN Collaborated with development support teams to setup a continuous delivery environment with the use of Docker Made changes to the Ruby on rails application for the support of internationalization Developed Java Spring Boot mobile applications to StoreExtract data infrom LDAP and Cassandra database Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST Using Axis and Jersey frameworks Implemented the Project structure based on Spring MVC pattern using spring boot Edited TSQL stored procedures Worked in different environments like DEV QA Datalake and Analytics Cluster as part of Hadoop Development Automate build process by writing Maven build scripts Developed JavaScript functions for Client side validations Configure and managing daily and hourly scheduled snapshots backup Using Jenkins AWS CodeDeploy plugin to deploy and Chef for unattended bootstrapping in AWS Developed and implemented software release management strategies for various applications according to agile process Resolved update merge and password authentication issues in Bamboo and JIRA Kept track of all releases and request of the developers through infrastructure management tool Environment AWS S3 EBS Elastic Load balancer ELB Auto Scaling groups VPC IAM Cloud Watch Glacier DynamoDB Opsworks shell scripts GIT Docker Chef Maven Jenkins Puppet Python Apache Tomcat6x7x Windows and Linux environment VMware ESXESXi Server and Workstation Role as DevopsAWS Engineer 2 Conoco Phillips Houston TX August 2016 to November 2017 Responsibilities Involved in deploying the content Cloud platform on AWS using EC2 S3 and EBS Experience in Performance Tuning and Query Optimization in AWS Redshift Performed AWS cloud deployments for web applications with monitoring using CloudWatch and VPC to manage network configurations Set up CI Continuous Integration for major releases in Jenkins and TFS Built a new CI pipeline Testing and deployment automation with Docker Jenkins and Ansible Worked on creating the modules driven AWS Infrastructure with Terraform Configured Elastic Load Balancers with EC2 Auto scaling groups Hands on experience with IAM to set up user roles with corresponding user and group policies using JSON Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Automating backups by shell for Linux and PowerShell scripts for windows to transfer data in S3 bucket Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances Our Line Of Business consists of 4 Ansible towers We have main playbook Yaml for maintaining roles inventory files and groups variables Knowledge in syncing Onpremises Windows Server Active Directory to Azure AD AAD using Azure AD connect Configured Single Sign on SSO Access to users in Azure Active Directory Experience in working with Ansible versions 18 20 Tower version 21 Configured Shared Access Signature SAS tokens and Storage Access Policies in Azure cloud Infrastructure Knowledge on Syncing on premises Active Directory users to office 365 with Azure AD connect and ADFS to make easy to user moving Responsible for configuring diagnostics and remote debugging in Azure Architecture Implemented runtime configuration changes using Azure portal in cloud service Experience working with AWS Simple calculator to estimate pricing for corporate proposals Using Jenkins AWS Code Deploy plugin to deploy to AWS Configuration of various plugins for Jenkins for automation of the workflow and to optimize and smooth running of build jobs Implemented rapidprovisioning and lifecycle management for Ubuntu 120 Linux using Amazon EC2 Chef and custom RubyBash scripts Wrote Ansible Playbooks with PythonSSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Coordinate with team lead and other developers to implement features according to specifications and helped in refactoring JAVA code to enhance the performance along with fixing issues and application support Managed Maven environment by setting up local remote and central repositories with required configuration in maven configuration files Defined dependencies and plugins in Maven pomxml for various activities and integrated Maven with GIT to manage and deploy project related tags Used MVC architecture Business Delegate Session facade Data Access Object Value Object and Singleton patterns Writing chef recipes for various applications and deploying them in AWS using Terraform Written code using Java Spring and also used REST service to connect the Oracle and display it on the browser Primarily used Ruby to write GIT applications and Chef Recipes Written Teraform templates Chef cookbooks recipes and pushed them onto Chef server for configuring EC2 Instances Created Infrastructure Git repositories for Terraform in order to launch the stacks Created Chef Cookbooks for sudo users and network configurations using Chef Server Worked with Puppet and Chef which is used to manage Linux but later versions support Microsoft Windows Creating manifests and classes in Puppet for automation Installed Setup and monitored Hadoop clusters for development and production environment using Cloudera CDH3 CDH4 Apache Tomcat Hortonworks Ambari on Ubuntu 1204 Python Redhat Centos Windows Worked on infrastructure with Docker containerization Experience working on Terraform which is used to create and compose all the components necessary to run application Wrote data purge and server monitoring utilities for GemFire process Experience in working with GIT to store the code and integrated it to Ansible Tower to deploy the playbooks Worked on Amazon Web Services for deploying EC2 instances consisting of various flavors viz OEL RHEL CentOS and Ubuntu 1204 in Linux and Windows 2008 and 2012 Changed the existing Terraform templates to Cloud Formation Templates for use in AWS environment Architect design implement support and evaluate securityfocused tools and services Conducted performance testing of Apache and Tomcat management services Implemented Web Services integration components from SOA using SOAP Web Services Develop and interpret security policies and procedures Work item modification creation security management and code management in TFS Perform daytoday operation and troubleshooting of VMs Created triggers for efficient access control of the ClearCase operations to invoke operations before or after the execution of vital ClearCase events to restrict or provide access to users Deployed the applications on multiple WebLogic Servers and maintained Load balancing high availability and Fail over functionalities Unit tested the utilities and coordinated the issues with Gemfire team Experience in Writing Python modules for Ansible customizations Implemented integrated and managed Perforce as well as instituting accurate and automated build and release methodologies for Binary compilation for Apache HTTPHTTPS Tomcat PHP and MySQL Worked on configuring data sources for JBOSS with various versions of databases Involved in writing SQL queries to implement the schema related changes for internationalization and debugged the build errors using SQL queries to make sure Database is not corrupted Designed Methodologies to troubleshoot based on the issues and documented all the procedures to educate team members Coordinated and solved issues with QA Team who were using the utilities as their testing tool for Gemfire AWS Terraform templates for any automation requirements in AWS services Experience with threat modeling especially for web application and web APIs Configured and monitored distributed and multiplatform servers using Nagios Evaluate and recommend new and emerging security products and technologies Environment AWS AWS lambda S3 EBS Redshift IAM EC2 Elastic Load Balancer AWS Auto Scaling Teraform Apache Tomcat Nagios MySQL PHP Perforce Jenkins Maven Docker Puppet JBOSS 422GA JSONWeb Logic Application Server 9x 10x Chef GIT Oracle Windows and Linux Role as AWSCloud Infrastructure Engineer 3 XL Catlin Stamford CT January 2016 to July 2016 Responsibilities Responsible for versioning the source code releasing binary files creating and applying labels on source files and release files Creating the AWS Security groups to enable firewall Test cloud level deployments in AWS Amazon Web Services for future cloud deployments Managed Linux staging and testing environments and also automated application packaging and deployments Configured and managed Nagios for monitoring over existing AWS Cloud platform Build Nagios monitors for new services being deployed Supported Puppet master server and around 500 Clients by installing agents and managed multiple modules and manifests Defined instances in code next to relevant configuration on what running and then created the instances via Puppet Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Responsible for design and maintenance of the SubversionGIT Repositories views and the access control strategies Integrate GIT into Jenkins to automate the code checkout process Responsible for User Management Plugin Management and EndtoEnd automation of Build and Deployment process using Jenkins Experience with Build Management tools like Maven for writing buildxml and Pomxml Managed the Maven Repository using Nexus tool and used the same to share the snapshots and releases of internal projects Automated Linux production servers setup using Puppet scripts Documented release builds and source control processes and plans Analyze and resolve compilation and deployment errors related to code development branching merging and building of source code Created multiple Python scripts for various application level tasks Worked with Oracle Database Admin to keep all the specified tables as assigned by developments in sync for every release Used Oracle to connect to various databases and to check for the invalid objects after and before each release Build and maintain SQL scripts and execute different scripts for different environments Created Instances in Apache WebServer and JBOSS Application server in QA and Production environments Documented the SCM process and policies of the company and recommended some process changes Worked with scrum and development team in overseeing bug tracking test prioritization test automation and releases Educated team about continuous integration and automated testing practices and supported them throughout development Maintain and enhance current build procedures for all software development projects Environment Jenkins Maven GIT Puppets Scripts Python Nexus Oracle 10 g Apache JBOSS Application Server Cloud computing tools Role as Java Developer 4 Avaya Santa Clara CA November 2013 to November 2014 Responsibilities Participated in requirement gathering and framework implementation sessions through Agile TDD methodology Designed and developed Application based on Spring framework using MVC UI Layer implemented with Struts Struts validation JSF JQuery JavaScript AJAX CSS and HTML Extensively used Core Java such as Exceptions and Collections Used AngularJS as the development framework to build a singlepage application Added security features to the application using HTTPS and password security features Created DAO classes for invoking stored proceduresqueries to retrieve from Oracle database Used Maven framework to develop automated build scripts Employed Hibernate as a persistence mechanism to implement object relational mapping Used SOAP based messaging format to transfer requests and responses and validated the request and responses against XML Schema Definition Developed PLSQL scripts for data conversion Worked on Eclipse for development and deployment of application in Web Logic Application Server Used Log4j for logging messages and Rational Clear Case for version Control Used Jira to access and track the bugs or defects Used GIT as source control tool Used JUnit framework and Selenium WebDriver for Unit Testing Involved in Designing Coding Testing gathering and analyzing system requirements Involved in protocol designing for communication between server and multiple locos Developed Shared assemblies for reusability of common functionality Drawing line graphs bar charts and pie charts Developed different type of services like communication service for receiving the data from different locos using socket programming Multithreading and decoding the received data Developed email and SMS services for sending email and SMS alerts to the railway customers The application is based on the MVCII Architecture using Apache Struts framework Designed and developed user interface screens using HTML DHTML and JSP Developed and maintained the data layer using the EJBs Environment Spring Microservices using Spring Boot 135 Struts JQuery Junit JMS XML JSP HTML5 CSS AngularJS AJAX HQL JQuery RAD Hibernate 30 JPA RestFul Web Services AWS EC2 Clear Case Spring MVC Scala Maven DB2 Teradata RDBMS GCC Collection GDB debugger and IBM WebSphere Role as Java Developer 5 Tech Mahindra Hyderabad Telangana January 2010 to January 2010 Responsibilities Developed various J2EE components like Servlets JSP JSTL AJAX SAX JAXP JNDI and JMS Used Spring MVC framework to enable the interactions between JSPView layer and implemented different DPs Data Operations were performed using Spring ORM wiring with Hibernate Developed and implemented Spring and J2EE based MVC ModelViewController framework for the application Implemented business layer using Core java Spring Beans using dependency injection Spring annotations Used a micro service architecture with Spring Bootbased services interacting through a combination of REST and MQ and leveraging AWS to build test and deploy Identity microservices Worked on service oriented systems that utilize REST web frameworks SOAP and message queue technologies Spring MVC 4 Spring REST Template Spring Integration Developing database adapter web services adapter messaging adapter and custom workflow for nonoracle system using Camel and Implemented Apache Camel routes using CamelSpring XML and CamelSpring processor beans Set up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system Designed and developed JSP pages using Spring MVC 30 framework and also created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components Developed serverside services using Java Spring Web Services SOAP Restful WSDL JAXB JAXRPC Implemented features like logging user session validation using SpringAOP module and Spring IOC Integrated Spring with Hibernate using configurations and implemented DAOlayer to save entities into data base Set up Secure Sockets LayerSSL communication in Websphere application server Experience working with Oracle EBS modules Experienced in collaborating with senior backend and senior mobile developers in an Agile Scrum Methodology Environments Red Hat Linux RHEL 45 UNIX Python Logical Volume Manager Global File System Red Hat Cluster Servers Maven Puppet Nagios BMC Oracle MySQL Shell scripts Perl scripts Apache Tomcat SAN SUSE VMware Education Bachelor of Engineering in Information Technologies in Information Technologies Anna University June 2009 Bachelors Skills Apache 4 years AWS 4 years Database 4 years GIT 4 years Maven 4 years AWS S3 EBS Elastic Load balancer ELB Auto Scaling groups VPC IAM Cloud Watch Glacier DynamoDB Opsworks shell scripts GIT Docker Chef Maven Jenkins Additional Information Technical Expertise Cloud Infrastructure AWS OpenStack MS Azure Rackspace Configuration management Tools Puppet Chef Vagrant Docker Ansible and Opswork Continuous Integration Tools Jenkins Bamboo Hudson Build Master Travis CI Build Tools ANT MAVEN Gradle Build Forge CMAKE MS Build Versioning Tools GIT ClearCase Perforce CVS Subversion Scripting Shell Python PLSQL Java AWTSwing C XML HTML Groovy Ruby and Perl Languages C C PHP PLSQL and JavaJ2EE Web Technologies Java Script Node Js Servlets JDBC a CSS Virtualization Tools VMware vSphere Oracle Virtualbox VMware Workstation WebApp server Web Logic Application Server 9x 10x WebSphere6x7x8x Apache Tomcat5x7x AWS JBOSS422GA Database DynamoDB MongoDB Oracle SQL Server MySQL Operating System Windows Linux Unix Solaris RHEL Centos Ubuntu SUSE Network Services LDAP DNS NIS DHCP NFS Web mail FTP Logging Monitoring Tools Nagios Splunk Logstash Terraform Key QualificationsStrengths Infrastructure Automation and Development API management Artifacts Management Programming for Cloud Configuration Management BuildRelease Engineering Orchestration and Deployment Performance RequirementsSLAs Access Management Agile Methodology",
    "extracted_keywords": [
        "DevOps",
        "Engineer",
        "DevOps",
        "Engineer",
        "DevOps",
        "Engineer",
        "Daimler",
        "Trucks",
        "Ladson",
        "SC",
        "years",
        "experience",
        "areas",
        "DevOps",
        "AWS",
        "Linux",
        "Administration",
        "DevOps",
        "Engineer",
        "configuring",
        "instances",
        "AWS",
        "Microsoft",
        "Azure",
        "Rackspace",
        "cloud",
        "environments",
        "Data",
        "centers",
        "VMs",
        "Microsoft",
        "cloud",
        "service",
        "Azure",
        "networks",
        "AD",
        "SQL",
        "Build",
        "data",
        "center",
        "AWS",
        "cloud",
        "Enterprise",
        "Data",
        "Warehouse",
        "Virtual",
        "Cloud",
        "VPC",
        "Public",
        "Private",
        "Subnets",
        "Security",
        "Groups",
        "Route",
        "Tables",
        "Elastic",
        "Load",
        "Balancer",
        "data",
        "policies",
        "S3",
        "data",
        "store",
        "life",
        "cycle",
        "policies",
        "AWS",
        "lambda",
        "servers",
        "code",
        "S3",
        "SNS",
        "cost",
        "systems",
        "EC2",
        "instances",
        "Auto",
        "Scaling",
        "Elastic",
        "Load",
        "Balance",
        "AMIs",
        "Glacier",
        "QA",
        "UAT",
        "environments",
        "infrastructure",
        "servers",
        "GIT",
        "Chef",
        "AWS",
        "Meta",
        "data",
        "Management",
        "Automating",
        "AWS",
        "EMR",
        "Building",
        "AWS",
        "Datalake",
        "solution",
        "Building",
        "Infrastructure",
        "service",
        "Cloud",
        "Formation",
        "Amazon",
        "instances",
        "AMIs",
        "administration",
        "monitoring",
        "Amazon",
        "instances",
        "EC2",
        "Amazon",
        "Cloud",
        "Watch",
        "Experience",
        "CDN",
        "webpages",
        "content",
        "locations",
        "user",
        "Transfer",
        "data",
        "Datacenters",
        "AWS",
        "ImportExport",
        "Snowball",
        "service",
        "Manage",
        "Amazon",
        "Redshift",
        "clusters",
        "cluster",
        "node",
        "type",
        "Setup",
        "AWS",
        "infrastructure",
        "resources",
        "VPC",
        "EC2",
        "RDB",
        "S3",
        "IAM",
        "EBS",
        "Security",
        "Group",
        "Auto",
        "Scaling",
        "SES",
        "SNS",
        "RDS",
        "Cloud",
        "Formation",
        "templates",
        "Amazon",
        "Route53",
        "DNS",
        "zones",
        "DNS",
        "names",
        "load",
        "balancers",
        "IPs",
        "AWS",
        "Beanstalk",
        "web",
        "applications",
        "services",
        "Java",
        "PHP",
        "Nodejs",
        "Python",
        "Ruby",
        "Docker",
        "servers",
        "Apache",
        "configure",
        "Resource",
        "Pools",
        "CPU",
        "Load",
        "Balancing",
        "Experience",
        "enterprise",
        "Applications",
        "Distributed",
        "Systems",
        "technologies",
        "Core",
        "Java",
        "J2EE",
        "Servlets",
        "JSP",
        "JSF",
        "EJB",
        "STRUTS",
        "Hibernate",
        "SPRING",
        "Swing",
        "JDBC",
        "JMS",
        "EMS",
        "XML",
        "AWS",
        "EC2",
        "instances",
        "OEL",
        "RHEL",
        "CentOS",
        "Ubuntu",
        "Solaris",
        "Linux",
        "Windows",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "DevOps",
        "Engineer",
        "Daimler",
        "Trucks",
        "Ladson",
        "SC",
        "November",
        "Present",
        "team",
        "development",
        "teams",
        "software",
        "Configure",
        "monitor",
        "Amazon",
        "Web",
        "Services",
        "content",
        "cloud",
        "platform",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "EBS",
        "Experience",
        "Hadoop",
        "Ansible",
        "Defining",
        "Release",
        "Process",
        "Policy",
        "projects",
        "SDLC",
        "Installation",
        "Configuration",
        "Management",
        "RDBMS",
        "NoSql",
        "tools",
        "DynamoDB",
        "S3",
        "buckets",
        "policy",
        "management",
        "S3",
        "buckets",
        "Glacier",
        "storage",
        "backup",
        "AWS",
        "CICD",
        "pipeline",
        "Jenkins",
        "Maven",
        "Nexus",
        "GitHub",
        "CHEF",
        "Terraform",
        "AWS",
        "daytoday",
        "TFSSubversionGIT",
        "support",
        "projects",
        "ASPNET",
        "MVC",
        "WCF",
        "REST",
        "API",
        "application",
        "development",
        "Automation",
        "Business",
        "reports",
        "Bash",
        "scripts",
        "Unix",
        "Datalake",
        "business",
        "owners",
        "Virtual",
        "Machine",
        "Backup",
        "Recover",
        "Recovery",
        "Services",
        "Vault",
        "Azure",
        "PowerShell",
        "Portal",
        "Configured",
        "AWS",
        "Virtual",
        "Cloud",
        "VPC",
        "Database",
        "Subnet",
        "Group",
        "isolation",
        "resources",
        "Amazon",
        "RDS",
        "Aurora",
        "DB",
        "cluster",
        "endtoend",
        "API",
        "Design",
        "development",
        "JEE",
        "Spring",
        "Integration",
        "Framework",
        "Spring",
        "Boot",
        "micro",
        "services",
        "Merging",
        "release",
        "branches",
        "master",
        "production",
        "release",
        "conflicts",
        "TFS",
        "GIT",
        "Led",
        "POC",
        "Product",
        "Evaluation",
        "Data",
        "Strategy",
        "Data",
        "Excellence",
        "program",
        "Teradata",
        "state",
        "DataLake",
        "data",
        "consumption",
        "Experience",
        "notifications",
        "alarms",
        "EC2",
        "instances",
        "CloudWatch",
        "Implemented",
        "Terraform",
        "modules",
        "deployment",
        "applications",
        "providers",
        "Puppet",
        "manifests",
        "classes",
        "modules",
        "system",
        "operations",
        "deployment",
        "modules",
        "IIS",
        "web",
        "applications",
        "bindings",
        "configuration",
        "settings",
        "combination",
        "PowerShell",
        "scripts",
        "Puppet",
        "Amazon",
        "EC2",
        "Cloud",
        "Instances",
        "Amazon",
        "Web",
        "Services",
        "Linux",
        "Ubuntu",
        "Configured",
        "instances",
        "respect",
        "applications",
        "branches",
        "source",
        "code",
        "applications",
        "GIT",
        "Configured",
        "GIT",
        "Jenkins",
        "schedule",
        "jobs",
        "POLL",
        "SCM",
        "option",
        "Jenkins",
        "master",
        "slave",
        "nodes",
        "Jenkins",
        "integration",
        "delivery",
        "Code",
        "Quality",
        "Analysis",
        "techniques",
        "Check",
        "style",
        "bugs",
        "CI",
        "tools",
        "Build",
        "scripts",
        "ANT",
        "MAVEN",
        "tools",
        "Jenkins",
        "environment",
        "environments",
        "features",
        "AGILE",
        "environment",
        "Ruby",
        "Rails",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "RSpec",
        "Html",
        "application",
        "design",
        "patterns",
        "Singleton",
        "Factory",
        "Create",
        "setup",
        "build",
        "environment",
        "projects",
        "MAVEN",
        "Collaborated",
        "development",
        "support",
        "teams",
        "delivery",
        "environment",
        "use",
        "Docker",
        "changes",
        "Ruby",
        "rails",
        "application",
        "support",
        "internationalization",
        "Java",
        "Spring",
        "Boot",
        "applications",
        "StoreExtract",
        "data",
        "infrom",
        "LDAP",
        "Cassandra",
        "database",
        "implementation",
        "enterprise",
        "integration",
        "Web",
        "Services",
        "Legacy",
        "Systems",
        "SOAP",
        "REST",
        "Axis",
        "Jersey",
        "frameworks",
        "Project",
        "structure",
        "Spring",
        "MVC",
        "pattern",
        "spring",
        "boot",
        "Edited",
        "TSQL",
        "procedures",
        "environments",
        "DEV",
        "QA",
        "Datalake",
        "Analytics",
        "Cluster",
        "part",
        "Hadoop",
        "Development",
        "Automate",
        "build",
        "process",
        "Maven",
        "scripts",
        "Developed",
        "JavaScript",
        "functions",
        "Client",
        "side",
        "Configure",
        "snapshots",
        "backup",
        "Jenkins",
        "AWS",
        "CodeDeploy",
        "plugin",
        "Chef",
        "bootstrapping",
        "AWS",
        "software",
        "release",
        "management",
        "strategies",
        "applications",
        "process",
        "update",
        "merge",
        "password",
        "authentication",
        "issues",
        "Bamboo",
        "JIRA",
        "track",
        "releases",
        "request",
        "developers",
        "infrastructure",
        "management",
        "tool",
        "Environment",
        "AWS",
        "EBS",
        "Elastic",
        "Load",
        "balancer",
        "ELB",
        "Auto",
        "Scaling",
        "groups",
        "VPC",
        "IAM",
        "Cloud",
        "Watch",
        "Glacier",
        "DynamoDB",
        "Opsworks",
        "shell",
        "GIT",
        "Docker",
        "Chef",
        "Maven",
        "Jenkins",
        "Puppet",
        "Python",
        "Apache",
        "Tomcat6x7x",
        "Windows",
        "Linux",
        "environment",
        "VMware",
        "ESXESXi",
        "Server",
        "Workstation",
        "Role",
        "Engineer",
        "Conoco",
        "Phillips",
        "Houston",
        "TX",
        "August",
        "November",
        "Responsibilities",
        "content",
        "Cloud",
        "platform",
        "AWS",
        "EC2",
        "S3",
        "EBS",
        "Experience",
        "Performance",
        "Tuning",
        "Query",
        "Optimization",
        "AWS",
        "Performed",
        "AWS",
        "cloud",
        "deployments",
        "web",
        "applications",
        "monitoring",
        "CloudWatch",
        "VPC",
        "network",
        "configurations",
        "CI",
        "Continuous",
        "Integration",
        "releases",
        "Jenkins",
        "TFS",
        "CI",
        "pipeline",
        "Testing",
        "deployment",
        "automation",
        "Docker",
        "Jenkins",
        "Ansible",
        "Worked",
        "modules",
        "AWS",
        "Infrastructure",
        "Terraform",
        "Configured",
        "Elastic",
        "Load",
        "Balancers",
        "EC2",
        "Auto",
        "scaling",
        "groups",
        "Hands",
        "experience",
        "IAM",
        "user",
        "roles",
        "user",
        "group",
        "policies",
        "JSON",
        "AWS",
        "lambda",
        "servers",
        "code",
        "S3",
        "SNS",
        "Automating",
        "backups",
        "shell",
        "Linux",
        "PowerShell",
        "scripts",
        "windows",
        "data",
        "S3",
        "bucket",
        "AWS",
        "Security",
        "Groups",
        "firewalls",
        "traffic",
        "AWS",
        "EC2",
        "Line",
        "Business",
        "towers",
        "playbook",
        "Yaml",
        "roles",
        "inventory",
        "files",
        "groups",
        "Knowledge",
        "Onpremises",
        "Windows",
        "Server",
        "Active",
        "Directory",
        "AD",
        "AAD",
        "Azure",
        "AD",
        "connect",
        "Configured",
        "Single",
        "Sign",
        "SSO",
        "Access",
        "users",
        "Azure",
        "Active",
        "Directory",
        "Experience",
        "versions",
        "Tower",
        "version",
        "Configured",
        "Shared",
        "Access",
        "Signature",
        "SAS",
        "tokens",
        "Storage",
        "Access",
        "Policies",
        "cloud",
        "Infrastructure",
        "Knowledge",
        "premises",
        "Active",
        "Directory",
        "users",
        "Azure",
        "AD",
        "connect",
        "ADFS",
        "diagnostics",
        "debugging",
        "Azure",
        "Architecture",
        "runtime",
        "configuration",
        "changes",
        "Azure",
        "portal",
        "cloud",
        "service",
        "Experience",
        "AWS",
        "calculator",
        "pricing",
        "proposals",
        "Jenkins",
        "AWS",
        "Code",
        "Deploy",
        "plugin",
        "AWS",
        "Configuration",
        "plugins",
        "Jenkins",
        "automation",
        "workflow",
        "running",
        "build",
        "jobs",
        "lifecycle",
        "management",
        "Ubuntu",
        "Linux",
        "Amazon",
        "EC2",
        "Chef",
        "custom",
        "RubyBash",
        "scripts",
        "Wrote",
        "Ansible",
        "Playbooks",
        "PythonSSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "team",
        "lead",
        "developers",
        "features",
        "specifications",
        "code",
        "performance",
        "issues",
        "application",
        "support",
        "Managed",
        "Maven",
        "environment",
        "repositories",
        "configuration",
        "maven",
        "configuration",
        "files",
        "dependencies",
        "plugins",
        "Maven",
        "pomxml",
        "activities",
        "Maven",
        "GIT",
        "project",
        "tags",
        "MVC",
        "architecture",
        "Business",
        "Delegate",
        "Session",
        "facade",
        "Data",
        "Access",
        "Object",
        "Value",
        "Object",
        "Singleton",
        "chef",
        "recipes",
        "applications",
        "AWS",
        "Terraform",
        "Written",
        "code",
        "Java",
        "Spring",
        "REST",
        "service",
        "Oracle",
        "browser",
        "Ruby",
        "GIT",
        "applications",
        "Chef",
        "Recipes",
        "Written",
        "Teraform",
        "Chef",
        "recipes",
        "Chef",
        "server",
        "EC2",
        "Instances",
        "Infrastructure",
        "Git",
        "repositories",
        "Terraform",
        "order",
        "stacks",
        "Chef",
        "Cookbooks",
        "users",
        "network",
        "configurations",
        "Chef",
        "Server",
        "Worked",
        "Puppet",
        "Chef",
        "Linux",
        "versions",
        "Microsoft",
        "Windows",
        "manifests",
        "classes",
        "Puppet",
        "automation",
        "Setup",
        "Hadoop",
        "clusters",
        "development",
        "production",
        "environment",
        "Cloudera",
        "CDH3",
        "CDH4",
        "Apache",
        "Tomcat",
        "Hortonworks",
        "Ambari",
        "Ubuntu",
        "Python",
        "Redhat",
        "Centos",
        "Windows",
        "infrastructure",
        "Docker",
        "containerization",
        "Experience",
        "Terraform",
        "components",
        "application",
        "Wrote",
        "data",
        "purge",
        "server",
        "utilities",
        "GemFire",
        "process",
        "Experience",
        "GIT",
        "code",
        "Ansible",
        "Tower",
        "playbooks",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "instances",
        "flavors",
        "OEL",
        "RHEL",
        "CentOS",
        "Ubuntu",
        "Linux",
        "Windows",
        "Terraform",
        "templates",
        "Cloud",
        "Formation",
        "Templates",
        "use",
        "AWS",
        "environment",
        "Architect",
        "design",
        "implement",
        "support",
        "tools",
        "services",
        "performance",
        "testing",
        "Apache",
        "Tomcat",
        "management",
        "services",
        "Web",
        "Services",
        "integration",
        "components",
        "SOA",
        "SOAP",
        "Web",
        "Services",
        "Develop",
        "security",
        "policies",
        "procedures",
        "Work",
        "item",
        "modification",
        "creation",
        "security",
        "management",
        "code",
        "management",
        "TFS",
        "Perform",
        "daytoday",
        "operation",
        "troubleshooting",
        "VMs",
        "triggers",
        "access",
        "control",
        "ClearCase",
        "operations",
        "operations",
        "execution",
        "ClearCase",
        "events",
        "access",
        "users",
        "applications",
        "WebLogic",
        "Servers",
        "Load",
        "availability",
        "Fail",
        "functionalities",
        "Unit",
        "utilities",
        "issues",
        "Gemfire",
        "team",
        "Experience",
        "Python",
        "modules",
        "customizations",
        "Perforce",
        "build",
        "methodologies",
        "Binary",
        "compilation",
        "Apache",
        "HTTPHTTPS",
        "Tomcat",
        "PHP",
        "MySQL",
        "data",
        "sources",
        "JBOSS",
        "versions",
        "databases",
        "SQL",
        "queries",
        "schema",
        "changes",
        "internationalization",
        "build",
        "errors",
        "SQL",
        "queries",
        "Database",
        "Designed",
        "Methodologies",
        "issues",
        "procedures",
        "team",
        "members",
        "Coordinated",
        "issues",
        "QA",
        "Team",
        "utilities",
        "testing",
        "tool",
        "Gemfire",
        "AWS",
        "Terraform",
        "automation",
        "requirements",
        "AWS",
        "Experience",
        "threat",
        "web",
        "application",
        "web",
        "APIs",
        "Configured",
        "servers",
        "Nagios",
        "Evaluate",
        "security",
        "products",
        "technologies",
        "Environment",
        "AWS",
        "AWS",
        "lambda",
        "S3",
        "EBS",
        "Redshift",
        "IAM",
        "EC2",
        "Elastic",
        "Load",
        "Balancer",
        "AWS",
        "Auto",
        "Scaling",
        "Teraform",
        "Apache",
        "Tomcat",
        "Nagios",
        "MySQL",
        "PHP",
        "Perforce",
        "Jenkins",
        "Maven",
        "Docker",
        "Puppet",
        "JBOSS",
        "422GA",
        "JSONWeb",
        "Logic",
        "Application",
        "Server",
        "9x",
        "10x",
        "Chef",
        "GIT",
        "Oracle",
        "Windows",
        "Linux",
        "Role",
        "AWSCloud",
        "Infrastructure",
        "Engineer",
        "XL",
        "Catlin",
        "Stamford",
        "CT",
        "January",
        "July",
        "Responsibilities",
        "source",
        "code",
        "files",
        "labels",
        "source",
        "files",
        "files",
        "AWS",
        "Security",
        "groups",
        "firewall",
        "Test",
        "level",
        "deployments",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "cloud",
        "deployments",
        "Managed",
        "Linux",
        "staging",
        "testing",
        "environments",
        "application",
        "packaging",
        "deployments",
        "Nagios",
        "AWS",
        "Cloud",
        "platform",
        "Build",
        "Nagios",
        "monitors",
        "services",
        "Puppet",
        "master",
        "server",
        "Clients",
        "agents",
        "modules",
        "manifests",
        "instances",
        "code",
        "configuration",
        "instances",
        "Puppet",
        "Connected",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "design",
        "maintenance",
        "SubversionGIT",
        "Repositories",
        "views",
        "access",
        "control",
        "strategies",
        "GIT",
        "Jenkins",
        "code",
        "checkout",
        "process",
        "User",
        "Management",
        "Plugin",
        "Management",
        "EndtoEnd",
        "automation",
        "Build",
        "Deployment",
        "process",
        "Jenkins",
        "Experience",
        "Build",
        "Management",
        "tools",
        "Maven",
        "buildxml",
        "Pomxml",
        "Maven",
        "Repository",
        "Nexus",
        "tool",
        "snapshots",
        "releases",
        "projects",
        "Automated",
        "Linux",
        "production",
        "servers",
        "setup",
        "Puppet",
        "scripts",
        "release",
        "builds",
        "source",
        "control",
        "processes",
        "Analyze",
        "compilation",
        "deployment",
        "errors",
        "development",
        "merging",
        "building",
        "source",
        "code",
        "Python",
        "scripts",
        "application",
        "level",
        "tasks",
        "Oracle",
        "Database",
        "Admin",
        "tables",
        "developments",
        "sync",
        "release",
        "Oracle",
        "databases",
        "objects",
        "release",
        "Build",
        "SQL",
        "scripts",
        "scripts",
        "environments",
        "Instances",
        "Apache",
        "WebServer",
        "JBOSS",
        "Application",
        "server",
        "QA",
        "Production",
        "environments",
        "SCM",
        "process",
        "policies",
        "company",
        "process",
        "changes",
        "scrum",
        "development",
        "team",
        "bug",
        "test",
        "prioritization",
        "test",
        "automation",
        "team",
        "integration",
        "testing",
        "practices",
        "development",
        "Maintain",
        "build",
        "procedures",
        "software",
        "development",
        "projects",
        "Environment",
        "Jenkins",
        "Maven",
        "GIT",
        "Puppets",
        "Scripts",
        "Python",
        "Nexus",
        "Oracle",
        "g",
        "Apache",
        "JBOSS",
        "Application",
        "Server",
        "Cloud",
        "computing",
        "tools",
        "Role",
        "Java",
        "Developer",
        "Avaya",
        "Santa",
        "Clara",
        "CA",
        "November",
        "November",
        "Responsibilities",
        "requirement",
        "gathering",
        "framework",
        "implementation",
        "sessions",
        "TDD",
        "methodology",
        "Application",
        "Spring",
        "framework",
        "MVC",
        "UI",
        "Layer",
        "Struts",
        "Struts",
        "validation",
        "JSF",
        "JQuery",
        "JavaScript",
        "AJAX",
        "CSS",
        "HTML",
        "Core",
        "Java",
        "Exceptions",
        "Collections",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "security",
        "features",
        "application",
        "HTTPS",
        "password",
        "security",
        "features",
        "Created",
        "DAO",
        "classes",
        "proceduresqueries",
        "Oracle",
        "database",
        "Maven",
        "framework",
        "build",
        "scripts",
        "Employed",
        "Hibernate",
        "persistence",
        "mechanism",
        "mapping",
        "SOAP",
        "format",
        "requests",
        "responses",
        "request",
        "responses",
        "XML",
        "Schema",
        "Definition",
        "PLSQL",
        "scripts",
        "data",
        "conversion",
        "Eclipse",
        "development",
        "deployment",
        "application",
        "Web",
        "Logic",
        "Application",
        "Server",
        "Log4j",
        "messages",
        "Rational",
        "Clear",
        "Case",
        "version",
        "Control",
        "Jira",
        "bugs",
        "defects",
        "GIT",
        "source",
        "control",
        "tool",
        "JUnit",
        "framework",
        "Selenium",
        "WebDriver",
        "Unit",
        "Testing",
        "Designing",
        "Coding",
        "Testing",
        "gathering",
        "system",
        "requirements",
        "protocol",
        "designing",
        "communication",
        "server",
        "locos",
        "Shared",
        "assemblies",
        "reusability",
        "functionality",
        "Drawing",
        "line",
        "graphs",
        "bar",
        "charts",
        "pie",
        "charts",
        "type",
        "services",
        "communication",
        "service",
        "data",
        "locos",
        "socket",
        "programming",
        "Multithreading",
        "data",
        "email",
        "SMS",
        "services",
        "email",
        "SMS",
        "railway",
        "customers",
        "application",
        "MVCII",
        "Architecture",
        "Apache",
        "Struts",
        "framework",
        "user",
        "interface",
        "screens",
        "HTML",
        "DHTML",
        "JSP",
        "Developed",
        "data",
        "layer",
        "EJBs",
        "Environment",
        "Spring",
        "Microservices",
        "Spring",
        "Boot",
        "Struts",
        "JQuery",
        "Junit",
        "JMS",
        "XML",
        "JSP",
        "HTML5",
        "CSS",
        "AngularJS",
        "AJAX",
        "HQL",
        "JQuery",
        "RAD",
        "Hibernate",
        "JPA",
        "RestFul",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "Clear",
        "Case",
        "Spring",
        "MVC",
        "Scala",
        "Maven",
        "DB2",
        "Teradata",
        "RDBMS",
        "GCC",
        "Collection",
        "GDB",
        "debugger",
        "IBM",
        "WebSphere",
        "Role",
        "Java",
        "Developer",
        "Tech",
        "Mahindra",
        "Hyderabad",
        "Telangana",
        "January",
        "January",
        "Responsibilities",
        "J2EE",
        "components",
        "Servlets",
        "JSP",
        "JSTL",
        "AJAX",
        "SAX",
        "JAXP",
        "JNDI",
        "JMS",
        "Spring",
        "MVC",
        "framework",
        "interactions",
        "JSPView",
        "layer",
        "DPs",
        "Data",
        "Operations",
        "Spring",
        "ORM",
        "wiring",
        "Hibernate",
        "Developed",
        "Spring",
        "J2EE",
        "MVC",
        "ModelViewController",
        "framework",
        "application",
        "business",
        "layer",
        "Core",
        "java",
        "Spring",
        "Beans",
        "dependency",
        "injection",
        "Spring",
        "annotations",
        "service",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "MQ",
        "AWS",
        "test",
        "Identity",
        "microservices",
        "service",
        "systems",
        "REST",
        "web",
        "frameworks",
        "message",
        "queue",
        "technologies",
        "Spring",
        "MVC",
        "Spring",
        "REST",
        "Template",
        "Spring",
        "Integration",
        "Developing",
        "database",
        "adapter",
        "web",
        "services",
        "adapter",
        "custom",
        "workflow",
        "nonoracle",
        "system",
        "Camel",
        "Implemented",
        "Apache",
        "Camel",
        "routes",
        "CamelSpring",
        "XML",
        "CamelSpring",
        "processor",
        "beans",
        "Jenkins",
        "server",
        "jobs",
        "builds",
        "GIT",
        "source",
        "control",
        "system",
        "JSP",
        "pages",
        "Spring",
        "MVC",
        "framework",
        "Spring",
        "MVC",
        "components",
        "Dispatch",
        "servlets",
        "configure",
        "Request",
        "mapping",
        "annotation",
        "controllers",
        "resolver",
        "components",
        "serverside",
        "services",
        "Java",
        "Spring",
        "Web",
        "Services",
        "SOAP",
        "Restful",
        "WSDL",
        "JAXB",
        "JAXRPC",
        "features",
        "user",
        "session",
        "validation",
        "module",
        "Spring",
        "IOC",
        "Integrated",
        "Spring",
        "Hibernate",
        "configurations",
        "DAOlayer",
        "entities",
        "data",
        "base",
        "Sockets",
        "LayerSSL",
        "communication",
        "Websphere",
        "application",
        "server",
        "Experience",
        "Oracle",
        "EBS",
        "modules",
        "backend",
        "developers",
        "Agile",
        "Scrum",
        "Methodology",
        "Red",
        "Hat",
        "Linux",
        "RHEL",
        "UNIX",
        "Python",
        "Logical",
        "Volume",
        "Manager",
        "Global",
        "File",
        "System",
        "Red",
        "Hat",
        "Cluster",
        "Servers",
        "Maven",
        "Puppet",
        "Nagios",
        "BMC",
        "Oracle",
        "MySQL",
        "Shell",
        "Perl",
        "scripts",
        "Apache",
        "Tomcat",
        "SAN",
        "SUSE",
        "VMware",
        "Education",
        "Bachelor",
        "Engineering",
        "Information",
        "Technologies",
        "Information",
        "Technologies",
        "Anna",
        "University",
        "June",
        "Bachelors",
        "Skills",
        "Apache",
        "years",
        "AWS",
        "years",
        "Database",
        "years",
        "GIT",
        "years",
        "Maven",
        "years",
        "AWS",
        "S3",
        "EBS",
        "Elastic",
        "Load",
        "balancer",
        "ELB",
        "Auto",
        "Scaling",
        "groups",
        "VPC",
        "IAM",
        "Cloud",
        "Watch",
        "Glacier",
        "DynamoDB",
        "Opsworks",
        "shell",
        "GIT",
        "Docker",
        "Chef",
        "Maven",
        "Jenkins",
        "Additional",
        "Information",
        "Technical",
        "Expertise",
        "Cloud",
        "Infrastructure",
        "AWS",
        "OpenStack",
        "MS",
        "Azure",
        "Rackspace",
        "Configuration",
        "management",
        "Tools",
        "Puppet",
        "Chef",
        "Vagrant",
        "Docker",
        "Ansible",
        "Opswork",
        "Continuous",
        "Integration",
        "Tools",
        "Jenkins",
        "Bamboo",
        "Hudson",
        "Build",
        "Master",
        "Travis",
        "CI",
        "Build",
        "Tools",
        "ANT",
        "MAVEN",
        "Gradle",
        "Build",
        "Forge",
        "CMAKE",
        "MS",
        "Build",
        "Versioning",
        "Tools",
        "GIT",
        "ClearCase",
        "Perforce",
        "CVS",
        "Subversion",
        "Scripting",
        "Shell",
        "Python",
        "PLSQL",
        "Java",
        "AWTSwing",
        "C",
        "XML",
        "HTML",
        "Groovy",
        "Ruby",
        "Perl",
        "Languages",
        "C",
        "C",
        "PHP",
        "PLSQL",
        "JavaJ2EE",
        "Web",
        "Technologies",
        "Java",
        "Script",
        "Node",
        "Js",
        "Servlets",
        "JDBC",
        "CSS",
        "Virtualization",
        "Tools",
        "VMware",
        "vSphere",
        "Oracle",
        "Virtualbox",
        "VMware",
        "Workstation",
        "WebApp",
        "server",
        "Web",
        "Logic",
        "Application",
        "Server",
        "9x",
        "10x",
        "Apache",
        "Tomcat5x7x",
        "AWS",
        "JBOSS422GA",
        "Database",
        "DynamoDB",
        "MongoDB",
        "Oracle",
        "SQL",
        "Server",
        "MySQL",
        "System",
        "Linux",
        "Unix",
        "Solaris",
        "RHEL",
        "Centos",
        "Ubuntu",
        "Network",
        "Services",
        "LDAP",
        "DNS",
        "NIS",
        "DHCP",
        "NFS",
        "Web",
        "mail",
        "FTP",
        "Logging",
        "Monitoring",
        "Tools",
        "Nagios",
        "Logstash",
        "Terraform",
        "Key",
        "QualificationsStrengths",
        "Infrastructure",
        "Automation",
        "Development",
        "API",
        "management",
        "Artifacts",
        "Management",
        "Programming",
        "Cloud",
        "Configuration",
        "Management",
        "BuildRelease",
        "Engineering",
        "Orchestration",
        "Deployment",
        "Performance",
        "RequirementsSLAs",
        "Access",
        "Management",
        "Agile",
        "Methodology"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:44:00.285713",
    "resume_data": "DevOps Engineer DevOps Engineer DevOps Engineer 1 Daimler Trucks Ladson SC Around 8 years of comprehensive experience in the areas of DevOps AWS and Linux Administration Highly motivated and committed DevOps Engineer experienced in Automating configuring and deploying instances on AWS Microsoft Azure and Rackspace cloud environments and Data centers Created and deployed VMs on the Microsoft cloud service Azure managed the virtual networks Azure AD and SQL Build and configure a virtual data center in the AWS cloud to support Enterprise Data Warehouse hosting including Virtual Private Cloud VPC Public and Private Subnets Security Groups Route Tables Elastic Load Balancer Provide highly durable and available data by creating and managing policies for S3 data store versioning life cycle policies Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Designed highly available cost effective and fault tolerant systems using multiple EC2 instances Auto Scaling Elastic Load Balance and AMIs and Glacier for QA and UAT environments as well as infrastructure servers for GIT and Chef AWS Meta data Management Automating AWS EMR Building AWS Datalake solution Building Infrastructure as a service using Cloud Formation Managing Amazon instances by taking AMIs and performing administration and monitoring of Amazon instances like EC2 using Amazon Cloud Watch Experience on CDN to deliver webpages and other content based on geographic locations of the user Transfer data from Datacenters to cloud using AWS ImportExport Snowball service Manage Amazon Redshift clusters such as launching the cluster and specifying the node type as well Setup and build AWS infrastructure various resources VPC EC2 RDB S3 IAM EBS Security Group Auto Scaling SES SNS and RDS in Cloud Formation JSON templates Used Amazon Route53 to manage DNS zones and also give public DNS names to elastic load balancers IPs Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers like Apache Create configure and manage Resource Pools and CPU Load Balancing Experience in building enterprise Applications and Distributed Systems using technologies such as Core Java J2EE Servlets JSP JSF EJB STRUTS Hibernate SPRING Swing JDBC JMS EMS and XML Worked on AWS for deploying EC2 instances consisting of various flavours viz OEL RHEL CentOS Ubuntu and Solaris in both Linux and Windows Authorized to work in the US for any employer Work Experience DevOps Engineer 1 Daimler Trucks Ladson SC November 2017 to Present for a team that involves three different development teams and multiple simultaneous software releases Configure monitor and automate Amazon Web Services as well as involved in deploying the content cloud platform on Amazon Web Services using EC2 S3 and EBS Experience in upgrading Hadoop 13 to 22 using Ansible Defining Release Process Policy for projects early in SDLC Installation Configuration and Management of RDBMS and NoSql tools such as DynamoDB Creating S3 buckets and maintained and utilized the policy management of S3 buckets and Glacier for storage and backup on AWS Involved heavily in setting up the CICD pipeline using Jenkins Maven Nexus GitHub CHEF Terraform and AWS Performed all necessary daytoday TFSSubversionGIT support for different projects Worked on creating ASPNET MVC WCF and REST API application development Automation of Business reports using Bash scripts in Unix on Datalake by sending them to business owners Virtual Machine Backup and Recover from a Recovery Services Vault using Azure PowerShell and Portal Configured an AWS Virtual Private Cloud VPC and Database Subnet Group for isolation of resources within the Amazon RDS Aurora DB cluster Experienced in endtoend API Design and development using JEE Spring Integration Framework and Spring Boot for micro services Merging release branches back to master after the production release and resolving of conflicts during merging in both TFS and GIT Led POC and Product Evaluation for Data Strategy Data Excellence program that is aimed to optimize Teradata and establish future state using DataLake for data consumption Experience in creating notifications and alarms for EC2 instances using CloudWatch Implemented Terraform modules for deployment of applications across multiple cloud providers Created Puppet manifests classes and modules to automate system operations Automated deployment modules of IIS web applications bindings and configuration settings using a combination of PowerShell scripts and Puppet Launched Amazon EC2 Cloud Instances using Amazon Web Services Linux Ubuntu 1404 and Configured launched instances with respect to specific applications Created branches and managed the source code for various applications in GIT Configured GIT with Jenkins and schedule jobs using POLL SCM option Responsible for installing Jenkins master and slave nodes and also configure Jenkins builds for continuous integration and delivery Code Quality Analysis techniques are performed by integrating Check style Find bugs with CI tools Build scripts using ANT and MAVEN build tools in Jenkins to move from one environment to other environments Developed and tested many features in an AGILE environment using Ruby on Rails HTML5 CSS JavaScript Bootstrap RSpec and Html Designed the mobile application using java design patterns such as Singleton and Factory Create and setup automated nightly build environment for java projects using MAVEN Collaborated with development support teams to setup a continuous delivery environment with the use of Docker Made changes to the Ruby on rails application for the support of internationalization Developed Java Spring Boot mobile applications to StoreExtract data infrom LDAP and Cassandra database Involved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST Using Axis and Jersey frameworks Implemented the Project structure based on Spring MVC pattern using spring boot Edited TSQL stored procedures Worked in different environments like DEV QA Datalake and Analytics Cluster as part of Hadoop Development Automate build process by writing Maven build scripts Developed JavaScript functions for Client side validations Configure and managing daily and hourly scheduled snapshots backup Using Jenkins AWS CodeDeploy plugin to deploy and Chef for unattended bootstrapping in AWS Developed and implemented software release management strategies for various applications according to agile process Resolved update merge and password authentication issues in Bamboo and JIRA Kept track of all releases and request of the developers through infrastructure management tool Environment AWS S3 EBS Elastic Load balancer ELB Auto Scaling groups VPC IAM Cloud Watch Glacier DynamoDB Opsworks shell scripts GIT Docker Chef Maven Jenkins Puppet Python Apache Tomcat6x7x Windows and Linux environment VMware ESXESXi Server and Workstation Role as DevopsAWS Engineer 2 Conoco Phillips Houston TX August 2016 to November 2017 Responsibilities Involved in deploying the content Cloud platform on AWS using EC2 S3 and EBS Experience in Performance Tuning and Query Optimization in AWS Redshift Performed AWS cloud deployments for web applications with monitoring using CloudWatch and VPC to manage network configurations Set up CI Continuous Integration for major releases in Jenkins and TFS Built a new CI pipeline Testing and deployment automation with Docker Jenkins and Ansible Worked on creating the modules driven AWS Infrastructure with Terraform Configured Elastic Load Balancers with EC2 Auto scaling groups Hands on experience with IAM to set up user roles with corresponding user and group policies using JSON Used AWS lambda to run servers without managing them and to trigger to run code by S3 and SNS Automating backups by shell for Linux and PowerShell scripts for windows to transfer data in S3 bucket Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances Our Line Of Business consists of 4 Ansible towers We have main playbook Yaml for maintaining roles inventory files and groups variables Knowledge in syncing Onpremises Windows Server Active Directory to Azure AD AAD using Azure AD connect Configured Single Sign on SSO Access to users in Azure Active Directory Experience in working with Ansible versions 18 20 Tower version 21 Configured Shared Access Signature SAS tokens and Storage Access Policies in Azure cloud Infrastructure Knowledge on Syncing on premises Active Directory users to office 365 with Azure AD connect and ADFS to make easy to user moving Responsible for configuring diagnostics and remote debugging in Azure Architecture Implemented runtime configuration changes using Azure portal in cloud service Experience working with AWS Simple calculator to estimate pricing for corporate proposals Using Jenkins AWS Code Deploy plugin to deploy to AWS Configuration of various plugins for Jenkins for automation of the workflow and to optimize and smooth running of build jobs Implemented rapidprovisioning and lifecycle management for Ubuntu 120 Linux using Amazon EC2 Chef and custom RubyBash scripts Wrote Ansible Playbooks with PythonSSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Coordinate with team lead and other developers to implement features according to specifications and helped in refactoring JAVA code to enhance the performance along with fixing issues and application support Managed Maven environment by setting up local remote and central repositories with required configuration in maven configuration files Defined dependencies and plugins in Maven pomxml for various activities and integrated Maven with GIT to manage and deploy project related tags Used MVC architecture Business Delegate Session facade Data Access Object Value Object and Singleton patterns Writing chef recipes for various applications and deploying them in AWS using Terraform Written code using Java Spring and also used REST service to connect the Oracle and display it on the browser Primarily used Ruby to write GIT applications and Chef Recipes Written Teraform templates Chef cookbooks recipes and pushed them onto Chef server for configuring EC2 Instances Created Infrastructure Git repositories for Terraform in order to launch the stacks Created Chef Cookbooks for sudo users and network configurations using Chef Server Worked with Puppet and Chef which is used to manage Linux but later versions support Microsoft Windows Creating manifests and classes in Puppet for automation Installed Setup and monitored Hadoop clusters for development and production environment using Cloudera CDH3 CDH4 Apache Tomcat Hortonworks Ambari on Ubuntu 1204 Python Redhat Centos Windows Worked on infrastructure with Docker containerization Experience working on Terraform which is used to create and compose all the components necessary to run application Wrote data purge and server monitoring utilities for GemFire process Experience in working with GIT to store the code and integrated it to Ansible Tower to deploy the playbooks Worked on Amazon Web Services for deploying EC2 instances consisting of various flavors viz OEL RHEL CentOS and Ubuntu 1204 in Linux and Windows 2008 and 2012 Changed the existing Terraform templates to Cloud Formation Templates for use in AWS environment Architect design implement support and evaluate securityfocused tools and services Conducted performance testing of Apache and Tomcat management services Implemented Web Services integration components from SOA using SOAP Web Services Develop and interpret security policies and procedures Work item modification creation security management and code management in TFS Perform daytoday operation and troubleshooting of VMs Created triggers for efficient access control of the ClearCase operations to invoke operations before or after the execution of vital ClearCase events to restrict or provide access to users Deployed the applications on multiple WebLogic Servers and maintained Load balancing high availability and Fail over functionalities Unit tested the utilities and coordinated the issues with Gemfire team Experience in Writing Python modules for Ansible customizations Implemented integrated and managed Perforce as well as instituting accurate and automated build and release methodologies for Binary compilation for Apache HTTPHTTPS Tomcat PHP and MySQL Worked on configuring data sources for JBOSS with various versions of databases Involved in writing SQL queries to implement the schema related changes for internationalization and debugged the build errors using SQL queries to make sure Database is not corrupted Designed Methodologies to troubleshoot based on the issues and documented all the procedures to educate team members Coordinated and solved issues with QA Team who were using the utilities as their testing tool for Gemfire AWS Terraform templates for any automation requirements in AWS services Experience with threat modeling especially for web application and web APIs Configured and monitored distributed and multiplatform servers using Nagios Evaluate and recommend new and emerging security products and technologies Environment AWS AWS lambda S3 EBS Redshift IAM EC2 Elastic Load Balancer AWS Auto Scaling Teraform Apache Tomcat Nagios MySQL PHP Perforce Jenkins Maven Docker Puppet JBOSS 422GA JSONWeb Logic Application Server 9x 10x Chef GIT Oracle Windows and Linux Role as AWSCloud Infrastructure Engineer 3 XL Catlin Stamford CT January 2016 to July 2016 Responsibilities Responsible for versioning the source code releasing binary files creating and applying labels on source files and release files Creating the AWS Security groups to enable firewall Test cloud level deployments in AWS Amazon Web Services for future cloud deployments Managed Linux staging and testing environments and also automated application packaging and deployments Configured and managed Nagios for monitoring over existing AWS Cloud platform Build Nagios monitors for new services being deployed Supported Puppet master server and around 500 Clients by installing agents and managed multiple modules and manifests Defined instances in code next to relevant configuration on what running and then created the instances via Puppet Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Responsible for design and maintenance of the SubversionGIT Repositories views and the access control strategies Integrate GIT into Jenkins to automate the code checkout process Responsible for User Management Plugin Management and EndtoEnd automation of Build and Deployment process using Jenkins Experience with Build Management tools like Maven for writing buildxml and Pomxml Managed the Maven Repository using Nexus tool and used the same to share the snapshots and releases of internal projects Automated Linux production servers setup using Puppet scripts Documented release builds and source control processes and plans Analyze and resolve compilation and deployment errors related to code development branching merging and building of source code Created multiple Python scripts for various application level tasks Worked with Oracle Database Admin to keep all the specified tables as assigned by developments in sync for every release Used Oracle to connect to various databases and to check for the invalid objects after and before each release Build and maintain SQL scripts and execute different scripts for different environments Created Instances in Apache WebServer and JBOSS Application server in QA and Production environments Documented the SCM process and policies of the company and recommended some process changes Worked with scrum and development team in overseeing bug tracking test prioritization test automation and releases Educated team about continuous integration and automated testing practices and supported them throughout development Maintain and enhance current build procedures for all software development projects Environment Jenkins Maven GIT Puppets Scripts Python Nexus Oracle 10g Apache JBOSS Application Server Cloud computing tools Role as Java Developer 4 Avaya Santa Clara CA November 2013 to November 2014 Responsibilities Participated in requirement gathering and framework implementation sessions through Agile TDD methodology Designed and developed Application based on Spring framework using MVC UI Layer implemented with Struts Struts validation JSF JQuery JavaScript AJAX CSS and HTML Extensively used Core Java such as Exceptions and Collections Used AngularJS as the development framework to build a singlepage application Added security features to the application using HTTPS and password security features Created DAO classes for invoking stored proceduresqueries to retrieve from Oracle database Used Maven framework to develop automated build scripts Employed Hibernate as a persistence mechanism to implement object relational mapping Used SOAP based messaging format to transfer requests and responses and validated the request and responses against XML Schema Definition Developed PLSQL scripts for data conversion Worked on Eclipse for development and deployment of application in Web Logic Application Server Used Log4j for logging messages and Rational Clear Case for version Control Used Jira to access and track the bugs or defects Used GIT as source control tool Used JUnit framework and Selenium WebDriver for Unit Testing Involved in Designing Coding Testing gathering and analyzing system requirements Involved in protocol designing for communication between server and multiple locos Developed Shared assemblies for reusability of common functionality Drawing line graphs bar charts and pie charts Developed different type of services like communication service for receiving the data from different locos using socket programming Multithreading and decoding the received data Developed email and SMS services for sending email and SMS alerts to the railway customers The application is based on the MVCII Architecture using Apache Struts framework Designed and developed user interface screens using HTML DHTML and JSP Developed and maintained the data layer using the EJBs Environment Spring Microservices using Spring Boot 135 Struts JQuery Junit JMS XML JSP HTML5 CSS AngularJS AJAX HQL JQuery RAD Hibernate 30 JPA RestFul Web Services AWS EC2 Clear Case Spring MVC Scala Maven DB2 Teradata RDBMS GCC Collection GDB debugger and IBM WebSphere Role as Java Developer 5 Tech Mahindra Hyderabad Telangana January 2010 to January 2010 Responsibilities Developed various J2EE components like Servlets JSP JSTL AJAX SAX JAXP JNDI and JMS Used Spring MVC framework to enable the interactions between JSPView layer and implemented different DPs Data Operations were performed using Spring ORM wiring with Hibernate Developed and implemented Spring and J2EE based MVC ModelViewController framework for the application Implemented business layer using Core java Spring Beans using dependency injection Spring annotations Used a micro service architecture with Spring Bootbased services interacting through a combination of REST and MQ and leveraging AWS to build test and deploy Identity microservices Worked on service oriented systems that utilize REST web frameworks SOAP and message queue technologies Spring MVC 4 Spring REST Template Spring Integration Developing database adapter web services adapter messaging adapter and custom workflow for nonoracle system using Camel and Implemented Apache Camel routes using CamelSpring XML and CamelSpring processor beans Set up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system Designed and developed JSP pages using Spring MVC 30 framework and also created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components Developed serverside services using Java Spring Web Services SOAP Restful WSDL JAXB JAXRPC Implemented features like logging user session validation using SpringAOP module and Spring IOC Integrated Spring with Hibernate using configurations and implemented DAOlayer to save entities into data base Set up Secure Sockets LayerSSL communication in Websphere application server Experience working with Oracle EBS modules Experienced in collaborating with senior backend and senior mobile developers in an Agile Scrum Methodology Environments Red Hat Linux RHEL 45 UNIX Python Logical Volume Manager Global File System Red Hat Cluster Servers Maven Puppet Nagios BMC Oracle MySQL Shell scripts Perl scripts Apache Tomcat SAN SUSE VMware Education Bachelor of Engineering in Information Technologies in Information Technologies Anna University June 2009 Bachelors Skills Apache 4 years AWS 4 years Database 4 years GIT 4 years Maven 4 years AWS S3 EBS Elastic Load balancer ELB Auto Scaling groups VPC IAM Cloud Watch Glacier DynamoDB Opsworks shell scripts GIT Docker Chef Maven Jenkins Additional Information Technical Expertise Cloud Infrastructure AWS OpenStack MS Azure Rackspace Configuration management Tools Puppet Chef Vagrant Docker Ansible and Opswork Continuous Integration Tools Jenkins Bamboo Hudson Build Master Travis CI Build Tools ANT MAVEN Gradle Build Forge CMAKE MS Build Versioning Tools GIT ClearCase Perforce CVS Subversion Scripting Shell Python PLSQL Java AWTSwing C XML HTML Groovy Ruby and Perl Languages C C PHP PLSQL and JavaJ2EE Web Technologies Java Script Node Js Servlets JDBC a CSS Virtualization Tools VMware vSphere Oracle Virtualbox VMware Workstation WebApp server Web Logic Application Server 9x 10x WebSphere6x7x8x Apache Tomcat5x7x AWS JBOSS422GA Database DynamoDB MongoDB Oracle SQL Server MySQL Operating System Windows Linux Unix Solaris RHEL Centos Ubuntu SUSE Network Services LDAP DNS NIS DHCP NFS Web mail FTP Logging Monitoring Tools Nagios Splunk Logstash Terraform Key QualificationsStrengths Infrastructure Automation and Development API management Artifacts Management Programming for Cloud Configuration Management BuildRelease Engineering Orchestration and Deployment Performance RequirementsSLAs Access Management Agile Methodology",
    "unique_id": "d0593899-3a2f-4a3f-a6e2-55693b7ce31b"
}