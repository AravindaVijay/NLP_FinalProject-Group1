{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer American Airlines Experience of 5 Python programming web and desktop GUI based application development website and console application development database designing and development SDLC objectoriented designs and analysis requirement analysis software testing and debugging system or program troubleshooting networking code review and optimization software enhancements data security and protection techniques object relational mapping SQL and relational databases continuous integration and deployment methods project management Experienced in Python HTML5 CSS3 XML JSON jQuery Bootstrap MS SQL Server Postgres Oracle custom and ODBC interfaces object database and standard database API Python Rest APIs AWS SQL Django and Flask frameworks SOAP UI Windows and Linux OS Proficient in analysis of user requirements or technical specifications as well as write and execute reliable testable and efficient code for Python based applications Experienced in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Exception Handling and Collections using Python Experienced in Professional Web Apps development using Django and Flask inclusive of experience in UI using AngularJS Utilized software development in Python libraries used libraries numpy scipy matplotlib pythontwitter Pandas data frame networkx urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder emacs Experienced in working with various Relational Database Management Systems RDBMS like MySQL Microsoft SQL Server Oracle non relational databases NoSQL like MongoDB and Cassandra Proficient in developing Web Services with Python programming language implementing JSON based RESTful and XML based SOAP webservices Experienced in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Ability in handling Django ORM ObjectRelational Mapper and SQL Alchemy Experienced in using Version Control Systems like GIT SVN and CVS to keep the versions and configurations of the code organized Utilized CICD tools like Jenkins for Continuous Integration Ansible for continuous deployment Experienced in multitier application provisioning in Openstack cloud and integrating it with ChefPuppet Utilized HudsonJenkins Build Forge for continuous integration and for End to End automation for all build and deployments Experienced with containerizing applications using Docker and Exp in maintaining and executing build scripts to automate development and production builds Experienced in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Experienced in developing ColdFusion Components custom tags and modified CF Objects Experienced with Unit testing Test driven Development TDD Load Testing Experienced in building tools such as ANT Apache MAVEN and JENKINS Experienced in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Work Experience Python Developer American Airlines Fort Worth TX July 2018 to Present Fort Worth Associated with various phases of Software Development Life Cycle SDLC of the application like requirement gathering Design Analysis and Code development Worked with designers analysts developers or software engineers to write and execute reliable and efficient Python programs and related SQL queries for desktop GUI enterprise web scientific and numerical applications as per user or business requirements as well as established coding standards Analyzed and translated client requirements into technical or design specifications as well as creating developers guides for highquality and efficient software project development as required Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Designed and developed scalable AWS APIs using Flask web framework in Python and Integrated with AWS API Management Logical Apps and other AWS services Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Designed and developed a horizontally scalable APIs using python Flask Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Conducted data analysis using Python libraries such as Pandas Numpy and Matplotlib Tested and developed features for dashboard using CSS AngularJS and Bootstrap Developed entire frontend and backend modules using Python on Django Web Framework Developed web applications and RESTful web services and APIs using Python Django and PHP Extensively used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web applications Developed rich UI web application using JavaScript libraries like jQueryUI data grid jscolor and high charts Worked on designing coding and developing the application in Python using Django MVC Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Used Python programming and Django for the backend development and Angular for frontend connectivity and MongoDB for database Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Implemented and used custombuilt query script to store index and read large sets of Object data like Mongo DB Worked in RDBMS implementation using SQL PLSQL DB2 MySQL on Oracle database Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Worked on the MySQL migration project to make the system completely independent of the database being used Managed datasets using data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector MySQL dB package to retrieve information Wrote documentation for system administration and cloud administration audiences as well as REST API consumers at docsopenstackorg Generated graphical reports using python package NumPy and Matplotlib Worked on Python OpenStack APIs and used Numpy for Numerical analysis Automated the existing scripts for performance calculations using NumPy and sql alchemy Developed PHP and Perl application to enhance and automate the data collectiontoextraction process Migrated PHP and PERL applications from UBUNTU Unix to Red Hat Linux environment Recorded Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Used XML Webservices using SOAP to transfer the amount to transfer application that is remote and global to different financial institutions Designed and Developed REST Webservices to interact with various business sectors and used SOAP protocol for webservices communication Wrote Python modules to view and connect the Apache Cassandra instance Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpscenter and custom scripts Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Developer Infosys October 2015 to December 2017 India Responsible for gathering requirements system analysis design development testing and in Agile Methodologies Scrum stories and sprints experience in Python Responsible to create organized responsive design and developed user interaction screens using React Django HTML5 CSSCSS3 Bootstrap JavaScript jQuery Developed Python and Django for the backend development and frontend application using React Webpack Redux and MySQL for database Responsible for setting up Python REST API framework using Django Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with React States and Events Worked on Model View Component MVC architecture implemented for development of the project and used Django Rest Framework to develop REST API Used different python libraries like SciPy NumPy and Pandas to create models for predictive analysis Used the Django framework developed models customized admin page views templates and effective ORM implementation with My SQL Wrote Python modules to extractload asset data from the MySQL source database Used PyUnit the Python unit test framework for all Python applications Worked with Unit testing Test driven Development TDD Load Testing and responsible for consuming web services REST with python programming language Worked on JSON and XML data of web application assets and its attributes Used Ansible to configure and manage the infrastructure and worked on Jenkins cloud Bees for CICD in production environment Worked on Docker containers and Automation Ansible and Deploying on AWS environment EC2 Created Amazon EC2 Cloud Instances using Amazon Web Services and configuration of launched instances with respect to specific applications Jr Python Developer CGI Group August 2013 to September 2015 India Ensured highquality data collection and maintaining the integrity of the data Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed the data management system using MySQL Designed and developed scalable Azure APIs using Flask web framework in Python and Integrated with Azure API Management Logical Apps and other Azure services Build SQL queries for performing various CRUD operations like create update read and delete Involved in hospital projects such as gunshot events and patient readmission Primarily using R packages for data manipulation modeling machine learning and reporting Handled all the clientside validation using JavaScript and jQuery Used Django Database APIs to access database objects Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Collaborated with SaaS teams on AWS cost optimization projects Docker and Kubernetes were used as the best ecosystem to deploy and manage Microservice Conducted data analysis using Python libraries such as Pandas Numpy and Matplotlib Creating unit testregression test framework for workingcreating new code Build all Database Mapping classes using Django Generic Class and functioned based methods Graphical data representation using python modules like NumPy SciPy Pandas Pygal and installed using pip command toolkit Data Exchanges and sorting as per customer requirement between Database and Files Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Education Master of Science in Information System The University of Texas Arlington TX 2019 Skills AWS 5 years CSS 5 years DJANGO 5 years jQuery 5 years MYSQL 5 years Additional Information COMPUTER SKILLS Programming Languages Python 2X Python 3X C C SQL Web technologies HTML CSS XHTML Java Script jQuery AJAX XML JSON Webserver WebSphere Web logic Apache Tomcat NGINX Databases MySQL PLSQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Net beans MS Visio Sublime Text Notepad Operating Systems Linux Windows 1087VistaXP Mac Web Services SOAP RESTful AWS Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Methodologies Agile Scrum Waterfall",
    "entities": [
        "American Airlines",
        "Design Analysis",
        "GUI",
        "HTML AJAX CSS",
        "Graphical",
        "Science in Information System The University of Texas",
        "UNIX",
        "CF Objects Experienced",
        "ChefPuppet Utilized HudsonJenkins Build Forge",
        "Created Amazon",
        "Interfacing",
        "Design Patterns",
        "OpenStack",
        "Skills AWS",
        "CVS",
        "Amazon Web Services AWS",
        "SOAP",
        "XML",
        "Flask Developed",
        "UBUNTU Unix",
        "Software Development Life Cycle SDLC",
        "ColdFusion Components",
        "Shell",
        "Automated",
        "My SQL Wrote",
        "Mac Web Services SOAP",
        "JENKINS Experienced",
        "Jr Python Developer CGI Group",
        "TX",
        "Python Developer Infosys",
        "WebSphere",
        "Python",
        "Developed",
        "Jenkins",
        "Bash",
        "Utilized",
        "Linux OS Proficient",
        "AWS Version",
        "Data Exchanges",
        "Virtual DOM React Props Lifecycle",
        "SQL Alchemy Experienced",
        "Pandas Pygal",
        "AWS API Management Logical Apps",
        "Flask",
        "Collaborated",
        "MVC Singleton",
        "Docker",
        "REST Used XML Webservices",
        "React States",
        "NagiosOpscenter",
        "API Management",
        "PythonDjango",
        "Oracle Application Server Work Experience Python Developer American Airlines",
        "Arlington",
        "Developed PHP",
        "CSV",
        "Database",
        "Created",
        "AWS",
        "Perl",
        "Additional Information COMPUTER SKILLS Programming Languages Python 2X",
        "Openstack",
        "Bash Designed",
        "JSX",
        "Model View Component MVC",
        "ODBC",
        "ANT Apache",
        "SQL",
        "Jenkins for Continuous Integration Ansible",
        "Amazon Web Services",
        "Django MVC Developed",
        "lPythonspan",
        "Kubernetes",
        "Microservice Conducted",
        "SQL Alchemy",
        "CICD",
        "Apache Tomcat",
        "GIT SVN",
        "GitHub Sub Version",
        "Pandas",
        "CRUD",
        "Mongo DB Worked",
        "Oracle Microsoft",
        "India",
        "Build",
        "Python Responsible",
        "the Inquiry Tool",
        "Djangos",
        "JavaScript",
        "UI",
        "Microsoft",
        "Version Control Systems",
        "CSS",
        "Migrated PHP",
        "PHP",
        "NoSQL",
        "HTMLCSSjQuery",
        "Relational Database Management Systems",
        "EBS",
        "Single Page Application"
    ],
    "experience": "Experience of 5 Python programming web and desktop GUI based application development website and console application development database designing and development SDLC objectoriented designs and analysis requirement analysis software testing and debugging system or program troubleshooting networking code review and optimization software enhancements data security and protection techniques object relational mapping SQL and relational databases continuous integration and deployment methods project management Experienced in Python HTML5 CSS3 XML JSON jQuery Bootstrap MS SQL Server Postgres Oracle custom and ODBC interfaces object database and standard database API Python Rest APIs AWS SQL Django and Flask frameworks SOAP UI Windows and Linux OS Proficient in analysis of user requirements or technical specifications as well as write and execute reliable testable and efficient code for Python based applications Experienced in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Exception Handling and Collections using Python Experienced in Professional Web Apps development using Django and Flask inclusive of experience in UI using AngularJS Utilized software development in Python libraries used libraries numpy scipy matplotlib pythontwitter Pandas data frame networkx urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder emacs Experienced in working with various Relational Database Management Systems RDBMS like MySQL Microsoft SQL Server Oracle non relational databases NoSQL like MongoDB and Cassandra Proficient in developing Web Services with Python programming language implementing JSON based RESTful and XML based SOAP webservices Experienced in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Ability in handling Django ORM ObjectRelational Mapper and SQL Alchemy Experienced in using Version Control Systems like GIT SVN and CVS to keep the versions and configurations of the code organized Utilized CICD tools like Jenkins for Continuous Integration Ansible for continuous deployment Experienced in multitier application provisioning in Openstack cloud and integrating it with ChefPuppet Utilized HudsonJenkins Build Forge for continuous integration and for End to End automation for all build and deployments Experienced with containerizing applications using Docker and Exp in maintaining and executing build scripts to automate development and production builds Experienced in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Experienced in developing ColdFusion Components custom tags and modified CF Objects Experienced with Unit testing Test driven Development TDD Load Testing Experienced in building tools such as ANT Apache MAVEN and JENKINS Experienced in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Work Experience Python Developer American Airlines Fort Worth TX July 2018 to Present Fort Worth Associated with various phases of Software Development Life Cycle SDLC of the application like requirement gathering Design Analysis and Code development Worked with designers analysts developers or software engineers to write and execute reliable and efficient Python programs and related SQL queries for desktop GUI enterprise web scientific and numerical applications as per user or business requirements as well as established coding standards Analyzed and translated client requirements into technical or design specifications as well as creating developers guides for highquality and efficient software project development as required Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Designed and developed scalable AWS APIs using Flask web framework in Python and Integrated with AWS API Management Logical Apps and other AWS services Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Designed and developed a horizontally scalable APIs using python Flask Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Conducted data analysis using Python libraries such as Pandas Numpy and Matplotlib Tested and developed features for dashboard using CSS AngularJS and Bootstrap Developed entire frontend and backend modules using Python on Django Web Framework Developed web applications and RESTful web services and APIs using Python Django and PHP Extensively used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web applications Developed rich UI web application using JavaScript libraries like jQueryUI data grid jscolor and high charts Worked on designing coding and developing the application in Python using Django MVC Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Used Python programming and Django for the backend development and Angular for frontend connectivity and MongoDB for database Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Implemented and used custombuilt query script to store index and read large sets of Object data like Mongo DB Worked in RDBMS implementation using SQL PLSQL DB2 MySQL on Oracle database Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Worked on the MySQL migration project to make the system completely independent of the database being used Managed datasets using data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector MySQL dB package to retrieve information Wrote documentation for system administration and cloud administration audiences as well as REST API consumers at docsopenstackorg Generated graphical reports using python package NumPy and Matplotlib Worked on Python OpenStack APIs and used Numpy for Numerical analysis Automated the existing scripts for performance calculations using NumPy and sql alchemy Developed PHP and Perl application to enhance and automate the data collectiontoextraction process Migrated PHP and PERL applications from UBUNTU Unix to Red Hat Linux environment Recorded Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Used XML Webservices using SOAP to transfer the amount to transfer application that is remote and global to different financial institutions Designed and Developed REST Webservices to interact with various business sectors and used SOAP protocol for webservices communication Wrote Python modules to view and connect the Apache Cassandra instance Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpscenter and custom scripts Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Developer Infosys October 2015 to December 2017 India Responsible for gathering requirements system analysis design development testing and in Agile Methodologies Scrum stories and sprints experience in Python Responsible to create organized responsive design and developed user interaction screens using React Django HTML5 CSSCSS3 Bootstrap JavaScript jQuery Developed Python and Django for the backend development and frontend application using React Webpack Redux and MySQL for database Responsible for setting up Python REST API framework using Django Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with React States and Events Worked on Model View Component MVC architecture implemented for development of the project and used Django Rest Framework to develop REST API Used different python libraries like SciPy NumPy and Pandas to create models for predictive analysis Used the Django framework developed models customized admin page views templates and effective ORM implementation with My SQL Wrote Python modules to extractload asset data from the MySQL source database Used PyUnit the Python unit test framework for all Python applications Worked with Unit testing Test driven Development TDD Load Testing and responsible for consuming web services REST with python programming language Worked on JSON and XML data of web application assets and its attributes Used Ansible to configure and manage the infrastructure and worked on Jenkins cloud Bees for CICD in production environment Worked on Docker containers and Automation Ansible and Deploying on AWS environment EC2 Created Amazon EC2 Cloud Instances using Amazon Web Services and configuration of launched instances with respect to specific applications Jr Python Developer CGI Group August 2013 to September 2015 India Ensured highquality data collection and maintaining the integrity of the data Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed the data management system using MySQL Designed and developed scalable Azure APIs using Flask web framework in Python and Integrated with Azure API Management Logical Apps and other Azure services Build SQL queries for performing various CRUD operations like create update read and delete Involved in hospital projects such as gunshot events and patient readmission Primarily using R packages for data manipulation modeling machine learning and reporting Handled all the clientside validation using JavaScript and jQuery Used Django Database APIs to access database objects Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Collaborated with SaaS teams on AWS cost optimization projects Docker and Kubernetes were used as the best ecosystem to deploy and manage Microservice Conducted data analysis using Python libraries such as Pandas Numpy and Matplotlib Creating unit testregression test framework for workingcreating new code Build all Database Mapping classes using Django Generic Class and functioned based methods Graphical data representation using python modules like NumPy SciPy Pandas Pygal and installed using pip command toolkit Data Exchanges and sorting as per customer requirement between Database and Files Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Education Master of Science in Information System The University of Texas Arlington TX 2019 Skills AWS 5 years CSS 5 years DJANGO 5 years jQuery 5 years MYSQL 5 years Additional Information COMPUTER SKILLS Programming Languages Python 2X Python 3X C C SQL Web technologies HTML CSS XHTML Java Script jQuery AJAX XML JSON Webserver WebSphere Web logic Apache Tomcat NGINX Databases MySQL PLSQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Net beans MS Visio Sublime Text Notepad Operating Systems Linux Windows 1087VistaXP Mac Web Services SOAP RESTful AWS Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Methodologies Agile Scrum Waterfall",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "American",
        "Airlines",
        "Experience",
        "Python",
        "programming",
        "web",
        "desktop",
        "GUI",
        "application",
        "development",
        "website",
        "console",
        "application",
        "development",
        "database",
        "designing",
        "development",
        "SDLC",
        "designs",
        "analysis",
        "requirement",
        "analysis",
        "software",
        "testing",
        "system",
        "program",
        "troubleshooting",
        "networking",
        "code",
        "review",
        "optimization",
        "software",
        "enhancements",
        "data",
        "security",
        "protection",
        "techniques",
        "mapping",
        "SQL",
        "databases",
        "integration",
        "deployment",
        "methods",
        "project",
        "management",
        "Python",
        "HTML5",
        "CSS3",
        "XML",
        "JSON",
        "jQuery",
        "Bootstrap",
        "MS",
        "SQL",
        "Server",
        "Postgres",
        "Oracle",
        "custom",
        "ODBC",
        "interfaces",
        "database",
        "database",
        "API",
        "Python",
        "Rest",
        "APIs",
        "SQL",
        "Django",
        "Flask",
        "frameworks",
        "UI",
        "Windows",
        "Linux",
        "OS",
        "Proficient",
        "analysis",
        "user",
        "requirements",
        "specifications",
        "code",
        "Python",
        "applications",
        "Object",
        "Python",
        "Hash",
        "Tables",
        "Dictionaries",
        "Multithreading",
        "Django",
        "MYSQL",
        "Exception",
        "Handling",
        "Collections",
        "Python",
        "Professional",
        "Web",
        "Apps",
        "development",
        "Django",
        "Flask",
        "inclusive",
        "experience",
        "UI",
        "software",
        "development",
        "Python",
        "libraries",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "networkx",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "emacs",
        "Relational",
        "Database",
        "Management",
        "Systems",
        "RDBMS",
        "MySQL",
        "Microsoft",
        "SQL",
        "Server",
        "Oracle",
        "non",
        "databases",
        "NoSQL",
        "MongoDB",
        "Cassandra",
        "Proficient",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "JSON",
        "RESTful",
        "XML",
        "SOAP",
        "webservices",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "frameworks",
        "DJANGO",
        "Ability",
        "Django",
        "ORM",
        "ObjectRelational",
        "Mapper",
        "SQL",
        "Alchemy",
        "Version",
        "Control",
        "Systems",
        "GIT",
        "SVN",
        "CVS",
        "versions",
        "configurations",
        "code",
        "CICD",
        "tools",
        "Jenkins",
        "Continuous",
        "Integration",
        "Ansible",
        "deployment",
        "application",
        "provisioning",
        "Openstack",
        "cloud",
        "ChefPuppet",
        "HudsonJenkins",
        "Build",
        "Forge",
        "integration",
        "End",
        "End",
        "automation",
        "build",
        "deployments",
        "applications",
        "Docker",
        "Exp",
        "build",
        "scripts",
        "development",
        "production",
        "builds",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "cloud",
        "platform",
        "EC2",
        "clouds",
        "VPCs",
        "Storage",
        "models",
        "EBS",
        "S3",
        "instance",
        "storage",
        "Elastic",
        "Load",
        "Balancers",
        "ELBs",
        "ColdFusion",
        "Components",
        "custom",
        "tags",
        "CF",
        "Objects",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "building",
        "tools",
        "ANT",
        "Apache",
        "MAVEN",
        "JENKINS",
        "applications",
        "Application",
        "Servers",
        "TOMCAT",
        "Web",
        "Logic",
        "Oracle",
        "Application",
        "Server",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "American",
        "Airlines",
        "Fort",
        "Worth",
        "TX",
        "July",
        "Present",
        "Fort",
        "Worth",
        "Associated",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "designers",
        "analysts",
        "developers",
        "software",
        "engineers",
        "Python",
        "programs",
        "SQL",
        "queries",
        "desktop",
        "GUI",
        "enterprise",
        "web",
        "applications",
        "user",
        "business",
        "requirements",
        "standards",
        "client",
        "requirements",
        "design",
        "specifications",
        "developers",
        "guides",
        "highquality",
        "software",
        "project",
        "development",
        "Created",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Designed",
        "AWS",
        "APIs",
        "Flask",
        "web",
        "framework",
        "Python",
        "Integrated",
        "AWS",
        "API",
        "Management",
        "Logical",
        "Apps",
        "AWS",
        "services",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "APIs",
        "python",
        "Flask",
        "Developed",
        "projects",
        "web",
        "page",
        "Single",
        "Page",
        "Application",
        "SPA",
        "AngularJS",
        "JavaScript",
        "API",
        "delivery",
        "driver",
        "application",
        "data",
        "analysis",
        "Python",
        "libraries",
        "Pandas",
        "Numpy",
        "Matplotlib",
        "features",
        "dashboard",
        "CSS",
        "AngularJS",
        "Bootstrap",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Django",
        "PHP",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "applications",
        "UI",
        "web",
        "application",
        "JavaScript",
        "libraries",
        "grid",
        "jscolor",
        "charts",
        "application",
        "Python",
        "Django",
        "MVC",
        "Developed",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "components",
        "Python",
        "Django",
        "framework",
        "code",
        "python",
        "manipulate",
        "data",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "documents",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "servers",
        "Python",
        "programming",
        "Django",
        "development",
        "Angular",
        "frontend",
        "connectivity",
        "MongoDB",
        "database",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "custombuilt",
        "query",
        "script",
        "index",
        "sets",
        "Object",
        "data",
        "Mongo",
        "DB",
        "Worked",
        "implementation",
        "SQL",
        "PLSQL",
        "DB2",
        "MySQL",
        "Oracle",
        "database",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "Python",
        "MySQL",
        "connector",
        "MySQL",
        "package",
        "MySQL",
        "migration",
        "project",
        "system",
        "database",
        "datasets",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Wrote",
        "documentation",
        "system",
        "administration",
        "cloud",
        "administration",
        "audiences",
        "REST",
        "API",
        "consumers",
        "reports",
        "package",
        "NumPy",
        "Matplotlib",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "scripts",
        "performance",
        "calculations",
        "NumPy",
        "Developed",
        "PHP",
        "Perl",
        "application",
        "data",
        "collectiontoextraction",
        "process",
        "PHP",
        "PERL",
        "applications",
        "UBUNTU",
        "Unix",
        "Red",
        "Hat",
        "Linux",
        "environment",
        "Scripts",
        "Web",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "SoapUI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Designed",
        "custom",
        "Bash",
        "scripts",
        "data",
        "flow",
        "PostgreSQL",
        "database",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "REST",
        "XML",
        "Webservices",
        "SOAP",
        "amount",
        "application",
        "institutions",
        "REST",
        "Webservices",
        "business",
        "sectors",
        "SOAP",
        "protocol",
        "webservices",
        "communication",
        "Wrote",
        "Python",
        "Apache",
        "Cassandra",
        "instance",
        "Configure",
        "backup",
        "repairs",
        "monitoring",
        "Cassandra",
        "clusters",
        "conjunction",
        "NagiosOpscenter",
        "custom",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "workflows",
        "Python",
        "scripts",
        "UNIX",
        "shell",
        "Python",
        "Developer",
        "Infosys",
        "October",
        "December",
        "India",
        "Responsible",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "design",
        "user",
        "interaction",
        "screens",
        "React",
        "Django",
        "HTML5",
        "CSSCSS3",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "Developed",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "React",
        "Webpack",
        "Redux",
        "MySQL",
        "database",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "React",
        "JS",
        "components",
        "JSX",
        "React",
        "components",
        "DOM",
        "React",
        "Props",
        "Lifecycle",
        "methods",
        "React",
        "States",
        "Events",
        "Model",
        "View",
        "Component",
        "MVC",
        "architecture",
        "development",
        "project",
        "Django",
        "Rest",
        "Framework",
        "REST",
        "API",
        "python",
        "libraries",
        "SciPy",
        "NumPy",
        "Pandas",
        "models",
        "analysis",
        "Django",
        "framework",
        "models",
        "admin",
        "page",
        "templates",
        "ORM",
        "implementation",
        "SQL",
        "Wrote",
        "Python",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "web",
        "services",
        "REST",
        "python",
        "programming",
        "language",
        "JSON",
        "XML",
        "data",
        "web",
        "application",
        "assets",
        "attributes",
        "Ansible",
        "infrastructure",
        "Jenkins",
        "cloud",
        "Bees",
        "CICD",
        "production",
        "environment",
        "Docker",
        "containers",
        "Automation",
        "Ansible",
        "Deploying",
        "AWS",
        "environment",
        "EC2",
        "Created",
        "Amazon",
        "EC2",
        "Cloud",
        "Instances",
        "Amazon",
        "Web",
        "Services",
        "configuration",
        "instances",
        "respect",
        "applications",
        "Jr",
        "Python",
        "Developer",
        "CGI",
        "Group",
        "August",
        "September",
        "India",
        "highquality",
        "data",
        "collection",
        "integrity",
        "data",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "APIs",
        "Flask",
        "web",
        "framework",
        "Python",
        "Integrated",
        "API",
        "Management",
        "Logical",
        "Apps",
        "services",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "hospital",
        "projects",
        "gunshot",
        "events",
        "readmission",
        "R",
        "packages",
        "data",
        "manipulation",
        "machine",
        "learning",
        "validation",
        "JavaScript",
        "jQuery",
        "Django",
        "Database",
        "APIs",
        "database",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Collaborated",
        "SaaS",
        "teams",
        "AWS",
        "optimization",
        "projects",
        "Docker",
        "Kubernetes",
        "ecosystem",
        "Microservice",
        "Conducted",
        "data",
        "analysis",
        "Python",
        "libraries",
        "Pandas",
        "Numpy",
        "Matplotlib",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Build",
        "Database",
        "Mapping",
        "classes",
        "Django",
        "Generic",
        "Class",
        "methods",
        "data",
        "representation",
        "modules",
        "NumPy",
        "SciPy",
        "Pandas",
        "Pygal",
        "pip",
        "command",
        "toolkit",
        "Data",
        "Exchanges",
        "customer",
        "requirement",
        "Database",
        "Files",
        "solutions",
        "Inquiry",
        "Tool",
        "Asset",
        "Education",
        "Master",
        "Science",
        "Information",
        "System",
        "University",
        "Texas",
        "Arlington",
        "TX",
        "Skills",
        "AWS",
        "years",
        "CSS",
        "years",
        "DJANGO",
        "years",
        "jQuery",
        "years",
        "MYSQL",
        "years",
        "Additional",
        "Information",
        "COMPUTER",
        "SKILLS",
        "Programming",
        "Languages",
        "Python",
        "2X",
        "Python",
        "3X",
        "C",
        "C",
        "SQL",
        "Web",
        "technologies",
        "HTML",
        "CSS",
        "XHTML",
        "Java",
        "Script",
        "jQuery",
        "AJAX",
        "XML",
        "JSON",
        "Webserver",
        "WebSphere",
        "Web",
        "logic",
        "Apache",
        "Tomcat",
        "MySQL",
        "PLSQL",
        "Oracle",
        "Microsoft",
        "SQL",
        "PostgreSQL",
        "MongoDB",
        "Python",
        "Web",
        "frameworks",
        "Django",
        "Pyramid",
        "Flask",
        "web2Py",
        "Development",
        "IDE",
        "PyCharm",
        "Pydev",
        "Eclipse",
        "Net",
        "beans",
        "MS",
        "Visio",
        "Sublime",
        "Text",
        "Notepad",
        "Operating",
        "Systems",
        "Linux",
        "1087VistaXP",
        "Mac",
        "Web",
        "Services",
        "SOAP",
        "AWS",
        "Version",
        "Control",
        "GitHub",
        "Sub",
        "Version",
        "Build",
        "Tools",
        "GNU",
        "Apache",
        "Ant",
        "Apache",
        "Maven",
        "Buck",
        "BitBake",
        "Boot",
        "Grunt",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:56:38.272670",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer American Airlines Experience of 5 Python programming web and desktop GUI based application development website and console application development database designing and development SDLC objectoriented designs and analysis requirement analysis software testing and debugging system or program troubleshooting networking code review and optimization software enhancements data security and protection techniques object relational mapping SQL and relational databases continuous integration and deployment methods project management Experienced in Python HTML5 CSS3 XML JSON jQuery Bootstrap MS SQL Server Postgres Oracle custom and ODBC interfaces object database and standard database API Python Rest APIs AWS SQL Django and Flask frameworks SOAP UI Windows and Linux OS Proficient in analysis of user requirements or technical specifications as well as write and execute reliable testable and efficient code for Python based applications Experienced in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django MYSQL Exception Handling and Collections using Python Experienced in Professional Web Apps development using Django and Flask inclusive of experience in UI using AngularJS Utilized software development in Python libraries used libraries numpy scipy matplotlib pythontwitter Pandas data frame networkx urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder emacs Experienced in working with various Relational Database Management Systems RDBMS like MySQL Microsoft SQL Server Oracle non relational databases NoSQL like MongoDB and Cassandra Proficient in developing Web Services with Python programming language implementing JSON based RESTful and XML based SOAP webservices Experienced in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Ability in handling Django ORM ObjectRelational Mapper and SQL Alchemy Experienced in using Version Control Systems like GIT SVN and CVS to keep the versions and configurations of the code organized Utilized CICD tools like Jenkins for Continuous Integration Ansible for continuous deployment Experienced in multitier application provisioning in Openstack cloud and integrating it with ChefPuppet Utilized HudsonJenkins Build Forge for continuous integration and for End to End automation for all build and deployments Experienced with containerizing applications using Docker and Exp in maintaining and executing build scripts to automate development and production builds Experienced in Amazon Web Services AWS cloud platform like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Experienced in developing ColdFusion Components custom tags and modified CF Objects Experienced with Unit testing Test driven Development TDD Load Testing Experienced in building tools such as ANT Apache MAVEN and JENKINS Experienced in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Work Experience Python Developer American Airlines Fort Worth TX July 2018 to Present Fort Worth Associated with various phases of Software Development Life Cycle SDLC of the application like requirement gathering Design Analysis and Code development Worked with designers analysts developers or software engineers to write and execute reliable and efficient Python programs and related SQL queries for desktop GUI enterprise web scientific and numerical applications as per user or business requirements as well as established coding standards Analyzed and translated client requirements into technical or design specifications as well as creating developers guides for highquality and efficient software project development as required Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Designed and developed scalable AWS APIs using Flask web framework in Python and Integrated with AWS API Management Logical Apps and other AWS services Implemented REST APIs in Python using microframework like Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Designed and developed a horizontally scalable APIs using python Flask Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Conducted data analysis using Python libraries such as Pandas Numpy and Matplotlib Tested and developed features for dashboard using CSS AngularJS and Bootstrap Developed entire frontend and backend modules using Python on Django Web Framework Developed web applications and RESTful web services and APIs using Python Django and PHP Extensively used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web applications Developed rich UI web application using JavaScript libraries like jQueryUI data grid jscolor and high charts Worked on designing coding and developing the application in Python using Django MVC Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Used Python programming and Django for the backend development and Angular for frontend connectivity and MongoDB for database Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Implemented and used custombuilt query script to store index and read large sets of Object data like Mongo DB Worked in RDBMS implementation using SQL PLSQL DB2 MySQL on Oracle database Wrote and executed various MYSQL database queries from python using Python MySQL connector and MySQL dB package Worked on the MySQL migration project to make the system completely independent of the database being used Managed datasets using data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector MySQL dB package to retrieve information Wrote documentation for system administration and cloud administration audiences as well as REST API consumers at docsopenstackorg Generated graphical reports using python package NumPy and Matplotlib Worked on Python OpenStack APIs and used Numpy for Numerical analysis Automated the existing scripts for performance calculations using NumPy and sql alchemy Developed PHP and Perl application to enhance and automate the data collectiontoextraction process Migrated PHP and PERL applications from UBUNTU Unix to Red Hat Linux environment Recorded Scripts Web Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Used XML Webservices using SOAP to transfer the amount to transfer application that is remote and global to different financial institutions Designed and Developed REST Webservices to interact with various business sectors and used SOAP protocol for webservices communication Wrote Python modules to view and connect the Apache Cassandra instance Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpscenter and custom scripts Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Python Developer Infosys October 2015 to December 2017 India Responsible for gathering requirements system analysis design development testing and in Agile Methodologies Scrum stories and sprints experience in Python Responsible to create organized responsive design and developed user interaction screens using React Django HTML5 CSSCSS3 Bootstrap JavaScript jQuery Developed Python and Django for the backend development and frontend application using React Webpack Redux and MySQL for database Responsible for setting up Python REST API framework using Django Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with React States and Events Worked on Model View Component MVC architecture implemented for development of the project and used Django Rest Framework to develop REST API Used different python libraries like SciPy NumPy and Pandas to create models for predictive analysis Used the Django framework developed models customized admin page views templates and effective ORM implementation with My SQL Wrote Python modules to extractload asset data from the MySQL source database Used PyUnit the Python unit test framework for all Python applications Worked with Unit testing Test driven Development TDD Load Testing and responsible for consuming web services REST with python programming language Worked on JSON and XML data of web application assets and its attributes Used Ansible to configure and manage the infrastructure and worked on Jenkins cloud Bees for CICD in production environment Worked on Docker containers and Automation Ansible and Deploying on AWS environment EC2 Created Amazon EC2 Cloud Instances using Amazon Web Services and configuration of launched instances with respect to specific applications Jr Python Developer CGI Group August 2013 to September 2015 India Ensured highquality data collection and maintaining the integrity of the data Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed the data management system using MySQL Designed and developed scalable Azure APIs using Flask web framework in Python and Integrated with Azure API Management Logical Apps and other Azure services Build SQL queries for performing various CRUD operations like create update read and delete Involved in hospital projects such as gunshot events and patient readmission Primarily using R packages for data manipulation modeling machine learning and reporting Handled all the clientside validation using JavaScript and jQuery Used Django Database APIs to access database objects Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Collaborated with SaaS teams on AWS cost optimization projects Docker and Kubernetes were used as the best ecosystem to deploy and manage Microservice Conducted data analysis using Python libraries such as Pandas Numpy and Matplotlib Creating unit testregression test framework for workingcreating new code Build all Database Mapping classes using Django Generic Class and functioned based methods Graphical data representation using python modules like NumPy SciPy Pandas Pygal and installed using pip command toolkit Data Exchanges and sorting as per customer requirement between Database and Files Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Education Master of Science in Information System The University of Texas Arlington TX 2019 Skills AWS 5 years CSS 5 years DJANGO 5 years jQuery 5 years MYSQL 5 years Additional Information COMPUTER SKILLS Programming Languages Python 2X Python 3X C C SQL Web technologies HTML CSS XHTML Java Script jQuery AJAX XML JSON Webserver WebSphere Web logic Apache Tomcat NGINX Databases MySQL PLSQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Net beans MS Visio Sublime Text Notepad Operating Systems Linux Windows 1087VistaXP Mac Web Services SOAP RESTful AWS Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Methodologies Agile Scrum Waterfall",
    "unique_id": "a0589179-a39d-4c58-9943-d34f84eb6ca5"
}