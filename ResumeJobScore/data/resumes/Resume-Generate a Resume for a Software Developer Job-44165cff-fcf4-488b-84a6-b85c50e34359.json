{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Walmart Bentonville AR Having 7 years of diverse professional experience in planning designing developing Architecting and implementation in Amazon Web Services Cloud Python and IT industry Experience with Requests Pysftp Gnupg Reportlab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Strong expertise in development of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Worked on several python packages like Numpy  BeautifulSoup Pickle PySide SciPy wxPython PyTables etc Sound knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and Mongo DB 26 24 Orient DB Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse NetBeans Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Proficient in front and backend development with experience in Python 36 Django AJAX HTML5 CSS3 JavaScript Bootstrap jQuery Angular2 Angular JS Node JS and Express JS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Utilized Python specific tools including Django Django Rest Framework Django ORM Flask Requests Pandas Numpy Jupyter Celery Gunicorn and Pipenv Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy pandas Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Configured and automated various AWS services like EC2 and S3 using Boto python sdk Develop AWS Cloud Formation templates in JSON to automate infrastructure deployments Experience in Building S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Deploying application in Docker Container for custom environment and hosting in Elastic Beanstalk Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Experience in designing and configuring secure VPC through private and public networks in AWS Troubleshoot AWS EC2 Status check including System Status checks and Instance Status check alerts Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3 bucket Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python SDK Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Good experience in developing web applications implementing Model View Control architecture using Django Flask Python web application frameworks Extensive experience in developing PLSQL Stored Procedures Functions Packages Cursors Collections Nested tables and Varrays Records Object types and Database Triggers Expertise in creating Restful API in NodeJS and communicate with Clojure server via protocol and use Backbone to generate template Good knowledge on Cloud and Virtualization environments such as Azure Aws Google Cloud Engine Good experience in working with various Python Integrated Development Environments like PyCharm Intellij Spyder Jupyter Notebook Anaconda and UBUNTU Experience in working with Relational DB RDBMD like SQLite MYSQL Workbench PostgreSQL and NoSQL database MongoDB for database connectivity Experienced in developing webbased applications using Python Flask PHP Django XML JSON CSS HTML HTML5 JavaScript AngularJS and jQuery Experience in working on various python packages such as NumPy SQLAlchemy  Beautiful soup pickle PySide SciPy PyTables Expertise in continuous integration and continuous deployment using build tools like Git Ant Maven and Jenkins Chef Puppet Ansible Nagios and Docker Expertise in AWS Cloud Formation templates to create custom sized VPC Subnets and NAT to ensure successful deployment of Web Applications and database templates Hands on experience in migrating Business from a physical data center environment to AWS Good experience of software development in Python libraries used libraries Beautiful Soup Numpy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity Authorized to work in the US for any employer Work Experience Sr Python Developer Walmart Bentonville AR September 2016 to Present Responsibilities Designing and deploying scalable highly available and fault tolerant systems on AWS and developed programs using Python Shell JavaScripts and CI tools like Jenkins Maven build tool and IAM roles VPC subnets NACL and SGs for EC2 instances and Restful APIs developed for NodeJS applications Used Django framework to develop the application and used Python modules such as requests urlib and urlib2 for web crawling Involved in deploying systems on Amazon Web Services Infrastructure services EC2 S3 RDS SQS Cloud Formation Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Worked on objectoriented programming OOP concepts using Python Django and Linux Worked on AWS services running in an environment for sensitive workloads and storing sensitive data Designed and managed API system deployment using fast http server and Amazon AWS architecture Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Performance tuning by analyzing and comparing the turnaround times between SQL and Cognos Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Written scripts in Python Perl Java to automate log rotation of multiple logs from web servers and for automation and monitoring of AWS services like VPC ELB RDS Lambda AWS OpsWorks Cloud Front using Shell and Python scripts and Using Jenkins AWS Code Deploy plugin to deploy Migrate on premise database to AWS Cloud and designed built and deployed a multitude application utilizing the AWS stack Including EC2 R53 S3 RDS SNS and IAM by focusing on highavailability fault tolerance and autoscaling Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on Python OpenStack APIs and used Numpy for Numerical analysis Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework and created entire application using Python Flask MySQL and Windows Implemented build stage to build the Micro Service architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Used several Python libraries such as wxPython Numpy and matplotlib for representation or plotting of Network Analysis Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Created scripts for system administration using languages such as BASH Python and Python scripts to automate Cron jobs system maintenance Jenkins Maven for automation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask and PostgreSQL Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Built SPA with loading multiple views using route services using Angular2 and NodeJS and involved in automating builds and deployment process using Shell scripting Used jQuery JavaScript libraries for providing richer user interface and facilitates asynchronous request invocations using AJAX Developed Views and Templates with Python and to create a userfriendly website interface Djangos view controller and template language is used Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Maven and artifacts repo Set up and maintain continuous automated build system with Jenkins ClearCase and Perl Python Bash scripting and security for instances through VPC Subnets along with SGs ELB for critical instances Configuring IAM roles for EC2 instances in ELB and assign them policies granting specific level access to S3 buckets by customizing JSON template designed Stacks using Amazon Cloud Formation templates to launch Infrastructure Used Code Commit to host secure scalable private Git repositories Utilized Python Django jQuery etc to design server applications and client interfaces Launching Amazon EC2 Cloud Instances using Amazon Images LinuxUbuntu and Configuring launched instances with respect to specific applications Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Provisioned Lambda for RDS instances for eventbased calls to MySQL DB those configured with VPC Python Developer Bank of America Charlotte NC February 2014 to August 2016 Responsibilities Created database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium and Managed large datasets using Panda data frames and MySQL Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Developed serverbased web traffic statistical analysis tool using Flask Pandas and had implemented and tested pythonbased web applications interacting with MySQL Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Implemented tokenbased authentication JWT for all pages and modules using Angular2 Auth Service and Node JS Developed the presentation layer using HTML CSS JavaScript jQuery and AJAX and Used jQuery libraries for all clientside JavaScript manipulations Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Developed entire frontend and backend modules using Python on Django Web Framework and created User Interface UI using JavaScript bootstrap Cassandra with MySQL and HTML CSS Automated the existing scripts for performance calculations using datamining tools like Numpy SciPy Scikitlearn and SQL alchemy Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Used MongoDB to stored data in JSON format and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Worked on developing CRUD applications using MERN stack MongoDB Express ReactJS and NodeJS and REST based API Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviourdriven development BDD Developed PLSQL store procedures to convert the data from Oracle to MongoDB and automate report generation in MongoDB using JavaScript Shell Scripting Created services using Angular JS factory method and used Angular JS q and promise to handle asynchronous calls Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Worked on creating documents in Mongo database and Maintained the versions using GIT and sending the release notes for each release Python Developer Wells Fargo Minneapolis MN May 2011 to December 2013 Responsibilities Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed and performed unit testing using JUnit framework in a TestDriven environment TDD Creating MongoDB data set backups using systemlevel file snapshot tool such as LVM or native storage appliance tools Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Involved in developing web applications using Django Framework to implement the model view control architecture Worked on front end frame works like CSS Bootstrap for responsive webpages and Added dynamic functionality to the application by implementing jQuery and Angular JS Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Implemented and administered Data center Cassandra Clusters based on the knowledge of architecture and data modeling for Cassandra applications Model View Control architecture is implemented using Django Framework to develop web applications Developed Wrapper in Python for instantiating multithreaded application and Deploy and monitor scalable infrastructure on Amazon web services AWS Performed importing data from various sources to the Cassandra cluster using Python APIs Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve Experience in managing MongoDB environment from availability performance and scalability perspectives Datacentre migration to Amazon Web Services AWS infrastructure and provided initial support to Applications and Database teams Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Designed and managed API system deployment using fast http server and Amazon AWS architecture Education Bachelors Skills Python 7 years Matplotlib 5 years Django 7 years NodeJS 7 years AngularJS 7 years JQuery 7 years JSON 7 years NumPy 7 years SciPy 5 years Urlib 6 years Hibernate 7 years AWS 7 years Jenkins 7 years MAVEN 7 years Docker 7 years MongoDB 7 years Kafka 7 years JUnit 7 years",
    "entities": [
        "Python Flask",
        "AJAX",
        "PyCharm PyScripter PyStudio",
        "jQuery Worked",
        "VPC Python Developer Bank of America Charlotte",
        "Nodejs",
        "NAT",
        "Customer",
        "Python Django AWS J2EE PostgreSQL",
        "JSON",
        "CSS HTML",
        "Amazon Web Services AWS",
        "Heroku",
        "Node Package",
        "Panda",
        "Model View Control MVC",
        "Express",
        "JavaScript Implemented",
        "Bootstrap CSS",
        "Maintained",
        "Network Analysis Creating",
        "NodeJS",
        "Jenkins Sound",
        "Shell",
        "Responsibilities Created",
        "DevOps",
        "JUnit",
        "BASH Python",
        "Amazon",
        "Amazon Web Services Infrastructure",
        "Python",
        "AJAX Developed Views",
        "Amazon AWS S3",
        "Mongo",
        "Developed",
        "CSS Bootstrap",
        "JavaScript Shell Scripting Created",
        "AWS Deploying",
        "NC",
        "Utilized",
        "Python Unit",
        "Restful",
        "Migrate",
        "Develop",
        "Images",
        "API RESTful Web Service",
        "Linux",
        "Minneapolis",
        "AWS Good",
        "Flask",
        "VMWare API",
        "Docker",
        "RDS",
        "Views",
        "Developed Ruby Python",
        "Angular JS",
        "MVC",
        "Docker Container",
        "Redux",
        "GIT",
        "Node JS",
        "NACL",
        "Behaviourdriven",
        "Python on Django",
        "Cassandra Clusters",
        "API",
        "US",
        "HTML CSS JavaScript",
        "IAM",
        "Created",
        "BDD",
        "AWS",
        "Oracle",
        "Oracle DB",
        "Bash Designed",
        "Backup and Restore",
        "ELB",
        "Cron",
        "Auth Service",
        "the Micro Service",
        "SQL",
        "NetBeans Business logic implementation data",
        "Clojure",
        "Pipenv Experienced",
        "Instance Status",
        "Development of Isomorphic",
        "Django Oracle DB PostgreSQL",
        "Bootstrap",
        "lPythonspan",
        "Git Collect",
        "Jenkins Ansible",
        "Administrators",
        "JS Angular JS CSS",
        "LVM",
        "Virtual Private Clouds VPC Elastic Load Balancers ELB",
        "Anaconda",
        "Model View Control",
        "CI",
        "Amazon AWS",
        "CICD Pipeline",
        "TestDriven",
        "Utilized Python",
        "Used Django Framework",
        "Pandas",
        "Python Integrated Development Environments",
        "Using Amazon",
        "Python and Django Proficient",
        "SQLite",
        "Relational DB RDBMD",
        "SQS",
        "CRUD",
        "Build",
        "Infrastructure Used Code Commit",
        "JWT",
        "Varrays Records Object",
        "Djangos",
        "JavaScript",
        "UBUNTU Experience",
        "Python Bootstrap CSS",
        "API Involved",
        "Work Experience Sr Python Developer Walmart Bentonville AR",
        "JavaScript manipulations Involved",
        "HTML CSS JavaScript jQuery",
        "Amazon Web Services Cloud Python",
        "Amazon Web Services AWS Worked",
        "CSS",
        "jQuery",
        "Amazon Images LinuxUbuntu and Configuring",
        "REST",
        "Mesos Used",
        "Including EC2 R53 S3 RDS SNS",
        "Developed Ruby on Rails",
        "Python Developer Wells Fargo",
        "NoSQL",
        "Relational Database Services RDS Performance",
        "Jenkins Chef Puppet Ansible Nagios",
        "Python Flask PHP Django XML JSON",
        "Application",
        "EBS",
        "Integration",
        "Using Jenkins AWS Code Deploy",
        "Stacks",
        "Datacentre",
        "Cassandra Configuration",
        "MFA",
        "Node"
    ],
    "experience": "Experience with Requests Pysftp Gnupg Reportlab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Strong expertise in development of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Worked on several python packages like Numpy   BeautifulSoup Pickle PySide SciPy wxPython PyTables etc Sound knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and Mongo DB 26 24 Orient DB Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse NetBeans Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Proficient in front and backend development with experience in Python 36 Django AJAX HTML5 CSS3 JavaScript Bootstrap jQuery Angular2 Angular JS Node JS and Express JS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Utilized Python specific tools including Django Django Rest Framework Django ORM Flask Requests Pandas Numpy Jupyter Celery Gunicorn and Pipenv Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy pandas Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Configured and automated various AWS services like EC2 and S3 using Boto python sdk Develop AWS Cloud Formation templates in JSON to automate infrastructure deployments Experience in Building S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Deploying application in Docker Container for custom environment and hosting in Elastic Beanstalk Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Experience in designing and configuring secure VPC through private and public networks in AWS Troubleshoot AWS EC2 Status check including System Status checks and Instance Status check alerts Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3 bucket Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python SDK Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10 g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Good experience in developing web applications implementing Model View Control architecture using Django Flask Python web application frameworks Extensive experience in developing PLSQL Stored Procedures Functions Packages Cursors Collections Nested tables and Varrays Records Object types and Database Triggers Expertise in creating Restful API in NodeJS and communicate with Clojure server via protocol and use Backbone to generate template Good knowledge on Cloud and Virtualization environments such as Azure Aws Google Cloud Engine Good experience in working with various Python Integrated Development Environments like PyCharm Intellij Spyder Jupyter Notebook Anaconda and UBUNTU Experience in working with Relational DB RDBMD like SQLite MYSQL Workbench PostgreSQL and NoSQL database MongoDB for database connectivity Experienced in developing webbased applications using Python Flask PHP Django XML JSON CSS HTML HTML5 JavaScript AngularJS and jQuery Experience in working on various python packages such as NumPy SQLAlchemy   Beautiful soup pickle PySide SciPy PyTables Expertise in continuous integration and continuous deployment using build tools like Git Ant Maven and Jenkins Chef Puppet Ansible Nagios and Docker Expertise in AWS Cloud Formation templates to create custom sized VPC Subnets and NAT to ensure successful deployment of Web Applications and database templates Hands on experience in migrating Business from a physical data center environment to AWS Good experience of software development in Python libraries used libraries Beautiful Soup Numpy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity Authorized to work in the US for any employer Work Experience Sr Python Developer Walmart Bentonville AR September 2016 to Present Responsibilities Designing and deploying scalable highly available and fault tolerant systems on AWS and developed programs using Python Shell JavaScripts and CI tools like Jenkins Maven build tool and IAM roles VPC subnets NACL and SGs for EC2 instances and Restful APIs developed for NodeJS applications Used Django framework to develop the application and used Python modules such as requests urlib and urlib2 for web crawling Involved in deploying systems on Amazon Web Services Infrastructure services EC2 S3 RDS SQS Cloud Formation Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Worked on objectoriented programming OOP concepts using Python Django and Linux Worked on AWS services running in an environment for sensitive workloads and storing sensitive data Designed and managed API system deployment using fast http server and Amazon AWS architecture Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Performance tuning by analyzing and comparing the turnaround times between SQL and Cognos Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Written scripts in Python Perl Java to automate log rotation of multiple logs from web servers and for automation and monitoring of AWS services like VPC ELB RDS Lambda AWS OpsWorks Cloud Front using Shell and Python scripts and Using Jenkins AWS Code Deploy plugin to deploy Migrate on premise database to AWS Cloud and designed built and deployed a multitude application utilizing the AWS stack Including EC2 R53 S3 RDS SNS and IAM by focusing on highavailability fault tolerance and autoscaling Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on Python OpenStack APIs and used Numpy for Numerical analysis Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework and created entire application using Python Flask MySQL and Windows Implemented build stage to build the Micro Service architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Used several Python libraries such as wxPython Numpy and matplotlib for representation or plotting of Network Analysis Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Created scripts for system administration using languages such as BASH Python and Python scripts to automate Cron jobs system maintenance Jenkins Maven for automation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask and PostgreSQL Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Built SPA with loading multiple views using route services using Angular2 and NodeJS and involved in automating builds and deployment process using Shell scripting Used jQuery JavaScript libraries for providing richer user interface and facilitates asynchronous request invocations using AJAX Developed Views and Templates with Python and to create a userfriendly website interface Djangos view controller and template language is used Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Maven and artifacts repo Set up and maintain continuous automated build system with Jenkins ClearCase and Perl Python Bash scripting and security for instances through VPC Subnets along with SGs ELB for critical instances Configuring IAM roles for EC2 instances in ELB and assign them policies granting specific level access to S3 buckets by customizing JSON template designed Stacks using Amazon Cloud Formation templates to launch Infrastructure Used Code Commit to host secure scalable private Git repositories Utilized Python Django jQuery etc to design server applications and client interfaces Launching Amazon EC2 Cloud Instances using Amazon Images LinuxUbuntu and Configuring launched instances with respect to specific applications Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Provisioned Lambda for RDS instances for eventbased calls to MySQL DB those configured with VPC Python Developer Bank of America Charlotte NC February 2014 to August 2016 Responsibilities Created database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium and Managed large datasets using Panda data frames and MySQL Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Developed serverbased web traffic statistical analysis tool using Flask Pandas and had implemented and tested pythonbased web applications interacting with MySQL Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Implemented tokenbased authentication JWT for all pages and modules using Angular2 Auth Service and Node JS Developed the presentation layer using HTML CSS JavaScript jQuery and AJAX and Used jQuery libraries for all clientside JavaScript manipulations Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Developed entire frontend and backend modules using Python on Django Web Framework and created User Interface UI using JavaScript bootstrap Cassandra with MySQL and HTML CSS Automated the existing scripts for performance calculations using datamining tools like Numpy SciPy Scikitlearn and SQL alchemy Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Used MongoDB to stored data in JSON format and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Worked on developing CRUD applications using MERN stack MongoDB Express ReactJS and NodeJS and REST based API Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviourdriven development BDD Developed PLSQL store procedures to convert the data from Oracle to MongoDB and automate report generation in MongoDB using JavaScript Shell Scripting Created services using Angular JS factory method and used Angular JS q and promise to handle asynchronous calls Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Worked on creating documents in Mongo database and Maintained the versions using GIT and sending the release notes for each release Python Developer Wells Fargo Minneapolis MN May 2011 to December 2013 Responsibilities Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed and performed unit testing using JUnit framework in a TestDriven environment TDD Creating MongoDB data set backups using systemlevel file snapshot tool such as LVM or native storage appliance tools Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Involved in developing web applications using Django Framework to implement the model view control architecture Worked on front end frame works like CSS Bootstrap for responsive webpages and Added dynamic functionality to the application by implementing jQuery and Angular JS Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Implemented and administered Data center Cassandra Clusters based on the knowledge of architecture and data modeling for Cassandra applications Model View Control architecture is implemented using Django Framework to develop web applications Developed Wrapper in Python for instantiating multithreaded application and Deploy and monitor scalable infrastructure on Amazon web services AWS Performed importing data from various sources to the Cassandra cluster using Python APIs Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve Experience in managing MongoDB environment from availability performance and scalability perspectives Datacentre migration to Amazon Web Services AWS infrastructure and provided initial support to Applications and Database teams Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Designed and managed API system deployment using fast http server and Amazon AWS architecture Education Bachelors Skills Python 7 years Matplotlib 5 years Django 7 years NodeJS 7 years AngularJS 7 years JQuery 7 years JSON 7 years NumPy 7 years SciPy 5 years Urlib 6 years Hibernate 7 years AWS 7 years Jenkins 7 years MAVEN 7 years Docker 7 years MongoDB 7 years Kafka 7 years JUnit 7 years",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Walmart",
        "Bentonville",
        "AR",
        "years",
        "experience",
        "Architecting",
        "implementation",
        "Amazon",
        "Web",
        "Services",
        "Cloud",
        "Python",
        "IT",
        "industry",
        "Experience",
        "Requests",
        "Pysftp",
        "Gnupg",
        "Reportlab",
        "Numpy",
        "SciPy",
        "Matplotlib",
        "HTTPLib2",
        "Urllib2",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "expertise",
        "development",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Dojo",
        "HTML",
        "XML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "jQuery",
        "python",
        "packages",
        "Numpy",
        "BeautifulSoup",
        "Pickle",
        "PySide",
        "SciPy",
        "wxPython",
        "PyTables",
        "knowledge",
        "spring",
        "Hibernate",
        "RDBMS",
        "Web",
        "XML",
        "AntMaven",
        "HTML",
        "Python",
        "Shell",
        "Scripting",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "Mongo",
        "DB",
        "Orient",
        "DB",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "Eclipse",
        "NetBeans",
        "Business",
        "logic",
        "implementation",
        "data",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Python",
        "Django",
        "Proficient",
        "development",
        "experience",
        "Python",
        "Django",
        "AJAX",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "Angular2",
        "JS",
        "Node",
        "JS",
        "Express",
        "JS",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "template",
        "Python",
        "tools",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "Django",
        "ORM",
        "Flask",
        "Pandas",
        "Numpy",
        "Jupyter",
        "Celery",
        "Gunicorn",
        "Pipenv",
        "Experienced",
        "Python",
        "programming",
        "Python",
        "libraries",
        "data",
        "science",
        "Anaconda",
        "distribution",
        "NumPy",
        "pandas",
        "support",
        "Application",
        "database",
        "team",
        "troubleshoot",
        "issues",
        "support",
        "contact",
        "AWS",
        "Support",
        "Configured",
        "AWS",
        "services",
        "EC2",
        "S3",
        "Boto",
        "python",
        "sdk",
        "Develop",
        "AWS",
        "Cloud",
        "Formation",
        "JSON",
        "infrastructure",
        "deployments",
        "Experience",
        "S3",
        "buckets",
        "policies",
        "S3",
        "buckets",
        "S3",
        "bucket",
        "Glacier",
        "storage",
        "backup",
        "AWS",
        "application",
        "Docker",
        "Container",
        "custom",
        "environment",
        "Elastic",
        "Beanstalk",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "Experience",
        "designing",
        "VPC",
        "networks",
        "AWS",
        "Troubleshoot",
        "AWS",
        "EC2",
        "Status",
        "check",
        "System",
        "Status",
        "checks",
        "Instance",
        "Status",
        "check",
        "alerts",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3",
        "bucket",
        "Build",
        "scripts",
        "AWS",
        "cloud",
        "EC2",
        "auto",
        "scaling",
        "load",
        "balancer",
        "python",
        "SDK",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "web",
        "application",
        "Python",
        "Django",
        "J2EE",
        "PostgreSQL",
        "MySQL",
        "Oracle",
        "g",
        "MongoDB",
        "Knowledgeable",
        "deployment",
        "Heroku",
        "Jenkins",
        "Sound",
        "experience",
        "editors",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "PyDev",
        "Wing",
        "IDE",
        "Spyder",
        "Good",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Python",
        "web",
        "application",
        "experience",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Packages",
        "Cursors",
        "Collections",
        "Nested",
        "tables",
        "Varrays",
        "Records",
        "Object",
        "types",
        "Database",
        "Triggers",
        "Expertise",
        "API",
        "NodeJS",
        "Clojure",
        "server",
        "protocol",
        "Backbone",
        "template",
        "knowledge",
        "Cloud",
        "Virtualization",
        "environments",
        "Azure",
        "Aws",
        "Google",
        "Cloud",
        "Engine",
        "experience",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "Intellij",
        "Spyder",
        "Jupyter",
        "Notebook",
        "Anaconda",
        "UBUNTU",
        "Experience",
        "Relational",
        "DB",
        "RDBMD",
        "SQLite",
        "MYSQL",
        "Workbench",
        "PostgreSQL",
        "NoSQL",
        "database",
        "MongoDB",
        "database",
        "connectivity",
        "applications",
        "Python",
        "Flask",
        "PHP",
        "Django",
        "CSS",
        "HTML",
        "HTML5",
        "JavaScript",
        "AngularJS",
        "jQuery",
        "Experience",
        "python",
        "packages",
        "NumPy",
        "SQLAlchemy",
        "soup",
        "pickle",
        "PySide",
        "SciPy",
        "PyTables",
        "Expertise",
        "integration",
        "deployment",
        "build",
        "tools",
        "Git",
        "Ant",
        "Maven",
        "Jenkins",
        "Chef",
        "Puppet",
        "Ansible",
        "Nagios",
        "Docker",
        "Expertise",
        "AWS",
        "Cloud",
        "Formation",
        "custom",
        "VPC",
        "Subnets",
        "NAT",
        "deployment",
        "Web",
        "Applications",
        "database",
        "Hands",
        "experience",
        "Business",
        "data",
        "center",
        "environment",
        "AWS",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "Numpy",
        "SciPy",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Walmart",
        "Bentonville",
        "AR",
        "September",
        "Present",
        "Responsibilities",
        "Designing",
        "systems",
        "AWS",
        "programs",
        "Python",
        "Shell",
        "JavaScripts",
        "CI",
        "tools",
        "Jenkins",
        "Maven",
        "tool",
        "IAM",
        "subnets",
        "NACL",
        "SGs",
        "EC2",
        "instances",
        "APIs",
        "NodeJS",
        "applications",
        "Django",
        "framework",
        "application",
        "Python",
        "modules",
        "requests",
        "urlib2",
        "web",
        "systems",
        "Amazon",
        "Web",
        "Services",
        "Infrastructure",
        "services",
        "EC2",
        "S3",
        "RDS",
        "SQS",
        "Cloud",
        "Formation",
        "data",
        "form",
        "JSON",
        "documents",
        "collection",
        "MongoDB",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "serverside",
        "software",
        "modules",
        "user",
        "interface",
        "components",
        "Compute",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Django",
        "Linux",
        "AWS",
        "services",
        "environment",
        "workloads",
        "data",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "operations",
        "maintenance",
        "support",
        "AWS",
        "cloud",
        "resources",
        "EC2",
        "instances",
        "S3",
        "Clouds",
        "VPC",
        "Elastic",
        "Load",
        "Balancers",
        "ELB",
        "Relational",
        "Database",
        "Services",
        "RDS",
        "Performance",
        "turnaround",
        "times",
        "SQL",
        "Cognos",
        "PostgreSQLMYSQL",
        "features",
        "table",
        "types",
        "oracle",
        "indexing",
        "Backup",
        "Restore",
        "experience",
        "PostgreSQL",
        "MYSQL",
        "database",
        "backups",
        "point",
        "time",
        "recovery",
        "scripts",
        "Python",
        "Perl",
        "Java",
        "log",
        "rotation",
        "logs",
        "web",
        "servers",
        "automation",
        "monitoring",
        "AWS",
        "services",
        "VPC",
        "ELB",
        "RDS",
        "Lambda",
        "OpsWorks",
        "Cloud",
        "Front",
        "Shell",
        "Python",
        "scripts",
        "Jenkins",
        "AWS",
        "Code",
        "Deploy",
        "plugin",
        "Migrate",
        "premise",
        "database",
        "AWS",
        "Cloud",
        "multitude",
        "application",
        "AWS",
        "stack",
        "EC2",
        "R53",
        "S3",
        "RDS",
        "SNS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "CSS",
        "framework",
        "Bootstrap",
        "appearance",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Djangos",
        "ORM",
        "model",
        "Amazon",
        "SQS",
        "work",
        "Amazon",
        "EC2",
        "nodes",
        "data",
        "charts",
        "Customer",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "CSS",
        "HTML",
        "framework",
        "application",
        "Python",
        "Flask",
        "MySQL",
        "Windows",
        "build",
        "stage",
        "Micro",
        "Service",
        "architecture",
        "Docker",
        "container",
        "image",
        "Docker",
        "registry",
        "Images",
        "custom",
        "use",
        "Python",
        "libraries",
        "wxPython",
        "Numpy",
        "matplotlib",
        "representation",
        "plotting",
        "Network",
        "Analysis",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "scripts",
        "system",
        "administration",
        "languages",
        "BASH",
        "Python",
        "Python",
        "scripts",
        "Cron",
        "jobs",
        "system",
        "maintenance",
        "Jenkins",
        "Maven",
        "automation",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "PostgreSQL",
        "MySQL",
        "failover",
        "Linux",
        "OS",
        "bash",
        "scripts",
        "logic",
        "failover",
        "executebefore",
        "option",
        "masterpiece",
        "tuning",
        "SQL",
        "queries",
        "join",
        "costs",
        "SPA",
        "loading",
        "views",
        "route",
        "services",
        "Angular2",
        "NodeJS",
        "builds",
        "deployment",
        "process",
        "Shell",
        "scripting",
        "jQuery",
        "JavaScript",
        "user",
        "interface",
        "request",
        "invocations",
        "AJAX",
        "Views",
        "Templates",
        "Python",
        "website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "language",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "Developed",
        "Restful",
        "Microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Build",
        "application",
        "database",
        "servers",
        "AWS",
        "EC2",
        "AMIs",
        "RDS",
        "Oracle",
        "DB",
        "Experience",
        "CICD",
        "Pipeline",
        "code",
        "release",
        "process",
        "Integration",
        "tools",
        "GitSVN",
        "GitHub",
        "Jenkins",
        "Maven",
        "build",
        "system",
        "Jenkins",
        "ClearCase",
        "Perl",
        "Python",
        "Bash",
        "scripting",
        "security",
        "instances",
        "VPC",
        "Subnets",
        "SGs",
        "ELB",
        "instances",
        "Configuring",
        "IAM",
        "roles",
        "EC2",
        "instances",
        "ELB",
        "policies",
        "level",
        "access",
        "S3",
        "buckets",
        "JSON",
        "template",
        "Stacks",
        "Amazon",
        "Cloud",
        "Formation",
        "Infrastructure",
        "Code",
        "Commit",
        "Git",
        "repositories",
        "Python",
        "Django",
        "jQuery",
        "design",
        "server",
        "applications",
        "client",
        "interfaces",
        "Amazon",
        "EC2",
        "Cloud",
        "Instances",
        "Amazon",
        "Images",
        "LinuxUbuntu",
        "Configuring",
        "instances",
        "respect",
        "applications",
        "PLSQL",
        "procedures",
        "functions",
        "packages",
        "data",
        "area",
        "data",
        "mart",
        "ETL",
        "mappings",
        "PLSQL",
        "packages",
        "procedures",
        "functions",
        "views",
        "Lambda",
        "RDS",
        "instances",
        "calls",
        "MySQL",
        "DB",
        "VPC",
        "Python",
        "Developer",
        "Bank",
        "America",
        "Charlotte",
        "NC",
        "February",
        "August",
        "Responsibilities",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "application",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "Collect",
        "data",
        "performance",
        "query",
        "operations",
        "instance",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Worked",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "familiarity",
        "technologies",
        "kubernetes",
        "Mesos",
        "expression",
        "search",
        "results",
        "combination",
        "Angular2",
        "builtin",
        "custom",
        "pipes",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behaviour",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "web",
        "services",
        "Nodejs",
        "dependencies",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "Build",
        "Cassandra",
        "CRUD",
        "operations",
        "update",
        "read",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "Insurance",
        "premium",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "integration",
        "automation",
        "Jenkins",
        "Developed",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "web",
        "applications",
        "MySQL",
        "SQL",
        "functions",
        "triggers",
        "cursors",
        "types",
        "sequences",
        "indexes",
        "authentication",
        "JWT",
        "pages",
        "modules",
        "Angular2",
        "Auth",
        "Service",
        "Node",
        "JS",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "AJAX",
        "jQuery",
        "JavaScript",
        "manipulations",
        "development",
        "RESTful",
        "Web",
        "Services",
        "data",
        "interface",
        "format",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "User",
        "Interface",
        "UI",
        "JavaScript",
        "bootstrap",
        "Cassandra",
        "MySQL",
        "HTML",
        "CSS",
        "scripts",
        "performance",
        "calculations",
        "tools",
        "Numpy",
        "SciPy",
        "Scikitlearn",
        "SQL",
        "alchemy",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "frontend",
        "pages",
        "data",
        "format",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "web",
        "applications",
        "CRUD",
        "applications",
        "MERN",
        "stack",
        "MongoDB",
        "Express",
        "ReactJS",
        "NodeJS",
        "REST",
        "API",
        "Web",
        "development",
        "programming",
        "engineering",
        "Django",
        "Web",
        "Server",
        "Gateway",
        "Interface",
        "WSGI",
        "SQL",
        "admin",
        "tools",
        "Behaviourdriven",
        "development",
        "BDD",
        "Developed",
        "PLSQL",
        "store",
        "procedures",
        "data",
        "Oracle",
        "MongoDB",
        "report",
        "generation",
        "MongoDB",
        "JavaScript",
        "Shell",
        "Scripting",
        "Created",
        "services",
        "Angular",
        "JS",
        "factory",
        "method",
        "Angular",
        "JS",
        "q",
        "calls",
        "Developed",
        "Ruby",
        "Rails",
        "web",
        "applications",
        "MongoDB",
        "background",
        "processes",
        "Resque",
        "Redis",
        "Worked",
        "performance",
        "tuning",
        "cluster",
        "Cassandra",
        "Configuration",
        "file",
        "features",
        "dashboard",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "documents",
        "Mongo",
        "database",
        "versions",
        "GIT",
        "release",
        "notes",
        "release",
        "Python",
        "Developer",
        "Wells",
        "Fargo",
        "Minneapolis",
        "MN",
        "May",
        "December",
        "Responsibilities",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "unit",
        "testing",
        "JUnit",
        "framework",
        "TestDriven",
        "environment",
        "TDD",
        "MongoDB",
        "data",
        "backups",
        "systemlevel",
        "file",
        "tool",
        "LVM",
        "storage",
        "appliance",
        "tools",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "Strong",
        "Expertise",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "web",
        "applications",
        "Django",
        "Framework",
        "model",
        "view",
        "control",
        "architecture",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "webpages",
        "functionality",
        "application",
        "jQuery",
        "Angular",
        "JS",
        "Developed",
        "features",
        "dashboard",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Data",
        "center",
        "Cassandra",
        "Clusters",
        "knowledge",
        "architecture",
        "data",
        "Cassandra",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Framework",
        "web",
        "applications",
        "Wrapper",
        "Python",
        "application",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "data",
        "sources",
        "Cassandra",
        "cluster",
        "Python",
        "APIs",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Experience",
        "environment",
        "availability",
        "performance",
        "scalability",
        "Datacentre",
        "migration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "support",
        "Applications",
        "Database",
        "teams",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "calls",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Education",
        "Bachelors",
        "Skills",
        "Python",
        "years",
        "Matplotlib",
        "years",
        "Django",
        "years",
        "NodeJS",
        "years",
        "years",
        "JQuery",
        "years",
        "JSON",
        "years",
        "NumPy",
        "years",
        "SciPy",
        "years",
        "Urlib",
        "years",
        "Hibernate",
        "years",
        "AWS",
        "years",
        "Jenkins",
        "years",
        "MAVEN",
        "years",
        "Docker",
        "years",
        "MongoDB",
        "years",
        "Kafka",
        "years",
        "JUnit",
        "years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:18:40.547435",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Walmart Bentonville AR Having 7 years of diverse professional experience in planning designing developing Architecting and implementation in Amazon Web Services Cloud Python and IT industry Experience with Requests Pysftp Gnupg Reportlab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Strong expertise in development of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Worked on several python packages like Numpy MatPlotLib BeautifulSoup Pickle PySide SciPy wxPython PyTables etc Sound knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and Mongo DB 26 24 Orient DB Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse NetBeans Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Proficient in front and backend development with experience in Python 36 Django AJAX HTML5 CSS3 JavaScript Bootstrap jQuery Angular2 Angular JS Node JS and Express JS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Utilized Python specific tools including Django Django Rest Framework Django ORM Flask Requests Pandas Numpy Jupyter Celery Gunicorn and Pipenv Experienced with Python programming and Python libraries for data science included in the Anaconda distribution including NumPy pandas Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Configured and automated various AWS services like EC2 and S3 using Boto python sdk Develop AWS Cloud Formation templates in JSON to automate infrastructure deployments Experience in Building S3 buckets and managed policies for S3 buckets and used S3 bucket and Glacier for storage and backup on AWS Deploying application in Docker Container for custom environment and hosting in Elastic Beanstalk Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Experience in designing and configuring secure VPC through private and public networks in AWS Troubleshoot AWS EC2 Status check including System Status checks and Instance Status check alerts Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3 bucket Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python SDK Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB and Knowledgeable with continuous deployment using Heroku and Jenkins Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Good experience in developing web applications implementing Model View Control architecture using Django Flask Python web application frameworks Extensive experience in developing PLSQL Stored Procedures Functions Packages Cursors Collections Nested tables and Varrays Records Object types and Database Triggers Expertise in creating Restful API in NodeJS and communicate with Clojure server via protocol and use Backbone to generate template Good knowledge on Cloud and Virtualization environments such as Azure Aws Google Cloud Engine Good experience in working with various Python Integrated Development Environments like PyCharm Intellij Spyder Jupyter Notebook Anaconda and UBUNTU Experience in working with Relational DB RDBMD like SQLite MYSQL Workbench PostgreSQL and NoSQL database MongoDB for database connectivity Experienced in developing webbased applications using Python Flask PHP Django XML JSON CSS HTML HTML5 JavaScript AngularJS and jQuery Experience in working on various python packages such as NumPy SQLAlchemy MatPlotLib Beautiful soup pickle PySide SciPy PyTables Expertise in continuous integration and continuous deployment using build tools like Git Ant Maven and Jenkins Chef Puppet Ansible Nagios and Docker Expertise in AWS Cloud Formation templates to create custom sized VPC Subnets and NAT to ensure successful deployment of Web Applications and database templates Hands on experience in migrating Business from a physical data center environment to AWS Good experience of software development in Python libraries used libraries Beautiful Soup Numpy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity Authorized to work in the US for any employer Work Experience Sr Python Developer Walmart Bentonville AR September 2016 to Present Responsibilities Designing and deploying scalable highly available and fault tolerant systems on AWS and developed programs using Python Shell JavaScripts and CI tools like Jenkins Maven build tool and IAM roles VPC subnets NACL and SGs for EC2 instances and Restful APIs developed for NodeJS applications Used Django framework to develop the application and used Python modules such as requests urlib and urlib2 for web crawling Involved in deploying systems on Amazon Web Services Infrastructure services EC2 S3 RDS SQS Cloud Formation Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Worked on objectoriented programming OOP concepts using Python Django and Linux Worked on AWS services running in an environment for sensitive workloads and storing sensitive data Designed and managed API system deployment using fast http server and Amazon AWS architecture Handled operations and maintenance support for AWS cloud resources which includes launching maintaining and troubleshooting EC2 instances and S3 buckets Virtual Private Clouds VPC Elastic Load Balancers ELB and Relational Database Services RDS Performance tuning by analyzing and comparing the turnaround times between SQL and Cognos Experienced in using advanced PostgreSQLMYSQL features like table partitioning and diverse types of oracle indexing Backup and Restore experience with PostgreSQL MYSQL database backups and point in time recovery Written scripts in Python Perl Java to automate log rotation of multiple logs from web servers and for automation and monitoring of AWS services like VPC ELB RDS Lambda AWS OpsWorks Cloud Front using Shell and Python scripts and Using Jenkins AWS Code Deploy plugin to deploy Migrate on premise database to AWS Cloud and designed built and deployed a multitude application utilizing the AWS stack Including EC2 R53 S3 RDS SNS and IAM by focusing on highavailability fault tolerance and autoscaling Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Used Django Framework in developing web applications to implement the model view control architecture along with Djangos ORM model Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on Python OpenStack APIs and used Numpy for Numerical analysis Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework and created entire application using Python Flask MySQL and Windows Implemented build stage to build the Micro Service architecture and push the Docker container image to the private Docker registry and Images that are custom built are stored for future use Used several Python libraries such as wxPython Numpy and matplotlib for representation or plotting of Network Analysis Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Created scripts for system administration using languages such as BASH Python and Python scripts to automate Cron jobs system maintenance Jenkins Maven for automation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask and PostgreSQL Created outstanding MySQL failover Linux OS bash scripts encapsulating logic of failover in the executebefore option performed masterpiece tuning of various SQL queries after analyzing join costs Built SPA with loading multiple views using route services using Angular2 and NodeJS and involved in automating builds and deployment process using Shell scripting Used jQuery JavaScript libraries for providing richer user interface and facilitates asynchronous request invocations using AJAX Developed Views and Templates with Python and to create a userfriendly website interface Djangos view controller and template language is used Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery and Angular JS Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Build application and database servers using AWS EC2 and create AMIs as well as use RDS for Oracle DB Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Maven and artifacts repo Set up and maintain continuous automated build system with Jenkins ClearCase and Perl Python Bash scripting and security for instances through VPC Subnets along with SGs ELB for critical instances Configuring IAM roles for EC2 instances in ELB and assign them policies granting specific level access to S3 buckets by customizing JSON template designed Stacks using Amazon Cloud Formation templates to launch Infrastructure Used Code Commit to host secure scalable private Git repositories Utilized Python Django jQuery etc to design server applications and client interfaces Launching Amazon EC2 Cloud Instances using Amazon Images LinuxUbuntu and Configuring launched instances with respect to specific applications Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Developed the ETL mappings in PLSQL via packages procedures functions views and triggers Provisioned Lambda for RDS instances for eventbased calls to MySQL DB those configured with VPC Python Developer Bank of America Charlotte NC February 2014 to August 2016 Responsibilities Created database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium and Managed large datasets using Panda data frames and MySQL Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Developed serverbased web traffic statistical analysis tool using Flask Pandas and had implemented and tested pythonbased web applications interacting with MySQL Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Implemented tokenbased authentication JWT for all pages and modules using Angular2 Auth Service and Node JS Developed the presentation layer using HTML CSS JavaScript jQuery and AJAX and Used jQuery libraries for all clientside JavaScript manipulations Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Developed entire frontend and backend modules using Python on Django Web Framework and created User Interface UI using JavaScript bootstrap Cassandra with MySQL and HTML CSS Automated the existing scripts for performance calculations using datamining tools like Numpy SciPy Scikitlearn and SQL alchemy Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Utilized the frontend technologies including HTML CSS JavaScript to layout the frontend pages Used MongoDB to stored data in JSON format and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Experienced in implementing Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Worked on developing CRUD applications using MERN stack MongoDB Express ReactJS and NodeJS and REST based API Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviourdriven development BDD Developed PLSQL store procedures to convert the data from Oracle to MongoDB and automate report generation in MongoDB using JavaScript Shell Scripting Created services using Angular JS factory method and used Angular JS q and promise to handle asynchronous calls Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Worked on creating documents in Mongo database and Maintained the versions using GIT and sending the release notes for each release Python Developer Wells Fargo Minneapolis MN May 2011 to December 2013 Responsibilities Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed and performed unit testing using JUnit framework in a TestDriven environment TDD Creating MongoDB data set backups using systemlevel file snapshot tool such as LVM or native storage appliance tools Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Involved in developing web applications using Django Framework to implement the model view control architecture Worked on front end frame works like CSS Bootstrap for responsive webpages and Added dynamic functionality to the application by implementing jQuery and Angular JS Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Implemented and administered Data center Cassandra Clusters based on the knowledge of architecture and data modeling for Cassandra applications Model View Control architecture is implemented using Django Framework to develop web applications Developed Wrapper in Python for instantiating multithreaded application and Deploy and monitor scalable infrastructure on Amazon web services AWS Performed importing data from various sources to the Cassandra cluster using Python APIs Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve Experience in managing MongoDB environment from availability performance and scalability perspectives Datacentre migration to Amazon Web Services AWS infrastructure and provided initial support to Applications and Database teams Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Designed and managed API system deployment using fast http server and Amazon AWS architecture Education Bachelors Skills Python 7 years Matplotlib 5 years Django 7 years NodeJS 7 years AngularJS 7 years JQuery 7 years JSON 7 years NumPy 7 years SciPy 5 years Urlib 6 years Hibernate 7 years AWS 7 years Jenkins 7 years MAVEN 7 years Docker 7 years MongoDB 7 years Kafka 7 years JUnit 7 years",
    "unique_id": "44165cff-fcf4-488b-84a6-b85c50e34359"
}