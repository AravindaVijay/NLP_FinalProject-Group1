{
    "clean_data": "Python Full Stack Developer span lPythonspan Full Stack span lDeveloperspan Python Full Stack Developer Macys Cincinnati OH Over 7 years of professional Software Development work Experience with efficient application development and designing knowledge of Python and Django ability in development of webbased applications using Python proficient coder and experience in Design Development Implementation of Python Django Flask Pyramid and clientserver technologiesbased applications RESTful services AWS SQL SQLite etc Experienced in working with various stages of Software Development Life Cycle SDLC Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experience in working with web services SOAP REST with SOAPXML and JSON format messages Experience in building web services through SOAP and REST API Experience in MVC Model View Controller architecture using Hibernate Spring and Struts framework and various J2EE design patterns and UML methodologies Experienced in installation usage and management on AWS Amazon Web Services Jenkins and GIT for application Experience in working with Relational DB RDBMD like SQLite 3 MYSQL Workbench PostgreSQL and NoSQL database MongoDB for database connectivity Experience in using Beautiful Soup python package for parsing HTML and XML documents Experienced in WAMP Windows Apache MYSQL Python Sponsorship required to work in the US Work Experience Python Full Stack Developer Macys Cincinnati OH November 2017 to Present Responsibilities Built application logic using Python 34 Used Django APIs for database access Used the Model View Controller MVC framework to build modular and maintainable applications Developed AWS Lambda python functions using S3 triggers to automate the workflows and developed Python scripts to upload and download objects to and from AWS S3 buckets Responsible for setting up Python REST API framework and spring framework using Django and Integrated the pages with Angular JS and jquery to make the pages dynamic Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked in Reactjs framework to develop the SPA and working with React Flux and Redux architecture Installed and configured py Builder for application builds and deploying it and Developed Deployed SOAP based Web Services on Tomcat Server Integrated Jenkins with various DevOps tools such as Ansible and used CICD system of Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Developed user interface by using the React JS Flux for SPA development and implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet also implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications also designed and managed API system deployment using fast http server and Amazon AWS architecture Worked with CICD to deploy web application and run test build using Jenkins Bamboo and Docker Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Developed scripts using pandas to easily perform readwrite operations to CSV files manipulate and compare data by columns Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed Restful APIs using Python and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Worked on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQS and Jenkins CICD and worked on Jenkins continuous integration tool for deployment of project Developed Hibernate with Spring Integration as the data abstraction to interact with the database Developed Scala programs with Spark for data in Hadoop ecosystem Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Written Python scripts in order to scrape the data from the websites using Beautiful Soup Module and did ETL operations on it to load into the postgres DBMS Developed web applications in Django Frameworks model view control MVC architecture Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Used python Data structures like sqlite3 dictionaries and tuples Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Wrote Python routines to log into the websites and fetch data for selected options also used Python modules such as requests urllib urllib2 for web crawling Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Python scripts to totally automate AWS services which includes web servers ELB Cloud Front distribution database EC2 and database security groups S3 bucket and application configuration this script creates stacks single servers or joins web servers to stacks Developed applications using RESTFUL architecture using Nodejs and PHP as backend languages and Used Numpy for Numerical analysis Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs and built various graphs for business decisionmaking using Python matplotlib library Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Implementing REST APIs in Python using microframework like Django with SQL Alchemy in the backend for management of data center resources on which Open Stack would be deployed Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Wrote scripts in Python for extracting data from HTML file Python Developer Kroger Blue Ash OH July 2016 to October 2017 Responsibilities Involved in building database Model APIs and Views utilizing python in order to build an interactive webbased solution and used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers and used python based GUI components for the frontend functionality such as selection criteria Designed and maintained databases using Python and developed Python based API Restful Web Service using SQLAlchemy and PostgreSQL Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and the infrastructure to run these packages and various supporting software components such as Maven etc Used Amazon Web Services AWS for improved efficiency of storage and fast access and added support for Amazon AWS S3 and RDS to host static or media files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design and created Data tables utilizing PyQt to display customer and policy information and add delete update Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis and developed scripts to migrate data from proprietary database to PostgreSQL Involved in designing and deploying multitude applications utilizing almost all the AWS services Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Django configuration to manage URLs and application parameters and responsible for configuring NoSQL databases like Apache Cassandra and Mongo DB to for increasing compatibility with Django Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Managed large datasets using Panda data frames and SQL and wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Deployed the project into Heroku using GIT version control system and developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked on Angular JS to augment browser applications with MVC capability Python Developer TMobile Dallas TX October 2014 to June 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Worked in Test driven development with Behave in Python and created Behave scripts using Gherkin syntax Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database and designed Cassandra schema for the APIs Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python 361 and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Software Developer SunTrust Bank Atlanta GA August 2012 to September 2014 Responsibilities Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote and executed various MySQL database queries from Python using PythonMySQL connector and MySQL dB package Implemented user interface guidelines and standards throughout the development and maintenance of the website using the CSS HTML JavaScript and JQuery Responsible for creating welldesigned UI screens with Django templates using HTML5 CSS3 JavaScript Experience working with Issue tracking tools like Bugzilla and JIRA Created tables complex join queries stored procedures views Types triggers and functions and modifications to existing database structure as required for addition of new features using SQL developer Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed entire frontend and backend modules using Python on Django Web Framework and Utilize PyUnit the Python unit test framework for all Python applications Project was based on agile Iterations and standup meetings etc thus used practices of testdriven development SCRUM continuous integration refactoring and code standards Wrote custom queries through database connectors and worked with excel sheets and csv files Performed Test Driven Development TDD and Behavior Driven Development BDD for enterprise projects Education Bachelors Skills python react angular javascript redux AWS S3 EC2 Devops 7 years Angular React Node Javascript",
    "entities": [
        "CSS HTML JavaScript",
        "the React JS Flux for SPA development",
        "API Restful Web Service",
        "sqlite3",
        "GUI",
        "Nodejs",
        "SQLAlchemy",
        "the CSS HTML JavaScript",
        "Agile Software Methodology",
        "Python Wrote",
        "Interfacing",
        "Software Development Life Cycle SDLC Software Testing Life Cycle STLC",
        "Amazon Web Services AWS",
        "Panda",
        "Heroku",
        "Python Developer Kroger Blue Ash OH",
        "Design Development and Deployment Testing and Implementation",
        "Hadoop",
        "XML",
        "SOAP",
        "Atlanta",
        "a Single Page Application",
        "Present Responsibilities Built",
        "DevOps",
        "Shell",
        "Developed Restful Microservices",
        "Automated",
        "TX",
        "Wrote Python",
        "Python",
        "Developed Hibernate with Spring Integration",
        "Hibernate Spring",
        "Amazon AWS S3",
        "Developed",
        "Oracle Relational",
        "Jenkins",
        "AWS S3",
        "Developed Deployed",
        "Python Unit",
        "MultiThreading",
        "UML",
        "Git",
        "Test Driven DevelopmentTDD",
        "HTML5",
        "Performed Test Driven Development TDD",
        "Used Query and Ajax",
        "Chef and Puppet",
        "Developed Serverside",
        "Linux",
        "Developed Unit Integration",
        "Collaborated",
        "SQL Queries",
        "Amazon Cloud Software Developer SunTrust Bank",
        "Created a Handler",
        "RDS",
        "PySpark Developed",
        "Jenkins CICD",
        "Views",
        "SQLbased",
        "PyQt",
        "Angular JS",
        "MVC",
        "Spark",
        "Redux",
        "GIT",
        "Node JS",
        "Jenkins on Kubernetes",
        "CSV",
        "Iterations",
        "API",
        "Web Services",
        "REST API Experience",
        "US",
        "QA",
        "Types",
        "Beautiful Soup Module",
        "AWS",
        "Jenkins Docker Ansible",
        "WAMP Windows Apache",
        "Bash Designed",
        "Design Development Implementation of Python Django Flask Pyramid",
        "RESTFUL",
        "SQL",
        "GitHub",
        "React Flux",
        "Kubernetes",
        "Software Development",
        "Including EC2 Route53 S3",
        "CICD",
        "Amazon AWS",
        "NPM Node Package",
        "SQLite",
        "ETL",
        "Relational DB RDBMD",
        "SQS",
        "JQuery Responsible",
        "JQuery Created",
        "Developed AWS",
        "Maven",
        "Performed",
        "AWS Amazon Web Services Jenkins",
        "the Inquiry Tool",
        "Djangos",
        "JavaScript",
        "UI",
        "JIRA Created",
        "CSS",
        "AWS Stack",
        "Python Developer TMobile Dallas",
        "SPA",
        "Data",
        "Tomcat Server Integrated Jenkins",
        "PHP",
        "NoSQL",
        "Behavior Driven Development BDD",
        "AWS S3 EC2 Devops",
        "AWS Cloud Services",
        "EBS",
        "Asset Department",
        "Node"
    ],
    "experience": "Experience with efficient application development and designing knowledge of Python and Django ability in development of webbased applications using Python proficient coder and experience in Design Development Implementation of Python Django Flask Pyramid and clientserver technologiesbased applications RESTful services AWS SQL SQLite etc Experienced in working with various stages of Software Development Life Cycle SDLC Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experience in working with web services SOAP REST with SOAPXML and JSON format messages Experience in building web services through SOAP and REST API Experience in MVC Model View Controller architecture using Hibernate Spring and Struts framework and various J2EE design patterns and UML methodologies Experienced in installation usage and management on AWS Amazon Web Services Jenkins and GIT for application Experience in working with Relational DB RDBMD like SQLite 3 MYSQL Workbench PostgreSQL and NoSQL database MongoDB for database connectivity Experience in using Beautiful Soup python package for parsing HTML and XML documents Experienced in WAMP Windows Apache MYSQL Python Sponsorship required to work in the US Work Experience Python Full Stack Developer Macys Cincinnati OH November 2017 to Present Responsibilities Built application logic using Python 34 Used Django APIs for database access Used the Model View Controller MVC framework to build modular and maintainable applications Developed AWS Lambda python functions using S3 triggers to automate the workflows and developed Python scripts to upload and download objects to and from AWS S3 buckets Responsible for setting up Python REST API framework and spring framework using Django and Integrated the pages with Angular JS and jquery to make the pages dynamic Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked in Reactjs framework to develop the SPA and working with React Flux and Redux architecture Installed and configured py Builder for application builds and deploying it and Developed Deployed SOAP based Web Services on Tomcat Server Integrated Jenkins with various DevOps tools such as Ansible and used CICD system of Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Developed user interface by using the React JS Flux for SPA development and implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet also implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications also designed and managed API system deployment using fast http server and Amazon AWS architecture Worked with CICD to deploy web application and run test build using Jenkins Bamboo and Docker Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Developed scripts using pandas to easily perform readwrite operations to CSV files manipulate and compare data by columns Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed Restful APIs using Python and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Worked on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQS and Jenkins CICD and worked on Jenkins continuous integration tool for deployment of project Developed Hibernate with Spring Integration as the data abstraction to interact with the database Developed Scala programs with Spark for data in Hadoop ecosystem Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Written Python scripts in order to scrape the data from the websites using Beautiful Soup Module and did ETL operations on it to load into the postgres DBMS Developed web applications in Django Frameworks model view control MVC architecture Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Used python Data structures like sqlite3 dictionaries and tuples Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Wrote Python routines to log into the websites and fetch data for selected options also used Python modules such as requests urllib urllib2 for web crawling Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Python scripts to totally automate AWS services which includes web servers ELB Cloud Front distribution database EC2 and database security groups S3 bucket and application configuration this script creates stacks single servers or joins web servers to stacks Developed applications using RESTFUL architecture using Nodejs and PHP as backend languages and Used Numpy for Numerical analysis Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs and built various graphs for business decisionmaking using Python matplotlib library Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Implementing REST APIs in Python using microframework like Django with SQL Alchemy in the backend for management of data center resources on which Open Stack would be deployed Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Wrote scripts in Python for extracting data from HTML file Python Developer Kroger Blue Ash OH July 2016 to October 2017 Responsibilities Involved in building database Model APIs and Views utilizing python in order to build an interactive webbased solution and used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers and used python based GUI components for the frontend functionality such as selection criteria Designed and maintained databases using Python and developed Python based API Restful Web Service using SQLAlchemy and PostgreSQL Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and the infrastructure to run these packages and various supporting software components such as Maven etc Used Amazon Web Services AWS for improved efficiency of storage and fast access and added support for Amazon AWS S3 and RDS to host static or media files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design and created Data tables utilizing PyQt to display customer and policy information and add delete update Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis and developed scripts to migrate data from proprietary database to PostgreSQL Involved in designing and deploying multitude applications utilizing almost all the AWS services Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Django configuration to manage URLs and application parameters and responsible for configuring NoSQL databases like Apache Cassandra and Mongo DB to for increasing compatibility with Django Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Managed large datasets using Panda data frames and SQL and wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Deployed the project into Heroku using GIT version control system and developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked on Angular JS to augment browser applications with MVC capability Python Developer TMobile Dallas TX October 2014 to June 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Worked in Test driven development with Behave in Python and created Behave scripts using Gherkin syntax Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database and designed Cassandra schema for the APIs Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python 361 and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Software Developer SunTrust Bank Atlanta GA August 2012 to September 2014 Responsibilities Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote and executed various MySQL database queries from Python using PythonMySQL connector and MySQL dB package Implemented user interface guidelines and standards throughout the development and maintenance of the website using the CSS HTML JavaScript and JQuery Responsible for creating welldesigned UI screens with Django templates using HTML5 CSS3 JavaScript Experience working with Issue tracking tools like Bugzilla and JIRA Created tables complex join queries stored procedures views Types triggers and functions and modifications to existing database structure as required for addition of new features using SQL developer Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed entire frontend and backend modules using Python on Django Web Framework and Utilize PyUnit the Python unit test framework for all Python applications Project was based on agile Iterations and standup meetings etc thus used practices of testdriven development SCRUM continuous integration refactoring and code standards Wrote custom queries through database connectors and worked with excel sheets and csv files Performed Test Driven Development TDD and Behavior Driven Development BDD for enterprise projects Education Bachelors Skills python react angular javascript redux AWS S3 EC2 Devops 7 years Angular React Node Javascript",
    "extracted_keywords": [
        "Python",
        "Stack",
        "Developer",
        "lPythonspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Python",
        "Stack",
        "Developer",
        "Macys",
        "Cincinnati",
        "OH",
        "years",
        "Software",
        "Development",
        "work",
        "Experience",
        "application",
        "development",
        "knowledge",
        "Python",
        "Django",
        "ability",
        "development",
        "applications",
        "Python",
        "coder",
        "experience",
        "Design",
        "Development",
        "Implementation",
        "Python",
        "Django",
        "Flask",
        "Pyramid",
        "clientserver",
        "applications",
        "services",
        "AWS",
        "SQL",
        "SQLite",
        "stages",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "Experience",
        "web",
        "services",
        "SOAP",
        "REST",
        "SOAPXML",
        "format",
        "messages",
        "Experience",
        "building",
        "web",
        "services",
        "SOAP",
        "REST",
        "API",
        "Experience",
        "MVC",
        "Model",
        "View",
        "Controller",
        "architecture",
        "Hibernate",
        "Spring",
        "Struts",
        "framework",
        "J2EE",
        "design",
        "patterns",
        "UML",
        "methodologies",
        "installation",
        "usage",
        "management",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "Jenkins",
        "GIT",
        "application",
        "Experience",
        "Relational",
        "DB",
        "RDBMD",
        "MYSQL",
        "Workbench",
        "PostgreSQL",
        "NoSQL",
        "database",
        "MongoDB",
        "database",
        "connectivity",
        "Experience",
        "Beautiful",
        "Soup",
        "python",
        "package",
        "HTML",
        "XML",
        "documents",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "Sponsorship",
        "US",
        "Work",
        "Experience",
        "Python",
        "Stack",
        "Developer",
        "Macys",
        "Cincinnati",
        "OH",
        "November",
        "Present",
        "Responsibilities",
        "application",
        "logic",
        "Python",
        "Django",
        "APIs",
        "database",
        "access",
        "Model",
        "View",
        "Controller",
        "MVC",
        "framework",
        "applications",
        "AWS",
        "Lambda",
        "python",
        "functions",
        "S3",
        "workflows",
        "Python",
        "scripts",
        "download",
        "AWS",
        "S3",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "framework",
        "Django",
        "Integrated",
        "pages",
        "JS",
        "jquery",
        "pages",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Reactjs",
        "framework",
        "SPA",
        "React",
        "Flux",
        "Redux",
        "architecture",
        "py",
        "Builder",
        "application",
        "builds",
        "Developed",
        "Deployed",
        "SOAP",
        "Web",
        "Services",
        "Tomcat",
        "Server",
        "Integrated",
        "Jenkins",
        "DevOps",
        "tools",
        "Ansible",
        "CICD",
        "system",
        "Jenkins",
        "Kubernetes",
        "container",
        "environment",
        "Kubernetes",
        "Docker",
        "runtime",
        "environment",
        "CICD",
        "system",
        "user",
        "interface",
        "React",
        "JS",
        "Flux",
        "SPA",
        "development",
        "screens",
        "end",
        "Reactjs",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "redux",
        "library",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Puppet",
        "AWS",
        "servers",
        "roles",
        "deployment",
        "web",
        "applications",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "CICD",
        "web",
        "application",
        "test",
        "build",
        "Jenkins",
        "Bamboo",
        "Docker",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Developed",
        "Serverside",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "scripts",
        "pandas",
        "operations",
        "CSV",
        "files",
        "manipulate",
        "data",
        "columns",
        "Handler",
        "function",
        "Python",
        "AWS",
        "Lambda",
        "service",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "APIs",
        "Python",
        "SQLAlchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "AWS",
        "services",
        "S3",
        "EC2",
        "deployment",
        "services",
        "Lambda",
        "RDS",
        "DynamoDB",
        "NoSQL",
        "Beanstalk",
        "SQS",
        "Jenkins",
        "CICD",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "Hibernate",
        "Spring",
        "Integration",
        "data",
        "abstraction",
        "database",
        "Developed",
        "Scala",
        "programs",
        "Spark",
        "data",
        "Hadoop",
        "ecosystem",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Written",
        "Python",
        "scripts",
        "order",
        "data",
        "websites",
        "Beautiful",
        "Soup",
        "Module",
        "ETL",
        "operations",
        "postgres",
        "DBMS",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "python",
        "Data",
        "structures",
        "dictionaries",
        "tuples",
        "Restful",
        "Microservices",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "Python",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Automated",
        "integration",
        "deployments",
        "Jenkins",
        "Docker",
        "Ansible",
        "AWS",
        "Cloud",
        "Templates",
        "Python",
        "scripts",
        "AWS",
        "services",
        "web",
        "servers",
        "ELB",
        "Cloud",
        "Front",
        "distribution",
        "database",
        "EC2",
        "database",
        "security",
        "groups",
        "S3",
        "bucket",
        "application",
        "configuration",
        "script",
        "servers",
        "web",
        "servers",
        "applications",
        "RESTFUL",
        "architecture",
        "Nodejs",
        "PHP",
        "languages",
        "Numpy",
        "Numerical",
        "analysis",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "graphs",
        "business",
        "Python",
        "matplotlib",
        "library",
        "AWS",
        "Cloud",
        "Services",
        "infrastructure",
        "AWS",
        "Stack",
        "database",
        "setup",
        "maintenance",
        "AWS",
        "EC2",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Django",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "Open",
        "Stack",
        "Hadoop",
        "log",
        "file",
        "SQL",
        "scripts",
        "solution",
        "process",
        "PySpark",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Python",
        "GUI",
        "application",
        "testing",
        "framework",
        "commandline",
        "tests",
        "Linux",
        "Objected",
        "Oriented",
        "Perl",
        "tests",
        "Python",
        "Wrote",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Python",
        "Developer",
        "Kroger",
        "Blue",
        "Ash",
        "OH",
        "July",
        "October",
        "Responsibilities",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "order",
        "solution",
        "Django",
        "Database",
        "APIs",
        "database",
        "Query",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "databases",
        "Python",
        "Python",
        "API",
        "Restful",
        "Web",
        "Service",
        "SQLAlchemy",
        "PostgreSQL",
        "AngularJS",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "data",
        "views",
        "data",
        "server",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "media",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "Python",
        "scripts",
        "vulnerabilities",
        "SQL",
        "Queries",
        "SQL",
        "injection",
        "permission",
        "checks",
        "performance",
        "analysis",
        "scripts",
        "data",
        "database",
        "PostgreSQL",
        "multitude",
        "applications",
        "AWS",
        "services",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Dynamo",
        "DB",
        "SNS",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Formation",
        "Automated",
        "Regular",
        "AWS",
        "tasks",
        "snapshots",
        "creation",
        "Python",
        "scripts",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "NoSQL",
        "databases",
        "Apache",
        "Cassandra",
        "Mongo",
        "DB",
        "compatibility",
        "Django",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "CSS",
        "framework",
        "Bootstrap",
        "appearance",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "database",
        "calls",
        "inserts",
        "updates",
        "Developed",
        "Unit",
        "Integration",
        "Performance",
        "Test",
        "Cases",
        "Junit",
        "Selenium",
        "Rational",
        "Function",
        "Tester",
        "datasets",
        "Panda",
        "data",
        "frames",
        "SQL",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "JS",
        "browser",
        "applications",
        "MVC",
        "capability",
        "Python",
        "Developer",
        "TMobile",
        "Dallas",
        "TX",
        "October",
        "June",
        "Responsibilities",
        "Python",
        "Django",
        "data",
        "Login",
        "module",
        "page",
        "users",
        "email",
        "marketing",
        "campaigns",
        "forms",
        "data",
        "database",
        "Django",
        "Framework",
        "Worked",
        "Test",
        "development",
        "Behave",
        "Python",
        "Behave",
        "scripts",
        "Gherkin",
        "syntax",
        "collections",
        "Python",
        "objects",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "delivery",
        "code",
        "principles",
        "Test",
        "DevelopmentTDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "login",
        "module",
        "user",
        "registration",
        "products",
        "order",
        "order",
        "performance",
        "data",
        "functions",
        "cursors",
        "triggers",
        "procedures",
        "MySQL",
        "database",
        "Cassandra",
        "schema",
        "APIs",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Web",
        "application",
        "Code",
        "review",
        "GitHub",
        "testing",
        "fixing",
        "bugs",
        "modifications",
        "research",
        "platforms",
        "API",
        "module",
        "help",
        "pyYAML",
        "performance",
        "approach",
        "methods",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "Performed",
        "data",
        "manipulationstorage",
        "test",
        "data",
        "lxml",
        "etree",
        "libraries",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "solutions",
        "Inquiry",
        "Tool",
        "Asset",
        "Department",
        "reporting",
        "features",
        "bugs",
        "views",
        "templates",
        "python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Software",
        "Developer",
        "SunTrust",
        "Bank",
        "Atlanta",
        "GA",
        "August",
        "September",
        "Responsibilities",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Wrote",
        "MySQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Responsible",
        "UI",
        "screens",
        "Django",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Experience",
        "Issue",
        "tracking",
        "tools",
        "Bugzilla",
        "JIRA",
        "Created",
        "tables",
        "join",
        "queries",
        "procedures",
        "Types",
        "triggers",
        "functions",
        "modifications",
        "database",
        "structure",
        "addition",
        "features",
        "SQL",
        "developer",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Utilize",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Project",
        "Iterations",
        "meetings",
        "practices",
        "testdriven",
        "development",
        "integration",
        "refactoring",
        "code",
        "standards",
        "Wrote",
        "custom",
        "database",
        "connectors",
        "sheets",
        "files",
        "Performed",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "enterprise",
        "projects",
        "Education",
        "Bachelors",
        "Skills",
        "javascript",
        "redux",
        "AWS",
        "S3",
        "EC2",
        "Devops",
        "years",
        "Angular",
        "React",
        "Node",
        "Javascript"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:27:08.679914",
    "resume_data": "Python Full Stack Developer span lPythonspan Full Stack span lDeveloperspan Python Full Stack Developer Macys Cincinnati OH Over 7 years of professional Software Development work Experience with efficient application development and designing knowledge of Python and Django ability in development of webbased applications using Python proficient coder and experience in Design Development Implementation of Python Django Flask Pyramid and clientserver technologiesbased applications RESTful services AWS SQL SQLite etc Experienced in working with various stages of Software Development Life Cycle SDLC Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experience in working with web services SOAP REST with SOAPXML and JSON format messages Experience in building web services through SOAP and REST API Experience in MVC Model View Controller architecture using Hibernate Spring and Struts framework and various J2EE design patterns and UML methodologies Experienced in installation usage and management on AWS Amazon Web Services Jenkins and GIT for application Experience in working with Relational DB RDBMD like SQLite 3 MYSQL Workbench PostgreSQL and NoSQL database MongoDB for database connectivity Experience in using Beautiful Soup python package for parsing HTML and XML documents Experienced in WAMP Windows Apache MYSQL Python Sponsorship required to work in the US Work Experience Python Full Stack Developer Macys Cincinnati OH November 2017 to Present Responsibilities Built application logic using Python 34 Used Django APIs for database access Used the Model View Controller MVC framework to build modular and maintainable applications Developed AWS Lambda python functions using S3 triggers to automate the workflows and developed Python scripts to upload and download objects to and from AWS S3 buckets Responsible for setting up Python REST API framework and spring framework using Django and Integrated the pages with Angular JS and jquery to make the pages dynamic Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked in Reactjs framework to develop the SPA and working with React Flux and Redux architecture Installed and configured py Builder for application builds and deploying it and Developed Deployed SOAP based Web Services on Tomcat Server Integrated Jenkins with various DevOps tools such as Ansible and used CICD system of Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Developed user interface by using the React JS Flux for SPA development and implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet also implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications also designed and managed API system deployment using fast http server and Amazon AWS architecture Worked with CICD to deploy web application and run test build using Jenkins Bamboo and Docker Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Developed scripts using pandas to easily perform readwrite operations to CSV files manipulate and compare data by columns Created a Handler function in Python using AWS Lambda that can invoke when the service is executed Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Developed Restful APIs using Python and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Worked on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQS and Jenkins CICD and worked on Jenkins continuous integration tool for deployment of project Developed Hibernate with Spring Integration as the data abstraction to interact with the database Developed Scala programs with Spark for data in Hadoop ecosystem Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Written Python scripts in order to scrape the data from the websites using Beautiful Soup Module and did ETL operations on it to load into the postgres DBMS Developed web applications in Django Frameworks model view control MVC architecture Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Used python Data structures like sqlite3 dictionaries and tuples Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Wrote Python routines to log into the websites and fetch data for selected options also used Python modules such as requests urllib urllib2 for web crawling Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Python scripts to totally automate AWS services which includes web servers ELB Cloud Front distribution database EC2 and database security groups S3 bucket and application configuration this script creates stacks single servers or joins web servers to stacks Developed applications using RESTFUL architecture using Nodejs and PHP as backend languages and Used Numpy for Numerical analysis Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs and built various graphs for business decisionmaking using Python matplotlib library Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Implementing REST APIs in Python using microframework like Django with SQL Alchemy in the backend for management of data center resources on which Open Stack would be deployed Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using PySpark Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Wrote scripts in Python for extracting data from HTML file Python Developer Kroger Blue Ash OH July 2016 to October 2017 Responsibilities Involved in building database Model APIs and Views utilizing python in order to build an interactive webbased solution and used Django Database APIs to access database objects Used Query and Ajax calls for transmitting JSON data objects between frontend and controllers and used python based GUI components for the frontend functionality such as selection criteria Designed and maintained databases using Python and developed Python based API Restful Web Service using SQLAlchemy and PostgreSQL Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and the infrastructure to run these packages and various supporting software components such as Maven etc Used Amazon Web Services AWS for improved efficiency of storage and fast access and added support for Amazon AWS S3 and RDS to host static or media files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design and created Data tables utilizing PyQt to display customer and policy information and add delete update Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis and developed scripts to migrate data from proprietary database to PostgreSQL Involved in designing and deploying multitude applications utilizing almost all the AWS services Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used Django configuration to manage URLs and application parameters and responsible for configuring NoSQL databases like Apache Cassandra and Mongo DB to for increasing compatibility with Django Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery and implemented CSS framework Bootstrap for better appearance and feel Developed remote integration with third party platforms by using RESTful web services that make database calls for inserts updates and select queries Developed Unit Integration and Performance Test Cases using Junit Selenium and Rational Function Tester Managed large datasets using Panda data frames and SQL and wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL dB package Deployed the project into Heroku using GIT version control system and developed methods for Create Read Update and Delete CRUD in Active Record Used Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked on Angular JS to augment browser applications with MVC capability Python Developer TMobile Dallas TX October 2014 to June 2016 Responsibilities Developed Python Django forms to record data and the Login module page for users Designed email marketing campaigns and created interactive forms that saved data into database using Django Framework Worked in Test driven development with Behave in Python and created Behave scripts using Gherkin syntax Used collections in Python for manipulating and looping through different your defined objects Wrote Python routines to log into the websites and fetch data for selected options Performed efficient delivery of code based on principles of Test Driven DevelopmentTDD and continuous integration to keep in line with Agile Software Methodology principles Implemented a login module for user registration of the products placing the order and tracking the order Improving the performance while processing data by modifying functions queries cursors triggers and stored procedures for MySQL database and designed Cassandra schema for the APIs Worked on Unit testing Integration testing and Web application testing Code review using GitHub testing fixing of the bugs and coding modifications Performed research to explore and identify new technological platforms Developed API modularizing existing python module with the help of pyYAML libraries Improved performance by using more modularized approach and using more in built methods Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Performed data manipulationstorage for incoming test data using lxml etree libraries Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed views and templates with python 361 and Djangos view controller and templating language to create a userfriendly website interface Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Software Developer SunTrust Bank Atlanta GA August 2012 to September 2014 Responsibilities Involved in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote and executed various MySQL database queries from Python using PythonMySQL connector and MySQL dB package Implemented user interface guidelines and standards throughout the development and maintenance of the website using the CSS HTML JavaScript and JQuery Responsible for creating welldesigned UI screens with Django templates using HTML5 CSS3 JavaScript Experience working with Issue tracking tools like Bugzilla and JIRA Created tables complex join queries stored procedures views Types triggers and functions and modifications to existing database structure as required for addition of new features using SQL developer Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed entire frontend and backend modules using Python on Django Web Framework and Utilize PyUnit the Python unit test framework for all Python applications Project was based on agile Iterations and standup meetings etc thus used practices of testdriven development SCRUM continuous integration refactoring and code standards Wrote custom queries through database connectors and worked with excel sheets and csv files Performed Test Driven Development TDD and Behavior Driven Development BDD for enterprise projects Education Bachelors Skills python react angular javascript redux AWS S3 EC2 Devops 7 years Angular React Node Javascript",
    "unique_id": "9b92ddf1-6a50-4e05-beb6-79b76d32b687"
}