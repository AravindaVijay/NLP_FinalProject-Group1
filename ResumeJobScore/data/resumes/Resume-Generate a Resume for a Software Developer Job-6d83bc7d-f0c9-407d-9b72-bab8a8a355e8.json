{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Discovery Communications Herndon VA Work Experience Python Developer Discovery Communications Silver Spring MD January 2018 to Present Project Description Discovery Inc is an American mass media company that primarily operates factual television networks The project of Angry Planner is a stop gap solution for the DCI Operations and Logistics teams It replaces the existing excel based tools that they use today to track finding sources encoding quality checks and delivery of packages It is stop gap since the plan is to move the DCI scheduling logistics and operations teams to the Scripps formally tool NLCD Responsibilities Designed and developed the web application using Django web framework in python36 Used Agile methodology for the Software development process Used Okta module to implement authentication Used GitHub and Bitbucket as Source Control Management Designed the data model for the application Developed the UI of the application using Django Admin Jinja2 HTML CSS and JavaScript Developed data importing utility from AWS S3 into the application Implement Log Entries to the models Deployed the app as a docker service Implemented Continuous Integration and Continuous Delivery using Jenkins GitHub and Docker Implemented xmlgen which generates xml files based on a given template Developed custom managepy commands for utilities used by operations team Developed custom filters in ModelAdmin worked on creating custom actions in the List View Created custom forms and buttons in the Change View Implemented daemon services using multi process module Implemented ImportExport feature to the module Responsible for release management Implemented central logging for entire application using logger module Developed custom forms used by operations and logistics team for updating the airing information Used PostgreSQL as database deployed on remote node deployed as docker service Used Pandas Requests Boto3 botocore csvkit untangle djangoauditlog shutil logging and other libraries in python Environment Python Django Docker GitHub Xml Jenkins Sqlite3 PostgreSQL gunicorn Jinja2 HTML CSS JavaScript Agile Linux Python Developer Fannie Mae Washington DC April 2017 to December 2017 Project Description Fannie Mae is a United States governmentsponsored enterprise GSE and a publicly traded company The project of Single Family Forecast Framework SF3 is a web based interface for controlling the work flow of forecast model runs and revenueexpense forecast processes Insight Dashboard Execution Automation IDEA is a java based web application designed for web browser Responsibilities Analysis of the requirement specifications and designing of modules Involved in application development by coordinating requirements schedules and team meetings troubleshooting Driven best practices quality and consistency in project development Worked extensively on build and deployment tools Maven and version control Tortoise SVN Involved in the code merging reviews and impact analysis of functionality Used Agile methodology and Kanban for the Software development process Experienced in UNIX command line scripting Used Python to write the code of the application in Eclipse Mars Worked on Aginity Workbench for IBM Netezza to manage the data warehouse more efficiently for data analytics Extensively developed stored procedures triggers functions and packages in Oracle Loading analyzing and extracting data to and from Oracle database with Python Parsing various format of files like XML files and load into Oracle database with Python XML Performed advanced querying using SAS Enterprise Guide calculating computed columns using filter manipulate and prepare data for Reporting Graphing and Summarization statistical analysis finally generating SAS datasets Used WinSCP for secure file transfer between a local and remote computer Indepth understanding of large complex software systems to isolate defects reproduce defects assess risk and understand varied customer deployment Assess and develop elevated level design requirements for project and communicate in writing or in meetings with team Assess detailed specifications against design requirements Review coding done to advance application upgrade extension or other development Analyze applications for data integrity issues Use Fannie Maes models for the calculation of expected cashflows Review and validate valuation inputs and results Prepare reports used for management and financial reporting Used advanced mathematical and analytical tools to create algorithms that is used for analytical and product development processes Facilitated testing and validating the implementation of models used in singlefamily loss allowance for modified loans Responsible for assisting in the business review of the loss allowance valuations including the comparison of valuation results to expected results and to current market and business conditions Perform loss forecast analysis and reporting perform ongoing ad hoc model development and analysis for specific clients needing elevated level quantitative analysis of credit risk product valuation asset analysis and the like Conduct loan level reviews of the singlefamily book to ensure accuracy of risk ratings Environment Python 27 Aginity Workbench Oracle Eclipse Mars Unix SAS Enterprise Guide Tortoise SVN WinSCP Python Developer Cerner April 2015 to March 2017 Project Description Cerner Corporation is an American supplier of health information technology HIT solutions services devices and hardware The projects main aim is to design leadingedge health information technology and offer strategies that empower organizations to know manage and engage their populations We developed an application to store the details of the customers accounts and health insurance policies Responsibilities Worked on the project from gathering requirements to developing the entire application Wrote programs for performance calculations using NumPy and SQLAlchemy Wrote python routines to log into the websites and fetch data for selected options Used python modules of urllib urllib2 Requests for web crawling Used with other packages such as Beautiful Soup for data parsing Developed the REST API using Django for fetching the data from NoSQL MongoDB database Implemented the client code for consuming the REST Web Services Developed single page web application using AngularJS HTML5 CSS3 Bootstrap jQuery for interactive crossbrowser functionality Used Angular JS framework for single page applications and validating the clientside user information based on their business rules Responsible for debugging testing maintaining and deploying the application Worked on Python OpenStack APIs Designed and developed the UI of the website using HTML XHTML CSS AJAX and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various RDBMS MYSQL database queries from Python using PythonMySQL connector and  package Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Worked on development of SQL and stored procedures on MYSQL Designed the database schema for the content management system Involved in the development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used PHP to write dynamically generated pages quickly Experienced Python on LINUX for execution Wrote Python routines to log into the websites and fetch data for selected options Performed testing using Djangos Test Module Web pages on the internet are generated by LINUX servers ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Responsible for debugging and troubleshooting the web application I have used the Pandas API to put the data in tabular format for each timestamp data manipulation and retrieval Successfully migrated all the data to the database while the site was in production Developed automated unit and regression testing frameworks for a highly efficient quality assurance system Wrote bash scripts to deploy application using Shell Scripting Performed troubleshooting fixed and deployed many Python bug fixes of the main applications that were sources of data for both customers and internal customer service team Used Ansible for automating cloud deployment process Used Ansible to automate workflow With Ansible creating roles and updating playbooks to provision servers Helped provision and manage AWS linux servers with Chef and Ansible Design and build a text classification application using different text classification models Used Jira for defect tracking and project management Worked on writing and as well as read data from CSV and excel file formats Involved in Sprint planning sessions and participated in the daily Agile SCRUM meetings Conducted every day scrum as part of the SCRUM Master role Worked on resulting reports of the application Performed QA testing on the application Held meetings with client and worked for the entire project with limited help from the client Environment Python Django JSON HTML CSS AJAX jQuery XML AngularJS SOAP Jira Ansible Agile SQL MYSQL and Windows Python Developer Harman Novi MI July 2013 to March 2015 Project Description Harman International Industries simply called as Harman is an American company that designs and engineers connected products for automakers consumers and enterprises worldwide including connected car systems audio and visual products enterprise automation and connected services The main goal of the project is to suggest the audio devices to the customers We developed a recommendation engine for suggestions Responsibilities Design database using PythonDjango for DB scheme scripting Designing and developing various machine learning frameworks using Python R and MATLAB Develop scheme and datalevel database testing tool Improved fraud prediction performance by using random forest and gradient boosting for feature selection with Python Scikitlearn Develop data cleansing retrieval migration tools ETL Analyzed client needs and developed software tools to assist dynamic site content creation Python wxPython Experience building solutions for enterprises contextawareness pervasive computing andor application of machine learning Identifying and solving issues caused by plugins or feeds under Python MYSQL HTML CSS JavaScript and jQuery Technology High end of experience in documentation of code and automate the processes at each step along the pipeline SQL Workflow System using Python created an adapter allowing communication between SharePoint lists and SSIS packages This system provides users the ability to create complex automation workflows Clustering data and representational analysis clustering PCA autoencoders via ScikitLearn and Tensor flow Excel Batch uploader software that quickly uploads large batches of Excel Workbooks into our SQL Databases while providing sanitizing and validation services SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Client Search Engine Using Python and XLWings package created an excel interface to search for client info through our databases Used Agile Methodology and SCRUM Process Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Hands on working with Python Git Deployed production site using Apache 20 with mod_ python Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Worked extensively with Bootstrap Java script and jQuery to optimize the user experience Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Built development environment with JIRA Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Environment Python Django R MATLAB MYSQL REST API HTML CSS JavaScript jQuery SQL Agile Scrum Git AWS Jira MongoDB Python Developer Globant Orlando FL November 2012 to June 2013 Project Description Globant is an IT and Software Development company which develops websites and applications The Projects main aim is to develop an application for shopping the products in online Responsibilities Designed and Developed feature in Python frameworks to automate File System and database Performance High Availability tests for scaleout converged appliance solutions decreasing the manual process Develop automation framework to monitor systems Good Experienced in developing webbased applications using Python Django XML CSS HTML Perform continuous research to automate the Software Development Life Cycle of appliances on storage and networking side for performance metrics Experience in ObjectOriented design and coding Good knowledge of various Design Patterns and UML Expert in maintaining technical documentation for projects Automated Running functional performance destructive and HA test cases on servers and database to achieve Push system configuration using python to various development and test servers via PuppetAnsible Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Application was based on service oriented architecture and used Python Django JSF Spring Ajax HTML CSS for the frontend Experience with Data migration from Sqlite3 to Apache Cassandra database Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated Rabbit MQ cluster installations and configuration using PythonBash Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked extensively with Bootstrap Cassandra with MySQL Java script and JQuery to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decisionmaking using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python REST API XML SQL Python Storage Libraries GIT Linux systems HTML CSS JavaScript jQuery Puppet Ansible Cassandra Python Developer Comcast Philadelphia PA October 2010 to October 2012 Project Description Comcast is an American global telecommunications conglomerate that is the largest broadcasting and cable television company in the world by revenue The projects main aim to develop a recommendation engine for suggesting the videos internet packages subscriptions based on the customer preferences Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango Worked with millions of databases records on daily basis finding common errors and bad data patterns and fixing them Managed large datasets using Panda data frames and Cassandra Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Worked in development of applications especially in LINUX environment and familiar with all its commands Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Responsible for debugging the project monitored on JIRA Agile Added unit tests and improved existing ones and Created project designs utilizing MVC architecture components Designed RESTful XML web service for handling AJAX requests Updated views and templates with Python and Djangos view controller and templating language to create new functionalities to the website Created RESTful APIs calls with server parse output JSON data and perform field by field comparison in database Created Python libraries that allow the transfer of data from SQL Database to Oracle Database Used Djangos ORM objectrelational Mapper to automate the transfer of data stored in database tables into objects that are more commonly used in application code Successfully migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Used Django configuration to manage URLs and application parameters Implemented and enhanced CRUD operations for the applications using the MVC architecture of Django framework and conducted code reviews Developed scripts using pandas to easily perform readwrite operations to CSV files manipulate and compare data by columns Automated different workflows which are initiated manually with Python scripts and Linux bash scripting Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Involved in front end and utilized Bootstrap and Angularjs for page design Created Business Logic using Python to create Planning and Tracking functions Developed multithreaded standalone app in Python and PHP to view performance Involved in writing stored procedures using MySQL Environment Python Django Jenkins Linux AWS Agile Scrum HTML CSS JavaScript jQuery Ajax REST API Cassandra JSON SOAP services MYSQL Java Developer CGS Hyderabad Telangana January 2010 to September 2010 Project Description CGS is a IT Consulting and Staffing Company with a vision of creating a competitive advantage with Software and becoming the most valued partner of the clients This project is for colleges to digitalize their tuition collection process This web application is used for their entire college student population in collecting and maintain database for their tuition Responsibilities Identified the requirements and designed the use cases for the application Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Developed Web application using Struts and Hibernate Integrated frontend elements using JSP Html5 Bootstrap jQuery Developed SOAP based Web Services and components of web services JAXWS using different JAXWS standards on the WSDL type message port Type bindings and service Used Spring Framework for dependency injection for Action classes using the Application ContextXml file Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Managed the interchange of data between the server and the client Designed the application architecture and implemented using MySQL database Optimized the database queries to improve the performance Developed all serverside logic ensuring high performance and responsiveness to requests from the frontend Wrote Junit test cases for each controller methodology and ensured maximum code coverage Build the application rar using ANT build tool and deployed in apache tomcat server Operated Agile Methodology in implementing the application Used SVN for source control and Jira for defect tracking system Update clients with weekly status reports Involved in deployment of the applications in various environments Environment Struts Hibernate JavaJ2EE JSP HTML5 CSS3 jQuery MySQL SVN Junit ANT Agile Education Bachelors in Information Technology in Information Technology Acharya Nagarjuna University 2009 Skills DJANGO 7 years HTML 7 years JAVASCRIPT 7 years PYTHON 8 years XML 8 years mysql Additional Information Technical Skills Languages Python 3527 Core Java J2EE JSP Servlets Frameworks Django Pyramid Flask Struts Hibernate Spring Databases MySQL Oracle PostgreSQL SQL MongoDB PLSQL Web Technologies AJAX Django Angular JS Nodejs JSON JavaScript jQuery PHP HTML XML CSS XSLT Bootstrap Web Services SOAP RESTful ApplicationWeb servers Apache Tomcat Web Sphere IDESTools PyCharm Sublime Text Spyder Emacs NetBeans Eclipse Visual Studio Xcode Cloud Platforms Azure Amazon web services Operating Systems Linux Unix Windows 10 08 07 XP Vista Python Libraries Beautiful Soup NumPy SciPy Matplotlib Pythontwitter Pandas data frame network urllib2  Version Control Systems CVS SVN Git GitHub SDLC Agile methodologies scrum framework",
    "entities": [
        "Oracle Loading",
        "Stored Procedures Tables Views Sequences Cursors Packages and Triggers",
        "AJAX",
        "ExportedImported",
        "XLWings",
        "GUI",
        "Implemented Continuous Integration",
        "Nagarjuna University 2009 Skills",
        "urllib2",
        "HTML AJAX CSS",
        "SQL Naming Conventions Enforcement Using Python Stored Procedures",
        "the Pandas API",
        "python36 Used Agile",
        "UNIX",
        "SQL Server Management Studio Maintained",
        "SQL Database",
        "Driven",
        "Python Scikitlearn Develop",
        "Beautiful Soup",
        "IBM",
        "Mapper",
        "Amazon Web Services AWS",
        "Panda",
        "Fannie Mae",
        "Indepth",
        "Django Admin Jinja2",
        "XML",
        "SOAP",
        "JavaScript Implemented",
        "PuppetAnsible Created Python",
        "JAXWS",
        "ETL Analyzed",
        "DCI",
        "File System",
        "Amazon",
        "Bootstrap Web Services SOAP",
        "Djangos Test Module",
        "SQL Databases",
        "SSIS",
        "Assess",
        "jQuery Technology",
        "Created RESTful",
        "Python",
        "Bugzilla Planning",
        "Project Description Cerner Corporation",
        "Developed",
        "Present Project Description Discovery Inc",
        "Jenkins",
        "Bash",
        "AWS S3",
        "Windows Python Developer Harman Novi",
        "Created Python",
        "Kanban",
        "Chef and Ansible Design",
        "Automated Rabbit MQ",
        "Reporting Graphing and Summarization",
        "ScikitLearn",
        "Review",
        "Responsibilities Analysis",
        "Linux",
        "JSP",
        "Update",
        "the Software Development Life Cycle",
        "JIRA Agile Added",
        "ObjectOriented",
        "Washington DC",
        "Used Spring Framework",
        "Python Developer Discovery Communications",
        "Views",
        "Used Django",
        "Python Parsing",
        "Information Technology in Information Technology",
        "MVC",
        "PythonDjango",
        "Agile",
        "Projects",
        "GIT",
        "a IT Consulting and Staffing Company",
        "CSV",
        "Web Services",
        "Perform",
        "Project Description Comcast",
        "ModelAdmin",
        "Automated Running",
        "LINUX",
        "Python Django JSF Spring Ajax HTML CSS",
        "Created",
        "Sqlite3",
        "Additional Information Technical Skills Languages Python",
        "PythonDjango Worked",
        "Oracle",
        "ApplicationWeb",
        "SQL Workflow System",
        "IDEA",
        "SAS Enterprise Guide",
        "SAS",
        "Project Description CGS",
        "Shell Scripting Performed",
        "SQL",
        "Facilitated",
        "GitHub",
        "Bootstrap",
        "lPythonspan",
        "Administrators",
        "Project Description Harman International Industries",
        "Oracle Database Used Djangos",
        "RESTAPI",
        "API Integration Application",
        "Operated Agile Methodology",
        "Fannie Maes",
        "CRUD",
        "Maven",
        "Performed",
        "a United States",
        "Djangos",
        "Harman",
        "ANT",
        "Python Bootstrap CSS",
        "Version Control Systems",
        "Created Business Logic",
        "SVN",
        "CSS",
        "jQuery",
        "Data",
        "SharePoint",
        "REST",
        "the DCI Operations and Logistics",
        "NetBeans",
        "Oracle PostgreSQL",
        "PHP",
        "NoSQL",
        "HTMLCSSjQuery",
        "Insight Dashboard Execution Automation",
        "the List View Created",
        "Sprint",
        "JQuery",
        "Responsibilities Design",
        "SPRINT"
    ],
    "experience": "Experience Python Developer Discovery Communications Silver Spring MD January 2018 to Present Project Description Discovery Inc is an American mass media company that primarily operates factual television networks The project of Angry Planner is a stop gap solution for the DCI Operations and Logistics teams It replaces the existing excel based tools that they use today to track finding sources encoding quality checks and delivery of packages It is stop gap since the plan is to move the DCI scheduling logistics and operations teams to the Scripps formally tool NLCD Responsibilities Designed and developed the web application using Django web framework in python36 Used Agile methodology for the Software development process Used Okta module to implement authentication Used GitHub and Bitbucket as Source Control Management Designed the data model for the application Developed the UI of the application using Django Admin Jinja2 HTML CSS and JavaScript Developed data importing utility from AWS S3 into the application Implement Log Entries to the models Deployed the app as a docker service Implemented Continuous Integration and Continuous Delivery using Jenkins GitHub and Docker Implemented xmlgen which generates xml files based on a given template Developed custom managepy commands for utilities used by operations team Developed custom filters in ModelAdmin worked on creating custom actions in the List View Created custom forms and buttons in the Change View Implemented daemon services using multi process module Implemented ImportExport feature to the module Responsible for release management Implemented central logging for entire application using logger module Developed custom forms used by operations and logistics team for updating the airing information Used PostgreSQL as database deployed on remote node deployed as docker service Used Pandas Requests Boto3 botocore csvkit untangle djangoauditlog shutil logging and other libraries in python Environment Python Django Docker GitHub Xml Jenkins Sqlite3 PostgreSQL gunicorn Jinja2 HTML CSS JavaScript Agile Linux Python Developer Fannie Mae Washington DC April 2017 to December 2017 Project Description Fannie Mae is a United States governmentsponsored enterprise GSE and a publicly traded company The project of Single Family Forecast Framework SF3 is a web based interface for controlling the work flow of forecast model runs and revenueexpense forecast processes Insight Dashboard Execution Automation IDEA is a java based web application designed for web browser Responsibilities Analysis of the requirement specifications and designing of modules Involved in application development by coordinating requirements schedules and team meetings troubleshooting Driven best practices quality and consistency in project development Worked extensively on build and deployment tools Maven and version control Tortoise SVN Involved in the code merging reviews and impact analysis of functionality Used Agile methodology and Kanban for the Software development process Experienced in UNIX command line scripting Used Python to write the code of the application in Eclipse Mars Worked on Aginity Workbench for IBM Netezza to manage the data warehouse more efficiently for data analytics Extensively developed stored procedures triggers functions and packages in Oracle Loading analyzing and extracting data to and from Oracle database with Python Parsing various format of files like XML files and load into Oracle database with Python XML Performed advanced querying using SAS Enterprise Guide calculating computed columns using filter manipulate and prepare data for Reporting Graphing and Summarization statistical analysis finally generating SAS datasets Used WinSCP for secure file transfer between a local and remote computer Indepth understanding of large complex software systems to isolate defects reproduce defects assess risk and understand varied customer deployment Assess and develop elevated level design requirements for project and communicate in writing or in meetings with team Assess detailed specifications against design requirements Review coding done to advance application upgrade extension or other development Analyze applications for data integrity issues Use Fannie Maes models for the calculation of expected cashflows Review and validate valuation inputs and results Prepare reports used for management and financial reporting Used advanced mathematical and analytical tools to create algorithms that is used for analytical and product development processes Facilitated testing and validating the implementation of models used in singlefamily loss allowance for modified loans Responsible for assisting in the business review of the loss allowance valuations including the comparison of valuation results to expected results and to current market and business conditions Perform loss forecast analysis and reporting perform ongoing ad hoc model development and analysis for specific clients needing elevated level quantitative analysis of credit risk product valuation asset analysis and the like Conduct loan level reviews of the singlefamily book to ensure accuracy of risk ratings Environment Python 27 Aginity Workbench Oracle Eclipse Mars Unix SAS Enterprise Guide Tortoise SVN WinSCP Python Developer Cerner April 2015 to March 2017 Project Description Cerner Corporation is an American supplier of health information technology HIT solutions services devices and hardware The projects main aim is to design leadingedge health information technology and offer strategies that empower organizations to know manage and engage their populations We developed an application to store the details of the customers accounts and health insurance policies Responsibilities Worked on the project from gathering requirements to developing the entire application Wrote programs for performance calculations using NumPy and SQLAlchemy Wrote python routines to log into the websites and fetch data for selected options Used python modules of urllib urllib2 Requests for web crawling Used with other packages such as Beautiful Soup for data parsing Developed the REST API using Django for fetching the data from NoSQL MongoDB database Implemented the client code for consuming the REST Web Services Developed single page web application using AngularJS HTML5 CSS3 Bootstrap jQuery for interactive crossbrowser functionality Used Angular JS framework for single page applications and validating the clientside user information based on their business rules Responsible for debugging testing maintaining and deploying the application Worked on Python OpenStack APIs Designed and developed the UI of the website using HTML XHTML CSS AJAX and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various RDBMS MYSQL database queries from Python using PythonMySQL connector and   package Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Worked on development of SQL and stored procedures on MYSQL Designed the database schema for the content management system Involved in the development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used PHP to write dynamically generated pages quickly Experienced Python on LINUX for execution Wrote Python routines to log into the websites and fetch data for selected options Performed testing using Djangos Test Module Web pages on the internet are generated by LINUX servers ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Responsible for debugging and troubleshooting the web application I have used the Pandas API to put the data in tabular format for each timestamp data manipulation and retrieval Successfully migrated all the data to the database while the site was in production Developed automated unit and regression testing frameworks for a highly efficient quality assurance system Wrote bash scripts to deploy application using Shell Scripting Performed troubleshooting fixed and deployed many Python bug fixes of the main applications that were sources of data for both customers and internal customer service team Used Ansible for automating cloud deployment process Used Ansible to automate workflow With Ansible creating roles and updating playbooks to provision servers Helped provision and manage AWS linux servers with Chef and Ansible Design and build a text classification application using different text classification models Used Jira for defect tracking and project management Worked on writing and as well as read data from CSV and excel file formats Involved in Sprint planning sessions and participated in the daily Agile SCRUM meetings Conducted every day scrum as part of the SCRUM Master role Worked on resulting reports of the application Performed QA testing on the application Held meetings with client and worked for the entire project with limited help from the client Environment Python Django JSON HTML CSS AJAX jQuery XML AngularJS SOAP Jira Ansible Agile SQL MYSQL and Windows Python Developer Harman Novi MI July 2013 to March 2015 Project Description Harman International Industries simply called as Harman is an American company that designs and engineers connected products for automakers consumers and enterprises worldwide including connected car systems audio and visual products enterprise automation and connected services The main goal of the project is to suggest the audio devices to the customers We developed a recommendation engine for suggestions Responsibilities Design database using PythonDjango for DB scheme scripting Designing and developing various machine learning frameworks using Python R and MATLAB Develop scheme and datalevel database testing tool Improved fraud prediction performance by using random forest and gradient boosting for feature selection with Python Scikitlearn Develop data cleansing retrieval migration tools ETL Analyzed client needs and developed software tools to assist dynamic site content creation Python wxPython Experience building solutions for enterprises contextawareness pervasive computing andor application of machine learning Identifying and solving issues caused by plugins or feeds under Python MYSQL HTML CSS JavaScript and jQuery Technology High end of experience in documentation of code and automate the processes at each step along the pipeline SQL Workflow System using Python created an adapter allowing communication between SharePoint lists and SSIS packages This system provides users the ability to create complex automation workflows Clustering data and representational analysis clustering PCA autoencoders via ScikitLearn and Tensor flow Excel Batch uploader software that quickly uploads large batches of Excel Workbooks into our SQL Databases while providing sanitizing and validation services SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Client Search Engine Using Python and XLWings package created an excel interface to search for client info through our databases Used Agile Methodology and SCRUM Process Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Hands on working with Python Git Deployed production site using Apache 20 with mod _ python Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Worked extensively with Bootstrap Java script and jQuery to optimize the user experience Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Built development environment with JIRA Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Environment Python Django R MATLAB MYSQL REST API HTML CSS JavaScript jQuery SQL Agile Scrum Git AWS Jira MongoDB Python Developer Globant Orlando FL November 2012 to June 2013 Project Description Globant is an IT and Software Development company which develops websites and applications The Projects main aim is to develop an application for shopping the products in online Responsibilities Designed and Developed feature in Python frameworks to automate File System and database Performance High Availability tests for scaleout converged appliance solutions decreasing the manual process Develop automation framework to monitor systems Good Experienced in developing webbased applications using Python Django XML CSS HTML Perform continuous research to automate the Software Development Life Cycle of appliances on storage and networking side for performance metrics Experience in ObjectOriented design and coding Good knowledge of various Design Patterns and UML Expert in maintaining technical documentation for projects Automated Running functional performance destructive and HA test cases on servers and database to achieve Push system configuration using python to various development and test servers via PuppetAnsible Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Application was based on service oriented architecture and used Python Django JSF Spring Ajax HTML CSS for the frontend Experience with Data migration from Sqlite3 to Apache Cassandra database Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated Rabbit MQ cluster installations and configuration using PythonBash Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked extensively with Bootstrap Cassandra with MySQL Java script and JQuery to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decisionmaking using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python REST API XML SQL Python Storage Libraries GIT Linux systems HTML CSS JavaScript jQuery Puppet Ansible Cassandra Python Developer Comcast Philadelphia PA October 2010 to October 2012 Project Description Comcast is an American global telecommunications conglomerate that is the largest broadcasting and cable television company in the world by revenue The projects main aim to develop a recommendation engine for suggesting the videos internet packages subscriptions based on the customer preferences Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango Worked with millions of databases records on daily basis finding common errors and bad data patterns and fixing them Managed large datasets using Panda data frames and Cassandra Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Worked in development of applications especially in LINUX environment and familiar with all its commands Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Responsible for debugging the project monitored on JIRA Agile Added unit tests and improved existing ones and Created project designs utilizing MVC architecture components Designed RESTful XML web service for handling AJAX requests Updated views and templates with Python and Djangos view controller and templating language to create new functionalities to the website Created RESTful APIs calls with server parse output JSON data and perform field by field comparison in database Created Python libraries that allow the transfer of data from SQL Database to Oracle Database Used Djangos ORM objectrelational Mapper to automate the transfer of data stored in database tables into objects that are more commonly used in application code Successfully migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Used Django configuration to manage URLs and application parameters Implemented and enhanced CRUD operations for the applications using the MVC architecture of Django framework and conducted code reviews Developed scripts using pandas to easily perform readwrite operations to CSV files manipulate and compare data by columns Automated different workflows which are initiated manually with Python scripts and Linux bash scripting Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Involved in front end and utilized Bootstrap and Angularjs for page design Created Business Logic using Python to create Planning and Tracking functions Developed multithreaded standalone app in Python and PHP to view performance Involved in writing stored procedures using MySQL Environment Python Django Jenkins Linux AWS Agile Scrum HTML CSS JavaScript jQuery Ajax REST API Cassandra JSON SOAP services MYSQL Java Developer CGS Hyderabad Telangana January 2010 to September 2010 Project Description CGS is a IT Consulting and Staffing Company with a vision of creating a competitive advantage with Software and becoming the most valued partner of the clients This project is for colleges to digitalize their tuition collection process This web application is used for their entire college student population in collecting and maintain database for their tuition Responsibilities Identified the requirements and designed the use cases for the application Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Developed Web application using Struts and Hibernate Integrated frontend elements using JSP Html5 Bootstrap jQuery Developed SOAP based Web Services and components of web services JAXWS using different JAXWS standards on the WSDL type message port Type bindings and service Used Spring Framework for dependency injection for Action classes using the Application ContextXml file Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Managed the interchange of data between the server and the client Designed the application architecture and implemented using MySQL database Optimized the database queries to improve the performance Developed all serverside logic ensuring high performance and responsiveness to requests from the frontend Wrote Junit test cases for each controller methodology and ensured maximum code coverage Build the application rar using ANT build tool and deployed in apache tomcat server Operated Agile Methodology in implementing the application Used SVN for source control and Jira for defect tracking system Update clients with weekly status reports Involved in deployment of the applications in various environments Environment Struts Hibernate JavaJ2EE JSP HTML5 CSS3 jQuery MySQL SVN Junit ANT Agile Education Bachelors in Information Technology in Information Technology Acharya Nagarjuna University 2009 Skills DJANGO 7 years HTML 7 years JAVASCRIPT 7 years PYTHON 8 years XML 8 years mysql Additional Information Technical Skills Languages Python 3527 Core Java J2EE JSP Servlets Frameworks Django Pyramid Flask Struts Hibernate Spring Databases MySQL Oracle PostgreSQL SQL MongoDB PLSQL Web Technologies AJAX Django Angular JS Nodejs JSON JavaScript jQuery PHP HTML XML CSS XSLT Bootstrap Web Services SOAP RESTful ApplicationWeb servers Apache Tomcat Web Sphere IDESTools PyCharm Sublime Text Spyder Emacs NetBeans Eclipse Visual Studio Xcode Cloud Platforms Azure Amazon web services Operating Systems Linux Unix Windows 10 08 07 XP Vista Python Libraries Beautiful Soup NumPy SciPy Matplotlib Pythontwitter Pandas data frame network urllib2   Version Control Systems CVS SVN Git GitHub SDLC Agile methodologies scrum framework",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Discovery",
        "Communications",
        "Herndon",
        "VA",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Discovery",
        "Communications",
        "Silver",
        "Spring",
        "MD",
        "January",
        "Present",
        "Project",
        "Description",
        "Discovery",
        "Inc",
        "mass",
        "media",
        "company",
        "television",
        "networks",
        "project",
        "Angry",
        "Planner",
        "stop",
        "gap",
        "solution",
        "DCI",
        "Operations",
        "Logistics",
        "teams",
        "excel",
        "tools",
        "today",
        "sources",
        "quality",
        "checks",
        "delivery",
        "packages",
        "gap",
        "plan",
        "DCI",
        "scheduling",
        "logistics",
        "operations",
        "teams",
        "Scripps",
        "NLCD",
        "Responsibilities",
        "web",
        "application",
        "Django",
        "web",
        "framework",
        "python36",
        "methodology",
        "Software",
        "development",
        "process",
        "Okta",
        "module",
        "authentication",
        "GitHub",
        "Bitbucket",
        "Source",
        "Control",
        "Management",
        "data",
        "model",
        "application",
        "UI",
        "application",
        "Django",
        "Admin",
        "Jinja2",
        "HTML",
        "CSS",
        "JavaScript",
        "data",
        "utility",
        "AWS",
        "S3",
        "application",
        "Implement",
        "Log",
        "Entries",
        "models",
        "app",
        "docker",
        "service",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "Jenkins",
        "GitHub",
        "Docker",
        "xmlgen",
        "xml",
        "files",
        "template",
        "custom",
        "commands",
        "utilities",
        "operations",
        "team",
        "custom",
        "filters",
        "ModelAdmin",
        "custom",
        "actions",
        "List",
        "View",
        "custom",
        "forms",
        "buttons",
        "Change",
        "View",
        "daemon",
        "services",
        "process",
        "module",
        "Implemented",
        "ImportExport",
        "module",
        "release",
        "management",
        "logging",
        "application",
        "module",
        "custom",
        "forms",
        "operations",
        "logistics",
        "team",
        "information",
        "PostgreSQL",
        "database",
        "node",
        "docker",
        "service",
        "Pandas",
        "Requests",
        "botocore",
        "csvkit",
        "untangle",
        "djangoauditlog",
        "shutil",
        "logging",
        "libraries",
        "python",
        "Environment",
        "Python",
        "Django",
        "Docker",
        "GitHub",
        "Xml",
        "Jenkins",
        "Sqlite3",
        "PostgreSQL",
        "Jinja2",
        "HTML",
        "CSS",
        "JavaScript",
        "Agile",
        "Linux",
        "Python",
        "Developer",
        "Fannie",
        "Mae",
        "Washington",
        "DC",
        "April",
        "December",
        "Project",
        "Description",
        "Fannie",
        "Mae",
        "United",
        "States",
        "enterprise",
        "GSE",
        "company",
        "project",
        "Single",
        "Family",
        "Forecast",
        "Framework",
        "SF3",
        "web",
        "interface",
        "work",
        "flow",
        "forecast",
        "model",
        "runs",
        "revenueexpense",
        "forecast",
        "processes",
        "Insight",
        "Dashboard",
        "Execution",
        "Automation",
        "IDEA",
        "web",
        "application",
        "web",
        "browser",
        "Responsibilities",
        "Analysis",
        "requirement",
        "specifications",
        "designing",
        "modules",
        "application",
        "development",
        "requirements",
        "schedules",
        "team",
        "meetings",
        "practices",
        "quality",
        "consistency",
        "project",
        "development",
        "build",
        "deployment",
        "tools",
        "Maven",
        "version",
        "control",
        "Tortoise",
        "SVN",
        "code",
        "reviews",
        "analysis",
        "functionality",
        "methodology",
        "Kanban",
        "Software",
        "development",
        "process",
        "UNIX",
        "command",
        "line",
        "scripting",
        "Python",
        "code",
        "application",
        "Eclipse",
        "Mars",
        "Aginity",
        "Workbench",
        "IBM",
        "Netezza",
        "data",
        "warehouse",
        "data",
        "analytics",
        "procedures",
        "functions",
        "packages",
        "Oracle",
        "Loading",
        "data",
        "Oracle",
        "database",
        "Python",
        "format",
        "files",
        "XML",
        "files",
        "load",
        "Oracle",
        "database",
        "Python",
        "XML",
        "Performed",
        "querying",
        "SAS",
        "Enterprise",
        "Guide",
        "columns",
        "filter",
        "manipulate",
        "data",
        "Graphing",
        "Summarization",
        "analysis",
        "SAS",
        "datasets",
        "WinSCP",
        "file",
        "transfer",
        "computer",
        "understanding",
        "software",
        "systems",
        "defects",
        "defects",
        "risk",
        "customer",
        "deployment",
        "Assess",
        "level",
        "design",
        "requirements",
        "project",
        "writing",
        "meetings",
        "team",
        "Assess",
        "specifications",
        "design",
        "requirements",
        "Review",
        "application",
        "upgrade",
        "extension",
        "development",
        "Analyze",
        "applications",
        "data",
        "integrity",
        "issues",
        "Use",
        "Fannie",
        "Maes",
        "models",
        "calculation",
        "Review",
        "valuation",
        "inputs",
        "results",
        "Prepare",
        "reports",
        "management",
        "reporting",
        "tools",
        "algorithms",
        "product",
        "development",
        "testing",
        "implementation",
        "models",
        "loss",
        "allowance",
        "loans",
        "business",
        "review",
        "loss",
        "allowance",
        "valuations",
        "comparison",
        "valuation",
        "results",
        "results",
        "market",
        "business",
        "conditions",
        "loss",
        "forecast",
        "analysis",
        "reporting",
        "perform",
        "model",
        "development",
        "analysis",
        "clients",
        "level",
        "analysis",
        "credit",
        "risk",
        "product",
        "valuation",
        "asset",
        "analysis",
        "Conduct",
        "loan",
        "level",
        "reviews",
        "book",
        "accuracy",
        "risk",
        "ratings",
        "Environment",
        "Python",
        "Aginity",
        "Workbench",
        "Oracle",
        "Eclipse",
        "Mars",
        "Unix",
        "SAS",
        "Enterprise",
        "Guide",
        "Tortoise",
        "SVN",
        "WinSCP",
        "Python",
        "Developer",
        "Cerner",
        "April",
        "March",
        "Project",
        "Description",
        "Cerner",
        "Corporation",
        "supplier",
        "health",
        "information",
        "technology",
        "HIT",
        "solutions",
        "services",
        "devices",
        "hardware",
        "projects",
        "aim",
        "leadingedge",
        "health",
        "information",
        "technology",
        "strategies",
        "organizations",
        "populations",
        "application",
        "details",
        "customers",
        "health",
        "insurance",
        "policies",
        "Responsibilities",
        "project",
        "requirements",
        "application",
        "Wrote",
        "programs",
        "performance",
        "calculations",
        "NumPy",
        "SQLAlchemy",
        "python",
        "routines",
        "websites",
        "data",
        "options",
        "modules",
        "Requests",
        "web",
        "packages",
        "Beautiful",
        "Soup",
        "data",
        "REST",
        "API",
        "Django",
        "data",
        "NoSQL",
        "database",
        "client",
        "code",
        "REST",
        "Web",
        "Services",
        "page",
        "web",
        "application",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "jQuery",
        "crossbrowser",
        "functionality",
        "JS",
        "framework",
        "page",
        "applications",
        "user",
        "information",
        "business",
        "rules",
        "testing",
        "application",
        "Python",
        "OpenStack",
        "APIs",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Wrote",
        "RDBMS",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "package",
        "development",
        "RESTful",
        "Web",
        "Services",
        "data",
        "interface",
        "format",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "database",
        "schema",
        "content",
        "management",
        "system",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "PHP",
        "pages",
        "Python",
        "LINUX",
        "execution",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "Web",
        "pages",
        "internet",
        "LINUX",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "program",
        "users",
        "manuals",
        "documentation",
        "web",
        "application",
        "Pandas",
        "API",
        "data",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "data",
        "database",
        "site",
        "production",
        "unit",
        "regression",
        "testing",
        "frameworks",
        "quality",
        "assurance",
        "system",
        "Wrote",
        "bash",
        "scripts",
        "application",
        "Shell",
        "Scripting",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "sources",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Ansible",
        "cloud",
        "deployment",
        "process",
        "Ansible",
        "workflow",
        "roles",
        "playbooks",
        "provision",
        "servers",
        "provision",
        "AWS",
        "linux",
        "servers",
        "Chef",
        "Ansible",
        "Design",
        "text",
        "classification",
        "application",
        "text",
        "classification",
        "models",
        "Jira",
        "tracking",
        "project",
        "management",
        "writing",
        "data",
        "CSV",
        "file",
        "formats",
        "Sprint",
        "planning",
        "sessions",
        "Agile",
        "SCRUM",
        "meetings",
        "day",
        "part",
        "SCRUM",
        "Master",
        "role",
        "reports",
        "application",
        "Performed",
        "QA",
        "testing",
        "application",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "Environment",
        "Python",
        "Django",
        "JSON",
        "HTML",
        "CSS",
        "AJAX",
        "jQuery",
        "XML",
        "SOAP",
        "Jira",
        "Ansible",
        "Agile",
        "SQL",
        "MYSQL",
        "Windows",
        "Python",
        "Developer",
        "Harman",
        "Novi",
        "MI",
        "July",
        "March",
        "Project",
        "Description",
        "Harman",
        "International",
        "Industries",
        "Harman",
        "company",
        "engineers",
        "products",
        "automakers",
        "consumers",
        "enterprises",
        "car",
        "systems",
        "audio",
        "products",
        "enterprise",
        "automation",
        "services",
        "goal",
        "project",
        "devices",
        "customers",
        "recommendation",
        "engine",
        "suggestions",
        "Responsibilities",
        "Design",
        "database",
        "PythonDjango",
        "DB",
        "scheme",
        "scripting",
        "Designing",
        "machine",
        "frameworks",
        "Python",
        "R",
        "MATLAB",
        "Develop",
        "scheme",
        "datalevel",
        "database",
        "testing",
        "tool",
        "fraud",
        "prediction",
        "performance",
        "forest",
        "gradient",
        "feature",
        "selection",
        "Python",
        "Scikitlearn",
        "Develop",
        "data",
        "cleansing",
        "retrieval",
        "migration",
        "tools",
        "client",
        "needs",
        "software",
        "tools",
        "site",
        "content",
        "creation",
        "Python",
        "wxPython",
        "Experience",
        "building",
        "solutions",
        "enterprises",
        "application",
        "machine",
        "Identifying",
        "issues",
        "plugins",
        "feeds",
        "Python",
        "MYSQL",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Technology",
        "High",
        "end",
        "experience",
        "documentation",
        "code",
        "processes",
        "step",
        "pipeline",
        "SQL",
        "Workflow",
        "System",
        "Python",
        "adapter",
        "communication",
        "SharePoint",
        "lists",
        "packages",
        "system",
        "users",
        "ability",
        "automation",
        "data",
        "analysis",
        "PCA",
        "autoencoders",
        "ScikitLearn",
        "Tensor",
        "flow",
        "Excel",
        "Batch",
        "software",
        "batches",
        "Excel",
        "Workbooks",
        "SQL",
        "Databases",
        "sanitizing",
        "validation",
        "services",
        "SQL",
        "Naming",
        "Conventions",
        "Enforcement",
        "Python",
        "Stored",
        "Procedures",
        "server",
        "job",
        "conventions",
        "SQL",
        "SQL",
        "environment",
        "Client",
        "Search",
        "Engine",
        "Python",
        "XLWings",
        "package",
        "interface",
        "client",
        "info",
        "databases",
        "Agile",
        "Methodology",
        "SCRUM",
        "Process",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Hands",
        "Python",
        "Git",
        "Deployed",
        "production",
        "site",
        "Apache",
        "mod",
        "_",
        "python",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Bootstrap",
        "Java",
        "script",
        "jQuery",
        "user",
        "experience",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "control",
        "tool",
        "teamdevelopment",
        "development",
        "environment",
        "JIRA",
        "highperformance",
        "MongoDB",
        "replica",
        "sets",
        "EC2",
        "reliability",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "web",
        "application",
        "Environment",
        "Python",
        "Django",
        "R",
        "MATLAB",
        "MYSQL",
        "REST",
        "API",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "SQL",
        "Agile",
        "Scrum",
        "Git",
        "AWS",
        "Jira",
        "MongoDB",
        "Python",
        "Developer",
        "Globant",
        "Orlando",
        "FL",
        "November",
        "June",
        "Project",
        "Description",
        "Globant",
        "IT",
        "Software",
        "Development",
        "company",
        "websites",
        "applications",
        "Projects",
        "aim",
        "application",
        "products",
        "Responsibilities",
        "feature",
        "Python",
        "frameworks",
        "File",
        "System",
        "database",
        "Performance",
        "Availability",
        "tests",
        "appliance",
        "solutions",
        "process",
        "automation",
        "framework",
        "systems",
        "Good",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "research",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "appliances",
        "storage",
        "networking",
        "side",
        "performance",
        "metrics",
        "Experience",
        "ObjectOriented",
        "design",
        "knowledge",
        "Design",
        "Patterns",
        "UML",
        "Expert",
        "documentation",
        "projects",
        "performance",
        "HA",
        "test",
        "cases",
        "servers",
        "database",
        "system",
        "configuration",
        "python",
        "development",
        "test",
        "servers",
        "PuppetAnsible",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Application",
        "service",
        "architecture",
        "Python",
        "Django",
        "JSF",
        "Spring",
        "Ajax",
        "HTML",
        "CSS",
        "frontend",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "Apache",
        "Cassandra",
        "database",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "RESTAPI",
        "Automated",
        "Rabbit",
        "MQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "standards",
        "code",
        "performance",
        "applications",
        "use",
        "design",
        "patterns",
        "Front",
        "Controller",
        "DAO",
        "Bootstrap",
        "Cassandra",
        "MySQL",
        "Java",
        "script",
        "JQuery",
        "user",
        "experience",
        "operations",
        "calculation",
        "purpose",
        "python",
        "libraries",
        "graphs",
        "business",
        "Python",
        "matplotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Planning",
        "test",
        "cases",
        "automation",
        "test",
        "cases",
        "Environment",
        "Python",
        "REST",
        "API",
        "XML",
        "SQL",
        "Python",
        "Storage",
        "GIT",
        "Linux",
        "systems",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Puppet",
        "Ansible",
        "Cassandra",
        "Python",
        "Developer",
        "Comcast",
        "Philadelphia",
        "PA",
        "October",
        "October",
        "Project",
        "Description",
        "Comcast",
        "telecommunications",
        "conglomerate",
        "broadcasting",
        "cable",
        "television",
        "company",
        "world",
        "revenue",
        "projects",
        "aim",
        "recommendation",
        "engine",
        "videos",
        "internet",
        "packages",
        "subscriptions",
        "customer",
        "preferences",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "business",
        "logic",
        "PythonDjango",
        "Worked",
        "millions",
        "databases",
        "records",
        "basis",
        "errors",
        "data",
        "patterns",
        "datasets",
        "Panda",
        "data",
        "frames",
        "Cassandra",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Build",
        "Cassandra",
        "CRUD",
        "operations",
        "update",
        "read",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "development",
        "applications",
        "LINUX",
        "environment",
        "commands",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "project",
        "JIRA",
        "Agile",
        "unit",
        "tests",
        "ones",
        "project",
        "designs",
        "MVC",
        "architecture",
        "components",
        "XML",
        "web",
        "service",
        "AJAX",
        "requests",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "functionalities",
        "website",
        "APIs",
        "server",
        "parse",
        "output",
        "JSON",
        "data",
        "field",
        "field",
        "comparison",
        "database",
        "Python",
        "transfer",
        "data",
        "SQL",
        "Database",
        "Oracle",
        "Database",
        "Djangos",
        "ORM",
        "Mapper",
        "transfer",
        "data",
        "database",
        "tables",
        "objects",
        "application",
        "code",
        "Django",
        "database",
        "SQLite3",
        "PostgreSQL",
        "data",
        "integrity",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "CRUD",
        "operations",
        "applications",
        "MVC",
        "architecture",
        "Django",
        "framework",
        "code",
        "scripts",
        "pandas",
        "operations",
        "CSV",
        "files",
        "manipulate",
        "data",
        "columns",
        "workflows",
        "Python",
        "scripts",
        "Linux",
        "bash",
        "Developed",
        "modules",
        "CSV",
        "XML",
        "data",
        "files",
        "REST",
        "services",
        "data",
        "AGILE",
        "SCRUM",
        "practices",
        "planning",
        "sprint",
        "SCRUM",
        "meetings",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "Django",
        "Database",
        "APIs",
        "database",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "app",
        "Python",
        "PHP",
        "performance",
        "procedures",
        "MySQL",
        "Environment",
        "Python",
        "Django",
        "Jenkins",
        "Linux",
        "Agile",
        "Scrum",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Ajax",
        "REST",
        "API",
        "Cassandra",
        "JSON",
        "SOAP",
        "services",
        "MYSQL",
        "Java",
        "Developer",
        "CGS",
        "Hyderabad",
        "Telangana",
        "January",
        "September",
        "Project",
        "Description",
        "CGS",
        "IT",
        "Consulting",
        "Staffing",
        "Company",
        "vision",
        "advantage",
        "Software",
        "partner",
        "clients",
        "project",
        "colleges",
        "tuition",
        "collection",
        "process",
        "web",
        "application",
        "college",
        "student",
        "population",
        "database",
        "tuition",
        "Responsibilities",
        "requirements",
        "use",
        "cases",
        "application",
        "Use",
        "case",
        "diagrams",
        "Activity",
        "flow",
        "diagrams",
        "Class",
        "diagrams",
        "Object",
        "diagrams",
        "design",
        "phase",
        "Web",
        "application",
        "Struts",
        "Hibernate",
        "Integrated",
        "frontend",
        "elements",
        "JSP",
        "Html5",
        "Bootstrap",
        "jQuery",
        "Developed",
        "SOAP",
        "Web",
        "Services",
        "components",
        "web",
        "services",
        "JAXWS",
        "JAXWS",
        "standards",
        "WSDL",
        "type",
        "message",
        "port",
        "Type",
        "bindings",
        "service",
        "Spring",
        "Framework",
        "dependency",
        "injection",
        "Action",
        "classes",
        "Application",
        "ContextXml",
        "file",
        "database",
        "Procedures",
        "Tables",
        "Views",
        "Sequences",
        "Cursors",
        "Packages",
        "Triggers",
        "interchange",
        "data",
        "server",
        "client",
        "application",
        "architecture",
        "MySQL",
        "database",
        "database",
        "performance",
        "serverside",
        "logic",
        "performance",
        "responsiveness",
        "requests",
        "frontend",
        "Wrote",
        "Junit",
        "test",
        "cases",
        "controller",
        "methodology",
        "code",
        "coverage",
        "application",
        "rar",
        "ANT",
        "tool",
        "apache",
        "tomcat",
        "server",
        "Agile",
        "Methodology",
        "application",
        "SVN",
        "source",
        "control",
        "Jira",
        "tracking",
        "system",
        "Update",
        "clients",
        "status",
        "reports",
        "deployment",
        "applications",
        "environments",
        "Environment",
        "Struts",
        "Hibernate",
        "JavaJ2EE",
        "JSP",
        "HTML5",
        "CSS3",
        "jQuery",
        "MySQL",
        "SVN",
        "Junit",
        "ANT",
        "Agile",
        "Education",
        "Bachelors",
        "Information",
        "Technology",
        "Information",
        "Technology",
        "Acharya",
        "Nagarjuna",
        "University",
        "Skills",
        "DJANGO",
        "years",
        "HTML",
        "years",
        "JAVASCRIPT",
        "years",
        "PYTHON",
        "years",
        "XML",
        "years",
        "mysql",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Python",
        "Core",
        "Java",
        "J2EE",
        "JSP",
        "Servlets",
        "Frameworks",
        "Django",
        "Pyramid",
        "Flask",
        "Struts",
        "Hibernate",
        "Spring",
        "MySQL",
        "Oracle",
        "PostgreSQL",
        "SQL",
        "MongoDB",
        "PLSQL",
        "Web",
        "Technologies",
        "AJAX",
        "Django",
        "Angular",
        "JS",
        "Nodejs",
        "JSON",
        "JavaScript",
        "jQuery",
        "PHP",
        "HTML",
        "XML",
        "CSS",
        "XSLT",
        "Bootstrap",
        "Web",
        "Services",
        "SOAP",
        "ApplicationWeb",
        "servers",
        "Apache",
        "Tomcat",
        "Web",
        "Sphere",
        "IDESTools",
        "PyCharm",
        "Sublime",
        "Text",
        "Spyder",
        "Emacs",
        "NetBeans",
        "Eclipse",
        "Visual",
        "Studio",
        "Xcode",
        "Cloud",
        "Platforms",
        "Azure",
        "Amazon",
        "web",
        "services",
        "Operating",
        "Systems",
        "Linux",
        "Unix",
        "Windows",
        "XP",
        "Vista",
        "Python",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "Version",
        "Control",
        "Systems",
        "CVS",
        "SVN",
        "Git",
        "GitHub",
        "SDLC",
        "methodologies",
        "framework"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:53:31.610493",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Discovery Communications Herndon VA Work Experience Python Developer Discovery Communications Silver Spring MD January 2018 to Present Project Description Discovery Inc is an American mass media company that primarily operates factual television networks The project of Angry Planner is a stop gap solution for the DCI Operations and Logistics teams It replaces the existing excel based tools that they use today to track finding sources encoding quality checks and delivery of packages It is stop gap since the plan is to move the DCI scheduling logistics and operations teams to the Scripps formally tool NLCD Responsibilities Designed and developed the web application using Django web framework in python36 Used Agile methodology for the Software development process Used Okta module to implement authentication Used GitHub and Bitbucket as Source Control Management Designed the data model for the application Developed the UI of the application using Django Admin Jinja2 HTML CSS and JavaScript Developed data importing utility from AWS S3 into the application Implement Log Entries to the models Deployed the app as a docker service Implemented Continuous Integration and Continuous Delivery using Jenkins GitHub and Docker Implemented xmlgen which generates xml files based on a given template Developed custom managepy commands for utilities used by operations team Developed custom filters in ModelAdmin worked on creating custom actions in the List View Created custom forms and buttons in the Change View Implemented daemon services using multi process module Implemented ImportExport feature to the module Responsible for release management Implemented central logging for entire application using logger module Developed custom forms used by operations and logistics team for updating the airing information Used PostgreSQL as database deployed on remote node deployed as docker service Used Pandas Requests Boto3 botocore csvkit untangle djangoauditlog shutil logging and other libraries in python Environment Python Django Docker GitHub Xml Jenkins Sqlite3 PostgreSQL gunicorn Jinja2 HTML CSS JavaScript Agile Linux Python Developer Fannie Mae Washington DC April 2017 to December 2017 Project Description Fannie Mae is a United States governmentsponsored enterprise GSE and a publicly traded company The project of Single Family Forecast Framework SF3 is a web based interface for controlling the work flow of forecast model runs and revenueexpense forecast processes Insight Dashboard Execution Automation IDEA is a java based web application designed for web browser Responsibilities Analysis of the requirement specifications and designing of modules Involved in application development by coordinating requirements schedules and team meetings troubleshooting Driven best practices quality and consistency in project development Worked extensively on build and deployment tools Maven and version control Tortoise SVN Involved in the code merging reviews and impact analysis of functionality Used Agile methodology and Kanban for the Software development process Experienced in UNIX command line scripting Used Python to write the code of the application in Eclipse Mars Worked on Aginity Workbench for IBM Netezza to manage the data warehouse more efficiently for data analytics Extensively developed stored procedures triggers functions and packages in Oracle Loading analyzing and extracting data to and from Oracle database with Python Parsing various format of files like XML files and load into Oracle database with Python XML Performed advanced querying using SAS Enterprise Guide calculating computed columns using filter manipulate and prepare data for Reporting Graphing and Summarization statistical analysis finally generating SAS datasets Used WinSCP for secure file transfer between a local and remote computer Indepth understanding of large complex software systems to isolate defects reproduce defects assess risk and understand varied customer deployment Assess and develop elevated level design requirements for project and communicate in writing or in meetings with team Assess detailed specifications against design requirements Review coding done to advance application upgrade extension or other development Analyze applications for data integrity issues Use Fannie Maes models for the calculation of expected cashflows Review and validate valuation inputs and results Prepare reports used for management and financial reporting Used advanced mathematical and analytical tools to create algorithms that is used for analytical and product development processes Facilitated testing and validating the implementation of models used in singlefamily loss allowance for modified loans Responsible for assisting in the business review of the loss allowance valuations including the comparison of valuation results to expected results and to current market and business conditions Perform loss forecast analysis and reporting perform ongoing ad hoc model development and analysis for specific clients needing elevated level quantitative analysis of credit risk product valuation asset analysis and the like Conduct loan level reviews of the singlefamily book to ensure accuracy of risk ratings Environment Python 27 Aginity Workbench Oracle Eclipse Mars Unix SAS Enterprise Guide Tortoise SVN WinSCP Python Developer Cerner April 2015 to March 2017 Project Description Cerner Corporation is an American supplier of health information technology HIT solutions services devices and hardware The projects main aim is to design leadingedge health information technology and offer strategies that empower organizations to know manage and engage their populations We developed an application to store the details of the customers accounts and health insurance policies Responsibilities Worked on the project from gathering requirements to developing the entire application Wrote programs for performance calculations using NumPy and SQLAlchemy Wrote python routines to log into the websites and fetch data for selected options Used python modules of urllib urllib2 Requests for web crawling Used with other packages such as Beautiful Soup for data parsing Developed the REST API using Django for fetching the data from NoSQL MongoDB database Implemented the client code for consuming the REST Web Services Developed single page web application using AngularJS HTML5 CSS3 Bootstrap jQuery for interactive crossbrowser functionality Used Angular JS framework for single page applications and validating the clientside user information based on their business rules Responsible for debugging testing maintaining and deploying the application Worked on Python OpenStack APIs Designed and developed the UI of the website using HTML XHTML CSS AJAX and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various RDBMS MYSQL database queries from Python using PythonMySQL connector and MySQLdb package Involved in development of RESTful Web Services for getting and sending data from the external interface in the JSON format Worked on development of SQL and stored procedures on MYSQL Designed the database schema for the content management system Involved in the development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used PHP to write dynamically generated pages quickly Experienced Python on LINUX for execution Wrote Python routines to log into the websites and fetch data for selected options Performed testing using Djangos Test Module Web pages on the internet are generated by LINUX servers ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Responsible for debugging and troubleshooting the web application I have used the Pandas API to put the data in tabular format for each timestamp data manipulation and retrieval Successfully migrated all the data to the database while the site was in production Developed automated unit and regression testing frameworks for a highly efficient quality assurance system Wrote bash scripts to deploy application using Shell Scripting Performed troubleshooting fixed and deployed many Python bug fixes of the main applications that were sources of data for both customers and internal customer service team Used Ansible for automating cloud deployment process Used Ansible to automate workflow With Ansible creating roles and updating playbooks to provision servers Helped provision and manage AWS linux servers with Chef and Ansible Design and build a text classification application using different text classification models Used Jira for defect tracking and project management Worked on writing and as well as read data from CSV and excel file formats Involved in Sprint planning sessions and participated in the daily Agile SCRUM meetings Conducted every day scrum as part of the SCRUM Master role Worked on resulting reports of the application Performed QA testing on the application Held meetings with client and worked for the entire project with limited help from the client Environment Python Django JSON HTML CSS AJAX jQuery XML AngularJS SOAP Jira Ansible Agile SQL MYSQL and Windows Python Developer Harman Novi MI July 2013 to March 2015 Project Description Harman International Industries simply called as Harman is an American company that designs and engineers connected products for automakers consumers and enterprises worldwide including connected car systems audio and visual products enterprise automation and connected services The main goal of the project is to suggest the audio devices to the customers We developed a recommendation engine for suggestions Responsibilities Design database using PythonDjango for DB scheme scripting Designing and developing various machine learning frameworks using Python R and MATLAB Develop scheme and datalevel database testing tool Improved fraud prediction performance by using random forest and gradient boosting for feature selection with Python Scikitlearn Develop data cleansing retrieval migration tools ETL Analyzed client needs and developed software tools to assist dynamic site content creation Python wxPython Experience building solutions for enterprises contextawareness pervasive computing andor application of machine learning Identifying and solving issues caused by plugins or feeds under Python MYSQL HTML CSS JavaScript and jQuery Technology High end of experience in documentation of code and automate the processes at each step along the pipeline SQL Workflow System using Python created an adapter allowing communication between SharePoint lists and SSIS packages This system provides users the ability to create complex automation workflows Clustering data and representational analysis clustering PCA autoencoders via ScikitLearn and Tensor flow Excel Batch uploader software that quickly uploads large batches of Excel Workbooks into our SQL Databases while providing sanitizing and validation services SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Client Search Engine Using Python and XLWings package created an excel interface to search for client info through our databases Used Agile Methodology and SCRUM Process Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Hands on working with Python Git Deployed production site using Apache 20 with mod_ python Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Worked extensively with Bootstrap Java script and jQuery to optimize the user experience Created unit testregression test framework for workingnew code Using Subversion control tool to coordinate teamdevelopment Built development environment with JIRA Implemented multiple highperformance MongoDB replica sets on EC2 with robust reliability Developed entire frontend and backend modules using Python on Django Web Framework Responsible for debugging and troubleshooting the web application Environment Python Django R MATLAB MYSQL REST API HTML CSS JavaScript jQuery SQL Agile Scrum Git AWS Jira MongoDB Python Developer Globant Orlando FL November 2012 to June 2013 Project Description Globant is an IT and Software Development company which develops websites and applications The Projects main aim is to develop an application for shopping the products in online Responsibilities Designed and Developed feature in Python frameworks to automate File System and database Performance High Availability tests for scaleout converged appliance solutions decreasing the manual process Develop automation framework to monitor systems Good Experienced in developing webbased applications using Python Django XML CSS HTML Perform continuous research to automate the Software Development Life Cycle of appliances on storage and networking side for performance metrics Experience in ObjectOriented design and coding Good knowledge of various Design Patterns and UML Expert in maintaining technical documentation for projects Automated Running functional performance destructive and HA test cases on servers and database to achieve Push system configuration using python to various development and test servers via PuppetAnsible Created Python and Bash tools to increase efficiency of application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Application was based on service oriented architecture and used Python Django JSF Spring Ajax HTML CSS for the frontend Experience with Data migration from Sqlite3 to Apache Cassandra database Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated Rabbit MQ cluster installations and configuration using PythonBash Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked extensively with Bootstrap Cassandra with MySQL Java script and JQuery to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decisionmaking using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python REST API XML SQL Python Storage Libraries GIT Linux systems HTML CSS JavaScript jQuery Puppet Ansible Cassandra Python Developer Comcast Philadelphia PA October 2010 to October 2012 Project Description Comcast is an American global telecommunications conglomerate that is the largest broadcasting and cable television company in the world by revenue The projects main aim to develop a recommendation engine for suggesting the videos internet packages subscriptions based on the customer preferences Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango Worked with millions of databases records on daily basis finding common errors and bad data patterns and fixing them Managed large datasets using Panda data frames and Cassandra Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Build Cassandra queries for performing various CRUD operations like create update read and delete also used Bootstrap as a mechanism to manage and organize the html page layout Worked in development of applications especially in LINUX environment and familiar with all its commands Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Responsible for debugging the project monitored on JIRA Agile Added unit tests and improved existing ones and Created project designs utilizing MVC architecture components Designed RESTful XML web service for handling AJAX requests Updated views and templates with Python and Djangos view controller and templating language to create new functionalities to the website Created RESTful APIs calls with server parse output JSON data and perform field by field comparison in database Created Python libraries that allow the transfer of data from SQL Database to Oracle Database Used Djangos ORM objectrelational Mapper to automate the transfer of data stored in database tables into objects that are more commonly used in application code Successfully migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Used Django configuration to manage URLs and application parameters Implemented and enhanced CRUD operations for the applications using the MVC architecture of Django framework and conducted code reviews Developed scripts using pandas to easily perform readwrite operations to CSV files manipulate and compare data by columns Automated different workflows which are initiated manually with Python scripts and Linux bash scripting Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used Python based GUI components for the frontend functionality such as selection criteria Used Amazon Web Services AWS for improved efficiency of storage and fast access Involved in front end and utilized Bootstrap and Angularjs for page design Created Business Logic using Python to create Planning and Tracking functions Developed multithreaded standalone app in Python and PHP to view performance Involved in writing stored procedures using MySQL Environment Python Django Jenkins Linux AWS Agile Scrum HTML CSS JavaScript jQuery Ajax REST API Cassandra JSON SOAP services MYSQL Java Developer CGS Hyderabad Telangana January 2010 to September 2010 Project Description CGS is a IT Consulting and Staffing Company with a vision of creating a competitive advantage with Software and becoming the most valued partner of the clients This project is for colleges to digitalize their tuition collection process This web application is used for their entire college student population in collecting and maintain database for their tuition Responsibilities Identified the requirements and designed the use cases for the application Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Developed Web application using Struts and Hibernate Integrated frontend elements using JSP Html5 Bootstrap jQuery Developed SOAP based Web Services and components of web services JAXWS using different JAXWS standards on the WSDL type message port Type bindings and service Used Spring Framework for dependency injection for Action classes using the Application ContextXml file Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Managed the interchange of data between the server and the client Designed the application architecture and implemented using MySQL database Optimized the database queries to improve the performance Developed all serverside logic ensuring high performance and responsiveness to requests from the frontend Wrote Junit test cases for each controller methodology and ensured maximum code coverage Build the application rar using ANT build tool and deployed in apache tomcat server Operated Agile Methodology in implementing the application Used SVN for source control and Jira for defect tracking system Update clients with weekly status reports Involved in deployment of the applications in various environments Environment Struts Hibernate JavaJ2EE JSP HTML5 CSS3 jQuery MySQL SVN Junit ANT Agile Education Bachelors in Information Technology in Information Technology Acharya Nagarjuna University 2009 Skills DJANGO 7 years HTML 7 years JAVASCRIPT 7 years PYTHON 8 years XML 8 years mysql Additional Information Technical Skills Languages Python 3527 Core Java J2EE JSP Servlets Frameworks Django Pyramid Flask Struts Hibernate Spring Databases MySQL Oracle PostgreSQL SQL MongoDB PLSQL Web Technologies AJAX Django Angular JS Nodejs JSON JavaScript jQuery PHP HTML XML CSS XSLT Bootstrap Web Services SOAP RESTful ApplicationWeb servers Apache Tomcat Web Sphere IDESTools PyCharm Sublime Text Spyder Emacs NetBeans Eclipse Visual Studio Xcode Cloud Platforms Azure Amazon web services Operating Systems Linux Unix Windows 10 08 07 XP Vista Python Libraries Beautiful Soup NumPy SciPy Matplotlib Pythontwitter Pandas data frame network urllib2 MySQLdb Version Control Systems CVS SVN Git GitHub SDLC Agile methodologies scrum framework",
    "unique_id": "6d83bc7d-f0c9-407d-9b72-bab8a8a355e8"
}