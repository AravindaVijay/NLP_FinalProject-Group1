{
    "clean_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Minneapolis MN Over 6 years of professional experience in designing and building web applications using Java J2EE Experience in all phases of Software Development Life Cycle SDLC Analysis Design Implementation Integration QA methodologies Test Strategy Test metrics and maintenance of applications Strong experience in software development methodologies like Waterfall Agile TDD Scrum and RAD Participated in Scrum Sprint review Retrospection and Virtual Closure meetings as part of Agile Deep understanding of MVC modelviewcontrol ClientServer and Ntier Architectures Well versed skill in design development and deployment of applications for the J2EE platform using Servlets Struts Spring EJB JSP SOA SOAP REST Microservices ORM JPA JMS JAXP JAXB JUnit Hands on experience in FrontEnd technologies like AngularJS ReactJS NodeJS JavaScript HTML5 CSS3 Bootstrap jQuery Tag Libraries AJAX used for Responsive web page designing Experience in XML technologies like XML DTD XSL XSLT XPATH JAXB SAX and DOM Parsers Worked with Spring Features like Spring MVC Spring DAO Spring Boot Spring Batch Spring Heroku Experience in Spring Security Spring Integration Spring Zulu Eureka Netflix Hystrix Expertise in developing SOAP Rest Web Services based on SOAP WSDL JAXWS JAXB JAXRPC JAXRS Handson experience in developing several Microservices using spring boot jersey swagger to communicate through HTTP protocol for implementing SOA approach and web services Proficient in implementation of frameworks like Struts Spring Spring Boot JSF AJAX and Hibernate ORM Used Hibernate as an ORM mapping tool like JPA Entities for mapping Java classes using HQL Experience in working with messaging systems like Kafka Event Sourcing RabbitMQ and Active MQ Experience in creating rules using Business Rules Engines Drools ILOG Experience with Docker leveraging Linux Containers and AMIs to create Docker Images containers Handson Experience in Utilized Kubernetes for the run time environment of the CICD system to build test and deploy in an opensource platform and Splunk data flow components features and product capability Extensive experience in Amazon Web Services like RDS IAM EC2 Redshift SQS SNS Cloud Watch and S3 Experience in working with PCF to deliver applications continuously to every cloud with a single platform Extensive Experience in retrieving and manipulating data from backend using Database SQL queries PLSQL Stored Procedures Functions Sequences Triggers Views and Packages Handson Experience with relational databases Oracle SQL Server DB2 My SQL as well as NoSQL databases like MongoDB Mark Logic Cassandra DynamoDB Highly proficient in designing ntier Enterprise application with J2EE design patterns like IOC AOP MVC Business Delegate Service Locator Session Facade DTO DAO Front Controller Factory and Singleton Handson experience in writing ANT Maven build scripts providing logging facility using Log4j Worked with Version Control Systems like CVS SVN Subversion GIT GitHub Clear case Experience with Tomcat WebLogic Server JBoss and IBM WebSphere Experience in using Design Tools like Rational Rose Enterprise Tool visual paradigm MS Visio Good exposure on using IDES like Eclipse Sublime Text IntelliJ and Net Beans Expertise in Selenium automation using Selenium WebDriver Selenium Grid Junit and Maven Solid experience of DefectTest Management tools like JIRA Quality CentreTest Director Bugzilla Work Experience Java Full Stack Developer OPTUM Eden Prairie MN July 2018 to Present Description Optum delivers solutions to help modernize the health system and improve population health Optum helps in managing the total cost of care reduce risks and improve quality and outcomes for individuals and organizations Optum powers intelligence across the health care system and is infused into all products and services It represents the unique combination of data analytics and expertise that guides action in various ways Responsibilities Involved in Full Cycle of Software Development from Analysis through Design Development Integration and testing phases by following Agile Software Development with Scrum methodology Effectively used Java 8 concepts like Lambda Expressions Collections and Stream API Implemented unique design patterns such as singleton business factory and J2EE design patterns Developed User Interface application modules using HTML CSS and JavaScript JSON jQuery and AJAX Well Versed of DomainDriven Approach in Developing the Enterprise level applications Made enhancements to the WDS Presentation layer using JavaScript utilizing ExtJs libraries and Sencha Tools Effectively Utilized various builtin Widgets of ExtJs to display the data as per the Client requirements Implemented MVC pattern using Spring MVC and integrated with Hibernate ORM Developed Microservices with Spring to retrieve API routes for the entire cluster Using this strategy each Microservice in a cluster can be load balanced and exposed through one API gateway Developed Entity objects and used Hibernate the ORM tool to access persistent data Used Layer7 to provide security for business services Followed RoleBased Authentication using OAuth20 Experience using persistence framework like Hibernate JPA for mapping java classes with Database Developed REST web services as part of a project to achieve Continuous Delivery goal on the highly scalable environment used Docker coupled with loadbalancing tool Nginx Building Securing Authentication for REST API was done by Spring MVC Used Spring MVC annotations for Error Handling in REST API Implemented the business modules integration using Spring and Hibernate data mapping Completed unit testing using Junit and Mockito And utilized POSTMAN Tool to test the REST Services Used Gradle as a Build Process and used generating Documentation Reporting and adding Dependencies Create and update the DB2 database scripts Also used SQL server as an Archival Database Used JMS Queues and Topics to interact with various External Systems as per the Domain Conduct unit testing and maintain the application to ensure strong functionality and optimization Well versed in Deployment procedure using JBoss Server and used Jenkins for Continuous Integration Effectively utilized Chrome inbuilt debugger to resolve and test UI Changes Wrote various Buyin programs Medicare Savings Programs and Low Income Subsidy Programs using Progress Corticon Business Rule Management System BRMS Used Rule Engines to provide Drools Dashboard for Client Used Maintainability Index Tool and Sonar Scanner to check the Maintainability of the Developed Code Used FileZilla to monitor Logs in QA and PROD environments and Resolved Deployment and Build Errors Used various development tools like Eclipse TFS Visual Studio Find Bug SonarQube Data Studio Environment Java 78 JavaScript EXTJS Spring MVC Spring AOP OAuth20 DB2 Hibernate REST JSON Eclipse Gradle JUnit Jenkins Sonar TFS Log4J JBoss EAP 6471 SQL Server Docker JMS NGINX Java Full Stack Developer Liberty Mutual Insurance Warrenville IL November 2017 to June 2018 Description Liberty Mutual Insurance is an American diversified global insurer and the secondlargest property and casualty insurer in the United States Ecommerce application provides services such as Auto Insurance and home insurance The application is used for accessibility into the appropriate Agent Centre applications and generating quotes and policies payments and reports The project includes integration with different thirdparty components like Trans union for insurance score MVR for getting the driver license details app from component to print the Application forms and ID Cards online Responsibilities Worked in a highly dynamic AGILE environment and participated in scrum and sprint meetings Implemented various J2EE design patterns like Singleton Factory Builder etc Extensively used Java 8 features such as lambda expressions Parallel operations on collections multithreading and for effective sorting mechanisms and Streams to store and process the data Implemented Multithreading concept to handle transaction management with isolation and propagation levels Used HTML5 CSS3 JavaScript Bootstrap AngularJS and Nodejs as frontend building Environment Configure and run gulp tasks in Nodejs runtime and handle injection CSS preprocessing test running Developed custom directives Factories and Services in AngularJS and implemented code as per coding standards Used Spring DI Annotations and MVC to implement business and navigation of the application Microservices have been built using Spring boot Spring security and deployed to AWS cloud Used Spring Ribbon along with Spring Boot for load balancing and fault tolerance of the application Spring Quartz for scheduling tasks to generating reports and emails to clients Developed microservices with Spring to retrieve API routes for the entire cluster Using this strategy each microservice in a cluster can be load balanced and exposed through one API gateway Experience in creating RESTful web services using Jersey SPRING framework and JAXRS Implemented RESTful web services to retrieve data from clientside and made REST API calls from AngularJS and parsed the data to project client and handled the security and Authorization using Spring Security OAuth2 Created RESTbased Web Services by establishing links using HATEOAS from Springbased Applications Configured SwaggerUI registered Microservice with Eureka server to monitor service from Spring Boot Implemented the business modules integration using Spring and Hibernate data mapping Developed Entity objects and used Hibernate the ORM tool to access persistent data from MySQL Worked on Proof of Concept for developing an application using Node JS with AngularJS and Mongo DB Maintained structured and surveyed documents within the NoSQL MongoDB database ensuring data integrity correcting anomalies and increasing the overall maintainability of the database Involved in developing APIs and Rest API proxy using APIGEE edge and for sending mobile notifications Published and consumed a stream of records using Producer and Consumer APIs with Spring for Apache Kafka Developed Rules using Rule Engines JBoss Drools Workflows human tasks to implement Business rules validations and provided Drools Dashboard for Business users Configured the Docker Containers and creating Dockers files for different environments Designed and developed the framework to consume the web services hosted in Amazon EC2 instances Experienced with eventdriven and scheduled AWS Lambda functions to trigger various AWS resources Used AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store and retrieve the media files related to the application MYSQL was used as the database for the application which was hosted in the cloud using Amazon RDS service Developed and maintained functions procedures triggers indexes using MYSQL database programming Used Jenkins as the integration tool and improved scalability of applications on crossplatforms Used Maven as a Build Process and used generating Documentation Reporting and adding Dependencies Developed test scripts in Selenium Web Driver using Java Language Developed testing using Junit Used JIRA for resolving bugsdefects in the application by coordinated with team members of the project Used Git as a version control system and deployed the application in a Production environment and implemented Log4J for Logging Errors Involved in Production Support and Maintenance of the application and troubleshooting of Issues on JBoss by checking logs payments etc Environment Java 78 HTML5 CSS3 JavaScript AngularJS 1516 NodeJS Spring Spring Boot Spring MVC Spring Ribbon Spring Quartz Spring Security Jersey JAXRS OAuth2 HATEOAS Apache Kafka SwaggerUI Eureka server APIGEE MySQL Mongo DB AWS Hibernate Drools Dockers REST JSON Eclipse Maven JUnit Selenium Jenkins JIRA Git Log4J JBoss Java Full Stack Developer Sterling Bank Houston TX September 2016 to October 2017 Description Sterling bank offers a secure payment gateway for all types of transactions They are technological expertise for secure transactions Customers can check their transaction details using their secured login into the web portal Customers can manage their account at any time from the web portal Generating reports and online payments can be done through the portal They can also subscribe for monthly statements through mail or email Responsibilities Well versed with complete Life Cycle Development process that includes requirement analysis design implementation testing maintenance and followed Agile methodology Involved in implementing different J2EE design patterns like Service Locator Business Delegate and DAO Implemented Core Java concepts like Multithreading Concurrency Exception Handling and Collections Developed presentation layer using HTML5 CSS3 and client validation using JavaScript DOM JSON Used React JS for creating components and to render views and to update the DOM dynamically Used Bootstrap ReactJS to create Controllers to handle events triggered by clients and send a request to the server With the concept of ReactJs Worked on usage metrics and an end to end events tracing for analysis purpose Used Nodejs for building web applications with clientserver architecture where both can initiate communication in twoway connections and allow them to exchange data Worked on development of MVC Architectural pattern using Spring Framework Spring DI and Annotations Designed and integrated the fullscale Spring Hibernate persistence solution with the application architecture Involved in implementing the Micro Services based on RESTful API utilizing Spring Boot with Spring MVC Worked on RESTful services for transferring and retrieving XML and JSON data between different applications Developed the DAO layer for the application using Spring Hibernate template support Used Hibernate for the persistence layer and used HQL for query purpose Used RabbitMQ message broker to route messages to the clients across the cloud network Wrote Docker files for creating Docker images for microservices and Docker containers for the environment Used Kubernetes to deploy Docker containers Used Eureka service registry of PCF configured for each service to enable communication via the cloud Used inbuilt marketplace services of PCF for RabbitMQ config Used configserver options of PCF for maintaining application properties pertaining to each environment and UserProvidedConfigServer cf cups option for Syslog and Oracle DB connectivity Used NoSQL database Cassandra for proof of concept and having experience in creating a Stored Procedures and having experience in Remote Procedure Call RPC Worked on large datasets to generate insights by using Splunk Converted and automated builds using Maven Scheduled automated nightly builds using Jenkins and maintained Continuous integration effort with Jenkins along with scheduled builds Worked on High level and lowlevel system design planning estimation and implementation Experience in writing Unit Tests using JUnit Mockito Helping application teams in onboarding Splunk and creating dashboards alerts reports etc Experience in using JUnit and build tools such as Maven Worked on Log4j for logging errors messages and performance logs and SVN for version control Deployed and tested the application in UNIX on IBM Web Logic Application Server Environment Java J2EE HTML5 CSS3 JavaScript ReactJS Nodejs Micro Services Spring Hibernate SOA REST RabbitMQ PCF Oracle 11g Cassandra Docker Kubernetes Maven Jenkins Junit Mockito Log4J SVN Web Logic 12c Unix Jr Java Developer Merit Systems Pvt Ltd March 2012 to July 2015 Description Merit Systems vision is to develop software products that would enhance business performance With a focus on the development of cuttingedge software products It has a wide range of products include business process monitoring event monitoring and corporate messaging products We have launched a series of products in the areas of Messaging Business Event Monitoring BEM and Business Process Management BPM Responsibilities Analyze the requirements based on business data and user requirements Created userfriendly GUI interface and Web pages using HTML jQuery and JavaScript Implemented the modules using the ModelViewController MVC design pattern Develop GUI related changes using JSP HTML and client validations using JavaScript Developed Java beans helper classes and Servlets for interacting with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Involved coding SQL Queries Stored Procedures and Triggers Involved in Designing the Database Schema and writing the complex SQL queries using Oracle Created java classes to communicate with the database using JDBC Accessed stored procedures and functions using JDBC Callable statements Deployed Applications on Apache Tomcat Server Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Involved in fixing bugs the bugs or defects in the application Used Log4J for any logging purposes during the development of the application Environment JDK 16 HTML jQuery JAVASCRIPT Servlets JSP XML XSLT Oracle10g SQL PLSQL MS Visio Eclipse JDBC Log4J Apache Tomcat Server Education Masters Skills AWT BEA BEA WEBLOGIC ECLIPSE EJB J2EE JAVA HIBERNATE SPRING JAX JAXRPC JAXWS JBOSS JDK JFC JMS JNDI jQuery JSF JSP Angular Javascript Node Angularjs React",
    "entities": [
        "Nodejs Micro Services",
        "Factories and Services",
        "PROD",
        "Micro Services",
        "Logs",
        "Oracle SQL Server",
        "Used Hibernate",
        "GUI",
        "JavaScript EXTJS",
        "Nodejs",
        "Maven Worked",
        "UNIX",
        "HTTP",
        "Business Process Management BPM Responsibilities Analyze",
        "Oracle Created",
        "Hibernate ORM Developed Microservices",
        "IBM",
        "Jersey SPRING",
        "Business Rules Engines Drools",
        "Developed User Interface",
        "Jenkins for Continuous Integration",
        "XML",
        "the United States Ecommerce",
        "Drools Dashboard for Business users Configured",
        "Hibernate JPA",
        "Dependencies Developed",
        "Logging Errors Involved",
        "Remote Procedure Call RPC Worked",
        "IBM WebSphere",
        "HTML jQuery JAVASCRIPT Servlets",
        "JUnit",
        "JSP Wrote",
        "Selenium WebDriver Selenium Grid Junit",
        "MVC Spring AOP",
        "Scrum Sprint review",
        "Amazon S3",
        "Amazon",
        "Used AWS SDK",
        "Progress Corticon Business Rule Management System",
        "PCF Oracle",
        "External Systems",
        "Utilized Kubernetes",
        "AWT BEA BEA WEBLOGIC",
        "OAuth20",
        "Developed",
        "Mockito",
        "Responsibilities Involved",
        "Trans union for insurance score MVR",
        "Rational Rose Enterprise Tool",
        "Spring and Hibernate",
        "Description Sterling",
        "Develop",
        "SOA",
        "AGILE",
        "JSP",
        "Minneapolis",
        "DefectTest Management",
        "Ntier Architectures",
        "FrontEnd",
        "Virtual Closure",
        "ReactJs Worked",
        "IOC AOP MVC Business Delegate Service",
        "Docker",
        "DOM",
        "Retrospection",
        "Nginx Building Securing Authentication",
        "UI Changes Wrote",
        "MVC",
        "Life Cycle Development",
        "Agile",
        "Resolved Deployment and Build Errors",
        "EJB",
        "Kafka Event Sourcing",
        "Node JS",
        "HTML CSS",
        "API",
        "ExtJs",
        "QA",
        "Authorization using Spring Security OAuth2 Created",
        "Created",
        "Singleton",
        "Producer",
        "ClientServer",
        "Domain Conduct",
        "APIGEE MySQL Mongo DB AWS Hibernate Drools Dockers REST JSON Eclipse Maven JUnit Selenium Jenkins JIRA Git",
        "SAX",
        "JavaScript DOM JSON Used React JS",
        "APIGEE",
        "Completed",
        "Dependencies Create",
        "SQL",
        "Amazon Web Services",
        "JBoss Server",
        "JAXRPC JAXRS Handson",
        "Splunk Converted",
        "DOM Parsers Worked",
        "Medicare Savings Programs",
        "XML DTD",
        "FileZilla",
        "CICD",
        "Bootstrap jQuery Tag Libraries AJAX",
        "IDES",
        "Software Development Life Cycle SDLC Analysis Design Implementation Integration",
        "PCF",
        "Agile Software Development",
        "DTO DAO",
        "Spring Hibernate",
        "Maven",
        "Servlet",
        "Database Developed",
        "CVS SVN Subversion",
        "JavaScript",
        "ANT",
        "Developed Dispatch Action",
        "UI",
        "Messaging Business Event Monitoring BEM",
        "Version Control Systems",
        "Packages Handson",
        "SVN",
        "CSS",
        "Net Beans Expertise",
        "Lambda Expressions Collections",
        "RoleBased Authentication",
        "NoSQL",
        "Application",
        "MVC Architectural",
        "Optum",
        "Microservice",
        "Maven Solid",
        "Auto Insurance"
    ],
    "experience": "Experience in all phases of Software Development Life Cycle SDLC Analysis Design Implementation Integration QA methodologies Test Strategy Test metrics and maintenance of applications Strong experience in software development methodologies like Waterfall Agile TDD Scrum and RAD Participated in Scrum Sprint review Retrospection and Virtual Closure meetings as part of Agile Deep understanding of MVC modelviewcontrol ClientServer and Ntier Architectures Well versed skill in design development and deployment of applications for the J2EE platform using Servlets Struts Spring EJB JSP SOA SOAP REST Microservices ORM JPA JMS JAXP JAXB JUnit Hands on experience in FrontEnd technologies like AngularJS ReactJS NodeJS JavaScript HTML5 CSS3 Bootstrap jQuery Tag Libraries AJAX used for Responsive web page designing Experience in XML technologies like XML DTD XSL XSLT XPATH JAXB SAX and DOM Parsers Worked with Spring Features like Spring MVC Spring DAO Spring Boot Spring Batch Spring Heroku Experience in Spring Security Spring Integration Spring Zulu Eureka Netflix Hystrix Expertise in developing SOAP Rest Web Services based on SOAP WSDL JAXWS JAXB JAXRPC JAXRS Handson experience in developing several Microservices using spring boot jersey swagger to communicate through HTTP protocol for implementing SOA approach and web services Proficient in implementation of frameworks like Struts Spring Spring Boot JSF AJAX and Hibernate ORM Used Hibernate as an ORM mapping tool like JPA Entities for mapping Java classes using HQL Experience in working with messaging systems like Kafka Event Sourcing RabbitMQ and Active MQ Experience in creating rules using Business Rules Engines Drools ILOG Experience with Docker leveraging Linux Containers and AMIs to create Docker Images containers Handson Experience in Utilized Kubernetes for the run time environment of the CICD system to build test and deploy in an opensource platform and Splunk data flow components features and product capability Extensive experience in Amazon Web Services like RDS IAM EC2 Redshift SQS SNS Cloud Watch and S3 Experience in working with PCF to deliver applications continuously to every cloud with a single platform Extensive Experience in retrieving and manipulating data from backend using Database SQL queries PLSQL Stored Procedures Functions Sequences Triggers Views and Packages Handson Experience with relational databases Oracle SQL Server DB2 My SQL as well as NoSQL databases like MongoDB Mark Logic Cassandra DynamoDB Highly proficient in designing ntier Enterprise application with J2EE design patterns like IOC AOP MVC Business Delegate Service Locator Session Facade DTO DAO Front Controller Factory and Singleton Handson experience in writing ANT Maven build scripts providing logging facility using Log4j Worked with Version Control Systems like CVS SVN Subversion GIT GitHub Clear case Experience with Tomcat WebLogic Server JBoss and IBM WebSphere Experience in using Design Tools like Rational Rose Enterprise Tool visual paradigm MS Visio Good exposure on using IDES like Eclipse Sublime Text IntelliJ and Net Beans Expertise in Selenium automation using Selenium WebDriver Selenium Grid Junit and Maven Solid experience of DefectTest Management tools like JIRA Quality CentreTest Director Bugzilla Work Experience Java Full Stack Developer OPTUM Eden Prairie MN July 2018 to Present Description Optum delivers solutions to help modernize the health system and improve population health Optum helps in managing the total cost of care reduce risks and improve quality and outcomes for individuals and organizations Optum powers intelligence across the health care system and is infused into all products and services It represents the unique combination of data analytics and expertise that guides action in various ways Responsibilities Involved in Full Cycle of Software Development from Analysis through Design Development Integration and testing phases by following Agile Software Development with Scrum methodology Effectively used Java 8 concepts like Lambda Expressions Collections and Stream API Implemented unique design patterns such as singleton business factory and J2EE design patterns Developed User Interface application modules using HTML CSS and JavaScript JSON jQuery and AJAX Well Versed of DomainDriven Approach in Developing the Enterprise level applications Made enhancements to the WDS Presentation layer using JavaScript utilizing ExtJs libraries and Sencha Tools Effectively Utilized various builtin Widgets of ExtJs to display the data as per the Client requirements Implemented MVC pattern using Spring MVC and integrated with Hibernate ORM Developed Microservices with Spring to retrieve API routes for the entire cluster Using this strategy each Microservice in a cluster can be load balanced and exposed through one API gateway Developed Entity objects and used Hibernate the ORM tool to access persistent data Used Layer7 to provide security for business services Followed RoleBased Authentication using OAuth20 Experience using persistence framework like Hibernate JPA for mapping java classes with Database Developed REST web services as part of a project to achieve Continuous Delivery goal on the highly scalable environment used Docker coupled with loadbalancing tool Nginx Building Securing Authentication for REST API was done by Spring MVC Used Spring MVC annotations for Error Handling in REST API Implemented the business modules integration using Spring and Hibernate data mapping Completed unit testing using Junit and Mockito And utilized POSTMAN Tool to test the REST Services Used Gradle as a Build Process and used generating Documentation Reporting and adding Dependencies Create and update the DB2 database scripts Also used SQL server as an Archival Database Used JMS Queues and Topics to interact with various External Systems as per the Domain Conduct unit testing and maintain the application to ensure strong functionality and optimization Well versed in Deployment procedure using JBoss Server and used Jenkins for Continuous Integration Effectively utilized Chrome inbuilt debugger to resolve and test UI Changes Wrote various Buyin programs Medicare Savings Programs and Low Income Subsidy Programs using Progress Corticon Business Rule Management System BRMS Used Rule Engines to provide Drools Dashboard for Client Used Maintainability Index Tool and Sonar Scanner to check the Maintainability of the Developed Code Used FileZilla to monitor Logs in QA and PROD environments and Resolved Deployment and Build Errors Used various development tools like Eclipse TFS Visual Studio Find Bug SonarQube Data Studio Environment Java 78 JavaScript EXTJS Spring MVC Spring AOP OAuth20 DB2 Hibernate REST JSON Eclipse Gradle JUnit Jenkins Sonar TFS Log4J JBoss EAP 6471 SQL Server Docker JMS NGINX Java Full Stack Developer Liberty Mutual Insurance Warrenville IL November 2017 to June 2018 Description Liberty Mutual Insurance is an American diversified global insurer and the secondlargest property and casualty insurer in the United States Ecommerce application provides services such as Auto Insurance and home insurance The application is used for accessibility into the appropriate Agent Centre applications and generating quotes and policies payments and reports The project includes integration with different thirdparty components like Trans union for insurance score MVR for getting the driver license details app from component to print the Application forms and ID Cards online Responsibilities Worked in a highly dynamic AGILE environment and participated in scrum and sprint meetings Implemented various J2EE design patterns like Singleton Factory Builder etc Extensively used Java 8 features such as lambda expressions Parallel operations on collections multithreading and for effective sorting mechanisms and Streams to store and process the data Implemented Multithreading concept to handle transaction management with isolation and propagation levels Used HTML5 CSS3 JavaScript Bootstrap AngularJS and Nodejs as frontend building Environment Configure and run gulp tasks in Nodejs runtime and handle injection CSS preprocessing test running Developed custom directives Factories and Services in AngularJS and implemented code as per coding standards Used Spring DI Annotations and MVC to implement business and navigation of the application Microservices have been built using Spring boot Spring security and deployed to AWS cloud Used Spring Ribbon along with Spring Boot for load balancing and fault tolerance of the application Spring Quartz for scheduling tasks to generating reports and emails to clients Developed microservices with Spring to retrieve API routes for the entire cluster Using this strategy each microservice in a cluster can be load balanced and exposed through one API gateway Experience in creating RESTful web services using Jersey SPRING framework and JAXRS Implemented RESTful web services to retrieve data from clientside and made REST API calls from AngularJS and parsed the data to project client and handled the security and Authorization using Spring Security OAuth2 Created RESTbased Web Services by establishing links using HATEOAS from Springbased Applications Configured SwaggerUI registered Microservice with Eureka server to monitor service from Spring Boot Implemented the business modules integration using Spring and Hibernate data mapping Developed Entity objects and used Hibernate the ORM tool to access persistent data from MySQL Worked on Proof of Concept for developing an application using Node JS with AngularJS and Mongo DB Maintained structured and surveyed documents within the NoSQL MongoDB database ensuring data integrity correcting anomalies and increasing the overall maintainability of the database Involved in developing APIs and Rest API proxy using APIGEE edge and for sending mobile notifications Published and consumed a stream of records using Producer and Consumer APIs with Spring for Apache Kafka Developed Rules using Rule Engines JBoss Drools Workflows human tasks to implement Business rules validations and provided Drools Dashboard for Business users Configured the Docker Containers and creating Dockers files for different environments Designed and developed the framework to consume the web services hosted in Amazon EC2 instances Experienced with eventdriven and scheduled AWS Lambda functions to trigger various AWS resources Used AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store and retrieve the media files related to the application MYSQL was used as the database for the application which was hosted in the cloud using Amazon RDS service Developed and maintained functions procedures triggers indexes using MYSQL database programming Used Jenkins as the integration tool and improved scalability of applications on crossplatforms Used Maven as a Build Process and used generating Documentation Reporting and adding Dependencies Developed test scripts in Selenium Web Driver using Java Language Developed testing using Junit Used JIRA for resolving bugsdefects in the application by coordinated with team members of the project Used Git as a version control system and deployed the application in a Production environment and implemented Log4J for Logging Errors Involved in Production Support and Maintenance of the application and troubleshooting of Issues on JBoss by checking logs payments etc Environment Java 78 HTML5 CSS3 JavaScript AngularJS 1516 NodeJS Spring Spring Boot Spring MVC Spring Ribbon Spring Quartz Spring Security Jersey JAXRS OAuth2 HATEOAS Apache Kafka SwaggerUI Eureka server APIGEE MySQL Mongo DB AWS Hibernate Drools Dockers REST JSON Eclipse Maven JUnit Selenium Jenkins JIRA Git Log4J JBoss Java Full Stack Developer Sterling Bank Houston TX September 2016 to October 2017 Description Sterling bank offers a secure payment gateway for all types of transactions They are technological expertise for secure transactions Customers can check their transaction details using their secured login into the web portal Customers can manage their account at any time from the web portal Generating reports and online payments can be done through the portal They can also subscribe for monthly statements through mail or email Responsibilities Well versed with complete Life Cycle Development process that includes requirement analysis design implementation testing maintenance and followed Agile methodology Involved in implementing different J2EE design patterns like Service Locator Business Delegate and DAO Implemented Core Java concepts like Multithreading Concurrency Exception Handling and Collections Developed presentation layer using HTML5 CSS3 and client validation using JavaScript DOM JSON Used React JS for creating components and to render views and to update the DOM dynamically Used Bootstrap ReactJS to create Controllers to handle events triggered by clients and send a request to the server With the concept of ReactJs Worked on usage metrics and an end to end events tracing for analysis purpose Used Nodejs for building web applications with clientserver architecture where both can initiate communication in twoway connections and allow them to exchange data Worked on development of MVC Architectural pattern using Spring Framework Spring DI and Annotations Designed and integrated the fullscale Spring Hibernate persistence solution with the application architecture Involved in implementing the Micro Services based on RESTful API utilizing Spring Boot with Spring MVC Worked on RESTful services for transferring and retrieving XML and JSON data between different applications Developed the DAO layer for the application using Spring Hibernate template support Used Hibernate for the persistence layer and used HQL for query purpose Used RabbitMQ message broker to route messages to the clients across the cloud network Wrote Docker files for creating Docker images for microservices and Docker containers for the environment Used Kubernetes to deploy Docker containers Used Eureka service registry of PCF configured for each service to enable communication via the cloud Used inbuilt marketplace services of PCF for RabbitMQ config Used configserver options of PCF for maintaining application properties pertaining to each environment and UserProvidedConfigServer cf cups option for Syslog and Oracle DB connectivity Used NoSQL database Cassandra for proof of concept and having experience in creating a Stored Procedures and having experience in Remote Procedure Call RPC Worked on large datasets to generate insights by using Splunk Converted and automated builds using Maven Scheduled automated nightly builds using Jenkins and maintained Continuous integration effort with Jenkins along with scheduled builds Worked on High level and lowlevel system design planning estimation and implementation Experience in writing Unit Tests using JUnit Mockito Helping application teams in onboarding Splunk and creating dashboards alerts reports etc Experience in using JUnit and build tools such as Maven Worked on Log4j for logging errors messages and performance logs and SVN for version control Deployed and tested the application in UNIX on IBM Web Logic Application Server Environment Java J2EE HTML5 CSS3 JavaScript ReactJS Nodejs Micro Services Spring Hibernate SOA REST RabbitMQ PCF Oracle 11 g Cassandra Docker Kubernetes Maven Jenkins Junit Mockito Log4J SVN Web Logic 12c Unix Jr Java Developer Merit Systems Pvt Ltd March 2012 to July 2015 Description Merit Systems vision is to develop software products that would enhance business performance With a focus on the development of cuttingedge software products It has a wide range of products include business process monitoring event monitoring and corporate messaging products We have launched a series of products in the areas of Messaging Business Event Monitoring BEM and Business Process Management BPM Responsibilities Analyze the requirements based on business data and user requirements Created userfriendly GUI interface and Web pages using HTML jQuery and JavaScript Implemented the modules using the ModelViewController MVC design pattern Develop GUI related changes using JSP HTML and client validations using JavaScript Developed Java beans helper classes and Servlets for interacting with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Involved coding SQL Queries Stored Procedures and Triggers Involved in Designing the Database Schema and writing the complex SQL queries using Oracle Created java classes to communicate with the database using JDBC Accessed stored procedures and functions using JDBC Callable statements Deployed Applications on Apache Tomcat Server Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Involved in fixing bugs the bugs or defects in the application Used Log4J for any logging purposes during the development of the application Environment JDK 16 HTML jQuery JAVASCRIPT Servlets JSP XML XSLT Oracle10 g SQL PLSQL MS Visio Eclipse JDBC Log4J Apache Tomcat Server Education Masters Skills AWT BEA BEA WEBLOGIC ECLIPSE EJB J2EE JAVA HIBERNATE SPRING JAX JAXRPC JAXWS JBOSS JDK JFC JMS JNDI jQuery JSF JSP Angular Javascript Node Angularjs React",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Minneapolis",
        "MN",
        "years",
        "experience",
        "designing",
        "building",
        "web",
        "applications",
        "Java",
        "J2EE",
        "Experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Analysis",
        "Design",
        "Implementation",
        "Integration",
        "QA",
        "methodologies",
        "Test",
        "Strategy",
        "Test",
        "metrics",
        "maintenance",
        "applications",
        "experience",
        "software",
        "development",
        "methodologies",
        "Waterfall",
        "Agile",
        "TDD",
        "Scrum",
        "RAD",
        "Scrum",
        "Sprint",
        "review",
        "Retrospection",
        "Virtual",
        "Closure",
        "meetings",
        "part",
        "Agile",
        "Deep",
        "understanding",
        "MVC",
        "modelviewcontrol",
        "ClientServer",
        "Ntier",
        "Architectures",
        "Well",
        "skill",
        "design",
        "development",
        "deployment",
        "applications",
        "J2EE",
        "platform",
        "Servlets",
        "Struts",
        "Spring",
        "EJB",
        "JSP",
        "SOA",
        "SOAP",
        "REST",
        "Microservices",
        "ORM",
        "JPA",
        "JMS",
        "JAXP",
        "JAXB",
        "JUnit",
        "Hands",
        "experience",
        "FrontEnd",
        "technologies",
        "AngularJS",
        "ReactJS",
        "NodeJS",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "jQuery",
        "Tag",
        "Libraries",
        "AJAX",
        "web",
        "page",
        "Experience",
        "XML",
        "technologies",
        "XML",
        "DTD",
        "XSL",
        "XSLT",
        "XPATH",
        "JAXB",
        "SAX",
        "DOM",
        "Parsers",
        "Spring",
        "Features",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "Boot",
        "Spring",
        "Batch",
        "Spring",
        "Heroku",
        "Experience",
        "Spring",
        "Security",
        "Spring",
        "Integration",
        "Spring",
        "Zulu",
        "Eureka",
        "Netflix",
        "Hystrix",
        "Expertise",
        "SOAP",
        "Rest",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "JAXWS",
        "JAXB",
        "JAXRPC",
        "JAXRS",
        "Handson",
        "experience",
        "Microservices",
        "spring",
        "boot",
        "jersey",
        "swagger",
        "HTTP",
        "protocol",
        "SOA",
        "approach",
        "web",
        "services",
        "Proficient",
        "implementation",
        "frameworks",
        "Struts",
        "Spring",
        "Spring",
        "Boot",
        "JSF",
        "AJAX",
        "Hibernate",
        "ORM",
        "Hibernate",
        "ORM",
        "mapping",
        "tool",
        "JPA",
        "Entities",
        "mapping",
        "Java",
        "classes",
        "HQL",
        "Experience",
        "systems",
        "Kafka",
        "Event",
        "Sourcing",
        "RabbitMQ",
        "MQ",
        "Experience",
        "rules",
        "Business",
        "Rules",
        "Engines",
        "Drools",
        "Experience",
        "Docker",
        "Linux",
        "Containers",
        "AMIs",
        "Docker",
        "Images",
        "containers",
        "Handson",
        "Experience",
        "Kubernetes",
        "time",
        "environment",
        "CICD",
        "system",
        "test",
        "platform",
        "Splunk",
        "data",
        "flow",
        "components",
        "features",
        "product",
        "capability",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "RDS",
        "IAM",
        "EC2",
        "Redshift",
        "SQS",
        "SNS",
        "Cloud",
        "Watch",
        "S3",
        "Experience",
        "PCF",
        "applications",
        "cloud",
        "platform",
        "Experience",
        "data",
        "Database",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Sequences",
        "Triggers",
        "Views",
        "Packages",
        "Handson",
        "Experience",
        "databases",
        "Oracle",
        "SQL",
        "Server",
        "DB2",
        "SQL",
        "NoSQL",
        "MongoDB",
        "Mark",
        "Logic",
        "Cassandra",
        "DynamoDB",
        "ntier",
        "Enterprise",
        "application",
        "J2EE",
        "design",
        "patterns",
        "IOC",
        "AOP",
        "MVC",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "Session",
        "Facade",
        "DTO",
        "DAO",
        "Front",
        "Controller",
        "Factory",
        "Singleton",
        "Handson",
        "experience",
        "ANT",
        "Maven",
        "scripts",
        "facility",
        "Log4j",
        "Version",
        "Control",
        "Systems",
        "CVS",
        "SVN",
        "Subversion",
        "GIT",
        "GitHub",
        "Clear",
        "case",
        "Experience",
        "Tomcat",
        "WebLogic",
        "Server",
        "JBoss",
        "IBM",
        "WebSphere",
        "Experience",
        "Design",
        "Tools",
        "Rational",
        "Rose",
        "Enterprise",
        "Tool",
        "paradigm",
        "MS",
        "Visio",
        "exposure",
        "IDES",
        "Eclipse",
        "Sublime",
        "Text",
        "IntelliJ",
        "Net",
        "Beans",
        "Expertise",
        "Selenium",
        "automation",
        "Selenium",
        "WebDriver",
        "Selenium",
        "Grid",
        "Junit",
        "Maven",
        "experience",
        "DefectTest",
        "Management",
        "tools",
        "JIRA",
        "Quality",
        "CentreTest",
        "Director",
        "Bugzilla",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "OPTUM",
        "Eden",
        "Prairie",
        "MN",
        "July",
        "Present",
        "Description",
        "Optum",
        "solutions",
        "health",
        "system",
        "population",
        "health",
        "Optum",
        "cost",
        "care",
        "risks",
        "quality",
        "outcomes",
        "individuals",
        "organizations",
        "Optum",
        "powers",
        "intelligence",
        "health",
        "care",
        "system",
        "products",
        "services",
        "combination",
        "data",
        "analytics",
        "expertise",
        "action",
        "ways",
        "Responsibilities",
        "Cycle",
        "Software",
        "Development",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "testing",
        "phases",
        "Agile",
        "Software",
        "Development",
        "Scrum",
        "methodology",
        "Java",
        "concepts",
        "Lambda",
        "Expressions",
        "Collections",
        "Stream",
        "API",
        "design",
        "patterns",
        "singleton",
        "business",
        "factory",
        "J2EE",
        "design",
        "patterns",
        "Developed",
        "User",
        "Interface",
        "application",
        "modules",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "jQuery",
        "AJAX",
        "DomainDriven",
        "Approach",
        "Enterprise",
        "level",
        "applications",
        "enhancements",
        "WDS",
        "Presentation",
        "layer",
        "JavaScript",
        "ExtJs",
        "libraries",
        "Sencha",
        "Tools",
        "Widgets",
        "ExtJs",
        "data",
        "Client",
        "requirements",
        "MVC",
        "pattern",
        "Spring",
        "MVC",
        "Hibernate",
        "ORM",
        "Microservices",
        "Spring",
        "API",
        "routes",
        "cluster",
        "strategy",
        "Microservice",
        "cluster",
        "load",
        "API",
        "gateway",
        "Entity",
        "objects",
        "Hibernate",
        "ORM",
        "tool",
        "data",
        "Layer7",
        "security",
        "business",
        "services",
        "RoleBased",
        "Authentication",
        "OAuth20",
        "Experience",
        "persistence",
        "framework",
        "Hibernate",
        "JPA",
        "mapping",
        "classes",
        "Database",
        "Developed",
        "REST",
        "web",
        "services",
        "part",
        "project",
        "Continuous",
        "Delivery",
        "goal",
        "environment",
        "Docker",
        "loadbalancing",
        "tool",
        "Nginx",
        "Building",
        "Securing",
        "Authentication",
        "REST",
        "API",
        "Spring",
        "MVC",
        "Spring",
        "MVC",
        "annotations",
        "Error",
        "Handling",
        "REST",
        "API",
        "business",
        "modules",
        "integration",
        "Spring",
        "Hibernate",
        "data",
        "mapping",
        "unit",
        "testing",
        "Junit",
        "Mockito",
        "POSTMAN",
        "Tool",
        "REST",
        "Services",
        "Gradle",
        "Build",
        "Process",
        "Documentation",
        "Reporting",
        "Dependencies",
        "DB2",
        "database",
        "scripts",
        "SQL",
        "server",
        "Archival",
        "Database",
        "JMS",
        "Queues",
        "Topics",
        "External",
        "Systems",
        "Domain",
        "Conduct",
        "unit",
        "testing",
        "application",
        "functionality",
        "optimization",
        "Deployment",
        "procedure",
        "JBoss",
        "Server",
        "Jenkins",
        "Continuous",
        "Integration",
        "Chrome",
        "debugger",
        "UI",
        "Changes",
        "Buyin",
        "programs",
        "Medicare",
        "Savings",
        "Programs",
        "Low",
        "Income",
        "Subsidy",
        "Programs",
        "Progress",
        "Corticon",
        "Business",
        "Rule",
        "Management",
        "System",
        "BRMS",
        "Rule",
        "Engines",
        "Drools",
        "Dashboard",
        "Client",
        "Used",
        "Maintainability",
        "Index",
        "Tool",
        "Sonar",
        "Scanner",
        "Maintainability",
        "Developed",
        "Code",
        "FileZilla",
        "Logs",
        "QA",
        "environments",
        "Resolved",
        "Deployment",
        "Build",
        "Errors",
        "development",
        "tools",
        "Eclipse",
        "TFS",
        "Visual",
        "Studio",
        "Bug",
        "SonarQube",
        "Data",
        "Studio",
        "Environment",
        "Java",
        "JavaScript",
        "EXTJS",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "OAuth20",
        "DB2",
        "Hibernate",
        "REST",
        "JSON",
        "Eclipse",
        "Gradle",
        "JUnit",
        "Jenkins",
        "Sonar",
        "TFS",
        "Log4J",
        "JBoss",
        "EAP",
        "SQL",
        "Server",
        "Docker",
        "JMS",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Liberty",
        "Mutual",
        "Insurance",
        "Warrenville",
        "IL",
        "November",
        "June",
        "Description",
        "Liberty",
        "Mutual",
        "Insurance",
        "insurer",
        "property",
        "casualty",
        "insurer",
        "United",
        "States",
        "Ecommerce",
        "application",
        "services",
        "Auto",
        "Insurance",
        "home",
        "insurance",
        "application",
        "accessibility",
        "Agent",
        "Centre",
        "applications",
        "generating",
        "quotes",
        "policies",
        "payments",
        "project",
        "integration",
        "thirdparty",
        "components",
        "Trans",
        "union",
        "insurance",
        "score",
        "MVR",
        "driver",
        "license",
        "details",
        "component",
        "Application",
        "forms",
        "ID",
        "Cards",
        "Responsibilities",
        "environment",
        "scrum",
        "sprint",
        "meetings",
        "J2EE",
        "design",
        "patterns",
        "Singleton",
        "Factory",
        "Builder",
        "Java",
        "features",
        "expressions",
        "operations",
        "collections",
        "mechanisms",
        "Streams",
        "data",
        "Multithreading",
        "concept",
        "transaction",
        "management",
        "isolation",
        "propagation",
        "levels",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "AngularJS",
        "Nodejs",
        "frontend",
        "Environment",
        "Configure",
        "tasks",
        "Nodejs",
        "runtime",
        "injection",
        "CSS",
        "preprocessing",
        "test",
        "custom",
        "directives",
        "Factories",
        "Services",
        "AngularJS",
        "code",
        "standards",
        "Spring",
        "DI",
        "Annotations",
        "MVC",
        "business",
        "navigation",
        "application",
        "Microservices",
        "Spring",
        "boot",
        "Spring",
        "security",
        "AWS",
        "cloud",
        "Spring",
        "Ribbon",
        "Spring",
        "Boot",
        "load",
        "balancing",
        "tolerance",
        "application",
        "Spring",
        "Quartz",
        "scheduling",
        "tasks",
        "reports",
        "emails",
        "clients",
        "microservices",
        "Spring",
        "API",
        "routes",
        "cluster",
        "strategy",
        "microservice",
        "cluster",
        "load",
        "API",
        "gateway",
        "Experience",
        "web",
        "services",
        "Jersey",
        "SPRING",
        "framework",
        "JAXRS",
        "web",
        "services",
        "data",
        "REST",
        "API",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "OAuth2",
        "Created",
        "RESTbased",
        "Web",
        "Services",
        "links",
        "HATEOAS",
        "Springbased",
        "Applications",
        "Configured",
        "SwaggerUI",
        "Microservice",
        "Eureka",
        "server",
        "service",
        "Spring",
        "Boot",
        "business",
        "modules",
        "integration",
        "Spring",
        "Hibernate",
        "data",
        "mapping",
        "Entity",
        "objects",
        "Hibernate",
        "ORM",
        "tool",
        "data",
        "MySQL",
        "Worked",
        "Proof",
        "Concept",
        "application",
        "Node",
        "JS",
        "AngularJS",
        "Mongo",
        "DB",
        "documents",
        "NoSQL",
        "MongoDB",
        "database",
        "data",
        "integrity",
        "anomalies",
        "maintainability",
        "database",
        "APIs",
        "Rest",
        "API",
        "proxy",
        "APIGEE",
        "edge",
        "notifications",
        "stream",
        "records",
        "Producer",
        "Consumer",
        "APIs",
        "Spring",
        "Apache",
        "Kafka",
        "Developed",
        "Rules",
        "Rule",
        "Engines",
        "JBoss",
        "Drools",
        "Workflows",
        "tasks",
        "Business",
        "rules",
        "validations",
        "Drools",
        "Dashboard",
        "Business",
        "users",
        "Docker",
        "Containers",
        "Dockers",
        "files",
        "environments",
        "framework",
        "web",
        "services",
        "Amazon",
        "EC2",
        "instances",
        "AWS",
        "Lambda",
        "functions",
        "AWS",
        "resources",
        "AWS",
        "SDK",
        "connection",
        "Amazon",
        "S3",
        "buckets",
        "object",
        "storage",
        "service",
        "media",
        "files",
        "application",
        "MYSQL",
        "database",
        "application",
        "cloud",
        "Amazon",
        "RDS",
        "service",
        "functions",
        "procedures",
        "indexes",
        "MYSQL",
        "database",
        "programming",
        "Jenkins",
        "integration",
        "tool",
        "scalability",
        "applications",
        "crossplatforms",
        "Maven",
        "Build",
        "Process",
        "Documentation",
        "Reporting",
        "Dependencies",
        "test",
        "scripts",
        "Selenium",
        "Web",
        "Driver",
        "Java",
        "Language",
        "Developed",
        "testing",
        "Junit",
        "JIRA",
        "bugsdefects",
        "application",
        "team",
        "members",
        "project",
        "Git",
        "version",
        "control",
        "system",
        "application",
        "Production",
        "environment",
        "Log4J",
        "Logging",
        "Errors",
        "Production",
        "Support",
        "Maintenance",
        "application",
        "troubleshooting",
        "Issues",
        "JBoss",
        "logs",
        "payments",
        "Environment",
        "Java",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Spring",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "Ribbon",
        "Spring",
        "Quartz",
        "Spring",
        "Security",
        "Jersey",
        "JAXRS",
        "OAuth2",
        "HATEOAS",
        "Apache",
        "Kafka",
        "SwaggerUI",
        "Eureka",
        "server",
        "APIGEE",
        "MySQL",
        "Mongo",
        "DB",
        "AWS",
        "Hibernate",
        "Drools",
        "Dockers",
        "JSON",
        "Eclipse",
        "Maven",
        "JUnit",
        "Selenium",
        "Jenkins",
        "JIRA",
        "Git",
        "Log4J",
        "JBoss",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Sterling",
        "Bank",
        "Houston",
        "TX",
        "September",
        "October",
        "Description",
        "Sterling",
        "bank",
        "payment",
        "gateway",
        "types",
        "transactions",
        "expertise",
        "transactions",
        "Customers",
        "transaction",
        "details",
        "login",
        "web",
        "Customers",
        "account",
        "time",
        "web",
        "Generating",
        "reports",
        "payments",
        "portal",
        "statements",
        "mail",
        "email",
        "Responsibilities",
        "Life",
        "Cycle",
        "Development",
        "process",
        "requirement",
        "analysis",
        "design",
        "implementation",
        "testing",
        "maintenance",
        "methodology",
        "J2EE",
        "design",
        "patterns",
        "Service",
        "Locator",
        "Business",
        "Delegate",
        "DAO",
        "Core",
        "Java",
        "concepts",
        "Multithreading",
        "Concurrency",
        "Exception",
        "Handling",
        "Collections",
        "presentation",
        "layer",
        "HTML5",
        "CSS3",
        "client",
        "validation",
        "JavaScript",
        "DOM",
        "JSON",
        "React",
        "JS",
        "components",
        "views",
        "DOM",
        "Bootstrap",
        "ReactJS",
        "Controllers",
        "events",
        "clients",
        "request",
        "server",
        "concept",
        "ReactJs",
        "usage",
        "metrics",
        "end",
        "events",
        "analysis",
        "purpose",
        "Nodejs",
        "web",
        "applications",
        "architecture",
        "communication",
        "twoway",
        "connections",
        "data",
        "development",
        "MVC",
        "Architectural",
        "pattern",
        "Spring",
        "Framework",
        "Spring",
        "DI",
        "Annotations",
        "Spring",
        "Hibernate",
        "persistence",
        "solution",
        "application",
        "architecture",
        "Micro",
        "Services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "services",
        "XML",
        "data",
        "applications",
        "DAO",
        "layer",
        "application",
        "Spring",
        "Hibernate",
        "template",
        "support",
        "Hibernate",
        "persistence",
        "layer",
        "HQL",
        "query",
        "purpose",
        "RabbitMQ",
        "message",
        "broker",
        "messages",
        "clients",
        "cloud",
        "network",
        "Wrote",
        "Docker",
        "Docker",
        "images",
        "microservices",
        "Docker",
        "containers",
        "environment",
        "Kubernetes",
        "Docker",
        "containers",
        "Eureka",
        "service",
        "registry",
        "PCF",
        "service",
        "communication",
        "cloud",
        "marketplace",
        "services",
        "PCF",
        "RabbitMQ",
        "config",
        "options",
        "PCF",
        "application",
        "properties",
        "environment",
        "cf",
        "cups",
        "option",
        "Syslog",
        "Oracle",
        "DB",
        "connectivity",
        "NoSQL",
        "database",
        "Cassandra",
        "proof",
        "concept",
        "experience",
        "Stored",
        "Procedures",
        "experience",
        "Remote",
        "Procedure",
        "RPC",
        "datasets",
        "insights",
        "Splunk",
        "Converted",
        "builds",
        "Maven",
        "Scheduled",
        "builds",
        "Jenkins",
        "integration",
        "effort",
        "Jenkins",
        "builds",
        "level",
        "lowlevel",
        "system",
        "design",
        "planning",
        "estimation",
        "implementation",
        "Experience",
        "Unit",
        "Tests",
        "JUnit",
        "Mockito",
        "application",
        "teams",
        "Splunk",
        "dashboards",
        "alerts",
        "reports",
        "Experience",
        "JUnit",
        "tools",
        "Maven",
        "Worked",
        "Log4j",
        "errors",
        "messages",
        "performance",
        "logs",
        "SVN",
        "version",
        "control",
        "Deployed",
        "application",
        "UNIX",
        "IBM",
        "Web",
        "Logic",
        "Application",
        "Server",
        "Environment",
        "Java",
        "J2EE",
        "HTML5",
        "CSS3",
        "JavaScript",
        "ReactJS",
        "Nodejs",
        "Micro",
        "Services",
        "Spring",
        "Hibernate",
        "SOA",
        "REST",
        "PCF",
        "Oracle",
        "g",
        "Cassandra",
        "Docker",
        "Kubernetes",
        "Maven",
        "Jenkins",
        "Junit",
        "Mockito",
        "Log4J",
        "SVN",
        "Web",
        "Logic",
        "12c",
        "Unix",
        "Jr",
        "Java",
        "Developer",
        "Merit",
        "Systems",
        "Pvt",
        "Ltd",
        "March",
        "July",
        "Description",
        "Merit",
        "Systems",
        "vision",
        "software",
        "products",
        "business",
        "performance",
        "focus",
        "development",
        "cuttingedge",
        "software",
        "products",
        "range",
        "products",
        "business",
        "process",
        "event",
        "monitoring",
        "messaging",
        "products",
        "series",
        "products",
        "areas",
        "Business",
        "Event",
        "Monitoring",
        "BEM",
        "Business",
        "Process",
        "Management",
        "BPM",
        "Responsibilities",
        "requirements",
        "business",
        "data",
        "user",
        "requirements",
        "GUI",
        "interface",
        "Web",
        "pages",
        "HTML",
        "jQuery",
        "JavaScript",
        "modules",
        "ModelViewController",
        "MVC",
        "design",
        "pattern",
        "Develop",
        "GUI",
        "changes",
        "JSP",
        "HTML",
        "client",
        "validations",
        "JavaScript",
        "Developed",
        "Java",
        "beans",
        "helper",
        "classes",
        "Servlets",
        "UI",
        "JSP",
        "controller",
        "Servlet",
        "requests",
        "classes",
        "Dispatch",
        "Action",
        "classes",
        "business",
        "methods",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Designing",
        "Database",
        "Schema",
        "SQL",
        "queries",
        "Oracle",
        "Created",
        "classes",
        "database",
        "JDBC",
        "procedures",
        "functions",
        "JDBC",
        "statements",
        "Deployed",
        "Applications",
        "Apache",
        "Tomcat",
        "Server",
        "unit",
        "testing",
        "troubleshooting",
        "Modifying",
        "programs",
        "enhancements",
        "bugs",
        "bugs",
        "defects",
        "application",
        "Log4J",
        "purposes",
        "development",
        "application",
        "Environment",
        "JDK",
        "HTML",
        "jQuery",
        "JAVASCRIPT",
        "Servlets",
        "JSP",
        "XML",
        "XSLT",
        "Oracle10",
        "g",
        "SQL",
        "PLSQL",
        "MS",
        "Visio",
        "Eclipse",
        "JDBC",
        "Log4J",
        "Apache",
        "Tomcat",
        "Server",
        "Education",
        "Masters",
        "Skills",
        "AWT",
        "BEA",
        "BEA",
        "WEBLOGIC",
        "ECLIPSE",
        "EJB",
        "J2EE",
        "HIBERNATE",
        "SPRING",
        "JAX",
        "JAXRPC",
        "JAXWS",
        "JBOSS",
        "JDK",
        "JFC",
        "JMS",
        "JNDI",
        "jQuery",
        "JSF",
        "JSP",
        "Angular",
        "Javascript",
        "Node",
        "Angularjs",
        "React"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:23:19.227274",
    "resume_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Minneapolis MN Over 6 years of professional experience in designing and building web applications using Java J2EE Experience in all phases of Software Development Life Cycle SDLC Analysis Design Implementation Integration QA methodologies Test Strategy Test metrics and maintenance of applications Strong experience in software development methodologies like Waterfall Agile TDD Scrum and RAD Participated in Scrum Sprint review Retrospection and Virtual Closure meetings as part of Agile Deep understanding of MVC modelviewcontrol ClientServer and Ntier Architectures Well versed skill in design development and deployment of applications for the J2EE platform using Servlets Struts Spring EJB JSP SOA SOAP REST Microservices ORM JPA JMS JAXP JAXB JUnit Hands on experience in FrontEnd technologies like AngularJS ReactJS NodeJS JavaScript HTML5 CSS3 Bootstrap jQuery Tag Libraries AJAX used for Responsive web page designing Experience in XML technologies like XML DTD XSL XSLT XPATH JAXB SAX and DOM Parsers Worked with Spring Features like Spring MVC Spring DAO Spring Boot Spring Batch Spring Heroku Experience in Spring Security Spring Integration Spring Zulu Eureka Netflix Hystrix Expertise in developing SOAP Rest Web Services based on SOAP WSDL JAXWS JAXB JAXRPC JAXRS Handson experience in developing several Microservices using spring boot jersey swagger to communicate through HTTP protocol for implementing SOA approach and web services Proficient in implementation of frameworks like Struts Spring Spring Boot JSF AJAX and Hibernate ORM Used Hibernate as an ORM mapping tool like JPA Entities for mapping Java classes using HQL Experience in working with messaging systems like Kafka Event Sourcing RabbitMQ and Active MQ Experience in creating rules using Business Rules Engines Drools ILOG Experience with Docker leveraging Linux Containers and AMIs to create Docker Images containers Handson Experience in Utilized Kubernetes for the run time environment of the CICD system to build test and deploy in an opensource platform and Splunk data flow components features and product capability Extensive experience in Amazon Web Services like RDS IAM EC2 Redshift SQS SNS Cloud Watch and S3 Experience in working with PCF to deliver applications continuously to every cloud with a single platform Extensive Experience in retrieving and manipulating data from backend using Database SQL queries PLSQL Stored Procedures Functions Sequences Triggers Views and Packages Handson Experience with relational databases Oracle SQL Server DB2 My SQL as well as NoSQL databases like MongoDB Mark Logic Cassandra DynamoDB Highly proficient in designing ntier Enterprise application with J2EE design patterns like IOC AOP MVC Business Delegate Service Locator Session Facade DTO DAO Front Controller Factory and Singleton Handson experience in writing ANT Maven build scripts providing logging facility using Log4j Worked with Version Control Systems like CVS SVN Subversion GIT GitHub Clear case Experience with Tomcat WebLogic Server JBoss and IBM WebSphere Experience in using Design Tools like Rational Rose Enterprise Tool visual paradigm MS Visio Good exposure on using IDES like Eclipse Sublime Text IntelliJ and Net Beans Expertise in Selenium automation using Selenium WebDriver Selenium Grid Junit and Maven Solid experience of DefectTest Management tools like JIRA Quality CentreTest Director Bugzilla Work Experience Java Full Stack Developer OPTUM Eden Prairie MN July 2018 to Present Description Optum delivers solutions to help modernize the health system and improve population health Optum helps in managing the total cost of care reduce risks and improve quality and outcomes for individuals and organizations Optum powers intelligence across the health care system and is infused into all products and services It represents the unique combination of data analytics and expertise that guides action in various ways Responsibilities Involved in Full Cycle of Software Development from Analysis through Design Development Integration and testing phases by following Agile Software Development with Scrum methodology Effectively used Java 8 concepts like Lambda Expressions Collections and Stream API Implemented unique design patterns such as singleton business factory and J2EE design patterns Developed User Interface application modules using HTML CSS and JavaScript JSON jQuery and AJAX Well Versed of DomainDriven Approach in Developing the Enterprise level applications Made enhancements to the WDS Presentation layer using JavaScript utilizing ExtJs libraries and Sencha Tools Effectively Utilized various builtin Widgets of ExtJs to display the data as per the Client requirements Implemented MVC pattern using Spring MVC and integrated with Hibernate ORM Developed Microservices with Spring to retrieve API routes for the entire cluster Using this strategy each Microservice in a cluster can be load balanced and exposed through one API gateway Developed Entity objects and used Hibernate the ORM tool to access persistent data Used Layer7 to provide security for business services Followed RoleBased Authentication using OAuth20 Experience using persistence framework like Hibernate JPA for mapping java classes with Database Developed REST web services as part of a project to achieve Continuous Delivery goal on the highly scalable environment used Docker coupled with loadbalancing tool Nginx Building Securing Authentication for REST API was done by Spring MVC Used Spring MVC annotations for Error Handling in REST API Implemented the business modules integration using Spring and Hibernate data mapping Completed unit testing using Junit and Mockito And utilized POSTMAN Tool to test the REST Services Used Gradle as a Build Process and used generating Documentation Reporting and adding Dependencies Create and update the DB2 database scripts Also used SQL server as an Archival Database Used JMS Queues and Topics to interact with various External Systems as per the Domain Conduct unit testing and maintain the application to ensure strong functionality and optimization Well versed in Deployment procedure using JBoss Server and used Jenkins for Continuous Integration Effectively utilized Chrome inbuilt debugger to resolve and test UI Changes Wrote various Buyin programs Medicare Savings Programs and Low Income Subsidy Programs using Progress Corticon Business Rule Management System BRMS Used Rule Engines to provide Drools Dashboard for Client Used Maintainability Index Tool and Sonar Scanner to check the Maintainability of the Developed Code Used FileZilla to monitor Logs in QA and PROD environments and Resolved Deployment and Build Errors Used various development tools like Eclipse TFS Visual Studio Find Bug SonarQube Data Studio Environment Java 78 JavaScript EXTJS Spring MVC Spring AOP OAuth20 DB2 Hibernate REST JSON Eclipse Gradle JUnit Jenkins Sonar TFS Log4J JBoss EAP 6471 SQL Server Docker JMS NGINX Java Full Stack Developer Liberty Mutual Insurance Warrenville IL November 2017 to June 2018 Description Liberty Mutual Insurance is an American diversified global insurer and the secondlargest property and casualty insurer in the United States Ecommerce application provides services such as Auto Insurance and home insurance The application is used for accessibility into the appropriate Agent Centre applications and generating quotes and policies payments and reports The project includes integration with different thirdparty components like Trans union for insurance score MVR for getting the driver license details app from component to print the Application forms and ID Cards online Responsibilities Worked in a highly dynamic AGILE environment and participated in scrum and sprint meetings Implemented various J2EE design patterns like Singleton Factory Builder etc Extensively used Java 8 features such as lambda expressions Parallel operations on collections multithreading and for effective sorting mechanisms and Streams to store and process the data Implemented Multithreading concept to handle transaction management with isolation and propagation levels Used HTML5 CSS3 JavaScript Bootstrap AngularJS and Nodejs as frontend building Environment Configure and run gulp tasks in Nodejs runtime and handle injection CSS preprocessing test running Developed custom directives Factories and Services in AngularJS and implemented code as per coding standards Used Spring DI Annotations and MVC to implement business and navigation of the application Microservices have been built using Spring boot Spring security and deployed to AWS cloud Used Spring Ribbon along with Spring Boot for load balancing and fault tolerance of the application Spring Quartz for scheduling tasks to generating reports and emails to clients Developed microservices with Spring to retrieve API routes for the entire cluster Using this strategy each microservice in a cluster can be load balanced and exposed through one API gateway Experience in creating RESTful web services using Jersey SPRING framework and JAXRS Implemented RESTful web services to retrieve data from clientside and made REST API calls from AngularJS and parsed the data to project client and handled the security and Authorization using Spring Security OAuth2 Created RESTbased Web Services by establishing links using HATEOAS from Springbased Applications Configured SwaggerUI registered Microservice with Eureka server to monitor service from Spring Boot Implemented the business modules integration using Spring and Hibernate data mapping Developed Entity objects and used Hibernate the ORM tool to access persistent data from MySQL Worked on Proof of Concept for developing an application using Node JS with AngularJS and Mongo DB Maintained structured and surveyed documents within the NoSQL MongoDB database ensuring data integrity correcting anomalies and increasing the overall maintainability of the database Involved in developing APIs and Rest API proxy using APIGEE edge and for sending mobile notifications Published and consumed a stream of records using Producer and Consumer APIs with Spring for Apache Kafka Developed Rules using Rule Engines JBoss Drools Workflows human tasks to implement Business rules validations and provided Drools Dashboard for Business users Configured the Docker Containers and creating Dockers files for different environments Designed and developed the framework to consume the web services hosted in Amazon EC2 instances Experienced with eventdriven and scheduled AWS Lambda functions to trigger various AWS resources Used AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store and retrieve the media files related to the application MYSQL was used as the database for the application which was hosted in the cloud using Amazon RDS service Developed and maintained functions procedures triggers indexes using MYSQL database programming Used Jenkins as the integration tool and improved scalability of applications on crossplatforms Used Maven as a Build Process and used generating Documentation Reporting and adding Dependencies Developed test scripts in Selenium Web Driver using Java Language Developed testing using Junit Used JIRA for resolving bugsdefects in the application by coordinated with team members of the project Used Git as a version control system and deployed the application in a Production environment and implemented Log4J for Logging Errors Involved in Production Support and Maintenance of the application and troubleshooting of Issues on JBoss by checking logs payments etc Environment Java 78 HTML5 CSS3 JavaScript AngularJS 1516 NodeJS Spring Spring Boot Spring MVC Spring Ribbon Spring Quartz Spring Security Jersey JAXRS OAuth2 HATEOAS Apache Kafka SwaggerUI Eureka server APIGEE MySQL Mongo DB AWS Hibernate Drools Dockers REST JSON Eclipse Maven JUnit Selenium Jenkins JIRA Git Log4J JBoss Java Full Stack Developer Sterling Bank Houston TX September 2016 to October 2017 Description Sterling bank offers a secure payment gateway for all types of transactions They are technological expertise for secure transactions Customers can check their transaction details using their secured login into the web portal Customers can manage their account at any time from the web portal Generating reports and online payments can be done through the portal They can also subscribe for monthly statements through mail or email Responsibilities Well versed with complete Life Cycle Development process that includes requirement analysis design implementation testing maintenance and followed Agile methodology Involved in implementing different J2EE design patterns like Service Locator Business Delegate and DAO Implemented Core Java concepts like Multithreading Concurrency Exception Handling and Collections Developed presentation layer using HTML5 CSS3 and client validation using JavaScript DOM JSON Used React JS for creating components and to render views and to update the DOM dynamically Used Bootstrap ReactJS to create Controllers to handle events triggered by clients and send a request to the server With the concept of ReactJs Worked on usage metrics and an end to end events tracing for analysis purpose Used Nodejs for building web applications with clientserver architecture where both can initiate communication in twoway connections and allow them to exchange data Worked on development of MVC Architectural pattern using Spring Framework Spring DI and Annotations Designed and integrated the fullscale Spring Hibernate persistence solution with the application architecture Involved in implementing the Micro Services based on RESTful API utilizing Spring Boot with Spring MVC Worked on RESTful services for transferring and retrieving XML and JSON data between different applications Developed the DAO layer for the application using Spring Hibernate template support Used Hibernate for the persistence layer and used HQL for query purpose Used RabbitMQ message broker to route messages to the clients across the cloud network Wrote Docker files for creating Docker images for microservices and Docker containers for the environment Used Kubernetes to deploy Docker containers Used Eureka service registry of PCF configured for each service to enable communication via the cloud Used inbuilt marketplace services of PCF for RabbitMQ config Used configserver options of PCF for maintaining application properties pertaining to each environment and UserProvidedConfigServer cf cups option for Syslog and Oracle DB connectivity Used NoSQL database Cassandra for proof of concept and having experience in creating a Stored Procedures and having experience in Remote Procedure Call RPC Worked on large datasets to generate insights by using Splunk Converted and automated builds using Maven Scheduled automated nightly builds using Jenkins and maintained Continuous integration effort with Jenkins along with scheduled builds Worked on High level and lowlevel system design planning estimation and implementation Experience in writing Unit Tests using JUnit Mockito Helping application teams in onboarding Splunk and creating dashboards alerts reports etc Experience in using JUnit and build tools such as Maven Worked on Log4j for logging errors messages and performance logs and SVN for version control Deployed and tested the application in UNIX on IBM Web Logic Application Server Environment Java J2EE HTML5 CSS3 JavaScript ReactJS Nodejs Micro Services Spring Hibernate SOA REST RabbitMQ PCF Oracle 11g Cassandra Docker Kubernetes Maven Jenkins Junit Mockito Log4J SVN Web Logic 12c Unix Jr Java Developer Merit Systems Pvt Ltd March 2012 to July 2015 Description Merit Systems vision is to develop software products that would enhance business performance With a focus on the development of cuttingedge software products It has a wide range of products include business process monitoring event monitoring and corporate messaging products We have launched a series of products in the areas of Messaging Business Event Monitoring BEM and Business Process Management BPM Responsibilities Analyze the requirements based on business data and user requirements Created userfriendly GUI interface and Web pages using HTML jQuery and JavaScript Implemented the modules using the ModelViewController MVC design pattern Develop GUI related changes using JSP HTML and client validations using JavaScript Developed Java beans helper classes and Servlets for interacting with UI written in JSP Wrote a controller Servlet that dispatched requests to appropriate classes Developed Dispatch Action classes to define several business methods Involved coding SQL Queries Stored Procedures and Triggers Involved in Designing the Database Schema and writing the complex SQL queries using Oracle Created java classes to communicate with the database using JDBC Accessed stored procedures and functions using JDBC Callable statements Deployed Applications on Apache Tomcat Server Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Involved in fixing bugs the bugs or defects in the application Used Log4J for any logging purposes during the development of the application Environment JDK 16 HTML jQuery JAVASCRIPT Servlets JSP XML XSLT Oracle10g SQL PLSQL MS Visio Eclipse JDBC Log4J Apache Tomcat Server Education Masters Skills AWT BEA BEA WEBLOGIC ECLIPSE EJB J2EE JAVA HIBERNATE SPRING JAX JAXRPC JAXWS JBOSS JDK JFC JMS JNDI jQuery JSF JSP Angular Javascript Node Angularjs React",
    "unique_id": "37e9c6d8-f699-45da-b04f-cd643031ddfc"
}