{
    "clean_data": "Sr Full Stack Java Developer Sr Full Stack span lJavaspan span lDeveloperspan Sr Full Stack Java Developer Thermo Fisher Scientific Columbus OH 8years of IT experience in analysis design development documentation implementing and testing of software systems in Java J2EE and Internet technologies Expertise in Object Oriented Programming and development of ntier componentbased enterprise web applications Involved in the Software Development Life Cycle SDLC phases which include Analysis Design Implementation Testing and Maintenance Strong hands on experience in developing the Enterprise and Web applications on ntier Architecture using JavaJ2EE Spring JSP Hibernate Servlets EJBs Struts JNDI Web services XML and JDBC Good knowledge of springs IOC AOP Spring MVC and springs integration with Hibernate and Struts technologies Experience in frameworks like Spring MVCIOCORMJDBCAOPContextSecurity and Struts MVC architecture interceptors action mappings and resource bundles and JSF Used a Microservices architecture with Spring Bootbased services interacting through a combination of REST and RabbitMQ or Apache Kafka message brokers Experience writing angularjs code for developing Single page applications SPA used several in built language core directives expressions and modules Experience with features of Angular 2 4 such as directives dependency injection modules and routing Extensive experience in developing Web interfaces using HTML5 CSS3 Bootstrap SASS LESS JavaScript JQuery AngularJS react js and BackboneJS Experience in dynamic web development using JQuery AJAX Java Script XML and CSS Strong Experience on AWS platform and its dimensions of scalability including VPC EC2 ELB S3 and EBS Good knowledge on Amazon Web Services AWS Amazon Cloud Services like Elastic Compute Cloud EC2 Simple Storage ServiceS3 Amazon Simple DB Amazon Cloud Watch SNS SQS LAMBDA and experienced in building highly scalable java applications using various architectures Used Apache Kafka in cluster as messaging system between the APIs and Microservices Experience in developing and consuming Web Services using WSDL SOAP HTTP and UDDI Has good knowledge in RESTful web services Excellent Relational Database understanding and experience with Oracle SQL Server and MySQL Generated DDL scripts and wrote DML scripts for creation of database objects in Oracle database Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Developed and deployed applications onto various SDLC based environments using the industry standard techniques of Continuous Integration and Continuous Deployment in Jenkins which reduces the time for the deployment of Microservices Have been involved in building and deployment of the applications by using build tools like ANT Maven etc Handson experience in using Eclipse SLF4j Log4j JUnit Mockito TestNG for building logging testing JTest for Performance Testing and Clear Case Microsoft Visual Source Safe CVS and SVN for version control Excellent Client interaction skills and proven experience in working independently as well as in a team Strongly initiative creative and able to learn new technologies Ability to deal with people ability to grasp things fast Strong sense of team player Work Experience Sr Full Stack Java Developer Thermo Fisher Scientific Carlsbad CA June 2017 to Present Description Thermo Fisher Cart Checkout this project involves migrating to micro services from the existing Comergent system to customers which increases flexibility and performance of Tablet and Desktop Applications Responsibilities Involved in the implementation of design using vital phases of the Software development life cycle SDLC that includes Development Testing Implementation and Maintenance Support Used Agile Scrum methodology for iterative incremental software development Implemented Java 18 features like Lambda expressions Java Optional Stream API for Bulk data operations on Collections which would increase the performance of the Application Used Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers and leveraging AWS to build test and deploy micro services Implemented Microservices with Spring Cloud provided library services like Netflix Eureka Naming Server Netflix Ribbon and Feign Client as a Rest client to map response to the client bean Applied J2EE design patterns like Singleton Data Transfer Object DTO Data and Business Object VO during the development of components Design roles and groups for users and resources using AWS Identity Access Management IAM Used Visio to prepare Flow Diagram Class Diagram and Sequence Diagram Implemented Spring MVC flow to interact with different modules and extensively used Spring AOP and Dependency injection during various modules of project Used Spring Data JPA as ORM tool for data related functionalities persistence layer and implemented transactions Involved in creating POJO Objects and mapped using Spring Data JPA Annotations Implement Lombok API annotations to generate boilerplate code for POJO objects Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for Microservices Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Responsible for Configuring Apache Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Extensively used the Java collection Framework Classes for Holding the Application objects Designed Frontend with in objectoriented JavaScript framework like AngularJS Nodejs Used building rich internet applications backbone JS Require JS to optimize inbrowser use and to load the module and to improve the Speed Built Web pages that are more userinteractive using AJAX JavaScript and ReactJS Participated in development of a well responsive single page application using ReactJS framework and JavaScript in conjunction with HTML5 CSS3 standards with front end UI team Designed and developed the UI using spring view component JSP HTML5 CSS 30 JQuery and AngularJS Implemented AngularJS controllers custom directives filters to maintain each view data Implemented Angular Service calls using Angular Factory Planned constructed and iterated upon a contacts management singlepage application SPA and custom REST API using AngularJS MongoDB Nodejs Built custom Angular 4 Directives and Services for singlepage web application for agilebased team Implemented reactive Angular 4 components using RXJS Developed service infrastructure components in Angular2Typescript for a unified web UI initiative Involved in writing automated test scripts using java and executed it through Selenium Cucumber Used Splunk Enterprise to retrieve the logs and to understand the flow of application in PRD servers and extensively worked in identifying the issues production servers during production support Used Gigya for authenticating users and implement identity authentication Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups optimized Responsive web design RWD is developed using frameworks like Angular20 typescript and MVC frameworks and Bootstrap Managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management Developed and published Java Web Services PoS Services so that other systems can use the service using Web Services Worked on creating Microservices API and created Docker Files for different Microservices Worked on Swagger API and autogenerated documentation for all REST calls Used Zipkin to trouble shoot problems in microservices architectures Created advance SQL scripts in PLSQL Developer to facilitate the data inout flow in Oracle Experience in storing sever data into S3 and have indepth knowledge on various S3 features like versioning lifecycle management logging events etc Used JBoss server to deploy the application Extensively involved in a Docker deployment pipeline for custom application images in the cloud using Jenkins Used the Docker container system with the Kubernetes integration Worked in TDD environment used MOCKITO to develop test cases for java bean components and test them through JUnit framework And used Code coverage plugins like SonarQube to improve the coverage and quality of code Implemented Jasmine and Karma frameworks for UI test cases Logging framework Log4J is used with Sl4j annotations to log messages Used Gradle for integration and building of the project Used Stash repository for Git version control JIRA tracking tool for assigning and defect management Environment Java 18 J2EE Spring 4 Spring JPA Spring boot 115 Spring cloud Spring Security Hibernate JavaScript Angular 24 ReactJS HTML 5040 CSS Ajax Jquery Swagger API Lombok API JBoss Eclipse Kubernetes Docker Gradle Stash log4j Junit XML Web Services SOAP WSDL JAXRS Splunk Apache Kafka MongoDB Windows XP Design Patterns AWS WebLogic102 SQL PLSQL TOAD Oracle 10g DB2 Docker Maven Jenkins Cobertura Sonar WinSCP Putty Log4J JUnit Mockito Jersey JSON XML Selenium Cucumber EXT JS Express JS 4x NodeJS Typescript ES7 Sr Full Stack Developer Capital One Chicago IL April 2015 to May 2017 Description CLIP this workflow implemented through Empath itself is a capital one agent servicing application It is designed as progressive web application technology to deliver the seamless experience to the users for increase the credit limit enhancing the workflow using Omnius framework Nodejs vuejs which increases the flexibility and performance of the application Responsibilities Involved in various phases of project development following Agile Software Development Methodology and Test Driven Development TDD to build the application Implemented Java 18 features like Lambda expressions Java Optional Stream API for Bulk data operations on Collections which would increase the performance of the Application Used Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers and leveraging AWS to build test and deploy micro services Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for Microservices Extensively used the Java collection Framework Classes for Holding the Application objects Involved in implementing the changes in user interfaces using HTML5 CSS3 JavaScript Angular JS and AJAX Used AngularJS to create Single Page Applications SPA which can bind data to specific views and synchronize data with server Implemented the Project structure based on spring MVC pattern using Spring Boot and Hibernate Used Hibernate Framework for object relational mapping and persistence Developed application service components and configured beans using Spring IOC creation of Hibernate mapping files and generation of database schema Implemented Spring MVC architecture using spring JSP Java beans to migrate from Struts Framework Developed different modules using Java Apache Camel spring and Hibernate Involved in development of services based architecture utilizing open source technologies like Hibernate ORM with JPA Annotations and Spring MVC Framework Developed the REST based Microservices using spring Boot Used Spring Inversion of Control and Transaction Management for processing batch files Developed and tested features in an AGILE environment using Angular 2 and Typescript Worked on Angular 20 by consuming RESTful web services Used Angular 20 forms like Template Driven forms and Modern Driven Reactive forms Developed user interface by using the React JS Flux for SPA development Implemented react JS code to handle cross browser compatibility issues in Mozilla IE 7 8 9 Safari and FF Used ReactRouter to turn application into Single Page Application Worked in using React JS components Forms Events Keys Router Animations and Flux concept Worked on migrating Persistence layer from simple DAO to SpringHibernate Developed web layer using springs framework and to manage the project in MVC pattern Designed and Developed Representational state transfer REST based services and Simple Object Access Protocol SOAP based services as part of the requirement Worked on creating business logic in controllers directives and routers developed routing through webpages and achieved single page application Designed and Developed new User Interactive Web pages with the help of HTMLHTML5 CSSCSS3 SASSLESS JavaScript Angular JS Bootstrap and AJAX Used JavaScript AngularJS and AJAX technologies for front end user input validations and Restful web service calls Built custom Angular 4 Directives and Services for singlepage web application for agilebased team Used multiple inbuilt directives in AngularJS Nodejs such as filters rootscope child scope modal template and state in the application development Used AngularJS framework for building webapps and is highly efficient in integrating with Restful services Used AngularJS for Custom Directives Custom Filters and NodeJS for backend support with APIs Created angular modules to separate various functionalities The code was kept DRY by Injecting other services and modules as dependencies Added new services to interact with REST API using AngularJS Responsive web design RWD is developed using frameworks like Angular40 typescript and MVC frameworks and Bootstrap Vuejs Rush Learna Created application on Spring Batch framework and Multithreading to improve performance Used Multithreading for faster and parallel processing of documents Used Hibernate as persistence framework for DAO layer to access the Oracle11g database Used Java Message Service JMS for reliable and allowed asynchronous exchange of important information and set up a scheduler for spring batch jobs Defined XML documents for input and output sources of Web Services Created schema documents for XML validation and developed XML schemas Configured local Maven repositories and multicomponent Ant projects with Nexus repositories and scheduled projects in Jenkins for continuous integrationcontinuous deployment CICD Used Tomcat server running for the application development and deployment and JIRA for issue tracking Used log4j with Splunk Logging for logging errordebug messages and managing them Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups Setup AWS VPCs for dev staging and Prod environments Implemented a continuous delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Managed servers on the AWS platform instances using Puppet Chef and Configuration management Actively involved in code reviews and bug fixing using Clear Quest as bug tracking tool Worked in TDD environment used MOCKITO to develop test cases for java bean components and test them through JUnit framework And used Code coverage plugins like SonarQube to improve the coverage and quality of code Implemented Jasmine and Karma frameworks for UI test cases Implemented Test Driven Development TDD for developing and testing the application Used GIT for Source Control and Version Management of all codes and resources Environment Java 1718 Scala J2EE Spring Framework 40 Spring MVC Spring IOC Spring Boot Hibernate 43 REST Web Services HTML5 CSS3 JavaScript Angular 2040 Angular JS NodeJS ReactJS Bootstrap AJAX JSON Apache Tomcat 80 Apache Maven Postman 20 JUnit Log4j GIT JIRA Jenkins Oracle 11g Windows Sr Full Stack Java Developer GAP CA October 2013 to March 2015 Description GAP Inc is an American multinational Clothing retailer offering clothing accessories and personal care for men women children and babies The Project is about GAP members portal that has various modules for customers The users need to register login to use the secure website The user can place orders check the order status manage their profiles online find the location check the products set the notification regarding new products maintains the reward points and also the system contains admin tool for managing users and order information through customer service The complete application is developed using Java J2EE technologies spring Hibernate RESTFUL Web Services and Deployed on WebSphere Application Server on Linux Responsibilities Involved in Full Software Development Life Cycle SDLC from Requirement gathering design development testing and documentation Used Spring Boot which is radically faster in building cloud Microservices and develop spring based application with very less configuration Design common framework for REST API consumption using Spring Rest Templates Developed RESTFUL Web Services which are consumed by several clients like Mobile Tablet as well Web Design application using Spring MVC JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Utilized AngularJS framework to bind HTML5 template views to JavaScript object models Worked with AngularJS applications for customer facing software using modern JavaScript development techniques and responsive design methodology Used Spring AOP to handle transactions session aspects and to implement security Used Spring MVC Spring Security Spring ORM modules to integrate with MongoDB to implement the persistence layer with JPAHibernate Worked on designing data models in Cassandra and working with Cassandra Query Language Involved in migrating data from Oracle 11g to Cassandra Involved in Ecommerce project Development using Spring Web Flow and Hybris and developed frontend UI with Backbonejs jQuery CSS3 Dojo and AJAX Responsible for designing the User Interface by coding in HTML5 CSS3 AngularJS Bootstrap to build this SPA Single Page Application Highly used Angular 2 router to build single page application for navigate through the different status and multiple modals Built the reusable service components using Angular 2 services with Object Oriented JavaScript JQuery HTML CSS3 based on the visual designs Utilized ReactJS REDUX for rendering and deployment of end setting web pages Modularized frontend CSS and JS code with Sass Built a realtime mouseclick user analytics web service with NodeJS Created sites to organize client contracts and to summarize monthly financial data using Emberjs D3js and MySQL Worked on AWS High Availability Practices and deploying backuprestore infrastructure Developed API for using AWS Lambda to manage the servers and run the code in the AWS Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Developing scripts for build deployment maintenance and related tasks using Jenkins Docker and Maven Setup Servers JBoss Apache and UNIX and deployed application in Dev ST and UAT Environment Worked in a testdriven development environment used JUnit and Mockito for backend test cases and Karma and Jasmine for the frontend test cases Worked with the business analysts to gather requirements create the JIRAS and plan the sprints Environment Java 80 Design Patterns WebLogic102 Java 18 J2EE Servlet jQuery Struts Spring 406 Spring Boot Spring Security Spring Core Spring MVC Microservices Hibernate RESTful API Web Services SOAP WSDL UDDI JAXRS JSON ReactJS HTML AJAX JavaScript XML AngularJS NodeJS MongoDB SQL PLSQL  TOAD Oracle 10g11g MQ Maven Jenkins Log4J JUnit Mockito Karma Jasmine JIRA Java Developer Telcordia India Labs Chennai July 2012 to August 2013 Description Developed a web based application which enables customers and Customer Service Representatives of our client to access the account information of its end users online This application can be used to view the account details such as plan details the services and profile information of the end users The Customer representatives of our client can view all these information as well as perform additional administrative tasks Responsibilities Developed single page responsive Web UI using HTML5 AngularJS Bootstrap CSS3 JavaScript jQuery Developed views controller and model components implementing JavaScript MVC Developed Java Beans and Custom Tag Libraries providing clientside validations in JavaScript and providing interactive frontend GUI using AJAX Designed and developed Prototype module using Angularjs and Extjs implemented Pagination and Data grid added additional functionality for Data grid Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s Used Oracle as database and involved in the development of PLSQL backend implementation Created web application prototype using jQuery and AngularJS Responsible for Nodejs RESTful API developing as a middleware system to call SOAP web service Implemented SOA to develop SOAP Based Web services using JAXWS implementation and Apache CXF Apache Axis 2 Framework The middleware interaction used JMSIBM WebSphere MQ series for transferring messages between different components using the JMSMail API Framework Used issue tracking tool JIRA for bug fixing and life cycle traceability Designed SOAP based web service for handling asynchronous AJAX requests Environment Java 17 JSF 12 Spring 4 Spring DI Spring MVC Spring REST Spring Core Hibernate JSP JMS MDB AJAX JBoss JPA 20 Java Beans XML Jenkins HTML5 JavaScript jQuery AJAX Jira CSS3 XSL Oracle 11g SQL PLSQL MySQL AngularJS Nodejs CVS UML Maven SOAP Java Developer Convergys IN March 2011 to June 2012 Description This project involves development and support to eCommerce including both online banking and dotcom operations Worked on migrating Account Balance History functionality from legacy application where the screen provides a historical snapshot user transaction as recorded User can see how and why the balance changed over time and when a change may have triggered a fee A total of 93 days of transaction history available in the screen Pagination controls have been provided to the user to navigate across the pages if user has many transactions Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology SCRUM for developing application Developed components for categorizing reports creating reports login authentication and authorization and report criteria generation for reporting using UML class diagram Developed the application using Spring MVC Architecture Developed the Presentation layer using JSP HTML and used AJAX jQuery based rich client for improved customer experience Developed the Business layer using spring IOC AOP DTO and JTA Developed the Persistence layer DAO using Spring JDBC for all modules which has POJO classes with CRUD operations Developed the application using industry standard design patterns like Singleton Business Delegate Factory Pattern for better maintenance of code and reusability Maintained Cross Browser compatibility implement Responsive Web Design using Twitter Bootstrap custom media queries etc Involved in writing stored procedures triggers cursors and views Developed SQL PLSQL with Stored Procedures to interact with Persistent database using Oracle 10g Developed Web services to allow communication through SOAP over HTTP using CXF Worked with executed unit test cases by using JUNIT for accuracy of code and logging with log4j Environment Java 16 J2EE 16 HTML CSS AJAX jQuery JavaScript 17 JSP 21 Spring 30 Spring JDBC Spring Web Web ServicesSOA JAXWS 20 XML 10 UML 20 JUNIT Oracle WebLogic Application Server Eclipse Indigo 37 Maven 20 SVN SoapUI Oracle 10g JIRA Bootstrap Programmer Analyst Java Developer Idea Labs Hyderabad Telangana March 2010 to February 2011 Description Developed a Prototype for a Retail Chain which is a complete ERP solution getting all the modules integrated to a single system that directly connects all the modules like Retail outlet Central Repository Procurement Department to a single System Adding a new technology to the software that is RFID Radio Frequency Identification this replaces the barcodes Responsibilities Followed agile methodology SCRUM for developing this project with each SPRINT lasting for 23 weeks Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC Designed project related documents using Visual Paradigm Unified Modeling Language tool which includes Use case Class and Sequence diagrams Worked on Rally dev for defining user stories tasks and defects Wrote spring rest controller calls for web application data interactions using jQuery Implemented Struts framework based on the Model View Controller design paradigm Implemented SpringStruts integration Implemented various XML technologies like XML schemas JAXB parsers and XMLBean Used Struts MVC Framework to flow the process Implemented service method and SQL queries PLSQL to interact with Oracle DBMS Developed unit test cases using Mockito framework for testing accuracy of code and logging is done using SLF4j Log4j Deployed the application on a WebLogic server on a UNIX platform Used Maven 20 for create the project archetype and build the interface modules for create war and ear files Environment Java 16 J2EE 16 HTML CSS AJAX jQuery JavaScript 17 JSP 21 Struts MVC XML 10 UML 20 Mockito frameworkJUNIT Log4j SLF4j Apache Tomcat Server Eclipse Indigo 37 Maven 20 SVN UNIX Oracle 10g MySQL MJIRA Education Bachelors Skills ECLIPSE EJB J2EE JAVA HIBERNATE Additional Information Technical Skills Web Languages Core Java J2EE JSP JSF Servlets Struts 20 Spring Web Flow JSP Tag Libraries EJB 30 JMS JDBC JNDI JavaScript SQL Frameworks Spring MVC Spring Security LDAP Spring Core Spring Webflow Spring DAO Spring ORM Spring Boot Spring Cloud Struts Hibernate JSF Spring Data Methodology OOAD OOPS UML RUP Autosys J2EE Design Patterns Scripting Language Java Script CSS AngularJS PHP Web Technologies HTML DHTML JavaScript CSS AJAX JSON JQUERY AngularJS Database Oracle11g10g9i MySQL 5x SQL PLSQL TOAD and SQLServer Operating System DOS Windows UNIX Red Hat IDE Tools Eclipse RSA JBuilder Oracle ADF Web Logic Enterprised Architect Rational Rose LDAP RUP Methodology Clear CaseClear Quest Red Hat JBOSS Developer Studio Web Services SOAP WSDL UDDI SOAP UI RESTful Version Control SVN IBM Clear case CVS Tools RAD Eclipse Edit Plus Apache Ant log4j JUnit Visio ANT Maven WebApp Servers Websphere Application Server 80 Apache Tomcat SunOne Application Server Web Logic 718x JBoss 4x5x Other MS Office Suite MS FrontPage Toad SQL Developer Microsoft VSS Test Director Dreamweaver putty GEMS SOAP UI C Oracle ATG Drools",
    "entities": [
        "Responsive Web Design",
        "JPA Annotations",
        "Spring Bootbased",
        "Oracle SQL Server",
        "Selenium Cucumber Used Splunk Enterprise",
        "Extjs",
        "HTMLHTML5 CSSCSS3",
        "IOC AOP",
        "Mozilla IE",
        "AJAX",
        "Spring MVC JSP JSTL",
        "Applied J2EE",
        "GUI",
        "JavaJ2EE Spring JSP Hibernate Servlets",
        "SpringHibernate Developed",
        "Tablet and Desktop Applications Responsibilities Involved",
        "Nodejs",
        "Emberjs",
        "Cassandra",
        "Hibernate and Struts technologies",
        "Customer",
        "UNIX",
        "Implemented Spring",
        "JIRAS",
        "JS Bootstrap",
        "Prototype",
        "HTTP",
        "Spring IOC",
        "jQuery Implemented Struts",
        "Struts MVC Framework",
        "MVC Spring",
        "CSS Strong",
        "Indigo",
        "Amazon Web Services AWS",
        "Deployed on WebSphere Application Server",
        "XML",
        "Telangana",
        "GAP",
        "Developed Representational",
        "JAXWS",
        "WebLogic",
        "JUnit",
        "RXJS Developed",
        "Java Web Services PoS Services",
        "Software Development Life Cycle SDLC",
        "Spring MVC Framework Developed",
        "JUNIT Oracle WebLogic Application",
        "Amazon",
        "ReactRouter",
        "Maven Setup Servers",
        "AWS Identity Access Management IAM",
        "Implemented Angular Service",
        "Implemented SpringStruts",
        "Developed",
        "Hibernate Involved",
        "SPA Single Page Application Highly",
        "Implemented Jasmine",
        "Jenkins",
        "REST API s",
        "JPAHibernate Worked",
        "RFID Radio Frequency Identification",
        "Utilized",
        "Oracle 11",
        "Mockito",
        "Responsibilities Involved",
        "UML",
        "Git",
        "PHP Web Technologies HTML",
        "Restful",
        "ELB S3",
        "the React JS Flux for SPA development Implemented",
        "Sequence",
        "Puppet Chef and Configuration management Actively",
        "Learna Created",
        "Analysis Design Implementation Testing",
        "HTML5",
        "SOA",
        "AGILE",
        "Custom Directives Custom Filters",
        "Simple Object Access Protocol",
        "JSP",
        "the Software Development Life Cycle",
        "the Application Used Microservice",
        "Version",
        "SonarQube",
        "VPC",
        "JMSIBM WebSphere",
        "Docker",
        "MVC Microservices Hibernate RESTful API Web Services SOAP",
        "AJAX JavaScript",
        "Implemented Microservices",
        "Nexus",
        "Collections",
        "CXF Worked",
        "Modern Driven Reactive",
        "DTO Data and Business Object VO",
        "MVC",
        "EXT",
        "Dev ST",
        "Singleton Business Delegate Factory Pattern",
        "Control SVN",
        "GIT",
        "Single Page Applications",
        "Rabbit MQ",
        "Description GAP Inc",
        "POJO",
        "MQ Maven Jenkins Log4J JUnit",
        "Developed the Business",
        "Created",
        "AWS",
        "Puppet Chef Ansible Configuration",
        "Web Services Created",
        "Linux Responsibilities Involved",
        "Oracle Experience",
        "Singleton",
        "Oracle DBMS Developed",
        "JSF",
        "React JS",
        "RWD",
        "MVC XML",
        "Development Testing Implementation and Maintenance Support Used Agile Scrum",
        "Netflix",
        "java",
        "Clear Quest",
        "CVS Tools RAD Eclipse Edit Plus Apache Ant log4j",
        "Hibernate RESTFUL Web Services",
        "SQL",
        "Java Optional Stream API for Bulk",
        "GitHub",
        "DML",
        "JTA Developed",
        "Nodejs CVS UML Maven",
        "Customer Service Representatives",
        "DI Spring",
        "Chicago",
        "Agile Software Development Methodology",
        "JUNIT",
        "Handson",
        "java bean components",
        "Spring MVC Architecture Developed",
        "Spring Data JPA Annotations",
        "UDDI",
        "Continuous Deployment",
        "CRUD",
        "Angular 4",
        "Custom Tag Libraries",
        "Spring AOP",
        "Mobile Tablet",
        "Flow Diagram Class Diagram",
        "Backbonejs jQuery CSS3 Dojo",
        "lJavaspan",
        "the JMSMail API Framework Used",
        "AJAX Designed",
        "Responsibilities Followed",
        "JavaScript",
        "ANT",
        "UI",
        "Spring Security Hibernate",
        "Amazon Cloud Services",
        "Microsoft",
        "Continuous Integration",
        "Kafka System",
        "Present Description Thermo Fisher Cart Checkout",
        "Implemented Test Driven Development TDD",
        "SVN",
        "CSS",
        "Source Control",
        "Zipkin",
        "Built custom Angular 4 Directives and Services",
        "Cassandra Query Language Involved",
        "REST Spring Core Hibernate",
        "jQuery",
        "Angular Factory Planned",
        "Tomcat",
        "SPA",
        "REST",
        "Apache Active",
        "Single Page Application Worked",
        "TDD",
        "NoSQL",
        "Central Repository Procurement Department",
        "Version Management",
        "Template Driven",
        "POJO Objects",
        "SPRINT",
        "Developed SQL PLSQL",
        "Boot Used Spring Inversion of Control and Transaction Management"
    ],
    "experience": "Experience in frameworks like Spring MVCIOCORMJDBCAOPContextSecurity and Struts MVC architecture interceptors action mappings and resource bundles and JSF Used a Microservices architecture with Spring Bootbased services interacting through a combination of REST and RabbitMQ or Apache Kafka message brokers Experience writing angularjs code for developing Single page applications SPA used several in built language core directives expressions and modules Experience with features of Angular 2 4 such as directives dependency injection modules and routing Extensive experience in developing Web interfaces using HTML5 CSS3 Bootstrap SASS LESS JavaScript JQuery AngularJS react js and BackboneJS Experience in dynamic web development using JQuery AJAX Java Script XML and CSS Strong Experience on AWS platform and its dimensions of scalability including VPC EC2 ELB S3 and EBS Good knowledge on Amazon Web Services AWS Amazon Cloud Services like Elastic Compute Cloud EC2 Simple Storage ServiceS3 Amazon Simple DB Amazon Cloud Watch SNS SQS LAMBDA and experienced in building highly scalable java applications using various architectures Used Apache Kafka in cluster as messaging system between the APIs and Microservices Experience in developing and consuming Web Services using WSDL SOAP HTTP and UDDI Has good knowledge in RESTful web services Excellent Relational Database understanding and experience with Oracle SQL Server and MySQL Generated DDL scripts and wrote DML scripts for creation of database objects in Oracle database Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Developed and deployed applications onto various SDLC based environments using the industry standard techniques of Continuous Integration and Continuous Deployment in Jenkins which reduces the time for the deployment of Microservices Have been involved in building and deployment of the applications by using build tools like ANT Maven etc Handson experience in using Eclipse SLF4j Log4j JUnit Mockito TestNG for building logging testing JTest for Performance Testing and Clear Case Microsoft Visual Source Safe CVS and SVN for version control Excellent Client interaction skills and proven experience in working independently as well as in a team Strongly initiative creative and able to learn new technologies Ability to deal with people ability to grasp things fast Strong sense of team player Work Experience Sr Full Stack Java Developer Thermo Fisher Scientific Carlsbad CA June 2017 to Present Description Thermo Fisher Cart Checkout this project involves migrating to micro services from the existing Comergent system to customers which increases flexibility and performance of Tablet and Desktop Applications Responsibilities Involved in the implementation of design using vital phases of the Software development life cycle SDLC that includes Development Testing Implementation and Maintenance Support Used Agile Scrum methodology for iterative incremental software development Implemented Java 18 features like Lambda expressions Java Optional Stream API for Bulk data operations on Collections which would increase the performance of the Application Used Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers and leveraging AWS to build test and deploy micro services Implemented Microservices with Spring Cloud provided library services like Netflix Eureka Naming Server Netflix Ribbon and Feign Client as a Rest client to map response to the client bean Applied J2EE design patterns like Singleton Data Transfer Object DTO Data and Business Object VO during the development of components Design roles and groups for users and resources using AWS Identity Access Management IAM Used Visio to prepare Flow Diagram Class Diagram and Sequence Diagram Implemented Spring MVC flow to interact with different modules and extensively used Spring AOP and Dependency injection during various modules of project Used Spring Data JPA as ORM tool for data related functionalities persistence layer and implemented transactions Involved in creating POJO Objects and mapped using Spring Data JPA Annotations Implement Lombok API annotations to generate boilerplate code for POJO objects Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for Microservices Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Responsible for Configuring Apache Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Extensively used the Java collection Framework Classes for Holding the Application objects Designed Frontend with in objectoriented JavaScript framework like AngularJS Nodejs Used building rich internet applications backbone JS Require JS to optimize inbrowser use and to load the module and to improve the Speed Built Web pages that are more userinteractive using AJAX JavaScript and ReactJS Participated in development of a well responsive single page application using ReactJS framework and JavaScript in conjunction with HTML5 CSS3 standards with front end UI team Designed and developed the UI using spring view component JSP HTML5 CSS 30 JQuery and AngularJS Implemented AngularJS controllers custom directives filters to maintain each view data Implemented Angular Service calls using Angular Factory Planned constructed and iterated upon a contacts management singlepage application SPA and custom REST API using AngularJS MongoDB Nodejs Built custom Angular 4 Directives and Services for singlepage web application for agilebased team Implemented reactive Angular 4 components using RXJS Developed service infrastructure components in Angular2Typescript for a unified web UI initiative Involved in writing automated test scripts using java and executed it through Selenium Cucumber Used Splunk Enterprise to retrieve the logs and to understand the flow of application in PRD servers and extensively worked in identifying the issues production servers during production support Used Gigya for authenticating users and implement identity authentication Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups optimized Responsive web design RWD is developed using frameworks like Angular20 typescript and MVC frameworks and Bootstrap Managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management Developed and published Java Web Services PoS Services so that other systems can use the service using Web Services Worked on creating Microservices API and created Docker Files for different Microservices Worked on Swagger API and autogenerated documentation for all REST calls Used Zipkin to trouble shoot problems in microservices architectures Created advance SQL scripts in PLSQL Developer to facilitate the data inout flow in Oracle Experience in storing sever data into S3 and have indepth knowledge on various S3 features like versioning lifecycle management logging events etc Used JBoss server to deploy the application Extensively involved in a Docker deployment pipeline for custom application images in the cloud using Jenkins Used the Docker container system with the Kubernetes integration Worked in TDD environment used MOCKITO to develop test cases for java bean components and test them through JUnit framework And used Code coverage plugins like SonarQube to improve the coverage and quality of code Implemented Jasmine and Karma frameworks for UI test cases Logging framework Log4J is used with Sl4j annotations to log messages Used Gradle for integration and building of the project Used Stash repository for Git version control JIRA tracking tool for assigning and defect management Environment Java 18 J2EE Spring 4 Spring JPA Spring boot 115 Spring cloud Spring Security Hibernate JavaScript Angular 24 ReactJS HTML 5040 CSS Ajax Jquery Swagger API Lombok API JBoss Eclipse Kubernetes Docker Gradle Stash log4j Junit XML Web Services SOAP WSDL JAXRS Splunk Apache Kafka MongoDB Windows XP Design Patterns AWS WebLogic102 SQL PLSQL TOAD Oracle 10 g DB2 Docker Maven Jenkins Cobertura Sonar WinSCP Putty Log4J JUnit Mockito Jersey JSON XML Selenium Cucumber EXT JS Express JS 4x NodeJS Typescript ES7 Sr Full Stack Developer Capital One Chicago IL April 2015 to May 2017 Description CLIP this workflow implemented through Empath itself is a capital one agent servicing application It is designed as progressive web application technology to deliver the seamless experience to the users for increase the credit limit enhancing the workflow using Omnius framework Nodejs vuejs which increases the flexibility and performance of the application Responsibilities Involved in various phases of project development following Agile Software Development Methodology and Test Driven Development TDD to build the application Implemented Java 18 features like Lambda expressions Java Optional Stream API for Bulk data operations on Collections which would increase the performance of the Application Used Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers and leveraging AWS to build test and deploy micro services Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for Microservices Extensively used the Java collection Framework Classes for Holding the Application objects Involved in implementing the changes in user interfaces using HTML5 CSS3 JavaScript Angular JS and AJAX Used AngularJS to create Single Page Applications SPA which can bind data to specific views and synchronize data with server Implemented the Project structure based on spring MVC pattern using Spring Boot and Hibernate Used Hibernate Framework for object relational mapping and persistence Developed application service components and configured beans using Spring IOC creation of Hibernate mapping files and generation of database schema Implemented Spring MVC architecture using spring JSP Java beans to migrate from Struts Framework Developed different modules using Java Apache Camel spring and Hibernate Involved in development of services based architecture utilizing open source technologies like Hibernate ORM with JPA Annotations and Spring MVC Framework Developed the REST based Microservices using spring Boot Used Spring Inversion of Control and Transaction Management for processing batch files Developed and tested features in an AGILE environment using Angular 2 and Typescript Worked on Angular 20 by consuming RESTful web services Used Angular 20 forms like Template Driven forms and Modern Driven Reactive forms Developed user interface by using the React JS Flux for SPA development Implemented react JS code to handle cross browser compatibility issues in Mozilla IE 7 8 9 Safari and FF Used ReactRouter to turn application into Single Page Application Worked in using React JS components Forms Events Keys Router Animations and Flux concept Worked on migrating Persistence layer from simple DAO to SpringHibernate Developed web layer using springs framework and to manage the project in MVC pattern Designed and Developed Representational state transfer REST based services and Simple Object Access Protocol SOAP based services as part of the requirement Worked on creating business logic in controllers directives and routers developed routing through webpages and achieved single page application Designed and Developed new User Interactive Web pages with the help of HTMLHTML5 CSSCSS3 SASSLESS JavaScript Angular JS Bootstrap and AJAX Used JavaScript AngularJS and AJAX technologies for front end user input validations and Restful web service calls Built custom Angular 4 Directives and Services for singlepage web application for agilebased team Used multiple inbuilt directives in AngularJS Nodejs such as filters rootscope child scope modal template and state in the application development Used AngularJS framework for building webapps and is highly efficient in integrating with Restful services Used AngularJS for Custom Directives Custom Filters and NodeJS for backend support with APIs Created angular modules to separate various functionalities The code was kept DRY by Injecting other services and modules as dependencies Added new services to interact with REST API using AngularJS Responsive web design RWD is developed using frameworks like Angular40 typescript and MVC frameworks and Bootstrap Vuejs Rush Learna Created application on Spring Batch framework and Multithreading to improve performance Used Multithreading for faster and parallel processing of documents Used Hibernate as persistence framework for DAO layer to access the Oracle11 g database Used Java Message Service JMS for reliable and allowed asynchronous exchange of important information and set up a scheduler for spring batch jobs Defined XML documents for input and output sources of Web Services Created schema documents for XML validation and developed XML schemas Configured local Maven repositories and multicomponent Ant projects with Nexus repositories and scheduled projects in Jenkins for continuous integrationcontinuous deployment CICD Used Tomcat server running for the application development and deployment and JIRA for issue tracking Used log4j with Splunk Logging for logging errordebug messages and managing them Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups Setup AWS VPCs for dev staging and Prod environments Implemented a continuous delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Managed servers on the AWS platform instances using Puppet Chef and Configuration management Actively involved in code reviews and bug fixing using Clear Quest as bug tracking tool Worked in TDD environment used MOCKITO to develop test cases for java bean components and test them through JUnit framework And used Code coverage plugins like SonarQube to improve the coverage and quality of code Implemented Jasmine and Karma frameworks for UI test cases Implemented Test Driven Development TDD for developing and testing the application Used GIT for Source Control and Version Management of all codes and resources Environment Java 1718 Scala J2EE Spring Framework 40 Spring MVC Spring IOC Spring Boot Hibernate 43 REST Web Services HTML5 CSS3 JavaScript Angular 2040 Angular JS NodeJS ReactJS Bootstrap AJAX JSON Apache Tomcat 80 Apache Maven Postman 20 JUnit Log4j GIT JIRA Jenkins Oracle 11 g Windows Sr Full Stack Java Developer GAP CA October 2013 to March 2015 Description GAP Inc is an American multinational Clothing retailer offering clothing accessories and personal care for men women children and babies The Project is about GAP members portal that has various modules for customers The users need to register login to use the secure website The user can place orders check the order status manage their profiles online find the location check the products set the notification regarding new products maintains the reward points and also the system contains admin tool for managing users and order information through customer service The complete application is developed using Java J2EE technologies spring Hibernate RESTFUL Web Services and Deployed on WebSphere Application Server on Linux Responsibilities Involved in Full Software Development Life Cycle SDLC from Requirement gathering design development testing and documentation Used Spring Boot which is radically faster in building cloud Microservices and develop spring based application with very less configuration Design common framework for REST API consumption using Spring Rest Templates Developed RESTFUL Web Services which are consumed by several clients like Mobile Tablet as well Web Design application using Spring MVC JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Utilized AngularJS framework to bind HTML5 template views to JavaScript object models Worked with AngularJS applications for customer facing software using modern JavaScript development techniques and responsive design methodology Used Spring AOP to handle transactions session aspects and to implement security Used Spring MVC Spring Security Spring ORM modules to integrate with MongoDB to implement the persistence layer with JPAHibernate Worked on designing data models in Cassandra and working with Cassandra Query Language Involved in migrating data from Oracle 11 g to Cassandra Involved in Ecommerce project Development using Spring Web Flow and Hybris and developed frontend UI with Backbonejs jQuery CSS3 Dojo and AJAX Responsible for designing the User Interface by coding in HTML5 CSS3 AngularJS Bootstrap to build this SPA Single Page Application Highly used Angular 2 router to build single page application for navigate through the different status and multiple modals Built the reusable service components using Angular 2 services with Object Oriented JavaScript JQuery HTML CSS3 based on the visual designs Utilized ReactJS REDUX for rendering and deployment of end setting web pages Modularized frontend CSS and JS code with Sass Built a realtime mouseclick user analytics web service with NodeJS Created sites to organize client contracts and to summarize monthly financial data using Emberjs D3js and MySQL Worked on AWS High Availability Practices and deploying backuprestore infrastructure Developed API for using AWS Lambda to manage the servers and run the code in the AWS Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Developing scripts for build deployment maintenance and related tasks using Jenkins Docker and Maven Setup Servers JBoss Apache and UNIX and deployed application in Dev ST and UAT Environment Worked in a testdriven development environment used JUnit and Mockito for backend test cases and Karma and Jasmine for the frontend test cases Worked with the business analysts to gather requirements create the JIRAS and plan the sprints Environment Java 80 Design Patterns WebLogic102 Java 18 J2EE Servlet jQuery Struts Spring 406 Spring Boot Spring Security Spring Core Spring MVC Microservices Hibernate RESTful API Web Services SOAP WSDL UDDI JAXRS JSON ReactJS HTML AJAX JavaScript XML AngularJS NodeJS MongoDB SQL PLSQL   TOAD Oracle 10g11 g MQ Maven Jenkins Log4J JUnit Mockito Karma Jasmine JIRA Java Developer Telcordia India Labs Chennai July 2012 to August 2013 Description Developed a web based application which enables customers and Customer Service Representatives of our client to access the account information of its end users online This application can be used to view the account details such as plan details the services and profile information of the end users The Customer representatives of our client can view all these information as well as perform additional administrative tasks Responsibilities Developed single page responsive Web UI using HTML5 AngularJS Bootstrap CSS3 JavaScript jQuery Developed views controller and model components implementing JavaScript MVC Developed Java Beans and Custom Tag Libraries providing clientside validations in JavaScript and providing interactive frontend GUI using AJAX Designed and developed Prototype module using Angularjs and Extjs implemented Pagination and Data grid added additional functionality for Data grid Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s Used Oracle as database and involved in the development of PLSQL backend implementation Created web application prototype using jQuery and AngularJS Responsible for Nodejs RESTful API developing as a middleware system to call SOAP web service Implemented SOA to develop SOAP Based Web services using JAXWS implementation and Apache CXF Apache Axis 2 Framework The middleware interaction used JMSIBM WebSphere MQ series for transferring messages between different components using the JMSMail API Framework Used issue tracking tool JIRA for bug fixing and life cycle traceability Designed SOAP based web service for handling asynchronous AJAX requests Environment Java 17 JSF 12 Spring 4 Spring DI Spring MVC Spring REST Spring Core Hibernate JSP JMS MDB AJAX JBoss JPA 20 Java Beans XML Jenkins HTML5 JavaScript jQuery AJAX Jira CSS3 XSL Oracle 11 g SQL PLSQL MySQL AngularJS Nodejs CVS UML Maven SOAP Java Developer Convergys IN March 2011 to June 2012 Description This project involves development and support to eCommerce including both online banking and dotcom operations Worked on migrating Account Balance History functionality from legacy application where the screen provides a historical snapshot user transaction as recorded User can see how and why the balance changed over time and when a change may have triggered a fee A total of 93 days of transaction history available in the screen Pagination controls have been provided to the user to navigate across the pages if user has many transactions Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology SCRUM for developing application Developed components for categorizing reports creating reports login authentication and authorization and report criteria generation for reporting using UML class diagram Developed the application using Spring MVC Architecture Developed the Presentation layer using JSP HTML and used AJAX jQuery based rich client for improved customer experience Developed the Business layer using spring IOC AOP DTO and JTA Developed the Persistence layer DAO using Spring JDBC for all modules which has POJO classes with CRUD operations Developed the application using industry standard design patterns like Singleton Business Delegate Factory Pattern for better maintenance of code and reusability Maintained Cross Browser compatibility implement Responsive Web Design using Twitter Bootstrap custom media queries etc Involved in writing stored procedures triggers cursors and views Developed SQL PLSQL with Stored Procedures to interact with Persistent database using Oracle 10 g Developed Web services to allow communication through SOAP over HTTP using CXF Worked with executed unit test cases by using JUNIT for accuracy of code and logging with log4j Environment Java 16 J2EE 16 HTML CSS AJAX jQuery JavaScript 17 JSP 21 Spring 30 Spring JDBC Spring Web Web ServicesSOA JAXWS 20 XML 10 UML 20 JUNIT Oracle WebLogic Application Server Eclipse Indigo 37 Maven 20 SVN SoapUI Oracle 10 g JIRA Bootstrap Programmer Analyst Java Developer Idea Labs Hyderabad Telangana March 2010 to February 2011 Description Developed a Prototype for a Retail Chain which is a complete ERP solution getting all the modules integrated to a single system that directly connects all the modules like Retail outlet Central Repository Procurement Department to a single System Adding a new technology to the software that is RFID Radio Frequency Identification this replaces the barcodes Responsibilities Followed agile methodology SCRUM for developing this project with each SPRINT lasting for 23 weeks Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC Designed project related documents using Visual Paradigm Unified Modeling Language tool which includes Use case Class and Sequence diagrams Worked on Rally dev for defining user stories tasks and defects Wrote spring rest controller calls for web application data interactions using jQuery Implemented Struts framework based on the Model View Controller design paradigm Implemented SpringStruts integration Implemented various XML technologies like XML schemas JAXB parsers and XMLBean Used Struts MVC Framework to flow the process Implemented service method and SQL queries PLSQL to interact with Oracle DBMS Developed unit test cases using Mockito framework for testing accuracy of code and logging is done using SLF4j Log4j Deployed the application on a WebLogic server on a UNIX platform Used Maven 20 for create the project archetype and build the interface modules for create war and ear files Environment Java 16 J2EE 16 HTML CSS AJAX jQuery JavaScript 17 JSP 21 Struts MVC XML 10 UML 20 Mockito frameworkJUNIT Log4j SLF4j Apache Tomcat Server Eclipse Indigo 37 Maven 20 SVN UNIX Oracle 10 g MySQL MJIRA Education Bachelors Skills ECLIPSE EJB J2EE JAVA HIBERNATE Additional Information Technical Skills Web Languages Core Java J2EE JSP JSF Servlets Struts 20 Spring Web Flow JSP Tag Libraries EJB 30 JMS JDBC JNDI JavaScript SQL Frameworks Spring MVC Spring Security LDAP Spring Core Spring Webflow Spring DAO Spring ORM Spring Boot Spring Cloud Struts Hibernate JSF Spring Data Methodology OOAD OOPS UML RUP Autosys J2EE Design Patterns Scripting Language Java Script CSS AngularJS PHP Web Technologies HTML DHTML JavaScript CSS AJAX JSON JQUERY AngularJS Database Oracle11g10g9i MySQL 5x SQL PLSQL TOAD and SQLServer Operating System DOS Windows UNIX Red Hat IDE Tools Eclipse RSA JBuilder Oracle ADF Web Logic Enterprised Architect Rational Rose LDAP RUP Methodology Clear CaseClear Quest Red Hat JBOSS Developer Studio Web Services SOAP WSDL UDDI SOAP UI RESTful Version Control SVN IBM Clear case CVS Tools RAD Eclipse Edit Plus Apache Ant log4j JUnit Visio ANT Maven WebApp Servers Websphere Application Server 80 Apache Tomcat SunOne Application Server Web Logic 718x JBoss 4x5x Other MS Office Suite MS FrontPage Toad SQL Developer Microsoft VSS Test Director Dreamweaver putty GEMS SOAP UI C Oracle ATG Drools",
    "extracted_keywords": [
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Sr",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Thermo",
        "Fisher",
        "Scientific",
        "Columbus",
        "OH",
        "IT",
        "experience",
        "analysis",
        "design",
        "development",
        "documentation",
        "testing",
        "software",
        "systems",
        "Java",
        "J2EE",
        "Internet",
        "technologies",
        "Expertise",
        "Object",
        "Oriented",
        "Programming",
        "development",
        "ntier",
        "enterprise",
        "web",
        "applications",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "phases",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Maintenance",
        "Strong",
        "hands",
        "experience",
        "Enterprise",
        "Web",
        "applications",
        "ntier",
        "Architecture",
        "JavaJ2EE",
        "Spring",
        "JSP",
        "Hibernate",
        "Servlets",
        "EJBs",
        "Struts",
        "JNDI",
        "Web",
        "services",
        "XML",
        "JDBC",
        "knowledge",
        "springs",
        "IOC",
        "AOP",
        "Spring",
        "MVC",
        "springs",
        "integration",
        "Hibernate",
        "Struts",
        "Experience",
        "frameworks",
        "Spring",
        "MVCIOCORMJDBCAOPContextSecurity",
        "Struts",
        "MVC",
        "architecture",
        "interceptors",
        "action",
        "mappings",
        "resource",
        "bundles",
        "JSF",
        "Microservices",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "RabbitMQ",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "Experience",
        "angularjs",
        "code",
        "page",
        "applications",
        "SPA",
        "language",
        "core",
        "directives",
        "expressions",
        "modules",
        "features",
        "Angular",
        "directives",
        "dependency",
        "injection",
        "modules",
        "experience",
        "Web",
        "interfaces",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "SASS",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "js",
        "BackboneJS",
        "Experience",
        "web",
        "development",
        "JQuery",
        "AJAX",
        "Java",
        "Script",
        "XML",
        "CSS",
        "Strong",
        "Experience",
        "AWS",
        "platform",
        "dimensions",
        "scalability",
        "VPC",
        "EC2",
        "ELB",
        "S3",
        "EBS",
        "knowledge",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Amazon",
        "Cloud",
        "Services",
        "Elastic",
        "Compute",
        "Cloud",
        "EC2",
        "Simple",
        "Storage",
        "ServiceS3",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "Cloud",
        "Watch",
        "SNS",
        "SQS",
        "LAMBDA",
        "applications",
        "architectures",
        "Apache",
        "Kafka",
        "cluster",
        "system",
        "APIs",
        "Microservices",
        "Experience",
        "Web",
        "Services",
        "WSDL",
        "SOAP",
        "HTTP",
        "UDDI",
        "knowledge",
        "web",
        "services",
        "Excellent",
        "Relational",
        "Database",
        "understanding",
        "experience",
        "Oracle",
        "SQL",
        "Server",
        "MySQL",
        "DDL",
        "scripts",
        "DML",
        "scripts",
        "creation",
        "database",
        "objects",
        "Oracle",
        "database",
        "MongoDB",
        "scripts",
        "NoSQL",
        "database",
        "data",
        "changes",
        "Developed",
        "applications",
        "SDLC",
        "environments",
        "industry",
        "techniques",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "Jenkins",
        "time",
        "deployment",
        "Microservices",
        "building",
        "deployment",
        "applications",
        "build",
        "tools",
        "ANT",
        "Maven",
        "Handson",
        "experience",
        "Eclipse",
        "SLF4j",
        "Log4j",
        "JUnit",
        "Mockito",
        "TestNG",
        "testing",
        "JTest",
        "Performance",
        "Testing",
        "Clear",
        "Case",
        "Microsoft",
        "Visual",
        "Source",
        "Safe",
        "CVS",
        "SVN",
        "version",
        "control",
        "Excellent",
        "Client",
        "interaction",
        "skills",
        "experience",
        "team",
        "technologies",
        "Ability",
        "people",
        "ability",
        "things",
        "sense",
        "team",
        "player",
        "Work",
        "Experience",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Thermo",
        "Fisher",
        "Scientific",
        "Carlsbad",
        "CA",
        "June",
        "Present",
        "Description",
        "Thermo",
        "Fisher",
        "Cart",
        "Checkout",
        "project",
        "migrating",
        "micro",
        "services",
        "Comergent",
        "system",
        "customers",
        "flexibility",
        "performance",
        "Tablet",
        "Desktop",
        "Applications",
        "Responsibilities",
        "implementation",
        "design",
        "phases",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "Development",
        "Testing",
        "Implementation",
        "Maintenance",
        "Support",
        "Agile",
        "Scrum",
        "methodology",
        "software",
        "development",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "Java",
        "Optional",
        "Stream",
        "API",
        "Bulk",
        "data",
        "operations",
        "Collections",
        "performance",
        "Application",
        "Microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "AWS",
        "test",
        "services",
        "Microservices",
        "Spring",
        "Cloud",
        "library",
        "services",
        "Netflix",
        "Eureka",
        "Naming",
        "Server",
        "Netflix",
        "Ribbon",
        "Feign",
        "Client",
        "Rest",
        "client",
        "response",
        "client",
        "bean",
        "J2EE",
        "design",
        "patterns",
        "Singleton",
        "Data",
        "Transfer",
        "Object",
        "DTO",
        "Data",
        "Business",
        "Object",
        "VO",
        "development",
        "components",
        "Design",
        "roles",
        "groups",
        "users",
        "resources",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Visio",
        "Flow",
        "Diagram",
        "Class",
        "Diagram",
        "Sequence",
        "Diagram",
        "Spring",
        "MVC",
        "flow",
        "modules",
        "Spring",
        "AOP",
        "Dependency",
        "injection",
        "modules",
        "project",
        "Spring",
        "Data",
        "JPA",
        "ORM",
        "tool",
        "data",
        "functionalities",
        "persistence",
        "layer",
        "transactions",
        "POJO",
        "Objects",
        "Spring",
        "Data",
        "JPA",
        "Annotations",
        "Implement",
        "Lombok",
        "API",
        "annotations",
        "code",
        "POJO",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "API",
        "Spring",
        "Boot",
        "Microservices",
        "MongoDB",
        "scripts",
        "NoSQL",
        "database",
        "data",
        "changes",
        "Configuring",
        "Apache",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "Java",
        "collection",
        "Framework",
        "Classes",
        "Application",
        "Frontend",
        "JavaScript",
        "framework",
        "AngularJS",
        "Nodejs",
        "internet",
        "applications",
        "JS",
        "Require",
        "JS",
        "use",
        "module",
        "Speed",
        "Web",
        "pages",
        "AJAX",
        "JavaScript",
        "ReactJS",
        "development",
        "page",
        "application",
        "ReactJS",
        "framework",
        "JavaScript",
        "conjunction",
        "HTML5",
        "CSS3",
        "standards",
        "end",
        "UI",
        "team",
        "UI",
        "spring",
        "view",
        "component",
        "JSP",
        "HTML5",
        "CSS",
        "JQuery",
        "AngularJS",
        "custom",
        "directives",
        "filters",
        "view",
        "data",
        "Angular",
        "Service",
        "Angular",
        "Factory",
        "Planned",
        "contacts",
        "management",
        "singlepage",
        "application",
        "SPA",
        "custom",
        "REST",
        "API",
        "Nodejs",
        "custom",
        "Angular",
        "Directives",
        "Services",
        "singlepage",
        "web",
        "application",
        "team",
        "reactive",
        "Angular",
        "components",
        "RXJS",
        "service",
        "infrastructure",
        "components",
        "web",
        "UI",
        "initiative",
        "test",
        "scripts",
        "Selenium",
        "Cucumber",
        "Splunk",
        "Enterprise",
        "logs",
        "flow",
        "application",
        "PRD",
        "servers",
        "issues",
        "production",
        "servers",
        "production",
        "support",
        "Gigya",
        "users",
        "identity",
        "authentication",
        "AWS",
        "solutions",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "web",
        "design",
        "RWD",
        "frameworks",
        "Angular20",
        "typescript",
        "MVC",
        "frameworks",
        "Bootstrap",
        "Managed",
        "servers",
        "AWS",
        "platform",
        "instances",
        "Puppet",
        "Chef",
        "Ansible",
        "Configuration",
        "management",
        "Java",
        "Web",
        "Services",
        "PoS",
        "Services",
        "systems",
        "service",
        "Web",
        "Services",
        "Microservices",
        "API",
        "Docker",
        "Files",
        "Microservices",
        "Swagger",
        "API",
        "documentation",
        "REST",
        "Zipkin",
        "trouble",
        "problems",
        "microservices",
        "advance",
        "SQL",
        "scripts",
        "PLSQL",
        "Developer",
        "data",
        "inout",
        "flow",
        "Oracle",
        "Experience",
        "data",
        "S3",
        "knowledge",
        "S3",
        "features",
        "lifecycle",
        "management",
        "events",
        "JBoss",
        "server",
        "application",
        "Docker",
        "deployment",
        "pipeline",
        "custom",
        "application",
        "images",
        "cloud",
        "Jenkins",
        "Docker",
        "container",
        "system",
        "Kubernetes",
        "integration",
        "TDD",
        "environment",
        "MOCKITO",
        "test",
        "cases",
        "bean",
        "components",
        "JUnit",
        "framework",
        "Code",
        "coverage",
        "plugins",
        "SonarQube",
        "coverage",
        "quality",
        "code",
        "Jasmine",
        "Karma",
        "frameworks",
        "UI",
        "test",
        "cases",
        "framework",
        "Log4J",
        "annotations",
        "messages",
        "Gradle",
        "integration",
        "building",
        "project",
        "Stash",
        "repository",
        "Git",
        "version",
        "control",
        "JIRA",
        "tool",
        "management",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Spring",
        "JPA",
        "Spring",
        "boot",
        "Spring",
        "cloud",
        "Spring",
        "Security",
        "Hibernate",
        "JavaScript",
        "Angular",
        "ReactJS",
        "HTML",
        "CSS",
        "Ajax",
        "Jquery",
        "Swagger",
        "API",
        "Lombok",
        "API",
        "JBoss",
        "Eclipse",
        "Kubernetes",
        "Docker",
        "Gradle",
        "Stash",
        "log4j",
        "Junit",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "JAXRS",
        "Splunk",
        "Apache",
        "Kafka",
        "MongoDB",
        "Windows",
        "XP",
        "Design",
        "Patterns",
        "AWS",
        "WebLogic102",
        "SQL",
        "PLSQL",
        "TOAD",
        "Oracle",
        "g",
        "DB2",
        "Docker",
        "Maven",
        "Jenkins",
        "Cobertura",
        "Sonar",
        "WinSCP",
        "Putty",
        "JUnit",
        "Mockito",
        "Jersey",
        "JSON",
        "XML",
        "Selenium",
        "Cucumber",
        "EXT",
        "JS",
        "Express",
        "JS",
        "4x",
        "NodeJS",
        "Typescript",
        "ES7",
        "Sr",
        "Full",
        "Stack",
        "Developer",
        "Capital",
        "Chicago",
        "IL",
        "April",
        "May",
        "Description",
        "CLIP",
        "workflow",
        "Empath",
        "capital",
        "agent",
        "servicing",
        "application",
        "web",
        "application",
        "technology",
        "experience",
        "users",
        "increase",
        "credit",
        "limit",
        "workflow",
        "Omnius",
        "framework",
        "Nodejs",
        "vuejs",
        "flexibility",
        "performance",
        "application",
        "Responsibilities",
        "phases",
        "project",
        "development",
        "Agile",
        "Software",
        "Development",
        "Methodology",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "application",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "Java",
        "Optional",
        "Stream",
        "API",
        "Bulk",
        "data",
        "operations",
        "Collections",
        "performance",
        "Application",
        "Microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "AWS",
        "test",
        "micro",
        "services",
        "Spring",
        "IOC",
        "Application",
        "Context",
        "files",
        "database",
        "object",
        "mapping",
        "Hibernate",
        "annotations",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "API",
        "Spring",
        "Boot",
        "Microservices",
        "Java",
        "collection",
        "Framework",
        "Classes",
        "Application",
        "objects",
        "changes",
        "user",
        "interfaces",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "JS",
        "AJAX",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "data",
        "views",
        "data",
        "server",
        "Project",
        "structure",
        "spring",
        "MVC",
        "pattern",
        "Spring",
        "Boot",
        "Hibernate",
        "Hibernate",
        "Framework",
        "mapping",
        "persistence",
        "application",
        "service",
        "components",
        "beans",
        "Spring",
        "IOC",
        "creation",
        "Hibernate",
        "mapping",
        "files",
        "generation",
        "database",
        "schema",
        "Spring",
        "MVC",
        "architecture",
        "spring",
        "JSP",
        "Java",
        "beans",
        "Struts",
        "Framework",
        "modules",
        "Java",
        "Apache",
        "Camel",
        "spring",
        "Hibernate",
        "development",
        "services",
        "architecture",
        "source",
        "technologies",
        "Hibernate",
        "ORM",
        "JPA",
        "Annotations",
        "Spring",
        "MVC",
        "Framework",
        "REST",
        "Microservices",
        "spring",
        "Boot",
        "Spring",
        "Inversion",
        "Control",
        "Transaction",
        "Management",
        "processing",
        "batch",
        "files",
        "features",
        "AGILE",
        "environment",
        "Angular",
        "Typescript",
        "Angular",
        "web",
        "services",
        "forms",
        "Template",
        "forms",
        "Modern",
        "Driven",
        "Reactive",
        "user",
        "interface",
        "React",
        "JS",
        "Flux",
        "SPA",
        "development",
        "JS",
        "code",
        "cross",
        "browser",
        "compatibility",
        "issues",
        "Mozilla",
        "IE",
        "Safari",
        "FF",
        "ReactRouter",
        "application",
        "Single",
        "Page",
        "Application",
        "React",
        "JS",
        "components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "concept",
        "Persistence",
        "layer",
        "DAO",
        "SpringHibernate",
        "Developed",
        "web",
        "layer",
        "springs",
        "framework",
        "project",
        "MVC",
        "pattern",
        "Developed",
        "state",
        "transfer",
        "REST",
        "services",
        "Simple",
        "Object",
        "Access",
        "Protocol",
        "SOAP",
        "services",
        "part",
        "requirement",
        "business",
        "logic",
        "controllers",
        "directives",
        "routers",
        "webpages",
        "page",
        "application",
        "User",
        "Interactive",
        "Web",
        "pages",
        "help",
        "HTMLHTML5",
        "CSSCSS3",
        "SASSLESS",
        "JavaScript",
        "Angular",
        "JS",
        "Bootstrap",
        "AJAX",
        "JavaScript",
        "AngularJS",
        "AJAX",
        "technologies",
        "end",
        "user",
        "input",
        "validations",
        "web",
        "service",
        "custom",
        "Angular",
        "Directives",
        "Services",
        "singlepage",
        "web",
        "application",
        "team",
        "directives",
        "AngularJS",
        "Nodejs",
        "filters",
        "child",
        "scope",
        "modal",
        "template",
        "state",
        "application",
        "development",
        "framework",
        "webapps",
        "services",
        "Custom",
        "Directives",
        "Custom",
        "Filters",
        "NodeJS",
        "support",
        "APIs",
        "modules",
        "functionalities",
        "code",
        "DRY",
        "services",
        "modules",
        "dependencies",
        "services",
        "REST",
        "API",
        "web",
        "design",
        "RWD",
        "frameworks",
        "Angular40",
        "typescript",
        "MVC",
        "frameworks",
        "Bootstrap",
        "Vuejs",
        "Rush",
        "Learna",
        "application",
        "Spring",
        "Batch",
        "framework",
        "Multithreading",
        "performance",
        "Multithreading",
        "processing",
        "documents",
        "Hibernate",
        "persistence",
        "framework",
        "DAO",
        "layer",
        "Oracle11",
        "g",
        "database",
        "Java",
        "Message",
        "Service",
        "JMS",
        "exchange",
        "information",
        "scheduler",
        "spring",
        "batch",
        "jobs",
        "XML",
        "documents",
        "input",
        "output",
        "sources",
        "Web",
        "Services",
        "Created",
        "schema",
        "documents",
        "XML",
        "validation",
        "XML",
        "schemas",
        "Configured",
        "Maven",
        "repositories",
        "Ant",
        "projects",
        "Nexus",
        "repositories",
        "projects",
        "Jenkins",
        "deployment",
        "CICD",
        "Tomcat",
        "server",
        "application",
        "development",
        "deployment",
        "JIRA",
        "issue",
        "log4j",
        "Splunk",
        "Logging",
        "errordebug",
        "messages",
        "AWS",
        "solutions",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "Setup",
        "AWS",
        "VPCs",
        "dev",
        "staging",
        "Prod",
        "environments",
        "delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "AWS",
        "AMIs",
        "Managed",
        "servers",
        "AWS",
        "platform",
        "instances",
        "Puppet",
        "Chef",
        "Configuration",
        "management",
        "code",
        "reviews",
        "bug",
        "fixing",
        "Clear",
        "Quest",
        "bug",
        "tracking",
        "tool",
        "TDD",
        "environment",
        "MOCKITO",
        "test",
        "cases",
        "bean",
        "components",
        "JUnit",
        "framework",
        "Code",
        "coverage",
        "plugins",
        "SonarQube",
        "coverage",
        "quality",
        "code",
        "Jasmine",
        "Karma",
        "frameworks",
        "UI",
        "test",
        "cases",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "application",
        "GIT",
        "Source",
        "Control",
        "Version",
        "Management",
        "codes",
        "resources",
        "Environment",
        "Java",
        "Scala",
        "J2EE",
        "Spring",
        "Framework",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "Boot",
        "Hibernate",
        "REST",
        "Web",
        "Services",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "Angular",
        "JS",
        "NodeJS",
        "ReactJS",
        "Bootstrap",
        "AJAX",
        "JSON",
        "Apache",
        "Tomcat",
        "Apache",
        "Maven",
        "Postman",
        "JUnit",
        "Log4j",
        "GIT",
        "JIRA",
        "Jenkins",
        "Oracle",
        "g",
        "Windows",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "GAP",
        "CA",
        "October",
        "March",
        "Description",
        "GAP",
        "Inc",
        "Clothing",
        "retailer",
        "clothing",
        "accessories",
        "care",
        "men",
        "women",
        "children",
        "babies",
        "Project",
        "GAP",
        "members",
        "portal",
        "modules",
        "customers",
        "users",
        "login",
        "website",
        "user",
        "orders",
        "order",
        "status",
        "profiles",
        "location",
        "products",
        "notification",
        "products",
        "reward",
        "points",
        "system",
        "admin",
        "tool",
        "users",
        "order",
        "information",
        "customer",
        "service",
        "application",
        "Java",
        "J2EE",
        "technologies",
        "spring",
        "Hibernate",
        "RESTFUL",
        "Web",
        "Services",
        "Deployed",
        "WebSphere",
        "Application",
        "Server",
        "Linux",
        "Responsibilities",
        "Full",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Requirement",
        "design",
        "development",
        "testing",
        "documentation",
        "Spring",
        "Boot",
        "cloud",
        "Microservices",
        "spring",
        "application",
        "configuration",
        "Design",
        "framework",
        "REST",
        "API",
        "consumption",
        "Spring",
        "Rest",
        "Templates",
        "RESTFUL",
        "Web",
        "Services",
        "clients",
        "Mobile",
        "Tablet",
        "Web",
        "Design",
        "application",
        "Spring",
        "MVC",
        "JSP",
        "JSTL",
        "AJAX",
        "presentation",
        "layer",
        "business",
        "layer",
        "spring",
        "layer",
        "Hibernate",
        "Spring",
        "IOC",
        "Application",
        "Context",
        "files",
        "database",
        "object",
        "mapping",
        "Hibernate",
        "annotations",
        "framework",
        "HTML5",
        "template",
        "views",
        "JavaScript",
        "object",
        "models",
        "AngularJS",
        "applications",
        "customer",
        "software",
        "JavaScript",
        "development",
        "techniques",
        "design",
        "methodology",
        "Spring",
        "AOP",
        "transactions",
        "session",
        "aspects",
        "security",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "ORM",
        "modules",
        "persistence",
        "layer",
        "JPAHibernate",
        "data",
        "models",
        "Cassandra",
        "Cassandra",
        "Query",
        "Language",
        "data",
        "Oracle",
        "g",
        "Cassandra",
        "Ecommerce",
        "project",
        "Development",
        "Spring",
        "Web",
        "Flow",
        "Hybris",
        "frontend",
        "UI",
        "Backbonejs",
        "jQuery",
        "CSS3",
        "Dojo",
        "AJAX",
        "User",
        "Interface",
        "HTML5",
        "CSS3",
        "AngularJS",
        "Bootstrap",
        "SPA",
        "Single",
        "Page",
        "Application",
        "Angular",
        "router",
        "page",
        "application",
        "status",
        "modals",
        "service",
        "components",
        "Angular",
        "services",
        "Object",
        "Oriented",
        "JavaScript",
        "JQuery",
        "HTML",
        "CSS3",
        "designs",
        "ReactJS",
        "REDUX",
        "rendering",
        "deployment",
        "end",
        "web",
        "pages",
        "CSS",
        "JS",
        "code",
        "Sass",
        "mouseclick",
        "user",
        "analytics",
        "web",
        "service",
        "NodeJS",
        "sites",
        "client",
        "contracts",
        "data",
        "Emberjs",
        "D3js",
        "MySQL",
        "AWS",
        "Availability",
        "Practices",
        "backuprestore",
        "infrastructure",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "function",
        "AMQP",
        "messages",
        "Rabbit",
        "MQ",
        "JMS",
        "message",
        "Apache",
        "MQ",
        "edge",
        "device",
        "scripts",
        "build",
        "deployment",
        "maintenance",
        "tasks",
        "Jenkins",
        "Docker",
        "Maven",
        "Setup",
        "Servers",
        "JBoss",
        "Apache",
        "UNIX",
        "application",
        "Dev",
        "ST",
        "UAT",
        "Environment",
        "testdriven",
        "development",
        "environment",
        "JUnit",
        "Mockito",
        "test",
        "cases",
        "Karma",
        "Jasmine",
        "frontend",
        "test",
        "cases",
        "business",
        "analysts",
        "requirements",
        "JIRAS",
        "sprints",
        "Environment",
        "Java",
        "Design",
        "Patterns",
        "WebLogic102",
        "Java",
        "J2EE",
        "Servlet",
        "jQuery",
        "Struts",
        "Spring",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Spring",
        "Core",
        "Spring",
        "MVC",
        "Microservices",
        "Hibernate",
        "API",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "UDDI",
        "JAXRS",
        "JSON",
        "ReactJS",
        "HTML",
        "AJAX",
        "JavaScript",
        "XML",
        "NodeJS",
        "MongoDB",
        "SQL",
        "PLSQL",
        "TOAD",
        "Oracle",
        "g",
        "MQ",
        "Maven",
        "Jenkins",
        "Log4J",
        "JUnit",
        "Mockito",
        "Karma",
        "Jasmine",
        "JIRA",
        "Java",
        "Developer",
        "Telcordia",
        "India",
        "Labs",
        "Chennai",
        "July",
        "August",
        "Description",
        "web",
        "application",
        "customers",
        "Customer",
        "Service",
        "Representatives",
        "client",
        "account",
        "information",
        "end",
        "users",
        "application",
        "account",
        "details",
        "plan",
        "services",
        "information",
        "end",
        "Customer",
        "representatives",
        "client",
        "information",
        "tasks",
        "Responsibilities",
        "page",
        "Web",
        "UI",
        "HTML5",
        "Bootstrap",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Developed",
        "views",
        "controller",
        "model",
        "components",
        "JavaScript",
        "MVC",
        "Java",
        "Beans",
        "Custom",
        "Tag",
        "Libraries",
        "validations",
        "JavaScript",
        "frontend",
        "GUI",
        "AJAX",
        "Prototype",
        "module",
        "Angularjs",
        "Extjs",
        "Pagination",
        "Data",
        "grid",
        "functionality",
        "Data",
        "grid",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "API",
        "Oracle",
        "database",
        "development",
        "implementation",
        "web",
        "application",
        "prototype",
        "jQuery",
        "AngularJS",
        "Nodejs",
        "API",
        "middleware",
        "system",
        "SOAP",
        "web",
        "service",
        "SOA",
        "SOAP",
        "Based",
        "Web",
        "services",
        "JAXWS",
        "implementation",
        "Apache",
        "CXF",
        "Apache",
        "Axis",
        "Framework",
        "middleware",
        "interaction",
        "JMSIBM",
        "WebSphere",
        "MQ",
        "series",
        "messages",
        "components",
        "JMSMail",
        "API",
        "Framework",
        "issue",
        "tool",
        "JIRA",
        "bug",
        "fixing",
        "life",
        "cycle",
        "traceability",
        "SOAP",
        "web",
        "service",
        "AJAX",
        "requests",
        "Environment",
        "Java",
        "JSF",
        "Spring",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "Spring",
        "REST",
        "Spring",
        "Core",
        "Hibernate",
        "JSP",
        "JMS",
        "MDB",
        "AJAX",
        "JBoss",
        "JPA",
        "Java",
        "Beans",
        "XML",
        "Jenkins",
        "HTML5",
        "JavaScript",
        "jQuery",
        "AJAX",
        "Jira",
        "CSS3",
        "XSL",
        "Oracle",
        "g",
        "SQL",
        "PLSQL",
        "MySQL",
        "Nodejs",
        "CVS",
        "UML",
        "Maven",
        "SOAP",
        "Java",
        "Developer",
        "Convergys",
        "March",
        "June",
        "Description",
        "project",
        "development",
        "support",
        "eCommerce",
        "banking",
        "dotcom",
        "operations",
        "Account",
        "Balance",
        "History",
        "functionality",
        "legacy",
        "application",
        "screen",
        "snapshot",
        "user",
        "transaction",
        "User",
        "balance",
        "time",
        "change",
        "fee",
        "total",
        "days",
        "transaction",
        "history",
        "screen",
        "Pagination",
        "controls",
        "user",
        "pages",
        "user",
        "transactions",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "components",
        "reports",
        "reports",
        "authentication",
        "authorization",
        "report",
        "criteria",
        "generation",
        "reporting",
        "UML",
        "class",
        "diagram",
        "application",
        "Spring",
        "MVC",
        "Architecture",
        "Presentation",
        "layer",
        "JSP",
        "HTML",
        "AJAX",
        "jQuery",
        "client",
        "customer",
        "experience",
        "Business",
        "layer",
        "spring",
        "IOC",
        "AOP",
        "DTO",
        "JTA",
        "Persistence",
        "layer",
        "DAO",
        "Spring",
        "JDBC",
        "modules",
        "POJO",
        "classes",
        "CRUD",
        "operations",
        "application",
        "industry",
        "design",
        "patterns",
        "Singleton",
        "Business",
        "Delegate",
        "Factory",
        "Pattern",
        "maintenance",
        "code",
        "reusability",
        "Cross",
        "Browser",
        "compatibility",
        "Responsive",
        "Web",
        "Design",
        "Twitter",
        "Bootstrap",
        "custom",
        "media",
        "procedures",
        "cursors",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "database",
        "Oracle",
        "g",
        "Web",
        "services",
        "communication",
        "SOAP",
        "HTTP",
        "CXF",
        "unit",
        "test",
        "cases",
        "JUNIT",
        "accuracy",
        "code",
        "log4j",
        "Environment",
        "Java",
        "J2EE",
        "HTML",
        "CSS",
        "AJAX",
        "jQuery",
        "JavaScript",
        "JSP",
        "Spring",
        "Spring",
        "JDBC",
        "Spring",
        "Web",
        "Web",
        "ServicesSOA",
        "JAXWS",
        "XML",
        "UML",
        "JUNIT",
        "Oracle",
        "WebLogic",
        "Application",
        "Server",
        "Eclipse",
        "Indigo",
        "Maven",
        "SVN",
        "SoapUI",
        "Oracle",
        "g",
        "JIRA",
        "Bootstrap",
        "Programmer",
        "Analyst",
        "Java",
        "Developer",
        "Idea",
        "Labs",
        "Hyderabad",
        "Telangana",
        "March",
        "February",
        "Description",
        "Prototype",
        "Retail",
        "Chain",
        "ERP",
        "solution",
        "modules",
        "system",
        "modules",
        "Retail",
        "outlet",
        "Central",
        "Repository",
        "Procurement",
        "Department",
        "System",
        "technology",
        "software",
        "RFID",
        "Radio",
        "Frequency",
        "Identification",
        "barcodes",
        "Responsibilities",
        "methodology",
        "project",
        "SPRINT",
        "weeks",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "project",
        "documents",
        "Visual",
        "Paradigm",
        "Unified",
        "Modeling",
        "Language",
        "tool",
        "Use",
        "case",
        "Class",
        "Sequence",
        "diagrams",
        "Rally",
        "dev",
        "user",
        "stories",
        "tasks",
        "defects",
        "spring",
        "rest",
        "controller",
        "web",
        "application",
        "data",
        "interactions",
        "jQuery",
        "Struts",
        "framework",
        "Model",
        "View",
        "Controller",
        "design",
        "paradigm",
        "SpringStruts",
        "integration",
        "XML",
        "technologies",
        "XML",
        "schemas",
        "JAXB",
        "parsers",
        "XMLBean",
        "Struts",
        "MVC",
        "Framework",
        "process",
        "service",
        "method",
        "SQL",
        "Oracle",
        "DBMS",
        "unit",
        "test",
        "cases",
        "Mockito",
        "framework",
        "testing",
        "accuracy",
        "code",
        "logging",
        "SLF4j",
        "Log4j",
        "application",
        "WebLogic",
        "server",
        "UNIX",
        "platform",
        "Maven",
        "project",
        "archetype",
        "interface",
        "modules",
        "war",
        "files",
        "Environment",
        "Java",
        "J2EE",
        "HTML",
        "CSS",
        "AJAX",
        "jQuery",
        "JavaScript",
        "JSP",
        "Struts",
        "MVC",
        "XML",
        "UML",
        "Mockito",
        "frameworkJUNIT",
        "Log4j",
        "SLF4j",
        "Apache",
        "Tomcat",
        "Server",
        "Eclipse",
        "Indigo",
        "Maven",
        "SVN",
        "UNIX",
        "Oracle",
        "g",
        "MySQL",
        "MJIRA",
        "Education",
        "Bachelors",
        "Skills",
        "ECLIPSE",
        "EJB",
        "J2EE",
        "HIBERNATE",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Web",
        "Languages",
        "Core",
        "Java",
        "J2EE",
        "JSP",
        "JSF",
        "Servlets",
        "Struts",
        "Spring",
        "Web",
        "Flow",
        "JSP",
        "Tag",
        "Libraries",
        "EJB",
        "JMS",
        "JDBC",
        "JNDI",
        "JavaScript",
        "SQL",
        "Frameworks",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "LDAP",
        "Spring",
        "Core",
        "Spring",
        "Webflow",
        "Spring",
        "DAO",
        "Spring",
        "ORM",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Struts",
        "Hibernate",
        "JSF",
        "Spring",
        "Data",
        "Methodology",
        "UML",
        "RUP",
        "Autosys",
        "J2EE",
        "Design",
        "Patterns",
        "Scripting",
        "Language",
        "Java",
        "Script",
        "CSS",
        "PHP",
        "Web",
        "Technologies",
        "HTML",
        "DHTML",
        "JavaScript",
        "CSS",
        "AJAX",
        "JSON",
        "JQUERY",
        "AngularJS",
        "Database",
        "Oracle11g10g9i",
        "MySQL",
        "5x",
        "SQL",
        "PLSQL",
        "TOAD",
        "SQLServer",
        "Operating",
        "System",
        "DOS",
        "Windows",
        "UNIX",
        "Red",
        "Hat",
        "IDE",
        "Tools",
        "Eclipse",
        "RSA",
        "JBuilder",
        "Oracle",
        "ADF",
        "Web",
        "Logic",
        "Enterprised",
        "Architect",
        "Rational",
        "Rose",
        "LDAP",
        "RUP",
        "Methodology",
        "Clear",
        "CaseClear",
        "Quest",
        "Red",
        "Hat",
        "JBOSS",
        "Developer",
        "Studio",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "UDDI",
        "SOAP",
        "UI",
        "RESTful",
        "Version",
        "Control",
        "SVN",
        "IBM",
        "Clear",
        "case",
        "CVS",
        "Tools",
        "RAD",
        "Eclipse",
        "Edit",
        "Apache",
        "Ant",
        "log4j",
        "JUnit",
        "Visio",
        "ANT",
        "Maven",
        "WebApp",
        "Servers",
        "Websphere",
        "Application",
        "Server",
        "Apache",
        "Tomcat",
        "SunOne",
        "Application",
        "Server",
        "Web",
        "Logic",
        "718x",
        "JBoss",
        "MS",
        "Office",
        "Suite",
        "MS",
        "FrontPage",
        "Toad",
        "SQL",
        "Developer",
        "Microsoft",
        "VSS",
        "Test",
        "Director",
        "Dreamweaver",
        "GEMS",
        "SOAP",
        "UI",
        "C",
        "Oracle",
        "ATG"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:06:29.502659",
    "resume_data": "Sr Full Stack Java Developer Sr Full Stack span lJavaspan span lDeveloperspan Sr Full Stack Java Developer Thermo Fisher Scientific Columbus OH 8years of IT experience in analysis design development documentation implementing and testing of software systems in Java J2EE and Internet technologies Expertise in Object Oriented Programming and development of ntier componentbased enterprise web applications Involved in the Software Development Life Cycle SDLC phases which include Analysis Design Implementation Testing and Maintenance Strong hands on experience in developing the Enterprise and Web applications on ntier Architecture using JavaJ2EE Spring JSP Hibernate Servlets EJBs Struts JNDI Web services XML and JDBC Good knowledge of springs IOC AOP Spring MVC and springs integration with Hibernate and Struts technologies Experience in frameworks like Spring MVCIOCORMJDBCAOPContextSecurity and Struts MVC architecture interceptors action mappings and resource bundles and JSF Used a Microservices architecture with Spring Bootbased services interacting through a combination of REST and RabbitMQ or Apache Kafka message brokers Experience writing angularjs code for developing Single page applications SPA used several in built language core directives expressions and modules Experience with features of Angular 2 4 such as directives dependency injection modules and routing Extensive experience in developing Web interfaces using HTML5 CSS3 Bootstrap SASS LESS JavaScript JQuery AngularJS react js and BackboneJS Experience in dynamic web development using JQuery AJAX Java Script XML and CSS Strong Experience on AWS platform and its dimensions of scalability including VPC EC2 ELB S3 and EBS Good knowledge on Amazon Web Services AWS Amazon Cloud Services like Elastic Compute Cloud EC2 Simple Storage ServiceS3 Amazon Simple DB Amazon Cloud Watch SNS SQS LAMBDA and experienced in building highly scalable java applications using various architectures Used Apache Kafka in cluster as messaging system between the APIs and Microservices Experience in developing and consuming Web Services using WSDL SOAP HTTP and UDDI Has good knowledge in RESTful web services Excellent Relational Database understanding and experience with Oracle SQL Server and MySQL Generated DDL scripts and wrote DML scripts for creation of database objects in Oracle database Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Developed and deployed applications onto various SDLC based environments using the industry standard techniques of Continuous Integration and Continuous Deployment in Jenkins which reduces the time for the deployment of Microservices Have been involved in building and deployment of the applications by using build tools like ANT Maven etc Handson experience in using Eclipse SLF4j Log4j JUnit Mockito TestNG for building logging testing JTest for Performance Testing and Clear Case Microsoft Visual Source Safe CVS and SVN for version control Excellent Client interaction skills and proven experience in working independently as well as in a team Strongly initiative creative and able to learn new technologies Ability to deal with people ability to grasp things fast Strong sense of team player Work Experience Sr Full Stack Java Developer Thermo Fisher Scientific Carlsbad CA June 2017 to Present Description Thermo Fisher Cart Checkout this project involves migrating to micro services from the existing Comergent system to customers which increases flexibility and performance of Tablet and Desktop Applications Responsibilities Involved in the implementation of design using vital phases of the Software development life cycle SDLC that includes Development Testing Implementation and Maintenance Support Used Agile Scrum methodology for iterative incremental software development Implemented Java 18 features like Lambda expressions Java Optional Stream API for Bulk data operations on Collections which would increase the performance of the Application Used Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers and leveraging AWS to build test and deploy micro services Implemented Microservices with Spring Cloud provided library services like Netflix Eureka Naming Server Netflix Ribbon and Feign Client as a Rest client to map response to the client bean Applied J2EE design patterns like Singleton Data Transfer Object DTO Data and Business Object VO during the development of components Design roles and groups for users and resources using AWS Identity Access Management IAM Used Visio to prepare Flow Diagram Class Diagram and Sequence Diagram Implemented Spring MVC flow to interact with different modules and extensively used Spring AOP and Dependency injection during various modules of project Used Spring Data JPA as ORM tool for data related functionalities persistence layer and implemented transactions Involved in creating POJO Objects and mapped using Spring Data JPA Annotations Implement Lombok API annotations to generate boilerplate code for POJO objects Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for Microservices Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Responsible for Configuring Apache Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Extensively used the Java collection Framework Classes for Holding the Application objects Designed Frontend with in objectoriented JavaScript framework like AngularJS Nodejs Used building rich internet applications backbone JS Require JS to optimize inbrowser use and to load the module and to improve the Speed Built Web pages that are more userinteractive using AJAX JavaScript and ReactJS Participated in development of a well responsive single page application using ReactJS framework and JavaScript in conjunction with HTML5 CSS3 standards with front end UI team Designed and developed the UI using spring view component JSP HTML5 CSS 30 JQuery and AngularJS Implemented AngularJS controllers custom directives filters to maintain each view data Implemented Angular Service calls using Angular Factory Planned constructed and iterated upon a contacts management singlepage application SPA and custom REST API using AngularJS MongoDB Nodejs Built custom Angular 4 Directives and Services for singlepage web application for agilebased team Implemented reactive Angular 4 components using RXJS Developed service infrastructure components in Angular2Typescript for a unified web UI initiative Involved in writing automated test scripts using java and executed it through Selenium Cucumber Used Splunk Enterprise to retrieve the logs and to understand the flow of application in PRD servers and extensively worked in identifying the issues production servers during production support Used Gigya for authenticating users and implement identity authentication Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups optimized Responsive web design RWD is developed using frameworks like Angular20 typescript and MVC frameworks and Bootstrap Managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management Developed and published Java Web Services PoS Services so that other systems can use the service using Web Services Worked on creating Microservices API and created Docker Files for different Microservices Worked on Swagger API and autogenerated documentation for all REST calls Used Zipkin to trouble shoot problems in microservices architectures Created advance SQL scripts in PLSQL Developer to facilitate the data inout flow in Oracle Experience in storing sever data into S3 and have indepth knowledge on various S3 features like versioning lifecycle management logging events etc Used JBoss server to deploy the application Extensively involved in a Docker deployment pipeline for custom application images in the cloud using Jenkins Used the Docker container system with the Kubernetes integration Worked in TDD environment used MOCKITO to develop test cases for java bean components and test them through JUnit framework And used Code coverage plugins like SonarQube to improve the coverage and quality of code Implemented Jasmine and Karma frameworks for UI test cases Logging framework Log4J is used with Sl4j annotations to log messages Used Gradle for integration and building of the project Used Stash repository for Git version control JIRA tracking tool for assigning and defect management Environment Java 18 J2EE Spring 4 Spring JPA Spring boot 115 Spring cloud Spring Security Hibernate JavaScript Angular 24 ReactJS HTML 5040 CSS Ajax Jquery Swagger API Lombok API JBoss Eclipse Kubernetes Docker Gradle Stash log4j Junit XML Web Services SOAP WSDL JAXRS Splunk Apache Kafka MongoDB Windows XP Design Patterns AWS WebLogic102 SQL PLSQL TOAD Oracle 10g DB2 Docker Maven Jenkins Cobertura Sonar WinSCP Putty Log4J JUnit Mockito Jersey JSON XML Selenium Cucumber EXT JS Express JS 4x NodeJS Typescript ES7 Sr Full Stack Developer Capital One Chicago IL April 2015 to May 2017 Description CLIP this workflow implemented through Empath itself is a capital one agent servicing application It is designed as progressive web application technology to deliver the seamless experience to the users for increase the credit limit enhancing the workflow using Omnius framework Nodejs vuejs which increases the flexibility and performance of the application Responsibilities Involved in various phases of project development following Agile Software Development Methodology and Test Driven Development TDD to build the application Implemented Java 18 features like Lambda expressions Java Optional Stream API for Bulk data operations on Collections which would increase the performance of the Application Used Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers and leveraging AWS to build test and deploy micro services Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for Microservices Extensively used the Java collection Framework Classes for Holding the Application objects Involved in implementing the changes in user interfaces using HTML5 CSS3 JavaScript Angular JS and AJAX Used AngularJS to create Single Page Applications SPA which can bind data to specific views and synchronize data with server Implemented the Project structure based on spring MVC pattern using Spring Boot and Hibernate Used Hibernate Framework for object relational mapping and persistence Developed application service components and configured beans using Spring IOC creation of Hibernate mapping files and generation of database schema Implemented Spring MVC architecture using spring JSP Java beans to migrate from Struts Framework Developed different modules using Java Apache Camel spring and Hibernate Involved in development of services based architecture utilizing open source technologies like Hibernate ORM with JPA Annotations and Spring MVC Framework Developed the REST based Microservices using spring Boot Used Spring Inversion of Control and Transaction Management for processing batch files Developed and tested features in an AGILE environment using Angular 2 and Typescript Worked on Angular 20 by consuming RESTful web services Used Angular 20 forms like Template Driven forms and Modern Driven Reactive forms Developed user interface by using the React JS Flux for SPA development Implemented react JS code to handle cross browser compatibility issues in Mozilla IE 7 8 9 Safari and FF Used ReactRouter to turn application into Single Page Application Worked in using React JS components Forms Events Keys Router Animations and Flux concept Worked on migrating Persistence layer from simple DAO to SpringHibernate Developed web layer using springs framework and to manage the project in MVC pattern Designed and Developed Representational state transfer REST based services and Simple Object Access Protocol SOAP based services as part of the requirement Worked on creating business logic in controllers directives and routers developed routing through webpages and achieved single page application Designed and Developed new User Interactive Web pages with the help of HTMLHTML5 CSSCSS3 SASSLESS JavaScript Angular JS Bootstrap and AJAX Used JavaScript AngularJS and AJAX technologies for front end user input validations and Restful web service calls Built custom Angular 4 Directives and Services for singlepage web application for agilebased team Used multiple inbuilt directives in AngularJS Nodejs such as filters rootscope child scope modal template and state in the application development Used AngularJS framework for building webapps and is highly efficient in integrating with Restful services Used AngularJS for Custom Directives Custom Filters and NodeJS for backend support with APIs Created angular modules to separate various functionalities The code was kept DRY by Injecting other services and modules as dependencies Added new services to interact with REST API using AngularJS Responsive web design RWD is developed using frameworks like Angular40 typescript and MVC frameworks and Bootstrap Vuejs Rush Learna Created application on Spring Batch framework and Multithreading to improve performance Used Multithreading for faster and parallel processing of documents Used Hibernate as persistence framework for DAO layer to access the Oracle11g database Used Java Message Service JMS for reliable and allowed asynchronous exchange of important information and set up a scheduler for spring batch jobs Defined XML documents for input and output sources of Web Services Created schema documents for XML validation and developed XML schemas Configured local Maven repositories and multicomponent Ant projects with Nexus repositories and scheduled projects in Jenkins for continuous integrationcontinuous deployment CICD Used Tomcat server running for the application development and deployment and JIRA for issue tracking Used log4j with Splunk Logging for logging errordebug messages and managing them Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups Setup AWS VPCs for dev staging and Prod environments Implemented a continuous delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Managed servers on the AWS platform instances using Puppet Chef and Configuration management Actively involved in code reviews and bug fixing using Clear Quest as bug tracking tool Worked in TDD environment used MOCKITO to develop test cases for java bean components and test them through JUnit framework And used Code coverage plugins like SonarQube to improve the coverage and quality of code Implemented Jasmine and Karma frameworks for UI test cases Implemented Test Driven Development TDD for developing and testing the application Used GIT for Source Control and Version Management of all codes and resources Environment Java 1718 Scala J2EE Spring Framework 40 Spring MVC Spring IOC Spring Boot Hibernate 43 REST Web Services HTML5 CSS3 JavaScript Angular 2040 Angular JS NodeJS ReactJS Bootstrap AJAX JSON Apache Tomcat 80 Apache Maven Postman 20 JUnit Log4j GIT JIRA Jenkins Oracle 11g Windows Sr Full Stack Java Developer GAP CA October 2013 to March 2015 Description GAP Inc is an American multinational Clothing retailer offering clothing accessories and personal care for men women children and babies The Project is about GAP members portal that has various modules for customers The users need to register login to use the secure website The user can place orders check the order status manage their profiles online find the location check the products set the notification regarding new products maintains the reward points and also the system contains admin tool for managing users and order information through customer service The complete application is developed using Java J2EE technologies spring Hibernate RESTFUL Web Services and Deployed on WebSphere Application Server on Linux Responsibilities Involved in Full Software Development Life Cycle SDLC from Requirement gathering design development testing and documentation Used Spring Boot which is radically faster in building cloud Microservices and develop spring based application with very less configuration Design common framework for REST API consumption using Spring Rest Templates Developed RESTFUL Web Services which are consumed by several clients like Mobile Tablet as well Web Design application using Spring MVC JSP JSTL and AJAX on the presentation layer the business layer is built using spring and the persistent layer uses Hibernate Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations Utilized AngularJS framework to bind HTML5 template views to JavaScript object models Worked with AngularJS applications for customer facing software using modern JavaScript development techniques and responsive design methodology Used Spring AOP to handle transactions session aspects and to implement security Used Spring MVC Spring Security Spring ORM modules to integrate with MongoDB to implement the persistence layer with JPAHibernate Worked on designing data models in Cassandra and working with Cassandra Query Language Involved in migrating data from Oracle 11g to Cassandra Involved in Ecommerce project Development using Spring Web Flow and Hybris and developed frontend UI with Backbonejs jQuery CSS3 Dojo and AJAX Responsible for designing the User Interface by coding in HTML5 CSS3 AngularJS Bootstrap to build this SPA Single Page Application Highly used Angular 2 router to build single page application for navigate through the different status and multiple modals Built the reusable service components using Angular 2 services with Object Oriented JavaScript JQuery HTML CSS3 based on the visual designs Utilized ReactJS REDUX for rendering and deployment of end setting web pages Modularized frontend CSS and JS code with Sass Built a realtime mouseclick user analytics web service with NodeJS Created sites to organize client contracts and to summarize monthly financial data using Emberjs D3js and MySQL Worked on AWS High Availability Practices and deploying backuprestore infrastructure Developed API for using AWS Lambda to manage the servers and run the code in the AWS Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device Developing scripts for build deployment maintenance and related tasks using Jenkins Docker and Maven Setup Servers JBoss Apache and UNIX and deployed application in Dev ST and UAT Environment Worked in a testdriven development environment used JUnit and Mockito for backend test cases and Karma and Jasmine for the frontend test cases Worked with the business analysts to gather requirements create the JIRAS and plan the sprints Environment Java 80 Design Patterns WebLogic102 Java 18 J2EE Servlet jQuery Struts Spring 406 Spring Boot Spring Security Spring Core Spring MVC Microservices Hibernate RESTful API Web Services SOAP WSDL UDDI JAXRS JSON ReactJS HTML AJAX JavaScript XML AngularJS NodeJS MongoDB SQL PLSQL EmberJS TOAD Oracle 10g11g MQ Maven Jenkins Log4J JUnit Mockito Karma Jasmine JIRA Java Developer Telcordia India Labs Chennai July 2012 to August 2013 Description Developed a web based application which enables customers and Customer Service Representatives of our client to access the account information of its end users online This application can be used to view the account details such as plan details the services and profile information of the end users The Customer representatives of our client can view all these information as well as perform additional administrative tasks Responsibilities Developed single page responsive Web UI using HTML5 AngularJS Bootstrap CSS3 JavaScript jQuery Developed views controller and model components implementing JavaScript MVC Developed Java Beans and Custom Tag Libraries providing clientside validations in JavaScript and providing interactive frontend GUI using AJAX Designed and developed Prototype module using Angularjs and Extjs implemented Pagination and Data grid added additional functionality for Data grid Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s Used Oracle as database and involved in the development of PLSQL backend implementation Created web application prototype using jQuery and AngularJS Responsible for Nodejs RESTful API developing as a middleware system to call SOAP web service Implemented SOA to develop SOAP Based Web services using JAXWS implementation and Apache CXF Apache Axis 2 Framework The middleware interaction used JMSIBM WebSphere MQ series for transferring messages between different components using the JMSMail API Framework Used issue tracking tool JIRA for bug fixing and life cycle traceability Designed SOAP based web service for handling asynchronous AJAX requests Environment Java 17 JSF 12 Spring 4 Spring DI Spring MVC Spring REST Spring Core Hibernate JSP JMS MDB AJAX JBoss JPA 20 Java Beans XML Jenkins HTML5 JavaScript jQuery AJAX Jira CSS3 XSL Oracle 11g SQL PLSQL MySQL AngularJS Nodejs CVS UML Maven SOAP Java Developer Convergys IN March 2011 to June 2012 Description This project involves development and support to eCommerce including both online banking and dotcom operations Worked on migrating Account Balance History functionality from legacy application where the screen provides a historical snapshot user transaction as recorded User can see how and why the balance changed over time and when a change may have triggered a fee A total of 93 days of transaction history available in the screen Pagination controls have been provided to the user to navigate across the pages if user has many transactions Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology SCRUM for developing application Developed components for categorizing reports creating reports login authentication and authorization and report criteria generation for reporting using UML class diagram Developed the application using Spring MVC Architecture Developed the Presentation layer using JSP HTML and used AJAX jQuery based rich client for improved customer experience Developed the Business layer using spring IOC AOP DTO and JTA Developed the Persistence layer DAO using Spring JDBC for all modules which has POJO classes with CRUD operations Developed the application using industry standard design patterns like Singleton Business Delegate Factory Pattern for better maintenance of code and reusability Maintained Cross Browser compatibility implement Responsive Web Design using Twitter Bootstrap custom media queries etc Involved in writing stored procedures triggers cursors and views Developed SQL PLSQL with Stored Procedures to interact with Persistent database using Oracle 10g Developed Web services to allow communication through SOAP over HTTP using CXF Worked with executed unit test cases by using JUNIT for accuracy of code and logging with log4j Environment Java 16 J2EE 16 HTML CSS AJAX jQuery JavaScript 17 JSP 21 Spring 30 Spring JDBC Spring Web Web ServicesSOA JAXWS 20 XML 10 UML 20 JUNIT Oracle WebLogic Application Server Eclipse Indigo 37 Maven 20 SVN SoapUI Oracle 10g JIRA Bootstrap Programmer Analyst Java Developer Idea Labs Hyderabad Telangana March 2010 to February 2011 Description Developed a Prototype for a Retail Chain which is a complete ERP solution getting all the modules integrated to a single system that directly connects all the modules like Retail outlet Central Repository Procurement Department to a single System Adding a new technology to the software that is RFID Radio Frequency Identification this replaces the barcodes Responsibilities Followed agile methodology SCRUM for developing this project with each SPRINT lasting for 23 weeks Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC Designed project related documents using Visual Paradigm Unified Modeling Language tool which includes Use case Class and Sequence diagrams Worked on Rally dev for defining user stories tasks and defects Wrote spring rest controller calls for web application data interactions using jQuery Implemented Struts framework based on the Model View Controller design paradigm Implemented SpringStruts integration Implemented various XML technologies like XML schemas JAXB parsers and XMLBean Used Struts MVC Framework to flow the process Implemented service method and SQL queries PLSQL to interact with Oracle DBMS Developed unit test cases using Mockito framework for testing accuracy of code and logging is done using SLF4j Log4j Deployed the application on a WebLogic server on a UNIX platform Used Maven 20 for create the project archetype and build the interface modules for create war and ear files Environment Java 16 J2EE 16 HTML CSS AJAX jQuery JavaScript 17 JSP 21 Struts MVC XML 10 UML 20 Mockito frameworkJUNIT Log4j SLF4j Apache Tomcat Server Eclipse Indigo 37 Maven 20 SVN UNIX Oracle 10g MySQL MJIRA Education Bachelors Skills ECLIPSE EJB J2EE JAVA HIBERNATE Additional Information Technical Skills Web Languages Core Java J2EE JSP JSF Servlets Struts 20 Spring Web Flow JSP Tag Libraries EJB 30 JMS JDBC JNDI JavaScript SQL Frameworks Spring MVC Spring Security LDAP Spring Core Spring Webflow Spring DAO Spring ORM Spring Boot Spring Cloud Struts Hibernate JSF Spring Data Methodology OOAD OOPS UML RUP Autosys J2EE Design Patterns Scripting Language Java Script CSS AngularJS PHP Web Technologies HTML DHTML JavaScript CSS AJAX JSON JQUERY AngularJS Database Oracle11g10g9i MySQL 5x SQL PLSQL TOAD and SQLServer Operating System DOS Windows UNIX Red Hat IDE Tools Eclipse RSA JBuilder Oracle ADF Web Logic Enterprised Architect Rational Rose LDAP RUP Methodology Clear CaseClear Quest Red Hat JBOSS Developer Studio Web Services SOAP WSDL UDDI SOAP UI RESTful Version Control SVN IBM Clear case CVS Tools RAD Eclipse Edit Plus Apache Ant log4j JUnit Visio ANT Maven WebApp Servers Websphere Application Server 80 Apache Tomcat SunOne Application Server Web Logic 718x JBoss 4x5x Other MS Office Suite MS FrontPage Toad SQL Developer Microsoft VSS Test Director Dreamweaver putty GEMS SOAP UI C Oracle ATG Drools",
    "unique_id": "45630185-abeb-4b53-8050-dbb1540e85d2"
}