{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Postmate Work Experience Sr Python Developer Postmate San Francisco CA January 2017 to Present Responsibilities Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shell scripting Worked on PythonOpenStack APIs and used NumPy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pairbasedprogramming Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Environment Python 35 Django 17 CSS HTML JavaScript Bootstrap AJAX JQuery Pandas MySQL Servlets Agile Enterprise Scheduler Bitvise SSH Client Scrum Heroku JIRA GIT Sr Python Developer Nike Beaverton OR October 2014 to July 2016 Responsibilities Gathering requirements and translating the business details into Technical design Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Django have to create a userfriendly website interface Utilized Python libraries like wxPython NumPy SciPy Web2py Designed Restful Web services using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL DB package Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Creating Restful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python Django CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX Restful web service MySQL SQLite Cassandra AWS EC2 S3 PyUnit Karma Jenkins Selenium Python Developer Pfizer New York NY July 2012 to June 2014 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Rewrite existing PythonDjango modules to deliver certain format of data Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Special skills in developing user friendly simple yet effective web based applications Deployed the project into Heroku using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration Testing web application testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Argonne National Labotary Lemont IL February 2011 to April 2012 Responsibilities Providing daily reports to the Development Manager and have strongly participate in the development phase Used Agile Methodology and SCRUM Process Participated in Daily Standup meetings and provided status on work progress Implemented code in Python to retrieve and manipulate data in the controller Wrote Python scripts to parse CSV documents and load the data in MongoDB Developed entire frontend and backend modules using Python on Django Web Framework Implemented and executed code to perform CRUD operations on MongoDB using Mongo Engine module Designed and developed the UI for the website with HTML CSS Java Script and Bootstrap Used JQuery and Ajax calls for transmitting data object between frontend and controllers Also used Bootstrap as a mechanism to manage and organize the HTML page layout Reengineered various modules for implementing changes and created efficient system Performed troubleshooting fixed and deployed many Python bug fixes of the applications that were a main source of data for the customers Maintained program libraries users manuals and technical documentation Used GitLab for version control Environment Python Django MongoDB Linux HTML CSS Bootstrap JavaScript JQuery AJAX GitLab",
    "entities": [
        "GIT",
        "Python",
        "Selenium Automation",
        "Utilized Python",
        "Bash Implemented Multithreading",
        "CSV",
        "Stored Procedures",
        "CRUD",
        "Present Responsibilities Responsible",
        "HTML CSS JavaScript",
        "CSS Bootstrap",
        "Reengineered",
        "Build",
        "Performed",
        "Daily Standup",
        "DCL",
        "Created",
        "Djangos",
        "UNIX",
        "AWS Special",
        "CA",
        "UI",
        "HTTPS Wrote",
        "SMTP",
        "Develop",
        "HTML",
        "Performed Unit",
        "CSS",
        "FLASKHTTPAuth",
        "Linux",
        "Panda",
        "JSP",
        "Heroku",
        "Design Development and Deployment Testing and Implementation",
        "MVC",
        "SQL",
        "Flask",
        "lPythonspan",
        "TDD",
        "PyUnit",
        "Administrators",
        "FLASK",
        "Maintained",
        "Integration Testing",
        "HTML CSS Java Script",
        "MS",
        "WireFraming",
        "GitLab",
        "Amazon",
        "PythonDjango",
        "JQuery Developed",
        "Python Implemented"
    ],
    "experience": "Experience Sr Python Developer Postmate San Francisco CA January 2017 to Present Responsibilities Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shell scripting Worked on PythonOpenStack APIs and used NumPy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pairbasedprogramming Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Environment Python 35 Django 17 CSS HTML JavaScript Bootstrap AJAX JQuery Pandas MySQL Servlets Agile Enterprise Scheduler Bitvise SSH Client Scrum Heroku JIRA GIT Sr Python Developer Nike Beaverton OR October 2014 to July 2016 Responsibilities Gathering requirements and translating the business details into Technical design Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Django have to create a userfriendly website interface Utilized Python libraries like wxPython NumPy SciPy Web2py Designed Restful Web services using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL DB package Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Creating Restful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python Django CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX Restful web service MySQL SQLite Cassandra AWS EC2 S3 PyUnit Karma Jenkins Selenium Python Developer Pfizer New York NY July 2012 to June 2014 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Rewrite existing PythonDjango modules to deliver certain format of data Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Special skills in developing user friendly simple yet effective web based applications Deployed the project into Heroku using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration Testing web application testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Argonne National Labotary Lemont IL February 2011 to April 2012 Responsibilities Providing daily reports to the Development Manager and have strongly participate in the development phase Used Agile Methodology and SCRUM Process Participated in Daily Standup meetings and provided status on work progress Implemented code in Python to retrieve and manipulate data in the controller Wrote Python scripts to parse CSV documents and load the data in MongoDB Developed entire frontend and backend modules using Python on Django Web Framework Implemented and executed code to perform CRUD operations on MongoDB using Mongo Engine module Designed and developed the UI for the website with HTML CSS Java Script and Bootstrap Used JQuery and Ajax calls for transmitting data object between frontend and controllers Also used Bootstrap as a mechanism to manage and organize the HTML page layout Reengineered various modules for implementing changes and created efficient system Performed troubleshooting fixed and deployed many Python bug fixes of the applications that were a main source of data for the customers Maintained program libraries users manuals and technical documentation Used GitLab for version control Environment Python Django MongoDB Linux HTML CSS Bootstrap JavaScript JQuery AJAX GitLab",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Postmate",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Postmate",
        "San",
        "Francisco",
        "CA",
        "January",
        "Present",
        "Responsibilities",
        "operating",
        "system",
        "Linux",
        "DCL",
        "programs",
        "Python",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "presentation",
        "layer",
        "CSS",
        "framework",
        "NodeJS",
        "WireFraming",
        "HTML5",
        "Responsible",
        "framework",
        "UI",
        "development",
        "Developed",
        "html",
        "HTML5",
        "CSS3",
        "JSON",
        "AngularJS",
        "Adobe",
        "JSP",
        "views",
        "functionality",
        "UI",
        "screens",
        "client",
        "technologies",
        "JQuery",
        "JavaScript",
        "HTML",
        "CSS",
        "files",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQLDB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "Job",
        "scheduling",
        "batchjob",
        "scheduling",
        "process",
        "control",
        "forking",
        "cloning",
        "jobs",
        "status",
        "jobs",
        "shell",
        "scripting",
        "PythonOpenStack",
        "APIs",
        "NumPy",
        "analysis",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "OracleDB",
        "PostgreSQL",
        "VMWareAPI",
        "integration",
        "system",
        "Git",
        "MySQL",
        "Jenkins",
        "custom",
        "tools",
        "Python",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MySQL",
        "database",
        "Python",
        "Python",
        "MySQL",
        "connector",
        "MySQLdb",
        "package",
        "information",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "integration",
        "methodologies",
        "client",
        "web",
        "portals",
        "software",
        "infrastructure",
        "APIs",
        "vendor",
        "frameworks",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "tracking",
        "options",
        "application",
        "algorithm",
        "data",
        "address",
        "generation",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "JavaScript",
        "Bootstrap",
        "AJAX",
        "JQuery",
        "Pandas",
        "MySQL",
        "Servlets",
        "Agile",
        "Enterprise",
        "Scheduler",
        "Bitvise",
        "SSH",
        "Client",
        "Scrum",
        "Heroku",
        "JIRA",
        "GIT",
        "Sr",
        "Python",
        "Developer",
        "Nike",
        "Beaverton",
        "October",
        "July",
        "Responsibilities",
        "requirements",
        "business",
        "details",
        "design",
        "user",
        "interface",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Django",
        "website",
        "interface",
        "Python",
        "wxPython",
        "NumPy",
        "SciPy",
        "Web2py",
        "Restful",
        "Web",
        "services",
        "FLASK",
        "emphasis",
        "Security",
        "service",
        "FLASKHTTPAuth",
        "HTTPS",
        "Wrote",
        "MySQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "DB",
        "package",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Creating",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "team",
        "development",
        "workflow",
        "collaboration",
        "practices",
        "Git",
        "Developed",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Multithreading",
        "module",
        "networking",
        "operations",
        "race",
        "route",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Python",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Written",
        "test",
        "cases",
        "PyUnit",
        "Selenium",
        "Automation",
        "testing",
        "manipulation",
        "test",
        "scripts",
        "automation",
        "Jenkins",
        "integration",
        "Amazon",
        "EC2",
        "JIRA",
        "Bug",
        "tracking",
        "issue",
        "part",
        "AgileScrum",
        "development",
        "team",
        "TDD",
        "approach",
        "applications",
        "Environment",
        "Python",
        "Django",
        "CherryPy",
        "HTML5",
        "CSS",
        "Bootstrap",
        "JSON",
        "JavaScript",
        "AJAX",
        "Restful",
        "web",
        "service",
        "MySQL",
        "Cassandra",
        "AWS",
        "EC2",
        "S3",
        "PyUnit",
        "Karma",
        "Jenkins",
        "Selenium",
        "Python",
        "Developer",
        "Pfizer",
        "New",
        "York",
        "NY",
        "July",
        "June",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Django",
        "Framework",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "project",
        "JIRA",
        "Agile",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "web",
        "applications",
        "Flask",
        "frame",
        "works",
        "MVC",
        "architecture",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "deployment",
        "project",
        "AWS",
        "skills",
        "user",
        "web",
        "applications",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "expressions",
        "order",
        "pattern",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Skilled",
        "Collections",
        "Python",
        "user",
        "objects",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "web",
        "application",
        "testing",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "Argonne",
        "National",
        "Labotary",
        "Lemont",
        "IL",
        "February",
        "April",
        "Responsibilities",
        "reports",
        "Development",
        "Manager",
        "development",
        "phase",
        "Agile",
        "Methodology",
        "SCRUM",
        "Process",
        "Daily",
        "Standup",
        "meetings",
        "status",
        "work",
        "progress",
        "code",
        "Python",
        "manipulate",
        "data",
        "controller",
        "Wrote",
        "Python",
        "CSV",
        "documents",
        "data",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "code",
        "CRUD",
        "operations",
        "MongoDB",
        "Mongo",
        "Engine",
        "module",
        "UI",
        "website",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "Bootstrap",
        "JQuery",
        "Ajax",
        "calls",
        "data",
        "object",
        "frontend",
        "controllers",
        "Bootstrap",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "modules",
        "changes",
        "system",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "program",
        "users",
        "manuals",
        "documentation",
        "GitLab",
        "version",
        "control",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "Linux",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "AJAX",
        "GitLab"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:09:41.342972",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Postmate Work Experience Sr Python Developer Postmate San Francisco CA January 2017 to Present Responsibilities Responsible in upgrading their operating system from OpenVMS to Linux and converting all DCL programs to Python Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Implemented presentation layer using CSS framework NodeJS AngularJS WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like JQuery JavaScript HTML CSS files Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support PythonDjango based web application PostgreSQLDB and integrations with 3rd party email messaging storage services Job scheduling batchjob scheduling process control forking and cloning of jobs and checking the status of the jobs using shell scripting Worked on PythonOpenStack APIs and used NumPy for Numerical analysis Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Managed developed and designed a dashboard control panel for customers and Administrators using Django OracleDB PostgreSQL and VMWareAPI calls Developed a fully automated continuous integration system using Git MySQL Jenkins and custom tools developed in Python Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQLdb package to retrieve information Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pairbasedprogramming Designed and developed integration methodologies between client web portals and existing software infrastructure using SOAP APIs and vendor specific frameworks Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Environment Python 35 Django 17 CSS HTML JavaScript Bootstrap AJAX JQuery Pandas MySQL Servlets Agile Enterprise Scheduler Bitvise SSH Client Scrum Heroku JIRA GIT Sr Python Developer Nike Beaverton OR October 2014 to July 2016 Responsibilities Gathering requirements and translating the business details into Technical design Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Django have to create a userfriendly website interface Utilized Python libraries like wxPython NumPy SciPy Web2py Designed Restful Web services using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL DB package Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Creating Restful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python Django CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX Restful web service MySQL SQLite Cassandra AWS EC2 S3 PyUnit Karma Jenkins Selenium Python Developer Pfizer New York NY July 2012 to June 2014 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Rewrite existing PythonDjango modules to deliver certain format of data Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Special skills in developing user friendly simple yet effective web based applications Deployed the project into Heroku using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration Testing web application testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer Argonne National Labotary Lemont IL February 2011 to April 2012 Responsibilities Providing daily reports to the Development Manager and have strongly participate in the development phase Used Agile Methodology and SCRUM Process Participated in Daily Standup meetings and provided status on work progress Implemented code in Python to retrieve and manipulate data in the controller Wrote Python scripts to parse CSV documents and load the data in MongoDB Developed entire frontend and backend modules using Python on Django Web Framework Implemented and executed code to perform CRUD operations on MongoDB using Mongo Engine module Designed and developed the UI for the website with HTML CSS Java Script and Bootstrap Used JQuery and Ajax calls for transmitting data object between frontend and controllers Also used Bootstrap as a mechanism to manage and organize the HTML page layout Reengineered various modules for implementing changes and created efficient system Performed troubleshooting fixed and deployed many Python bug fixes of the applications that were a main source of data for the customers Maintained program libraries users manuals and technical documentation Used GitLab for version control Environment Python Django MongoDB Linux HTML CSS Bootstrap JavaScript JQuery AJAX GitLab",
    "unique_id": "6b86e3d5-579b-44e6-a1a9-5cb1539d3e57"
}