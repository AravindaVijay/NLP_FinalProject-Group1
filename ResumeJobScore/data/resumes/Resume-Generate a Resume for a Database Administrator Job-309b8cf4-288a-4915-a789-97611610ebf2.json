{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Miami FL Around 5 years of experience in the IT industry with diversified exposure in Software Process Engineering designing building and testing a Web Application using JavaJ2EE technology Proficient working with Design Development and Implementation in the field of Web Applications development using HTML CSS XHTML JavaScript jQuery Angular JS Bootstrap AJAX XML JSON Restful web services and Responsive web designing JAXP JAXB JSON JSTL Backbone JS PHP Express JS YUI yahoo UI Ext JS React JS Node JS and AJAX meeting W3C standards Expertise in serverside development with JDBC JNDI Servlets spring frameworks like MVC architecture spring boot analyzing data with Hive Spark using Scala scripts in yaml and xml to manage Database Test data Expertise using Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Ribbon clientside Load Balancer Hystrix latency and fault tolerance library Zuul gate way for routing monitoring security with Eureka service registry and log management with ELK Proficient in working on various Spring modules Spring Core Spring IOC Spring MVC Spring DAO Spring Boot and AOP Batch cloud security along with Hibernate and JPA as the backend ORM tool for implementation of persistence layer and mapping of POJOs Experience using Pivotal Cloud Foundry for building cloud native services Developed Spark scripts by using Scala shell commands as per the requirement and Developed Spark scripts by using Scala shell commands as per the requirement and enhanced the customer search experience by developing searchable components with Splunk Handson writing Stored Procedures functions triggers DDL DML SQL queries Experience in writing SQL PLSQL programming Strong experience on Hibernate and in using Hibernate Connection Pooling HQL Collections Hibernate Caching etc Experience in designing User Interactive UI Web Pages and visually appealing User Interfaces with the help of HTML 5 and CSS3 Expertise in Web Services Technologies like SOAP with WSDL and RESTful using JAXRS specification with Jersey spring Apache CXF and NodeJS and implemented SOA architecture with web services Expertise in coding optimized SQL queries on databases like My SQL SQL Server and Oracle DDL and DML Worked on IDEs like Microsoft visual studio Sublime text IntelliJ Web Storm and Eclipse Proficient in applying design patterns like MVC Singleton Session Facade Factory Abstract Factory Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in developing web applications using MVC MVVM MVP Singleton architectures Expertise in using source code control systems such as GIT JIRA and Jenkins Solid experience with Responsive Web Design RWD with involvement in several web application development projects Good knowledge on Amazon Web Services AWS cloud platform Solid knowledge on Core Java Multithreading Algorithms and ObjectOriented concepts as well as have good experience with web services like RESTFUL SOAP Implemented XML and related technologies like XSL XSTL XPATH and parsers like JAXP SAX DOM and JAXB Experience in spring framework MVC and Struts MVC Architecture interceptors action mappings and resource bundles Good knowledge in deploying applications on web servers like Apache Tomcat Glassfish and IBM WebSphere Hands on experiences with Core Java with Multithreading Concurrency File Handling IO Generics Data Structures and Collections and Garbage Collection Work Experience Java Developer Amazon Seattle WA November 2018 to Present Involved in analysis of requirements design development Unit and Integration testing and performance management of TCS BANCS application Designed and developed a RESTful hub application which resolved the SingleSignOn authentication of the target secured REST services Used Microservices with Spring Boot services and combination of REST Apache Kafka broker as well as Involved in development and design of OOPS design and concepts such as Collections Multithreading and Exception Handling Interacted with Business Analysts and Subject Matter Experts to understand the requirements and any clarifications required by team Involve in Upgradation of existing system into technical platform and building in environment in cloud base Pivotal cloud foundry PCF platform Mapping them into system requirements specifications Data sources from Injection micro services produce and consume data from apache Kafka to enhance data from enhancer micro services Creation of Scripts of Data Definition Language DDL Data Manipulation Language DML and Data Control Language Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Followed agile methodology interacted with the client providetake feedback on the features suggestimplement optimal solutions and tailored application to customer needs Developed new features required by Transamerica to be integrated to the TCS BaNCS Application Converted complex excel formulas and multi sheet excels into Java code for to be used for calculations for various types of Insurance such as Life Health Annuities Configured an optimal SpringBoot micro service which exposes Cassandra NoSQL payload via JBoss RESTEasy platform and multiple Transaction Managers Created JUnit test cases and Development of JUnit classes Test driven development approach was used and hence worked intensively on developing test cases Coordinated with Quality Assurance Team to ensure the validation of the system is without any issues Integrated with Eureka components for Service Discovery Load Balancing and other services Involved in code review process validating designs done by other developers and development of the application Quality Control Activities such as defect tracking fixing using TCS Mastercraft Analyzed the application performance using application performance monitoring tools like Dynatrace Splunk Introscope SiteScope Developed microservice using Completable Future pipelines with custom PushBack Policy Made sure the Average Response Time for supported services were matching the competitors using the Dynatrace Reports Finetuned the configurations if needed Created new dashboards in Splunk using multiple Splunk queries Also created alerts and reports to retrieve required data over a regular period of time Made sure there were no customer impacting as well as contactbanking center agent impacting issues and prioritized to resolve the issues as quickly as possible if any Analyzed production defects and suggested fixresolution for the issue to development and breakfix teams Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Scala collection framework to store and process complex device metadata and other related information Used Hapijs which is fast assertive essential and moderate web framework of Nodejs that helps manage a server and routes Circuit Breaker and Ribbon Mc Donalds Corporation Chicago IL September 2017 to October 2018 Chicago IL Analyzed the business requirements of the project by studying the Business Requirement Specification document Worked with Data Governance Data quality Data architect to design various models and processes Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Used ANT scripts to fetch build and deploy application to development environment worked on SCALA technologies Written DDL DML queries to insert retrieve and modify the data from database Converting all legacy applications to cloud native by Spring BOOT Soring Cloud in to PCF Pivotal Cloud Foundry Implemented SOA to develop Spring RestfulMicro Services and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Building cloud Microservices and implemented backend using Spring Boot And Authored application using Spring Cloud services spring version of Netflix OSS Eureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Integrated Nodejs with Hapijs and communicated with Mongo  for CRUD operations on the data repository The backend use of Nodejs Hapijs MongoDB and Mongoose the complete MERN Stack to provide RESTful API Implemented various screens for the front end using Reactjs and used various predefined components from Node Package Manager NPM and Flux library Proficient in technologies Java J2EE Scala Play Framework Ruby Apache Camel Struts Spring Hibernate Junit Log4j Ant Maven SBT JSP Servlets Java Beans XML JSON Custom Tag Libraries Developed dynamic and responsive web pages to user interface screens using HTML5 CSS3 and JavaScript Created reusable components and used across various modules using Angular custom libraries Developed a dashboard based on Ajax calls with Business customers count Flags Realtime graphs for analytical reporting using Nodejs Worked in using React JS Components Forms Events Keys Router Animations and Flux concept Extensively worked in writing minimal code in building reusable forms with their validations using REACT with Flux Architecture Performed CRUD operations like Create Update Insert and Delete data in Mongo Worked on Mongo  database concepts such as locking transactions indexes replication and schema design Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Micro services to base on Restful API utilizing Spring Boot with Spring MVC Implemented Netflix Zuul API gateway for all the requests from the devices and by registering services to Eureka Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Designed and deployed a multitude application utilizing almost all the AWS stack which Includes EC2 MongoDB Docker Kubernetes Orchestration container focusing on highavailability fault tolerance and autoscaling Worked on AWS Cloud Front S3 and Lambda Web Services to integrate the server side and clientside code Worked with app developers during API development to implement a secure server by using OAuth2 between server and client applications Maintained log delivery system by creating a producer consumer and broker architecture using Apache Kafka Amdocs IN July 2013 to March 2015 Involved in different software lifecycle stages like Design Development Testing and Implementation of the project Worked closely with the Middleware and System Administrators in providing technical expertise from the development and implementation perspectives especially with NodeJS Web and Tomcat servers Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Designed and developed the DAO Layer using HibernateJDBC template using Spring Boot Developed responsive UI layer utilizing Semantic HTML REST API architecture Developed front end for the entire website using HTML5 CSS3 and JAVASCRIPT Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Extensively used Java features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Used Spark streaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Built microservices with Spring Boot to serve multiple applications across the organization The data is provided consumed in JSON Created RFP microservice to provide RESTful API utilizing Spring Boot with Micro Services Developed the application using Angular 40 and implemented Angular services to connect the web application to backend APIs Involved in Designed and implemented a stream filtering system on top of Apache Kafka to reduce stream size Authored REST based Web API wrappers to integrate with conventional Web Services Developed Creating establishing of the User Interfaces using HTML CSS and JSP Used Spring Core annotations for Spring Dependency Injection Spring MVC for Rest APIs and Spring Boot for microservices Implemented Angular services to connect the web application to backend APIs SPRING Controllers were used with Angular JS to route the control to desired Java services Used GITHUB as the configuration management tool to manage the code repository Wrote Client Side and ServerSide validations by using Java Script along with inbuilt Angular validations Mapped business objects to database using Hibernate Refactored and enhanced an existing Angular JS application to follow strict MVC patterns for improved source code maintenance which resulted in significant percentage of code reduction ease of upgrade scalability ease of developer to spin up and enhanced performance Used Spring Boot which is radically faster in building cloud Micro Services Maintained Docker containers where microservices are deployed Used Web services SOAP REST for transmission of large blocks of XML data over HTTP Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Node Package Manager Accenture IN August 2012 to July 2013 India Aug 2012 to July 2013 Implemented SOAP based web services using Apache Axis with JAXWS support Used SoapUI to test the web services Developed Microservices using Spring MVC Spring Boot Spring Cloud Designed and implemented a lowlatency highavailability and performant applications by using Nodejs Used a Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Used complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the Spring bean profiling Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects Built springbased Java and Scala micro services to support enterprise web application Designed and developed REST APIs using Spring Boot and Microservices for exposing the services utilized for risk assessment by various other applications Configured WebLogic Application Server for deployments and participated in structured code reviews walkthroughs Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux library Wrote unit test scripts using TestNG framework for testing functionalities in a TestDriven Development TDD methodology Wrote scripts for automated web application testing using Selenium Web driver as well as played a vital role in Scala framework for webbased applications Used JIRA for tracking bugs Used Maven script for building and deploying the application Used Jenkins for Continuous Integration Builds and deployments CICD Mapped tables in database using Hibernate and Scala Education Masters in Information System in Information System Illinious state University 2017 to 2019 Bachelors in Mechanical Engineering in Mechanical Engineering Christ University Bengaluru Bengaluru Karnataka 2012 to 2016 Skills J2EE Cucumber DESIGN PATTERNS Git OBJECT ORIENTED Java Hibernate Java J2Ee Spring",
    "entities": [
        "Micro Services",
        "AJAX",
        "User Interactive UI",
        "Angular",
        "Scala Education Masters",
        "Nodejs",
        "Mechanical Engineering",
        "Struts MVC Architecture",
        "Transamerica",
        "Developed Spark",
        "Jersey",
        "HTTP",
        "the Java Objects Built",
        "User Interfaces",
        "Design Development and Implementation",
        "Software Process Engineering",
        "Ribbon Mc Donalds Corporation",
        "Ant Maven SBT",
        "Amazon Web Services AWS",
        "Node Package",
        "TestDriven Development TDD",
        "the Business Requirement Specification",
        "Ajax",
        "Oracle DDL",
        "Create Update Insert",
        "XML",
        "Spring Core",
        "React JS Components Forms",
        "Hive Spark",
        "Nodejs Worked",
        "Spring RestfulMicro Services",
        "JAXWS",
        "Maintained",
        "JBoss RESTEasy",
        "RESTFUL SOAP Implemented XML",
        "MVC Singleton Session Facade Factory Abstract Factory Service",
        "Amazon ECS Designed",
        "JavaJ2EE",
        "Amazon",
        "ServerSide",
        "Spring Boot",
        "Spring Boot framework Deployed",
        "Scala micro services",
        "Completable Future",
        "Developed",
        "Mongo",
        "MVP Singleton",
        "JPA",
        "enhancer micro services",
        "Development of JUnit",
        "Semantic HTML REST API",
        "ELK Proficient",
        "Coordinated with Quality Assurance Team",
        "HTML CSS XHTML JavaScript jQuery Angular",
        "Spring Cloud",
        "SPRING Controllers",
        "JSP",
        "HibernateJDBC",
        "ObjectOriented",
        "Micro",
        "Design Development Testing and Implementation of the",
        "Worked",
        "JAXP SAX DOM",
        "Docker",
        "GITHUB",
        "TCS BANCS",
        "MVC",
        "Redux",
        "Node JS",
        "Nodejs Hapijs",
        "Lambda Web Services",
        "HTML CSS",
        "API",
        "Developed Microservices",
        "Data Control Language Implemented",
        "Created",
        "Analyzed",
        "Apache CXF",
        "YUI",
        "AWS",
        "Scala",
        "Oracle",
        "JSF",
        "DML Worked",
        "Netflix Zuul Api Gateway",
        "Seattle",
        "React JS",
        "Hystrix Circuit Breaker",
        "PCF Pivotal Cloud Foundry Implemented SOA",
        "Netflix",
        "Injection micro services",
        "IBM WebSphere Hands",
        "Integrated Nodejs with Hapijs",
        "RESTFUL",
        "SQL",
        "TCS Mastercraft Analyzed",
        "the Middleware and System Administrators",
        "JAXRS",
        "Chicago",
        "the User Interfaces",
        "PHP Express",
        "CI",
        "CICD",
        "SpringBoot micro",
        "Creation of Scripts of Data Definition Language DDL",
        "Life Health Annuities Configured",
        "UI Ext JS React",
        "IL Analyzed",
        "My SQL SQL Server",
        "Zuul",
        "Quality Control Activities",
        "PCF",
        "NPM Node Package",
        "CRUD",
        "REST Apache Kafka",
        "JavaScript Created",
        "Maven",
        "lJavaspan",
        "Hapijs",
        "ANT",
        "Includes",
        "JSON Created",
        "the Dynatrace Reports Finetuned",
        "Splunk Handson",
        "Selenium",
        "Microsoft",
        "Mechanical Engineering Christ",
        "Delete",
        "Netflix Zuul",
        "the DAO Layer",
        "Nodejs Used a Microservices",
        "Expertise",
        "JDBC JNDI Servlets",
        "HTML5 CSS3",
        "Tomcat",
        "REST",
        "the TCS BaNCS Application",
        "Database Test",
        "Transaction Managers Created JUnit",
        "Miami",
        "Present Involved",
        "Implemented Angular",
        "WebLogic Application Server",
        "Collections and Garbage Collection Work",
        "Responsive Web Design RWD"
    ],
    "experience": "Experience using Pivotal Cloud Foundry for building cloud native services Developed Spark scripts by using Scala shell commands as per the requirement and Developed Spark scripts by using Scala shell commands as per the requirement and enhanced the customer search experience by developing searchable components with Splunk Handson writing Stored Procedures functions triggers DDL DML SQL queries Experience in writing SQL PLSQL programming Strong experience on Hibernate and in using Hibernate Connection Pooling HQL Collections Hibernate Caching etc Experience in designing User Interactive UI Web Pages and visually appealing User Interfaces with the help of HTML 5 and CSS3 Expertise in Web Services Technologies like SOAP with WSDL and RESTful using JAXRS specification with Jersey spring Apache CXF and NodeJS and implemented SOA architecture with web services Expertise in coding optimized SQL queries on databases like My SQL SQL Server and Oracle DDL and DML Worked on IDEs like Microsoft visual studio Sublime text IntelliJ Web Storm and Eclipse Proficient in applying design patterns like MVC Singleton Session Facade Factory Abstract Factory Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in developing web applications using MVC MVVM MVP Singleton architectures Expertise in using source code control systems such as GIT JIRA and Jenkins Solid experience with Responsive Web Design RWD with involvement in several web application development projects Good knowledge on Amazon Web Services AWS cloud platform Solid knowledge on Core Java Multithreading Algorithms and ObjectOriented concepts as well as have good experience with web services like RESTFUL SOAP Implemented XML and related technologies like XSL XSTL XPATH and parsers like JAXP SAX DOM and JAXB Experience in spring framework MVC and Struts MVC Architecture interceptors action mappings and resource bundles Good knowledge in deploying applications on web servers like Apache Tomcat Glassfish and IBM WebSphere Hands on experiences with Core Java with Multithreading Concurrency File Handling IO Generics Data Structures and Collections and Garbage Collection Work Experience Java Developer Amazon Seattle WA November 2018 to Present Involved in analysis of requirements design development Unit and Integration testing and performance management of TCS BANCS application Designed and developed a RESTful hub application which resolved the SingleSignOn authentication of the target secured REST services Used Microservices with Spring Boot services and combination of REST Apache Kafka broker as well as Involved in development and design of OOPS design and concepts such as Collections Multithreading and Exception Handling Interacted with Business Analysts and Subject Matter Experts to understand the requirements and any clarifications required by team Involve in Upgradation of existing system into technical platform and building in environment in cloud base Pivotal cloud foundry PCF platform Mapping them into system requirements specifications Data sources from Injection micro services produce and consume data from apache Kafka to enhance data from enhancer micro services Creation of Scripts of Data Definition Language DDL Data Manipulation Language DML and Data Control Language Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Followed agile methodology interacted with the client providetake feedback on the features suggestimplement optimal solutions and tailored application to customer needs Developed new features required by Transamerica to be integrated to the TCS BaNCS Application Converted complex excel formulas and multi sheet excels into Java code for to be used for calculations for various types of Insurance such as Life Health Annuities Configured an optimal SpringBoot micro service which exposes Cassandra NoSQL payload via JBoss RESTEasy platform and multiple Transaction Managers Created JUnit test cases and Development of JUnit classes Test driven development approach was used and hence worked intensively on developing test cases Coordinated with Quality Assurance Team to ensure the validation of the system is without any issues Integrated with Eureka components for Service Discovery Load Balancing and other services Involved in code review process validating designs done by other developers and development of the application Quality Control Activities such as defect tracking fixing using TCS Mastercraft Analyzed the application performance using application performance monitoring tools like Dynatrace Splunk Introscope SiteScope Developed microservice using Completable Future pipelines with custom PushBack Policy Made sure the Average Response Time for supported services were matching the competitors using the Dynatrace Reports Finetuned the configurations if needed Created new dashboards in Splunk using multiple Splunk queries Also created alerts and reports to retrieve required data over a regular period of time Made sure there were no customer impacting as well as contactbanking center agent impacting issues and prioritized to resolve the issues as quickly as possible if any Analyzed production defects and suggested fixresolution for the issue to development and breakfix teams Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Scala collection framework to store and process complex device metadata and other related information Used Hapijs which is fast assertive essential and moderate web framework of Nodejs that helps manage a server and routes Circuit Breaker and Ribbon Mc Donalds Corporation Chicago IL September 2017 to October 2018 Chicago IL Analyzed the business requirements of the project by studying the Business Requirement Specification document Worked with Data Governance Data quality Data architect to design various models and processes Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Used ANT scripts to fetch build and deploy application to development environment worked on SCALA technologies Written DDL DML queries to insert retrieve and modify the data from database Converting all legacy applications to cloud native by Spring BOOT Soring Cloud in to PCF Pivotal Cloud Foundry Implemented SOA to develop Spring RestfulMicro Services and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Building cloud Microservices and implemented backend using Spring Boot And Authored application using Spring Cloud services spring version of Netflix OSS Eureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Integrated Nodejs with Hapijs and communicated with Mongo   for CRUD operations on the data repository The backend use of Nodejs Hapijs MongoDB and Mongoose the complete MERN Stack to provide RESTful API Implemented various screens for the front end using Reactjs and used various predefined components from Node Package Manager NPM and Flux library Proficient in technologies Java J2EE Scala Play Framework Ruby Apache Camel Struts Spring Hibernate Junit Log4j Ant Maven SBT JSP Servlets Java Beans XML JSON Custom Tag Libraries Developed dynamic and responsive web pages to user interface screens using HTML5 CSS3 and JavaScript Created reusable components and used across various modules using Angular custom libraries Developed a dashboard based on Ajax calls with Business customers count Flags Realtime graphs for analytical reporting using Nodejs Worked in using React JS Components Forms Events Keys Router Animations and Flux concept Extensively worked in writing minimal code in building reusable forms with their validations using REACT with Flux Architecture Performed CRUD operations like Create Update Insert and Delete data in Mongo Worked on Mongo   database concepts such as locking transactions indexes replication and schema design Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Micro services to base on Restful API utilizing Spring Boot with Spring MVC Implemented Netflix Zuul API gateway for all the requests from the devices and by registering services to Eureka Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Designed and deployed a multitude application utilizing almost all the AWS stack which Includes EC2 MongoDB Docker Kubernetes Orchestration container focusing on highavailability fault tolerance and autoscaling Worked on AWS Cloud Front S3 and Lambda Web Services to integrate the server side and clientside code Worked with app developers during API development to implement a secure server by using OAuth2 between server and client applications Maintained log delivery system by creating a producer consumer and broker architecture using Apache Kafka Amdocs IN July 2013 to March 2015 Involved in different software lifecycle stages like Design Development Testing and Implementation of the project Worked closely with the Middleware and System Administrators in providing technical expertise from the development and implementation perspectives especially with NodeJS Web and Tomcat servers Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Designed and developed the DAO Layer using HibernateJDBC template using Spring Boot Developed responsive UI layer utilizing Semantic HTML REST API architecture Developed front end for the entire website using HTML5 CSS3 and JAVASCRIPT Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Extensively used Java features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Used Spark streaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Built microservices with Spring Boot to serve multiple applications across the organization The data is provided consumed in JSON Created RFP microservice to provide RESTful API utilizing Spring Boot with Micro Services Developed the application using Angular 40 and implemented Angular services to connect the web application to backend APIs Involved in Designed and implemented a stream filtering system on top of Apache Kafka to reduce stream size Authored REST based Web API wrappers to integrate with conventional Web Services Developed Creating establishing of the User Interfaces using HTML CSS and JSP Used Spring Core annotations for Spring Dependency Injection Spring MVC for Rest APIs and Spring Boot for microservices Implemented Angular services to connect the web application to backend APIs SPRING Controllers were used with Angular JS to route the control to desired Java services Used GITHUB as the configuration management tool to manage the code repository Wrote Client Side and ServerSide validations by using Java Script along with inbuilt Angular validations Mapped business objects to database using Hibernate Refactored and enhanced an existing Angular JS application to follow strict MVC patterns for improved source code maintenance which resulted in significant percentage of code reduction ease of upgrade scalability ease of developer to spin up and enhanced performance Used Spring Boot which is radically faster in building cloud Micro Services Maintained Docker containers where microservices are deployed Used Web services SOAP REST for transmission of large blocks of XML data over HTTP Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Node Package Manager Accenture IN August 2012 to July 2013 India Aug 2012 to July 2013 Implemented SOAP based web services using Apache Axis with JAXWS support Used SoapUI to test the web services Developed Microservices using Spring MVC Spring Boot Spring Cloud Designed and implemented a lowlatency highavailability and performant applications by using Nodejs Used a Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Used complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the Spring bean profiling Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects Built springbased Java and Scala micro services to support enterprise web application Designed and developed REST APIs using Spring Boot and Microservices for exposing the services utilized for risk assessment by various other applications Configured WebLogic Application Server for deployments and participated in structured code reviews walkthroughs Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux library Wrote unit test scripts using TestNG framework for testing functionalities in a TestDriven Development TDD methodology Wrote scripts for automated web application testing using Selenium Web driver as well as played a vital role in Scala framework for webbased applications Used JIRA for tracking bugs Used Maven script for building and deploying the application Used Jenkins for Continuous Integration Builds and deployments CICD Mapped tables in database using Hibernate and Scala Education Masters in Information System in Information System Illinious state University 2017 to 2019 Bachelors in Mechanical Engineering in Mechanical Engineering Christ University Bengaluru Bengaluru Karnataka 2012 to 2016 Skills J2EE Cucumber DESIGN PATTERNS Git OBJECT ORIENTED Java Hibernate Java J2Ee Spring",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Miami",
        "FL",
        "years",
        "experience",
        "IT",
        "industry",
        "exposure",
        "Software",
        "Process",
        "Engineering",
        "designing",
        "building",
        "Web",
        "Application",
        "JavaJ2EE",
        "technology",
        "Proficient",
        "Design",
        "Development",
        "Implementation",
        "field",
        "Web",
        "Applications",
        "development",
        "HTML",
        "CSS",
        "XHTML",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "Bootstrap",
        "AJAX",
        "XML",
        "JSON",
        "Restful",
        "web",
        "services",
        "web",
        "JAXP",
        "JAXB",
        "JSON",
        "JSTL",
        "Backbone",
        "JS",
        "PHP",
        "Express",
        "JS",
        "YUI",
        "yahoo",
        "UI",
        "Ext",
        "JS",
        "React",
        "JS",
        "Node",
        "JS",
        "AJAX",
        "W3C",
        "standards",
        "Expertise",
        "serverside",
        "development",
        "JDBC",
        "JNDI",
        "Servlets",
        "spring",
        "frameworks",
        "MVC",
        "architecture",
        "spring",
        "boot",
        "data",
        "Hive",
        "Spark",
        "Scala",
        "scripts",
        "yaml",
        "Database",
        "Test",
        "data",
        "Expertise",
        "Spring",
        "CloudNetflix",
        "OSS",
        "stack",
        "microservices",
        "deployment",
        "auto",
        "configurations",
        "Ribbon",
        "clientside",
        "Load",
        "Balancer",
        "Hystrix",
        "latency",
        "tolerance",
        "library",
        "Zuul",
        "gate",
        "way",
        "security",
        "Eureka",
        "service",
        "registry",
        "management",
        "ELK",
        "Proficient",
        "Spring",
        "modules",
        "Spring",
        "Core",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "Boot",
        "AOP",
        "Batch",
        "cloud",
        "security",
        "Hibernate",
        "JPA",
        "ORM",
        "tool",
        "implementation",
        "persistence",
        "layer",
        "mapping",
        "POJOs",
        "Experience",
        "Cloud",
        "Foundry",
        "services",
        "Spark",
        "scripts",
        "Scala",
        "shell",
        "commands",
        "requirement",
        "Developed",
        "Spark",
        "scripts",
        "Scala",
        "shell",
        "commands",
        "requirement",
        "customer",
        "search",
        "experience",
        "components",
        "Splunk",
        "Handson",
        "Procedures",
        "functions",
        "DDL",
        "DML",
        "SQL",
        "Experience",
        "SQL",
        "PLSQL",
        "experience",
        "Hibernate",
        "Hibernate",
        "Connection",
        "Pooling",
        "HQL",
        "Collections",
        "Hibernate",
        "Caching",
        "Experience",
        "User",
        "Interactive",
        "UI",
        "Web",
        "Pages",
        "User",
        "Interfaces",
        "help",
        "HTML",
        "CSS3",
        "Expertise",
        "Web",
        "Services",
        "Technologies",
        "SOAP",
        "WSDL",
        "JAXRS",
        "specification",
        "Jersey",
        "spring",
        "Apache",
        "CXF",
        "NodeJS",
        "SOA",
        "architecture",
        "web",
        "services",
        "Expertise",
        "SQL",
        "databases",
        "SQL",
        "SQL",
        "Server",
        "Oracle",
        "DDL",
        "DML",
        "IDEs",
        "Microsoft",
        "studio",
        "Sublime",
        "text",
        "IntelliJ",
        "Web",
        "Storm",
        "Eclipse",
        "Proficient",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Session",
        "Facade",
        "Factory",
        "Abstract",
        "Factory",
        "Service",
        "Locator",
        "Visitor",
        "Observer",
        "Decorator",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Experience",
        "web",
        "applications",
        "MVC",
        "MVVM",
        "MVP",
        "Singleton",
        "Expertise",
        "source",
        "code",
        "control",
        "systems",
        "GIT",
        "JIRA",
        "Jenkins",
        "Solid",
        "experience",
        "Responsive",
        "Web",
        "Design",
        "RWD",
        "involvement",
        "web",
        "application",
        "development",
        "knowledge",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "platform",
        "knowledge",
        "Core",
        "Java",
        "Multithreading",
        "Algorithms",
        "ObjectOriented",
        "concepts",
        "experience",
        "web",
        "services",
        "RESTFUL",
        "SOAP",
        "XML",
        "technologies",
        "XSL",
        "XSTL",
        "XPATH",
        "parsers",
        "JAXP",
        "SAX",
        "DOM",
        "JAXB",
        "Experience",
        "spring",
        "framework",
        "MVC",
        "Struts",
        "MVC",
        "Architecture",
        "action",
        "mappings",
        "resource",
        "bundles",
        "knowledge",
        "applications",
        "web",
        "servers",
        "Apache",
        "Tomcat",
        "Glassfish",
        "IBM",
        "WebSphere",
        "Hands",
        "experiences",
        "Core",
        "Java",
        "Multithreading",
        "Concurrency",
        "File",
        "Handling",
        "IO",
        "Generics",
        "Data",
        "Structures",
        "Collections",
        "Garbage",
        "Collection",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Amazon",
        "Seattle",
        "WA",
        "November",
        "Present",
        "analysis",
        "requirements",
        "development",
        "Unit",
        "Integration",
        "testing",
        "performance",
        "management",
        "TCS",
        "BANCS",
        "application",
        "hub",
        "application",
        "SingleSignOn",
        "authentication",
        "target",
        "REST",
        "services",
        "Microservices",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "broker",
        "development",
        "design",
        "design",
        "concepts",
        "Collections",
        "Multithreading",
        "Exception",
        "Handling",
        "Interacted",
        "Business",
        "Analysts",
        "Subject",
        "Matter",
        "Experts",
        "requirements",
        "clarifications",
        "team",
        "Upgradation",
        "system",
        "platform",
        "building",
        "environment",
        "base",
        "cloud",
        "foundry",
        "PCF",
        "platform",
        "system",
        "requirements",
        "specifications",
        "Data",
        "sources",
        "Injection",
        "micro",
        "services",
        "data",
        "apache",
        "Kafka",
        "data",
        "enhancer",
        "micro",
        "services",
        "Creation",
        "Scripts",
        "Data",
        "Definition",
        "Language",
        "DDL",
        "Data",
        "Manipulation",
        "Language",
        "DML",
        "Data",
        "Control",
        "Language",
        "Spring",
        "CloudNetflix",
        "OSS",
        "Stack",
        "Ribbon",
        "load",
        "Netflix",
        "Zuul",
        "Api",
        "Gateway",
        "Eureka",
        "service",
        "registry",
        "proxy",
        "infrastructure",
        "Hystrix",
        "Circuit",
        "Breaker",
        "fault",
        "tolerance",
        "methodology",
        "client",
        "feedback",
        "features",
        "suggestimplement",
        "solutions",
        "application",
        "customer",
        "features",
        "Transamerica",
        "TCS",
        "BaNCS",
        "Application",
        "excel",
        "formulas",
        "sheet",
        "excels",
        "Java",
        "code",
        "calculations",
        "types",
        "Insurance",
        "Life",
        "Health",
        "Annuities",
        "SpringBoot",
        "micro",
        "service",
        "Cassandra",
        "NoSQL",
        "payload",
        "JBoss",
        "RESTEasy",
        "platform",
        "Transaction",
        "Managers",
        "JUnit",
        "test",
        "cases",
        "Development",
        "JUnit",
        "classes",
        "development",
        "approach",
        "test",
        "cases",
        "Quality",
        "Assurance",
        "Team",
        "validation",
        "system",
        "issues",
        "Eureka",
        "components",
        "Service",
        "Discovery",
        "Load",
        "Balancing",
        "services",
        "code",
        "review",
        "process",
        "designs",
        "developers",
        "development",
        "application",
        "Quality",
        "Control",
        "Activities",
        "tracking",
        "fixing",
        "TCS",
        "Mastercraft",
        "application",
        "performance",
        "application",
        "performance",
        "monitoring",
        "tools",
        "Dynatrace",
        "Splunk",
        "Introscope",
        "SiteScope",
        "microservice",
        "Completable",
        "Future",
        "pipelines",
        "custom",
        "PushBack",
        "Policy",
        "Response",
        "Time",
        "services",
        "competitors",
        "Dynatrace",
        "Reports",
        "configurations",
        "dashboards",
        "Splunk",
        "Splunk",
        "queries",
        "alerts",
        "reports",
        "data",
        "period",
        "time",
        "customer",
        "impacting",
        "agent",
        "impacting",
        "issues",
        "issues",
        "production",
        "defects",
        "fixresolution",
        "issue",
        "development",
        "breakfix",
        "teams",
        "Nodejs",
        "POC",
        "Bower",
        "development",
        "automation",
        "tasks",
        "Scala",
        "collection",
        "framework",
        "device",
        "metadata",
        "information",
        "Hapijs",
        "web",
        "framework",
        "Nodejs",
        "server",
        "Circuit",
        "Breaker",
        "Ribbon",
        "Mc",
        "Donalds",
        "Corporation",
        "Chicago",
        "IL",
        "September",
        "October",
        "Chicago",
        "IL",
        "business",
        "requirements",
        "project",
        "Business",
        "Requirement",
        "Specification",
        "document",
        "Data",
        "Governance",
        "Data",
        "quality",
        "Data",
        "architect",
        "models",
        "processes",
        "Microservice",
        "architecture",
        "RESTFUL",
        "web",
        "services",
        "Spring",
        "Boot",
        "framework",
        "Deployed",
        "Spring",
        "Boot",
        "microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "ANT",
        "scripts",
        "build",
        "application",
        "development",
        "environment",
        "SCALA",
        "technologies",
        "Written",
        "DDL",
        "DML",
        "retrieve",
        "data",
        "database",
        "legacy",
        "applications",
        "Spring",
        "BOOT",
        "Soring",
        "Cloud",
        "PCF",
        "Cloud",
        "Foundry",
        "SOA",
        "Spring",
        "RestfulMicro",
        "Services",
        "Spring",
        "Eureka",
        "Netflix",
        "Ribbon",
        "part",
        "Services",
        "Discovery",
        "Apache",
        "Axis",
        "Building",
        "cloud",
        "Microservices",
        "backend",
        "Spring",
        "Boot",
        "application",
        "Spring",
        "Cloud",
        "services",
        "spring",
        "version",
        "Netflix",
        "OSS",
        "Eureka",
        "Circuit",
        "Breaker",
        "Ribbon",
        "load",
        "Integrated",
        "Nodejs",
        "Hapijs",
        "Mongo",
        "CRUD",
        "operations",
        "data",
        "repository",
        "use",
        "Nodejs",
        "Hapijs",
        "MongoDB",
        "MERN",
        "Stack",
        "API",
        "screens",
        "end",
        "Reactjs",
        "components",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "Flux",
        "library",
        "Proficient",
        "technologies",
        "Java",
        "J2EE",
        "Scala",
        "Framework",
        "Ruby",
        "Apache",
        "Camel",
        "Struts",
        "Spring",
        "Hibernate",
        "Junit",
        "Log4j",
        "Ant",
        "Maven",
        "SBT",
        "JSP",
        "Servlets",
        "Java",
        "Beans",
        "JSON",
        "Custom",
        "Tag",
        "web",
        "pages",
        "user",
        "interface",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "components",
        "modules",
        "custom",
        "libraries",
        "dashboard",
        "calls",
        "Business",
        "customers",
        "Flags",
        "Realtime",
        "graphs",
        "reporting",
        "Nodejs",
        "React",
        "JS",
        "Components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "concept",
        "code",
        "forms",
        "validations",
        "REACT",
        "Flux",
        "Architecture",
        "Performed",
        "CRUD",
        "operations",
        "Create",
        "Update",
        "Insert",
        "Delete",
        "data",
        "Mongo",
        "Mongo",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "Configured",
        "mongoconnector",
        "pipeline",
        "MongoDB",
        "cluster",
        "synchronize",
        "sources",
        "Elastic",
        "Search",
        "MongoDB",
        "cluster",
        "Docker",
        "Engine",
        "Docker",
        "Machine",
        "environment",
        "micro",
        "environments",
        "application",
        "custom",
        "message",
        "adapter",
        "components",
        "Apache",
        "Kafka",
        "message",
        "Micro",
        "services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Netflix",
        "Zuul",
        "API",
        "gateway",
        "requests",
        "devices",
        "services",
        "Eureka",
        "Docker",
        "image",
        "services",
        "Docker",
        "file",
        "delivery",
        "pipeline",
        "containers",
        "AWS",
        "Code",
        "Amazon",
        "ECS",
        "multitude",
        "application",
        "AWS",
        "stack",
        "EC2",
        "MongoDB",
        "Docker",
        "Kubernetes",
        "Orchestration",
        "container",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Front",
        "S3",
        "Lambda",
        "Web",
        "Services",
        "server",
        "side",
        "code",
        "app",
        "developers",
        "API",
        "development",
        "server",
        "OAuth2",
        "server",
        "client",
        "applications",
        "log",
        "delivery",
        "system",
        "producer",
        "consumer",
        "broker",
        "architecture",
        "Apache",
        "Kafka",
        "Amdocs",
        "July",
        "March",
        "software",
        "lifecycle",
        "stages",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "project",
        "Middleware",
        "System",
        "Administrators",
        "expertise",
        "development",
        "implementation",
        "perspectives",
        "NodeJS",
        "Web",
        "Tomcat",
        "servers",
        "REST",
        "APIs",
        "Scala",
        "framework",
        "data",
        "Cassandra",
        "database",
        "DAO",
        "Layer",
        "HibernateJDBC",
        "template",
        "Spring",
        "Boot",
        "UI",
        "layer",
        "Semantic",
        "HTML",
        "REST",
        "API",
        "architecture",
        "end",
        "website",
        "HTML5",
        "CSS3",
        "JAVASCRIPT",
        "user",
        "screens",
        "validations",
        "HTML",
        "jQuery",
        "JSF",
        "user",
        "requirements",
        "Java",
        "features",
        "Lambda",
        "Expressions",
        "operations",
        "collections",
        "mechanisms",
        "Date",
        "Time",
        "API",
        "Spark",
        "streaming",
        "Scala",
        "data",
        "Kafka",
        "cluster",
        "arbitrations",
        "microservices",
        "Spring",
        "Boot",
        "applications",
        "organization",
        "data",
        "JSON",
        "RFP",
        "microservice",
        "API",
        "Spring",
        "Boot",
        "Micro",
        "Services",
        "application",
        "Angular",
        "services",
        "web",
        "application",
        "APIs",
        "Designed",
        "stream",
        "system",
        "top",
        "Apache",
        "Kafka",
        "stream",
        "size",
        "Authored",
        "REST",
        "Web",
        "API",
        "wrappers",
        "Web",
        "Services",
        "User",
        "Interfaces",
        "HTML",
        "CSS",
        "JSP",
        "Spring",
        "Core",
        "annotations",
        "Spring",
        "Dependency",
        "Injection",
        "Spring",
        "MVC",
        "Rest",
        "APIs",
        "Spring",
        "Boot",
        "microservices",
        "services",
        "web",
        "application",
        "APIs",
        "SPRING",
        "Controllers",
        "JS",
        "control",
        "Java",
        "services",
        "GITHUB",
        "configuration",
        "management",
        "tool",
        "code",
        "repository",
        "Wrote",
        "Client",
        "Side",
        "ServerSide",
        "Java",
        "Script",
        "validations",
        "business",
        "database",
        "Hibernate",
        "Refactored",
        "Angular",
        "JS",
        "application",
        "MVC",
        "patterns",
        "source",
        "code",
        "maintenance",
        "percentage",
        "code",
        "reduction",
        "ease",
        "scalability",
        "ease",
        "developer",
        "performance",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "Services",
        "Docker",
        "containers",
        "microservices",
        "Web",
        "services",
        "SOAP",
        "REST",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "Deployed",
        "applications",
        "integration",
        "environments",
        "Jenkins",
        "code",
        "CI",
        "environments",
        "development",
        "testing",
        "Node",
        "Package",
        "Manager",
        "Accenture",
        "August",
        "July",
        "India",
        "Aug",
        "July",
        "Implemented",
        "SOAP",
        "web",
        "services",
        "Apache",
        "Axis",
        "JAXWS",
        "support",
        "SoapUI",
        "web",
        "services",
        "Microservices",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "lowlatency",
        "highavailability",
        "applications",
        "Nodejs",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Spring",
        "Boot",
        "annotation",
        "approach",
        "application",
        "Spring",
        "Boot",
        "framework",
        "Spring",
        "bean",
        "date",
        "layer",
        "applications",
        "Spring",
        "Hibernate",
        "ORM",
        "business",
        "logic",
        "services",
        "HQL",
        "Hibernate",
        "Criteria",
        "entity",
        "classes",
        "tables",
        "database",
        "JPA",
        "mapping",
        "files",
        "Oracle",
        "database",
        "hibernate",
        "mapping",
        "SQL",
        "Databases",
        "Java",
        "Objects",
        "Java",
        "Scala",
        "micro",
        "services",
        "enterprise",
        "web",
        "application",
        "REST",
        "APIs",
        "Spring",
        "Boot",
        "Microservices",
        "services",
        "risk",
        "assessment",
        "applications",
        "WebLogic",
        "Application",
        "Server",
        "deployments",
        "code",
        "reviews",
        "walkthroughs",
        "screens",
        "end",
        "React",
        "JS",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "Redux",
        "library",
        "Wrote",
        "unit",
        "test",
        "scripts",
        "framework",
        "testing",
        "functionalities",
        "TestDriven",
        "Development",
        "TDD",
        "methodology",
        "scripts",
        "web",
        "application",
        "testing",
        "Selenium",
        "Web",
        "driver",
        "role",
        "Scala",
        "framework",
        "applications",
        "JIRA",
        "bugs",
        "Maven",
        "script",
        "building",
        "application",
        "Jenkins",
        "Continuous",
        "Integration",
        "Builds",
        "deployments",
        "CICD",
        "Mapped",
        "tables",
        "database",
        "Hibernate",
        "Scala",
        "Education",
        "Masters",
        "Information",
        "System",
        "Information",
        "System",
        "state",
        "University",
        "Bachelors",
        "Mechanical",
        "Engineering",
        "Mechanical",
        "Engineering",
        "Christ",
        "University",
        "Bengaluru",
        "Bengaluru",
        "Karnataka",
        "Skills",
        "J2EE",
        "Cucumber",
        "PATTERNS",
        "Git",
        "OBJECT",
        "Java",
        "Hibernate",
        "Java",
        "J2Ee",
        "Spring"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:40:05.757697",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Miami FL Around 5 years of experience in the IT industry with diversified exposure in Software Process Engineering designing building and testing a Web Application using JavaJ2EE technology Proficient working with Design Development and Implementation in the field of Web Applications development using HTML CSS XHTML JavaScript jQuery Angular JS Bootstrap AJAX XML JSON Restful web services and Responsive web designing JAXP JAXB JSON JSTL Backbone JS PHP Express JS YUI yahoo UI Ext JS React JS Node JS and AJAX meeting W3C standards Expertise in serverside development with JDBC JNDI Servlets spring frameworks like MVC architecture spring boot analyzing data with Hive Spark using Scala scripts in yaml and xml to manage Database Test data Expertise using Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Ribbon clientside Load Balancer Hystrix latency and fault tolerance library Zuul gate way for routing monitoring security with Eureka service registry and log management with ELK Proficient in working on various Spring modules Spring Core Spring IOC Spring MVC Spring DAO Spring Boot and AOP Batch cloud security along with Hibernate and JPA as the backend ORM tool for implementation of persistence layer and mapping of POJOs Experience using Pivotal Cloud Foundry for building cloud native services Developed Spark scripts by using Scala shell commands as per the requirement and Developed Spark scripts by using Scala shell commands as per the requirement and enhanced the customer search experience by developing searchable components with Splunk Handson writing Stored Procedures functions triggers DDL DML SQL queries Experience in writing SQL PLSQL programming Strong experience on Hibernate and in using Hibernate Connection Pooling HQL Collections Hibernate Caching etc Experience in designing User Interactive UI Web Pages and visually appealing User Interfaces with the help of HTML 5 and CSS3 Expertise in Web Services Technologies like SOAP with WSDL and RESTful using JAXRS specification with Jersey spring Apache CXF and NodeJS and implemented SOA architecture with web services Expertise in coding optimized SQL queries on databases like My SQL SQL Server and Oracle DDL and DML Worked on IDEs like Microsoft visual studio Sublime text IntelliJ Web Storm and Eclipse Proficient in applying design patterns like MVC Singleton Session Facade Factory Abstract Factory Service Locator Visitor Observer Decorator Front Controller Data Access Object Experience in developing web applications using MVC MVVM MVP Singleton architectures Expertise in using source code control systems such as GIT JIRA and Jenkins Solid experience with Responsive Web Design RWD with involvement in several web application development projects Good knowledge on Amazon Web Services AWS cloud platform Solid knowledge on Core Java Multithreading Algorithms and ObjectOriented concepts as well as have good experience with web services like RESTFUL SOAP Implemented XML and related technologies like XSL XSTL XPATH and parsers like JAXP SAX DOM and JAXB Experience in spring framework MVC and Struts MVC Architecture interceptors action mappings and resource bundles Good knowledge in deploying applications on web servers like Apache Tomcat Glassfish and IBM WebSphere Hands on experiences with Core Java with Multithreading Concurrency File Handling IO Generics Data Structures and Collections and Garbage Collection Work Experience Java Developer Amazon Seattle WA November 2018 to Present Involved in analysis of requirements design development Unit and Integration testing and performance management of TCS BANCS application Designed and developed a RESTful hub application which resolved the SingleSignOn authentication of the target secured REST services Used Microservices with Spring Boot services and combination of REST Apache Kafka broker as well as Involved in development and design of OOPS design and concepts such as Collections Multithreading and Exception Handling Interacted with Business Analysts and Subject Matter Experts to understand the requirements and any clarifications required by team Involve in Upgradation of existing system into technical platform and building in environment in cloud base Pivotal cloud foundry PCF platform Mapping them into system requirements specifications Data sources from Injection micro services produce and consume data from apache Kafka to enhance data from enhancer micro services Creation of Scripts of Data Definition Language DDL Data Manipulation Language DML and Data Control Language Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Followed agile methodology interacted with the client providetake feedback on the features suggestimplement optimal solutions and tailored application to customer needs Developed new features required by Transamerica to be integrated to the TCS BaNCS Application Converted complex excel formulas and multi sheet excels into Java code for to be used for calculations for various types of Insurance such as Life Health Annuities Configured an optimal SpringBoot micro service which exposes Cassandra NoSQL payload via JBoss RESTEasy platform and multiple Transaction Managers Created JUnit test cases and Development of JUnit classes Test driven development approach was used and hence worked intensively on developing test cases Coordinated with Quality Assurance Team to ensure the validation of the system is without any issues Integrated with Eureka components for Service Discovery Load Balancing and other services Involved in code review process validating designs done by other developers and development of the application Quality Control Activities such as defect tracking fixing using TCS Mastercraft Analyzed the application performance using application performance monitoring tools like Dynatrace Splunk Introscope SiteScope Developed microservice using Completable Future pipelines with custom PushBack Policy Made sure the Average Response Time for supported services were matching the competitors using the Dynatrace Reports Finetuned the configurations if needed Created new dashboards in Splunk using multiple Splunk queries Also created alerts and reports to retrieve required data over a regular period of time Made sure there were no customer impacting as well as contactbanking center agent impacting issues and prioritized to resolve the issues as quickly as possible if any Analyzed production defects and suggested fixresolution for the issue to development and breakfix teams Used Nodejs for deploying POC and used for Bower and other development automation tasks Used Scala collection framework to store and process complex device metadata and other related information Used Hapijs which is fast assertive essential and moderate web framework of Nodejs that helps manage a server and routes Circuit Breaker and Ribbon Mc Donalds Corporation Chicago IL September 2017 to October 2018 Chicago IL Analyzed the business requirements of the project by studying the Business Requirement Specification document Worked with Data Governance Data quality Data architect to design various models and processes Used a Microservice architecture designed and developed RESTFUL web services using Spring Boot framework Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Used ANT scripts to fetch build and deploy application to development environment worked on SCALA technologies Written DDL DML queries to insert retrieve and modify the data from database Converting all legacy applications to cloud native by Spring BOOT Soring Cloud in to PCF Pivotal Cloud Foundry Implemented SOA to develop Spring RestfulMicro Services and implemented Spring Eureka Netflix Ribbon as part of Services Discovery using Apache Axis Building cloud Microservices and implemented backend using Spring Boot And Authored application using Spring Cloud services spring version of Netflix OSS Eureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Integrated Nodejs with Hapijs and communicated with Mongo dB for CRUD operations on the data repository The backend use of Nodejs Hapijs MongoDB and Mongoose the complete MERN Stack to provide RESTful API Implemented various screens for the front end using Reactjs and used various predefined components from Node Package Manager NPM and Flux library Proficient in technologies Java J2EE Scala Play Framework Ruby Apache Camel Struts Spring Hibernate Junit Log4j Ant Maven SBT JSP Servlets Java Beans XML JSON Custom Tag Libraries Developed dynamic and responsive web pages to user interface screens using HTML5 CSS3 and JavaScript Created reusable components and used across various modules using Angular custom libraries Developed a dashboard based on Ajax calls with Business customers count Flags Realtime graphs for analytical reporting using Nodejs Worked in using React JS Components Forms Events Keys Router Animations and Flux concept Extensively worked in writing minimal code in building reusable forms with their validations using REACT with Flux Architecture Performed CRUD operations like Create Update Insert and Delete data in MongodB Worked on Mongo dB database concepts such as locking transactions indexes replication and schema design Configured mongoconnector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster Used Docker Engine and Docker Machine environment to deploy the micro servicesoriented environments for scalable application Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Micro services to base on Restful API utilizing Spring Boot with Spring MVC Implemented Netflix Zuul API gateway for all the requests from the devices and by registering services to Eureka Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Designed and deployed a multitude application utilizing almost all the AWS stack which Includes EC2 MongoDB Docker Kubernetes Orchestration container focusing on highavailability fault tolerance and autoscaling Worked on AWS Cloud Front S3 and Lambda Web Services to integrate the server side and clientside code Worked with app developers during API development to implement a secure server by using OAuth2 between server and client applications Maintained log delivery system by creating a producer consumer and broker architecture using Apache Kafka Amdocs IN July 2013 to March 2015 Involved in different software lifecycle stages like Design Development Testing and Implementation of the project Worked closely with the Middleware and System Administrators in providing technical expertise from the development and implementation perspectives especially with NodeJS Web and Tomcat servers Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Designed and developed the DAO Layer using HibernateJDBC template using Spring Boot Developed responsive UI layer utilizing Semantic HTML REST API architecture Developed front end for the entire website using HTML5 CSS3 and JAVASCRIPT Involved in designing user screens and validations using HTML 5 jQuery and JSF as per user requirements Extensively used Java features such as Lambda Expressions Parallel operations on collections for effective sorting mechanisms and new Date Time API Used Spark streaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Built microservices with Spring Boot to serve multiple applications across the organization The data is provided consumed in JSON Created RFP microservice to provide RESTful API utilizing Spring Boot with Micro Services Developed the application using Angular 40 and implemented Angular services to connect the web application to backend APIs Involved in Designed and implemented a stream filtering system on top of Apache Kafka to reduce stream size Authored REST based Web API wrappers to integrate with conventional Web Services Developed Creating establishing of the User Interfaces using HTML CSS and JSP Used Spring Core annotations for Spring Dependency Injection Spring MVC for Rest APIs and Spring Boot for microservices Implemented Angular services to connect the web application to backend APIs SPRING Controllers were used with Angular JS to route the control to desired Java services Used GITHUB as the configuration management tool to manage the code repository Wrote Client Side and ServerSide validations by using Java Script along with inbuilt Angular validations Mapped business objects to database using Hibernate Refactored and enhanced an existing Angular JS application to follow strict MVC patterns for improved source code maintenance which resulted in significant percentage of code reduction ease of upgrade scalability ease of developer to spin up and enhanced performance Used Spring Boot which is radically faster in building cloud Micro Services Maintained Docker containers where microservices are deployed Used Web services SOAP REST for transmission of large blocks of XML data over HTTP Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Node Package Manager Accenture IN August 2012 to July 2013 India Aug 2012 to July 2013 Implemented SOAP based web services using Apache Axis with JAXWS support Used SoapUI to test the web services Developed Microservices using Spring MVC Spring Boot Spring Cloud Designed and implemented a lowlatency highavailability and performant applications by using Nodejs Used a Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Used complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the Spring bean profiling Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects Built springbased Java and Scala micro services to support enterprise web application Designed and developed REST APIs using Spring Boot and Microservices for exposing the services utilized for risk assessment by various other applications Configured WebLogic Application Server for deployments and participated in structured code reviews walkthroughs Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager and Redux library Wrote unit test scripts using TestNG framework for testing functionalities in a TestDriven Development TDD methodology Wrote scripts for automated web application testing using Selenium Web driver as well as played a vital role in Scala framework for webbased applications Used JIRA for tracking bugs Used Maven script for building and deploying the application Used Jenkins for Continuous Integration Builds and deployments CICD Mapped tables in database using Hibernate and Scala Education Masters in Information System in Information System Illinious state University 2017 to 2019 Bachelors in Mechanical Engineering in Mechanical Engineering Christ University Bengaluru Bengaluru Karnataka 2012 to 2016 Skills J2EE Cucumber DESIGN PATTERNS Git OBJECT ORIENTED Java Hibernate Java J2Ee Spring",
    "unique_id": "309b8cf4-288a-4915-a789-97611610ebf2"
}