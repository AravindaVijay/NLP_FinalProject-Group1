{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Ellie May Over seven years of experience as a WebApplication Developer and coding with analytical programming using Python Django Flask and C Experienced in developing webbased applications using Python DJANGO GTK QT C XML CSS3 HTML5 DHTML JavaScript and JQuery Hands on experience in using NOSQL libraries like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MYSQL databases Experience in designing the automation framework using Perl and Shell scripting Experience in Web Automation Testing with tools like Selenium IDE and Cucumber Strong knowledge of software QA methodologies tools and processes Familiarity with development best practices such as code reviews and unit testing and experience in designing the Automation frameworks Experience with REST APIs message queues and asynchronous processes Experience with Web Development Amazon Web Services Python and the Django framework Very good experience with cloud platforms like Amazon AWS and Google App Engine Experienced in installing configuring modifying testing and deploying applications with Apache and Siebel Experienced in MVW frameworks like Django Angularjs Java Script backbonejs JQuery and Nodejs Familiar with JSON based REST Web services and Amazon Web services Experienced in developing Web Services with Python programming language Experienced in installing configuring modifying testing and deploying applications with Apache Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Good knowledge of web services with protocols SOAP and REST Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Good understanding of NoSQL databases such as MongoDB Datastax Redis and Cassandra Experienced in Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Experienced in developing webbased applications using Python Django PHP XML CSS HTML Java Script and JQuery Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Experienced in MVW frameworks like Django Angularjs Java Script JQuery and Nodejs Highlevel experience in Base SAS SASMacros SASSQL SASStat SASConnect SASAccess SASGraph SASODS SASEBI SASGrid SAS Visualizer SASETS and SPSS modeler Experienced in installing configuring modifying testing and deploying applications with Apache Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Familiarity with development best practices such as code reviews and unit testing and experience in designing the Automation frameworks Exposure to automation in Ansible using its Python API Experience in working Asynchronous Frameworks like NodeJS Twisted and designing the automation framework using Python and Shell scripting Familiar with JSON based REST Web services and Amazon Web services Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test Driven Development TDD Load Testing Work Experience Python Developer Ellie May Pleasanton CA February 2016 to Present Responsibilities Building and supporting libraries in the test automation infrastructure Wrote Automation test cases using Selenium WebDriver using Python API Managed firewalls on hypervisors Maintained security policies for stateful firewalls and IPSs Wrote technical documentation for firewalls and server management Developed a firewall policy scanner performed network security duties in successfully preventing breaches to the enterprises networks systems and corporate files Acted as Network Security Analyst responsible for protecting the information found on computers and data networks Developed automated test design frontend and backend feature implementation and any other improvements to the test automation framework Configured and installed network and security related devices eg routers switches firewalls and load balancers Responsible for gathering requirements system analysis design development testing and deployment Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed Python Django Twisted and Asyncio web service applications concentrating in class based views to analyze and report financial data analysis results and deploy as a Windows service Using Redis to store pieces of data in a much more structured durable and robust manner Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Planning implementing and converting manual test cases to automation test cases Written shell scripting for automation Used Python based GUI components for the front end functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed the core web framework based on asyncio using aiohttp Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Worked on AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Developed web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Developed applications using MongoDB Redis and MySQL Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Burlington Coat Factory Florence NJ December 2014 to February 2016 Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Executing regression tests on each release and verified bugs found from automation test in Bugzilla Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Wrote Automation test cases using Selenium Web Driver JUnit Maven and Spring Implemented the web framework using Pythons asyncio package to improve the performance of information processing Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Involved in Highload faulttolerant systems design and development PythonTwisted RabbitMQ Erlang Javascript and etc Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Python Pandas PyBrain to spot trends and predict future movements in investment vehicles Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Worked on continuous integration and automation using Jenkins Designed and managed API system deployment using fast http server and Amazon AWS architecture Wrote and executed various MYSQL Workbench database queries from Python using PythonMySQL connector and MySQL dB package Created of Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Rewrote existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Developed scripts to migrate data from proprietary database to MySQL Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 and JavaScript Handled all the client side validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Developed and executed test automation through LabView Python and hardware and software test tools Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer United Parcel Service Inc Atlanta GA March 2011 to November 2013 Responsibilities Worked with team of developers on Python applications for RISK management Developed PythonDjango application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Worked on Python Open stack APIs Used Python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Pandas library for statistical Analysis Built web applications by using Python Django AWS Flask Jinga PostgreSQL and Redis Developed tools using Python Shell scripting XML to automate some of the manual tasks Converted Visual Basic Application to Python MySQL Designed and developed System monitoring in Python and Redis to keep track health of Platform Hbase Storm Kafka etc in the multinode cluster environment Developed automation scripts to test storage appliances in Python Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Used HTML CSS JQuery JSON and JavaScript for frontend applications Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed the application architecture and implemented using MySQL database Worked on development of SQL and stored procedures on MYSQL Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python Django Panda API AWS JSON PHP Flash Shell Scripting HTML CSS AJAX JQuery XML SOAP Jira Agile SQL MYSQL and Windows Skills DJANGO 6 years PYTHON 6 years XML 6 years DATABASE 6 years jQuery 6 years Additional Information Technical Skills Primary Languages Python 35 Java SQL PLSQL Python Libraries memcache pika UnitTest JSON CSV XLS Web Technologies HTML5 XML CSS3 Java Script JQuery Python Framework Webpy Bottlepy Flask Pyramid Django Version Control Tools Git Github SVN Bug Tracking Tools Jira Bugzilla Database Sqlite3 MongoDB Oracle 9i 10g 11g IDEs Development Tools NetBeans Eclipse PyCharm PyScripter PyStudio and Sublime Text Operating System Unix Linux Windows Machine Learning Libraries Keras Scikitlearn MLLib Statsmodels PyBrain Caret Nnet Software Development Lifecycle Agile Methodology Scrum framework",
    "entities": [
        "Flashvars",
        "Microsoft Visio Developed Business Logic using Python on Django Web Framework Developed",
        "AJAX",
        "GUI",
        "Selenium IDE",
        "Test Driven Development TDD Load Testing Work Experience Python Developer",
        "Identity Compute Image Service Block Storage Networking Neutron",
        "Amazon Web Services AWS",
        "Google App Engine Experienced",
        "XML",
        "SOAP",
        "Atlanta",
        "NOSQL",
        "Automation",
        "Maintained",
        "SPSS",
        "Shell",
        "Linux Windows Machine Learning Libraries Keras Scikitlearn MLLib",
        "MySQL Database",
        "LAMP",
        "Amazon",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "SASConnect SASAccess SASGraph SASODS SASEBI SASGrid",
        "Django",
        "CF Objects Worked",
        "Web Development Amazon Web Services Python",
        "Git",
        "PythonPHP",
        "LabView Python",
        "DOM JSON PHP HTML5",
        "RDS",
        "Views",
        "Converted Visual Basic Application to Python MySQL Designed",
        "BDD Wrote Automation",
        "Created of Python",
        "HTML CSS",
        "API",
        "QA",
        "Sublime Text Operating System",
        "Created",
        "Perl",
        "Python Django AWS Flask",
        "WAMP Windows Apache",
        "Workbench",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Developed ColdFusion Components",
        "Djangos Test Module Used Django",
        "Apache Experience",
        "HTML",
        "Chef and Puppet Planning",
        "GitHub Build",
        "SQL",
        "lPythonspan",
        "Pandas PyQt PyQuery",
        "WebApplication Developer",
        "MVW",
        "Amazon AWS",
        "Wrote",
        "Python API Experience",
        "Pandas",
        "Datatables",
        "ERDiagrams",
        "Maven",
        "Created UI",
        "Djangos",
        "Google Analytics",
        "Created Business Logic",
        "Django Database",
        "Selenium WebDriver",
        "CMS",
        "Network Security Analyst",
        "Developed Python Django Twisted",
        "REST Experienced",
        "REST",
        "JQuery Hands",
        "MySQL Created",
        "NoSQL",
        "Redis Developed",
        "Oracle SQLite PostgreSQL",
        "Highload",
        "JQuery",
        "Cassandra Configuration",
        "Bash Worked",
        "Additional Information Technical Skills Primary Languages Python"
    ],
    "experience": "Experience in designing the automation framework using Perl and Shell scripting Experience in Web Automation Testing with tools like Selenium IDE and Cucumber Strong knowledge of software QA methodologies tools and processes Familiarity with development best practices such as code reviews and unit testing and experience in designing the Automation frameworks Experience with REST APIs message queues and asynchronous processes Experience with Web Development Amazon Web Services Python and the Django framework Very good experience with cloud platforms like Amazon AWS and Google App Engine Experienced in installing configuring modifying testing and deploying applications with Apache and Siebel Experienced in MVW frameworks like Django Angularjs Java Script backbonejs JQuery and Nodejs Familiar with JSON based REST Web services and Amazon Web services Experienced in developing Web Services with Python programming language Experienced in installing configuring modifying testing and deploying applications with Apache Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Good knowledge of web services with protocols SOAP and REST Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Good understanding of NoSQL databases such as MongoDB Datastax Redis and Cassandra Experienced in Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Experienced in developing webbased applications using Python Django PHP XML CSS HTML Java Script and JQuery Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Experienced in MVW frameworks like Django Angularjs Java Script JQuery and Nodejs Highlevel experience in Base SAS SASMacros SASSQL SASStat SASConnect SASAccess SASGraph SASODS SASEBI SASGrid SAS Visualizer SASETS and SPSS modeler Experienced in installing configuring modifying testing and deploying applications with Apache Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Familiarity with development best practices such as code reviews and unit testing and experience in designing the Automation frameworks Exposure to automation in Ansible using its Python API Experience in working Asynchronous Frameworks like NodeJS Twisted and designing the automation framework using Python and Shell scripting Familiar with JSON based REST Web services and Amazon Web services Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test Driven Development TDD Load Testing Work Experience Python Developer Ellie May Pleasanton CA February 2016 to Present Responsibilities Building and supporting libraries in the test automation infrastructure Wrote Automation test cases using Selenium WebDriver using Python API Managed firewalls on hypervisors Maintained security policies for stateful firewalls and IPSs Wrote technical documentation for firewalls and server management Developed a firewall policy scanner performed network security duties in successfully preventing breaches to the enterprises networks systems and corporate files Acted as Network Security Analyst responsible for protecting the information found on computers and data networks Developed automated test design frontend and backend feature implementation and any other improvements to the test automation framework Configured and installed network and security related devices eg routers switches firewalls and load balancers Responsible for gathering requirements system analysis design development testing and deployment Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed Python Django Twisted and Asyncio web service applications concentrating in class based views to analyze and report financial data analysis results and deploy as a Windows service Using Redis to store pieces of data in a much more structured durable and robust manner Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Planning implementing and converting manual test cases to automation test cases Written shell scripting for automation Used Python based GUI components for the front end functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed the core web framework based on asyncio using aiohttp Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Worked on AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Developed web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Developed applications using MongoDB Redis and MySQL Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Burlington Coat Factory Florence NJ December 2014 to February 2016 Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Executing regression tests on each release and verified bugs found from automation test in Bugzilla Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Wrote Automation test cases using Selenium Web Driver JUnit Maven and Spring Implemented the web framework using Pythons asyncio package to improve the performance of information processing Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Involved in Highload faulttolerant systems design and development PythonTwisted RabbitMQ Erlang Javascript and etc Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Python Pandas PyBrain to spot trends and predict future movements in investment vehicles Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Worked on continuous integration and automation using Jenkins Designed and managed API system deployment using fast http server and Amazon AWS architecture Wrote and executed various MYSQL Workbench database queries from Python using PythonMySQL connector and MySQL dB package Created of Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Rewrote existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Developed scripts to migrate data from proprietary database to MySQL Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 and JavaScript Handled all the client side validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Developed and executed test automation through LabView Python and hardware and software test tools Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer United Parcel Service Inc Atlanta GA March 2011 to November 2013 Responsibilities Worked with team of developers on Python applications for RISK management Developed PythonDjango application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Worked on Python Open stack APIs Used Python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Pandas library for statistical Analysis Built web applications by using Python Django AWS Flask Jinga PostgreSQL and Redis Developed tools using Python Shell scripting XML to automate some of the manual tasks Converted Visual Basic Application to Python MySQL Designed and developed System monitoring in Python and Redis to keep track health of Platform Hbase Storm Kafka etc in the multinode cluster environment Developed automation scripts to test storage appliances in Python Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Used HTML CSS JQuery JSON and JavaScript for frontend applications Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed the application architecture and implemented using MySQL database Worked on development of SQL and stored procedures on MYSQL Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python Django Panda API AWS JSON PHP Flash Shell Scripting HTML CSS AJAX JQuery XML SOAP Jira Agile SQL MYSQL and Windows Skills DJANGO 6 years PYTHON 6 years XML 6 years DATABASE 6 years jQuery 6 years Additional Information Technical Skills Primary Languages Python 35 Java SQL PLSQL Python Libraries memcache pika UnitTest JSON CSV XLS Web Technologies HTML5 XML CSS3 Java Script JQuery Python Framework Webpy Bottlepy Flask Pyramid Django Version Control Tools Git Github SVN Bug Tracking Tools Jira Bugzilla Database Sqlite3 MongoDB Oracle 9i 10 g 11 g IDEs Development Tools NetBeans Eclipse PyCharm PyScripter PyStudio and Sublime Text Operating System Unix Linux Windows Machine Learning Libraries Keras Scikitlearn MLLib Statsmodels PyBrain Caret Nnet Software Development Lifecycle Agile Methodology Scrum framework",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Ellie",
        "May",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "Python",
        "Django",
        "Flask",
        "C",
        "applications",
        "Python",
        "DJANGO",
        "GTK",
        "QT",
        "C",
        "XML",
        "CSS3",
        "HTML5",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Hands",
        "experience",
        "NOSQL",
        "libraries",
        "MongoDB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MYSQL",
        "Experience",
        "automation",
        "framework",
        "Perl",
        "Shell",
        "Experience",
        "Web",
        "Automation",
        "Testing",
        "tools",
        "Selenium",
        "IDE",
        "Cucumber",
        "Strong",
        "knowledge",
        "software",
        "QA",
        "methodologies",
        "tools",
        "Familiarity",
        "development",
        "practices",
        "code",
        "reviews",
        "unit",
        "testing",
        "experience",
        "Automation",
        "frameworks",
        "Experience",
        "REST",
        "APIs",
        "message",
        "queues",
        "processes",
        "Experience",
        "Web",
        "Development",
        "Amazon",
        "Web",
        "Services",
        "Python",
        "Django",
        "framework",
        "experience",
        "cloud",
        "platforms",
        "Amazon",
        "AWS",
        "Google",
        "App",
        "Engine",
        "testing",
        "applications",
        "Apache",
        "Siebel",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "backbonejs",
        "JQuery",
        "Nodejs",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "testing",
        "applications",
        "Apache",
        "Experience",
        "stack",
        "services",
        "Identity",
        "Compute",
        "Image",
        "Service",
        "Block",
        "Storage",
        "Networking",
        "Neutron",
        "Keystone",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "understanding",
        "NoSQL",
        "MongoDB",
        "Datastax",
        "Redis",
        "Cassandra",
        "Pythons",
        "modules",
        "numpy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "applications",
        "Python",
        "Django",
        "PHP",
        "XML",
        "CSS",
        "HTML",
        "Java",
        "Script",
        "JQuery",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "SQL",
        "PostgreSQL",
        "database",
        "methodologies",
        "quality",
        "deliverables",
        "ontime",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "JQuery",
        "Nodejs",
        "Highlevel",
        "experience",
        "Base",
        "SAS",
        "SASMacros",
        "SASSQL",
        "SASConnect",
        "SASAccess",
        "SASGraph",
        "SASODS",
        "SASEBI",
        "SASGrid",
        "SAS",
        "Visualizer",
        "SASETS",
        "SPSS",
        "modeler",
        "testing",
        "applications",
        "Apache",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Familiarity",
        "development",
        "practices",
        "code",
        "reviews",
        "unit",
        "testing",
        "experience",
        "Automation",
        "frameworks",
        "Exposure",
        "automation",
        "Ansible",
        "Python",
        "API",
        "Experience",
        "Asynchronous",
        "Frameworks",
        "NodeJS",
        "Twisted",
        "automation",
        "framework",
        "Python",
        "Shell",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Ellie",
        "May",
        "Pleasanton",
        "CA",
        "February",
        "Present",
        "Responsibilities",
        "Building",
        "libraries",
        "test",
        "automation",
        "infrastructure",
        "Wrote",
        "Automation",
        "test",
        "cases",
        "Selenium",
        "WebDriver",
        "Python",
        "API",
        "firewalls",
        "hypervisors",
        "security",
        "policies",
        "firewalls",
        "IPSs",
        "documentation",
        "firewalls",
        "server",
        "management",
        "firewall",
        "policy",
        "scanner",
        "network",
        "security",
        "duties",
        "breaches",
        "enterprises",
        "networks",
        "systems",
        "files",
        "Network",
        "Security",
        "Analyst",
        "information",
        "computers",
        "data",
        "networks",
        "test",
        "design",
        "frontend",
        "feature",
        "implementation",
        "improvements",
        "test",
        "automation",
        "framework",
        "Configured",
        "network",
        "security",
        "devices",
        "eg",
        "routers",
        "firewalls",
        "load",
        "balancers",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Created",
        "Database",
        "Schema",
        "MySQL",
        "Database",
        "ERDiagrams",
        "Microsoft",
        "Visio",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "Django",
        "Twisted",
        "Asyncio",
        "web",
        "service",
        "applications",
        "class",
        "views",
        "data",
        "analysis",
        "results",
        "Windows",
        "service",
        "Redis",
        "pieces",
        "data",
        "manner",
        "Django",
        "Database",
        "APIs",
        "database",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Puppet",
        "Planning",
        "test",
        "cases",
        "test",
        "cases",
        "shell",
        "scripting",
        "automation",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "core",
        "web",
        "framework",
        "asyncio",
        "aiohttp",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Developed",
        "ColdFusion",
        "Components",
        "custom",
        "tags",
        "CF",
        "Objects",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "web",
        "applications",
        "MongoDB",
        "background",
        "processes",
        "Resque",
        "Redis",
        "Worked",
        "performance",
        "tuning",
        "cluster",
        "Cassandra",
        "Configuration",
        "file",
        "JVM",
        "Parameters",
        "applications",
        "Redis",
        "MySQL",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "Working",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Version",
        "control",
        "GITHub",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "Shell",
        "Scripting",
        "AWS",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Wireshark",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Angularjs",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Burlington",
        "Coat",
        "Factory",
        "Florence",
        "NJ",
        "December",
        "February",
        "Responsibilities",
        "requirement",
        "gathering",
        "architect",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Executing",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Used",
        "PyQt",
        "functionality",
        "filtering",
        "columns",
        "customers",
        "transactions",
        "statements",
        "navigation",
        "rules",
        "application",
        "page",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Web",
        "development",
        "programming",
        "engineering",
        "Django",
        "UWSGI",
        "SQL",
        "admin",
        "tools",
        "BDD",
        "Wrote",
        "Automation",
        "test",
        "cases",
        "Selenium",
        "Web",
        "Driver",
        "JUnit",
        "Maven",
        "Spring",
        "web",
        "framework",
        "Pythons",
        "asyncio",
        "package",
        "performance",
        "information",
        "processing",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Highload",
        "systems",
        "design",
        "development",
        "PythonTwisted",
        "RabbitMQ",
        "Erlang",
        "Javascript",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Python",
        "Pandas",
        "PyBrain",
        "trends",
        "movements",
        "investment",
        "vehicles",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "integration",
        "automation",
        "Jenkins",
        "Designed",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Wrote",
        "MYSQL",
        "Workbench",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "scripts",
        "data",
        "access",
        "analysis",
        "Scripts",
        "DataFeeds",
        "XLS",
        "FIXML",
        "process",
        "system",
        "monitoring",
        "Rewrote",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "Python",
        "Bootstrap",
        "Angularjs",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "scripts",
        "data",
        "database",
        "MySQL",
        "Responsible",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "UI",
        "website",
        "HTML5",
        "XHTML",
        "AJAX",
        "CSS3",
        "JavaScript",
        "client",
        "side",
        "validation",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Git",
        "repository",
        "project",
        "GitHub",
        "Build",
        "development",
        "environment",
        "JIRA",
        "Developed",
        "test",
        "automation",
        "LabView",
        "Python",
        "hardware",
        "software",
        "test",
        "tools",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "Environment",
        "Python",
        "Django",
        "Java",
        "Angularjs",
        "Bootstrap",
        "Bash",
        "PyQt",
        "XML",
        "Shell",
        "Scripting",
        "MySQL",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Jenkins",
        "Apache",
        "Web",
        "Server",
        "Linux",
        "Python",
        "Developer",
        "United",
        "Parcel",
        "Service",
        "Inc",
        "Atlanta",
        "GA",
        "March",
        "November",
        "Responsibilities",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "PythonDjango",
        "application",
        "Google",
        "Analytics",
        "aggregation",
        "Used",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Python",
        "stack",
        "APIs",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Pandas",
        "library",
        "Analysis",
        "web",
        "applications",
        "Python",
        "Django",
        "Jinga",
        "PostgreSQL",
        "Redis",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Visual",
        "Basic",
        "Application",
        "Python",
        "MySQL",
        "System",
        "monitoring",
        "Python",
        "Redis",
        "track",
        "health",
        "Platform",
        "Hbase",
        "Storm",
        "Kafka",
        "multinode",
        "cluster",
        "environment",
        "automation",
        "scripts",
        "storage",
        "appliances",
        "Python",
        "Worked",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "JavaScript",
        "frontend",
        "applications",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "application",
        "architecture",
        "MySQL",
        "database",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "project",
        "JIRA",
        "Agile",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Environment",
        "Python",
        "Django",
        "Panda",
        "API",
        "AWS",
        "JSON",
        "PHP",
        "Flash",
        "Shell",
        "Scripting",
        "HTML",
        "CSS",
        "AJAX",
        "JQuery",
        "XML",
        "SOAP",
        "Jira",
        "Agile",
        "SQL",
        "MYSQL",
        "Windows",
        "Skills",
        "DJANGO",
        "years",
        "PYTHON",
        "years",
        "XML",
        "years",
        "DATABASE",
        "years",
        "jQuery",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Primary",
        "Languages",
        "Python",
        "Java",
        "SQL",
        "PLSQL",
        "Python",
        "memcache",
        "pika",
        "UnitTest",
        "CSV",
        "XLS",
        "Web",
        "Technologies",
        "HTML5",
        "XML",
        "CSS3",
        "Java",
        "Script",
        "JQuery",
        "Python",
        "Framework",
        "Webpy",
        "Bottlepy",
        "Flask",
        "Pyramid",
        "Django",
        "Version",
        "Control",
        "Tools",
        "Git",
        "Github",
        "SVN",
        "Bug",
        "Tracking",
        "Tools",
        "Jira",
        "Bugzilla",
        "Database",
        "Sqlite3",
        "MongoDB",
        "Oracle",
        "9i",
        "g",
        "g",
        "IDEs",
        "Development",
        "Tools",
        "NetBeans",
        "Eclipse",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "Sublime",
        "Text",
        "Operating",
        "System",
        "Unix",
        "Linux",
        "Windows",
        "Machine",
        "Learning",
        "Keras",
        "Scikitlearn",
        "MLLib",
        "Statsmodels",
        "PyBrain",
        "Caret",
        "Nnet",
        "Software",
        "Development",
        "Lifecycle",
        "Agile",
        "Methodology",
        "Scrum",
        "framework"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:07:17.651178",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Ellie May Over seven years of experience as a WebApplication Developer and coding with analytical programming using Python Django Flask and C Experienced in developing webbased applications using Python DJANGO GTK QT C XML CSS3 HTML5 DHTML JavaScript and JQuery Hands on experience in using NOSQL libraries like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MYSQL databases Experience in designing the automation framework using Perl and Shell scripting Experience in Web Automation Testing with tools like Selenium IDE and Cucumber Strong knowledge of software QA methodologies tools and processes Familiarity with development best practices such as code reviews and unit testing and experience in designing the Automation frameworks Experience with REST APIs message queues and asynchronous processes Experience with Web Development Amazon Web Services Python and the Django framework Very good experience with cloud platforms like Amazon AWS and Google App Engine Experienced in installing configuring modifying testing and deploying applications with Apache and Siebel Experienced in MVW frameworks like Django Angularjs Java Script backbonejs JQuery and Nodejs Familiar with JSON based REST Web services and Amazon Web services Experienced in developing Web Services with Python programming language Experienced in installing configuring modifying testing and deploying applications with Apache Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Good knowledge of web services with protocols SOAP and REST Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Good understanding of NoSQL databases such as MongoDB Datastax Redis and Cassandra Experienced in Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Experienced in developing webbased applications using Python Django PHP XML CSS HTML Java Script and JQuery Experienced in developing Web Services with Python programming language Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Experienced in MVW frameworks like Django Angularjs Java Script JQuery and Nodejs Highlevel experience in Base SAS SASMacros SASSQL SASStat SASConnect SASAccess SASGraph SASODS SASEBI SASGrid SAS Visualizer SASETS and SPSS modeler Experienced in installing configuring modifying testing and deploying applications with Apache Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Familiarity with development best practices such as code reviews and unit testing and experience in designing the Automation frameworks Exposure to automation in Ansible using its Python API Experience in working Asynchronous Frameworks like NodeJS Twisted and designing the automation framework using Python and Shell scripting Familiar with JSON based REST Web services and Amazon Web services Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Experience with continuous integration and automation using Jenkins Experience with Unit testing Test Driven Development TDD Load Testing Work Experience Python Developer Ellie May Pleasanton CA February 2016 to Present Responsibilities Building and supporting libraries in the test automation infrastructure Wrote Automation test cases using Selenium WebDriver using Python API Managed firewalls on hypervisors Maintained security policies for stateful firewalls and IPSs Wrote technical documentation for firewalls and server management Developed a firewall policy scanner performed network security duties in successfully preventing breaches to the enterprises networks systems and corporate files Acted as Network Security Analyst responsible for protecting the information found on computers and data networks Developed automated test design frontend and backend feature implementation and any other improvements to the test automation framework Configured and installed network and security related devices eg routers switches firewalls and load balancers Responsible for gathering requirements system analysis design development testing and deployment Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Developed Python Django Twisted and Asyncio web service applications concentrating in class based views to analyze and report financial data analysis results and deploy as a Windows service Using Redis to store pieces of data in a much more structured durable and robust manner Used Django Database APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Planning implementing and converting manual test cases to automation test cases Written shell scripting for automation Used Python based GUI components for the front end functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed the core web framework based on asyncio using aiohttp Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Worked on AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Developed web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Developed applications using MongoDB Redis and MySQL Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Shell Scripting AWS Pandas PyQt PyQuery Wireshark Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Angularjs Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Burlington Coat Factory Florence NJ December 2014 to February 2016 Responsibilities Participated in requirement gathering and worked closely with the architect in designing and modeling Developed entire frontend and backend modules using Python on Django Web Framework Executing regression tests on each release and verified bugs found from automation test in Bugzilla Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Performed testing using Djangos Test Module Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django UWSGI and SQL internal admin tools behave BDD Wrote Automation test cases using Selenium Web Driver JUnit Maven and Spring Implemented the web framework using Pythons asyncio package to improve the performance of information processing Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Involved in Highload faulttolerant systems design and development PythonTwisted RabbitMQ Erlang Javascript and etc Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Python Pandas PyBrain to spot trends and predict future movements in investment vehicles Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Worked on continuous integration and automation using Jenkins Designed and managed API system deployment using fast http server and Amazon AWS architecture Wrote and executed various MYSQL Workbench database queries from Python using PythonMySQL connector and MySQL dB package Created of Python scripts for data access and analysis Scripts DataFeeds XLS FIXML to aid in process and system monitoring and reporting Rewrote existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Developed scripts to migrate data from proprietary database to MySQL Responsible for search engine optimization to improve the visibility of the website Designed and developed the UI of the website using HTML5 XHTML AJAX CSS3 and JavaScript Handled all the client side validation using JavaScript Designed and developed data management system using MySQL Created a Git repository and added the project to GitHub Build development environment with JIRA Developed and executed test automation through LabView Python and hardware and software test tools Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python 27 Django 14 Java Angularjs Bootstrap AWS Bash PyQt XML Shell Scripting MySQL HTML XHTML CSS AJAX JavaScript Jenkins Apache Web Server Linux Python Developer United Parcel Service Inc Atlanta GA March 2011 to November 2013 Responsibilities Worked with team of developers on Python applications for RISK management Developed PythonDjango application for Google Analytics aggregation and reporting Used Django configuration to manage URLs and application parameters Worked on Python Open stack APIs Used Python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Pandas library for statistical Analysis Built web applications by using Python Django AWS Flask Jinga PostgreSQL and Redis Developed tools using Python Shell scripting XML to automate some of the manual tasks Converted Visual Basic Application to Python MySQL Designed and developed System monitoring in Python and Redis to keep track health of Platform Hbase Storm Kafka etc in the multinode cluster environment Developed automation scripts to test storage appliances in Python Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Used HTML CSS JQuery JSON and JavaScript for frontend applications Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Designed the application architecture and implemented using MySQL database Worked on development of SQL and stored procedures on MYSQL Responsible for debugging the project monitored on JIRA Agile Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Environment Python Django Panda API AWS JSON PHP Flash Shell Scripting HTML CSS AJAX JQuery XML SOAP Jira Agile SQL MYSQL and Windows Skills DJANGO 6 years PYTHON 6 years XML 6 years DATABASE 6 years jQuery 6 years Additional Information Technical Skills Primary Languages Python 35 Java SQL PLSQL Python Libraries memcache pika UnitTest JSON CSV XLS Web Technologies HTML5 XML CSS3 Java Script JQuery Python Framework Webpy Bottlepy Flask Pyramid Django Version Control Tools Git Github SVN Bug Tracking Tools Jira Bugzilla Database Sqlite3 MongoDB Oracle 9i 10g 11g IDEs Development Tools NetBeans Eclipse PyCharm PyScripter PyStudio and Sublime Text Operating System Unix Linux Windows Machine Learning Libraries Keras Scikitlearn MLLib Statsmodels PyBrain Caret Nnet Software Development Lifecycle Agile Methodology Scrum framework",
    "unique_id": "c4d8d26e-d41a-442d-ba34-ccdedf81b177"
}