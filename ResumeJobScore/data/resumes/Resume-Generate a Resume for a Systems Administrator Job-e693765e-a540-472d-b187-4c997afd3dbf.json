{
    "clean_data": "Software Developer span lSoftwarespan span lDeveloperspan Software Developer Prudential Insurance America Sunnyvale CA Over 6 years of strong experience in Software Analysis Design Development Implementation and Testing of Object Oriented Applications and Web based Enterprise Applications using JavaJ2EE on Windows and UNIX platforms Over 6 years of experience in implementing web based projects using IBM WebSphere Application Server 5x6x and IDEs like IBM WebSphere Studio Application Developer WSAD 50 Eclipse 3031 and RAD 6070 Over 3 years of experience in AWS Expertise in designing and developing enterprise applications using J2EE technologies like EJB 2130 Struts 1220 JDBC JNDIJMSJAXB SAXDOM Web services Expertise in Object Oriented Analysis and Design OOAD using Unified Modeling Language UML by using Rational Rose Expertise in design patterns including Front Controller Data Access Object Session Faade Business Delegate Service Locator MVC Data Transfer Object and Singleton Extensive experience in frameworks like Struts framework spring framework Developed MVC framework using Struts and Spring Expertise in various components in spring such as IOC AOP and MVC Used Hibernate 30 as an ORM Tool to access Database Expertise in Web Services architecture in SOAP and WSDL using JAXRPC Expertise in XML and related technologies like XSL XSLT and parsers like JAXP SAX DOM and JAXB Strong experience with JUnit in performing unit test and determining the application functionality Experience in implementing TDD functionality Experience with JMS both Synchronous and Asynchronous messaging Experience using Java Platform Enterprise Edition Java EE 56 Expertise in implementing web applications using IBM Websphere 405060 application Server Good Working knowledge of ANT MAVEN and Log4J Proficient with various J2EE IDEs like RAD 70 WSAD 50 Eclipse 3031 and JBuilde 7080 Strong experience in different phases of Software Development Life cycle SDLC and Rational Unified Process RUP including Design Implementation and Testing during the development of software applications Expert in Various Agile methodologies like Test Driven Development Incremental and Iteration methodology and Pair Programming Excellent communication skills strong architectural skills hardworking and a very good team worker Work Experience Software Developer Prudential Insurance America Sunnyvale CA March 2019 to Present Project LINK LINK by Prudential is a personalized experience that learns about whats important to you and connects you with solutions and financial professionals to help you achieve your goals LINK is flexible giving you guidance throughout your financial journey LINK rebalances just as life does Role Responsibilities Developed microservices using Java and REST webservices Involved in enhancements of project Followed agile software development practice paired programming test driven development Experience working with tools like JIRA for bug tracking Using JUNIT to test persistence and service tiers using Mockito and Power Mock Wrote unit tests to build a solid coverage for the micro services that leaded to minimal QA effort Improved API performance using Dynatrace Involved in design and development of Oracle SQL schema Implemented JWT authentication to ensure authorization between services Jenkins for Continuous Integration and Deployment Implemented ActiveMQ to send or receive messages asynchronously and synchronously from JMS Environment Java 17 and 18 SpringBoot Oracle SQL REST Web Services Maven Git Dynatrace Splunk Postman Software Developer NIKE April 2016 to February 2019 Project Oracle Fusion Responsibilities Developed new interfaces and new services Configured application for functionality demonstration Worked with Product Development Team on enhancements and Testing Project Nike Trade Net This project is to build AWS platform to support Nikes manufacturers to calculate Custom Duty price to import or export shipments through out globally Responsibilities Develop microservices using Python and Java Use Docker to migrate services from onpremise to AWS to make it global Design and develop Restful service interface using Spring batch Use Amazon ECS Lambda Terraform to integrate Project Nike Elite This Project is to develop Nike Elite website exclusively for Athletes who is in contract with Nike Responsibilities Develop website using Angular4 and Typescript Develop unittest using Jasmine and Karma Design and develop Restful service interface using Spring boot to the underlying customer event API Experience in Retrofit and Spark Project Fiscal Document Numbers Chile This Project is to manage the Governance Documents and the Fiscal Document Numbers generated from Chile Government Documents are provided to the Nike Business Unit by Chilean Government The document will be used and appropriate document numbers will be generated The document numbers can then be reserved used or returned by systems that require Responsibilities Develop web services based on micro service architecture with SpringBoot framework based services interacting through a REST Develop queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Design and develop Restful service interface using Springboot to the underlying customer event API Develop unit test cases using Mockito framework Junit and Spock for testing accuracy of code and logging using SLF4j logging Experience in incident management tools like ServiceNow Experience in configuring IT alert monitoring tools like PagerDuty with native product integrations including ServiceNow Splunk and Slack Experience using GitHub repository Rich experience in writing Spring Configuration XML file declarations and other dependent objects declaration Experience in CICD tools like Jenkins Actively participated in centers of excellence COE model in support of continuous improvement programs Project Retail Integration Pipeline This Project is a cloud based integration platform to support secure reliable and scalable data feeds to and from retail systems The pipeline supports inline factory and partner stores and currently services financial systems Right Stock Offensive inventory management and business intelligence Data feeds are sales inventory traffic labor pricing and promotions Responsibilities Develop web services based on micro service architecture with SpringBoot framework based services interacting through a REST Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Develop multiple AWS Lambda projects which triggers by DynamoDB Streams by other lambda functions Kinesis streams and S3objectcreatedevents Develop queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Design and Develop Restful service interface using Springboot to the underlying customer event API Develop unit test cases using Mockito framework Junit and Spock for testing accuracy of code and logging is done using SLF4j logging Involved in writing Spring Configuration XML file that contains declarations and other dependent objects declaration Project Traffic Data Change Monitor This project is to transfer the traffic data of all the stores present in USA Canada Europe China to WFM and NGAP using Traffic Data Ecosystem Traffic Service RetailNext RetailNextClient RetailTrafficReports Traffic Service serves as centre of ecosystem and stores the most uptodate information we have on traffic for all stores RetailNext is the third party where we get the traffic data that is stored in Traffic Service Sensors in the retail stores send their data directly to RetailNext Where they compile it and make it available via web API RetailNextClient is a service that runs periodically to pull the most recent data from RetailNext and store it in Traffic Service RetailTrafficReports is a service that runs periodically to generate reports based on the data in Traffic Service and send those reports to downstream clients Responsibilities Experience on RetailNextClient to gather historical data and RetailTrafficReports to move files from CRS to S3 bucket Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Implement application level persistence using DynamoDB and Spring Boot Loaded shoppertrackdata into traffic service using DST logic Created CDI pipeline for continuous integration Project Devices and Product lists Services Devices and Productlists services to register devices and connect touch screenother systems to assist clients in cloud are intended to be long term global solution Consumer selects one or more products in the touch kiosk in Nike retail stores Touch APIs then POST the products chosen along with quantity the touch listName which is unique and storeId to the new cloud hosted productlist service Productlist service then saves the received data to underlying database Touch APIs after posting the data to the productlist service posts info to retailwaitline service which inturn provides Assist APIs with device name Comparing the name from device service and retailwaitline service Assist APIs gets the data from productlist service Responsibilities Implemented application level persistence using DynamoDB and Google Guice Consuming and exposing various person web services using REST API Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Used JWT authentication mechanism to ensure authorization between services Used AWS lambda to populate the tables using name and type Used Fortify Scan for testing the code Used Gradle to build applications and Jenkins for continuous integration Created WAR files from Gradle and deployed them on Asgard Used LOG4J JUnit for debugging testing and maintaining the system state Used for testing the WebServices Used Git to maintain source and version management and used IntelliJ as IDE Using JIRA to manage the issuesproject workflow Develop Integration tests using Cucumber framework Wrote custom JavaScript and CSS to maintain user friendly look and feel Environment Java 17 AWSlamda Google Guice DynamoDb REST Web Services Gradle Git Fortify JavaJ2EE Developer JP Morgan Chase NY Chase NY September 2014 to September 2015 Description JP Morgans Treasury Services delivers cash management trade liquidity commercial card and escrow services that resolve the working capital and efficiency challenges treasury professionals face today PWS Payables Web Services is a corporate client web based application which provides customers different functionalities like Check Services Reconciliation Services and fraud protection Designed and developed the application for Check Print Lite CPL module and Check Inquiry module This module offers corporate clients a wide range of options for check process methods including choosing checks designs layouts dimensions mailing methods and handling instructions etc The selected form data will send to different subsystems to deliver the service Responsibilities Used Spring MVC on the front end using JSP spring tags spring validation framework Developed Use Case Diagrams Sequence Diagrams and Class Diagrams Used Hibernate persistence framework on the backend over Oracle 10g database using HQL Queries Designed the Frontend screens using JSP Tag Libraries Servlets XHTML XSLT and JavaScript Responsible for developing Use case Class diagrams and Sequence diagrams for the modules using UML and Rational Unified Processing RUP Involved in Develop the User Interface module using J2EE JSP Tags Servlets and Spring Framework Designed and edited front end web pages using HTML PHP Perl Provided development Support for System Testing User Acceptance Testing and Production support Developed web services code for the system will either use services in connected applications to perform business operations using SOA Architecture Used Log4J logging framework for logging messages Market QA has become the platform of choice for Quantitative back testing of fundamental data building and benchmarking portfolios Performed data testing by writing SQL queries Customer Evaluation form Reports Generation and Search using multiple criteria Used SOAP UI Testing for visual path using WSDL link Used SOAP for exchanging XML based messages Developed WSDL for the Web services basing on business rules and requirements Developed script for creating tables for Oracle according to the business requirements Integrated with JBoss Application Server 50 Involved in communicating with offshore team to resolve the applications production issues and to deliver the best quality application enhancements to the client Environment J2se J2EE Spring and Hibernate Struts 13 JSP JSF Ant JBoss Application Server 50 Web Logic XML Xslt CSSVSS Oracle 10g SOA Web services SOAP Test Director QTP Windows 7 UNIX JavaJ2EE Developer AIG Life Insurance Hyderabad Telangana May 2012 to June 2014 Project This system provides Patient Administration Billing and Pharmacy Management functions for the hospital The Major function of this system is to provide and share the patient health records and access with other insurance companies through SOAP services Responsibilities Involved in requirements gathering and technical design specification Involved in the development of LoginRegistration Reports and Admin and Statements modules Implemented webbased application using spring frame work Involved in the Impact Analysis of new enhancements Extensively involved in preproduction defect fixing Extensively worked in Hibernate for persisting the data Extensively involved in writing the SQL queries as per the business requirements Used Factory Singleton Session Facade Business Delegate and DAO Patterns Developed services which involved both producing and consuming web services WSDL SOAP and JAXWS Also published the WSDL to UDDI registry using the SOA architecture Involved in resolving the session issues in the Application Worked with JSON to parse data from Data Base Used Logging mechanism for capturing and logging error info and debug messages and related information using log4j Performed Extensive Exception handling mechanism for handling errors and exception conditions in the application Developed JMS components to send messages from one application to other application internally Used Value Objects as a design pattern so that the client makes a single remote method invocation to the enterprise bean to request the Value Objects Worked on Hudson build tool and deployed the build in Hudson Involved in Unit testing Integration testing User Acceptance Testing Used Dimensions as the version control system and defect tracking respectively Involved in the configuring of WebSphere Application server and application deployment Environment Java JSP Java Script EXT JS JSON HTML CSS JSF SWT EJB 21 Spring Hibernate Rest Web Services Spring security Tomcat Education Bachelors Skills Bea Eclipse J2ee Java Hibernate JSP Spring Angularjs Javascript Java J2Ee Additional Information TECHNICAL SKILLS Operating Systems Linux and Windows 7vistaXP2000 Languages Java J2EE HTML UML XMLSQL JavaScript Web Technologies Servlets JSP JSON JDBC JMS Web Services XML HTML Jquery CRM NetSuite RightNow Methodlogies SDLC OOAD Agile RUP Servers BEA Web Logic 8110 IBM Web Sphere 405x6x Jboss 456 Apache Tomcat 567 and Resin Frameworks Struts Spring Hibernate Databases Oracle 8i9i10g IBM DB2 70 MySQL and SQL Server Development Tools IntelliJEclipse EditPlus Jbuilder Weblogic Workshop Web Services REST SOAP WSDL UDDI JAXM Apache Axis2 Source Control CVS SVN GIT Testing Frameworks Junit Spock Reporting Tools JReports 8 SQL Reports Jasper Reports and OpenFlash",
    "entities": [
        "SQL Server Development Tools",
        "Customer Evaluation",
        "Used Fortify Scan",
        "IOC AOP",
        "Testing Project Nike Trade Net",
        "API Experience",
        "WebSphere Application",
        "OpenFlash",
        "Jasmine and Karma Design",
        "J2EE JSP Tags Servlets",
        "UNIX",
        "Rational Unified Process RUP",
        "JMS",
        "Morgans Treasury Services",
        "Typescript Develop",
        "Comparing",
        "Project Retail Integration Pipeline This Project",
        "Used SOAP UI Testing",
        "IBM",
        "Spring Configuration XML",
        "Test Driven Development Incremental and Iteration",
        "Hudson Involved",
        "Responsibilities Implemented",
        "SOAP",
        "XML",
        "Project Oracle Fusion Responsibilities Developed",
        "Telangana",
        "Data Base Used",
        "Software Analysis Design Development Implementation and Testing of Object Oriented Applications",
        "POST",
        "Log4J Proficient",
        "JAXWS",
        "JUnit",
        "Prudential",
        "Project Traffic Data Change Monitor",
        "Project Nike Elite This Project",
        "Nike Responsibilities Develop",
        "Developed",
        "Chile Government Documents",
        "Google Guice Consuming",
        "Dynatrace Involved",
        "Check Services Reconciliation Services",
        "Mockito",
        "RAD",
        "ServiceNow Experience",
        "UML",
        "Responsibilities Involved",
        "Windows",
        "SpringBoot",
        "Sequence",
        "Responsibilities Experience",
        "NIKE",
        "JBoss Application",
        "SOA",
        "Nike Elite",
        "Pharmacy Management",
        "DST",
        "REST API Involved",
        "JSP",
        "Used Factory Singleton Session Facade Business Delegate",
        "Used Value Objects",
        "Retrofit and",
        "Traffic Service",
        "JAXP SAX DOM",
        "Traffic Service RetailTrafficReports",
        "Check Print Lite",
        "JavaScript Web Technologies Servlets",
        "Oracle 10",
        "IBM WebSphere Studio Application Developer",
        "MVC",
        "User Acceptance Testing Used Dimensions",
        "EJB",
        "NGAP",
        "API",
        "Traffic Data Ecosystem Traffic Service RetailNext",
        "Performed Extensive Exception",
        "QA",
        "Spark Project Fiscal Document Numbers Chile This Project",
        "Developed MVC",
        "Nike",
        "API Develop",
        "ServiceNow Splunk and Slack Experience",
        "J2Ee Additional Information TECHNICAL SKILLS Operating Systems",
        "COE",
        "AWS",
        "JP Morgan Chase",
        "Oracle",
        "Develop Integration",
        "Prudential Insurance America",
        "Sunnyvale",
        "java",
        "Software Development Life",
        "Pair Programming Excellent",
        "SQL",
        "Oracle SQL",
        "GitHub",
        "the Value Objects Worked",
        "Spring Framework Designed",
        "Chase",
        "Nikes",
        "CICD",
        "the Nike Business Unit",
        "Jenkins for Continuous Integration and Deployment Implemented",
        "HTML PHP Perl Provided development Support for System Testing User Acceptance Testing and Production",
        "AIG Life Insurance Hyderabad",
        "Springboot",
        "Jenkins Actively",
        "Front Controller Data Access Object Session Faade Business Delegate Service",
        "UDDI",
        "SQS",
        "Created CDI",
        "Traffic Service Sensors",
        "Chilean Government",
        "Performed",
        "JWT",
        "Hibernate",
        "IDE Using JIRA",
        "Project Devices",
        "ANT",
        "Check Inquiry",
        "RetailNext Where they",
        "USA Canada Europe",
        "RetailNext",
        "CSS",
        "JSP Tag Libraries",
        "Athletes",
        "PWS Payables Web Services",
        "Responsibilities Develop",
        "IBM WebSphere Application Server",
        "TDD",
        "Patient Administration Billing",
        "Rational Unified Processing RUP Involved",
        "Power Mock Wrote"
    ],
    "experience": "Experience in implementing TDD functionality Experience with JMS both Synchronous and Asynchronous messaging Experience using Java Platform Enterprise Edition Java EE 56 Expertise in implementing web applications using IBM Websphere 405060 application Server Good Working knowledge of ANT MAVEN and Log4J Proficient with various J2EE IDEs like RAD 70 WSAD 50 Eclipse 3031 and JBuilde 7080 Strong experience in different phases of Software Development Life cycle SDLC and Rational Unified Process RUP including Design Implementation and Testing during the development of software applications Expert in Various Agile methodologies like Test Driven Development Incremental and Iteration methodology and Pair Programming Excellent communication skills strong architectural skills hardworking and a very good team worker Work Experience Software Developer Prudential Insurance America Sunnyvale CA March 2019 to Present Project LINK LINK by Prudential is a personalized experience that learns about what s important to you and connects you with solutions and financial professionals to help you achieve your goals LINK is flexible giving you guidance throughout your financial journey LINK rebalances just as life does Role Responsibilities Developed microservices using Java and REST webservices Involved in enhancements of project Followed agile software development practice paired programming test driven development Experience working with tools like JIRA for bug tracking Using JUNIT to test persistence and service tiers using Mockito and Power Mock Wrote unit tests to build a solid coverage for the micro services that leaded to minimal QA effort Improved API performance using Dynatrace Involved in design and development of Oracle SQL schema Implemented JWT authentication to ensure authorization between services Jenkins for Continuous Integration and Deployment Implemented ActiveMQ to send or receive messages asynchronously and synchronously from JMS Environment Java 17 and 18 SpringBoot Oracle SQL REST Web Services Maven Git Dynatrace Splunk Postman Software Developer NIKE April 2016 to February 2019 Project Oracle Fusion Responsibilities Developed new interfaces and new services Configured application for functionality demonstration Worked with Product Development Team on enhancements and Testing Project Nike Trade Net This project is to build AWS platform to support Nikes manufacturers to calculate Custom Duty price to import or export shipments through out globally Responsibilities Develop microservices using Python and Java Use Docker to migrate services from onpremise to AWS to make it global Design and develop Restful service interface using Spring batch Use Amazon ECS Lambda Terraform to integrate Project Nike Elite This Project is to develop Nike Elite website exclusively for Athletes who is in contract with Nike Responsibilities Develop website using Angular4 and Typescript Develop unittest using Jasmine and Karma Design and develop Restful service interface using Spring boot to the underlying customer event API Experience in Retrofit and Spark Project Fiscal Document Numbers Chile This Project is to manage the Governance Documents and the Fiscal Document Numbers generated from Chile Government Documents are provided to the Nike Business Unit by Chilean Government The document will be used and appropriate document numbers will be generated The document numbers can then be reserved used or returned by systems that require Responsibilities Develop web services based on micro service architecture with SpringBoot framework based services interacting through a REST Develop queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Design and develop Restful service interface using Springboot to the underlying customer event API Develop unit test cases using Mockito framework Junit and Spock for testing accuracy of code and logging using SLF4j logging Experience in incident management tools like ServiceNow Experience in configuring IT alert monitoring tools like PagerDuty with native product integrations including ServiceNow Splunk and Slack Experience using GitHub repository Rich experience in writing Spring Configuration XML file declarations and other dependent objects declaration Experience in CICD tools like Jenkins Actively participated in centers of excellence COE model in support of continuous improvement programs Project Retail Integration Pipeline This Project is a cloud based integration platform to support secure reliable and scalable data feeds to and from retail systems The pipeline supports inline factory and partner stores and currently services financial systems Right Stock Offensive inventory management and business intelligence Data feeds are sales inventory traffic labor pricing and promotions Responsibilities Develop web services based on micro service architecture with SpringBoot framework based services interacting through a REST Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Develop multiple AWS Lambda projects which triggers by DynamoDB Streams by other lambda functions Kinesis streams and S3objectcreatedevents Develop queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Design and Develop Restful service interface using Springboot to the underlying customer event API Develop unit test cases using Mockito framework Junit and Spock for testing accuracy of code and logging is done using SLF4j logging Involved in writing Spring Configuration XML file that contains declarations and other dependent objects declaration Project Traffic Data Change Monitor This project is to transfer the traffic data of all the stores present in USA Canada Europe China to WFM and NGAP using Traffic Data Ecosystem Traffic Service RetailNext RetailNextClient RetailTrafficReports Traffic Service serves as centre of ecosystem and stores the most uptodate information we have on traffic for all stores RetailNext is the third party where we get the traffic data that is stored in Traffic Service Sensors in the retail stores send their data directly to RetailNext Where they compile it and make it available via web API RetailNextClient is a service that runs periodically to pull the most recent data from RetailNext and store it in Traffic Service RetailTrafficReports is a service that runs periodically to generate reports based on the data in Traffic Service and send those reports to downstream clients Responsibilities Experience on RetailNextClient to gather historical data and RetailTrafficReports to move files from CRS to S3 bucket Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Implement application level persistence using DynamoDB and Spring Boot Loaded shoppertrackdata into traffic service using DST logic Created CDI pipeline for continuous integration Project Devices and Product lists Services Devices and Productlists services to register devices and connect touch screenother systems to assist clients in cloud are intended to be long term global solution Consumer selects one or more products in the touch kiosk in Nike retail stores Touch APIs then POST the products chosen along with quantity the touch listName which is unique and storeId to the new cloud hosted productlist service Productlist service then saves the received data to underlying database Touch APIs after posting the data to the productlist service posts info to retailwaitline service which inturn provides Assist APIs with device name Comparing the name from device service and retailwaitline service Assist APIs gets the data from productlist service Responsibilities Implemented application level persistence using DynamoDB and Google Guice Consuming and exposing various person web services using REST API Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Used JWT authentication mechanism to ensure authorization between services Used AWS lambda to populate the tables using name and type Used Fortify Scan for testing the code Used Gradle to build applications and Jenkins for continuous integration Created WAR files from Gradle and deployed them on Asgard Used LOG4J JUnit for debugging testing and maintaining the system state Used for testing the WebServices Used Git to maintain source and version management and used IntelliJ as IDE Using JIRA to manage the issuesproject workflow Develop Integration tests using Cucumber framework Wrote custom JavaScript and CSS to maintain user friendly look and feel Environment Java 17 AWSlamda Google Guice DynamoDb REST Web Services Gradle Git Fortify JavaJ2EE Developer JP Morgan Chase NY Chase NY September 2014 to September 2015 Description JP Morgans Treasury Services delivers cash management trade liquidity commercial card and escrow services that resolve the working capital and efficiency challenges treasury professionals face today PWS Payables Web Services is a corporate client web based application which provides customers different functionalities like Check Services Reconciliation Services and fraud protection Designed and developed the application for Check Print Lite CPL module and Check Inquiry module This module offers corporate clients a wide range of options for check process methods including choosing checks designs layouts dimensions mailing methods and handling instructions etc The selected form data will send to different subsystems to deliver the service Responsibilities Used Spring MVC on the front end using JSP spring tags spring validation framework Developed Use Case Diagrams Sequence Diagrams and Class Diagrams Used Hibernate persistence framework on the backend over Oracle 10 g database using HQL Queries Designed the Frontend screens using JSP Tag Libraries Servlets XHTML XSLT and JavaScript Responsible for developing Use case Class diagrams and Sequence diagrams for the modules using UML and Rational Unified Processing RUP Involved in Develop the User Interface module using J2EE JSP Tags Servlets and Spring Framework Designed and edited front end web pages using HTML PHP Perl Provided development Support for System Testing User Acceptance Testing and Production support Developed web services code for the system will either use services in connected applications to perform business operations using SOA Architecture Used Log4J logging framework for logging messages Market QA has become the platform of choice for Quantitative back testing of fundamental data building and benchmarking portfolios Performed data testing by writing SQL queries Customer Evaluation form Reports Generation and Search using multiple criteria Used SOAP UI Testing for visual path using WSDL link Used SOAP for exchanging XML based messages Developed WSDL for the Web services basing on business rules and requirements Developed script for creating tables for Oracle according to the business requirements Integrated with JBoss Application Server 50 Involved in communicating with offshore team to resolve the applications production issues and to deliver the best quality application enhancements to the client Environment J2se J2EE Spring and Hibernate Struts 13 JSP JSF Ant JBoss Application Server 50 Web Logic XML Xslt CSSVSS Oracle 10 g SOA Web services SOAP Test Director QTP Windows 7 UNIX JavaJ2EE Developer AIG Life Insurance Hyderabad Telangana May 2012 to June 2014 Project This system provides Patient Administration Billing and Pharmacy Management functions for the hospital The Major function of this system is to provide and share the patient health records and access with other insurance companies through SOAP services Responsibilities Involved in requirements gathering and technical design specification Involved in the development of LoginRegistration Reports and Admin and Statements modules Implemented webbased application using spring frame work Involved in the Impact Analysis of new enhancements Extensively involved in preproduction defect fixing Extensively worked in Hibernate for persisting the data Extensively involved in writing the SQL queries as per the business requirements Used Factory Singleton Session Facade Business Delegate and DAO Patterns Developed services which involved both producing and consuming web services WSDL SOAP and JAXWS Also published the WSDL to UDDI registry using the SOA architecture Involved in resolving the session issues in the Application Worked with JSON to parse data from Data Base Used Logging mechanism for capturing and logging error info and debug messages and related information using log4j Performed Extensive Exception handling mechanism for handling errors and exception conditions in the application Developed JMS components to send messages from one application to other application internally Used Value Objects as a design pattern so that the client makes a single remote method invocation to the enterprise bean to request the Value Objects Worked on Hudson build tool and deployed the build in Hudson Involved in Unit testing Integration testing User Acceptance Testing Used Dimensions as the version control system and defect tracking respectively Involved in the configuring of WebSphere Application server and application deployment Environment Java JSP Java Script EXT JS JSON HTML CSS JSF SWT EJB 21 Spring Hibernate Rest Web Services Spring security Tomcat Education Bachelors Skills Bea Eclipse J2ee Java Hibernate JSP Spring Angularjs Javascript Java J2Ee Additional Information TECHNICAL SKILLS Operating Systems Linux and Windows 7vistaXP2000 Languages Java J2EE HTML UML XMLSQL JavaScript Web Technologies Servlets JSP JSON JDBC JMS Web Services XML HTML Jquery CRM NetSuite RightNow Methodlogies SDLC OOAD Agile RUP Servers BEA Web Logic 8110 IBM Web Sphere 405x6x Jboss 456 Apache Tomcat 567 and Resin Frameworks Struts Spring Hibernate Databases Oracle 8i9i10 g IBM DB2 70 MySQL and SQL Server Development Tools IntelliJEclipse EditPlus Jbuilder Weblogic Workshop Web Services REST SOAP WSDL UDDI JAXM Apache Axis2 Source Control CVS SVN GIT Testing Frameworks Junit Spock Reporting Tools JReports 8 SQL Reports Jasper Reports and OpenFlash",
    "extracted_keywords": [
        "Software",
        "Developer",
        "lSoftwarespan",
        "span",
        "lDeveloperspan",
        "Software",
        "Developer",
        "Prudential",
        "Insurance",
        "America",
        "Sunnyvale",
        "CA",
        "years",
        "experience",
        "Software",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "Object",
        "Oriented",
        "Applications",
        "Web",
        "Enterprise",
        "Applications",
        "JavaJ2EE",
        "Windows",
        "UNIX",
        "platforms",
        "years",
        "experience",
        "web",
        "projects",
        "IBM",
        "WebSphere",
        "Application",
        "Server",
        "5x6x",
        "IDEs",
        "IBM",
        "WebSphere",
        "Studio",
        "Application",
        "Developer",
        "WSAD",
        "Eclipse",
        "RAD",
        "years",
        "experience",
        "AWS",
        "Expertise",
        "enterprise",
        "applications",
        "J2EE",
        "technologies",
        "EJB",
        "Struts",
        "JDBC",
        "SAXDOM",
        "Web",
        "services",
        "Expertise",
        "Object",
        "Oriented",
        "Analysis",
        "Design",
        "OOAD",
        "Unified",
        "Modeling",
        "Language",
        "UML",
        "Rational",
        "Rose",
        "Expertise",
        "design",
        "patterns",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "MVC",
        "Data",
        "Transfer",
        "Object",
        "Singleton",
        "experience",
        "frameworks",
        "Struts",
        "framework",
        "spring",
        "framework",
        "Developed",
        "MVC",
        "framework",
        "Struts",
        "Spring",
        "Expertise",
        "components",
        "spring",
        "IOC",
        "AOP",
        "MVC",
        "Hibernate",
        "ORM",
        "Tool",
        "Database",
        "Expertise",
        "Web",
        "Services",
        "architecture",
        "SOAP",
        "WSDL",
        "JAXRPC",
        "Expertise",
        "XML",
        "technologies",
        "XSL",
        "XSLT",
        "parsers",
        "JAXP",
        "SAX",
        "DOM",
        "JAXB",
        "Strong",
        "experience",
        "JUnit",
        "unit",
        "test",
        "application",
        "functionality",
        "Experience",
        "TDD",
        "functionality",
        "Experience",
        "JMS",
        "Experience",
        "Java",
        "Platform",
        "Enterprise",
        "Edition",
        "Java",
        "EE",
        "Expertise",
        "web",
        "applications",
        "IBM",
        "Websphere",
        "application",
        "Server",
        "Good",
        "Working",
        "knowledge",
        "ANT",
        "MAVEN",
        "Log4J",
        "Proficient",
        "J2EE",
        "IDEs",
        "RAD",
        "WSAD",
        "Eclipse",
        "JBuilde",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "cycle",
        "SDLC",
        "Rational",
        "Unified",
        "Process",
        "RUP",
        "Design",
        "Implementation",
        "Testing",
        "development",
        "software",
        "applications",
        "Expert",
        "methodologies",
        "Test",
        "Driven",
        "Development",
        "Incremental",
        "Iteration",
        "methodology",
        "Pair",
        "Programming",
        "Excellent",
        "communication",
        "skills",
        "team",
        "worker",
        "Work",
        "Experience",
        "Software",
        "Developer",
        "Prudential",
        "Insurance",
        "America",
        "Sunnyvale",
        "CA",
        "March",
        "Present",
        "Project",
        "LINK",
        "LINK",
        "Prudential",
        "experience",
        "solutions",
        "professionals",
        "goals",
        "LINK",
        "guidance",
        "journey",
        "LINK",
        "rebalances",
        "life",
        "Role",
        "Responsibilities",
        "microservices",
        "Java",
        "REST",
        "webservices",
        "enhancements",
        "project",
        "software",
        "development",
        "practice",
        "programming",
        "test",
        "development",
        "Experience",
        "tools",
        "JIRA",
        "bug",
        "JUNIT",
        "persistence",
        "service",
        "tiers",
        "Mockito",
        "Power",
        "Mock",
        "Wrote",
        "unit",
        "coverage",
        "micro",
        "services",
        "QA",
        "effort",
        "API",
        "performance",
        "Dynatrace",
        "design",
        "development",
        "Oracle",
        "SQL",
        "schema",
        "JWT",
        "authentication",
        "authorization",
        "services",
        "Jenkins",
        "Continuous",
        "Integration",
        "Deployment",
        "ActiveMQ",
        "messages",
        "JMS",
        "Environment",
        "Java",
        "SpringBoot",
        "Oracle",
        "SQL",
        "REST",
        "Web",
        "Services",
        "Maven",
        "Git",
        "Dynatrace",
        "Splunk",
        "Postman",
        "Software",
        "Developer",
        "NIKE",
        "April",
        "February",
        "Project",
        "Oracle",
        "Fusion",
        "Responsibilities",
        "interfaces",
        "services",
        "application",
        "functionality",
        "demonstration",
        "Product",
        "Development",
        "Team",
        "enhancements",
        "Testing",
        "Project",
        "Nike",
        "Trade",
        "Net",
        "project",
        "AWS",
        "platform",
        "Nikes",
        "manufacturers",
        "Custom",
        "Duty",
        "price",
        "export",
        "shipments",
        "Responsibilities",
        "Develop",
        "microservices",
        "Python",
        "Java",
        "Use",
        "Docker",
        "services",
        "onpremise",
        "AWS",
        "Design",
        "service",
        "interface",
        "Spring",
        "batch",
        "Use",
        "Amazon",
        "ECS",
        "Lambda",
        "Terraform",
        "Project",
        "Nike",
        "Elite",
        "Project",
        "Nike",
        "website",
        "Athletes",
        "contract",
        "Nike",
        "Responsibilities",
        "website",
        "Angular4",
        "Typescript",
        "Develop",
        "Jasmine",
        "Karma",
        "Design",
        "service",
        "interface",
        "Spring",
        "boot",
        "customer",
        "event",
        "API",
        "Experience",
        "Retrofit",
        "Spark",
        "Project",
        "Fiscal",
        "Document",
        "Numbers",
        "Chile",
        "Project",
        "Governance",
        "Documents",
        "Fiscal",
        "Document",
        "Numbers",
        "Chile",
        "Government",
        "Documents",
        "Nike",
        "Business",
        "Unit",
        "Chilean",
        "Government",
        "document",
        "document",
        "numbers",
        "document",
        "numbers",
        "systems",
        "Responsibilities",
        "Develop",
        "web",
        "services",
        "micro",
        "service",
        "architecture",
        "SpringBoot",
        "framework",
        "services",
        "REST",
        "Develop",
        "queues",
        "AWS",
        "SQS",
        "JMS",
        "services",
        "events",
        "logic",
        "events",
        "test",
        "scripts",
        "selenium",
        "cucumber",
        "automation",
        "jobs",
        "Jenkins",
        "cucumber",
        "JSON",
        "service",
        "interface",
        "Springboot",
        "customer",
        "event",
        "API",
        "Develop",
        "unit",
        "test",
        "cases",
        "Mockito",
        "framework",
        "Junit",
        "Spock",
        "testing",
        "accuracy",
        "code",
        "SLF4j",
        "Experience",
        "incident",
        "management",
        "tools",
        "ServiceNow",
        "Experience",
        "IT",
        "monitoring",
        "tools",
        "PagerDuty",
        "product",
        "integrations",
        "ServiceNow",
        "Splunk",
        "Slack",
        "Experience",
        "GitHub",
        "repository",
        "Rich",
        "experience",
        "Spring",
        "Configuration",
        "XML",
        "file",
        "declarations",
        "objects",
        "declaration",
        "Experience",
        "CICD",
        "tools",
        "Jenkins",
        "centers",
        "excellence",
        "COE",
        "model",
        "support",
        "improvement",
        "programs",
        "Project",
        "Retail",
        "Integration",
        "Pipeline",
        "Project",
        "cloud",
        "integration",
        "platform",
        "data",
        "systems",
        "pipeline",
        "inline",
        "factory",
        "partner",
        "stores",
        "systems",
        "Right",
        "Stock",
        "Offensive",
        "inventory",
        "management",
        "business",
        "intelligence",
        "Data",
        "feeds",
        "sales",
        "inventory",
        "traffic",
        "labor",
        "pricing",
        "promotions",
        "Responsibilities",
        "Develop",
        "web",
        "services",
        "micro",
        "service",
        "architecture",
        "SpringBoot",
        "framework",
        "services",
        "REST",
        "test",
        "scripts",
        "selenium",
        "cucumber",
        "automation",
        "jobs",
        "Jenkins",
        "cucumber",
        "JSON",
        "AWS",
        "Lambda",
        "projects",
        "DynamoDB",
        "Streams",
        "lambda",
        "functions",
        "Kinesis",
        "streams",
        "Develop",
        "queues",
        "AWS",
        "SQS",
        "JMS",
        "services",
        "events",
        "logic",
        "events",
        "Design",
        "Develop",
        "service",
        "interface",
        "Springboot",
        "customer",
        "event",
        "API",
        "Develop",
        "unit",
        "test",
        "cases",
        "Mockito",
        "framework",
        "Junit",
        "Spock",
        "testing",
        "accuracy",
        "code",
        "logging",
        "SLF4j",
        "Spring",
        "Configuration",
        "XML",
        "file",
        "declarations",
        "objects",
        "declaration",
        "Project",
        "Traffic",
        "Data",
        "Change",
        "Monitor",
        "project",
        "traffic",
        "data",
        "stores",
        "USA",
        "Canada",
        "Europe",
        "China",
        "WFM",
        "NGAP",
        "Traffic",
        "Data",
        "Ecosystem",
        "Traffic",
        "Service",
        "RetailNext",
        "RetailNextClient",
        "Traffic",
        "Service",
        "centre",
        "ecosystem",
        "stores",
        "information",
        "traffic",
        "stores",
        "RetailNext",
        "party",
        "traffic",
        "data",
        "Traffic",
        "Service",
        "Sensors",
        "stores",
        "data",
        "RetailNext",
        "web",
        "API",
        "RetailNextClient",
        "service",
        "data",
        "RetailNext",
        "Traffic",
        "Service",
        "service",
        "reports",
        "data",
        "Traffic",
        "Service",
        "reports",
        "clients",
        "Responsibilities",
        "Experience",
        "RetailNextClient",
        "data",
        "RetailTrafficReports",
        "files",
        "CRS",
        "S3",
        "bucket",
        "test",
        "scripts",
        "selenium",
        "cucumber",
        "automation",
        "jobs",
        "Jenkins",
        "cucumber",
        "JSON",
        "application",
        "level",
        "persistence",
        "DynamoDB",
        "Spring",
        "Boot",
        "Loaded",
        "shoppertrackdata",
        "traffic",
        "service",
        "DST",
        "logic",
        "Created",
        "CDI",
        "pipeline",
        "integration",
        "Project",
        "Devices",
        "Product",
        "Services",
        "Devices",
        "Productlists",
        "services",
        "devices",
        "touch",
        "screenother",
        "systems",
        "clients",
        "cloud",
        "term",
        "solution",
        "Consumer",
        "products",
        "touch",
        "kiosk",
        "Nike",
        "stores",
        "APIs",
        "products",
        "quantity",
        "touch",
        "listName",
        "storeId",
        "cloud",
        "productlist",
        "service",
        "Productlist",
        "service",
        "data",
        "database",
        "Touch",
        "APIs",
        "data",
        "productlist",
        "service",
        "info",
        "service",
        "inturn",
        "APIs",
        "device",
        "name",
        "name",
        "device",
        "service",
        "retailwaitline",
        "service",
        "APIs",
        "data",
        "productlist",
        "service",
        "Responsibilities",
        "application",
        "level",
        "persistence",
        "DynamoDB",
        "Google",
        "Guice",
        "Consuming",
        "person",
        "web",
        "services",
        "REST",
        "API",
        "test",
        "scripts",
        "selenium",
        "cucumber",
        "automation",
        "jobs",
        "Jenkins",
        "cucumber",
        "JSON",
        "JWT",
        "authentication",
        "mechanism",
        "authorization",
        "services",
        "AWS",
        "lambda",
        "tables",
        "name",
        "type",
        "Fortify",
        "Scan",
        "code",
        "Gradle",
        "applications",
        "Jenkins",
        "integration",
        "WAR",
        "files",
        "Gradle",
        "Asgard",
        "LOG4J",
        "JUnit",
        "testing",
        "system",
        "state",
        "WebServices",
        "Git",
        "source",
        "version",
        "management",
        "IntelliJ",
        "IDE",
        "JIRA",
        "issuesproject",
        "workflow",
        "Develop",
        "Integration",
        "tests",
        "Cucumber",
        "framework",
        "Wrote",
        "custom",
        "JavaScript",
        "CSS",
        "user",
        "look",
        "Environment",
        "Java",
        "AWSlamda",
        "Google",
        "Guice",
        "REST",
        "Web",
        "Services",
        "Gradle",
        "Git",
        "Fortify",
        "JavaJ2EE",
        "Developer",
        "JP",
        "Morgan",
        "Chase",
        "NY",
        "Chase",
        "NY",
        "September",
        "September",
        "Description",
        "JP",
        "Morgans",
        "Treasury",
        "Services",
        "cash",
        "management",
        "trade",
        "liquidity",
        "card",
        "services",
        "capital",
        "efficiency",
        "treasury",
        "professionals",
        "today",
        "PWS",
        "Payables",
        "Web",
        "Services",
        "client",
        "web",
        "application",
        "customers",
        "functionalities",
        "Check",
        "Services",
        "Reconciliation",
        "Services",
        "fraud",
        "protection",
        "application",
        "Check",
        "Print",
        "Lite",
        "CPL",
        "module",
        "Check",
        "Inquiry",
        "module",
        "module",
        "clients",
        "range",
        "options",
        "check",
        "process",
        "methods",
        "checks",
        "layouts",
        "dimensions",
        "mailing",
        "methods",
        "instructions",
        "form",
        "data",
        "subsystems",
        "service",
        "Responsibilities",
        "Spring",
        "MVC",
        "end",
        "JSP",
        "spring",
        "tags",
        "validation",
        "framework",
        "Developed",
        "Use",
        "Case",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "Class",
        "Diagrams",
        "Hibernate",
        "persistence",
        "framework",
        "backend",
        "Oracle",
        "g",
        "database",
        "HQL",
        "Queries",
        "Frontend",
        "screens",
        "JSP",
        "Tag",
        "Libraries",
        "Servlets",
        "XHTML",
        "XSLT",
        "JavaScript",
        "Responsible",
        "Use",
        "case",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "modules",
        "UML",
        "Rational",
        "Unified",
        "Processing",
        "RUP",
        "Develop",
        "User",
        "Interface",
        "module",
        "J2EE",
        "JSP",
        "Tags",
        "Servlets",
        "Spring",
        "Framework",
        "end",
        "web",
        "pages",
        "HTML",
        "PHP",
        "Perl",
        "development",
        "Support",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "Production",
        "support",
        "web",
        "services",
        "code",
        "system",
        "services",
        "applications",
        "business",
        "operations",
        "SOA",
        "Architecture",
        "logging",
        "framework",
        "messages",
        "Market",
        "QA",
        "platform",
        "choice",
        "testing",
        "data",
        "building",
        "portfolios",
        "data",
        "testing",
        "SQL",
        "Customer",
        "Evaluation",
        "form",
        "Generation",
        "Search",
        "criteria",
        "SOAP",
        "UI",
        "Testing",
        "path",
        "WSDL",
        "link",
        "SOAP",
        "XML",
        "messages",
        "Developed",
        "WSDL",
        "Web",
        "services",
        "business",
        "rules",
        "requirements",
        "script",
        "tables",
        "Oracle",
        "business",
        "requirements",
        "JBoss",
        "Application",
        "Server",
        "team",
        "applications",
        "production",
        "issues",
        "quality",
        "application",
        "enhancements",
        "client",
        "Environment",
        "J2se",
        "J2EE",
        "Spring",
        "Hibernate",
        "Struts",
        "JSP",
        "JSF",
        "Ant",
        "JBoss",
        "Application",
        "Server",
        "Web",
        "Logic",
        "XML",
        "Xslt",
        "CSSVSS",
        "Oracle",
        "g",
        "SOA",
        "Web",
        "services",
        "SOAP",
        "Test",
        "Director",
        "QTP",
        "Windows",
        "UNIX",
        "JavaJ2EE",
        "Developer",
        "AIG",
        "Life",
        "Insurance",
        "Hyderabad",
        "Telangana",
        "May",
        "June",
        "Project",
        "system",
        "Patient",
        "Administration",
        "Billing",
        "Pharmacy",
        "Management",
        "functions",
        "hospital",
        "function",
        "system",
        "health",
        "records",
        "access",
        "insurance",
        "companies",
        "SOAP",
        "services",
        "Responsibilities",
        "requirements",
        "design",
        "specification",
        "development",
        "LoginRegistration",
        "Reports",
        "Admin",
        "Statements",
        "modules",
        "application",
        "spring",
        "frame",
        "work",
        "Impact",
        "Analysis",
        "enhancements",
        "preproduction",
        "defect",
        "Hibernate",
        "data",
        "SQL",
        "business",
        "requirements",
        "Factory",
        "Singleton",
        "Session",
        "Facade",
        "Business",
        "Delegate",
        "DAO",
        "Patterns",
        "services",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "JAXWS",
        "WSDL",
        "UDDI",
        "registry",
        "SOA",
        "architecture",
        "session",
        "issues",
        "Application",
        "JSON",
        "data",
        "Data",
        "Base",
        "Logging",
        "mechanism",
        "error",
        "info",
        "debug",
        "messages",
        "information",
        "log4j",
        "Performed",
        "Exception",
        "handling",
        "mechanism",
        "errors",
        "exception",
        "conditions",
        "application",
        "JMS",
        "components",
        "messages",
        "application",
        "application",
        "Value",
        "Objects",
        "design",
        "pattern",
        "client",
        "method",
        "invocation",
        "enterprise",
        "bean",
        "Value",
        "Objects",
        "Hudson",
        "tool",
        "build",
        "Hudson",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "Acceptance",
        "Testing",
        "Dimensions",
        "version",
        "control",
        "system",
        "tracking",
        "configuring",
        "WebSphere",
        "Application",
        "server",
        "application",
        "deployment",
        "Environment",
        "Java",
        "JSP",
        "Java",
        "Script",
        "EXT",
        "JS",
        "JSON",
        "HTML",
        "CSS",
        "JSF",
        "SWT",
        "EJB",
        "Spring",
        "Hibernate",
        "Rest",
        "Web",
        "Services",
        "Spring",
        "security",
        "Tomcat",
        "Education",
        "Bachelors",
        "Skills",
        "Bea",
        "Eclipse",
        "J2ee",
        "Java",
        "Hibernate",
        "JSP",
        "Spring",
        "Angularjs",
        "Javascript",
        "Java",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Operating",
        "Systems",
        "Linux",
        "Windows",
        "Languages",
        "Java",
        "J2EE",
        "HTML",
        "UML",
        "XMLSQL",
        "JavaScript",
        "Web",
        "Technologies",
        "Servlets",
        "JSP",
        "JSON",
        "JDBC",
        "JMS",
        "Web",
        "Services",
        "XML",
        "HTML",
        "Jquery",
        "CRM",
        "NetSuite",
        "RightNow",
        "Methodlogies",
        "SDLC",
        "Agile",
        "RUP",
        "Servers",
        "BEA",
        "Web",
        "Logic",
        "IBM",
        "Web",
        "Sphere",
        "405x6x",
        "Jboss",
        "Apache",
        "Tomcat",
        "Resin",
        "Frameworks",
        "Struts",
        "Spring",
        "Hibernate",
        "Oracle",
        "g",
        "IBM",
        "DB2",
        "MySQL",
        "SQL",
        "Server",
        "Development",
        "Tools",
        "EditPlus",
        "Jbuilder",
        "Weblogic",
        "Workshop",
        "Web",
        "Services",
        "REST",
        "SOAP",
        "WSDL",
        "UDDI",
        "JAXM",
        "Apache",
        "Axis2",
        "Source",
        "Control",
        "CVS",
        "SVN",
        "GIT",
        "Testing",
        "Frameworks",
        "Junit",
        "Spock",
        "Reporting",
        "Tools",
        "JReports",
        "SQL",
        "Reports",
        "Jasper",
        "Reports",
        "OpenFlash"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:50:47.297822",
    "resume_data": "Software Developer span lSoftwarespan span lDeveloperspan Software Developer Prudential Insurance America Sunnyvale CA Over 6 years of strong experience in Software Analysis Design Development Implementation and Testing of Object Oriented Applications and Web based Enterprise Applications using JavaJ2EE on Windows and UNIX platforms Over 6 years of experience in implementing web based projects using IBM WebSphere Application Server 5x6x and IDEs like IBM WebSphere Studio Application Developer WSAD 50 Eclipse 3031 and RAD 6070 Over 3 years of experience in AWS Expertise in designing and developing enterprise applications using J2EE technologies like EJB 2130 Struts 1220 JDBC JNDIJMSJAXB SAXDOM Web services Expertise in Object Oriented Analysis and Design OOAD using Unified Modeling Language UML by using Rational Rose Expertise in design patterns including Front Controller Data Access Object Session Faade Business Delegate Service Locator MVC Data Transfer Object and Singleton Extensive experience in frameworks like Struts framework spring framework Developed MVC framework using Struts and Spring Expertise in various components in spring such as IOC AOP and MVC Used Hibernate 30 as an ORM Tool to access Database Expertise in Web Services architecture in SOAP and WSDL using JAXRPC Expertise in XML and related technologies like XSL XSLT and parsers like JAXP SAX DOM and JAXB Strong experience with JUnit in performing unit test and determining the application functionality Experience in implementing TDD functionality Experience with JMS both Synchronous and Asynchronous messaging Experience using Java Platform Enterprise Edition Java EE 56 Expertise in implementing web applications using IBM Websphere 405060 application Server Good Working knowledge of ANT MAVEN and Log4J Proficient with various J2EE IDEs like RAD 70 WSAD 50 Eclipse 3031 and JBuilde 7080 Strong experience in different phases of Software Development Life cycle SDLC and Rational Unified Process RUP including Design Implementation and Testing during the development of software applications Expert in Various Agile methodologies like Test Driven Development Incremental and Iteration methodology and Pair Programming Excellent communication skills strong architectural skills hardworking and a very good team worker Work Experience Software Developer Prudential Insurance America Sunnyvale CA March 2019 to Present Project LINK LINK by Prudential is a personalized experience that learns about whats important to you and connects you with solutions and financial professionals to help you achieve your goals LINK is flexible giving you guidance throughout your financial journey LINK rebalances just as life does Role Responsibilities Developed microservices using Java and REST webservices Involved in enhancements of project Followed agile software development practice paired programming test driven development Experience working with tools like JIRA for bug tracking Using JUNIT to test persistence and service tiers using Mockito and Power Mock Wrote unit tests to build a solid coverage for the micro services that leaded to minimal QA effort Improved API performance using Dynatrace Involved in design and development of Oracle SQL schema Implemented JWT authentication to ensure authorization between services Jenkins for Continuous Integration and Deployment Implemented ActiveMQ to send or receive messages asynchronously and synchronously from JMS Environment Java 17 and 18 SpringBoot Oracle SQL REST Web Services Maven Git Dynatrace Splunk Postman Software Developer NIKE April 2016 to February 2019 Project Oracle Fusion Responsibilities Developed new interfaces and new services Configured application for functionality demonstration Worked with Product Development Team on enhancements and Testing Project Nike Trade Net This project is to build AWS platform to support Nikes manufacturers to calculate Custom Duty price to import or export shipments through out globally Responsibilities Develop microservices using Python and Java Use Docker to migrate services from onpremise to AWS to make it global Design and develop Restful service interface using Spring batch Use Amazon ECS Lambda Terraform to integrate Project Nike Elite This Project is to develop Nike Elite website exclusively for Athletes who is in contract with Nike Responsibilities Develop website using Angular4 and Typescript Develop unittest using Jasmine and Karma Design and develop Restful service interface using Spring boot to the underlying customer event API Experience in Retrofit and Spark Project Fiscal Document Numbers Chile This Project is to manage the Governance Documents and the Fiscal Document Numbers generated from Chile Government Documents are provided to the Nike Business Unit by Chilean Government The document will be used and appropriate document numbers will be generated The document numbers can then be reserved used or returned by systems that require Responsibilities Develop web services based on micro service architecture with SpringBoot framework based services interacting through a REST Develop queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Design and develop Restful service interface using Springboot to the underlying customer event API Develop unit test cases using Mockito framework Junit and Spock for testing accuracy of code and logging using SLF4j logging Experience in incident management tools like ServiceNow Experience in configuring IT alert monitoring tools like PagerDuty with native product integrations including ServiceNow Splunk and Slack Experience using GitHub repository Rich experience in writing Spring Configuration XML file declarations and other dependent objects declaration Experience in CICD tools like Jenkins Actively participated in centers of excellence COE model in support of continuous improvement programs Project Retail Integration Pipeline This Project is a cloud based integration platform to support secure reliable and scalable data feeds to and from retail systems The pipeline supports inline factory and partner stores and currently services financial systems Right Stock Offensive inventory management and business intelligence Data feeds are sales inventory traffic labor pricing and promotions Responsibilities Develop web services based on micro service architecture with SpringBoot framework based services interacting through a REST Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Develop multiple AWS Lambda projects which triggers by DynamoDB Streams by other lambda functions Kinesis streams and S3objectcreatedevents Develop queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Design and Develop Restful service interface using Springboot to the underlying customer event API Develop unit test cases using Mockito framework Junit and Spock for testing accuracy of code and logging is done using SLF4j logging Involved in writing Spring Configuration XML file that contains declarations and other dependent objects declaration Project Traffic Data Change Monitor This project is to transfer the traffic data of all the stores present in USA Canada Europe China to WFM and NGAP using Traffic Data Ecosystem Traffic Service RetailNext RetailNextClient RetailTrafficReports Traffic Service serves as centre of ecosystem and stores the most uptodate information we have on traffic for all stores RetailNext is the third party where we get the traffic data that is stored in Traffic Service Sensors in the retail stores send their data directly to RetailNext Where they compile it and make it available via web API RetailNextClient is a service that runs periodically to pull the most recent data from RetailNext and store it in Traffic Service RetailTrafficReports is a service that runs periodically to generate reports based on the data in Traffic Service and send those reports to downstream clients Responsibilities Experience on RetailNextClient to gather historical data and RetailTrafficReports to move files from CRS to S3 bucket Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Implement application level persistence using DynamoDB and Spring Boot Loaded shoppertrackdata into traffic service using DST logic Created CDI pipeline for continuous integration Project Devices and Product lists Services Devices and Productlists services to register devices and connect touch screenother systems to assist clients in cloud are intended to be long term global solution Consumer selects one or more products in the touch kiosk in Nike retail stores Touch APIs then POST the products chosen along with quantity the touch listName which is unique and storeId to the new cloud hosted productlist service Productlist service then saves the received data to underlying database Touch APIs after posting the data to the productlist service posts info to retailwaitline service which inturn provides Assist APIs with device name Comparing the name from device service and retailwaitline service Assist APIs gets the data from productlist service Responsibilities Implemented application level persistence using DynamoDB and Google Guice Consuming and exposing various person web services using REST API Involved in writing test scripts using java and executed it through selenium cucumber Triggered the automation jobs using Jenkins to get the cucumber JSON reports Used JWT authentication mechanism to ensure authorization between services Used AWS lambda to populate the tables using name and type Used Fortify Scan for testing the code Used Gradle to build applications and Jenkins for continuous integration Created WAR files from Gradle and deployed them on Asgard Used LOG4J JUnit for debugging testing and maintaining the system state Used for testing the WebServices Used Git to maintain source and version management and used IntelliJ as IDE Using JIRA to manage the issuesproject workflow Develop Integration tests using Cucumber framework Wrote custom JavaScript and CSS to maintain user friendly look and feel Environment Java 17 AWSlamda Google Guice DynamoDb REST Web Services Gradle Git Fortify JavaJ2EE Developer JP Morgan Chase NY Chase NY September 2014 to September 2015 Description JP Morgans Treasury Services delivers cash management trade liquidity commercial card and escrow services that resolve the working capital and efficiency challenges treasury professionals face today PWS Payables Web Services is a corporate client web based application which provides customers different functionalities like Check Services Reconciliation Services and fraud protection Designed and developed the application for Check Print Lite CPL module and Check Inquiry module This module offers corporate clients a wide range of options for check process methods including choosing checks designs layouts dimensions mailing methods and handling instructions etc The selected form data will send to different subsystems to deliver the service Responsibilities Used Spring MVC on the front end using JSP spring tags spring validation framework Developed Use Case Diagrams Sequence Diagrams and Class Diagrams Used Hibernate persistence framework on the backend over Oracle 10g database using HQL Queries Designed the Frontend screens using JSP Tag Libraries Servlets XHTML XSLT and JavaScript Responsible for developing Use case Class diagrams and Sequence diagrams for the modules using UML and Rational Unified Processing RUP Involved in Develop the User Interface module using J2EE JSP Tags Servlets and Spring Framework Designed and edited front end web pages using HTML PHP Perl Provided development Support for System Testing User Acceptance Testing and Production support Developed web services code for the system will either use services in connected applications to perform business operations using SOA Architecture Used Log4J logging framework for logging messages Market QA has become the platform of choice for Quantitative back testing of fundamental data building and benchmarking portfolios Performed data testing by writing SQL queries Customer Evaluation form Reports Generation and Search using multiple criteria Used SOAP UI Testing for visual path using WSDL link Used SOAP for exchanging XML based messages Developed WSDL for the Web services basing on business rules and requirements Developed script for creating tables for Oracle according to the business requirements Integrated with JBoss Application Server 50 Involved in communicating with offshore team to resolve the applications production issues and to deliver the best quality application enhancements to the client Environment J2se J2EE Spring and Hibernate Struts 13 JSP JSF Ant JBoss Application Server 50 Web Logic XML Xslt CSSVSS Oracle 10g SOA Web services SOAP Test Director QTP Windows 7 UNIX JavaJ2EE Developer AIG Life Insurance Hyderabad Telangana May 2012 to June 2014 Project This system provides Patient Administration Billing and Pharmacy Management functions for the hospital The Major function of this system is to provide and share the patient health records and access with other insurance companies through SOAP services Responsibilities Involved in requirements gathering and technical design specification Involved in the development of LoginRegistration Reports and Admin and Statements modules Implemented webbased application using spring frame work Involved in the Impact Analysis of new enhancements Extensively involved in preproduction defect fixing Extensively worked in Hibernate for persisting the data Extensively involved in writing the SQL queries as per the business requirements Used Factory Singleton Session Facade Business Delegate and DAO Patterns Developed services which involved both producing and consuming web services WSDL SOAP and JAXWS Also published the WSDL to UDDI registry using the SOA architecture Involved in resolving the session issues in the Application Worked with JSON to parse data from Data Base Used Logging mechanism for capturing and logging error info and debug messages and related information using log4j Performed Extensive Exception handling mechanism for handling errors and exception conditions in the application Developed JMS components to send messages from one application to other application internally Used Value Objects as a design pattern so that the client makes a single remote method invocation to the enterprise bean to request the Value Objects Worked on Hudson build tool and deployed the build in Hudson Involved in Unit testing Integration testing User Acceptance Testing Used Dimensions as the version control system and defect tracking respectively Involved in the configuring of WebSphere Application server and application deployment Environment Java JSP Java Script EXT JS JSON HTML CSS JSF SWT EJB 21 Spring Hibernate Rest Web Services Spring security Tomcat Education Bachelors Skills Bea Eclipse J2ee Java Hibernate JSP Spring Angularjs Javascript Java J2Ee Additional Information TECHNICAL SKILLS Operating Systems Linux and Windows 7vistaXP2000 Languages Java J2EE HTML UML XMLSQL JavaScript Web Technologies Servlets JSP JSON JDBC JMS Web Services XML HTML Jquery CRM NetSuite RightNow Methodlogies SDLC OOAD Agile RUP Servers BEA Web Logic 8110 IBM Web Sphere 405x6x Jboss 456 Apache Tomcat 567 and Resin Frameworks Struts Spring Hibernate Databases Oracle 8i9i10g IBM DB2 70 MySQL and SQL Server Development Tools IntelliJEclipse EditPlus Jbuilder Weblogic Workshop Web Services REST SOAP WSDL UDDI JAXM Apache Axis2 Source Control CVS SVN GIT Testing Frameworks Junit Spock Reporting Tools JReports 8 SQL Reports Jasper Reports and OpenFlash",
    "unique_id": "e693765e-a540-472d-b187-4c997afd3dbf"
}