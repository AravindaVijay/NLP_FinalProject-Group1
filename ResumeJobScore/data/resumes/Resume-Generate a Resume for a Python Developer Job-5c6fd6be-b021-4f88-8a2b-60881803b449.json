{
    "clean_data": "Sr Java J2EE Developer Sr span lJavaspan J2EE span lDeveloperspan Sr Java J2EE Developer Baptist Memorial Health Care Corporations Jersey City NJ 8 years of experience as a Full stack developer in developing webbased client server applications data solutions IntranetInternet Enterprise Software applications Good experience in Software Development life cycle using various methodologies like Waterfall Agile and TestDriven Development Expertise working with frame works like Spring Core Spring Boot Spring MVC Spring DAO Spring JDBC Spring ORM Spring Batch Spring JMS Spring Security and Hibernate Proficient in implementing Service Oriented Architecture SOA using SOAP and Restful Web Services Experienced in developing Front End web applications using JavaScript AJAX jQuery HTML5 CSS3 AngularJS Angular2 Angular4 Bootstrap ReactJS and NodeJS Experienced in developing Web Applications involving J2EE technologies like JSP Servlets EJB JMS JDBC JNDI JAXB Struts Hibernate and Spring MVC Experience with RDBMS concepts like writing Queries Functions Triggers Stored Procedures and PLSQL packages Expertise in using and configuring various web and application servers like IBM WebSphere Application Server WebSphere Liberty profile Apache Tomcat JBoss Application Server and WebLogic Application Server Experience in using the Log4j framework for Logging Application Experience in developing designing in UML Package Class and State Diagrams Well versed with Core java concepts like Collections Multithreading Serialization Java Beans and Network programming Extensive experience in SQL by writing queries for Insert Update and Modification operations using Oracle MySQL and SQL Server and also performed optimization and normalization using database tools Experience in developing Maven Scripts and ANT scripts for building and deploying of J2EE applications Extensive years of experience in working with Junit for Unit testing and Integration testing Highly experienced with developing multitier Enterprise Applications using Eclipse NetBeans and MyEclipse Used various web Servers such as Apache Tomcat Glassfish IBM WebSphere and Pivotal tc Server for developing serverside applications Worked with Web services testing tools like SoapUI and Postman Well acquainted with workflows and Unified Modeling Language UML diagrams including Use Cases Activity Charts Sequence Diagrams Data Flow Diagrams and ER Diagrams using Rational rose MS Visio Exposure to LINUX Commands Authorized to work in the US for any employer Work Experience Sr Java J2EE Developer Baptist Memorial Health Care Corporations Memphis TN August 2018 to Present Project Description The aim of the project is to Develop an API based interactive inline quality and rules engine for all Mortgage origination channels The project builds out Qualification Rules and engine accessible via data base for validation of rule engine Building of Credit Underwriting Guidelines and Manual underwriting qualifiers conditions and defects utilizing a manual process to validate the output of qualifying questions and rules via the rules Engine Responsibilities Developed presentation layer includes UI components validations using HTML5 applying styles using CSS used jQuery to make Ajax calls Design and develop the Process Engine framework using JBPM Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Agile methodology in the Scrum Cycle model Developed using new features of Java 18 annotations Generics enhanced for loop and Enums Lambda expressions for array operations collections throughout the application for welldefined programming Successfully handled all Apigee and backend related errors in the API proxies using JavaScript Excellent knowledge on CQL Cassandra Query Language for retrieving the data present in Cassandra cluster by running queries in CQL Involved in designing various stages of migrating data from RDBMS to Cassandra Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views Used AngularJS for creating user interfaces and connecting to software components Used Kafka for building realtime streaming data pipelines that reliably get data between systems or applications Use Jenkins with Maven to Compile Build Microservices code and configure Build Triggers Created REST API documentation using Swagger and YAML Implemented logging using SLF4J and LOG 4J Used Log4J utility to log error info and debug messages Created and deployed Rules engine API into JBoss BRMS image Learn and move quickly with excellent technical execution and the ability to build out complex API from scratch Followed testdriven development TTD as a part writing all Unit Test and Integration Tests Unit and integration test cases are being designed and developed using JUnit Worked on creation of custom Docker container images tagging pushing images integration offspring boot Created the Docker containers and Docker consoles for managing the application life cycle Integrated spring with Hibernate using Hibernate Template to perform CRUD operations against database JBPM is a lightweight extensible workflow engine written in pure Java that allows you to execute business processes using the latest BPMN 20 specification Used Spring Boot based services to interact through a combination of REST and Apache Kafka message brokers Designed and Implemented the DAO layer using spring hibernate Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring micro services Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Used a Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers Used Hibernate objectrelationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Used Scala Test for writing test cases and coordinated with QA team on end to end testing Created tables and worked on SQL PLSQL to write Stored Procedures functions packages for Inserts updates in the database Worked on Entity beans in the persistence layer interaction with Oracle DB Migrated Database from SQL Databases Oracle and SQL Server to NO SQL Databases CassandraMONGODB In depth knowledge of Mongo DB and hands on experience with installing configuring and monitoring with OPS manager Have Knowledge on Apache Spark with Cassandra Wrote SQL queries to get the data update the data from the database and to connect database in the DAO implementation Involved in Dev Ops activities like configuring Jenkins job Jenkins pipeline Script for CICD Performed configuration deployment and support of cloud services including Amazon Web Services AWS Experience on computer science fundamentals in objectoriented design data structures algorithm design problem solving and complexity analysis Environment J2EE Spring 4x Spring MVC Spring Hysteric Spring quartz Drools JBPM Jira Java18 Hibernate 4x Angular JS jQuery JSON AJAX GWT Web Services APIGEE XML JAXB WSDL JavaScript Oracle 12c Web Sphere 8x Agile Methodology Design Patterns Git SourceTree Bitbucket MuleSoft Apache Maven Adobe Flex JUnit Rest Assured HTML5 Apache Kafka Postman WebLogic 12c Sr JAVAJ2EE Change Health care Lombard IL June 2016 to July 2018 Project Description This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well The client programs are for issuing or retrieving data from the database on the query for finding health policy premium Responsibilities Worked in Agile Scrum Environments and participated in requirement gathering analysis and design Defined and constructed layers serverside objects and clientside interfaces on JavaJ2EE design patterns Developed and implemented Spring MVC framework for the application Utilized Java 8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application Designed Prototype and project layout skeletons jQuery CSS3 HTML5 XML DHTML and JavaScript Developed Single Page Applications SPAs using AngularJS Created Multiple Nested Views Routing Controllers Services and Custom Directives Nodejs Bower and Grunt Involved in the process of Design Coding and Testing phases of the software development cycle involved in designing Spring boot application and Hibernate ORM 502 Created an inmemory data structure cache by using React DOM for updating browser efficiently JBPM can be combined with the Drools project to support one unified environment that integrates these paradigms where you model your business logic as a combination of processes rules and events Used AngularJS in creating animations based on CSS classes for a new requirement surfaced for the client Used reactredux library to connect Redux application state to ReactJS components used redux store to combine different reducers to produce a global state RESTful web services using Jersey for JAXRS implementation and to transport detain JSON format Worked on SOA Web Services using SOAP for transmission of large blocks of XML data over HTTP Consumed Web Services to fetch and direct credit card information from third party application Developed new features for a REST SOAP backend in Clojure and led evolution of a backend architecture Used a Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers JBPM eclipsebased developer tools to support the modeling testing and debugging of processes Implemented the associated business modules integration using Spring and Hibernate data mapping Used Spring dependency injection annotations and Spring MVC components to implement business layer and navigation part of application Used various jQuery and Bootstrap plugin like date picker Bootstrap selectors Wrote SQL queries stored procedures and enhanced performance by running explain plans Elastic Cache can be run in the Amazon Virtual Private Cloud Amazon VPC environment and Redis can use Elastic Cache with almost no modification Followed TDD Test Driven Development methodology to write unit tests with JUNIT and Mockito Write automated regression tests using JMeter Environment Java J2EE JDK 1718 RCP AWS SDK Ext JS Git JFC Spring 4x AWS SNSSQS hibernate4x Scala Core Java SOAPRest Web Services Python 27 JavaScript UML HTML5 CSS SASS RAD 7 WAS 8 WSDL SDKs JIRA 5x6x JAXB Linux JAXWS JAX RPC JMS UNIX Selenium NOSQLMongoDB AngularJS15 ReactJS AJAX Apache JMeter jQuery Mule ESB JUnit Maven EMR Java J2EE Developer Verizon Irving TX October 2013 to March 2016 Project Description Responsible for effective design and development practices and help implement the best most responsive most robustsecure most userfriendlyfunctional most networkpowersensitive applications for Verizon Developed gateway application which helps information that need to come inside from PartnersVendors as well as files that go in the reverse direction through EFG It is a gateway between internal applications and external partners Responsibilities Involved in Design Development and Support phases of Software Development Life Cycle SDLC Used AGILE methodology and participated in SCRUM meetings Designed and developed the User Interface components using Spring and maintained the session with Session Beans Implemented scripting with Ajax and XML to dynamically refresh the page contents Implemented JAXB in XML binding Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Configured various interceptors for transaction management security Audit loggingdatabase and logging using Spring AOP Data from UI layer sent through JMS to Middle layer and from there using MDB message retrieves Messages and will be sent to MQSeries Used JSON as response type in REST services Developed Data Access Objects DAOs for interacting with the database using JDBC Involved in developing Stored procedures and Triggers on Oracle 10g Used Hibernate Persistence Strategy to interact with database Developed Hibernate mapping files using different mapping strategies such as table per class hierarchy Integrated Hibernate with Spring by coding a Spring Configuration file Configured JMS in the WebSphere application server to send messages on the queue Deployed the application in WebSphere Application Server 601 Developed a tool to retrieve and send data to third party service provider This feature was implemented using REST Performed application performance tuning using J Profiler Built Maven scripts for automated deployment and for the build operation of the entire application Handson experienced working with version controller tools such as ClearCase and Clear Quest as issue tracking software Used RESTFUL client to interact with the services by providing the RESTFUL URL mapping Used Subversion for version control and created automated build scripts Performed unit testing using JUnit Handled production support of the application Documented the flow and functionality of the code for further reference Environment Java J2EE Servlets AJAX Spring JMS HTML5 JavaScript JSP EJB CVS CSS MVC JDBC J Profiler Oracle 10g XML JSON Spring MVC Hibernate MQSeries WebSphere JUnit Subversion Profiler Maven ClearCase Clear Quest Software Developer First Republic Bank San Francisco CA June 2010 to September 2013 Project Description This system is used for assigning the project and to track the status of the project This has two modules like user module and admin module The supervisor assigns tasks to the team approving the timesheet setting goals for the performance review The team member will login into the system and enter the timesheet for the assigned task with the tasks completed This system will help to see the progress and status of the completion of the tasks Responsibilities Involved in the development of various frontend modules Worked in deadline driven environment Developing Java script modules for clientside validations Developed core Java backend tools Developed custom tag libraries for formatting contents in JSPs Developed and deployed EJBs on the server Involved in the production support for the application Developed various serverside components using various J2EE technologies Involved in the development of different user interface screens using JavaScript CSS and HTML Developed presentation modules using Struts framework Developed various controller components using Struts framework Extensively used JDBC to access the database objects Extensively involved in coding of various design patterns Environment Java 14 J2EE Servlets JSP Struts MVC EJB Java Beans SQL PLSQL Design Patterns JDBC JBOSS Log4J Apache ANT JavaScript CSS HTML XML DB2 Stored Procedures Education Bachelors Skills CSS 8 years data base 8 years J2EE 8 years Java 8 years JavaScript 8 years Additional Information Technical Skills Languages Core Java Java 8 Java SE 6 J2SE 50 J2SE 14 J2EE SQL PLSQL Enterprise Java Servlets JSTL Design Patterns JSF JMS JSP JNDI JDBC Log4J API Java security MarkupXML Technologies HTML XHTML JavaScript CSS XML XSD XSLXSLT AJAX jQuery JSON Bootstrap AngularJS Tools Framework Spring Spring MVC Spring Boot Spring batch Spring Security Spring AOP Struts Hibernate JSF Log4J Jasper reports Web Services SOAP RESTful WSDL WebApp Servers Web Sphere WebLogic Apache Tomcat JBoss Jetty Server Database Oracle SQLServer MySQL server Development Tools Eclipse My Eclipse Spring Tool Suite STS OR mapping Hibernate JPA Version Control Tools SourceTree Git Bit bucket Tortoise SVN Testing Tools Others JUnit SoapUI Putty Rational Clear Quest Mockito Fitness Load UI Groovy Spock Jenkins OS Environment Windows Linux UNIX Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns Build Automation ANT MAVEN Gradle",
    "entities": [
        "Spring Controllers",
        "Implemented Spring Circuit",
        "Spring Bootbased",
        "Used Hibernate",
        "Analysis Design Development System Testing",
        "Created Multiple Nested Views Routing Controllers Services",
        "Oracle MySQL",
        "WebSphere Application",
        "Additional Information Technical Skills Languages",
        "Spring Configuration",
        "Project Description Responsible",
        "JMS",
        "Jersey",
        "Used Hibernate Transaction Management Hibernate Batch Transactions",
        "Waterfall Agile and TestDriven Development Expertise",
        "EFG",
        "CVS",
        "Amazon Web Services AWS",
        "Ajax",
        "SOAP",
        "Use Cases Activity Charts",
        "XML",
        "a Single Page Application",
        "WebLogic",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "REST Performed",
        "ClearCase",
        "Integrated Hibernate",
        "Stream API for Bulk",
        "Developed Data Access Objects",
        "JavaJ2EE",
        "TX",
        "Hibernate JPA Version",
        "the Process Engine",
        "WebSphere",
        "SQL Server",
        "Stored Procedures",
        "DAO",
        "Oracle Relational",
        "JBPM Actively",
        "Spring MVC",
        "San Francisco",
        "Responsibilities Involved",
        "HTML Developed",
        "Developed Hibernate",
        "Responsibilities Involved in Design Development",
        "Core",
        "Spring and Hibernate",
        "Session Beans Implemented",
        "Java SOAPRest Web Services",
        "HTML5",
        "AGILE",
        "Logging Application",
        "Linux",
        "the Application Designed Prototype",
        "Custom Directives Nodejs Bower",
        "Insert Update and Modification",
        "JavaScript Developed Single Page Applications",
        "Sr JAVAJ2EE Change Health",
        "Collections",
        "TTD",
        "SQLbased",
        "STS",
        "MVC",
        "Postman Well",
        "Present Project Description",
        "EJB",
        "User Interface",
        "Hibernate using Hibernate Template",
        "IntranetInternet Enterprise Software",
        "API",
        "Compile Build Microservices",
        "US",
        "QA",
        "MQSeries WebSphere JUnit Subversion",
        "MQSeries Used JSON",
        "Drools",
        "Created",
        "MDB",
        "Oracle",
        "PartnersVendors",
        "Created the Docker",
        "First Republic Bank",
        "Stored Procedures Education",
        "the Data Repository Users",
        "Verizon Developed",
        "Restful Web Services Experienced",
        "Integration testing Highly",
        "User Acceptance Testing Successfully",
        "Clear Quest",
        "Build Triggers Created",
        "RESTFUL",
        "SQL",
        "Clojure",
        "Bootstrap",
        "Responsibilities Worked",
        "Hibernate Proficient",
        "Software Development",
        "Spring AOP Data",
        "Maven Scripts",
        "JAXRS",
        "React DOM",
        "ER Diagrams",
        "Qualification Rules",
        "JUNIT",
        "Handson",
        "IBM WebSphere Application",
        "CRUD",
        "NodeJS Experienced",
        "Design Coding",
        "Data Repository",
        "Maven",
        "Hystrix",
        "HTTP Consumed Web Services",
        "UML Package",
        "Performed",
        "lJavaspan",
        "Hibernate",
        "JavaScript",
        "Front End",
        "ANT",
        "Oracle DB Migrated Database",
        "UI",
        "JSP Servlets",
        "J2EE Servlets",
        "CSS",
        "jQuery",
        "Apache Tomcat JBoss Application Server",
        "REST",
        "NetBeans",
        "Collections Multithreading Serialization Java Beans",
        "JavaScript Oracle",
        "Spring micro",
        "WebLogic Application Server",
        "Apigee",
        "JBPM",
        "CQL Involved"
    ],
    "experience": "Experience with RDBMS concepts like writing Queries Functions Triggers Stored Procedures and PLSQL packages Expertise in using and configuring various web and application servers like IBM WebSphere Application Server WebSphere Liberty profile Apache Tomcat JBoss Application Server and WebLogic Application Server Experience in using the Log4j framework for Logging Application Experience in developing designing in UML Package Class and State Diagrams Well versed with Core java concepts like Collections Multithreading Serialization Java Beans and Network programming Extensive experience in SQL by writing queries for Insert Update and Modification operations using Oracle MySQL and SQL Server and also performed optimization and normalization using database tools Experience in developing Maven Scripts and ANT scripts for building and deploying of J2EE applications Extensive years of experience in working with Junit for Unit testing and Integration testing Highly experienced with developing multitier Enterprise Applications using Eclipse NetBeans and MyEclipse Used various web Servers such as Apache Tomcat Glassfish IBM WebSphere and Pivotal tc Server for developing serverside applications Worked with Web services testing tools like SoapUI and Postman Well acquainted with workflows and Unified Modeling Language UML diagrams including Use Cases Activity Charts Sequence Diagrams Data Flow Diagrams and ER Diagrams using Rational rose MS Visio Exposure to LINUX Commands Authorized to work in the US for any employer Work Experience Sr Java J2EE Developer Baptist Memorial Health Care Corporations Memphis TN August 2018 to Present Project Description The aim of the project is to Develop an API based interactive inline quality and rules engine for all Mortgage origination channels The project builds out Qualification Rules and engine accessible via data base for validation of rule engine Building of Credit Underwriting Guidelines and Manual underwriting qualifiers conditions and defects utilizing a manual process to validate the output of qualifying questions and rules via the rules Engine Responsibilities Developed presentation layer includes UI components validations using HTML5 applying styles using CSS used jQuery to make Ajax calls Design and develop the Process Engine framework using JBPM Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Agile methodology in the Scrum Cycle model Developed using new features of Java 18 annotations Generics enhanced for loop and Enums Lambda expressions for array operations collections throughout the application for welldefined programming Successfully handled all Apigee and backend related errors in the API proxies using JavaScript Excellent knowledge on CQL Cassandra Query Language for retrieving the data present in Cassandra cluster by running queries in CQL Involved in designing various stages of migrating data from RDBMS to Cassandra Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views Used AngularJS for creating user interfaces and connecting to software components Used Kafka for building realtime streaming data pipelines that reliably get data between systems or applications Use Jenkins with Maven to Compile Build Microservices code and configure Build Triggers Created REST API documentation using Swagger and YAML Implemented logging using SLF4J and LOG 4J Used Log4J utility to log error info and debug messages Created and deployed Rules engine API into JBoss BRMS image Learn and move quickly with excellent technical execution and the ability to build out complex API from scratch Followed testdriven development TTD as a part writing all Unit Test and Integration Tests Unit and integration test cases are being designed and developed using JUnit Worked on creation of custom Docker container images tagging pushing images integration offspring boot Created the Docker containers and Docker consoles for managing the application life cycle Integrated spring with Hibernate using Hibernate Template to perform CRUD operations against database JBPM is a lightweight extensible workflow engine written in pure Java that allows you to execute business processes using the latest BPMN 20 specification Used Spring Boot based services to interact through a combination of REST and Apache Kafka message brokers Designed and Implemented the DAO layer using spring hibernate Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring micro services Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Used a Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers Used Hibernate objectrelationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Used Scala Test for writing test cases and coordinated with QA team on end to end testing Created tables and worked on SQL PLSQL to write Stored Procedures functions packages for Inserts updates in the database Worked on Entity beans in the persistence layer interaction with Oracle DB Migrated Database from SQL Databases Oracle and SQL Server to NO SQL Databases CassandraMONGODB In depth knowledge of Mongo DB and hands on experience with installing configuring and monitoring with OPS manager Have Knowledge on Apache Spark with Cassandra Wrote SQL queries to get the data update the data from the database and to connect database in the DAO implementation Involved in Dev Ops activities like configuring Jenkins job Jenkins pipeline Script for CICD Performed configuration deployment and support of cloud services including Amazon Web Services AWS Experience on computer science fundamentals in objectoriented design data structures algorithm design problem solving and complexity analysis Environment J2EE Spring 4x Spring MVC Spring Hysteric Spring quartz Drools JBPM Jira Java18 Hibernate 4x Angular JS jQuery JSON AJAX GWT Web Services APIGEE XML JAXB WSDL JavaScript Oracle 12c Web Sphere 8x Agile Methodology Design Patterns Git SourceTree Bitbucket MuleSoft Apache Maven Adobe Flex JUnit Rest Assured HTML5 Apache Kafka Postman WebLogic 12c Sr JAVAJ2EE Change Health care Lombard IL June 2016 to July 2018 Project Description This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well The client programs are for issuing or retrieving data from the database on the query for finding health policy premium Responsibilities Worked in Agile Scrum Environments and participated in requirement gathering analysis and design Defined and constructed layers serverside objects and clientside interfaces on JavaJ2EE design patterns Developed and implemented Spring MVC framework for the application Utilized Java 8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application Designed Prototype and project layout skeletons jQuery CSS3 HTML5 XML DHTML and JavaScript Developed Single Page Applications SPAs using AngularJS Created Multiple Nested Views Routing Controllers Services and Custom Directives Nodejs Bower and Grunt Involved in the process of Design Coding and Testing phases of the software development cycle involved in designing Spring boot application and Hibernate ORM 502 Created an inmemory data structure cache by using React DOM for updating browser efficiently JBPM can be combined with the Drools project to support one unified environment that integrates these paradigms where you model your business logic as a combination of processes rules and events Used AngularJS in creating animations based on CSS classes for a new requirement surfaced for the client Used reactredux library to connect Redux application state to ReactJS components used redux store to combine different reducers to produce a global state RESTful web services using Jersey for JAXRS implementation and to transport detain JSON format Worked on SOA Web Services using SOAP for transmission of large blocks of XML data over HTTP Consumed Web Services to fetch and direct credit card information from third party application Developed new features for a REST SOAP backend in Clojure and led evolution of a backend architecture Used a Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers JBPM eclipsebased developer tools to support the modeling testing and debugging of processes Implemented the associated business modules integration using Spring and Hibernate data mapping Used Spring dependency injection annotations and Spring MVC components to implement business layer and navigation part of application Used various jQuery and Bootstrap plugin like date picker Bootstrap selectors Wrote SQL queries stored procedures and enhanced performance by running explain plans Elastic Cache can be run in the Amazon Virtual Private Cloud Amazon VPC environment and Redis can use Elastic Cache with almost no modification Followed TDD Test Driven Development methodology to write unit tests with JUNIT and Mockito Write automated regression tests using JMeter Environment Java J2EE JDK 1718 RCP AWS SDK Ext JS Git JFC Spring 4x AWS SNSSQS hibernate4x Scala Core Java SOAPRest Web Services Python 27 JavaScript UML HTML5 CSS SASS RAD 7 WAS 8 WSDL SDKs JIRA 5x6x JAXB Linux JAXWS JAX RPC JMS UNIX Selenium NOSQLMongoDB AngularJS15 ReactJS AJAX Apache JMeter jQuery Mule ESB JUnit Maven EMR Java J2EE Developer Verizon Irving TX October 2013 to March 2016 Project Description Responsible for effective design and development practices and help implement the best most responsive most robustsecure most userfriendlyfunctional most networkpowersensitive applications for Verizon Developed gateway application which helps information that need to come inside from PartnersVendors as well as files that go in the reverse direction through EFG It is a gateway between internal applications and external partners Responsibilities Involved in Design Development and Support phases of Software Development Life Cycle SDLC Used AGILE methodology and participated in SCRUM meetings Designed and developed the User Interface components using Spring and maintained the session with Session Beans Implemented scripting with Ajax and XML to dynamically refresh the page contents Implemented JAXB in XML binding Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Configured various interceptors for transaction management security Audit loggingdatabase and logging using Spring AOP Data from UI layer sent through JMS to Middle layer and from there using MDB message retrieves Messages and will be sent to MQSeries Used JSON as response type in REST services Developed Data Access Objects DAOs for interacting with the database using JDBC Involved in developing Stored procedures and Triggers on Oracle 10 g Used Hibernate Persistence Strategy to interact with database Developed Hibernate mapping files using different mapping strategies such as table per class hierarchy Integrated Hibernate with Spring by coding a Spring Configuration file Configured JMS in the WebSphere application server to send messages on the queue Deployed the application in WebSphere Application Server 601 Developed a tool to retrieve and send data to third party service provider This feature was implemented using REST Performed application performance tuning using J Profiler Built Maven scripts for automated deployment and for the build operation of the entire application Handson experienced working with version controller tools such as ClearCase and Clear Quest as issue tracking software Used RESTFUL client to interact with the services by providing the RESTFUL URL mapping Used Subversion for version control and created automated build scripts Performed unit testing using JUnit Handled production support of the application Documented the flow and functionality of the code for further reference Environment Java J2EE Servlets AJAX Spring JMS HTML5 JavaScript JSP EJB CVS CSS MVC JDBC J Profiler Oracle 10 g XML JSON Spring MVC Hibernate MQSeries WebSphere JUnit Subversion Profiler Maven ClearCase Clear Quest Software Developer First Republic Bank San Francisco CA June 2010 to September 2013 Project Description This system is used for assigning the project and to track the status of the project This has two modules like user module and admin module The supervisor assigns tasks to the team approving the timesheet setting goals for the performance review The team member will login into the system and enter the timesheet for the assigned task with the tasks completed This system will help to see the progress and status of the completion of the tasks Responsibilities Involved in the development of various frontend modules Worked in deadline driven environment Developing Java script modules for clientside validations Developed core Java backend tools Developed custom tag libraries for formatting contents in JSPs Developed and deployed EJBs on the server Involved in the production support for the application Developed various serverside components using various J2EE technologies Involved in the development of different user interface screens using JavaScript CSS and HTML Developed presentation modules using Struts framework Developed various controller components using Struts framework Extensively used JDBC to access the database objects Extensively involved in coding of various design patterns Environment Java 14 J2EE Servlets JSP Struts MVC EJB Java Beans SQL PLSQL Design Patterns JDBC JBOSS Log4J Apache ANT JavaScript CSS HTML XML DB2 Stored Procedures Education Bachelors Skills CSS 8 years data base 8 years J2EE 8 years Java 8 years JavaScript 8 years Additional Information Technical Skills Languages Core Java Java 8 Java SE 6 J2SE 50 J2SE 14 J2EE SQL PLSQL Enterprise Java Servlets JSTL Design Patterns JSF JMS JSP JNDI JDBC Log4J API Java security MarkupXML Technologies HTML XHTML JavaScript CSS XML XSD XSLXSLT AJAX jQuery JSON Bootstrap AngularJS Tools Framework Spring Spring MVC Spring Boot Spring batch Spring Security Spring AOP Struts Hibernate JSF Log4J Jasper reports Web Services SOAP RESTful WSDL WebApp Servers Web Sphere WebLogic Apache Tomcat JBoss Jetty Server Database Oracle SQLServer MySQL server Development Tools Eclipse My Eclipse Spring Tool Suite STS OR mapping Hibernate JPA Version Control Tools SourceTree Git Bit bucket Tortoise SVN Testing Tools Others JUnit SoapUI Putty Rational Clear Quest Mockito Fitness Load UI Groovy Spock Jenkins OS Environment Windows Linux UNIX Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns Build Automation ANT MAVEN Gradle",
    "extracted_keywords": [
        "Sr",
        "Java",
        "J2EE",
        "Developer",
        "Sr",
        "lJavaspan",
        "J2EE",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "J2EE",
        "Developer",
        "Baptist",
        "Memorial",
        "Health",
        "Care",
        "Corporations",
        "Jersey",
        "City",
        "NJ",
        "years",
        "experience",
        "stack",
        "developer",
        "client",
        "server",
        "applications",
        "data",
        "solutions",
        "IntranetInternet",
        "Enterprise",
        "Software",
        "experience",
        "Software",
        "Development",
        "life",
        "cycle",
        "methodologies",
        "Waterfall",
        "Agile",
        "TestDriven",
        "Development",
        "Expertise",
        "frame",
        "works",
        "Spring",
        "Core",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "JDBC",
        "Spring",
        "ORM",
        "Spring",
        "Batch",
        "Spring",
        "JMS",
        "Spring",
        "Security",
        "Hibernate",
        "Proficient",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "SOAP",
        "Restful",
        "Web",
        "Services",
        "Front",
        "End",
        "web",
        "applications",
        "JavaScript",
        "AJAX",
        "jQuery",
        "HTML5",
        "CSS3",
        "Angular2",
        "Angular4",
        "Bootstrap",
        "ReactJS",
        "NodeJS",
        "Web",
        "Applications",
        "J2EE",
        "technologies",
        "JSP",
        "Servlets",
        "EJB",
        "JMS",
        "JDBC",
        "JNDI",
        "JAXB",
        "Struts",
        "Hibernate",
        "Spring",
        "MVC",
        "Experience",
        "RDBMS",
        "concepts",
        "Queries",
        "Functions",
        "Triggers",
        "Stored",
        "Procedures",
        "PLSQL",
        "packages",
        "Expertise",
        "web",
        "application",
        "servers",
        "IBM",
        "WebSphere",
        "Application",
        "Server",
        "WebSphere",
        "Liberty",
        "profile",
        "Apache",
        "Tomcat",
        "JBoss",
        "Application",
        "Server",
        "WebLogic",
        "Application",
        "Server",
        "Experience",
        "Log4j",
        "framework",
        "Logging",
        "Application",
        "Experience",
        "designing",
        "UML",
        "Package",
        "Class",
        "State",
        "Diagrams",
        "Core",
        "concepts",
        "Collections",
        "Multithreading",
        "Serialization",
        "Java",
        "Beans",
        "Network",
        "experience",
        "SQL",
        "queries",
        "Insert",
        "Update",
        "Modification",
        "operations",
        "Oracle",
        "MySQL",
        "SQL",
        "Server",
        "optimization",
        "normalization",
        "database",
        "tools",
        "Experience",
        "Maven",
        "Scripts",
        "ANT",
        "scripts",
        "building",
        "deploying",
        "J2EE",
        "applications",
        "years",
        "experience",
        "Junit",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Enterprise",
        "Applications",
        "Eclipse",
        "NetBeans",
        "MyEclipse",
        "web",
        "Servers",
        "Apache",
        "Tomcat",
        "Glassfish",
        "IBM",
        "WebSphere",
        "Pivotal",
        "tc",
        "Server",
        "serverside",
        "applications",
        "Web",
        "services",
        "testing",
        "tools",
        "SoapUI",
        "Postman",
        "workflows",
        "Unified",
        "Modeling",
        "Language",
        "UML",
        "diagrams",
        "Use",
        "Cases",
        "Activity",
        "Charts",
        "Sequence",
        "Diagrams",
        "Data",
        "Flow",
        "Diagrams",
        "ER",
        "Diagrams",
        "Rational",
        "MS",
        "Visio",
        "Exposure",
        "LINUX",
        "Commands",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "J2EE",
        "Developer",
        "Baptist",
        "Memorial",
        "Health",
        "Care",
        "Corporations",
        "Memphis",
        "TN",
        "August",
        "Present",
        "Project",
        "Description",
        "aim",
        "project",
        "API",
        "inline",
        "quality",
        "engine",
        "Mortgage",
        "origination",
        "channels",
        "project",
        "Qualification",
        "Rules",
        "engine",
        "data",
        "base",
        "validation",
        "rule",
        "engine",
        "Building",
        "Credit",
        "Underwriting",
        "Guidelines",
        "underwriting",
        "qualifiers",
        "conditions",
        "defects",
        "process",
        "output",
        "questions",
        "rules",
        "rules",
        "Engine",
        "Responsibilities",
        "presentation",
        "layer",
        "UI",
        "components",
        "validations",
        "HTML5",
        "styles",
        "CSS",
        "jQuery",
        "calls",
        "Design",
        "Process",
        "Engine",
        "framework",
        "JBPM",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "methodology",
        "Scrum",
        "Cycle",
        "model",
        "features",
        "Java",
        "annotations",
        "Generics",
        "loop",
        "Enums",
        "Lambda",
        "expressions",
        "array",
        "operations",
        "collections",
        "application",
        "programming",
        "Apigee",
        "errors",
        "API",
        "proxies",
        "JavaScript",
        "Excellent",
        "knowledge",
        "CQL",
        "Cassandra",
        "Query",
        "Language",
        "data",
        "Cassandra",
        "cluster",
        "queries",
        "CQL",
        "stages",
        "data",
        "RDBMS",
        "Cassandra",
        "AngularJS",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "data",
        "views",
        "user",
        "interfaces",
        "software",
        "components",
        "Kafka",
        "streaming",
        "data",
        "pipelines",
        "data",
        "systems",
        "applications",
        "Use",
        "Jenkins",
        "Maven",
        "Compile",
        "Build",
        "Microservices",
        "code",
        "configure",
        "Build",
        "Triggers",
        "Created",
        "REST",
        "API",
        "documentation",
        "Swagger",
        "YAML",
        "SLF4J",
        "LOG",
        "4J",
        "utility",
        "error",
        "info",
        "debug",
        "messages",
        "Rules",
        "engine",
        "API",
        "JBoss",
        "BRMS",
        "image",
        "execution",
        "ability",
        "API",
        "scratch",
        "testdriven",
        "development",
        "TTD",
        "part",
        "Unit",
        "Test",
        "Integration",
        "Tests",
        "Unit",
        "integration",
        "test",
        "cases",
        "JUnit",
        "Worked",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "integration",
        "offspring",
        "boot",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "spring",
        "Hibernate",
        "Hibernate",
        "Template",
        "CRUD",
        "operations",
        "database",
        "JBPM",
        "workflow",
        "engine",
        "Java",
        "business",
        "processes",
        "BPMN",
        "specification",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "DAO",
        "layer",
        "spring",
        "hibernate",
        "Spring",
        "Circuit",
        "breaker",
        "pattern",
        "Hystrix",
        "dashboard",
        "Spring",
        "micro",
        "REST",
        "APIs",
        "Scala",
        "framework",
        "data",
        "Cassandra",
        "database",
        "Microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "Hibernate",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "concepts",
        "Scala",
        "Test",
        "test",
        "cases",
        "QA",
        "team",
        "end",
        "end",
        "tables",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "functions",
        "packages",
        "Inserts",
        "updates",
        "database",
        "Entity",
        "beans",
        "persistence",
        "layer",
        "interaction",
        "Oracle",
        "DB",
        "Migrated",
        "Database",
        "SQL",
        "Databases",
        "Oracle",
        "SQL",
        "Server",
        "SQL",
        "Databases",
        "depth",
        "knowledge",
        "Mongo",
        "DB",
        "hands",
        "experience",
        "configuring",
        "OPS",
        "manager",
        "Knowledge",
        "Apache",
        "Spark",
        "Cassandra",
        "Wrote",
        "SQL",
        "data",
        "data",
        "database",
        "database",
        "DAO",
        "implementation",
        "Dev",
        "Ops",
        "activities",
        "Jenkins",
        "job",
        "Jenkins",
        "pipeline",
        "Script",
        "CICD",
        "Performed",
        "configuration",
        "deployment",
        "support",
        "cloud",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Experience",
        "computer",
        "science",
        "fundamentals",
        "design",
        "data",
        "structures",
        "algorithm",
        "design",
        "problem",
        "complexity",
        "analysis",
        "Environment",
        "J2EE",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "Hysteric",
        "Spring",
        "quartz",
        "Drools",
        "JBPM",
        "Jira",
        "Java18",
        "Hibernate",
        "4x",
        "Angular",
        "JS",
        "jQuery",
        "JSON",
        "AJAX",
        "GWT",
        "Web",
        "Services",
        "APIGEE",
        "XML",
        "JAXB",
        "WSDL",
        "JavaScript",
        "Oracle",
        "12c",
        "Web",
        "Sphere",
        "Agile",
        "Methodology",
        "Design",
        "Patterns",
        "Git",
        "SourceTree",
        "Bitbucket",
        "MuleSoft",
        "Apache",
        "Maven",
        "Adobe",
        "Flex",
        "JUnit",
        "Rest",
        "Assured",
        "HTML5",
        "Apache",
        "Kafka",
        "Postman",
        "WebLogic",
        "12c",
        "Sr",
        "JAVAJ2EE",
        "Change",
        "Health",
        "care",
        "Lombard",
        "IL",
        "June",
        "July",
        "Project",
        "Description",
        "web",
        "application",
        "J2EE",
        "architecture",
        "access",
        "outpatient",
        "data",
        "Data",
        "Repository",
        "Users",
        "update",
        "data",
        "data",
        "clinicians",
        "Data",
        "Repository",
        "data",
        "decisions",
        "Data",
        "Repository",
        "modules",
        "application",
        "project",
        "company",
        "data",
        "health",
        "policy",
        "decisions",
        "client",
        "programs",
        "data",
        "database",
        "query",
        "health",
        "policy",
        "premium",
        "Responsibilities",
        "Agile",
        "Scrum",
        "Environments",
        "requirement",
        "analysis",
        "design",
        "layers",
        "serverside",
        "objects",
        "interfaces",
        "JavaJ2EE",
        "design",
        "patterns",
        "Spring",
        "MVC",
        "framework",
        "application",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "Stream",
        "API",
        "Bulk",
        "data",
        "operations",
        "Collections",
        "performance",
        "Application",
        "Designed",
        "Prototype",
        "project",
        "layout",
        "skeletons",
        "jQuery",
        "CSS3",
        "HTML5",
        "XML",
        "DHTML",
        "JavaScript",
        "Single",
        "Page",
        "Applications",
        "SPAs",
        "Created",
        "Multiple",
        "Nested",
        "Views",
        "Routing",
        "Controllers",
        "Services",
        "Custom",
        "Directives",
        "Nodejs",
        "Bower",
        "Grunt",
        "process",
        "Design",
        "Coding",
        "Testing",
        "phases",
        "software",
        "development",
        "cycle",
        "Spring",
        "boot",
        "application",
        "Hibernate",
        "ORM",
        "data",
        "structure",
        "cache",
        "React",
        "DOM",
        "browser",
        "JBPM",
        "Drools",
        "project",
        "environment",
        "paradigms",
        "business",
        "logic",
        "combination",
        "processes",
        "rules",
        "events",
        "animations",
        "CSS",
        "classes",
        "requirement",
        "client",
        "reactredux",
        "library",
        "Redux",
        "application",
        "state",
        "components",
        "redux",
        "store",
        "reducers",
        "state",
        "web",
        "services",
        "Jersey",
        "JAXRS",
        "implementation",
        "JSON",
        "format",
        "SOA",
        "Web",
        "Services",
        "SOAP",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "Consumed",
        "Web",
        "Services",
        "credit",
        "card",
        "information",
        "party",
        "application",
        "features",
        "REST",
        "SOAP",
        "backend",
        "Clojure",
        "evolution",
        "architecture",
        "Microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "JBPM",
        "developer",
        "tools",
        "modeling",
        "testing",
        "debugging",
        "processes",
        "business",
        "modules",
        "integration",
        "Spring",
        "Hibernate",
        "data",
        "mapping",
        "Spring",
        "dependency",
        "injection",
        "annotations",
        "Spring",
        "MVC",
        "components",
        "business",
        "layer",
        "navigation",
        "part",
        "application",
        "jQuery",
        "Bootstrap",
        "plugin",
        "date",
        "picker",
        "Bootstrap",
        "selectors",
        "Wrote",
        "SQL",
        "procedures",
        "performance",
        "explain",
        "plans",
        "Elastic",
        "Cache",
        "Amazon",
        "Virtual",
        "Cloud",
        "Amazon",
        "VPC",
        "environment",
        "Redis",
        "Elastic",
        "Cache",
        "modification",
        "TDD",
        "Test",
        "Driven",
        "Development",
        "methodology",
        "unit",
        "tests",
        "JUNIT",
        "Mockito",
        "Write",
        "regression",
        "tests",
        "JMeter",
        "Environment",
        "Java",
        "J2EE",
        "JDK",
        "RCP",
        "AWS",
        "SDK",
        "Ext",
        "JS",
        "Git",
        "JFC",
        "Spring",
        "AWS",
        "Scala",
        "Core",
        "Java",
        "SOAPRest",
        "Web",
        "Services",
        "Python",
        "JavaScript",
        "UML",
        "HTML5",
        "CSS",
        "SASS",
        "RAD",
        "WSDL",
        "SDKs",
        "JIRA",
        "5x6x",
        "JAXB",
        "Linux",
        "JAXWS",
        "JAX",
        "RPC",
        "JMS",
        "UNIX",
        "Selenium",
        "NOSQLMongoDB",
        "ReactJS",
        "AJAX",
        "Apache",
        "JMeter",
        "jQuery",
        "Mule",
        "ESB",
        "JUnit",
        "Maven",
        "EMR",
        "Java",
        "J2EE",
        "Developer",
        "Verizon",
        "Irving",
        "TX",
        "October",
        "March",
        "Project",
        "Description",
        "design",
        "development",
        "practices",
        "robustsecure",
        "applications",
        "Verizon",
        "gateway",
        "application",
        "information",
        "PartnersVendors",
        "files",
        "direction",
        "EFG",
        "gateway",
        "applications",
        "partners",
        "Responsibilities",
        "Design",
        "Development",
        "Support",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "SCRUM",
        "meetings",
        "User",
        "Interface",
        "components",
        "Spring",
        "session",
        "Session",
        "Beans",
        "XML",
        "page",
        "contents",
        "JAXB",
        "XML",
        "Development",
        "Spring",
        "Framework",
        "Controllers",
        "Controller",
        "request",
        "response",
        "paradigm",
        "Spring",
        "Controllers",
        "SpringMVC",
        "interceptors",
        "transaction",
        "management",
        "security",
        "Audit",
        "Spring",
        "AOP",
        "Data",
        "UI",
        "layer",
        "JMS",
        "layer",
        "MDB",
        "message",
        "Messages",
        "MQSeries",
        "JSON",
        "response",
        "type",
        "REST",
        "services",
        "Data",
        "Access",
        "DAOs",
        "database",
        "JDBC",
        "procedures",
        "Triggers",
        "Oracle",
        "g",
        "Hibernate",
        "Persistence",
        "Strategy",
        "database",
        "Developed",
        "Hibernate",
        "mapping",
        "files",
        "mapping",
        "strategies",
        "table",
        "class",
        "hierarchy",
        "Integrated",
        "Hibernate",
        "Spring",
        "Spring",
        "Configuration",
        "file",
        "Configured",
        "JMS",
        "WebSphere",
        "application",
        "server",
        "messages",
        "queue",
        "application",
        "WebSphere",
        "Application",
        "Server",
        "tool",
        "data",
        "party",
        "service",
        "provider",
        "feature",
        "REST",
        "Performed",
        "application",
        "performance",
        "J",
        "Profiler",
        "Built",
        "Maven",
        "scripts",
        "deployment",
        "build",
        "operation",
        "application",
        "Handson",
        "version",
        "controller",
        "tools",
        "ClearCase",
        "Clear",
        "Quest",
        "issue",
        "software",
        "RESTFUL",
        "client",
        "services",
        "RESTFUL",
        "URL",
        "mapping",
        "Subversion",
        "version",
        "control",
        "build",
        "scripts",
        "Performed",
        "unit",
        "testing",
        "JUnit",
        "production",
        "support",
        "application",
        "flow",
        "functionality",
        "code",
        "reference",
        "Environment",
        "Java",
        "J2EE",
        "Servlets",
        "AJAX",
        "Spring",
        "JMS",
        "HTML5",
        "JavaScript",
        "JSP",
        "EJB",
        "CVS",
        "CSS",
        "MVC",
        "JDBC",
        "J",
        "Profiler",
        "Oracle",
        "g",
        "XML",
        "JSON",
        "Spring",
        "MVC",
        "Hibernate",
        "MQSeries",
        "WebSphere",
        "JUnit",
        "Subversion",
        "Profiler",
        "Maven",
        "ClearCase",
        "Clear",
        "Quest",
        "Software",
        "Developer",
        "First",
        "Republic",
        "Bank",
        "San",
        "Francisco",
        "CA",
        "June",
        "September",
        "Project",
        "Description",
        "system",
        "project",
        "status",
        "project",
        "modules",
        "user",
        "module",
        "admin",
        "module",
        "supervisor",
        "tasks",
        "team",
        "timesheet",
        "goals",
        "performance",
        "review",
        "team",
        "member",
        "system",
        "timesheet",
        "task",
        "tasks",
        "system",
        "progress",
        "status",
        "completion",
        "tasks",
        "Responsibilities",
        "development",
        "frontend",
        "modules",
        "deadline",
        "environment",
        "Java",
        "script",
        "modules",
        "validations",
        "core",
        "Java",
        "tools",
        "custom",
        "tag",
        "contents",
        "JSPs",
        "EJBs",
        "server",
        "production",
        "support",
        "application",
        "serverside",
        "components",
        "J2EE",
        "technologies",
        "development",
        "user",
        "interface",
        "screens",
        "JavaScript",
        "CSS",
        "HTML",
        "presentation",
        "modules",
        "Struts",
        "framework",
        "controller",
        "components",
        "Struts",
        "framework",
        "JDBC",
        "database",
        "design",
        "patterns",
        "Environment",
        "Java",
        "J2EE",
        "Servlets",
        "JSP",
        "Struts",
        "MVC",
        "EJB",
        "Java",
        "Beans",
        "SQL",
        "PLSQL",
        "Design",
        "Patterns",
        "JDBC",
        "JBOSS",
        "Log4J",
        "Apache",
        "ANT",
        "JavaScript",
        "CSS",
        "HTML",
        "XML",
        "DB2",
        "Stored",
        "Procedures",
        "Education",
        "Bachelors",
        "Skills",
        "CSS",
        "years",
        "data",
        "base",
        "years",
        "J2EE",
        "years",
        "Java",
        "years",
        "JavaScript",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Core",
        "Java",
        "Java",
        "Java",
        "SE",
        "J2SE",
        "J2SE",
        "J2EE",
        "SQL",
        "PLSQL",
        "Enterprise",
        "Java",
        "Servlets",
        "JSTL",
        "Design",
        "Patterns",
        "JSF",
        "JMS",
        "JSP",
        "JNDI",
        "JDBC",
        "Log4J",
        "API",
        "Java",
        "security",
        "MarkupXML",
        "Technologies",
        "HTML",
        "XHTML",
        "JavaScript",
        "CSS",
        "XML",
        "XSD",
        "XSLXSLT",
        "AJAX",
        "jQuery",
        "JSON",
        "Bootstrap",
        "Tools",
        "Framework",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "batch",
        "Spring",
        "Security",
        "Spring",
        "AOP",
        "Struts",
        "Hibernate",
        "JSF",
        "Log4J",
        "Jasper",
        "reports",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "WSDL",
        "WebApp",
        "Servers",
        "Web",
        "Sphere",
        "WebLogic",
        "Apache",
        "Tomcat",
        "JBoss",
        "Jetty",
        "Server",
        "Database",
        "Oracle",
        "SQLServer",
        "MySQL",
        "server",
        "Development",
        "Tools",
        "Eclipse",
        "Eclipse",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "mapping",
        "Hibernate",
        "JPA",
        "Version",
        "Control",
        "Tools",
        "SourceTree",
        "Git",
        "Bit",
        "bucket",
        "Tortoise",
        "SVN",
        "Testing",
        "Tools",
        "Others",
        "JUnit",
        "SoapUI",
        "Putty",
        "Rational",
        "Clear",
        "Quest",
        "Mockito",
        "Fitness",
        "Load",
        "UI",
        "Spock",
        "Jenkins",
        "OS",
        "Environment",
        "Windows",
        "Linux",
        "UNIX",
        "Design",
        "Patterns",
        "MVC",
        "Front",
        "Controller",
        "Singleton",
        "Business",
        "Delegate",
        "DAO",
        "patterns",
        "Build",
        "Automation",
        "ANT",
        "MAVEN",
        "Gradle"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:20:07.497477",
    "resume_data": "Sr Java J2EE Developer Sr span lJavaspan J2EE span lDeveloperspan Sr Java J2EE Developer Baptist Memorial Health Care Corporations Jersey City NJ 8 years of experience as a Full stack developer in developing webbased client server applications data solutions IntranetInternet Enterprise Software applications Good experience in Software Development life cycle using various methodologies like Waterfall Agile and TestDriven Development Expertise working with frame works like Spring Core Spring Boot Spring MVC Spring DAO Spring JDBC Spring ORM Spring Batch Spring JMS Spring Security and Hibernate Proficient in implementing Service Oriented Architecture SOA using SOAP and Restful Web Services Experienced in developing Front End web applications using JavaScript AJAX jQuery HTML5 CSS3 AngularJS Angular2 Angular4 Bootstrap ReactJS and NodeJS Experienced in developing Web Applications involving J2EE technologies like JSP Servlets EJB JMS JDBC JNDI JAXB Struts Hibernate and Spring MVC Experience with RDBMS concepts like writing Queries Functions Triggers Stored Procedures and PLSQL packages Expertise in using and configuring various web and application servers like IBM WebSphere Application Server WebSphere Liberty profile Apache Tomcat JBoss Application Server and WebLogic Application Server Experience in using the Log4j framework for Logging Application Experience in developing designing in UML Package Class and State Diagrams Well versed with Core java concepts like Collections Multithreading Serialization Java Beans and Network programming Extensive experience in SQL by writing queries for Insert Update and Modification operations using Oracle MySQL and SQL Server and also performed optimization and normalization using database tools Experience in developing Maven Scripts and ANT scripts for building and deploying of J2EE applications Extensive years of experience in working with Junit for Unit testing and Integration testing Highly experienced with developing multitier Enterprise Applications using Eclipse NetBeans and MyEclipse Used various web Servers such as Apache Tomcat Glassfish IBM WebSphere and Pivotal tc Server for developing serverside applications Worked with Web services testing tools like SoapUI and Postman Well acquainted with workflows and Unified Modeling Language UML diagrams including Use Cases Activity Charts Sequence Diagrams Data Flow Diagrams and ER Diagrams using Rational rose MS Visio Exposure to LINUX Commands Authorized to work in the US for any employer Work Experience Sr Java J2EE Developer Baptist Memorial Health Care Corporations Memphis TN August 2018 to Present Project Description The aim of the project is to Develop an API based interactive inline quality and rules engine for all Mortgage origination channels The project builds out Qualification Rules and engine accessible via data base for validation of rule engine Building of Credit Underwriting Guidelines and Manual underwriting qualifiers conditions and defects utilizing a manual process to validate the output of qualifying questions and rules via the rules Engine Responsibilities Developed presentation layer includes UI components validations using HTML5 applying styles using CSS used jQuery to make Ajax calls Design and develop the Process Engine framework using JBPM Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Agile methodology in the Scrum Cycle model Developed using new features of Java 18 annotations Generics enhanced for loop and Enums Lambda expressions for array operations collections throughout the application for welldefined programming Successfully handled all Apigee and backend related errors in the API proxies using JavaScript Excellent knowledge on CQL Cassandra Query Language for retrieving the data present in Cassandra cluster by running queries in CQL Involved in designing various stages of migrating data from RDBMS to Cassandra Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views Used AngularJS for creating user interfaces and connecting to software components Used Kafka for building realtime streaming data pipelines that reliably get data between systems or applications Use Jenkins with Maven to Compile Build Microservices code and configure Build Triggers Created REST API documentation using Swagger and YAML Implemented logging using SLF4J and LOG 4J Used Log4J utility to log error info and debug messages Created and deployed Rules engine API into JBoss BRMS image Learn and move quickly with excellent technical execution and the ability to build out complex API from scratch Followed testdriven development TTD as a part writing all Unit Test and Integration Tests Unit and integration test cases are being designed and developed using JUnit Worked on creation of custom Docker container images tagging pushing images integration offspring boot Created the Docker containers and Docker consoles for managing the application life cycle Integrated spring with Hibernate using Hibernate Template to perform CRUD operations against database JBPM is a lightweight extensible workflow engine written in pure Java that allows you to execute business processes using the latest BPMN 20 specification Used Spring Boot based services to interact through a combination of REST and Apache Kafka message brokers Designed and Implemented the DAO layer using spring hibernate Implemented Spring Circuit breaker pattern integrated Hystrix dashboard to monitor Spring micro services Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database Used a Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers Used Hibernate objectrelationalmapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Hibernate Transaction Management Hibernate Batch Transactions and Hibernate cache concepts Used Scala Test for writing test cases and coordinated with QA team on end to end testing Created tables and worked on SQL PLSQL to write Stored Procedures functions packages for Inserts updates in the database Worked on Entity beans in the persistence layer interaction with Oracle DB Migrated Database from SQL Databases Oracle and SQL Server to NO SQL Databases CassandraMONGODB In depth knowledge of Mongo DB and hands on experience with installing configuring and monitoring with OPS manager Have Knowledge on Apache Spark with Cassandra Wrote SQL queries to get the data update the data from the database and to connect database in the DAO implementation Involved in Dev Ops activities like configuring Jenkins job Jenkins pipeline Script for CICD Performed configuration deployment and support of cloud services including Amazon Web Services AWS Experience on computer science fundamentals in objectoriented design data structures algorithm design problem solving and complexity analysis Environment J2EE Spring 4x Spring MVC Spring Hysteric Spring quartz Drools JBPM Jira Java18 Hibernate 4x Angular JS jQuery JSON AJAX GWT Web Services APIGEE XML JAXB WSDL JavaScript Oracle 12c Web Sphere 8x Agile Methodology Design Patterns Git SourceTree Bitbucket MuleSoft Apache Maven Adobe Flex JUnit Rest Assured HTML5 Apache Kafka Postman WebLogic 12c Sr JAVAJ2EE Change Health care Lombard IL June 2016 to July 2018 Project Description This is a web application based on J2EE architecture It provides webbased access to inpatient and outpatient data from the Data Repository Users can review as well as update or enter new data through data repository Many clinicians use Data Repository daily for accessing patient data which aids in making important clinical decisions Data Repository is mainly composed of various modules running inside of the application The project aims to provide the company with data to develop evidencebased health policy decisions as well The client programs are for issuing or retrieving data from the database on the query for finding health policy premium Responsibilities Worked in Agile Scrum Environments and participated in requirement gathering analysis and design Defined and constructed layers serverside objects and clientside interfaces on JavaJ2EE design patterns Developed and implemented Spring MVC framework for the application Utilized Java 8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application Designed Prototype and project layout skeletons jQuery CSS3 HTML5 XML DHTML and JavaScript Developed Single Page Applications SPAs using AngularJS Created Multiple Nested Views Routing Controllers Services and Custom Directives Nodejs Bower and Grunt Involved in the process of Design Coding and Testing phases of the software development cycle involved in designing Spring boot application and Hibernate ORM 502 Created an inmemory data structure cache by using React DOM for updating browser efficiently JBPM can be combined with the Drools project to support one unified environment that integrates these paradigms where you model your business logic as a combination of processes rules and events Used AngularJS in creating animations based on CSS classes for a new requirement surfaced for the client Used reactredux library to connect Redux application state to ReactJS components used redux store to combine different reducers to produce a global state RESTful web services using Jersey for JAXRS implementation and to transport detain JSON format Worked on SOA Web Services using SOAP for transmission of large blocks of XML data over HTTP Consumed Web Services to fetch and direct credit card information from third party application Developed new features for a REST SOAP backend in Clojure and led evolution of a backend architecture Used a Microservice architecture with Spring Bootbased services interacting through a combination of REST and Apache Kafka message brokers JBPM eclipsebased developer tools to support the modeling testing and debugging of processes Implemented the associated business modules integration using Spring and Hibernate data mapping Used Spring dependency injection annotations and Spring MVC components to implement business layer and navigation part of application Used various jQuery and Bootstrap plugin like date picker Bootstrap selectors Wrote SQL queries stored procedures and enhanced performance by running explain plans Elastic Cache can be run in the Amazon Virtual Private Cloud Amazon VPC environment and Redis can use Elastic Cache with almost no modification Followed TDD Test Driven Development methodology to write unit tests with JUNIT and Mockito Write automated regression tests using JMeter Environment Java J2EE JDK 1718 RCP AWS SDK Ext JS Git JFC Spring 4x AWS SNSSQS hibernate4x Scala Core Java SOAPRest Web Services Python 27 JavaScript UML HTML5 CSS SASS RAD 7 WAS 8 WSDL SDKs JIRA 5x6x JAXB Linux JAXWS JAX RPC JMS UNIX Selenium NOSQLMongoDB AngularJS15 ReactJS AJAX Apache JMeter jQuery Mule ESB JUnit Maven EMR Java J2EE Developer Verizon Irving TX October 2013 to March 2016 Project Description Responsible for effective design and development practices and help implement the best most responsive most robustsecure most userfriendlyfunctional most networkpowersensitive applications for Verizon Developed gateway application which helps information that need to come inside from PartnersVendors as well as files that go in the reverse direction through EFG It is a gateway between internal applications and external partners Responsibilities Involved in Design Development and Support phases of Software Development Life Cycle SDLC Used AGILE methodology and participated in SCRUM meetings Designed and developed the User Interface components using Spring and maintained the session with Session Beans Implemented scripting with Ajax and XML to dynamically refresh the page contents Implemented JAXB in XML binding Involved in the Development of Spring Framework Controllers Developed Controller for request response paradigm by Spring Controllers using SpringMVC Configured various interceptors for transaction management security Audit loggingdatabase and logging using Spring AOP Data from UI layer sent through JMS to Middle layer and from there using MDB message retrieves Messages and will be sent to MQSeries Used JSON as response type in REST services Developed Data Access Objects DAOs for interacting with the database using JDBC Involved in developing Stored procedures and Triggers on Oracle 10g Used Hibernate Persistence Strategy to interact with database Developed Hibernate mapping files using different mapping strategies such as table per class hierarchy Integrated Hibernate with Spring by coding a Spring Configuration file Configured JMS in the WebSphere application server to send messages on the queue Deployed the application in WebSphere Application Server 601 Developed a tool to retrieve and send data to third party service provider This feature was implemented using REST Performed application performance tuning using J Profiler Built Maven scripts for automated deployment and for the build operation of the entire application Handson experienced working with version controller tools such as ClearCase and Clear Quest as issue tracking software Used RESTFUL client to interact with the services by providing the RESTFUL URL mapping Used Subversion for version control and created automated build scripts Performed unit testing using JUnit Handled production support of the application Documented the flow and functionality of the code for further reference Environment Java J2EE Servlets AJAX Spring JMS HTML5 JavaScript JSP EJB CVS CSS MVC JDBC J Profiler Oracle 10g XML JSON Spring MVC Hibernate MQSeries WebSphere JUnit Subversion Profiler Maven ClearCase Clear Quest Software Developer First Republic Bank San Francisco CA June 2010 to September 2013 Project Description This system is used for assigning the project and to track the status of the project This has two modules like user module and admin module The supervisor assigns tasks to the team approving the timesheet setting goals for the performance review The team member will login into the system and enter the timesheet for the assigned task with the tasks completed This system will help to see the progress and status of the completion of the tasks Responsibilities Involved in the development of various frontend modules Worked in deadline driven environment Developing Java script modules for clientside validations Developed core Java backend tools Developed custom tag libraries for formatting contents in JSPs Developed and deployed EJBs on the server Involved in the production support for the application Developed various serverside components using various J2EE technologies Involved in the development of different user interface screens using JavaScript CSS and HTML Developed presentation modules using Struts framework Developed various controller components using Struts framework Extensively used JDBC to access the database objects Extensively involved in coding of various design patterns Environment Java 14 J2EE Servlets JSP Struts MVC EJB Java Beans SQL PLSQL Design Patterns JDBC JBOSS Log4J Apache ANT JavaScript CSS HTML XML DB2 Stored Procedures Education Bachelors Skills CSS 8 years data base 8 years J2EE 8 years Java 8 years JavaScript 8 years Additional Information Technical Skills Languages Core Java Java 8 Java SE 6 J2SE 50 J2SE 14 J2EE SQL PLSQL Enterprise Java Servlets JSTL Design Patterns JSF JMS JSP JNDI JDBC Log4J API Java security MarkupXML Technologies HTML XHTML JavaScript CSS XML XSD XSLXSLT AJAX jQuery JSON Bootstrap AngularJS Tools Framework Spring Spring MVC Spring Boot Spring batch Spring Security Spring AOP Struts Hibernate JSF Log4J Jasper reports Web Services SOAP RESTful WSDL WebApp Servers Web Sphere WebLogic Apache Tomcat JBoss Jetty Server Database Oracle SQLServer MySQL server Development Tools Eclipse My Eclipse Spring Tool Suite STS OR mapping Hibernate JPA Version Control Tools SourceTree Git Bit bucket Tortoise SVN Testing Tools Others JUnit SoapUI Putty Rational Clear Quest Mockito Fitness Load UI Groovy Spock Jenkins OS Environment Windows Linux UNIX Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns Build Automation ANT MAVEN Gradle",
    "unique_id": "5c6fd6be-b021-4f88-8a2b-60881803b449"
}