{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer MR Cooper Santa Ana CA Authorized to work in the US for any employer Work Experience Senior Python Developer MR Cooper Santa Ana CA July 2018 to Present Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Pyspark performance optimization Worked extensively with AWS support to optimize performance of this Pyspark application Addressed dynamic allocation cluster vs client mode data frame API vs spark SQL in iterative loops Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Involved in data modeling the tables in Cassandra Created several tables as a part of data modeling and determined the performance of the table through load testing with Cassandra stress tool Restoring the backups through sstableloader tool in Cassandra Familiar with all the internal tools of Cassandra Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Worked in using React JS components Forms Events Keys Router Animations and Flux concept Developed user interface by using the React JS Flux for SPA development Implemented react JS code to handle cross browser compatibility issues Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Stats models Gensim Jupyter Notebook and Anaconda Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implementing customer data collection with PySpark analytics Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application Implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 3x Django Cassandra 21 Go language Pyspark Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer XORIENT Pune Maharashtra July 2013 to July 2017 Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Worked with team of developers on Python applications for RISK management Worked on Python Open stack APIs used Python scripts to update content in the database and manipulate files Implemented machine learning schemes using Python libraries Scikitlearn and SciPy Experience in MVC architecture using Django for web based application in OOP concepts Worked on several python packages like Matpoltlib Pillow NumPy SQL Alchemy and sockets Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Worked on front end frame works like CSS Angular JS Bootstrap for development of Web application Developed views and templates with Python and view controller of Django and templating language to create a userfriendly interface using MVC architecture Responsible for Data extraction mining cleansing from several databases like SQL Server Oracle and other external files using SAS Miner SSIS Worked with batch files and ran SAS programs using UNIX shell scripts Extensively Worked with Biostatisticians and clinical data managers to provide SAS program that analyze the data generate reports tables Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Using Git version control tool to coordinate teamdevelopment Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for debugging the project monitored on JIRA Agile Environment Python 330 and above versions Django Windows Linux Angular JS libraries NumPy SciPy Pandas PyCharm PyQuery Matpoltlib SQL Alchemy MVC HTML5 Shell Scripting JSON AWS Apache Web Server SQL UNIX Python Developer ATOS Pune Maharashtra April 2012 to June 2013 Used the Django Framework to develop the application Created specific images using Python Imaging Library for the custom images used for each movie Involved in creating and scheduling of python based ETL scripts and batch files using celery and celery beat Created thin clients for the aggregators in PHP and DotNet Involved in creating data models and database designing and optimizing the database for better performance Worked with and developed RESTful web services SOAP web services net web API 4 Updated and manipulated content and files by using python scripts Implemented web applications in Flask and Tornado and spring frameworks following MVC architecture Used Django configuration to manage URLs and application parameters Used Python scripts to update content in the database and manipulate files Used Python and Django creating graphics XML processing data exchange and business logic implementation Integrated elastic search for image and data searching Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Managed datasets using MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Environment Python 3 Django HTML CSS XML MySQL JavaScript Backbone JS JQuery CSS Bootstrap MongoDB TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Education Masters in Computer Science Sacred Heart University August 2017 to July 2018 Bachelor of Computer Applications in Computer Applications Sardar Vallabh Bhai Institute of Technology Gujrat June 2009 to March 2012 Skills C Django Docker Git Html Javascript Bootstrap Reactjs Jenkins Php Python Flask Matplotlib Numpy Pandas Svn Xml Mysql Oracle Plsql CSS HTML 5 Jquery Links httplinkedincominpavankumar4a8292190",
    "entities": [
        "SQLite",
        "ETL",
        "API",
        "Amazon AWS S3",
        "US",
        "Cassandra Created",
        "Responsible for Data",
        "SQL Server Oracle",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "UNIX",
        "Python Unit",
        "Created",
        "Tornado",
        "OOP",
        "the User Interface",
        "JavaScript",
        "UI",
        "Developed Spark",
        "User Defined Function Involved",
        "the React JS Flux for SPA development Implemented",
        "Pyspark",
        "Integrity Developed",
        "DotNet Involved",
        "React JS",
        "AGILE",
        "SAS",
        "Amazon Web Services AWS",
        "PySpark analytics Implemented of Automation",
        "Spark Actions",
        "JavaScript Pyspark",
        "Transformation and Actions",
        "SQL",
        "Flask",
        "XML",
        "SOAP",
        "the Complete Software Development Life Cycle",
        "Bootstrap",
        "lPythonspan",
        "PHP",
        "Restoring",
        "Software Development Life Cycle SDLC",
        "CSS Angular",
        "RDS",
        "Spark Implemented",
        "MVC"
    ],
    "experience": "Experience Senior Python Developer MR Cooper Santa Ana CA July 2018 to Present Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Pyspark performance optimization Worked extensively with AWS support to optimize performance of this Pyspark application Addressed dynamic allocation cluster vs client mode data frame API vs spark SQL in iterative loops Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Involved in data modeling the tables in Cassandra Created several tables as a part of data modeling and determined the performance of the table through load testing with Cassandra stress tool Restoring the backups through sstableloader tool in Cassandra Familiar with all the internal tools of Cassandra Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Worked in using React JS components Forms Events Keys Router Animations and Flux concept Developed user interface by using the React JS Flux for SPA development Implemented react JS code to handle cross browser compatibility issues Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Stats models Gensim Jupyter Notebook and Anaconda Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implementing customer data collection with PySpark analytics Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application Implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 3x Django Cassandra 21 Go language Pyspark Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer XORIENT Pune Maharashtra July 2013 to July 2017 Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Worked with team of developers on Python applications for RISK management Worked on Python Open stack APIs used Python scripts to update content in the database and manipulate files Implemented machine learning schemes using Python libraries Scikitlearn and SciPy Experience in MVC architecture using Django for web based application in OOP concepts Worked on several python packages like Matpoltlib Pillow NumPy SQL Alchemy and sockets Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Worked on front end frame works like CSS Angular JS Bootstrap for development of Web application Developed views and templates with Python and view controller of Django and templating language to create a userfriendly interface using MVC architecture Responsible for Data extraction mining cleansing from several databases like SQL Server Oracle and other external files using SAS Miner SSIS Worked with batch files and ran SAS programs using UNIX shell scripts Extensively Worked with Biostatisticians and clinical data managers to provide SAS program that analyze the data generate reports tables Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Using Git version control tool to coordinate teamdevelopment Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for debugging the project monitored on JIRA Agile Environment Python 330 and above versions Django Windows Linux Angular JS libraries NumPy SciPy Pandas PyCharm PyQuery Matpoltlib SQL Alchemy MVC HTML5 Shell Scripting JSON AWS Apache Web Server SQL UNIX Python Developer ATOS Pune Maharashtra April 2012 to June 2013 Used the Django Framework to develop the application Created specific images using Python Imaging Library for the custom images used for each movie Involved in creating and scheduling of python based ETL scripts and batch files using celery and celery beat Created thin clients for the aggregators in PHP and DotNet Involved in creating data models and database designing and optimizing the database for better performance Worked with and developed RESTful web services SOAP web services net web API 4 Updated and manipulated content and files by using python scripts Implemented web applications in Flask and Tornado and spring frameworks following MVC architecture Used Django configuration to manage URLs and application parameters Used Python scripts to update content in the database and manipulate files Used Python and Django creating graphics XML processing data exchange and business logic implementation Integrated elastic search for image and data searching Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Managed datasets using MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Environment Python 3 Django HTML CSS XML MySQL JavaScript Backbone JS JQuery CSS Bootstrap MongoDB TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Education Masters in Computer Science Sacred Heart University August 2017 to July 2018 Bachelor of Computer Applications in Computer Applications Sardar Vallabh Bhai Institute of Technology Gujrat June 2009 to March 2012 Skills C Django Docker Git Html Javascript Bootstrap Reactjs Jenkins Php Python Flask Matplotlib Numpy Pandas Svn Xml Mysql Oracle Plsql CSS HTML 5 Jquery Links httplinkedincominpavankumar4a8292190",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Senior",
        "Python",
        "Developer",
        "MR",
        "Cooper",
        "Santa",
        "Ana",
        "CA",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "MR",
        "Cooper",
        "Santa",
        "Ana",
        "CA",
        "July",
        "Present",
        "User",
        "Interface",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "JSON",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "Integrity",
        "merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Pyspark",
        "performance",
        "optimization",
        "AWS",
        "support",
        "performance",
        "Pyspark",
        "application",
        "allocation",
        "cluster",
        "client",
        "mode",
        "data",
        "frame",
        "API",
        "spark",
        "SQL",
        "loops",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "Defined",
        "Function",
        "data",
        "tables",
        "Cassandra",
        "tables",
        "part",
        "data",
        "modeling",
        "performance",
        "table",
        "load",
        "testing",
        "Cassandra",
        "stress",
        "tool",
        "backups",
        "sstableloader",
        "tool",
        "Cassandra",
        "Familiar",
        "tools",
        "Cassandra",
        "Developed",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Embedded",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "React",
        "JS",
        "components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Flux",
        "user",
        "interface",
        "React",
        "JS",
        "Flux",
        "SPA",
        "development",
        "JS",
        "code",
        "cross",
        "browser",
        "compatibility",
        "issues",
        "data",
        "analysis",
        "tools",
        "PythonSQL",
        "Pandas",
        "NumPy",
        "Matplotlib",
        "Stats",
        "Gensim",
        "Jupyter",
        "Notebook",
        "Anaconda",
        "data",
        "queries",
        "lists",
        "references",
        "databases",
        "analysis",
        "Perl",
        "web",
        "automation",
        "web",
        "chat",
        "box",
        "customers",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Maintenance",
        "development",
        "applications",
        "PLSQL",
        "procedures",
        "ETL",
        "modules",
        "shell",
        "scripting",
        "practices",
        "customer",
        "data",
        "collection",
        "PySpark",
        "analytics",
        "Automation",
        "framework",
        "database",
        "testing",
        "AutoEasy",
        "Responsible",
        "web",
        "application",
        "pyspark",
        "Transformation",
        "Actions",
        "Spark",
        "Spark",
        "Actions",
        "Transformations",
        "RDDs",
        "HDFS",
        "Spark",
        "scripts",
        "Scala",
        "IDEs",
        "business",
        "requirement",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "libraries",
        "data",
        "warehousing",
        "application",
        "jobs",
        "SLAs",
        "application",
        "operations",
        "Business",
        "requirements",
        "Complete",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Environment",
        "Python",
        "Django",
        "Cassandra",
        "Go",
        "language",
        "Pyspark",
        "Shell",
        "Scripting",
        "AWS",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "XORIENT",
        "Pune",
        "Maharashtra",
        "July",
        "July",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "Participate",
        "requirement",
        "gathering",
        "analysis",
        "phase",
        "project",
        "business",
        "requirements",
        "workshopsmeetings",
        "business",
        "users",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "Python",
        "stack",
        "APIs",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "machine",
        "learning",
        "schemes",
        "Python",
        "libraries",
        "Scikitlearn",
        "SciPy",
        "Experience",
        "MVC",
        "architecture",
        "Django",
        "web",
        "application",
        "OOP",
        "concepts",
        "python",
        "packages",
        "Matpoltlib",
        "Pillow",
        "NumPy",
        "SQL",
        "Alchemy",
        "sockets",
        "machine",
        "solutions",
        "Python",
        "millions",
        "Twitter",
        "users",
        "data",
        "product",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "form",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "time",
        "series",
        "data",
        "data",
        "manipulation",
        "end",
        "frame",
        "CSS",
        "Angular",
        "JS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "views",
        "templates",
        "Python",
        "controller",
        "Django",
        "language",
        "interface",
        "MVC",
        "architecture",
        "Data",
        "extraction",
        "mining",
        "cleansing",
        "databases",
        "SQL",
        "Server",
        "Oracle",
        "files",
        "SAS",
        "Miner",
        "SSIS",
        "batch",
        "files",
        "SAS",
        "programs",
        "UNIX",
        "shell",
        "scripts",
        "Biostatisticians",
        "data",
        "managers",
        "SAS",
        "program",
        "data",
        "generate",
        "reports",
        "tables",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Git",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "project",
        "JIRA",
        "Agile",
        "Environment",
        "Python",
        "versions",
        "Django",
        "Windows",
        "Linux",
        "Angular",
        "JS",
        "NumPy",
        "SciPy",
        "Pandas",
        "PyCharm",
        "PyQuery",
        "Matpoltlib",
        "SQL",
        "Alchemy",
        "MVC",
        "HTML5",
        "Shell",
        "Scripting",
        "JSON",
        "AWS",
        "Apache",
        "Web",
        "Server",
        "SQL",
        "UNIX",
        "Python",
        "Developer",
        "ATOS",
        "Pune",
        "Maharashtra",
        "April",
        "June",
        "Django",
        "Framework",
        "application",
        "images",
        "Python",
        "Imaging",
        "Library",
        "custom",
        "images",
        "movie",
        "scheduling",
        "python",
        "ETL",
        "scripts",
        "batch",
        "files",
        "celery",
        "celery",
        "clients",
        "aggregators",
        "PHP",
        "DotNet",
        "data",
        "models",
        "database",
        "database",
        "performance",
        "web",
        "services",
        "SOAP",
        "web",
        "services",
        "web",
        "API",
        "content",
        "files",
        "scripts",
        "web",
        "applications",
        "Flask",
        "Tornado",
        "spring",
        "frameworks",
        "MVC",
        "architecture",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "search",
        "image",
        "data",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "datasets",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "MongoDB",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Education",
        "Masters",
        "Computer",
        "Science",
        "Sacred",
        "Heart",
        "University",
        "August",
        "July",
        "Bachelor",
        "Computer",
        "Applications",
        "Computer",
        "Applications",
        "Sardar",
        "Vallabh",
        "Bhai",
        "Institute",
        "Technology",
        "Gujrat",
        "June",
        "March",
        "Skills",
        "C",
        "Django",
        "Docker",
        "Git",
        "Html",
        "Javascript",
        "Bootstrap",
        "Reactjs",
        "Jenkins",
        "Php",
        "Python",
        "Flask",
        "Matplotlib",
        "Numpy",
        "Pandas",
        "Svn",
        "Xml",
        "Mysql",
        "Oracle",
        "Plsql",
        "CSS",
        "HTML",
        "Jquery",
        "Links",
        "httplinkedincominpavankumar4a8292190"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:35:06.332275",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer MR Cooper Santa Ana CA Authorized to work in the US for any employer Work Experience Senior Python Developer MR Cooper Santa Ana CA July 2018 to Present Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Pyspark performance optimization Worked extensively with AWS support to optimize performance of this Pyspark application Addressed dynamic allocation cluster vs client mode data frame API vs spark SQL in iterative loops Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Involved in data modeling the tables in Cassandra Created several tables as a part of data modeling and determined the performance of the table through load testing with Cassandra stress tool Restoring the backups through sstableloader tool in Cassandra Familiar with all the internal tools of Cassandra Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Worked in using React JS components Forms Events Keys Router Animations and Flux concept Developed user interface by using the React JS Flux for SPA development Implemented react JS code to handle cross browser compatibility issues Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Stats models Gensim Jupyter Notebook and Anaconda Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implementing customer data collection with PySpark analytics Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application Implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 3x Django Cassandra 21 Go language Pyspark Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer XORIENT Pune Maharashtra July 2013 to July 2017 Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Participate in requirement gathering and analysis phase of the project in documenting the business requirements by conducting workshopsmeetings with various business users Worked with team of developers on Python applications for RISK management Worked on Python Open stack APIs used Python scripts to update content in the database and manipulate files Implemented machine learning schemes using Python libraries Scikitlearn and SciPy Experience in MVC architecture using Django for web based application in OOP concepts Worked on several python packages like Matpoltlib Pillow NumPy SQL Alchemy and sockets Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Worked on front end frame works like CSS Angular JS Bootstrap for development of Web application Developed views and templates with Python and view controller of Django and templating language to create a userfriendly interface using MVC architecture Responsible for Data extraction mining cleansing from several databases like SQL Server Oracle and other external files using SAS Miner SSIS Worked with batch files and ran SAS programs using UNIX shell scripts Extensively Worked with Biostatisticians and clinical data managers to provide SAS program that analyze the data generate reports tables Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Using Git version control tool to coordinate teamdevelopment Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript also used Bootstrap as a mechanism to manage and organize the html page layout Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for debugging the project monitored on JIRA Agile Environment Python 330 and above versions Django Windows Linux Angular JS libraries NumPy SciPy Pandas PyCharm PyQuery Matpoltlib SQL Alchemy MVC HTML5 Shell Scripting JSON AWS Apache Web Server SQL UNIX Python Developer ATOS Pune Maharashtra April 2012 to June 2013 Used the Django Framework to develop the application Created specific images using Python Imaging Library for the custom images used for each movie Involved in creating and scheduling of python based ETL scripts and batch files using celery and celery beat Created thin clients for the aggregators in PHP and DotNet Involved in creating data models and database designing and optimizing the database for better performance Worked with and developed RESTful web services SOAP web services net web API 4 Updated and manipulated content and files by using python scripts Implemented web applications in Flask and Tornado and spring frameworks following MVC architecture Used Django configuration to manage URLs and application parameters Used Python scripts to update content in the database and manipulate files Used Python and Django creating graphics XML processing data exchange and business logic implementation Integrated elastic search for image and data searching Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Managed datasets using MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Environment Python 3 Django HTML CSS XML MySQL JavaScript Backbone JS JQuery CSS Bootstrap MongoDB TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Education Masters in Computer Science Sacred Heart University August 2017 to July 2018 Bachelor of Computer Applications in Computer Applications Sardar Vallabh Bhai Institute of Technology Gujrat June 2009 to March 2012 Skills C Django Docker Git Html Javascript Bootstrap Reactjs Jenkins Php Python Flask Matplotlib Numpy Pandas Svn Xml Mysql Oracle Plsql CSS HTML 5 Jquery Links httplinkedincominpavankumar4a8292190",
    "unique_id": "6f01babd-d944-455d-8c99-f7b97a30b2bd"
}