{
    "clean_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER CITIBANK New York NY Extensive experience in Adobe Flex Adobe Flash ActionScript and ColdFusion to build highly rich web application development sites for internal property information and gathering entering property data Real time reporting in internal SharePoint site using Adobe Flex APIs along with Micro strategy APIs Involved in Adobe Flex development exposure of Flex layout and navigation event handling pop up dialogs menus and skinning Utilize ActionScript 30 to develop and maintain the Flash and livestreaming components of the companys websites Utilize ActionScript 30 Adobe AIR to develop and maintain several of the companys products including its flagship product Experience in application development using Python Django HTML5 CSS Git JavaJ2EE JavaScript Oracle PostgreSQL and SQLite Experience with ORMs such as Django and SQL Alchamy database design and normalization Proficient skills of using PyUnit PyTest for writing unit test cases Experience objectoriented programming OOP concepts using Python C and PHP Strong Experience in webbased UI design and interface development using JSP HTML DHTML CSS Bootstrap JavaScript Angular JS Backbone JS JQUERY AJAX and JSON Designed and implemented large scale business critical systems using Object oriented design and Programming concepts using Python and Django Involved in web application development using ASPNet HTML5 JavaScript jQuery Knockout Bootstrap PHP and Action script 3 Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Expertise in developing different web applications implementing the ModelViewController MVC architectures using Full stack frameworks such as Django Zope and TurboGears Experience in using Eclipse PyCharm Visual Studio Pyscripter and Sublime Text while developing different application in python Good knowledge on SOAP and JSON web services Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Experienced in web applications development using Django Python Flask Python and Nodejs Angularjs JQuery while using HTMLCSSJS for serverside rendered applications Knowledge on OpenStack software open source cloud computing software Designed and developed the UI for the website with HTML CSS JavaScript AJAX and Angular JS Designed and developed Cloud Service projects and deployed to Web Apps PaaS and IaaS and configured SQL Server Master Data Services MDS in Windows Azure IaaS Expertise in CRUD operations with Mango DB using mongoose node module Expertise using and deploying enterprise applications in JBoss AS and Tomcat Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Worked on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Experience in NoSQL databases like Apache Cassandra 12 20 and 21 and MongoDB 26 24 Orient DB Experience in using Git GitHub and Amazon EC2 and deployment using Heroku Authorized to work in the US for any employer Work Experience PYTHON DEVELOPER CITIBANK New York NY January 2018 to Present Responsibility Designed and managed build and release methodologies using Witbe Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and develop CPD Test scripts for Droplet Generator steering system with C C Python Linux Internal and driver interfaces Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Developed the front end of the web pages using HTML5 CSS3 JavaScript Angular JS jQuery and AJAX Decent experience in UNIX in developing the application and familiar with all of its commands Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Deployed Django web application in Apache web server and Carpathias cloud operations Written numerous Django views class based and templates for page rendering Implemented the Backbone JS for DOM manipulation as this is the light web framework compared to Angular JS Utilized Python Libraries like Boto3 NumPy for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Implemented SOA based web services designed and built SOAP web service interface Created SOAP web services and SOAP handlers to store the SOAP messages Performed Pytest and unit test on them Extracted XML code from script for testing Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Installed Witbe Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Built various Flash mp3 players with ActionScript 3 reusable object code Troubleshoot object classes for ActionScriptAMFPHP to optimize image compression Worked on numerous Python modules Built  context runcontext and other python objects thats reused by application Optimized the code using smart pointers profilers and C Standard template library Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Converted Photoshop smart objects into animations using Actionscript 3 Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Environment Python 27 Django 17 HTML5 CSS XML C Numpy pandas KML SQL AWS JavaScript Git Hub Angular JS JQuery CSS Bootstrap Selenium integration testing Ant PyUnit Maven Git ActionScript 30 Angularjs Flex Jenkins Linux RESTful MS SQL Server Ubuntu server Windows 12 Server Amazon s3 Jenkins Map Box SQL Mongo DB GitHub Bit Bucket Linux and Windows PYTHON DEVELOPER BANK OF AMERICA Irving TX Responsibilities Jan2016 Dec2017 Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive webbased solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using PythonMySQL connector and retrieved information using MySQL  Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the Testdriven methodology and designed the unit tests using Python Unit test framework Used standard Python modules eg CSV Robot parser Iter tools Pickle Jinja2 Xml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Query and set up employee registration and login using Python PostgreSQL We use a multiple row data storage strategy called MVCC to make effective PostgreSQL responsive in Querying and storing in database Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Fetched twitter feeds for certain important keyword using Pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes for Learning Management System and Used Python Flask framework to build modular maintainable applications Automated data movements using Python scripts Involved in splitting validating and processing of files Created core Python API which will be using among multiple modules Uploaded statistics to MySQL for analysis and logging Developed complex SQL queries for testing the database functionality Used UNIX server for application deployment and configuration Environment Python Django Linux HTML CSS Shell Scripting PostgreSQL MySQL PythonTwitter Library Flask Web services SVN Pandas FileZilla etc PYTHON DEVELOPER ING WINDSOR New York NY January 2015 to December 2015 Responsibilities Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote Test Automation Script for deployment of AWS and Company Web API using python package puppet configuration tool to update and check historical pumping data from AWS Compare the existing data and historical data and create performance chart for client Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Wrote program to fetch data and from amazon cloud and send the client according their requirement Passed query and wrote script to automate machine alarm data with timestamp to engineer Used Python and Pandas library built data analysis graph for documentation and record Worked with Blender script built addon and customization of blender interface Used SPSS tool for statistical programming and computational techniques for large data sets and quantitative analysis Used SPSS tool for Visualization techniques for summarizing complex data analysis using Python Independently developed and implemented analysis workflow and quality practices including workflow optimization process standardization configuration management of analysis files and software and verification and validation VV of models Using Numerical equation built application and do 2D finite Element analysis using python language Used Django database APIs to access database objects Generated graphical reports using python package NumPy and Matplotlib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Wrote programs to parse excel file and process many user data with data validations Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Maintained data with different levels of access privileges Environment Python27 Amazon Cloud Blender C Macros OracleDB Debian Apache Server pandas Django MySQL Linux HTML GIT CSS JavaScript Education Bachelors RGPV UNIVERSITY 2014 Skills Amazon elastic block storage Less than 1 year Apache cassandra 1 year Asteradata 1 year Aws 2 years Bootstrap 1 year C 1 year Cassandra 1 year Ebs Less than 1 year Hadoop Less than 1 year Html5 1 year Java 1 year Linux 2 years Mysql 2 years Oracle Less than 1 year Php 1 year Xml 1 year Xsl Less than 1 year Jquery CSS Git Javascript Additional Information SKILLS XML X query XSL PHP Mongo DB Cassandra Hadoop Environment GitHub Bootstrap Test Driven Development HTML5 Angularjs 1520 40 Reactjs Framework C JAVA script CSS3 MySQL Linux ORACLE TOOLS AWS Cloud Watch EBS system Hadoop Environment PHP C JAVA Script ORACLE Bootstrap Angularjs Reactjs",
    "entities": [
        "CSS HTML JavaScript",
        "Python Flask",
        "ActionScriptAMFPHP",
        "Amazon AWS architecture",
        "Using Numerical",
        "New York",
        "Actionscript 3",
        "Angular JS Utilized Python Libraries like Boto3 NumPy",
        "UNIX",
        "Sublime Text",
        "GitHub Nexus",
        "Design Patterns",
        "Cloud Service",
        "Pythontwitter",
        "Query",
        "OpenStack",
        "GitHub Bootstrap Test Driven Development HTML5",
        "Amazon Web Services AWS",
        "Panda",
        "CPD Test",
        "SOAP",
        "Developed Simple Object Access Protocol",
        "RGPV UNIVERSITY",
        "Maintained",
        "SPSS",
        "AJAX Involved",
        "Automated",
        "GitHub Bit Bucket",
        "Amazon",
        "Hadoop Environment PHP C",
        "Python Script",
        "Python",
        "Flex",
        "Amazon AWS S3",
        "Developed",
        "AWS S3",
        "Oracle Less than",
        "Python Unit",
        "TurboGears Experience",
        "AWS Elastic Load Balancing ELB",
        "AWS Compare",
        "Droplet Generator",
        "HTML5",
        "Linux",
        "JSP",
        "IaaS",
        "Windows Azure IaaS Expertise",
        "MVC Singleton",
        "Micro",
        "the Data Security",
        "DOM",
        "Witbe Tool Designed",
        "RDS",
        "Celery",
        "Views",
        "CLI",
        "Windows PYTHON DEVELOPER BANK OF AMERICA Irving TX Responsibilities Jan2016",
        "PyQt",
        "JavaScript Git",
        "MVC",
        "GIT",
        "Development of Python",
        "API",
        "Build JSON",
        "US",
        "Model APIs Views",
        "Developed MVC",
        "JAVA Script ORACLE Bootstrap Angularjs Reactjs",
        "AWS",
        "Ant PyUnit",
        "JBoss AS",
        "HTML5 CSS JavaScript",
        "Apache",
        "KML",
        "SQL Injections Vulnerabilities Wrote Test Automation Script",
        "HTML",
        "Implemented Data",
        "Bash Experience",
        "SQL",
        "Mango DB",
        "Python Django",
        "Administrators",
        "Testdriven",
        "Created PHPMySQL",
        "User Service",
        "JavaScript Oracle PostgreSQL",
        "Pandas",
        "AJAX Expertise",
        "Querying",
        "CRUD",
        "SQL Server Master Data Services MDS",
        "Performed",
        "Created UI",
        "Djangos",
        "JavaScript",
        "Created SOAP",
        "UI",
        "Python Independently",
        "Templates",
        "AJAX Decent",
        "Django Improved",
        "HTML CSS JavaScript AJAX",
        "DB Cassandra Hadoop",
        "Present Responsibility Designed",
        "Carpathias",
        "SharePoint",
        "Learning Management System",
        "ColdFusion",
        "HTMLCSSJS",
        "Developed UI",
        "PHP",
        "NoSQL",
        "Tableau",
        "Jquery CSS Git Javascript",
        "node module Expertise"
    ],
    "experience": "Experience in application development using Python Django HTML5 CSS Git JavaJ2EE JavaScript Oracle PostgreSQL and SQLite Experience with ORMs such as Django and SQL Alchamy database design and normalization Proficient skills of using PyUnit PyTest for writing unit test cases Experience objectoriented programming OOP concepts using Python C and PHP Strong Experience in webbased UI design and interface development using JSP HTML DHTML CSS Bootstrap JavaScript Angular JS Backbone JS JQUERY AJAX and JSON Designed and implemented large scale business critical systems using Object oriented design and Programming concepts using Python and Django Involved in web application development using ASPNet HTML5 JavaScript jQuery Knockout Bootstrap PHP and Action script 3 Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Expertise in developing different web applications implementing the ModelViewController MVC architectures using Full stack frameworks such as Django Zope and TurboGears Experience in using Eclipse PyCharm Visual Studio Pyscripter and Sublime Text while developing different application in python Good knowledge on SOAP and JSON web services Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Experienced in web applications development using Django Python Flask Python and Nodejs Angularjs JQuery while using HTMLCSSJS for serverside rendered applications Knowledge on OpenStack software open source cloud computing software Designed and developed the UI for the website with HTML CSS JavaScript AJAX and Angular JS Designed and developed Cloud Service projects and deployed to Web Apps PaaS and IaaS and configured SQL Server Master Data Services MDS in Windows Azure IaaS Expertise in CRUD operations with Mango DB using mongoose node module Expertise using and deploying enterprise applications in JBoss AS and Tomcat Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Worked on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Experience in NoSQL databases like Apache Cassandra 12 20 and 21 and MongoDB 26 24 Orient DB Experience in using Git GitHub and Amazon EC2 and deployment using Heroku Authorized to work in the US for any employer Work Experience PYTHON DEVELOPER CITIBANK New York NY January 2018 to Present Responsibility Designed and managed build and release methodologies using Witbe Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and develop CPD Test scripts for Droplet Generator steering system with C C Python Linux Internal and driver interfaces Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Developed the front end of the web pages using HTML5 CSS3 JavaScript Angular JS jQuery and AJAX Decent experience in UNIX in developing the application and familiar with all of its commands Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Deployed Django web application in Apache web server and Carpathias cloud operations Written numerous Django views class based and templates for page rendering Implemented the Backbone JS for DOM manipulation as this is the light web framework compared to Angular JS Utilized Python Libraries like Boto3 NumPy for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Implemented SOA based web services designed and built SOAP web service interface Created SOAP web services and SOAP handlers to store the SOAP messages Performed Pytest and unit test on them Extracted XML code from script for testing Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Installed Witbe Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Built various Flash mp3 players with ActionScript 3 reusable object code Troubleshoot object classes for ActionScriptAMFPHP to optimize image compression Worked on numerous Python modules Built   context runcontext and other python objects that s reused by application Optimized the code using smart pointers profilers and C Standard template library Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Converted Photoshop smart objects into animations using Actionscript 3 Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Environment Python 27 Django 17 HTML5 CSS XML C Numpy pandas KML SQL AWS JavaScript Git Hub Angular JS JQuery CSS Bootstrap Selenium integration testing Ant PyUnit Maven Git ActionScript 30 Angularjs Flex Jenkins Linux RESTful MS SQL Server Ubuntu server Windows 12 Server Amazon s3 Jenkins Map Box SQL Mongo DB GitHub Bit Bucket Linux and Windows PYTHON DEVELOPER BANK OF AMERICA Irving TX Responsibilities Jan2016 Dec2017 Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive webbased solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using PythonMySQL connector and retrieved information using MySQL   Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the Testdriven methodology and designed the unit tests using Python Unit test framework Used standard Python modules eg CSV Robot parser Iter tools Pickle Jinja2 Xml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Query and set up employee registration and login using Python PostgreSQL We use a multiple row data storage strategy called MVCC to make effective PostgreSQL responsive in Querying and storing in database Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Fetched twitter feeds for certain important keyword using Pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes for Learning Management System and Used Python Flask framework to build modular maintainable applications Automated data movements using Python scripts Involved in splitting validating and processing of files Created core Python API which will be using among multiple modules Uploaded statistics to MySQL for analysis and logging Developed complex SQL queries for testing the database functionality Used UNIX server for application deployment and configuration Environment Python Django Linux HTML CSS Shell Scripting PostgreSQL MySQL PythonTwitter Library Flask Web services SVN Pandas FileZilla etc PYTHON DEVELOPER ING WINDSOR New York NY January 2015 to December 2015 Responsibilities Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote Test Automation Script for deployment of AWS and Company Web API using python package puppet configuration tool to update and check historical pumping data from AWS Compare the existing data and historical data and create performance chart for client Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Wrote program to fetch data and from amazon cloud and send the client according their requirement Passed query and wrote script to automate machine alarm data with timestamp to engineer Used Python and Pandas library built data analysis graph for documentation and record Worked with Blender script built addon and customization of blender interface Used SPSS tool for statistical programming and computational techniques for large data sets and quantitative analysis Used SPSS tool for Visualization techniques for summarizing complex data analysis using Python Independently developed and implemented analysis workflow and quality practices including workflow optimization process standardization configuration management of analysis files and software and verification and validation VV of models Using Numerical equation built application and do 2D finite Element analysis using python language Used Django database APIs to access database objects Generated graphical reports using python package NumPy and Matplotlib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Wrote programs to parse excel file and process many user data with data validations Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Maintained data with different levels of access privileges Environment Python27 Amazon Cloud Blender C Macros OracleDB Debian Apache Server pandas Django MySQL Linux HTML GIT CSS JavaScript Education Bachelors RGPV UNIVERSITY 2014 Skills Amazon elastic block storage Less than 1 year Apache cassandra 1 year Asteradata 1 year Aws 2 years Bootstrap 1 year C 1 year Cassandra 1 year Ebs Less than 1 year Hadoop Less than 1 year Html5 1 year Java 1 year Linux 2 years Mysql 2 years Oracle Less than 1 year Php 1 year Xml 1 year Xsl Less than 1 year Jquery CSS Git Javascript Additional Information SKILLS XML X query XSL PHP Mongo DB Cassandra Hadoop Environment GitHub Bootstrap Test Driven Development HTML5 Angularjs 1520 40 Reactjs Framework C JAVA script CSS3 MySQL Linux ORACLE TOOLS AWS Cloud Watch EBS system Hadoop Environment PHP C JAVA Script ORACLE Bootstrap Angularjs Reactjs",
    "extracted_keywords": [
        "PYTHON",
        "DEVELOPER",
        "lPYTHONspan",
        "span",
        "lDEVELOPERspan",
        "PYTHON",
        "DEVELOPER",
        "CITIBANK",
        "New",
        "York",
        "NY",
        "experience",
        "Adobe",
        "Flex",
        "Adobe",
        "Flash",
        "ActionScript",
        "ColdFusion",
        "web",
        "application",
        "development",
        "sites",
        "property",
        "information",
        "gathering",
        "property",
        "data",
        "time",
        "SharePoint",
        "site",
        "Adobe",
        "Flex",
        "APIs",
        "Micro",
        "strategy",
        "APIs",
        "Adobe",
        "Flex",
        "development",
        "exposure",
        "Flex",
        "layout",
        "navigation",
        "event",
        "pop",
        "dialogs",
        "menus",
        "Utilize",
        "ActionScript",
        "Flash",
        "components",
        "companys",
        "Utilize",
        "ActionScript",
        "Adobe",
        "AIR",
        "companys",
        "products",
        "flagship",
        "product",
        "Experience",
        "application",
        "development",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "Git",
        "JavaJ2EE",
        "JavaScript",
        "Oracle",
        "PostgreSQL",
        "SQLite",
        "Experience",
        "ORMs",
        "Django",
        "SQL",
        "Alchamy",
        "database",
        "design",
        "normalization",
        "skills",
        "PyUnit",
        "PyTest",
        "unit",
        "test",
        "cases",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "Strong",
        "Experience",
        "UI",
        "design",
        "interface",
        "development",
        "JSP",
        "HTML",
        "DHTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQUERY",
        "AJAX",
        "JSON",
        "scale",
        "business",
        "systems",
        "Object",
        "design",
        "Programming",
        "concepts",
        "Python",
        "Django",
        "web",
        "application",
        "development",
        "ASPNet",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Knockout",
        "Bootstrap",
        "PHP",
        "Action",
        "script",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "webpages",
        "HTML5",
        "CSS",
        "JavaScript",
        "AJAX",
        "Expertise",
        "web",
        "applications",
        "ModelViewController",
        "MVC",
        "stack",
        "frameworks",
        "Django",
        "Zope",
        "TurboGears",
        "Experience",
        "Eclipse",
        "PyCharm",
        "Visual",
        "Studio",
        "Pyscripter",
        "Sublime",
        "Text",
        "application",
        "knowledge",
        "SOAP",
        "JSON",
        "web",
        "services",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "environment",
        "knowledge",
        "AWS",
        "services",
        "Elastic",
        "Compute",
        "Cloud",
        "EC2",
        "Elastic",
        "Loadbalancers",
        "Elastic",
        "Container",
        "Service",
        "Docker",
        "Containers",
        "S3",
        "Elastic",
        "Beanstalk",
        "Cloud",
        "Front",
        "Elastic",
        "Filesystem",
        "RDS",
        "DMS",
        "VPC",
        "Route53",
        "CloudWatch",
        "CloudTrail",
        "CloudFormation",
        "IAM",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "Python",
        "Nodejs",
        "Angularjs",
        "JQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "Knowledge",
        "OpenStack",
        "software",
        "source",
        "cloud",
        "computing",
        "software",
        "UI",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "JS",
        "Cloud",
        "Service",
        "projects",
        "Web",
        "Apps",
        "PaaS",
        "IaaS",
        "SQL",
        "Server",
        "Master",
        "Data",
        "Services",
        "MDS",
        "Windows",
        "Azure",
        "IaaS",
        "Expertise",
        "CRUD",
        "operations",
        "Mango",
        "DB",
        "node",
        "module",
        "Expertise",
        "enterprise",
        "applications",
        "JBoss",
        "AS",
        "Tomcat",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Experience",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "frameworks",
        "DJANGO",
        "life",
        "cycle",
        "policies",
        "data",
        "AWS",
        "S3",
        "AWS",
        "Glacier",
        "AWS",
        "EC2",
        "S3",
        "CLI",
        "tools",
        "Experience",
        "NoSQL",
        "Apache",
        "Cassandra",
        "Orient",
        "DB",
        "Experience",
        "Git",
        "GitHub",
        "Amazon",
        "EC2",
        "deployment",
        "Heroku",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "PYTHON",
        "DEVELOPER",
        "CITIBANK",
        "New",
        "York",
        "NY",
        "January",
        "Present",
        "Responsibility",
        "build",
        "methodologies",
        "Witbe",
        "Tool",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "Design",
        "CPD",
        "Test",
        "scripts",
        "Droplet",
        "Generator",
        "steering",
        "system",
        "C",
        "C",
        "Python",
        "Linux",
        "Internal",
        "driver",
        "interfaces",
        "Object",
        "Access",
        "Protocol",
        "SOAP",
        "web",
        "services",
        "applications",
        "User",
        "Service",
        "applications",
        "Representational",
        "State",
        "Transfer",
        "REST",
        "Web",
        "services",
        "end",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "AJAX",
        "experience",
        "UNIX",
        "application",
        "commands",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Experience",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Deployed",
        "Django",
        "web",
        "application",
        "Apache",
        "web",
        "server",
        "Carpathias",
        "cloud",
        "operations",
        "Django",
        "class",
        "templates",
        "page",
        "Backbone",
        "JS",
        "DOM",
        "manipulation",
        "web",
        "framework",
        "JS",
        "Python",
        "Libraries",
        "NumPy",
        "AWS",
        "Pandas",
        "library",
        "Analysis",
        "Angularjs",
        "client",
        "application",
        "SOA",
        "web",
        "services",
        "SOAP",
        "web",
        "service",
        "interface",
        "Created",
        "SOAP",
        "web",
        "services",
        "SOAP",
        "handlers",
        "SOAP",
        "messages",
        "Pytest",
        "unit",
        "test",
        "XML",
        "code",
        "script",
        "Build",
        "JSON",
        "objects",
        "framework",
        "JavaScript",
        "flow",
        "page",
        "performance",
        "issues",
        "Developed",
        "web",
        "services",
        "Python",
        "Django",
        "REST",
        "framework",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "communication",
        "testing",
        "Witbe",
        "Python",
        "Jira",
        "test",
        "Rail",
        "part",
        "server",
        "setups",
        "AWS",
        "server",
        "deployment",
        "data",
        "processing",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "Nexus",
        "Maven",
        "AWS",
        "AMIs",
        "Flash",
        "mp3",
        "players",
        "ActionScript",
        "object",
        "code",
        "Troubleshoot",
        "object",
        "classes",
        "ActionScriptAMFPHP",
        "image",
        "compression",
        "Python",
        "modules",
        "context",
        "runcontext",
        "python",
        "application",
        "code",
        "pointers",
        "profilers",
        "C",
        "Standard",
        "template",
        "library",
        "Build",
        "JSON",
        "framework",
        "JavaScript",
        "flow",
        "page",
        "performance",
        "issues",
        "Converted",
        "Photoshop",
        "objects",
        "animations",
        "Actionscript",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "AWS",
        "highavailability",
        "AWS",
        "Elastic",
        "Load",
        "Balancing",
        "ELB",
        "balance",
        "instances",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "Celery",
        "task",
        "queue",
        "RabbitMQ",
        "broker",
        "tasks",
        "task",
        "object",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "Views",
        "Templates",
        "Python",
        "website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "language",
        "Developed",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "webpages",
        "HTML5",
        "CSS",
        "JavaScript",
        "AJAX",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "report",
        "application",
        "Tableau",
        "production",
        "site",
        "Apache",
        "Servers",
        "mod",
        "Python",
        "AWS",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "C",
        "Numpy",
        "KML",
        "SQL",
        "JavaScript",
        "Git",
        "Hub",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Selenium",
        "integration",
        "testing",
        "Ant",
        "PyUnit",
        "Maven",
        "Git",
        "ActionScript",
        "Angularjs",
        "Flex",
        "Jenkins",
        "Linux",
        "RESTful",
        "MS",
        "SQL",
        "Server",
        "Ubuntu",
        "server",
        "Windows",
        "Server",
        "Amazon",
        "s3",
        "Jenkins",
        "Map",
        "Box",
        "SQL",
        "Mongo",
        "DB",
        "GitHub",
        "Bit",
        "Bucket",
        "Linux",
        "Windows",
        "PYTHON",
        "DEVELOPER",
        "BANK",
        "AMERICA",
        "Irving",
        "TX",
        "Responsibilities",
        "Jan2016",
        "Django",
        "frameworks",
        "Python",
        "webpages",
        "tools",
        "monitoring",
        "notification",
        "Python",
        "application",
        "HTML",
        "Java",
        "script",
        "design",
        "development",
        "data",
        "structures",
        "directories",
        "tuples",
        "inheritance",
        "features",
        "algorithms",
        "networks",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "tandem",
        "Flash",
        "developer",
        "data",
        "query",
        "string",
        "database",
        "Model",
        "APIs",
        "Views",
        "python",
        "solution",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Data",
        "tables",
        "update",
        "patient",
        "records",
        "policy",
        "information",
        "PyQt",
        "module",
        "status",
        "Apache",
        "Cassandra",
        "instance",
        "python",
        "Developed",
        "MVC",
        "prototype",
        "replacement",
        "product",
        "Django",
        "Data",
        "Security",
        "report",
        "data",
        "UI",
        "JavaScript",
        "HTML5CSS3",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "connector",
        "information",
        "MySQL",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "Pytest",
        "application",
        "Testdriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "modules",
        "CSV",
        "Robot",
        "parser",
        "Iter",
        "tools",
        "Pickle",
        "Jinja2",
        "Xml",
        "development",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "RESTAPI",
        "Query",
        "employee",
        "registration",
        "login",
        "Python",
        "PostgreSQL",
        "row",
        "data",
        "storage",
        "strategy",
        "MVCC",
        "PostgreSQL",
        "Querying",
        "database",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "twitter",
        "keyword",
        "Pythontwitter",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "Learning",
        "Management",
        "System",
        "Python",
        "Flask",
        "framework",
        "applications",
        "data",
        "movements",
        "Python",
        "scripts",
        "splitting",
        "processing",
        "files",
        "core",
        "Python",
        "API",
        "modules",
        "statistics",
        "MySQL",
        "analysis",
        "SQL",
        "database",
        "functionality",
        "UNIX",
        "server",
        "application",
        "deployment",
        "configuration",
        "Environment",
        "Python",
        "Django",
        "Linux",
        "HTML",
        "CSS",
        "Shell",
        "Scripting",
        "PostgreSQL",
        "MySQL",
        "PythonTwitter",
        "Library",
        "Flask",
        "Web",
        "services",
        "SVN",
        "Pandas",
        "FileZilla",
        "PYTHON",
        "DEVELOPER",
        "ING",
        "New",
        "York",
        "NY",
        "January",
        "December",
        "Responsibilities",
        "Web",
        "application",
        "penetration",
        "testing",
        "process",
        "web",
        "process",
        "SQL",
        "Injections",
        "Vulnerabilities",
        "Wrote",
        "Test",
        "Automation",
        "Script",
        "deployment",
        "AWS",
        "Company",
        "Web",
        "API",
        "package",
        "puppet",
        "configuration",
        "tool",
        "pumping",
        "data",
        "AWS",
        "data",
        "data",
        "performance",
        "chart",
        "client",
        "Wrote",
        "automate",
        "Python",
        "Script",
        "testing",
        "program",
        "machine",
        "detection",
        "alarm",
        "experience",
        "Amazon",
        "cloud",
        "Wrote",
        "program",
        "data",
        "amazon",
        "cloud",
        "client",
        "requirement",
        "query",
        "script",
        "machine",
        "alarm",
        "data",
        "timestamp",
        "Used",
        "Python",
        "Pandas",
        "library",
        "data",
        "analysis",
        "graph",
        "documentation",
        "record",
        "Worked",
        "Blender",
        "script",
        "addon",
        "customization",
        "blender",
        "interface",
        "SPSS",
        "tool",
        "programming",
        "techniques",
        "data",
        "sets",
        "analysis",
        "SPSS",
        "tool",
        "Visualization",
        "techniques",
        "data",
        "analysis",
        "Python",
        "analysis",
        "workflow",
        "quality",
        "practices",
        "optimization",
        "process",
        "standardization",
        "configuration",
        "management",
        "analysis",
        "files",
        "software",
        "verification",
        "validation",
        "VV",
        "models",
        "Numerical",
        "equation",
        "application",
        "2D",
        "finite",
        "Element",
        "analysis",
        "language",
        "Django",
        "database",
        "APIs",
        "database",
        "reports",
        "package",
        "NumPy",
        "Matplotlib",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "data",
        "HTML",
        "format",
        "data",
        "files",
        "Wrote",
        "programs",
        "file",
        "user",
        "data",
        "data",
        "validations",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "data",
        "levels",
        "access",
        "privileges",
        "Environment",
        "Python27",
        "Amazon",
        "Cloud",
        "Blender",
        "C",
        "Macros",
        "Debian",
        "Apache",
        "Server",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "GIT",
        "CSS",
        "JavaScript",
        "Education",
        "Bachelors",
        "RGPV",
        "UNIVERSITY",
        "Skills",
        "Amazon",
        "block",
        "storage",
        "year",
        "Apache",
        "cassandra",
        "year",
        "Asteradata",
        "year",
        "Aws",
        "years",
        "Bootstrap",
        "year",
        "C",
        "year",
        "Cassandra",
        "year",
        "Ebs",
        "year",
        "Hadoop",
        "year",
        "Html5",
        "year",
        "Java",
        "year",
        "Linux",
        "years",
        "Mysql",
        "years",
        "Oracle",
        "year",
        "Php",
        "year",
        "Xml",
        "year",
        "Xsl",
        "year",
        "Jquery",
        "CSS",
        "Git",
        "Javascript",
        "Additional",
        "Information",
        "SKILLS",
        "XML",
        "X",
        "query",
        "XSL",
        "PHP",
        "Mongo",
        "DB",
        "Cassandra",
        "Hadoop",
        "Environment",
        "GitHub",
        "Bootstrap",
        "Test",
        "Driven",
        "Development",
        "HTML5",
        "Angularjs",
        "Reactjs",
        "Framework",
        "C",
        "JAVA",
        "script",
        "CSS3",
        "MySQL",
        "Linux",
        "ORACLE",
        "TOOLS",
        "AWS",
        "Cloud",
        "EBS",
        "system",
        "Hadoop",
        "Environment",
        "PHP",
        "C",
        "JAVA",
        "Script",
        "ORACLE",
        "Bootstrap",
        "Angularjs",
        "Reactjs"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:14:24.225272",
    "resume_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER CITIBANK New York NY Extensive experience in Adobe Flex Adobe Flash ActionScript and ColdFusion to build highly rich web application development sites for internal property information and gathering entering property data Real time reporting in internal SharePoint site using Adobe Flex APIs along with Micro strategy APIs Involved in Adobe Flex development exposure of Flex layout and navigation event handling pop up dialogs menus and skinning Utilize ActionScript 30 to develop and maintain the Flash and livestreaming components of the companys websites Utilize ActionScript 30 Adobe AIR to develop and maintain several of the companys products including its flagship product Experience in application development using Python Django HTML5 CSS Git JavaJ2EE JavaScript Oracle PostgreSQL and SQLite Experience with ORMs such as Django and SQL Alchamy database design and normalization Proficient skills of using PyUnit PyTest for writing unit test cases Experience objectoriented programming OOP concepts using Python C and PHP Strong Experience in webbased UI design and interface development using JSP HTML DHTML CSS Bootstrap JavaScript Angular JS Backbone JS JQUERY AJAX and JSON Designed and implemented large scale business critical systems using Object oriented design and Programming concepts using Python and Django Involved in web application development using ASPNet HTML5 JavaScript jQuery Knockout Bootstrap PHP and Action script 3 Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Expertise in developing different web applications implementing the ModelViewController MVC architectures using Full stack frameworks such as Django Zope and TurboGears Experience in using Eclipse PyCharm Visual Studio Pyscripter and Sublime Text while developing different application in python Good knowledge on SOAP and JSON web services Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Experienced in web applications development using Django Python Flask Python and Nodejs Angularjs JQuery while using HTMLCSSJS for serverside rendered applications Knowledge on OpenStack software open source cloud computing software Designed and developed the UI for the website with HTML CSS JavaScript AJAX and Angular JS Designed and developed Cloud Service projects and deployed to Web Apps PaaS and IaaS and configured SQL Server Master Data Services MDS in Windows Azure IaaS Expertise in CRUD operations with Mango DB using mongoose node module Expertise using and deploying enterprise applications in JBoss AS and Tomcat Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Experience in using Design Patterns such as MVC Singleton and frameworks such as DJANGO Worked on setting up the life cycle policies to back the data from AWS S3 to AWS Glacier Worked with various AWS EC2 and S3 CLI tools Experience in NoSQL databases like Apache Cassandra 12 20 and 21 and MongoDB 26 24 Orient DB Experience in using Git GitHub and Amazon EC2 and deployment using Heroku Authorized to work in the US for any employer Work Experience PYTHON DEVELOPER CITIBANK New York NY January 2018 to Present Responsibility Designed and managed build and release methodologies using Witbe Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and develop CPD Test scripts for Droplet Generator steering system with C C Python Linux Internal and driver interfaces Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Developed the front end of the web pages using HTML5 CSS3 JavaScript Angular JS jQuery and AJAX Decent experience in UNIX in developing the application and familiar with all of its commands Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Deployed Django web application in Apache web server and Carpathias cloud operations Written numerous Django views class based and templates for page rendering Implemented the Backbone JS for DOM manipulation as this is the light web framework compared to Angular JS Utilized Python Libraries like Boto3 NumPy for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Implemented SOA based web services designed and built SOAP web service interface Created SOAP web services and SOAP handlers to store the SOAP messages Performed Pytest and unit test on them Extracted XML code from script for testing Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Installed Witbe Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Built various Flash mp3 players with ActionScript 3 reusable object code Troubleshoot object classes for ActionScriptAMFPHP to optimize image compression Worked on numerous Python modules Built dB context runcontext and other python objects thats reused by application Optimized the code using smart pointers profilers and C Standard template library Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Converted Photoshop smart objects into animations using Actionscript 3 Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Environment Python 27 Django 17 HTML5 CSS XML C Numpy pandas KML SQL AWS JavaScript Git Hub Angular JS JQuery CSS Bootstrap Selenium integration testing Ant PyUnit Maven Git ActionScript 30 Angularjs Flex Jenkins Linux RESTful MS SQL Server Ubuntu server Windows 12 Server Amazon s3 Jenkins Map Box SQL Mongo DB GitHub Bit Bucket Linux and Windows PYTHON DEVELOPER BANK OF AMERICA Irving TX Responsibilities Jan2016 Dec2017 Used Django frameworks and Python to build dynamic webpages Developed tools for monitoring and notification using Python Enhanced the application by using HTML and Java script for design and development Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms of networks Created PHPMySQL backend for data entry from Flash and worked in tandem with the Flash developer to obtain the correct data through query string Involved in designing database Model APIs Views using python to build an interactive webbased solution Generated Python Django Forms to record data of online users Implemented Data tables to add delete update and display patient records and policy information using PyQt Implemented a module to connect and view the status of an Apache Cassandra instance using python Developed MVC prototype replacement of current product with Django Improved the Data Security and generated report efficiently by caching and reusing data Created UI using JavaScript and HTML5CSS3 Managed datasets using Panda data frames and MYSQL Queried the database queries using PythonMySQL connector and retrieved information using MySQL dB Recorded the online users data using Python Django forms and implemented test case using Pytest Developed the application using the Testdriven methodology and designed the unit tests using Python Unit test framework Used standard Python modules eg CSV Robot parser Iter tools Pickle Jinja2 Xml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Query and set up employee registration and login using Python PostgreSQL We use a multiple row data storage strategy called MVCC to make effective PostgreSQL responsive in Querying and storing in database Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Fetched twitter feeds for certain important keyword using Pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes for Learning Management System and Used Python Flask framework to build modular maintainable applications Automated data movements using Python scripts Involved in splitting validating and processing of files Created core Python API which will be using among multiple modules Uploaded statistics to MySQL for analysis and logging Developed complex SQL queries for testing the database functionality Used UNIX server for application deployment and configuration Environment Python Django Linux HTML CSS Shell Scripting PostgreSQL MySQL PythonTwitter Library Flask Web services SVN Pandas FileZilla etc PYTHON DEVELOPER ING WINDSOR New York NY January 2015 to December 2015 Responsibilities Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote Test Automation Script for deployment of AWS and Company Web API using python package puppet configuration tool to update and check historical pumping data from AWS Compare the existing data and historical data and create performance chart for client Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Wrote program to fetch data and from amazon cloud and send the client according their requirement Passed query and wrote script to automate machine alarm data with timestamp to engineer Used Python and Pandas library built data analysis graph for documentation and record Worked with Blender script built addon and customization of blender interface Used SPSS tool for statistical programming and computational techniques for large data sets and quantitative analysis Used SPSS tool for Visualization techniques for summarizing complex data analysis using Python Independently developed and implemented analysis workflow and quality practices including workflow optimization process standardization configuration management of analysis files and software and verification and validation VV of models Using Numerical equation built application and do 2D finite Element analysis using python language Used Django database APIs to access database objects Generated graphical reports using python package NumPy and Matplotlib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Wrote programs to parse excel file and process many user data with data validations Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Maintained data with different levels of access privileges Environment Python27 Amazon Cloud Blender C Macros OracleDB Debian Apache Server pandas Django MySQL Linux HTML GIT CSS JavaScript Education Bachelors RGPV UNIVERSITY 2014 Skills Amazon elastic block storage Less than 1 year Apache cassandra 1 year Asteradata 1 year Aws 2 years Bootstrap 1 year C 1 year Cassandra 1 year Ebs Less than 1 year Hadoop Less than 1 year Html5 1 year Java 1 year Linux 2 years Mysql 2 years Oracle Less than 1 year Php 1 year Xml 1 year Xsl Less than 1 year Jquery CSS Git Javascript Additional Information SKILLS XML X query XSL PHP Mongo DB Cassandra Hadoop Environment GitHub Bootstrap Test Driven Development HTML5 Angularjs 1520 40 Reactjs Framework C JAVA script CSS3 MySQL Linux ORACLE TOOLS AWS Cloud Watch EBS system Hadoop Environment PHP C JAVA Script ORACLE Bootstrap Angularjs Reactjs",
    "unique_id": "30f24e79-e4f9-44cf-a16e-bfd168eafba2"
}