{
    "clean_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Great Lakes Health Connect Michigan Center MI Work Experience Sr Java Developer Great Lakes Health Connect March 2018 to Present Description Worked with the Webbased client that physicians can use to view their patients electronic records through a Web browser Worked on restricted and secured online access of the patient demographic and clinical data I also worked with the maintenance and enhancement of the existing application Responsibilities Designed and developed applications using Agile Methodology and involved in daily SCRUM meetings and sprint planning Created POJO classes and wrote JUNIT test cases for the respective POJO classes Monitored the error logs using log4j Implemented DAO crud methods to access data from database for the Object Relational Mapping and data persistence where Hibernate is used as persistence layer Designed and Developed Microservices using Spring Boot Spring IOC Spring Annotations Provided solutions for bug fixes in the application Used J2EE Design patterns such as DAO DTO Service Locator Singleton Factory Session Facade and Business object Developed the User Interfaces using HTML CSS3 JSP and JavaScript etc Developed frontend code with Ajax call in Angular 40 and J Query to retrieve data as JSON object from Implemented Angular 40 services using the resource service to perform REST API calls to the backend Experience with Two way Data Binding Components Directives Routing Pipes and Services with Dependency Injection in Angular 40 Created Angular 40 components directives models for different modules in the frontend Tested and implemented the Web Services using SOAP UI tool and Eclipse Web Services plugin Implemented consumption of SOAP Web Services generating WSDL and used SOAP UI for API testing to test the SOAP calls using WSDL and Postman Design investigation and implementation of public facing websites on Amazon Web Services AWS using RDS and AWS S3 Expertise in using Dojo and Javascript in Web Sphere Portal and WCM Environment JAVAJ2EE Java 18 JSF Microservices HTML5 CSS3 Javascript jQuery AJAX Nodejs Angular 40 Restful Web Services AWS Java Developer Highlight Industries September 2017 to February 2018 Description Involved in the development team to design the web application using MVC framework Angular JS Made the interface for communicating between the client and distributors around the world Transaction data are captured across all trading partners and it is translated into actionable information which helped to increase the supply chain Responsibilities Involved in SDLC Requirements gathering Analysis Design Development and Testing of application using AGILE methodology SCRUM Developed the Use Case Diagrams and Class Diagrams Used JAXRS for producing web services and involved in writing the programs to consume the web services using Apache CXF framework Developed single page applications SPA using the Angular 20 Used the DAO pattern for data access layer and JMS API for the messaging requirement Used XML and JSON for transferringretrieving data between different applications Used Log4j for logging errors in the application Configured maven repositories and multi component projects and scheduled projects in Jenkins for continuous integration Environment JAVAJ2EE Java 18 JSF Microservices HTML5 CSS3 Javascript Nodejs Angularjs Restful Web Services Java Developer Ramrobazaar February 2015 to July 2017 Description Worked on making online shopping system I worked on the Cart Implementation pagination and sorting for the website I also worked on implementing the registration and login for the main website Other than that I also worked on the making companies internal website which records employees and their activities Responsibilities Participated in meeting with Architect to identify the scope and architecture of the project Worked closely with the Business Users team in translating technical requirements into application code Wrote the back end code for the services using REST APIs Worked in configuring different applications environment in the remote server like Jenkins Tomcat Followed the MVC model and used the spring framework for developing the web layer of the application Data Operations are performed using Hibernate Implemented the design patterns like DAO Session Facade and Business Delegate Used the Log4j for logging and JUnit for the unit test cases Worked with different databases like Cassandra MongoDB Used JAXB for the purpose of binding JAVA to XML Extensively used Core Java such as Exceptions IO Multithreading and Collections Deployed projects in UnixLinux environment Used JAVA based annotation for configuration of spring and Hibernate Used Maven for build framework and Jenkins for continuous build system Used Javascript JQuery to validate the input given to the user interface Java Developer Nepal Life Insurance Company NP June 2013 to January 2015 Description Web based project designed for the insurance agents Eligibility of the customers is decided based on the past records which was automatically populated by the program If the customer is an existing customer then the existing rules apply whereas if the customer is new new rules will be applied After policy number is auto generated the policy details are issued to the customer Responsibilities Developed the system using the Spring MVC Framework Hibernate Involved in Database Design in SQL and writing SQL queries Involved writing JUNIT test cases unit and integration tests of the application Client pages are made using HTML CSS JSP JavascriptJQuery Developed the UML diagrams consisting of Use Cases and Sequence Diagrams as per requirement of the client Used JSON for validation documentation data required by a given application Used Agile methodology to implement the application Developed web services components using Apache Camel SOAP WSDL JAXB and JAXWS with java Deployed WAR applications in Web Logic Worked on timesheetapproval table using JQuery tree table plugin Experiences JDK 15 Eclipse 3 AJAX Servlets JDBC SOAP WSDL JAXWS JSON HTML CSS Jquery Log4j sr java developer Great Lakes Health Connect Skills Java Python Ruby on Rails R C CCUDA Spring Framework Spring MVC AJAX HTML CSS JavaScript JQuery JSON XMLBootstrapApache Spring FrameworkHibernateEclipse MySQL Workbench Android Studio Struts 2 Spring JSF Angular 20 Angular 40 BootstrapJUNIT Tensor flow Sublime Netbeans Eclipse Jenkins Log4j Maven AWS and ANT MSSQL Server MySQL Windows Apache Tomcat REST Web API Spring Boot with Microservices Singleton Adapter Factory MVC Faade RepositoryMVC3DAO JUNIT GIT AGILE Waterfall Multithreading Collections Serialization JDBC Hibernate Servlets JSP Tag Libraries JDBC Java J2Ee Spring Java Hibernate Additional Information TECHNICAL SKILLS Programming Languages Java Python Ruby on Rails R C C CUDA JAVA technologies Spring Framework Web technologies Spring MVC AJAX HTML CSS JavaScript JQuery JSON XML Bootstrap Apache Development Environment Spring Framework Hibernate Eclipse MySQL Workbench Android Studio Open SourceFramework Struts 2 Spring JSF Angular 20 Angular 40 Bootstrap JUNIT Other Technologies Tensor flow Tools Sublime Netbeans Eclipse Jenkins Apache Tools Log4j Maven AWS and ANT Databases MSSQL Server MySQL Platforms Windows Servers Apache Tomcat Web Services REST Web API Spring Boot with Microservices Design Patterns Singleton Adapter Factory MVC Faade Repository MVC3 DAO Testing JUNIT Version Control GIT SDLC AGILE Waterfall J2SE Technology Multithreading Collections Serialization JDBC Hibernate J2EE Technology Servlets JSP Tag Libraries JDBC JNDI",
    "entities": [
        "Architect",
        "Implemented Angular 40",
        "Java Hibernate Additional Information TECHNICAL SKILLS Programming Languages Java Python Ruby on Rails R C C CUDA",
        "JUNIT Version",
        "HTML CSS JSP",
        "Developed Microservices",
        "API",
        "DAO",
        "Jenkins",
        "JAVA",
        "the Object Relational Mapping",
        "POJO",
        "lJavaspan",
        "Business Users",
        "Hibernate Implemented",
        "JSF Microservices HTML5",
        "JavaScript",
        "Eclipse Web Services",
        "Responsibilities Involved",
        "Data Operations",
        "UML",
        "ANT",
        "Client",
        "Exceptions IO Multithreading and Collections Deployed",
        "Locator Singleton",
        "AWS S3 Expertise",
        "Created POJO",
        "SOAP UI",
        "J Query",
        "REST API",
        "AGILE",
        "CSS",
        "Amazon Web Services AWS",
        "Apache Camel SOAP",
        "Maven AWS",
        "JSP",
        "the Spring MVC Framework Hibernate Involved",
        "Use Cases",
        "Transaction",
        "DTO Service",
        "SQL",
        "Great Lakes Health Connect",
        "Agile Methodology",
        "SPA",
        "SOAP",
        "XML",
        "Worked",
        "REST",
        "Data Binding Components Directives Routing Pipes and Services",
        "Postman Design",
        "JAXWS",
        "JUnit",
        "RDS",
        "WCM Environment JAVAJ2EE Java",
        "AJAX Servlets JDBC SOAP",
        "JQuery",
        "Java Developer Nepal Life Insurance Company NP",
        "MVC",
        "JUNIT",
        "UnixLinux",
        "Agile"
    ],
    "experience": "Experience Sr Java Developer Great Lakes Health Connect March 2018 to Present Description Worked with the Webbased client that physicians can use to view their patients electronic records through a Web browser Worked on restricted and secured online access of the patient demographic and clinical data I also worked with the maintenance and enhancement of the existing application Responsibilities Designed and developed applications using Agile Methodology and involved in daily SCRUM meetings and sprint planning Created POJO classes and wrote JUNIT test cases for the respective POJO classes Monitored the error logs using log4j Implemented DAO crud methods to access data from database for the Object Relational Mapping and data persistence where Hibernate is used as persistence layer Designed and Developed Microservices using Spring Boot Spring IOC Spring Annotations Provided solutions for bug fixes in the application Used J2EE Design patterns such as DAO DTO Service Locator Singleton Factory Session Facade and Business object Developed the User Interfaces using HTML CSS3 JSP and JavaScript etc Developed frontend code with Ajax call in Angular 40 and J Query to retrieve data as JSON object from Implemented Angular 40 services using the resource service to perform REST API calls to the backend Experience with Two way Data Binding Components Directives Routing Pipes and Services with Dependency Injection in Angular 40 Created Angular 40 components directives models for different modules in the frontend Tested and implemented the Web Services using SOAP UI tool and Eclipse Web Services plugin Implemented consumption of SOAP Web Services generating WSDL and used SOAP UI for API testing to test the SOAP calls using WSDL and Postman Design investigation and implementation of public facing websites on Amazon Web Services AWS using RDS and AWS S3 Expertise in using Dojo and Javascript in Web Sphere Portal and WCM Environment JAVAJ2EE Java 18 JSF Microservices HTML5 CSS3 Javascript jQuery AJAX Nodejs Angular 40 Restful Web Services AWS Java Developer Highlight Industries September 2017 to February 2018 Description Involved in the development team to design the web application using MVC framework Angular JS Made the interface for communicating between the client and distributors around the world Transaction data are captured across all trading partners and it is translated into actionable information which helped to increase the supply chain Responsibilities Involved in SDLC Requirements gathering Analysis Design Development and Testing of application using AGILE methodology SCRUM Developed the Use Case Diagrams and Class Diagrams Used JAXRS for producing web services and involved in writing the programs to consume the web services using Apache CXF framework Developed single page applications SPA using the Angular 20 Used the DAO pattern for data access layer and JMS API for the messaging requirement Used XML and JSON for transferringretrieving data between different applications Used Log4j for logging errors in the application Configured maven repositories and multi component projects and scheduled projects in Jenkins for continuous integration Environment JAVAJ2EE Java 18 JSF Microservices HTML5 CSS3 Javascript Nodejs Angularjs Restful Web Services Java Developer Ramrobazaar February 2015 to July 2017 Description Worked on making online shopping system I worked on the Cart Implementation pagination and sorting for the website I also worked on implementing the registration and login for the main website Other than that I also worked on the making companies internal website which records employees and their activities Responsibilities Participated in meeting with Architect to identify the scope and architecture of the project Worked closely with the Business Users team in translating technical requirements into application code Wrote the back end code for the services using REST APIs Worked in configuring different applications environment in the remote server like Jenkins Tomcat Followed the MVC model and used the spring framework for developing the web layer of the application Data Operations are performed using Hibernate Implemented the design patterns like DAO Session Facade and Business Delegate Used the Log4j for logging and JUnit for the unit test cases Worked with different databases like Cassandra MongoDB Used JAXB for the purpose of binding JAVA to XML Extensively used Core Java such as Exceptions IO Multithreading and Collections Deployed projects in UnixLinux environment Used JAVA based annotation for configuration of spring and Hibernate Used Maven for build framework and Jenkins for continuous build system Used Javascript JQuery to validate the input given to the user interface Java Developer Nepal Life Insurance Company NP June 2013 to January 2015 Description Web based project designed for the insurance agents Eligibility of the customers is decided based on the past records which was automatically populated by the program If the customer is an existing customer then the existing rules apply whereas if the customer is new new rules will be applied After policy number is auto generated the policy details are issued to the customer Responsibilities Developed the system using the Spring MVC Framework Hibernate Involved in Database Design in SQL and writing SQL queries Involved writing JUNIT test cases unit and integration tests of the application Client pages are made using HTML CSS JSP JavascriptJQuery Developed the UML diagrams consisting of Use Cases and Sequence Diagrams as per requirement of the client Used JSON for validation documentation data required by a given application Used Agile methodology to implement the application Developed web services components using Apache Camel SOAP WSDL JAXB and JAXWS with java Deployed WAR applications in Web Logic Worked on timesheetapproval table using JQuery tree table plugin Experiences JDK 15 Eclipse 3 AJAX Servlets JDBC SOAP WSDL JAXWS JSON HTML CSS Jquery Log4j sr java developer Great Lakes Health Connect Skills Java Python Ruby on Rails R C CCUDA Spring Framework Spring MVC AJAX HTML CSS JavaScript JQuery JSON XMLBootstrapApache Spring FrameworkHibernateEclipse MySQL Workbench Android Studio Struts 2 Spring JSF Angular 20 Angular 40 BootstrapJUNIT Tensor flow Sublime Netbeans Eclipse Jenkins Log4j Maven AWS and ANT MSSQL Server MySQL Windows Apache Tomcat REST Web API Spring Boot with Microservices Singleton Adapter Factory MVC Faade RepositoryMVC3DAO JUNIT GIT AGILE Waterfall Multithreading Collections Serialization JDBC Hibernate Servlets JSP Tag Libraries JDBC Java J2Ee Spring Java Hibernate Additional Information TECHNICAL SKILLS Programming Languages Java Python Ruby on Rails R C C CUDA JAVA technologies Spring Framework Web technologies Spring MVC AJAX HTML CSS JavaScript JQuery JSON XML Bootstrap Apache Development Environment Spring Framework Hibernate Eclipse MySQL Workbench Android Studio Open SourceFramework Struts 2 Spring JSF Angular 20 Angular 40 Bootstrap JUNIT Other Technologies Tensor flow Tools Sublime Netbeans Eclipse Jenkins Apache Tools Log4j Maven AWS and ANT Databases MSSQL Server MySQL Platforms Windows Servers Apache Tomcat Web Services REST Web API Spring Boot with Microservices Design Patterns Singleton Adapter Factory MVC Faade Repository MVC3 DAO Testing JUNIT Version Control GIT SDLC AGILE Waterfall J2SE Technology Multithreading Collections Serialization JDBC Hibernate J2EE Technology Servlets JSP Tag Libraries JDBC JNDI",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Developer",
        "Sr",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Developer",
        "Great",
        "Lakes",
        "Health",
        "Connect",
        "Michigan",
        "Center",
        "MI",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Developer",
        "Great",
        "Lakes",
        "Health",
        "Connect",
        "March",
        "Present",
        "Description",
        "client",
        "physicians",
        "patients",
        "records",
        "Web",
        "browser",
        "access",
        "data",
        "maintenance",
        "enhancement",
        "application",
        "Responsibilities",
        "applications",
        "Agile",
        "Methodology",
        "SCRUM",
        "meetings",
        "sprint",
        "POJO",
        "classes",
        "JUNIT",
        "test",
        "cases",
        "POJO",
        "classes",
        "error",
        "logs",
        "log4j",
        "Implemented",
        "DAO",
        "crud",
        "methods",
        "data",
        "database",
        "Object",
        "Relational",
        "Mapping",
        "data",
        "persistence",
        "Hibernate",
        "persistence",
        "layer",
        "Developed",
        "Microservices",
        "Spring",
        "Boot",
        "Spring",
        "IOC",
        "Spring",
        "Annotations",
        "solutions",
        "bug",
        "fixes",
        "application",
        "J2EE",
        "Design",
        "patterns",
        "DAO",
        "DTO",
        "Service",
        "Locator",
        "Singleton",
        "Factory",
        "Session",
        "Facade",
        "Business",
        "object",
        "User",
        "Interfaces",
        "HTML",
        "CSS3",
        "JSP",
        "JavaScript",
        "Developed",
        "frontend",
        "code",
        "call",
        "Angular",
        "J",
        "Query",
        "data",
        "object",
        "Implemented",
        "Angular",
        "services",
        "resource",
        "service",
        "REST",
        "API",
        "Experience",
        "way",
        "Data",
        "Binding",
        "Components",
        "Directives",
        "Routing",
        "Pipes",
        "Services",
        "Dependency",
        "Injection",
        "Angular",
        "Created",
        "Angular",
        "components",
        "directives",
        "models",
        "modules",
        "frontend",
        "Web",
        "Services",
        "UI",
        "tool",
        "Eclipse",
        "Web",
        "Services",
        "consumption",
        "SOAP",
        "Web",
        "Services",
        "WSDL",
        "SOAP",
        "UI",
        "API",
        "testing",
        "SOAP",
        "calls",
        "WSDL",
        "Postman",
        "Design",
        "investigation",
        "implementation",
        "websites",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "RDS",
        "AWS",
        "S3",
        "Expertise",
        "Dojo",
        "Javascript",
        "Web",
        "Sphere",
        "Portal",
        "WCM",
        "Environment",
        "JAVAJ2EE",
        "Java",
        "JSF",
        "Microservices",
        "HTML5",
        "CSS3",
        "Javascript",
        "jQuery",
        "AJAX",
        "Nodejs",
        "Angular",
        "Restful",
        "Web",
        "Services",
        "AWS",
        "Java",
        "Developer",
        "Highlight",
        "Industries",
        "September",
        "February",
        "Description",
        "development",
        "team",
        "web",
        "application",
        "MVC",
        "framework",
        "Angular",
        "JS",
        "interface",
        "communicating",
        "client",
        "distributors",
        "world",
        "Transaction",
        "data",
        "trading",
        "partners",
        "information",
        "supply",
        "chain",
        "Responsibilities",
        "SDLC",
        "Requirements",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "application",
        "methodology",
        "Use",
        "Case",
        "Diagrams",
        "Class",
        "Diagrams",
        "JAXRS",
        "web",
        "services",
        "programs",
        "web",
        "services",
        "Apache",
        "CXF",
        "framework",
        "page",
        "applications",
        "SPA",
        "Angular",
        "DAO",
        "pattern",
        "data",
        "access",
        "layer",
        "JMS",
        "API",
        "requirement",
        "XML",
        "JSON",
        "data",
        "applications",
        "Log4j",
        "errors",
        "application",
        "repositories",
        "component",
        "projects",
        "projects",
        "Jenkins",
        "integration",
        "Environment",
        "JAVAJ2EE",
        "Java",
        "JSF",
        "Microservices",
        "HTML5",
        "CSS3",
        "Javascript",
        "Nodejs",
        "Angularjs",
        "Restful",
        "Web",
        "Services",
        "Java",
        "Developer",
        "Ramrobazaar",
        "February",
        "July",
        "Description",
        "shopping",
        "system",
        "Cart",
        "Implementation",
        "pagination",
        "website",
        "registration",
        "login",
        "website",
        "companies",
        "website",
        "employees",
        "activities",
        "Responsibilities",
        "meeting",
        "Architect",
        "scope",
        "architecture",
        "project",
        "Business",
        "Users",
        "team",
        "requirements",
        "application",
        "code",
        "end",
        "code",
        "services",
        "REST",
        "APIs",
        "applications",
        "environment",
        "server",
        "Jenkins",
        "Tomcat",
        "MVC",
        "model",
        "spring",
        "framework",
        "web",
        "layer",
        "application",
        "Data",
        "Operations",
        "Hibernate",
        "design",
        "patterns",
        "DAO",
        "Session",
        "Facade",
        "Business",
        "Delegate",
        "Log4j",
        "logging",
        "JUnit",
        "unit",
        "test",
        "cases",
        "databases",
        "Cassandra",
        "MongoDB",
        "JAXB",
        "purpose",
        "XML",
        "Core",
        "Java",
        "Exceptions",
        "IO",
        "Multithreading",
        "Collections",
        "Deployed",
        "projects",
        "UnixLinux",
        "environment",
        "annotation",
        "configuration",
        "spring",
        "Hibernate",
        "Maven",
        "build",
        "framework",
        "Jenkins",
        "build",
        "system",
        "Javascript",
        "JQuery",
        "input",
        "user",
        "interface",
        "Java",
        "Developer",
        "Nepal",
        "Life",
        "Insurance",
        "Company",
        "NP",
        "June",
        "January",
        "Description",
        "Web",
        "project",
        "insurance",
        "agents",
        "Eligibility",
        "customers",
        "records",
        "program",
        "customer",
        "customer",
        "rules",
        "customer",
        "rules",
        "policy",
        "number",
        "auto",
        "policy",
        "details",
        "customer",
        "Responsibilities",
        "system",
        "Spring",
        "MVC",
        "Framework",
        "Hibernate",
        "Database",
        "Design",
        "SQL",
        "SQL",
        "queries",
        "JUNIT",
        "test",
        "cases",
        "unit",
        "integration",
        "tests",
        "application",
        "Client",
        "pages",
        "HTML",
        "CSS",
        "JSP",
        "UML",
        "diagrams",
        "Use",
        "Cases",
        "Sequence",
        "Diagrams",
        "requirement",
        "client",
        "JSON",
        "validation",
        "documentation",
        "data",
        "application",
        "methodology",
        "application",
        "web",
        "services",
        "components",
        "Apache",
        "Camel",
        "SOAP",
        "WSDL",
        "JAXB",
        "JAXWS",
        "Deployed",
        "WAR",
        "applications",
        "Web",
        "Logic",
        "timesheetapproval",
        "table",
        "JQuery",
        "tree",
        "table",
        "Experiences",
        "JDK",
        "Eclipse",
        "AJAX",
        "Servlets",
        "JDBC",
        "SOAP",
        "WSDL",
        "JAXWS",
        "JSON",
        "HTML",
        "CSS",
        "Jquery",
        "Log4j",
        "sr",
        "java",
        "developer",
        "Great",
        "Lakes",
        "Health",
        "Connect",
        "Skills",
        "Java",
        "Python",
        "Ruby",
        "Rails",
        "R",
        "C",
        "CCUDA",
        "Spring",
        "Framework",
        "Spring",
        "MVC",
        "AJAX",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "XMLBootstrapApache",
        "Spring",
        "FrameworkHibernateEclipse",
        "MySQL",
        "Workbench",
        "Android",
        "Studio",
        "Struts",
        "Spring",
        "JSF",
        "Angular",
        "Angular",
        "Tensor",
        "flow",
        "Sublime",
        "Netbeans",
        "Eclipse",
        "Jenkins",
        "Log4j",
        "Maven",
        "AWS",
        "ANT",
        "MSSQL",
        "Server",
        "MySQL",
        "Windows",
        "Apache",
        "Tomcat",
        "REST",
        "Web",
        "API",
        "Spring",
        "Boot",
        "Microservices",
        "Singleton",
        "Adapter",
        "Factory",
        "MVC",
        "Faade",
        "RepositoryMVC3DAO",
        "JUNIT",
        "GIT",
        "AGILE",
        "Waterfall",
        "Multithreading",
        "Collections",
        "Serialization",
        "JDBC",
        "Hibernate",
        "Servlets",
        "JSP",
        "Tag",
        "JDBC",
        "Java",
        "Spring",
        "Java",
        "Hibernate",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Programming",
        "Languages",
        "Java",
        "Python",
        "Ruby",
        "Rails",
        "R",
        "C",
        "C",
        "CUDA",
        "JAVA",
        "Spring",
        "Framework",
        "Web",
        "technologies",
        "Spring",
        "MVC",
        "AJAX",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "JSON",
        "XML",
        "Bootstrap",
        "Apache",
        "Development",
        "Environment",
        "Spring",
        "Framework",
        "Hibernate",
        "Eclipse",
        "MySQL",
        "Workbench",
        "Android",
        "Studio",
        "Open",
        "SourceFramework",
        "Struts",
        "Spring",
        "JSF",
        "Angular",
        "Angular",
        "Bootstrap",
        "JUNIT",
        "Other",
        "Technologies",
        "Tensor",
        "flow",
        "Tools",
        "Sublime",
        "Netbeans",
        "Eclipse",
        "Jenkins",
        "Apache",
        "Tools",
        "Log4j",
        "Maven",
        "AWS",
        "ANT",
        "Databases",
        "MSSQL",
        "Server",
        "MySQL",
        "Platforms",
        "Windows",
        "Servers",
        "Apache",
        "Tomcat",
        "Web",
        "Services",
        "REST",
        "Web",
        "API",
        "Spring",
        "Boot",
        "Microservices",
        "Design",
        "Patterns",
        "Singleton",
        "Adapter",
        "Factory",
        "MVC",
        "Faade",
        "Repository",
        "MVC3",
        "DAO",
        "Testing",
        "JUNIT",
        "Version",
        "Control",
        "GIT",
        "SDLC",
        "AGILE",
        "Waterfall",
        "J2SE",
        "Technology",
        "Multithreading",
        "Collections",
        "Serialization",
        "JDBC",
        "Hibernate",
        "J2EE",
        "Technology",
        "Servlets",
        "JSP",
        "Tag",
        "JDBC",
        "JNDI"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:24:50.518505",
    "resume_data": "Sr Java Developer Sr span lJavaspan span lDeveloperspan Sr Java Developer Great Lakes Health Connect Michigan Center MI Work Experience Sr Java Developer Great Lakes Health Connect March 2018 to Present Description Worked with the Webbased client that physicians can use to view their patients electronic records through a Web browser Worked on restricted and secured online access of the patient demographic and clinical data I also worked with the maintenance and enhancement of the existing application Responsibilities Designed and developed applications using Agile Methodology and involved in daily SCRUM meetings and sprint planning Created POJO classes and wrote JUNIT test cases for the respective POJO classes Monitored the error logs using log4j Implemented DAO crud methods to access data from database for the Object Relational Mapping and data persistence where Hibernate is used as persistence layer Designed and Developed Microservices using Spring Boot Spring IOC Spring Annotations Provided solutions for bug fixes in the application Used J2EE Design patterns such as DAO DTO Service Locator Singleton Factory Session Facade and Business object Developed the User Interfaces using HTML CSS3 JSP and JavaScript etc Developed frontend code with Ajax call in Angular 40 and J Query to retrieve data as JSON object from Implemented Angular 40 services using the resource service to perform REST API calls to the backend Experience with Two way Data Binding Components Directives Routing Pipes and Services with Dependency Injection in Angular 40 Created Angular 40 components directives models for different modules in the frontend Tested and implemented the Web Services using SOAP UI tool and Eclipse Web Services plugin Implemented consumption of SOAP Web Services generating WSDL and used SOAP UI for API testing to test the SOAP calls using WSDL and Postman Design investigation and implementation of public facing websites on Amazon Web Services AWS using RDS and AWS S3 Expertise in using Dojo and Javascript in Web Sphere Portal and WCM Environment JAVAJ2EE Java 18 JSF Microservices HTML5 CSS3 Javascript jQuery AJAX Nodejs Angular 40 Restful Web Services AWS Java Developer Highlight Industries September 2017 to February 2018 Description Involved in the development team to design the web application using MVC framework Angular JS Made the interface for communicating between the client and distributors around the world Transaction data are captured across all trading partners and it is translated into actionable information which helped to increase the supply chain Responsibilities Involved in SDLC Requirements gathering Analysis Design Development and Testing of application using AGILE methodology SCRUM Developed the Use Case Diagrams and Class Diagrams Used JAXRS for producing web services and involved in writing the programs to consume the web services using Apache CXF framework Developed single page applications SPA using the Angular 20 Used the DAO pattern for data access layer and JMS API for the messaging requirement Used XML and JSON for transferringretrieving data between different applications Used Log4j for logging errors in the application Configured maven repositories and multi component projects and scheduled projects in Jenkins for continuous integration Environment JAVAJ2EE Java 18 JSF Microservices HTML5 CSS3 Javascript Nodejs Angularjs Restful Web Services Java Developer Ramrobazaar February 2015 to July 2017 Description Worked on making online shopping system I worked on the Cart Implementation pagination and sorting for the website I also worked on implementing the registration and login for the main website Other than that I also worked on the making companies internal website which records employees and their activities Responsibilities Participated in meeting with Architect to identify the scope and architecture of the project Worked closely with the Business Users team in translating technical requirements into application code Wrote the back end code for the services using REST APIs Worked in configuring different applications environment in the remote server like Jenkins Tomcat Followed the MVC model and used the spring framework for developing the web layer of the application Data Operations are performed using Hibernate Implemented the design patterns like DAO Session Facade and Business Delegate Used the Log4j for logging and JUnit for the unit test cases Worked with different databases like Cassandra MongoDB Used JAXB for the purpose of binding JAVA to XML Extensively used Core Java such as Exceptions IO Multithreading and Collections Deployed projects in UnixLinux environment Used JAVA based annotation for configuration of spring and Hibernate Used Maven for build framework and Jenkins for continuous build system Used Javascript JQuery to validate the input given to the user interface Java Developer Nepal Life Insurance Company NP June 2013 to January 2015 Description Web based project designed for the insurance agents Eligibility of the customers is decided based on the past records which was automatically populated by the program If the customer is an existing customer then the existing rules apply whereas if the customer is new new rules will be applied After policy number is auto generated the policy details are issued to the customer Responsibilities Developed the system using the Spring MVC Framework Hibernate Involved in Database Design in SQL and writing SQL queries Involved writing JUNIT test cases unit and integration tests of the application Client pages are made using HTML CSS JSP JavascriptJQuery Developed the UML diagrams consisting of Use Cases and Sequence Diagrams as per requirement of the client Used JSON for validation documentation data required by a given application Used Agile methodology to implement the application Developed web services components using Apache Camel SOAP WSDL JAXB and JAXWS with java Deployed WAR applications in Web Logic Worked on timesheetapproval table using JQuery tree table plugin Experiences JDK 15 Eclipse 3 AJAX Servlets JDBC SOAP WSDL JAXWS JSON HTML CSS Jquery Log4j sr java developer Great Lakes Health Connect Skills Java Python Ruby on Rails R C CCUDA Spring Framework Spring MVC AJAX HTML CSS JavaScript JQuery JSON XMLBootstrapApache Spring FrameworkHibernateEclipse MySQL Workbench Android Studio Struts 2 Spring JSF Angular 20 Angular 40 BootstrapJUNIT Tensor flow Sublime Netbeans Eclipse Jenkins Log4j Maven AWS and ANT MSSQL Server MySQL Windows Apache Tomcat REST Web API Spring Boot with Microservices Singleton Adapter Factory MVC Faade RepositoryMVC3DAO JUNIT GIT AGILE Waterfall Multithreading Collections Serialization JDBC Hibernate Servlets JSP Tag Libraries JDBC Java J2Ee Spring Java Hibernate Additional Information TECHNICAL SKILLS Programming Languages Java Python Ruby on Rails R C C CUDA JAVA technologies Spring Framework Web technologies Spring MVC AJAX HTML CSS JavaScript JQuery JSON XML Bootstrap Apache Development Environment Spring Framework Hibernate Eclipse MySQL Workbench Android Studio Open SourceFramework Struts 2 Spring JSF Angular 20 Angular 40 Bootstrap JUNIT Other Technologies Tensor flow Tools Sublime Netbeans Eclipse Jenkins Apache Tools Log4j Maven AWS and ANT Databases MSSQL Server MySQL Platforms Windows Servers Apache Tomcat Web Services REST Web API Spring Boot with Microservices Design Patterns Singleton Adapter Factory MVC Faade Repository MVC3 DAO Testing JUNIT Version Control GIT SDLC AGILE Waterfall J2SE Technology Multithreading Collections Serialization JDBC Hibernate J2EE Technology Servlets JSP Tag Libraries JDBC JNDI",
    "unique_id": "781ef0ca-2ae3-456a-a9d0-21cbb071daf0"
}