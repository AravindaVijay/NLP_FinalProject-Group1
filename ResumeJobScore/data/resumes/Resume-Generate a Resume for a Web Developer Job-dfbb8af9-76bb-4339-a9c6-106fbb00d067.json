{
    "clean_data": "Java Full Stack developer Java Full Stack span ldeveloperspan Java Full Stack developer Comcast Boston MA Extensive experience in analysis design development and implementation of WebBased ClientServer applications and Database applications Extensive working experience with in Design Development and Implementation in the field of Web Applications development using HTML CSS XHTML JavaScript JQuery Angular JS Bootstrap AJAX XML JSON Restful web services and Responsive web designing Expertise in developing web pages using HTML5 CSS3 Bootstrap JavaScript jQuery Ajax and Angular JS with webpage cross browser compatibility and responsive web design and have knowledge on Server scripting language like Node JS Expertise in developing and implementing Web applications using JavaJ2EE Technologies including Core Java JDBC Hibernate Spring JSP Servlets Java Beans EJB and JNDI Proficient in using RDBMS concepts and worked with Oracle Developed User Interface using JSP JSTL HTML CSS Java Script jQuery and Angular JS Strong front end UI development skills using scripting languages HTMLHTML DHTML CSSCSS JSP JavaScript React 1686 XML and PHP Worked extensively on technologies Spring Web services Tomcat SOAP XML JMS JNDI JDBC and various Databases like Oracle MySQL and Microsoft SQL server during my tenure in Software Development Strong experience in various development environments like Eclipse NetBeans Ability to understand the Java Wed technologies JSFJSP jQuery React JS Thorough understanding of ObjectOriented Methodology UML and Design Patterns Worked on front endpresentation tier development using Struts Framework that includes JavaScript Ajax and CSS Experience of the Maven in the development of the application Handson experience in creating UI web applications using HTML5 CSS3 JavaScript 20 and jQuery 3x AJAX Bootstrap 4x Angular 234 and 5 Knowledge in the Jenkins and also the other JVM language Worked on implementation of the version control software GitHub CVS VSS SVN and ClearCase Experienced with JDBC API to call SQL Queries and Stored Procedures in the Database Implement JBoss drools rules for comparing the data between Trading Systems and Accounting Systems Proficient in all phases of SDLC analysis design development testing and deployment and highly competent in gathering user requirements and converting them into software requirement specifications Extensive knowledge in Agile Waterfall and TDD Methodologies Experienced in writing and implementing unit test cases using Junit Easy mock and Mockito Knowledge of the payments industry Knowledge in the Mean Stack Development in the Project development Good at the programming and also with scripting languages Authorized to work in the US for any employer Work Experience Java Full Stack developer Comcast Philadelphia PA October 2018 to Present Responsibilities Involved in software development life cycle starting from requirements gathering and performing ObjectOriented Analysis Developed User Interface using JSP JSTL HTML CSS Java Script jQuery and Angular JS Involved in developing various applications within Sams ecosystem of applications like Inventory transformation Payment Gateway and internal to external file transfers Development of the new SOAPRest Based web services Developed Single page application with using AngularJS with MVC Frame Work Designed and developed the login portal using framework React along HTML CSS Developed a web application by using React as front end and using Web API to receive and pass data to backend Integrate the services with Gul application Take care of complete java multithreading part in back end components Built components with Angular TypeScript to implement view controller functionality helped with converting legacy AngularJS code to Angular 7 Implemented a highlyscalable vertical and horizontal performance efficient drools architecture Collaborate effectively within a team and across teams with QA and worked on Single page application scenario for Angular 2 Implemented a highlyscalable vertical and horizontal performance efficient Drools architecture Implement JBoss drools rules for comparing the data between Trading Systems and Accounting Systems Using Spring support for JDBC for all CRUD Create Read Update Delete operations Develop the Spring AOP Programming to configure logging for the application Develop Serverside components which include Spring controllers Business Services DAO and persistence layer Design and develop RESTFUL service interface using Spring 4 to the underlying customer event API for Payments Registration Services Strong experience with MongoDB development and migration from SQL relational database to NoSQL Prepared Unit test cases for testing the new functionality and supporting SIT and UAT till the rollout to production Used RDMS queries for the database purpose Knowledge in the Agency Management SystemsIncentive Management Systems Used Apache camel to Web design Customize SOAP Web Services using Spring SOAP API framework sending JSON format data packets between front end and middletier controller Provide the system administrator level support of Application Using Shell Shelling Provide system management involving account monitoring Security operating system Installation Experienced in developing fully functional responsive modules using Scala with Akka ArangoDB Heads on experience Spring Boot APM Log Insight Responds to issues and problems via ready brought forward and ensures they are resolved in time Use Apache Maven builds tool to automate the build process and Jenkins CI for continuous integrations Use the performance monitoring tool like Splunk and Dynatrace Monitoring the application using the Splunk Wrote SOAP schema for data transmission among services from legacy systems Development of new cache services using Couchbase cache and Cassandra Exposing new REST APIs for other systems Design development of new JavaJ2EE middle tier components Prepare Design Documents conducted an impact analysis of requirements on the platform participated in a business meeting Utilized AWS Cloud Watch to monitor the performance environment instances for operational and performance metrics during load testing Designed and developed the login portal using framework React along HTML CSS Developed a web application by using React as front end and using Web API to receive and pass data to backend Participation in tech review scrum meetings for recent ongoing installationsdeployments Followed Agile methodologies in the Software Development Life Cycle with a TestDriven Development approach to build the application Heads on the Java the application development Implemented Spring and Hibernate frameworks along with Restful web services in developing the application Developed User interface module HTML5 JavaScript ReactJS JSP and jQuery Used Ajax and jQuery for creating dynamic web pages which interact frequently with the server Used frameworks for generating animations in the user interface Used Core MVC AOP Boot and Security Spring modules for application development Worked on Spring Core modules like IOC and dependency injection Implemented RESTful web services by using JAXRS and Jackson implementations to retrieve data from clientside Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Done the database part in the MySQL with using the script Used cloud services to deploy web design Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Implemented AWS HighAvailability using AWS Elastic Load Balancing ELB which performed a balance across instances in multiple Availability Zones Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances Used Amazon IAM to maintain the user credentials and involved in creating custom IAM policies to various groups defined within the organization Used GIT repository to commit and checkout code Developed REST based Microservices using Spring Boot Developed RESTful APIs which takes in an HTTP request and produces the HTTP response in JSON format using Microservices Used various features from ReactJS like data binding routing custom filters and directives to meet various customized requirements Used HTTP services and resource in ReactJS to get and handle JSON data from the backend Maintained crossbrowser compatibility using libraries like jQuery and achieved responsiveness using Bootstrap CSS Used the automated build tool like CICD integration Providing support for System Integration Testing User Acceptance Testing Unit testing of the developedmodified application program using different test scenarios and test cases using Junit and Mockito Environment Java J2EE HTML JSP CSS JavaScript jQuery JSP AJAX ReactJS Spring Hibernate JPA JMS REST Webservices JAXRS Jackson Microservices EC2 S3 ELB Security Groups IAM RDS Cloud Watch PLSQL Oracle Mockito JUnit Soap UI GIT Maven Jenkins Glassfish JIRA Front End Developer Fidelity Investment Durham NC January 2018 to September 2018 Designed and developed the application with J2EE architecture frameworks like Spring MVC and Spring Bean Factory Developed the application based on MVC architecture and worked on latest version of objectoriented JavaScript frameworks like Angularjs NodeJS Backbone Bootstrap Ext JS Knockout JS React JS Ember JS Expres JS and Dojo toolkit Involved in Daily SCRUM meetings and weekly Spring Meetings and Replaced existed Angular JS code with Angular 4 code which decreased number of lines of code for a web application which increased performance Redesigned the code introducing wicket framework to angular js Spring MVC Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Designed and developed UI screens using JSF JavaScript AngularJS jQuery Ajax CSS3 and HTML5 Worked on designing the User Interface by coding in HTML5 AngularJS Bootstrap to create the SPA Single Page Application Implemented Elastic Search services for big data searches wrote complex queries and designimplemented clustered and multiple nodes Used JIRA for issue tracking and assigning the tasks to developers Handled Front end validations are written using JavaScript and worked on web based and clientserver application using HTML5 DHTML jQuery Angular JS Ember JS Bootstrap underscore JS Node JS CSS Bootstrap JavaScript AJAX JSP JDBC XML XSLT Django PHP Developed application using new features of Java 18 Annotations Generics enhanced for loop and Enums Also Used Java 18 Method References feature to point to methods by their names and used functional Interfaces Experience in using JSP and Servlets to create web interfaces and integrating apache tools like Kafka Integrated SOAP services use for client authorization with the application restful services Designed and developed RESTful service interface using Spring MVC to the underlying customer event API Involved in building RESTful Web services using JAXRSAPI Used Bootstrap and AngularJS Reactjs and Nodejs in effective web design Created custom Plugins templates and functions for Angular JS application Extensively used various modules in Spring like AOP DI Bean Wiring Spring Inheritance Auto Wiring Spring JDBC Templates and Spring Quartz Schedulers for Jobs Involved in consuming RESTful services and processed JSON data to render on UI Specially working with AJAX data consisting of JSON responses parsing the same and presenting on the UI layer Logging mechanisms are implemented using Log4j Integrated SoapUI and JMeter Test cases into Maven Monitored the error logs using Log4J Used Stash code versioning system for code maintenance and used Log4j to generate logs used for maintenance and bug tracking Integrated Spring DAO for data access using Hibernate to fetch data from database and avoid redundant database access statements Developed Shared module with components that will be shared across the application such as Loader ModalDialog models ErrorHandler ActiveMQ to implement real time messaging system within the project Involved in Creating and Consuming RESTful Services using Spring MVC Spring Boot Configured WebLogic Application Server and participated in structured code reviews walkthroughs Support installation of application releases into production as directed Used RESTClient and POSTMAN to test the restbased services and used Junit and Mockito to test the middleware services Used Spring Tool Suite STS for development of the application Designed and developed Microservices business components using Spring Boot Used Hibernate in the persistence layer and implemented DAOs to access data from database Environment Web Services Spring 4x Hibernate 4x HTML5 JSP JavaScript JQuery AJAX OAuth GWT CSS3 Angular JS SOAP UI XML WSDL Java18 J2EE Scala Kafka Adobe LiveCycle ES4 Micro Services Mule ESB JIRA processes GIT Design Patterns PLSQL Junit WebSphere MQ Maven Eclipse IDE CVS and Oracle 11g Jr Java Developer WebStrack IN January 2014 to December 2016 Responsibilities Participating in user requirement sessions to gather business requirements Involved in Development Integration and Testing of application modules Involved in the requirement gathering Involvement React JS to develop the JavaScript Mostly my part was serverside development Mostly used J2EE for the web design of the web pages Developed presentation layer using JSP HTML JavaScript JQuery and CSS Have developed stateless session enterprise java beans Used CICD pattern in the frameworks Gained solid knowledge and develop the project with SQL oracle alone with MySQL also Done the database part in the MySQL with using the script Objectoriented analysis and design using common design patterns Experience collaborating with Senior Technical Staff Implemented the project using IDE Eclipse Implemented REST web service in Scala using Akka for CBPMAN log tracking application Experience with the testing team members to gain knowledge in the testing side Gained knowledge with SQL and NoSQL based solutions Used to test software when the coding was done with the first part of the project Gained knowledge in the APL alone with Java application development Implemented the customer serviceoriented attitude Connect to the Foreign JMS Server to send the message to the request queue and get the response from the reply queue Used Google Maps API JavaScript Library for map integration Worked on JQuery AJAX JSON and JSF for designing highly user interactive web pages Implemented the integration with the back end system with web services using SOAP Involved in configuring hibernate to access the database and retrieve data from the database Implemented logger for debugging and testing purposes using Log4j Developed stored procedures and triggers with Oracle Involved in the bug tracking and Unit Testing using JUnit framework Developed ANT Scripts to do compilation packaging and deployment in an application server Installed and configured Jenkins for continuous integration Used automation testing got the project Involved in peer to peer code reviews and crosschecked whether coding standards are being followed Deliver project with qualitydriven designs Environment Java J2EE JSP JSF Servlets Hibernate SQL Springs JQuery JNDI JMS Oracle JBOSS ANT XML JavaScript HTML CSS Windows WebLogic Eclipse Jenkins Log4j Google Maps API Education MS in Computer Science in Computer Science University of Massachusetts Boston MA Skills Eclipse J2ee Java Hibernate Spring Jax Jaxws Jboss Jms jquery Jsf Jsp Servlets Struts C Gradle Javascript Bootstrap Jenkins Svn Java J2Ee MVC JEE Rest Angularjs Additional Information Technical Skills Programming Languages Java 8 J2EE C PLSQL Spring 3240 Hibernate 40 UNIX Shell J2EE Frameworks Spring MVC Struts JSF Web Technologies HTML5 CSS3 JavaScript XML JSP Apache Tapestry Servlets jQuery React JS NodeJS Web Services Testing REST JAXRS and SOAP Web Services JAXWS AWS Junit 38 and 410 Slf4jlog4j Drools JMeter Familiar IDE NetBeans Eclipse SQL Developer Databases Oracle 10g11g MySQL DB2 97 MongoDB Repositories GitHub Bitbucket SVN CVS WEBApplication Servers Oracle WebLogic 10c 11g and 12c IBM WebSphere 8085 Tomcat 60 and 70 and JBoss Build Tool Servers Ant Maven 30 and above Gradle Jenkins Messaging JMS Kafka and Apache ActiveMQ JavaScript libraries jQuery Angular JS Backbone JS React JS Node JS Ext JS Bootstrap",
    "entities": [
        "Amazon IAM",
        "the SPA Single Page Application Implemented Elastic Search",
        "AJAX",
        "IDE",
        "Oracle MySQL",
        "Nodejs",
        "SQL Developer",
        "Collaborate",
        "Eclipse NetBeans Ability",
        "JS Bootstrap",
        "HTTP",
        "Design Development and Implementation",
        "MVC Frame Work Designed",
        "JSON",
        "Present Responsibilities Involved",
        "IBM",
        "Hibernate Session Factory",
        "Sams",
        "ClearCase Experienced",
        "CVS",
        "Develop Serverside",
        "Senior Technical Staff",
        "JavaJ2EE Technologies",
        "HTMLHTML DHTML CSSCSS JSP JavaScript React",
        "Google Maps API Education MS",
        "XML",
        "SQL Queries and Stored Procedures",
        "SOAPRest",
        "Accounting Systems Proficient",
        "Bootstrap CSS",
        "WebLogic",
        "Tomcat SOAP XML JMS JNDI JDBC",
        "Maintained",
        "JUnit",
        "Application Using Shell Shelling Provide",
        "Developed Shared",
        "WebBased ClientServer",
        "UAT",
        "Spring Boot",
        "JavaJ2EE",
        "Couchbase",
        "ObjectOriented Analysis Developed User Interface",
        "JNDI Proficient",
        "the Foreign JMS Server",
        "PHP Worked",
        "Participation",
        "Involvement React JS",
        "Comcast Boston MA Extensive",
        "RDMS",
        "JVM",
        "Mockito",
        "Spring MVC",
        "Restful",
        "AWS Elastic Load Balancing ELB",
        "Servlets",
        "Core",
        "Prepare Design Documents",
        "Spring Bean Factory Developed",
        "HTML5",
        "the Splunk Wrote SOAP",
        "JSP",
        "the Software Development Life Cycle",
        "Software Development Strong",
        "Built",
        "CBPMAN",
        "Trading Systems and Accounting Systems",
        "Development of new cache services",
        "IOC",
        "jQuery Angular",
        "jQuery 3x AJAX",
        "Angular JS",
        "TestDriven Development",
        "Trading Systems",
        "Slick Implemented AWS",
        "MVC",
        "EJB",
        "GIT",
        "Java Hibernate Spring Jax Jaxws Jboss Jms",
        "SIT",
        "Jackson Microservices EC2 S3",
        "US",
        "Ext JS Bootstrap",
        "QA",
        "JBoss Build Tool Servers Ant Maven",
        "Splunk and Dynatrace Monitoring",
        "Drools",
        "AWS",
        "Server",
        "Scala",
        "Plugins",
        "Akka",
        "JSF",
        "Oracle Developed User Interface",
        "RESTFUL",
        "SQL",
        "Kafka Integrated SOAP",
        "Java 18 Annotations Generics",
        "jQuery React",
        "JAXRS",
        "Business Services",
        "Used Microservices",
        "Oracle Involved",
        "CICD",
        "Boot Configured WebLogic Application Server",
        "Utilized AWS Cloud Watch",
        "Handson",
        "Tapestry Servlets jQuery React JS NodeJS Web Services Testing REST JAXRS",
        "Integrated Spring",
        "Maven",
        "Computer Science in Computer Science University of Massachusetts Boston",
        "JavaScript",
        "jQuery Used Ajax",
        "UI",
        "Front",
        "API Involved",
        "Microsoft",
        "Developed ANT Scripts",
        "UI Specially",
        "ObjectOriented Methodology UML",
        "API for Payments Registration Services Strong",
        "CSS Bootstrap JavaScript AJAX",
        "CSS",
        "PHP Developed",
        "jQuery",
        "REST",
        "Spring MVC Created",
        "NetBeans",
        "NoSQL",
        "HTML CSS XHTML JavaScript JQuery Angular",
        "Node",
        "Followed Agile"
    ],
    "experience": "Experience of the Maven in the development of the application Handson experience in creating UI web applications using HTML5 CSS3 JavaScript 20 and jQuery 3x AJAX Bootstrap 4x Angular 234 and 5 Knowledge in the Jenkins and also the other JVM language Worked on implementation of the version control software GitHub CVS VSS SVN and ClearCase Experienced with JDBC API to call SQL Queries and Stored Procedures in the Database Implement JBoss drools rules for comparing the data between Trading Systems and Accounting Systems Proficient in all phases of SDLC analysis design development testing and deployment and highly competent in gathering user requirements and converting them into software requirement specifications Extensive knowledge in Agile Waterfall and TDD Methodologies Experienced in writing and implementing unit test cases using Junit Easy mock and Mockito Knowledge of the payments industry Knowledge in the Mean Stack Development in the Project development Good at the programming and also with scripting languages Authorized to work in the US for any employer Work Experience Java Full Stack developer Comcast Philadelphia PA October 2018 to Present Responsibilities Involved in software development life cycle starting from requirements gathering and performing ObjectOriented Analysis Developed User Interface using JSP JSTL HTML CSS Java Script jQuery and Angular JS Involved in developing various applications within Sams ecosystem of applications like Inventory transformation Payment Gateway and internal to external file transfers Development of the new SOAPRest Based web services Developed Single page application with using AngularJS with MVC Frame Work Designed and developed the login portal using framework React along HTML CSS Developed a web application by using React as front end and using Web API to receive and pass data to backend Integrate the services with Gul application Take care of complete java multithreading part in back end components Built components with Angular TypeScript to implement view controller functionality helped with converting legacy AngularJS code to Angular 7 Implemented a highlyscalable vertical and horizontal performance efficient drools architecture Collaborate effectively within a team and across teams with QA and worked on Single page application scenario for Angular 2 Implemented a highlyscalable vertical and horizontal performance efficient Drools architecture Implement JBoss drools rules for comparing the data between Trading Systems and Accounting Systems Using Spring support for JDBC for all CRUD Create Read Update Delete operations Develop the Spring AOP Programming to configure logging for the application Develop Serverside components which include Spring controllers Business Services DAO and persistence layer Design and develop RESTFUL service interface using Spring 4 to the underlying customer event API for Payments Registration Services Strong experience with MongoDB development and migration from SQL relational database to NoSQL Prepared Unit test cases for testing the new functionality and supporting SIT and UAT till the rollout to production Used RDMS queries for the database purpose Knowledge in the Agency Management SystemsIncentive Management Systems Used Apache camel to Web design Customize SOAP Web Services using Spring SOAP API framework sending JSON format data packets between front end and middletier controller Provide the system administrator level support of Application Using Shell Shelling Provide system management involving account monitoring Security operating system Installation Experienced in developing fully functional responsive modules using Scala with Akka ArangoDB Heads on experience Spring Boot APM Log Insight Responds to issues and problems via ready brought forward and ensures they are resolved in time Use Apache Maven builds tool to automate the build process and Jenkins CI for continuous integrations Use the performance monitoring tool like Splunk and Dynatrace Monitoring the application using the Splunk Wrote SOAP schema for data transmission among services from legacy systems Development of new cache services using Couchbase cache and Cassandra Exposing new REST APIs for other systems Design development of new JavaJ2EE middle tier components Prepare Design Documents conducted an impact analysis of requirements on the platform participated in a business meeting Utilized AWS Cloud Watch to monitor the performance environment instances for operational and performance metrics during load testing Designed and developed the login portal using framework React along HTML CSS Developed a web application by using React as front end and using Web API to receive and pass data to backend Participation in tech review scrum meetings for recent ongoing installationsdeployments Followed Agile methodologies in the Software Development Life Cycle with a TestDriven Development approach to build the application Heads on the Java the application development Implemented Spring and Hibernate frameworks along with Restful web services in developing the application Developed User interface module HTML5 JavaScript ReactJS JSP and jQuery Used Ajax and jQuery for creating dynamic web pages which interact frequently with the server Used frameworks for generating animations in the user interface Used Core MVC AOP Boot and Security Spring modules for application development Worked on Spring Core modules like IOC and dependency injection Implemented RESTful web services by using JAXRS and Jackson implementations to retrieve data from clientside Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Done the database part in the MySQL with using the script Used cloud services to deploy web design Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Implemented AWS HighAvailability using AWS Elastic Load Balancing ELB which performed a balance across instances in multiple Availability Zones Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances Used Amazon IAM to maintain the user credentials and involved in creating custom IAM policies to various groups defined within the organization Used GIT repository to commit and checkout code Developed REST based Microservices using Spring Boot Developed RESTful APIs which takes in an HTTP request and produces the HTTP response in JSON format using Microservices Used various features from ReactJS like data binding routing custom filters and directives to meet various customized requirements Used HTTP services and resource in ReactJS to get and handle JSON data from the backend Maintained crossbrowser compatibility using libraries like jQuery and achieved responsiveness using Bootstrap CSS Used the automated build tool like CICD integration Providing support for System Integration Testing User Acceptance Testing Unit testing of the developedmodified application program using different test scenarios and test cases using Junit and Mockito Environment Java J2EE HTML JSP CSS JavaScript jQuery JSP AJAX ReactJS Spring Hibernate JPA JMS REST Webservices JAXRS Jackson Microservices EC2 S3 ELB Security Groups IAM RDS Cloud Watch PLSQL Oracle Mockito JUnit Soap UI GIT Maven Jenkins Glassfish JIRA Front End Developer Fidelity Investment Durham NC January 2018 to September 2018 Designed and developed the application with J2EE architecture frameworks like Spring MVC and Spring Bean Factory Developed the application based on MVC architecture and worked on latest version of objectoriented JavaScript frameworks like Angularjs NodeJS Backbone Bootstrap Ext JS Knockout JS React JS Ember JS Expres JS and Dojo toolkit Involved in Daily SCRUM meetings and weekly Spring Meetings and Replaced existed Angular JS code with Angular 4 code which decreased number of lines of code for a web application which increased performance Redesigned the code introducing wicket framework to angular js Spring MVC Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Designed and developed UI screens using JSF JavaScript AngularJS jQuery Ajax CSS3 and HTML5 Worked on designing the User Interface by coding in HTML5 AngularJS Bootstrap to create the SPA Single Page Application Implemented Elastic Search services for big data searches wrote complex queries and designimplemented clustered and multiple nodes Used JIRA for issue tracking and assigning the tasks to developers Handled Front end validations are written using JavaScript and worked on web based and clientserver application using HTML5 DHTML jQuery Angular JS Ember JS Bootstrap underscore JS Node JS CSS Bootstrap JavaScript AJAX JSP JDBC XML XSLT Django PHP Developed application using new features of Java 18 Annotations Generics enhanced for loop and Enums Also Used Java 18 Method References feature to point to methods by their names and used functional Interfaces Experience in using JSP and Servlets to create web interfaces and integrating apache tools like Kafka Integrated SOAP services use for client authorization with the application restful services Designed and developed RESTful service interface using Spring MVC to the underlying customer event API Involved in building RESTful Web services using JAXRSAPI Used Bootstrap and AngularJS Reactjs and Nodejs in effective web design Created custom Plugins templates and functions for Angular JS application Extensively used various modules in Spring like AOP DI Bean Wiring Spring Inheritance Auto Wiring Spring JDBC Templates and Spring Quartz Schedulers for Jobs Involved in consuming RESTful services and processed JSON data to render on UI Specially working with AJAX data consisting of JSON responses parsing the same and presenting on the UI layer Logging mechanisms are implemented using Log4j Integrated SoapUI and JMeter Test cases into Maven Monitored the error logs using Log4J Used Stash code versioning system for code maintenance and used Log4j to generate logs used for maintenance and bug tracking Integrated Spring DAO for data access using Hibernate to fetch data from database and avoid redundant database access statements Developed Shared module with components that will be shared across the application such as Loader ModalDialog models ErrorHandler ActiveMQ to implement real time messaging system within the project Involved in Creating and Consuming RESTful Services using Spring MVC Spring Boot Configured WebLogic Application Server and participated in structured code reviews walkthroughs Support installation of application releases into production as directed Used RESTClient and POSTMAN to test the restbased services and used Junit and Mockito to test the middleware services Used Spring Tool Suite STS for development of the application Designed and developed Microservices business components using Spring Boot Used Hibernate in the persistence layer and implemented DAOs to access data from database Environment Web Services Spring 4x Hibernate 4x HTML5 JSP JavaScript JQuery AJAX OAuth GWT CSS3 Angular JS SOAP UI XML WSDL Java18 J2EE Scala Kafka Adobe LiveCycle ES4 Micro Services Mule ESB JIRA processes GIT Design Patterns PLSQL Junit WebSphere MQ Maven Eclipse IDE CVS and Oracle 11 g Jr Java Developer WebStrack IN January 2014 to December 2016 Responsibilities Participating in user requirement sessions to gather business requirements Involved in Development Integration and Testing of application modules Involved in the requirement gathering Involvement React JS to develop the JavaScript Mostly my part was serverside development Mostly used J2EE for the web design of the web pages Developed presentation layer using JSP HTML JavaScript JQuery and CSS Have developed stateless session enterprise java beans Used CICD pattern in the frameworks Gained solid knowledge and develop the project with SQL oracle alone with MySQL also Done the database part in the MySQL with using the script Objectoriented analysis and design using common design patterns Experience collaborating with Senior Technical Staff Implemented the project using IDE Eclipse Implemented REST web service in Scala using Akka for CBPMAN log tracking application Experience with the testing team members to gain knowledge in the testing side Gained knowledge with SQL and NoSQL based solutions Used to test software when the coding was done with the first part of the project Gained knowledge in the APL alone with Java application development Implemented the customer serviceoriented attitude Connect to the Foreign JMS Server to send the message to the request queue and get the response from the reply queue Used Google Maps API JavaScript Library for map integration Worked on JQuery AJAX JSON and JSF for designing highly user interactive web pages Implemented the integration with the back end system with web services using SOAP Involved in configuring hibernate to access the database and retrieve data from the database Implemented logger for debugging and testing purposes using Log4j Developed stored procedures and triggers with Oracle Involved in the bug tracking and Unit Testing using JUnit framework Developed ANT Scripts to do compilation packaging and deployment in an application server Installed and configured Jenkins for continuous integration Used automation testing got the project Involved in peer to peer code reviews and crosschecked whether coding standards are being followed Deliver project with qualitydriven designs Environment Java J2EE JSP JSF Servlets Hibernate SQL Springs JQuery JNDI JMS Oracle JBOSS ANT XML JavaScript HTML CSS Windows WebLogic Eclipse Jenkins Log4j Google Maps API Education MS in Computer Science in Computer Science University of Massachusetts Boston MA Skills Eclipse J2ee Java Hibernate Spring Jax Jaxws Jboss Jms jquery Jsf Jsp Servlets Struts C Gradle Javascript Bootstrap Jenkins Svn Java J2Ee MVC JEE Rest Angularjs Additional Information Technical Skills Programming Languages Java 8 J2EE C PLSQL Spring 3240 Hibernate 40 UNIX Shell J2EE Frameworks Spring MVC Struts JSF Web Technologies HTML5 CSS3 JavaScript XML JSP Apache Tapestry Servlets jQuery React JS NodeJS Web Services Testing REST JAXRS and SOAP Web Services JAXWS AWS Junit 38 and 410 Slf4jlog4j Drools JMeter Familiar IDE NetBeans Eclipse SQL Developer Databases Oracle 10g11 g MySQL DB2 97 MongoDB Repositories GitHub Bitbucket SVN CVS WEBApplication Servers Oracle WebLogic 10c 11 g and 12c IBM WebSphere 8085 Tomcat 60 and 70 and JBoss Build Tool Servers Ant Maven 30 and above Gradle Jenkins Messaging JMS Kafka and Apache ActiveMQ JavaScript libraries jQuery Angular JS Backbone JS React JS Node JS Ext JS Bootstrap",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "developer",
        "Java",
        "Full",
        "Stack",
        "span",
        "ldeveloperspan",
        "Java",
        "Full",
        "Stack",
        "developer",
        "Comcast",
        "Boston",
        "MA",
        "experience",
        "analysis",
        "design",
        "development",
        "implementation",
        "WebBased",
        "ClientServer",
        "applications",
        "Database",
        "working",
        "experience",
        "Design",
        "Development",
        "Implementation",
        "field",
        "Web",
        "Applications",
        "development",
        "HTML",
        "CSS",
        "XHTML",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "Bootstrap",
        "AJAX",
        "XML",
        "JSON",
        "Restful",
        "web",
        "services",
        "web",
        "designing",
        "Expertise",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "Ajax",
        "JS",
        "webpage",
        "cross",
        "browser",
        "compatibility",
        "web",
        "design",
        "knowledge",
        "Server",
        "language",
        "Node",
        "JS",
        "Expertise",
        "Web",
        "applications",
        "JavaJ2EE",
        "Technologies",
        "Core",
        "Java",
        "JDBC",
        "Hibernate",
        "Spring",
        "JSP",
        "Servlets",
        "Java",
        "Beans",
        "EJB",
        "JNDI",
        "Proficient",
        "RDBMS",
        "concepts",
        "Oracle",
        "Developed",
        "User",
        "Interface",
        "JSP",
        "JSTL",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "jQuery",
        "Angular",
        "JS",
        "front",
        "end",
        "UI",
        "development",
        "skills",
        "scripting",
        "languages",
        "DHTML",
        "CSSCSS",
        "JSP",
        "JavaScript",
        "React",
        "XML",
        "PHP",
        "technologies",
        "Spring",
        "Web",
        "services",
        "Tomcat",
        "SOAP",
        "XML",
        "JMS",
        "JNDI",
        "JDBC",
        "Databases",
        "Oracle",
        "MySQL",
        "Microsoft",
        "SQL",
        "server",
        "tenure",
        "Software",
        "Development",
        "Strong",
        "experience",
        "development",
        "environments",
        "Eclipse",
        "NetBeans",
        "Ability",
        "Java",
        "We",
        "d",
        "technologies",
        "JSFJSP",
        "jQuery",
        "React",
        "JS",
        "understanding",
        "ObjectOriented",
        "Methodology",
        "UML",
        "Design",
        "Patterns",
        "endpresentation",
        "tier",
        "development",
        "Struts",
        "Framework",
        "JavaScript",
        "Ajax",
        "CSS",
        "Experience",
        "Maven",
        "development",
        "application",
        "Handson",
        "experience",
        "UI",
        "web",
        "applications",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AJAX",
        "Bootstrap",
        "4x",
        "Angular",
        "Knowledge",
        "Jenkins",
        "JVM",
        "language",
        "implementation",
        "version",
        "control",
        "software",
        "GitHub",
        "CVS",
        "VSS",
        "SVN",
        "ClearCase",
        "JDBC",
        "API",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Database",
        "Implement",
        "JBoss",
        "rules",
        "data",
        "Trading",
        "Systems",
        "Accounting",
        "Systems",
        "Proficient",
        "phases",
        "SDLC",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "user",
        "requirements",
        "software",
        "requirement",
        "knowledge",
        "Agile",
        "Waterfall",
        "TDD",
        "Methodologies",
        "writing",
        "unit",
        "test",
        "cases",
        "Junit",
        "Easy",
        "mock",
        "Mockito",
        "Knowledge",
        "payments",
        "industry",
        "Knowledge",
        "Mean",
        "Stack",
        "Development",
        "Project",
        "development",
        "Good",
        "programming",
        "scripting",
        "languages",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "developer",
        "Comcast",
        "Philadelphia",
        "PA",
        "October",
        "Present",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "requirements",
        "ObjectOriented",
        "Analysis",
        "Developed",
        "User",
        "Interface",
        "JSP",
        "JSTL",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "jQuery",
        "Angular",
        "JS",
        "applications",
        "Sams",
        "ecosystem",
        "applications",
        "Inventory",
        "transformation",
        "Payment",
        "Gateway",
        "file",
        "transfers",
        "Development",
        "SOAPRest",
        "web",
        "services",
        "page",
        "application",
        "MVC",
        "Frame",
        "Work",
        "login",
        "framework",
        "React",
        "HTML",
        "CSS",
        "web",
        "application",
        "React",
        "end",
        "Web",
        "API",
        "data",
        "services",
        "Gul",
        "application",
        "care",
        "part",
        "end",
        "components",
        "components",
        "Angular",
        "TypeScript",
        "view",
        "controller",
        "functionality",
        "legacy",
        "code",
        "Angular",
        "performance",
        "drools",
        "architecture",
        "Collaborate",
        "team",
        "teams",
        "QA",
        "page",
        "application",
        "scenario",
        "Angular",
        "performance",
        "Drools",
        "architecture",
        "Implement",
        "JBoss",
        "rules",
        "data",
        "Trading",
        "Systems",
        "Accounting",
        "Systems",
        "Spring",
        "support",
        "JDBC",
        "CRUD",
        "Create",
        "Read",
        "Update",
        "Delete",
        "operations",
        "Spring",
        "AOP",
        "Programming",
        "configure",
        "application",
        "Develop",
        "Serverside",
        "components",
        "Spring",
        "controllers",
        "Business",
        "Services",
        "DAO",
        "persistence",
        "layer",
        "Design",
        "RESTFUL",
        "service",
        "interface",
        "Spring",
        "customer",
        "event",
        "API",
        "Payments",
        "Registration",
        "Services",
        "Strong",
        "experience",
        "MongoDB",
        "development",
        "migration",
        "SQL",
        "database",
        "NoSQL",
        "Prepared",
        "Unit",
        "test",
        "cases",
        "functionality",
        "SIT",
        "UAT",
        "rollout",
        "production",
        "RDMS",
        "database",
        "purpose",
        "Knowledge",
        "Agency",
        "Management",
        "SystemsIncentive",
        "Management",
        "Systems",
        "Apache",
        "camel",
        "Web",
        "design",
        "Customize",
        "SOAP",
        "Web",
        "Services",
        "Spring",
        "SOAP",
        "API",
        "framework",
        "format",
        "data",
        "packets",
        "end",
        "controller",
        "system",
        "administrator",
        "level",
        "support",
        "Application",
        "Shell",
        "Shelling",
        "Provide",
        "system",
        "management",
        "account",
        "Security",
        "operating",
        "system",
        "Installation",
        "modules",
        "Scala",
        "Akka",
        "ArangoDB",
        "Heads",
        "experience",
        "Spring",
        "Boot",
        "APM",
        "Log",
        "Insight",
        "issues",
        "problems",
        "time",
        "Use",
        "Apache",
        "Maven",
        "tool",
        "build",
        "process",
        "Jenkins",
        "CI",
        "integrations",
        "performance",
        "monitoring",
        "tool",
        "Splunk",
        "Dynatrace",
        "application",
        "Splunk",
        "Wrote",
        "SOAP",
        "schema",
        "data",
        "transmission",
        "services",
        "legacy",
        "systems",
        "Development",
        "cache",
        "services",
        "Couchbase",
        "cache",
        "Cassandra",
        "REST",
        "APIs",
        "systems",
        "Design",
        "development",
        "JavaJ2EE",
        "tier",
        "components",
        "Prepare",
        "Design",
        "Documents",
        "impact",
        "analysis",
        "requirements",
        "platform",
        "business",
        "meeting",
        "AWS",
        "Cloud",
        "performance",
        "environment",
        "instances",
        "metrics",
        "load",
        "testing",
        "login",
        "framework",
        "React",
        "HTML",
        "CSS",
        "web",
        "application",
        "React",
        "end",
        "Web",
        "API",
        "data",
        "Participation",
        "tech",
        "review",
        "meetings",
        "installationsdeployments",
        "methodologies",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "TestDriven",
        "Development",
        "approach",
        "application",
        "Heads",
        "Java",
        "application",
        "development",
        "Spring",
        "Hibernate",
        "frameworks",
        "web",
        "services",
        "application",
        "Developed",
        "User",
        "interface",
        "module",
        "HTML5",
        "JavaScript",
        "ReactJS",
        "JSP",
        "jQuery",
        "Ajax",
        "jQuery",
        "web",
        "pages",
        "server",
        "frameworks",
        "animations",
        "user",
        "interface",
        "Core",
        "MVC",
        "AOP",
        "Boot",
        "Security",
        "Spring",
        "modules",
        "application",
        "development",
        "Spring",
        "Core",
        "modules",
        "IOC",
        "dependency",
        "injection",
        "web",
        "services",
        "JAXRS",
        "Jackson",
        "implementations",
        "data",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Spring",
        "Boot",
        "database",
        "part",
        "MySQL",
        "script",
        "cloud",
        "services",
        "web",
        "design",
        "Expertise",
        "design",
        "development",
        "web",
        "enterprise",
        "applications",
        "Type",
        "technologies",
        "Scala",
        "Akka",
        "Play",
        "framework",
        "Slick",
        "AWS",
        "HighAvailability",
        "AWS",
        "Elastic",
        "Load",
        "Balancing",
        "ELB",
        "balance",
        "instances",
        "Availability",
        "Zones",
        "AWS",
        "Security",
        "Groups",
        "firewalls",
        "traffic",
        "AWS",
        "EC2",
        "instances",
        "Amazon",
        "IAM",
        "user",
        "credentials",
        "custom",
        "IAM",
        "policies",
        "groups",
        "organization",
        "GIT",
        "repository",
        "checkout",
        "code",
        "Developed",
        "REST",
        "Microservices",
        "Spring",
        "Boot",
        "APIs",
        "HTTP",
        "request",
        "HTTP",
        "response",
        "format",
        "Microservices",
        "features",
        "ReactJS",
        "data",
        "custom",
        "filters",
        "directives",
        "requirements",
        "HTTP",
        "services",
        "resource",
        "ReactJS",
        "data",
        "crossbrowser",
        "compatibility",
        "libraries",
        "jQuery",
        "responsiveness",
        "Bootstrap",
        "CSS",
        "build",
        "tool",
        "CICD",
        "integration",
        "support",
        "System",
        "Integration",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "Unit",
        "testing",
        "application",
        "program",
        "test",
        "scenarios",
        "test",
        "cases",
        "Junit",
        "Mockito",
        "Environment",
        "Java",
        "J2EE",
        "HTML",
        "JSP",
        "CSS",
        "JavaScript",
        "jQuery",
        "JSP",
        "AJAX",
        "ReactJS",
        "Spring",
        "Hibernate",
        "JPA",
        "JMS",
        "REST",
        "Webservices",
        "JAXRS",
        "Jackson",
        "Microservices",
        "EC2",
        "S3",
        "ELB",
        "Security",
        "Groups",
        "IAM",
        "RDS",
        "Cloud",
        "Watch",
        "PLSQL",
        "Oracle",
        "Mockito",
        "JUnit",
        "Soap",
        "UI",
        "GIT",
        "Maven",
        "Jenkins",
        "Glassfish",
        "JIRA",
        "Front",
        "End",
        "Developer",
        "Fidelity",
        "Investment",
        "Durham",
        "NC",
        "January",
        "September",
        "application",
        "J2EE",
        "architecture",
        "frameworks",
        "Spring",
        "MVC",
        "Spring",
        "Bean",
        "Factory",
        "application",
        "MVC",
        "architecture",
        "version",
        "JavaScript",
        "frameworks",
        "Angularjs",
        "NodeJS",
        "Backbone",
        "Bootstrap",
        "Ext",
        "JS",
        "Knockout",
        "JS",
        "React",
        "JS",
        "Ember",
        "JS",
        "Expres",
        "JS",
        "Dojo",
        "toolkit",
        "Daily",
        "SCRUM",
        "meetings",
        "Spring",
        "Meetings",
        "Replaced",
        "Angular",
        "JS",
        "code",
        "Angular",
        "code",
        "number",
        "lines",
        "code",
        "web",
        "application",
        "performance",
        "code",
        "wicket",
        "framework",
        "js",
        "Spring",
        "MVC",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "data",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "UI",
        "screens",
        "JSF",
        "JavaScript",
        "jQuery",
        "Ajax",
        "CSS3",
        "HTML5",
        "User",
        "Interface",
        "HTML5",
        "Bootstrap",
        "SPA",
        "Single",
        "Page",
        "Application",
        "Elastic",
        "Search",
        "services",
        "data",
        "searches",
        "queries",
        "nodes",
        "JIRA",
        "issue",
        "tasks",
        "developers",
        "Front",
        "end",
        "validations",
        "JavaScript",
        "web",
        "application",
        "HTML5",
        "DHTML",
        "jQuery",
        "Angular",
        "JS",
        "Ember",
        "JS",
        "Bootstrap",
        "JS",
        "Node",
        "JS",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "AJAX",
        "JSP",
        "JDBC",
        "XML",
        "XSLT",
        "Django",
        "PHP",
        "application",
        "features",
        "Java",
        "Annotations",
        "Generics",
        "loop",
        "Enums",
        "Java",
        "Method",
        "References",
        "methods",
        "names",
        "Interfaces",
        "Experience",
        "JSP",
        "Servlets",
        "web",
        "interfaces",
        "apache",
        "tools",
        "Kafka",
        "Integrated",
        "SOAP",
        "services",
        "use",
        "client",
        "authorization",
        "application",
        "services",
        "service",
        "interface",
        "Spring",
        "MVC",
        "customer",
        "event",
        "API",
        "Web",
        "services",
        "JAXRSAPI",
        "Used",
        "Bootstrap",
        "AngularJS",
        "Reactjs",
        "Nodejs",
        "web",
        "design",
        "custom",
        "Plugins",
        "templates",
        "functions",
        "Angular",
        "JS",
        "application",
        "modules",
        "Spring",
        "AOP",
        "DI",
        "Bean",
        "Wiring",
        "Spring",
        "Inheritance",
        "Auto",
        "Wiring",
        "Spring",
        "JDBC",
        "Templates",
        "Spring",
        "Quartz",
        "Schedulers",
        "Jobs",
        "services",
        "data",
        "UI",
        "AJAX",
        "data",
        "JSON",
        "responses",
        "UI",
        "layer",
        "mechanisms",
        "Log4j",
        "Integrated",
        "SoapUI",
        "JMeter",
        "Test",
        "cases",
        "Maven",
        "Monitored",
        "error",
        "logs",
        "Log4J",
        "Used",
        "Stash",
        "code",
        "system",
        "code",
        "maintenance",
        "Log4j",
        "logs",
        "maintenance",
        "bug",
        "Integrated",
        "Spring",
        "DAO",
        "data",
        "access",
        "Hibernate",
        "data",
        "database",
        "database",
        "access",
        "statements",
        "Developed",
        "module",
        "components",
        "application",
        "Loader",
        "ModalDialog",
        "ErrorHandler",
        "ActiveMQ",
        "time",
        "system",
        "project",
        "Creating",
        "RESTful",
        "Services",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Configured",
        "WebLogic",
        "Application",
        "Server",
        "code",
        "reviews",
        "walkthroughs",
        "Support",
        "installation",
        "application",
        "releases",
        "production",
        "Used",
        "RESTClient",
        "POSTMAN",
        "services",
        "Junit",
        "Mockito",
        "middleware",
        "services",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "development",
        "application",
        "Microservices",
        "business",
        "components",
        "Spring",
        "Boot",
        "Hibernate",
        "persistence",
        "layer",
        "DAOs",
        "data",
        "database",
        "Environment",
        "Web",
        "Services",
        "Spring",
        "Hibernate",
        "4x",
        "HTML5",
        "JSP",
        "JavaScript",
        "JQuery",
        "AJAX",
        "OAuth",
        "GWT",
        "CSS3",
        "Angular",
        "JS",
        "SOAP",
        "UI",
        "XML",
        "WSDL",
        "Java18",
        "J2EE",
        "Scala",
        "Kafka",
        "Adobe",
        "LiveCycle",
        "ES4",
        "Micro",
        "Services",
        "Mule",
        "ESB",
        "JIRA",
        "GIT",
        "Design",
        "Patterns",
        "PLSQL",
        "Junit",
        "WebSphere",
        "MQ",
        "Maven",
        "Eclipse",
        "IDE",
        "CVS",
        "Oracle",
        "g",
        "Jr",
        "Java",
        "Developer",
        "WebStrack",
        "January",
        "December",
        "Responsibilities",
        "user",
        "requirement",
        "sessions",
        "business",
        "requirements",
        "Development",
        "Integration",
        "Testing",
        "application",
        "modules",
        "requirement",
        "Involvement",
        "React",
        "JS",
        "JavaScript",
        "part",
        "serverside",
        "development",
        "J2EE",
        "web",
        "design",
        "web",
        "pages",
        "presentation",
        "layer",
        "JSP",
        "HTML",
        "JavaScript",
        "JQuery",
        "CSS",
        "session",
        "enterprise",
        "CICD",
        "pattern",
        "frameworks",
        "knowledge",
        "project",
        "SQL",
        "oracle",
        "MySQL",
        "database",
        "part",
        "MySQL",
        "script",
        "Objectoriented",
        "analysis",
        "design",
        "design",
        "patterns",
        "Experience",
        "Senior",
        "Technical",
        "Staff",
        "project",
        "IDE",
        "Eclipse",
        "REST",
        "web",
        "service",
        "Scala",
        "Akka",
        "CBPMAN",
        "tracking",
        "application",
        "Experience",
        "testing",
        "team",
        "members",
        "knowledge",
        "testing",
        "side",
        "knowledge",
        "SQL",
        "NoSQL",
        "solutions",
        "software",
        "coding",
        "part",
        "project",
        "knowledge",
        "APL",
        "Java",
        "application",
        "development",
        "customer",
        "attitude",
        "Foreign",
        "JMS",
        "Server",
        "message",
        "request",
        "queue",
        "response",
        "reply",
        "queue",
        "Google",
        "Maps",
        "API",
        "JavaScript",
        "Library",
        "map",
        "integration",
        "JQuery",
        "AJAX",
        "JSON",
        "JSF",
        "user",
        "web",
        "pages",
        "integration",
        "end",
        "system",
        "web",
        "services",
        "SOAP",
        "hibernate",
        "database",
        "retrieve",
        "data",
        "database",
        "testing",
        "purposes",
        "Log4j",
        "Developed",
        "procedures",
        "triggers",
        "Oracle",
        "bug",
        "tracking",
        "Unit",
        "Testing",
        "JUnit",
        "framework",
        "ANT",
        "Scripts",
        "compilation",
        "packaging",
        "deployment",
        "application",
        "server",
        "Jenkins",
        "integration",
        "automation",
        "testing",
        "project",
        "peer",
        "peer",
        "code",
        "reviews",
        "standards",
        "Deliver",
        "project",
        "designs",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "JSF",
        "Servlets",
        "Hibernate",
        "SQL",
        "Springs",
        "JQuery",
        "JNDI",
        "JMS",
        "Oracle",
        "JBOSS",
        "ANT",
        "XML",
        "JavaScript",
        "HTML",
        "CSS",
        "Windows",
        "WebLogic",
        "Eclipse",
        "Jenkins",
        "Log4j",
        "Google",
        "Maps",
        "API",
        "Education",
        "MS",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "University",
        "Massachusetts",
        "Boston",
        "MA",
        "Skills",
        "Eclipse",
        "J2ee",
        "Java",
        "Hibernate",
        "Spring",
        "Jax",
        "Jaxws",
        "Jboss",
        "Jms",
        "jquery",
        "Jsf",
        "Jsp",
        "Servlets",
        "Struts",
        "C",
        "Gradle",
        "Javascript",
        "Bootstrap",
        "Jenkins",
        "Svn",
        "Java",
        "MVC",
        "JEE",
        "Rest",
        "Angularjs",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Programming",
        "Languages",
        "Java",
        "J2EE",
        "C",
        "PLSQL",
        "Spring",
        "Hibernate",
        "UNIX",
        "Shell",
        "J2EE",
        "Frameworks",
        "Spring",
        "MVC",
        "Struts",
        "JSF",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "XML",
        "JSP",
        "Apache",
        "Tapestry",
        "Servlets",
        "jQuery",
        "React",
        "JS",
        "NodeJS",
        "Web",
        "Services",
        "Testing",
        "REST",
        "JAXRS",
        "SOAP",
        "Web",
        "Services",
        "JAXWS",
        "AWS",
        "Junit",
        "Slf4jlog4j",
        "Drools",
        "JMeter",
        "Familiar",
        "IDE",
        "NetBeans",
        "Eclipse",
        "SQL",
        "Developer",
        "Oracle",
        "g",
        "MySQL",
        "DB2",
        "Repositories",
        "GitHub",
        "Bitbucket",
        "SVN",
        "CVS",
        "WEBApplication",
        "Servers",
        "Oracle",
        "WebLogic",
        "10c",
        "g",
        "IBM",
        "WebSphere",
        "Tomcat",
        "JBoss",
        "Build",
        "Tool",
        "Servers",
        "Ant",
        "Maven",
        "Gradle",
        "Jenkins",
        "JMS",
        "Kafka",
        "Apache",
        "ActiveMQ",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "React",
        "JS",
        "Node",
        "JS",
        "Ext",
        "JS",
        "Bootstrap"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:01:58.744115",
    "resume_data": "Java Full Stack developer Java Full Stack span ldeveloperspan Java Full Stack developer Comcast Boston MA Extensive experience in analysis design development and implementation of WebBased ClientServer applications and Database applications Extensive working experience with in Design Development and Implementation in the field of Web Applications development using HTML CSS XHTML JavaScript JQuery Angular JS Bootstrap AJAX XML JSON Restful web services and Responsive web designing Expertise in developing web pages using HTML5 CSS3 Bootstrap JavaScript jQuery Ajax and Angular JS with webpage cross browser compatibility and responsive web design and have knowledge on Server scripting language like Node JS Expertise in developing and implementing Web applications using JavaJ2EE Technologies including Core Java JDBC Hibernate Spring JSP Servlets Java Beans EJB and JNDI Proficient in using RDBMS concepts and worked with Oracle Developed User Interface using JSP JSTL HTML CSS Java Script jQuery and Angular JS Strong front end UI development skills using scripting languages HTMLHTML DHTML CSSCSS JSP JavaScript React 1686 XML and PHP Worked extensively on technologies Spring Web services Tomcat SOAP XML JMS JNDI JDBC and various Databases like Oracle MySQL and Microsoft SQL server during my tenure in Software Development Strong experience in various development environments like Eclipse NetBeans Ability to understand the Java Wed technologies JSFJSP jQuery React JS Thorough understanding of ObjectOriented Methodology UML and Design Patterns Worked on front endpresentation tier development using Struts Framework that includes JavaScript Ajax and CSS Experience of the Maven in the development of the application Handson experience in creating UI web applications using HTML5 CSS3 JavaScript 20 and jQuery 3x AJAX Bootstrap 4x Angular 234 and 5 Knowledge in the Jenkins and also the other JVM language Worked on implementation of the version control software GitHub CVS VSS SVN and ClearCase Experienced with JDBC API to call SQL Queries and Stored Procedures in the Database Implement JBoss drools rules for comparing the data between Trading Systems and Accounting Systems Proficient in all phases of SDLC analysis design development testing and deployment and highly competent in gathering user requirements and converting them into software requirement specifications Extensive knowledge in Agile Waterfall and TDD Methodologies Experienced in writing and implementing unit test cases using Junit Easy mock and Mockito Knowledge of the payments industry Knowledge in the Mean Stack Development in the Project development Good at the programming and also with scripting languages Authorized to work in the US for any employer Work Experience Java Full Stack developer Comcast Philadelphia PA October 2018 to Present Responsibilities Involved in software development life cycle starting from requirements gathering and performing ObjectOriented Analysis Developed User Interface using JSP JSTL HTML CSS Java Script jQuery and Angular JS Involved in developing various applications within Sams ecosystem of applications like Inventory transformation Payment Gateway and internal to external file transfers Development of the new SOAPRest Based web services Developed Single page application with using AngularJS with MVC Frame Work Designed and developed the login portal using framework React along HTML CSS Developed a web application by using React as front end and using Web API to receive and pass data to backend Integrate the services with Gul application Take care of complete java multithreading part in back end components Built components with Angular TypeScript to implement view controller functionality helped with converting legacy AngularJS code to Angular 7 Implemented a highlyscalable vertical and horizontal performance efficient drools architecture Collaborate effectively within a team and across teams with QA and worked on Single page application scenario for Angular 2 Implemented a highlyscalable vertical and horizontal performance efficient Drools architecture Implement JBoss drools rules for comparing the data between Trading Systems and Accounting Systems Using Spring support for JDBC for all CRUD Create Read Update Delete operations Develop the Spring AOP Programming to configure logging for the application Develop Serverside components which include Spring controllers Business Services DAO and persistence layer Design and develop RESTFUL service interface using Spring 4 to the underlying customer event API for Payments Registration Services Strong experience with MongoDB development and migration from SQL relational database to NoSQL Prepared Unit test cases for testing the new functionality and supporting SIT and UAT till the rollout to production Used RDMS queries for the database purpose Knowledge in the Agency Management SystemsIncentive Management Systems Used Apache camel to Web design Customize SOAP Web Services using Spring SOAP API framework sending JSON format data packets between front end and middletier controller Provide the system administrator level support of Application Using Shell Shelling Provide system management involving account monitoring Security operating system Installation Experienced in developing fully functional responsive modules using Scala with Akka ArangoDB Heads on experience Spring Boot APM Log Insight Responds to issues and problems via ready brought forward and ensures they are resolved in time Use Apache Maven builds tool to automate the build process and Jenkins CI for continuous integrations Use the performance monitoring tool like Splunk and Dynatrace Monitoring the application using the Splunk Wrote SOAP schema for data transmission among services from legacy systems Development of new cache services using Couchbase cache and Cassandra Exposing new REST APIs for other systems Design development of new JavaJ2EE middle tier components Prepare Design Documents conducted an impact analysis of requirements on the platform participated in a business meeting Utilized AWS Cloud Watch to monitor the performance environment instances for operational and performance metrics during load testing Designed and developed the login portal using framework React along HTML CSS Developed a web application by using React as front end and using Web API to receive and pass data to backend Participation in tech review scrum meetings for recent ongoing installationsdeployments Followed Agile methodologies in the Software Development Life Cycle with a TestDriven Development approach to build the application Heads on the Java the application development Implemented Spring and Hibernate frameworks along with Restful web services in developing the application Developed User interface module HTML5 JavaScript ReactJS JSP and jQuery Used Ajax and jQuery for creating dynamic web pages which interact frequently with the server Used frameworks for generating animations in the user interface Used Core MVC AOP Boot and Security Spring modules for application development Worked on Spring Core modules like IOC and dependency injection Implemented RESTful web services by using JAXRS and Jackson implementations to retrieve data from clientside Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Spring Boot Done the database part in the MySQL with using the script Used cloud services to deploy web design Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Implemented AWS HighAvailability using AWS Elastic Load Balancing ELB which performed a balance across instances in multiple Availability Zones Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances Used Amazon IAM to maintain the user credentials and involved in creating custom IAM policies to various groups defined within the organization Used GIT repository to commit and checkout code Developed REST based Microservices using Spring Boot Developed RESTful APIs which takes in an HTTP request and produces the HTTP response in JSON format using Microservices Used various features from ReactJS like data binding routing custom filters and directives to meet various customized requirements Used HTTP services and resource in ReactJS to get and handle JSON data from the backend Maintained crossbrowser compatibility using libraries like jQuery and achieved responsiveness using Bootstrap CSS Used the automated build tool like CICD integration Providing support for System Integration Testing User Acceptance Testing Unit testing of the developedmodified application program using different test scenarios and test cases using Junit and Mockito Environment Java J2EE HTML JSP CSS JavaScript jQuery JSP AJAX ReactJS Spring Hibernate JPA JMS REST Webservices JAXRS Jackson Microservices EC2 S3 ELB Security Groups IAM RDS Cloud Watch PLSQL Oracle Mockito JUnit Soap UI GIT Maven Jenkins Glassfish JIRA Front End Developer Fidelity Investment Durham NC January 2018 to September 2018 Designed and developed the application with J2EE architecture frameworks like Spring MVC and Spring Bean Factory Developed the application based on MVC architecture and worked on latest version of objectoriented JavaScript frameworks like Angularjs NodeJS Backbone Bootstrap Ext JS Knockout JS React JS Ember JS Expres JS and Dojo toolkit Involved in Daily SCRUM meetings and weekly Spring Meetings and Replaced existed Angular JS code with Angular 4 code which decreased number of lines of code for a web application which increased performance Redesigned the code introducing wicket framework to angular js Spring MVC Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Designed and developed UI screens using JSF JavaScript AngularJS jQuery Ajax CSS3 and HTML5 Worked on designing the User Interface by coding in HTML5 AngularJS Bootstrap to create the SPA Single Page Application Implemented Elastic Search services for big data searches wrote complex queries and designimplemented clustered and multiple nodes Used JIRA for issue tracking and assigning the tasks to developers Handled Front end validations are written using JavaScript and worked on web based and clientserver application using HTML5 DHTML jQuery Angular JS Ember JS Bootstrap underscore JS Node JS CSS Bootstrap JavaScript AJAX JSP JDBC XML XSLT Django PHP Developed application using new features of Java 18 Annotations Generics enhanced for loop and Enums Also Used Java 18 Method References feature to point to methods by their names and used functional Interfaces Experience in using JSP and Servlets to create web interfaces and integrating apache tools like Kafka Integrated SOAP services use for client authorization with the application restful services Designed and developed RESTful service interface using Spring MVC to the underlying customer event API Involved in building RESTful Web services using JAXRSAPI Used Bootstrap and AngularJS Reactjs and Nodejs in effective web design Created custom Plugins templates and functions for Angular JS application Extensively used various modules in Spring like AOP DI Bean Wiring Spring Inheritance Auto Wiring Spring JDBC Templates and Spring Quartz Schedulers for Jobs Involved in consuming RESTful services and processed JSON data to render on UI Specially working with AJAX data consisting of JSON responses parsing the same and presenting on the UI layer Logging mechanisms are implemented using Log4j Integrated SoapUI and JMeter Test cases into Maven Monitored the error logs using Log4J Used Stash code versioning system for code maintenance and used Log4j to generate logs used for maintenance and bug tracking Integrated Spring DAO for data access using Hibernate to fetch data from database and avoid redundant database access statements Developed Shared module with components that will be shared across the application such as Loader ModalDialog models ErrorHandler ActiveMQ to implement real time messaging system within the project Involved in Creating and Consuming RESTful Services using Spring MVC Spring Boot Configured WebLogic Application Server and participated in structured code reviews walkthroughs Support installation of application releases into production as directed Used RESTClient and POSTMAN to test the restbased services and used Junit and Mockito to test the middleware services Used Spring Tool Suite STS for development of the application Designed and developed Microservices business components using Spring Boot Used Hibernate in the persistence layer and implemented DAOs to access data from database Environment Web Services Spring 4x Hibernate 4x HTML5 JSP JavaScript JQuery AJAX OAuth GWT CSS3 Angular JS SOAP UI XML WSDL Java18 J2EE Scala Kafka Adobe LiveCycle ES4 Micro Services Mule ESB JIRA processes GIT Design Patterns PLSQL Junit WebSphere MQ Maven Eclipse IDE CVS and Oracle 11g Jr Java Developer WebStrack IN January 2014 to December 2016 Responsibilities Participating in user requirement sessions to gather business requirements Involved in Development Integration and Testing of application modules Involved in the requirement gathering Involvement React JS to develop the JavaScript Mostly my part was serverside development Mostly used J2EE for the web design of the web pages Developed presentation layer using JSP HTML JavaScript JQuery and CSS Have developed stateless session enterprise java beans Used CICD pattern in the frameworks Gained solid knowledge and develop the project with SQL oracle alone with MySQL also Done the database part in the MySQL with using the script Objectoriented analysis and design using common design patterns Experience collaborating with Senior Technical Staff Implemented the project using IDE Eclipse Implemented REST web service in Scala using Akka for CBPMAN log tracking application Experience with the testing team members to gain knowledge in the testing side Gained knowledge with SQL and NoSQL based solutions Used to test software when the coding was done with the first part of the project Gained knowledge in the APL alone with Java application development Implemented the customer serviceoriented attitude Connect to the Foreign JMS Server to send the message to the request queue and get the response from the reply queue Used Google Maps API JavaScript Library for map integration Worked on JQuery AJAX JSON and JSF for designing highly user interactive web pages Implemented the integration with the back end system with web services using SOAP Involved in configuring hibernate to access the database and retrieve data from the database Implemented logger for debugging and testing purposes using Log4j Developed stored procedures and triggers with Oracle Involved in the bug tracking and Unit Testing using JUnit framework Developed ANT Scripts to do compilation packaging and deployment in an application server Installed and configured Jenkins for continuous integration Used automation testing got the project Involved in peer to peer code reviews and crosschecked whether coding standards are being followed Deliver project with qualitydriven designs Environment Java J2EE JSP JSF Servlets Hibernate SQL Springs JQuery JNDI JMS Oracle JBOSS ANT XML JavaScript HTML CSS Windows WebLogic Eclipse Jenkins Log4j Google Maps API Education MS in Computer Science in Computer Science University of Massachusetts Boston MA Skills Eclipse J2ee Java Hibernate Spring Jax Jaxws Jboss Jms jquery Jsf Jsp Servlets Struts C Gradle Javascript Bootstrap Jenkins Svn Java J2Ee MVC JEE Rest Angularjs Additional Information Technical Skills Programming Languages Java 8 J2EE C PLSQL Spring 3240 Hibernate 40 UNIX Shell J2EE Frameworks Spring MVC Struts JSF Web Technologies HTML5 CSS3 JavaScript XML JSP Apache Tapestry Servlets jQuery React JS NodeJS Web Services Testing REST JAXRS and SOAP Web Services JAXWS AWS Junit 38 and 410 Slf4jlog4j Drools JMeter Familiar IDE NetBeans Eclipse SQL Developer Databases Oracle 10g11g MySQL DB2 97 MongoDB Repositories GitHub Bitbucket SVN CVS WEBApplication Servers Oracle WebLogic 10c 11g and 12c IBM WebSphere 8085 Tomcat 60 and 70 and JBoss Build Tool Servers Ant Maven 30 and above Gradle Jenkins Messaging JMS Kafka and Apache ActiveMQ JavaScript libraries jQuery Angular JS Backbone JS React JS Node JS Ext JS Bootstrap",
    "unique_id": "dfbb8af9-76bb-4339-a9c6-106fbb00d067"
}