{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Vanguard group inc Professional 6years of experience as a WebApplication Developer and coding with analytical programming using Python Django Java and C Experience object oriented programming OOP concepts using Python C and Java Experienced in developing webbased applications using Python DJANGO GTK QT C XML CSS3 HTML5 DHTML JavaScript and JQuery Good experience of software development in Python libraries used Beautiful Soup numpy scipy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm emacs Experienced in Software development life cycle and architecting scalable platforms object oriented programming database design and agile methodologies Experience with Web Development Amazon Web Services Python and the Django framework Experienced in installing configuring modifying testing and deploying applications with Apache Experience of software development with Python and various libraries of Python pythontwitter Pandas Data frame MySQL dB for database connectivity Regular expression File IO etc Extensively worked on Spark SQL Data frames RDDs to improve the performance of the application Developed Spark scripts by using Scala IDEs as per the business requirement Used Spark SQL and Hive SQL to process structured and unstructured data Expertise in handling web applications UI security logging backend services Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Experienced in web applications development using Django Python Flask Python and Nodejs AngularJS DOJO JQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J Mongo DB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Python by configuring packages like MySQL Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpscenter and custom scripts Extensive experience in deploying managing and developing Mongo DB clusters Good experience in Shell Scripting SQL Server UNIX and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Employed production site using Apache 20 with mod python Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux Fedora Good Knowledge of web services using SOAP and REST protocols Good knowledge of version control software CVS SVN ETL GitHub Experience of Build Deployment phase and usage of Continuous Integration CICD tools build configuration change history for releases Maintenance of build system automation smoke test processes managing configuring and maintaining source control management systems Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Excellent Experience of Databases such as MySQL Oracle 8g9g10g Microsoft SQL Server Postgre SQL SQLPLSQL concepts Power Shell Good hands on experience in data warehouse developer database engineer for highvolume data processing Good written and verbal communications skills and Excellent Team player Authorized to work in the US for any employer Work Experience Python Developer Vanguard group inc Harrisburg PA September 2017 to Present Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data integrity Developed merge jobs in Python to extract and load data into MySQL database Rewrite existing modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used jQuery for all clientside data manipulation Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL package to retrieve information Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Responsible for debugging and troubleshooting the web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Providing reports for business users for sales forecasting and planning Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt NET PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer CVS pharmacy Woonsocket RI October 2016 to August 2017 Responsibilities Used Django Framework for developing web applications using model view control architecture Used MultiThreading factory model to distribute learning process backtesting and the into various worker processes Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB and VMWare API calls Implemented configuration changes for data models Maintained and updated existing automated solutions Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Extracted the data that are required for the segmentation using spark environment Worked on reading multiple data formats on HDFS using Spark Test and validated the custom scripts Created custom new columns depending up on the use case while ingesting the data into Hadoop Lake using Spark Delivered automated solutions for science models Analysed the SQL scripts and designed it by using Spark SQL for faster performance Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Troubleshooting the issues related to all domain reported by L2 team on daily basis Extensively used python modules such as requests urllib and urllib2 for web crawling Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents As point on the L2 support team worked with application database reporting SQM and project managements team to resolve Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and SQL alchemy Interacted with QA to develop test plans from highlevel design documentation Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub Jira Python Developer Dorman Products Inc Colmar PA September 2015 to September 2016 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed Merge jobs in Python to extract and load data into MySQL database and worked on MYSQL data lineage process to map source to target DB table and column mappings using OO Python Designed the database schema for the content management system Published REST APIs to fetch data from Elastic Search clusters for client based applications to search assets and claims by multifield indexes and Used Elastic Search for setting up the search cluster Written Python scripts to parse JSON documents and load the data in database Developed multithreaded standalone application in Python PHP C to view Circuit parameters and performance Executed MYSQL database queries from python using PythonMySQL connector and MySQL package to retrieve information Generated property list for every application dynamically using python Developed wrapper scripts in Bash shell to automate execution of multiple Python scripts Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Key performance index and filtering of displayed columns to help customers understand the analytics data that is provided by GC Developed the backend web services using Python and Django REST framework Reengineered various modules for implementing changes and created efficient system Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented discretization binning data wrangling used to clean transform merge and reshape data frames as well as upgraded two web applications from Django 09x to Django 1x Built Python scripts to identify and correct erroneous data in PostgreSQL database using clustering regression and statistics Developed unit testregression test framework for workingnew code Used PyQt during integration phase of the application Analyzed data using Excel VBA scripts and Macros Closely involved in performance evaluation and User Acceptance Test Maintained program libraries users manuals and technical documentation Used Bitbucket for version control Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON SOAP Environment Python 33 PyQt PyQuery MVW HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows AWS MongoDB PostgreSQL and python libraries such as Numpy IPython SQL Alchemy Python developer RigVeda Software Solutions HYD May 2014 to August 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Contributed to development of security policies and processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Deployed project into Amazon web services AWS using amazon elastic bean stalk Refractor PythonDjango modules to deliver certain format of data Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written functional Php unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and Mongo DB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL NoSQLand Mongo DB Interact with backend using Java and Hibernate Framework Involved in Coding of Enterprise Java Beans which implements business rules and business logic Involved in developing the Java classes and JavaBeans Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Designed developed and updated automated tests written in Python for the software product Qdirect Must have strong experience in Python to support QDirect and major part of QDirect code is on Python Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Developed multiple spark batch jobs in Scala using Spark SQL and performed transformations using many APIs and update master data in Cassandra database as per the business requirement Written SparkScala scripts by creating multiple udfs spark context Cassandra sql context multiple APIs methods which support data frames RDDs data frame Joins Cassandra table joins and finally writesave the data  to Cassandra database As part of the POC migrated the data from source systems to another environment using Spark SparkSQL Developed and implemented core API services using Python with spark Experienced in Export Transform Load Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Created data frames in particular schema from raw data stored at Amazon S3 using PySpark Environment Linux Python 27 25 Django 17 15 HTML5 XML JavaScript JQuery MS SQL Server NoSQL Amazon s3 Jenkins Mongo DB Beautiful soup Eclipse Git GitHub JIRA Software Python developer RigVeda Software Solutions HYD April 2013 to May 2014 Responsibilities Translated the customer requirements into design specifications and ensured that the requirements translate into software solution Application was based on service oriented architecture and used Python 25 Django 15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Involved in creating Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Involved in the design development and testing phases of application using AGILE methodology Developed and designed an API Restful Web Service Used the Python language to develop webbased data retrieval systems Designed and maintained databases using Python and developed Python based API Restful Web Service using Flask SQLAlchemy and PostgreSQL Developed web sites using Django Python XHTML CSS and JavaScript Developed and designed email marketing campaigns using HTML and CSS Tested and implemented applications built using Python Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Created complex dynamic HTML UI using jQuery Automated Regression analysis for determining fund returns based on index returns PythonExcel Worked on development of SQL and stored procedures trigger and function on MYSQL NoSQL Developed shopping cart for Library and integrated web services to access the payment Used Php language on lamp server to develop page Developed server based web traffic statistical analysis tool using Flask Pandas Implemented and tested python based web applications interacting with MySQL Developed dynamic interaction page on net MSvisualbasic 2014 using SQL developer tools Simple web app for reviewing sitcoms that gives users the ability to view add review updown vote search etc Performed joins group by and other operations in Map Reduce using Python Handled importing of data from various data sources performed transformations using Hive Map Reduce and loaded data into HDFS Wrote Map Reduce code to make unstructured data into semi structured data and loaded into Hive tables Supported Map Reduce Programs those are running on the cluster Executed queries using Hive and developed Map Reduce jobs to analyze data Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Environment Linux Python 27 Mod Python Perl PHP MySQL NoSQL JavaScript Ajax Shell Script HTML CSS",
    "entities": [
        "SQL Server Integration Service",
        "QDirect",
        "GC Developed",
        "Oracle 8g9g10",
        "API Restful Web Service",
        "Qdirect Must",
        "Test Driven Development TDD",
        "ORMsDOMs",
        "Nodejs",
        "RigVeda Software Solutions",
        "HDFS",
        "SQM",
        "Spark Test",
        "the User Interface",
        "Agile Software Methodology",
        "Bash Key",
        "webapp2",
        "Developed Spark",
        "Java Server Pages",
        "MVTMVC",
        "jQuery Automated Regression",
        "LAMP Linux",
        "CVS SVN",
        "Panda",
        "SOAP",
        "XML",
        "Spark SQL Data",
        "Bootstrap CSS",
        "Maintained",
        "Bash Design",
        "DevOps",
        "SQL Server Analysis Service",
        "Automated",
        "JQuery Good",
        "Macros Closely",
        "JQuery Contributed",
        "LAMP",
        "Amazon",
        "SparkScala",
        "Amazon S3",
        "SSIS",
        "Python",
        "Generated",
        "Developed",
        "PythonPHP Architecture Experienced",
        "Bash",
        "Active Records Involved",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "QDirect code",
        "Web Development Amazon Web Services Python",
        "Python Unit",
        "MultiThreading",
        "SQL SQLPLSQL",
        "PythonPHP",
        "User Defined Function Developed",
        "HTML5",
        "AGILE",
        "Created Data",
        "User Acceptance Test Maintained",
        "JSP",
        "VMWare API",
        "Shell Scripting",
        "Harrisburg",
        "PyQt",
        "NagiosOpscenter",
        "Team Foundation",
        "HTML UI",
        "MVC",
        "PythonDjango",
        "Django Curl XML JSON",
        "EJB",
        "CSV",
        "HTML CSS",
        "Development of Python",
        "API",
        "US",
        "HTML CSS JavaScript",
        "QA",
        "Present Responsibilities Designed",
        "Created",
        "Analyzed",
        "Scala",
        "WAMP Windows Apache",
        "JSF",
        "Used Selenium Library",
        "HTML",
        "SQL",
        "Django Oracle DB",
        "Troubleshoot",
        "lPythonspan",
        "Administrators",
        "WebApplication Developer",
        "Hive",
        "CICD",
        "Build Deployment",
        "CSS Tested",
        "Pandas",
        "SQLite",
        "ETL",
        "Spark SparkSQL Developed",
        "Pandas Data",
        "JavaScript Created",
        "Performed",
        "PEP Guidelines",
        "Djangos",
        "Spark SQL",
        "OO Python Designed",
        "UI",
        "Data Layer and Search",
        "Selenium",
        "Microsoft",
        "Continuous Integration",
        "VBA",
        "POC",
        "jQuery",
        "Python PHP C",
        "REST",
        "the Complete Software Development Life Cycle",
        "Excellent Team",
        "HTMLCSSJS",
        "Mongo DB Interact",
        "Application",
        "Mongo DB",
        "Integration",
        "Used Elastic Search",
        "Export Transform Load Representation",
        "SPRINT",
        "Developed GUI"
    ],
    "experience": "Experience object oriented programming OOP concepts using Python C and Java Experienced in developing webbased applications using Python DJANGO GTK QT C XML CSS3 HTML5 DHTML JavaScript and JQuery Good experience of software development in Python libraries used Beautiful Soup numpy scipy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm emacs Experienced in Software development life cycle and architecting scalable platforms object oriented programming database design and agile methodologies Experience with Web Development Amazon Web Services Python and the Django framework Experienced in installing configuring modifying testing and deploying applications with Apache Experience of software development with Python and various libraries of Python pythontwitter Pandas Data frame MySQL dB for database connectivity Regular expression File IO etc Extensively worked on Spark SQL Data frames RDDs to improve the performance of the application Developed Spark scripts by using Scala IDEs as per the business requirement Used Spark SQL and Hive SQL to process structured and unstructured data Expertise in handling web applications UI security logging backend services Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Experienced in web applications development using Django Python Flask Python and Nodejs AngularJS DOJO JQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J Mongo DB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Python by configuring packages like MySQL Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpscenter and custom scripts Extensive experience in deploying managing and developing Mongo DB clusters Good experience in Shell Scripting SQL Server UNIX and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Employed production site using Apache 20 with mod python Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux Fedora Good Knowledge of web services using SOAP and REST protocols Good knowledge of version control software CVS SVN ETL GitHub Experience of Build Deployment phase and usage of Continuous Integration CICD tools build configuration change history for releases Maintenance of build system automation smoke test processes managing configuring and maintaining source control management systems Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Excellent Experience of Databases such as MySQL Oracle 8g9g10 g Microsoft SQL Server Postgre SQL SQLPLSQL concepts Power Shell Good hands on experience in data warehouse developer database engineer for highvolume data processing Good written and verbal communications skills and Excellent Team player Authorized to work in the US for any employer Work Experience Python Developer Vanguard group inc Harrisburg PA September 2017 to Present Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data integrity Developed merge jobs in Python to extract and load data into MySQL database Rewrite existing modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used jQuery for all clientside data manipulation Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL package to retrieve information Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Responsible for debugging and troubleshooting the web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Providing reports for business users for sales forecasting and planning Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt NET PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer CVS pharmacy Woonsocket RI October 2016 to August 2017 Responsibilities Used Django Framework for developing web applications using model view control architecture Used MultiThreading factory model to distribute learning process backtesting and the into various worker processes Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB and VMWare API calls Implemented configuration changes for data models Maintained and updated existing automated solutions Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Extracted the data that are required for the segmentation using spark environment Worked on reading multiple data formats on HDFS using Spark Test and validated the custom scripts Created custom new columns depending up on the use case while ingesting the data into Hadoop Lake using Spark Delivered automated solutions for science models Analysed the SQL scripts and designed it by using Spark SQL for faster performance Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Troubleshooting the issues related to all domain reported by L2 team on daily basis Extensively used python modules such as requests urllib and urllib2 for web crawling Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents As point on the L2 support team worked with application database reporting SQM and project managements team to resolve Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and SQL alchemy Interacted with QA to develop test plans from highlevel design documentation Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub Jira Python Developer Dorman Products Inc Colmar PA September 2015 to September 2016 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed Merge jobs in Python to extract and load data into MySQL database and worked on MYSQL data lineage process to map source to target DB table and column mappings using OO Python Designed the database schema for the content management system Published REST APIs to fetch data from Elastic Search clusters for client based applications to search assets and claims by multifield indexes and Used Elastic Search for setting up the search cluster Written Python scripts to parse JSON documents and load the data in database Developed multithreaded standalone application in Python PHP C to view Circuit parameters and performance Executed MYSQL database queries from python using PythonMySQL connector and MySQL package to retrieve information Generated property list for every application dynamically using python Developed wrapper scripts in Bash shell to automate execution of multiple Python scripts Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Key performance index and filtering of displayed columns to help customers understand the analytics data that is provided by GC Developed the backend web services using Python and Django REST framework Reengineered various modules for implementing changes and created efficient system Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented discretization binning data wrangling used to clean transform merge and reshape data frames as well as upgraded two web applications from Django 09x to Django 1x Built Python scripts to identify and correct erroneous data in PostgreSQL database using clustering regression and statistics Developed unit testregression test framework for workingnew code Used PyQt during integration phase of the application Analyzed data using Excel VBA scripts and Macros Closely involved in performance evaluation and User Acceptance Test Maintained program libraries users manuals and technical documentation Used Bitbucket for version control Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON SOAP Environment Python 33 PyQt PyQuery MVW HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows AWS MongoDB PostgreSQL and python libraries such as Numpy IPython SQL Alchemy Python developer RigVeda Software Solutions HYD May 2014 to August 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Contributed to development of security policies and processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Deployed project into Amazon web services AWS using amazon elastic bean stalk Refractor PythonDjango modules to deliver certain format of data Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written functional Php unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and Mongo DB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL NoSQLand Mongo DB Interact with backend using Java and Hibernate Framework Involved in Coding of Enterprise Java Beans which implements business rules and business logic Involved in developing the Java classes and JavaBeans Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Designed developed and updated automated tests written in Python for the software product Qdirect Must have strong experience in Python to support QDirect and major part of QDirect code is on Python Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Developed multiple spark batch jobs in Scala using Spark SQL and performed transformations using many APIs and update master data in Cassandra database as per the business requirement Written SparkScala scripts by creating multiple udfs spark context Cassandra sql context multiple APIs methods which support data frames RDDs data frame Joins Cassandra table joins and finally writesave the data   to Cassandra database As part of the POC migrated the data from source systems to another environment using Spark SparkSQL Developed and implemented core API services using Python with spark Experienced in Export Transform Load Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Created data frames in particular schema from raw data stored at Amazon S3 using PySpark Environment Linux Python 27 25 Django 17 15 HTML5 XML JavaScript JQuery MS SQL Server NoSQL Amazon s3 Jenkins Mongo DB Beautiful soup Eclipse Git GitHub JIRA Software Python developer RigVeda Software Solutions HYD April 2013 to May 2014 Responsibilities Translated the customer requirements into design specifications and ensured that the requirements translate into software solution Application was based on service oriented architecture and used Python 25 Django 15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Involved in creating Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Involved in the design development and testing phases of application using AGILE methodology Developed and designed an API Restful Web Service Used the Python language to develop webbased data retrieval systems Designed and maintained databases using Python and developed Python based API Restful Web Service using Flask SQLAlchemy and PostgreSQL Developed web sites using Django Python XHTML CSS and JavaScript Developed and designed email marketing campaigns using HTML and CSS Tested and implemented applications built using Python Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Created complex dynamic HTML UI using jQuery Automated Regression analysis for determining fund returns based on index returns PythonExcel Worked on development of SQL and stored procedures trigger and function on MYSQL NoSQL Developed shopping cart for Library and integrated web services to access the payment Used Php language on lamp server to develop page Developed server based web traffic statistical analysis tool using Flask Pandas Implemented and tested python based web applications interacting with MySQL Developed dynamic interaction page on net MSvisualbasic 2014 using SQL developer tools Simple web app for reviewing sitcoms that gives users the ability to view add review updown vote search etc Performed joins group by and other operations in Map Reduce using Python Handled importing of data from various data sources performed transformations using Hive Map Reduce and loaded data into HDFS Wrote Map Reduce code to make unstructured data into semi structured data and loaded into Hive tables Supported Map Reduce Programs those are running on the cluster Executed queries using Hive and developed Map Reduce jobs to analyze data Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Environment Linux Python 27 Mod Python Perl PHP MySQL NoSQL JavaScript Ajax Shell Script HTML CSS",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Vanguard",
        "group",
        "inc",
        "Professional",
        "6years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "Python",
        "Django",
        "Java",
        "C",
        "Experience",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "Java",
        "applications",
        "Python",
        "DJANGO",
        "GTK",
        "QT",
        "C",
        "XML",
        "CSS3",
        "HTML5",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Good",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "emacs",
        "Software",
        "development",
        "life",
        "cycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "Experience",
        "Web",
        "Development",
        "Amazon",
        "Web",
        "Services",
        "Python",
        "Django",
        "framework",
        "testing",
        "applications",
        "Apache",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Python",
        "pythontwitter",
        "Pandas",
        "Data",
        "frame",
        "MySQL",
        "database",
        "connectivity",
        "expression",
        "File",
        "IO",
        "Spark",
        "SQL",
        "Data",
        "RDDs",
        "performance",
        "application",
        "Spark",
        "scripts",
        "Scala",
        "IDEs",
        "business",
        "requirement",
        "Spark",
        "SQL",
        "Hive",
        "SQL",
        "data",
        "Expertise",
        "web",
        "applications",
        "UI",
        "security",
        "services",
        "experience",
        "web",
        "applications",
        "MVTMVC",
        "architecture",
        "Django",
        "Flask",
        "Webapp2",
        "spring",
        "web",
        "application",
        "frameworks",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "Python",
        "Nodejs",
        "DOJO",
        "JQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "Experience",
        "Linux",
        "Bash",
        "PEP",
        "Guidelines",
        "Python",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "data",
        "SQL",
        "Server",
        "Integration",
        "Service",
        "SSIS",
        "SQL",
        "Server",
        "Analysis",
        "Service",
        "SSAS",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "Postgres",
        "Neo4J",
        "Mongo",
        "DB",
        "Cassandra",
        "SQLite",
        "custom",
        "queries",
        "database",
        "connectors",
        "Expertise",
        "database",
        "connections",
        "Python",
        "packages",
        "MySQL",
        "Python",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Configure",
        "backup",
        "repairs",
        "monitoring",
        "Cassandra",
        "clusters",
        "conjunction",
        "NagiosOpscenter",
        "custom",
        "experience",
        "Mongo",
        "DB",
        "experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Open",
        "stock",
        "Expertise",
        "python",
        "focus",
        "DevOps",
        "tools",
        "CICD",
        "AWS",
        "Cloud",
        "Architecture",
        "Employed",
        "production",
        "site",
        "Apache",
        "mod",
        "python",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "Red",
        "Hat",
        "Linux",
        "Fedora",
        "Good",
        "Knowledge",
        "web",
        "services",
        "SOAP",
        "REST",
        "protocols",
        "knowledge",
        "version",
        "control",
        "software",
        "CVS",
        "SVN",
        "ETL",
        "GitHub",
        "Experience",
        "Build",
        "Deployment",
        "phase",
        "usage",
        "Continuous",
        "Integration",
        "CICD",
        "tools",
        "configuration",
        "change",
        "history",
        "releases",
        "Maintenance",
        "build",
        "system",
        "automation",
        "smoke",
        "test",
        "configuring",
        "source",
        "control",
        "management",
        "systems",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Excellent",
        "Experience",
        "Databases",
        "MySQL",
        "Oracle",
        "g",
        "Microsoft",
        "SQL",
        "Server",
        "Postgre",
        "SQL",
        "SQLPLSQL",
        "concepts",
        "Power",
        "Shell",
        "hands",
        "experience",
        "data",
        "warehouse",
        "developer",
        "database",
        "engineer",
        "highvolume",
        "data",
        "processing",
        "Good",
        "communications",
        "skills",
        "Excellent",
        "Team",
        "player",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Vanguard",
        "group",
        "inc",
        "Harrisburg",
        "PA",
        "September",
        "Present",
        "Responsibilities",
        "User",
        "Interface",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "JSON",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Rewrite",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "Defined",
        "Function",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Embedded",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "jQuery",
        "data",
        "manipulation",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "form",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "time",
        "series",
        "data",
        "data",
        "manipulation",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Maintenance",
        "development",
        "applications",
        "PLSQL",
        "procedures",
        "ETL",
        "modules",
        "shell",
        "scripting",
        "practices",
        "web",
        "application",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "libraries",
        "data",
        "warehousing",
        "application",
        "jobs",
        "SLAs",
        "reports",
        "business",
        "users",
        "sales",
        "forecasting",
        "application",
        "operations",
        "Business",
        "requirements",
        "Complete",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Environment",
        "Python",
        "PyQt",
        "NET",
        "PyQuery",
        "Agile",
        "SDLC",
        "MVC",
        "HTML5",
        "CSS3",
        "DOM",
        "Angularjs",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "SQL",
        "Windows",
        "PostgreSQL",
        "Numpy",
        "SQLAlchemy",
        "Python",
        "Developer",
        "CVS",
        "pharmacy",
        "Woonsocket",
        "RI",
        "October",
        "August",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "MultiThreading",
        "factory",
        "model",
        "learning",
        "process",
        "worker",
        "processes",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "VMWare",
        "API",
        "configuration",
        "changes",
        "data",
        "models",
        "solutions",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "Selenium",
        "testing",
        "Lock",
        "mechanisms",
        "functionality",
        "multithreading",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQL",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Design",
        "custom",
        "scripts",
        "use",
        "version",
        "controller",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "data",
        "segmentation",
        "spark",
        "environment",
        "data",
        "formats",
        "HDFS",
        "Spark",
        "Test",
        "custom",
        "scripts",
        "custom",
        "columns",
        "use",
        "case",
        "data",
        "Hadoop",
        "Lake",
        "Spark",
        "solutions",
        "science",
        "models",
        "SQL",
        "scripts",
        "Spark",
        "SQL",
        "performance",
        "parts",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "process",
        "execution",
        "team",
        "members",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "Insurance",
        "premium",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "packages",
        "AON",
        "unit",
        "test",
        "data",
        "models",
        "issues",
        "domain",
        "L2",
        "team",
        "basis",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "point",
        "L2",
        "support",
        "team",
        "application",
        "database",
        "SQM",
        "project",
        "managements",
        "team",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "scripts",
        "performance",
        "calculations",
        "Numpy",
        "SQL",
        "alchemy",
        "QA",
        "test",
        "plans",
        "highlevel",
        "design",
        "documentation",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "JavaScript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "JQuery",
        "GitHub",
        "Jira",
        "Python",
        "Developer",
        "Dorman",
        "Products",
        "Inc",
        "Colmar",
        "PA",
        "September",
        "September",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "MYSQL",
        "data",
        "lineage",
        "process",
        "source",
        "DB",
        "table",
        "column",
        "mappings",
        "OO",
        "Python",
        "database",
        "schema",
        "content",
        "management",
        "system",
        "REST",
        "APIs",
        "data",
        "Elastic",
        "Search",
        "clusters",
        "client",
        "applications",
        "assets",
        "claims",
        "multifield",
        "indexes",
        "Elastic",
        "Search",
        "search",
        "cluster",
        "Written",
        "Python",
        "documents",
        "data",
        "database",
        "Developed",
        "application",
        "Python",
        "PHP",
        "C",
        "Circuit",
        "parameters",
        "performance",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "property",
        "list",
        "application",
        "wrapper",
        "scripts",
        "Bash",
        "shell",
        "execution",
        "Python",
        "scripts",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "performance",
        "index",
        "filtering",
        "columns",
        "customers",
        "analytics",
        "data",
        "GC",
        "web",
        "services",
        "Python",
        "Django",
        "REST",
        "framework",
        "modules",
        "changes",
        "system",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "discretization",
        "data",
        "transform",
        "reshape",
        "data",
        "frames",
        "web",
        "applications",
        "Django",
        "09x",
        "Django",
        "Python",
        "scripts",
        "data",
        "PostgreSQL",
        "database",
        "clustering",
        "regression",
        "statistics",
        "unit",
        "testregression",
        "test",
        "framework",
        "workingnew",
        "code",
        "PyQt",
        "integration",
        "phase",
        "application",
        "data",
        "Excel",
        "VBA",
        "scripts",
        "Macros",
        "performance",
        "evaluation",
        "User",
        "Acceptance",
        "Test",
        "program",
        "users",
        "manuals",
        "documentation",
        "Bitbucket",
        "version",
        "control",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "JSON",
        "SOAP",
        "Environment",
        "Python",
        "PyQt",
        "PyQuery",
        "MVW",
        "HTML5",
        "CSS3",
        "DOM",
        "Angularjs",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "SQL",
        "UNIX",
        "Windows",
        "AWS",
        "MongoDB",
        "PostgreSQL",
        "python",
        "libraries",
        "Numpy",
        "IPython",
        "SQL",
        "Alchemy",
        "Python",
        "developer",
        "RigVeda",
        "Software",
        "Solutions",
        "HYD",
        "May",
        "August",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Contributed",
        "development",
        "security",
        "policies",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Deployed",
        "project",
        "Amazon",
        "web",
        "services",
        "AWS",
        "amazon",
        "bean",
        "stalk",
        "Refractor",
        "PythonDjango",
        "format",
        "data",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Php",
        "unit",
        "test",
        "cases",
        "Data",
        "Layer",
        "Search",
        "server",
        "classes",
        "Django",
        "Curl",
        "XML",
        "REST",
        "base",
        "services",
        "Mongo",
        "DB",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "Mongo",
        "DB",
        "Interact",
        "backend",
        "Java",
        "Hibernate",
        "Framework",
        "Coding",
        "Enterprise",
        "Java",
        "Beans",
        "business",
        "rules",
        "business",
        "logic",
        "Java",
        "classes",
        "JavaBeans",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Used",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "tests",
        "Python",
        "software",
        "product",
        "Qdirect",
        "experience",
        "Python",
        "QDirect",
        "part",
        "QDirect",
        "code",
        "Python",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Utilize",
        "knowledge",
        "experience",
        "LAMP",
        "leadingedge",
        "products",
        "technology",
        "conjunction",
        "industry",
        "business",
        "skills",
        "solutions",
        "customer",
        "spark",
        "batch",
        "jobs",
        "Scala",
        "Spark",
        "SQL",
        "transformations",
        "APIs",
        "master",
        "data",
        "Cassandra",
        "database",
        "business",
        "requirement",
        "Written",
        "SparkScala",
        "scripts",
        "udfs",
        "spark",
        "context",
        "Cassandra",
        "context",
        "APIs",
        "methods",
        "data",
        "RDDs",
        "data",
        "frame",
        "Joins",
        "Cassandra",
        "table",
        "data",
        "Cassandra",
        "database",
        "part",
        "POC",
        "data",
        "source",
        "systems",
        "environment",
        "Spark",
        "SparkSQL",
        "Developed",
        "core",
        "API",
        "services",
        "Python",
        "spark",
        "Export",
        "Transform",
        "Load",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "data",
        "frames",
        "schema",
        "data",
        "Amazon",
        "S3",
        "PySpark",
        "Environment",
        "Linux",
        "Python",
        "Django",
        "HTML5",
        "XML",
        "JavaScript",
        "JQuery",
        "MS",
        "SQL",
        "Server",
        "NoSQL",
        "Amazon",
        "s3",
        "Jenkins",
        "Mongo",
        "DB",
        "Beautiful",
        "soup",
        "Eclipse",
        "Git",
        "GitHub",
        "JIRA",
        "Software",
        "Python",
        "developer",
        "RigVeda",
        "Software",
        "Solutions",
        "HYD",
        "April",
        "May",
        "Responsibilities",
        "customer",
        "requirements",
        "design",
        "specifications",
        "requirements",
        "software",
        "solution",
        "Application",
        "service",
        "architecture",
        "Python",
        "Django",
        "JSF",
        "Spring",
        "HTML",
        "CSS",
        "frontend",
        "Servlets",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "submittals",
        "Enterprise",
        "Java",
        "Bean",
        "EJB",
        "components",
        "information",
        "Session",
        "Facade",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "design",
        "development",
        "phases",
        "application",
        "methodology",
        "API",
        "Restful",
        "Web",
        "Service",
        "Python",
        "language",
        "data",
        "retrieval",
        "systems",
        "databases",
        "Python",
        "Python",
        "API",
        "Restful",
        "Web",
        "Service",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "web",
        "sites",
        "Django",
        "Python",
        "XHTML",
        "CSS",
        "JavaScript",
        "Developed",
        "email",
        "marketing",
        "campaigns",
        "HTML",
        "CSS",
        "applications",
        "Python",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "ROBOT",
        "framework",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "HTML",
        "UI",
        "jQuery",
        "Automated",
        "Regression",
        "analysis",
        "fund",
        "returns",
        "index",
        "returns",
        "PythonExcel",
        "development",
        "SQL",
        "procedures",
        "trigger",
        "function",
        "MYSQL",
        "NoSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Php",
        "language",
        "lamp",
        "server",
        "page",
        "server",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "python",
        "web",
        "applications",
        "MySQL",
        "interaction",
        "page",
        "MSvisualbasic",
        "SQL",
        "developer",
        "Simple",
        "web",
        "app",
        "sitcoms",
        "users",
        "ability",
        "review",
        "vote",
        "search",
        "Performed",
        "joins",
        "group",
        "operations",
        "Map",
        "Reduce",
        "Python",
        "importing",
        "data",
        "data",
        "sources",
        "transformations",
        "Hive",
        "Map",
        "Reduce",
        "data",
        "HDFS",
        "Wrote",
        "Map",
        "code",
        "data",
        "data",
        "Hive",
        "tables",
        "Map",
        "Programs",
        "cluster",
        "queries",
        "Hive",
        "Map",
        "Reduce",
        "jobs",
        "data",
        "AGILE",
        "SCRUM",
        "practices",
        "planning",
        "sprint",
        "SCRUM",
        "meetings",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "Environment",
        "Linux",
        "Python",
        "Mod",
        "Python",
        "Perl",
        "PHP",
        "MySQL",
        "NoSQL",
        "JavaScript",
        "Ajax",
        "Shell",
        "Script",
        "HTML",
        "CSS"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:09:24.596293",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Vanguard group inc Professional 6years of experience as a WebApplication Developer and coding with analytical programming using Python Django Java and C Experience object oriented programming OOP concepts using Python C and Java Experienced in developing webbased applications using Python DJANGO GTK QT C XML CSS3 HTML5 DHTML JavaScript and JQuery Good experience of software development in Python libraries used Beautiful Soup numpy scipy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder pycharm emacs Experienced in Software development life cycle and architecting scalable platforms object oriented programming database design and agile methodologies Experience with Web Development Amazon Web Services Python and the Django framework Experienced in installing configuring modifying testing and deploying applications with Apache Experience of software development with Python and various libraries of Python pythontwitter Pandas Data frame MySQL dB for database connectivity Regular expression File IO etc Extensively worked on Spark SQL Data frames RDDs to improve the performance of the application Developed Spark scripts by using Scala IDEs as per the business requirement Used Spark SQL and Hive SQL to process structured and unstructured data Expertise in handling web applications UI security logging backend services Good experience in developing web applications implementing MVTMVC architecture using Django Flask Webapp2 and spring web application frameworks Experienced in web applications development using Django Python Flask Python and Nodejs AngularJS DOJO JQuery while using HTMLCSSJS for serverside rendered applications Good Experience in Linux Bash scripting and following PEP Guidelines in Python Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J Mongo DB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Python by configuring packages like MySQL Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpscenter and custom scripts Extensive experience in deploying managing and developing Mongo DB clusters Good experience in Shell Scripting SQL Server UNIX and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Employed production site using Apache 20 with mod python Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux Fedora Good Knowledge of web services using SOAP and REST protocols Good knowledge of version control software CVS SVN ETL GitHub Experience of Build Deployment phase and usage of Continuous Integration CICD tools build configuration change history for releases Maintenance of build system automation smoke test processes managing configuring and maintaining source control management systems Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Excellent Experience of Databases such as MySQL Oracle 8g9g10g Microsoft SQL Server Postgre SQL SQLPLSQL concepts Power Shell Good hands on experience in data warehouse developer database engineer for highvolume data processing Good written and verbal communications skills and Excellent Team player Authorized to work in the US for any employer Work Experience Python Developer Vanguard group inc Harrisburg PA September 2017 to Present Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data integrity Developed merge jobs in Python to extract and load data into MySQL database Rewrite existing modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used jQuery for all clientside data manipulation Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector MySQL package to retrieve information Used Pandas API to put the data as time series and tabular form for east timestamp data manipulation and retrieval to handle time series data and do data manipulation Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Responsible for debugging and troubleshooting the web application Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Providing reports for business users for sales forecasting and planning Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt NET PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer CVS pharmacy Woonsocket RI October 2016 to August 2017 Responsibilities Used Django Framework for developing web applications using model view control architecture Used MultiThreading factory model to distribute learning process backtesting and the into various worker processes Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB and VMWare API calls Implemented configuration changes for data models Maintained and updated existing automated solutions Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Extracted the data that are required for the segmentation using spark environment Worked on reading multiple data formats on HDFS using Spark Test and validated the custom scripts Created custom new columns depending up on the use case while ingesting the data into Hadoop Lake using Spark Delivered automated solutions for science models Analysed the SQL scripts and designed it by using Spark SQL for faster performance Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Troubleshooting the issues related to all domain reported by L2 team on daily basis Extensively used python modules such as requests urllib and urllib2 for web crawling Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents As point on the L2 support team worked with application database reporting SQM and project managements team to resolve Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and SQL alchemy Interacted with QA to develop test plans from highlevel design documentation Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub Jira Python Developer Dorman Products Inc Colmar PA September 2015 to September 2016 Responsibilities Designed front end and backend of the application utilizing Python on Django Web Framework Developed Merge jobs in Python to extract and load data into MySQL database and worked on MYSQL data lineage process to map source to target DB table and column mappings using OO Python Designed the database schema for the content management system Published REST APIs to fetch data from Elastic Search clusters for client based applications to search assets and claims by multifield indexes and Used Elastic Search for setting up the search cluster Written Python scripts to parse JSON documents and load the data in database Developed multithreaded standalone application in Python PHP C to view Circuit parameters and performance Executed MYSQL database queries from python using PythonMySQL connector and MySQL package to retrieve information Generated property list for every application dynamically using python Developed wrapper scripts in Bash shell to automate execution of multiple Python scripts Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Key performance index and filtering of displayed columns to help customers understand the analytics data that is provided by GC Developed the backend web services using Python and Django REST framework Reengineered various modules for implementing changes and created efficient system Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented discretization binning data wrangling used to clean transform merge and reshape data frames as well as upgraded two web applications from Django 09x to Django 1x Built Python scripts to identify and correct erroneous data in PostgreSQL database using clustering regression and statistics Developed unit testregression test framework for workingnew code Used PyQt during integration phase of the application Analyzed data using Excel VBA scripts and Macros Closely involved in performance evaluation and User Acceptance Test Maintained program libraries users manuals and technical documentation Used Bitbucket for version control Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON SOAP Environment Python 33 PyQt PyQuery MVW HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows AWS MongoDB PostgreSQL and python libraries such as Numpy IPython SQL Alchemy Python developer RigVeda Software Solutions HYD May 2014 to August 2015 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Contributed to development of security policies and processes Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Deployed project into Amazon web services AWS using amazon elastic bean stalk Refractor PythonDjango modules to deliver certain format of data Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Written functional Php unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST base services and Mongo DB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL NoSQLand Mongo DB Interact with backend using Java and Hibernate Framework Involved in Coding of Enterprise Java Beans which implements business rules and business logic Involved in developing the Java classes and JavaBeans Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Designed developed and updated automated tests written in Python for the software product Qdirect Must have strong experience in Python to support QDirect and major part of QDirect code is on Python Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Developed multiple spark batch jobs in Scala using Spark SQL and performed transformations using many APIs and update master data in Cassandra database as per the business requirement Written SparkScala scripts by creating multiple udfs spark context Cassandra sql context multiple APIs methods which support data frames RDDs data frame Joins Cassandra table joins and finally writesave the data framesRDDs to Cassandra database As part of the POC migrated the data from source systems to another environment using Spark SparkSQL Developed and implemented core API services using Python with spark Experienced in Export Transform Load Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Created data frames in particular schema from raw data stored at Amazon S3 using PySpark Environment Linux Python 27 25 Django 17 15 HTML5 XML JavaScript JQuery MS SQL Server NoSQL Amazon s3 Jenkins Mongo DB Beautiful soup Eclipse Git GitHub JIRA Software Python developer RigVeda Software Solutions HYD April 2013 to May 2014 Responsibilities Translated the customer requirements into design specifications and ensured that the requirements translate into software solution Application was based on service oriented architecture and used Python 25 Django 15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Involved in creating Servlets and Java Server Pages JSP which route submittals to the appropriate Enterprise Java Bean EJB components and render retrieved information using Session Facade Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Involved in the design development and testing phases of application using AGILE methodology Developed and designed an API Restful Web Service Used the Python language to develop webbased data retrieval systems Designed and maintained databases using Python and developed Python based API Restful Web Service using Flask SQLAlchemy and PostgreSQL Developed web sites using Django Python XHTML CSS and JavaScript Developed and designed email marketing campaigns using HTML and CSS Tested and implemented applications built using Python Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Created complex dynamic HTML UI using jQuery Automated Regression analysis for determining fund returns based on index returns PythonExcel Worked on development of SQL and stored procedures trigger and function on MYSQL NoSQL Developed shopping cart for Library and integrated web services to access the payment Used Php language on lamp server to develop page Developed server based web traffic statistical analysis tool using Flask Pandas Implemented and tested python based web applications interacting with MySQL Developed dynamic interaction page on net MSvisualbasic 2014 using SQL developer tools Simple web app for reviewing sitcoms that gives users the ability to view add review updown vote search etc Performed joins group by and other operations in Map Reduce using Python Handled importing of data from various data sources performed transformations using Hive Map Reduce and loaded data into HDFS Wrote Map Reduce code to make unstructured data into semi structured data and loaded into Hive tables Supported Map Reduce Programs those are running on the cluster Executed queries using Hive and developed Map Reduce jobs to analyze data Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Environment Linux Python 27 Mod Python Perl PHP MySQL NoSQL JavaScript Ajax Shell Script HTML CSS",
    "unique_id": "8c65fc58-f890-49b3-99a8-3bfa0f7b8a02"
}