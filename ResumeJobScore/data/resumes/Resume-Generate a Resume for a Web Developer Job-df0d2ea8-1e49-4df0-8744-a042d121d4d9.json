{
    "clean_data": "Lead Java Developer Lead span lJavaspan span lDeveloperspan Lead Java Developer COPE Health Solutions Princeton NJ Full Stack Web Developer with over14 years of experience Extensive working experience with Reactjs Angular 5 Java Spring MVC Hibernate Microsoft SQL Server MySQL Excellent knowledge in Frontend web developing such as HTMLCSS JavaScript ES5ES6 TypeScript JQuery AJAX JSON Reactjs 1516 Angular 2 and Clientside validations Handson experience on AJAX request and JQuery DOM manipulation in frontend development as well as applied Bootstrap 34 and media query for responsive web design Proficient in developing singlepage application with use of JavaScript library Reactjs In depth experience in Reactjs libraries and techniques such as Redux Axios JSX Material UI Form Validation HOC and reactrouter Used opensource framework Angular 5 Good working experience in various Angular opensource libraries and techniques such as primeNG Angular Material Directive Services Routing Dependency Injection and Interceptor Built Restful web API with Nodejs and Node Package Management and implemented Jasmine Karma for the frontend testing and JUnit for the backend testing Indepth experience with J2EE technologies Java Spring MVC Spring AOP Spring Security Spring Boot Maven JDBCHibernate and JPA Solid knowledge of OOP DAO Singleton TDD Microservices and RESTful web services Involved in Software Development Life CyclesSDLC and worked with Git version control Experienced in AGILE methodology such as participating in sprintiterations and Scrum meetings as well as used with project management tool such as Jira and Microsoft Azure Sponsorship required to work in the US Work Experience Lead Java Developer COPE Health Solutions New York NY August 2017 to Present COPE Health Solutions is a national missiondriven consulting firm that partners with health systems and payor clients This project built a health management system for a medical center to deal with secured EMR appointment scheduling billing referral services and laboratory management under HIPAA I was responsible for the EMR and Login module which contains dozens of components and created corresponded services and interceptors Responsibilities Collaborated with team members and developed a SPA based on Angular 5 and Java Spring Boot Used Angular CLI for easy generation of component and service as well as applications minification and deployment Built routing and navigation with Router Module and injected Activated Route for parameters passing and implemented route guard for the purpose of secured routing Used interceptor to capture http request and attached JWT token to header before sending it and catch the response and process it before completing the call Applied with angular structural directive such as ngIf ngFor for DOM structure manipulation as well as attribute directive for DOM behavior manipulation and custom directives to achieve code reusability Implemented property decorator such as input output for data passing and communication within parent and child components as well as different services for components Used templatedriven form for login page form validation with coded logic and validation In addition to it added separated login features by identify different login types doctorsaccountantsnurses Also coded reactive form for form control which requires a more complicated validation logic resides in angular application Worked on RESTful API to created services tested on postman and use Angular Http Client module for making HTTP request call to get and bind the data from server side Implemented Observable and subscribe for constantly data handling Applied UI component library angular material such as matform maticon and etc for a better user experience Contributed in JSON Web Token generation and distribution upon successful login with the use of Spring Security in the backend Implemented hibernate for backend and databases communication with creation of POJO classes Controllers and Repositories Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Tested angular application on Jasmine and responsible for crossbrowser compatibility of the web application Also performed unit testing with JUnit for the backend Involved in various states of SDLC such as designing building and testing Also enforced AGILE methodologies for optimized development environment as well as used version control such as GIT and project management Jira Environment AngularJs Java 18 Spring Boot Apache Tomcat Hibernate JUnit Jasmine Docker Azure Data Studio ES6 HTML 5 CSS3 Eclipse Visual Stuido Code Git Postman Jira Lead Java Developer Protective Insurance Carmel IN January 2016 to July 2017 Protective Insurance Company specializes in marketing and underwriting insurance for the transportation industry This project built an internal use application for managing customer information payment plan risk analyze and insurance policy management Responsibilities Developed single page application with Reactjs Java Spring MVC Hibernate Rest API and MySQL Used Node Package Manager NPM to install required dependencies such as reactredux reduxthunk babel webpack MaterialUI and reactrouterdom Involved in responsive web design and supported for multiple platforms desktop tablet and mobile Designed CSS for different components on the single page application with CSS background positioning text border margin padding and table Applied MaterialUI to the UI components for the application to allow a better user experience and performance Used React Router to created single page application Applied Router Guard to deny unauthorized access Created reusable components for the application and used props to pass data between parent and child component Also created functional component as well as class component in order to maintain code in simple and clean way Used different Component life cycle hooks such as Component Did Mount and component Did Update for http request and fetch data Implemented Axios to handle HTTP requests and response for the application Implemented Redux for state management and configured global Store for the entire application Also developed Reducers and Actions to manage various UI events to update the State and handle asynchronous actions by using reactthunk Used Maven as dependencies management tool for easy dependencies installation Configured hibernate with spring MVC Used Annotation for easy Object and Relational Table mapping Implement several POJO classes Implemented Authentication and Authorization via generating JWT web token in the backend Utilized GIT for version control and Jira for issues tracking and workflow management Involved in SLDC and participated in standup meeting Environment Java 17 Spring MVC Maven Apache Tomcat Hibernate JUnit Jasmine MySQL workbench ES6 HTML 5 CSS3 Eclipse Visual Stuido Code Git Postman Jira Sr Java Developer Safeway Pleasanton CA July 2014 to February 2016 Safeway is an American Supermarket chain it is the second largest supermarket chain in North America and has 1678 stores located throughout the western and central United States and north western Mexico as of December It also operates some stores in the MidAtlantic region of the Eastern Seaboard The company is headquartered in Pleasanton CA Supermarket News ranked Safeway No 4 in the 2011 Gathered clients requirements coordinated with different departments Responsibilities Designed developed and tested using ntier J2EE architecture in BEA Weblogic Application Server Involved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements Developed Servlets and JSPs based on MVC pattern using Struts Action framework Developed EJBs Stateless Session Beans and Entity beans for Savings Credit Card Loan Current account and Mortgage modules Developed web services framework for retrieving User details using Axis Implemented Acegi security for all modules in product which require user authentication and authorization Password encryption using SRP protocol Designed and developed important application functionalities Download and Install session module for this product Developed Persistence and DAO layer implementation using EJB 30 ORM for the domain objects involved Development of content management as Struts MVC on Open Cms on Jboss for web commerce department Wrote many unit tests using JUnit and Easy Mock to cover existing functionality and provide a baseline for expansion Designed and developed the Internal Admin module of the product using Struts MVC where the administer can login and configure the product specific configurations to start remote desktop session Used OO JavaScript and CSS for UI Design Mockup Written code in jQueryJavaScript CSS AJAX for the navigationoriented application Designed and developed interfaces using Design Patterns Like Command Singleton Factory and Controller in OO JavaScript Created Dynamic Integration of jQuery Tab jQuery Grid and another jQuery component Integration with Ajax Extensively used jQuery plugin like Auto populating selectbox Search plugin calendar plugin ajaxqueue plugin and Auto populating multiple selectboxes Implemented Ajax Call when the user keys in the first few characters of mesh node entries an AJAX call is made and all the matching node entries are retrieved from database as a JSON Payload and displayed in a dropdown list box Used Tiles for setting the header footer and navigation and Apache Validator Framework for Form validation Used Log4J logging framework to write Log messages with various levels Created library class for financial calculations of various financial issues like Mortgage Loans etc Used Java Mail API developed Secured Emailing system a session bean Involved in fixing bugs and minor enhancements for the frontend modules Used JUnit framework for writing Test Classes Used Ant for starting up the application server in various modes Used Visual Source Safe for version control Environment Java JDK 15 JSP Servlets Struts MVC Struts2 Spring IOC JavaScript JQuery Ajax HTML CSS XML XSTL DHTML Design Patterns Eclipse CVS Apache Tomcat 55 JDBC Oracle 9i10g Rational Rose Xml Spy UNIX  Lead Java Developer Rehab Medical Indianapolis IN March 2013 to December 2015 Rehab Medical is a Complex Rehab Technology CRT and Wound Care Company supporting the individualized needs of the complicated condition patient This project is to develop an internal use system which provides product supply and inventory management insurance policy related functionalities customer management I was responsible for the tasks related to LoginSignupForget Password customer information module some of the components in insurance policy module Responsibilities Collaborated with team members and developed internal use single page application with Reactjs and Java Spring boot and hibernate Created functional component as well as class component in order to maintain code in simple and clean way Applied Bootstrap 4 React MaterialUI for a better user Experience Implemented form validation in login page as well as in customized component to validate data that entered in different places Responsible for implementing resource displaying page which enables user to perform create update delete operations through the front end to database via Axios API calls Used Redux global state management tool to allow state shared at application level with implement of actions reducers and stores Also used props to ensure components data exchanging and communication Ensured synchronization across the Redux application with use of middleware ReduxThunk to manage asynchronous operations such as http calls before action passed to reducer Used React Router to create single page application and react route guard to control access permissions and reject unauthorized access Created Higher Order Components to achieve component reusability Contributed in implementing JWT with Spring Boot and Spring Security in the backend Created POJO classes controllers and repositories with the use of hibernate Jpa repository and annotation to work with SQL server Performed Integration Testing with DataJpa Test unit and Unit Testing with Web Mvc Test testing on API calls Implemented Stored procedure in database to improve hibernate performance Used Microsoft Azure for project progress checking and GIT for version control Participated in AGILE development environment as well as involved in SLDC Environment Java 17 Spring Boot Apache Tomcat Hibernate JUnit Jasmine Docker Azure Data Studio ES6 HTML 5 CSS3 Eclipse Visual Studio Code Git Postman Microsoft Azure Senior JavaJ2EE Full Stack Developer Bank of America Charlotte NC April 2012 to June 2014 Responsibilities Developed and Designed J2EE 7 webbased consumer applications using Spring DHTML and Ajax Implementing UI screens using HTML CSS JSP and JavaScript Maintaining the application on IBM WSAD and deployed it on IBM WebSphere Application Server Performed the testing of Web methods in J Unit and Testing framework using Selenium Executed the test scripts using Selenium validate the actual and expected results Responsible for Automation Scripts library functions maintenance Used STRUTS Framework based on MVC Model View Controller architecture in WebSphere Application Development Created Docker images for SOA projects that are developed as Microservices Developed and executed software systems utilizing JavaScript and Groovy Implemented entire application using Core java java Collections Struts and Spring 30 MVC design framework Generated executable code in JAXWS by using WSDL file which helps clients to call web services Understanding the functionality and developing test automation scripts with Selenium using Java Configured Hibernate Spring and My Faces JSF to map the business objects to MySQL Database using XML configuration file Developed business modules with JSP Servlet Struts framework Java UML XMLXSL and EJB technologies Used ReactJs in components like JSX creating React components Virtual Implemented maintained the branching and buildrelease strategies utilizing GIT Designed and developed a webbased test client using Spring Struts JSP Tag Libraries Java Backend applications has been implemented with Spring MVC architecture with Junit test case and interceptor for the validation of the secured cookie Designed and created Microservices business segments and RESTful administration endpoints utilizing Spring Boot Used Spring JMS to post messages to MQ Used jQuery to simplify the clientside scripting of HTML Responsible for design and maintenance of the GIT Repositories and the access control strategies Developed Struts form beans action classes JSPs and tiles which follow struts framework standards Used HQL Hibernate Query Language for database querying and retrieval of results Developed specialized search system using Mongo DB Angular JS Java Servlets JUnit Maven Used SNAPSMTP PROTOCOL for communication purpose with Storage Device Java Networking Socket Programming Automation of the build process using Continuous Integration tools like Continuum and Jenkins Web layer is implemented using Servlets and JSP using Struts Framework Eclipse is used as Java IDE tool for creating Hibernate Servlets and JSP JSF Utilized the IBM WebSphere MQ for asynchronous messaging between components using JMS Constructed web pages for application using MVC3 Java Script jQuery React JS Node JS Karma Jasmine Created configuration files for spring Hibernate and JSF integration Converted Java objects to XML and JSON files using XML build annotation and returned them to frontend to be read Developed XML Java Script Angular JS and Java classes for dynamic HTML generation to perform the serverside processing on the client requests Environment Java17J2EE Struts Framework 20 Angular JS 2 AJAX Eclipse IDE SOA Java Beans Tibco Log4j CVS WebLogic GWT MongoDB Oracle 10g Spring 30 JSP 20 Core java Web Services Groovy JAXWS Hibernate 30 GIT Microservices Node JS JPA HTMLHTML5 CSS XSLT JavaScript UML jQuery Rational Rose JUnit TDD Maven UNIX Java Developer Alliance Prosys Private Limited Hyderabad Telangana May 2009 to March 2012 Responsibilities As part of the life cycle development prepared class model sequence model and flow diagrams by analyzing use cases using Rational Tools Used JUNIT for testing and check API performance Development of RESTful API Services to address online incoming requests either as RAW EDI or parameterized EDI from WebPortal Involved in writing the clientside scripts using JavaScript Participated in the designing of the Web framework using Struts framework as a modelviewcontroller MVC design paradigm Used log4j for application error logging Extensive use of Struts Framework for Controller components and view components Developed SQL and PLSQL stored procedures and prepared statements for updating and accessing data from Oracle database Involved in writing the parsers for parsing and building the XML documents using SAX and DOM Parsers Reviewing and analyzing data model for developing the Presentation layer and Value Objects Used Clear Case Version Control for Project Configuration Management Environment Java JDK13 J2EE Jsp11 JavaScript HTML XML XSL Ant Eclipse Log4j JUnit  Struts10 JDBC Oracle 8i Linux and windows XP Java Developer Meta business solutions Hyderabad Telangana January 2006 to April 2009 Meta EMR Meets the key needs of healthcare organizations in an EMR improve clinical processes and workflow demonstrate higher levels of care share medical records among healthcare professionals and access medical records from any location Responsibilities Development of module end to end from JSP conversion from HTML to Data access layer Designed and developed the application using Struts Model View Controller MVC design Pattern Designing the Graphical User Interfaces using HTML JSP and JSF MYSQL is used to store the data Used JavaScript for clientside validations and validation framework for serverside validations Involved in configuring webxml and strutsconfigxml according to the Struts framework Extensively used HTML JavaScript and AJAX for clientside development and validations Hibernate frame work is used in persistence layer for mapping an objectoriented domain model to a relational database Developed Web Services using XML messages that use SOAP Developed Web Services for Payment Transaction and Payment Release Wrote test cases in Junit for unit testing of classes and implemented the logging using log4j Involved in deploying the application in test environment using Tomcat Prepared the SQL Queries Developed JSPs and Servlets to dynamically generate HTML and display the data to the client side Extensively used JSP standard tag libraries and Struts Tag libraries Application developed using Eclipse IDE Wrote SQL Stored Procedures Functions and Packages to meet the business requirements Extensively used HTML JavaScript and AJAX for clientside development and validations Used Spring IOC as Dependency Injection Developed client request validations and processing using Spring Validation Environment Struts spring Hibernate AJAX JavaScript HTML CSS Eclipse Tomcat and MYSQL Education Bachelors IIT Skills Eclipse Java Hibernate Spring jquery Visual studio Frontend Git Html Javascript Bootstrap Nodejs Typescript Json Orm Python Jira Junit Mvc Html5 Java J2Ee J2Ee JSP Angularjs JEE Links httpinput httpinput httpinput",
    "entities": [
        "Microservices Developed",
        "Reducers and Actions",
        "Responsibilities Collaborated",
        "Implemented Stored",
        "AJAX",
        "Pattern Designing the Graphical User Interfaces",
        "New York",
        "a Complex Rehab Technology CRT",
        "WebSphere Application Development Created Docker",
        "Nodejs",
        "DataJpa Test",
        "Present COPE Health Solutions",
        "Component",
        "WebLogic GWT",
        "Used Spring IOC",
        "Applied",
        "Router Module",
        "HTTP",
        "Spring Annotation",
        "IBM",
        "Hibernate Servlets",
        "Node Package",
        "Indepth",
        "XML",
        "Telangana",
        "Node Package Management",
        "JAXWS",
        "JUnit",
        "Selenium Executed",
        "Protective Insurance Company",
        "State",
        "Java Configured Hibernate Spring",
        "MySQL Database",
        "Applied Router Guard",
        "Created Higher Order Components",
        "Internal Admin",
        "Design Patterns Like",
        "JSON Payload",
        "HTML CSS JSP",
        "Developed",
        "Safeway No 4",
        "Axis Implemented Acegi",
        "Utilized",
        "Used React Router",
        "Spring MVC",
        "the SQL Queries Developed",
        "Git",
        "Servlets",
        "the GIT Repositories",
        "Mexico",
        "Core",
        "DOM Parsers Reviewing",
        "Created POJO",
        "Junit",
        "Spring Validation Environment",
        "SOA",
        "AGILE",
        "Spring Security",
        "Developed Web Services",
        "BEA Weblogic Application Server Involved",
        "Update",
        "JSP",
        "Pleasanton CA Supermarket News",
        "Visual",
        "Built",
        "SDLC",
        "Hyderabad",
        "JSP JSF Utilized",
        "Struts Tag",
        "Easy Mock",
        "SOAP Developed Web Services for Payment Transaction and Payment Release Wrote",
        "DOM",
        "Performed Integration Testing",
        "J Unit",
        "Developed Servlets",
        "Groovy Implemented",
        "Developed SQL",
        "MVC",
        "JPA Annotation",
        "EJB",
        "GIT",
        "Oracle database Involved",
        "API",
        "Object Oriented Design",
        "US",
        "POJO",
        "JavaScript Maintaining",
        "Created",
        "RAW EDI",
        "WebPortal Involved",
        "Implemented",
        "Struts Action",
        "JSF",
        "OO JavaScript Created Dynamic Integration of jQuery Tab jQuery Grid",
        "Auto",
        "MVC Spring AOP Spring Security",
        "Redux Axios JSX Material UI Form Validation",
        "JSX",
        "ReduxThunk",
        "HTMLCSS JavaScript",
        "SAX",
        "Rehab Medical",
        "HTML",
        "Contributed",
        "SQL",
        "STRUTS Framework",
        "Responsible",
        "JAXWS Hibernate",
        "JQuery DOM",
        "DAO Singleton",
        "Safeway",
        "Responsible for Automation Scripts",
        "JS Karma Jasmine Created",
        "Indianapolis",
        "Wrote",
        "Handson",
        "MQ Used",
        "Maven Apache Tomcat Hibernate JUnit Jasmine",
        "IBM WebSphere Application",
        "United States",
        "Maven",
        "JWT",
        "lJavaspan",
        "Virtual Implemented",
        "HTML Responsible",
        "EDI",
        "JavaScript",
        "UI",
        "Applied Bootstrap 4 React",
        "OOAD",
        "Selenium",
        "Microsoft",
        "JavaScript UML jQuery Rational Rose JUnit",
        "Applied UI",
        "TDD Microservices",
        "Responsibilities Development",
        "HIPAA",
        "Java Developer COPE Health",
        "Java Developer COPE Health Solutions",
        "CSS",
        "Value Objects",
        "jQuery",
        "SPA",
        "SRP",
        "Bootstrap 34",
        "Angular Material Directive Services Routing Dependency Injection and Interceptor Built Restful",
        "Application",
        "Angular Http Client",
        "Implemented Observable"
    ],
    "experience": "Experience Lead Java Developer COPE Health Solutions New York NY August 2017 to Present COPE Health Solutions is a national missiondriven consulting firm that partners with health systems and payor clients This project built a health management system for a medical center to deal with secured EMR appointment scheduling billing referral services and laboratory management under HIPAA I was responsible for the EMR and Login module which contains dozens of components and created corresponded services and interceptors Responsibilities Collaborated with team members and developed a SPA based on Angular 5 and Java Spring Boot Used Angular CLI for easy generation of component and service as well as applications minification and deployment Built routing and navigation with Router Module and injected Activated Route for parameters passing and implemented route guard for the purpose of secured routing Used interceptor to capture http request and attached JWT token to header before sending it and catch the response and process it before completing the call Applied with angular structural directive such as ngIf ngFor for DOM structure manipulation as well as attribute directive for DOM behavior manipulation and custom directives to achieve code reusability Implemented property decorator such as input output for data passing and communication within parent and child components as well as different services for components Used templatedriven form for login page form validation with coded logic and validation In addition to it added separated login features by identify different login types doctorsaccountantsnurses Also coded reactive form for form control which requires a more complicated validation logic resides in angular application Worked on RESTful API to created services tested on postman and use Angular Http Client module for making HTTP request call to get and bind the data from server side Implemented Observable and subscribe for constantly data handling Applied UI component library angular material such as matform maticon and etc for a better user experience Contributed in JSON Web Token generation and distribution upon successful login with the use of Spring Security in the backend Implemented hibernate for backend and databases communication with creation of POJO classes Controllers and Repositories Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Tested angular application on Jasmine and responsible for crossbrowser compatibility of the web application Also performed unit testing with JUnit for the backend Involved in various states of SDLC such as designing building and testing Also enforced AGILE methodologies for optimized development environment as well as used version control such as GIT and project management Jira Environment AngularJs Java 18 Spring Boot Apache Tomcat Hibernate JUnit Jasmine Docker Azure Data Studio ES6 HTML 5 CSS3 Eclipse Visual Stuido Code Git Postman Jira Lead Java Developer Protective Insurance Carmel IN January 2016 to July 2017 Protective Insurance Company specializes in marketing and underwriting insurance for the transportation industry This project built an internal use application for managing customer information payment plan risk analyze and insurance policy management Responsibilities Developed single page application with Reactjs Java Spring MVC Hibernate Rest API and MySQL Used Node Package Manager NPM to install required dependencies such as reactredux reduxthunk babel webpack MaterialUI and reactrouterdom Involved in responsive web design and supported for multiple platforms desktop tablet and mobile Designed CSS for different components on the single page application with CSS background positioning text border margin padding and table Applied MaterialUI to the UI components for the application to allow a better user experience and performance Used React Router to created single page application Applied Router Guard to deny unauthorized access Created reusable components for the application and used props to pass data between parent and child component Also created functional component as well as class component in order to maintain code in simple and clean way Used different Component life cycle hooks such as Component Did Mount and component Did Update for http request and fetch data Implemented Axios to handle HTTP requests and response for the application Implemented Redux for state management and configured global Store for the entire application Also developed Reducers and Actions to manage various UI events to update the State and handle asynchronous actions by using reactthunk Used Maven as dependencies management tool for easy dependencies installation Configured hibernate with spring MVC Used Annotation for easy Object and Relational Table mapping Implement several POJO classes Implemented Authentication and Authorization via generating JWT web token in the backend Utilized GIT for version control and Jira for issues tracking and workflow management Involved in SLDC and participated in standup meeting Environment Java 17 Spring MVC Maven Apache Tomcat Hibernate JUnit Jasmine MySQL workbench ES6 HTML 5 CSS3 Eclipse Visual Stuido Code Git Postman Jira Sr Java Developer Safeway Pleasanton CA July 2014 to February 2016 Safeway is an American Supermarket chain it is the second largest supermarket chain in North America and has 1678 stores located throughout the western and central United States and north western Mexico as of December It also operates some stores in the MidAtlantic region of the Eastern Seaboard The company is headquartered in Pleasanton CA Supermarket News ranked Safeway No 4 in the 2011 Gathered clients requirements coordinated with different departments Responsibilities Designed developed and tested using ntier J2EE architecture in BEA Weblogic Application Server Involved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements Developed Servlets and JSPs based on MVC pattern using Struts Action framework Developed EJBs Stateless Session Beans and Entity beans for Savings Credit Card Loan Current account and Mortgage modules Developed web services framework for retrieving User details using Axis Implemented Acegi security for all modules in product which require user authentication and authorization Password encryption using SRP protocol Designed and developed important application functionalities Download and Install session module for this product Developed Persistence and DAO layer implementation using EJB 30 ORM for the domain objects involved Development of content management as Struts MVC on Open Cms on Jboss for web commerce department Wrote many unit tests using JUnit and Easy Mock to cover existing functionality and provide a baseline for expansion Designed and developed the Internal Admin module of the product using Struts MVC where the administer can login and configure the product specific configurations to start remote desktop session Used OO JavaScript and CSS for UI Design Mockup Written code in jQueryJavaScript CSS AJAX for the navigationoriented application Designed and developed interfaces using Design Patterns Like Command Singleton Factory and Controller in OO JavaScript Created Dynamic Integration of jQuery Tab jQuery Grid and another jQuery component Integration with Ajax Extensively used jQuery plugin like Auto populating selectbox Search plugin calendar plugin ajaxqueue plugin and Auto populating multiple selectboxes Implemented Ajax Call when the user keys in the first few characters of mesh node entries an AJAX call is made and all the matching node entries are retrieved from database as a JSON Payload and displayed in a dropdown list box Used Tiles for setting the header footer and navigation and Apache Validator Framework for Form validation Used Log4J logging framework to write Log messages with various levels Created library class for financial calculations of various financial issues like Mortgage Loans etc Used Java Mail API developed Secured Emailing system a session bean Involved in fixing bugs and minor enhancements for the frontend modules Used JUnit framework for writing Test Classes Used Ant for starting up the application server in various modes Used Visual Source Safe for version control Environment Java JDK 15 JSP Servlets Struts MVC Struts2 Spring IOC JavaScript JQuery Ajax HTML CSS XML XSTL DHTML Design Patterns Eclipse CVS Apache Tomcat 55 JDBC Oracle 9i10 g Rational Rose Xml Spy UNIX   Lead Java Developer Rehab Medical Indianapolis IN March 2013 to December 2015 Rehab Medical is a Complex Rehab Technology CRT and Wound Care Company supporting the individualized needs of the complicated condition patient This project is to develop an internal use system which provides product supply and inventory management insurance policy related functionalities customer management I was responsible for the tasks related to LoginSignupForget Password customer information module some of the components in insurance policy module Responsibilities Collaborated with team members and developed internal use single page application with Reactjs and Java Spring boot and hibernate Created functional component as well as class component in order to maintain code in simple and clean way Applied Bootstrap 4 React MaterialUI for a better user Experience Implemented form validation in login page as well as in customized component to validate data that entered in different places Responsible for implementing resource displaying page which enables user to perform create update delete operations through the front end to database via Axios API calls Used Redux global state management tool to allow state shared at application level with implement of actions reducers and stores Also used props to ensure components data exchanging and communication Ensured synchronization across the Redux application with use of middleware ReduxThunk to manage asynchronous operations such as http calls before action passed to reducer Used React Router to create single page application and react route guard to control access permissions and reject unauthorized access Created Higher Order Components to achieve component reusability Contributed in implementing JWT with Spring Boot and Spring Security in the backend Created POJO classes controllers and repositories with the use of hibernate Jpa repository and annotation to work with SQL server Performed Integration Testing with DataJpa Test unit and Unit Testing with Web Mvc Test testing on API calls Implemented Stored procedure in database to improve hibernate performance Used Microsoft Azure for project progress checking and GIT for version control Participated in AGILE development environment as well as involved in SLDC Environment Java 17 Spring Boot Apache Tomcat Hibernate JUnit Jasmine Docker Azure Data Studio ES6 HTML 5 CSS3 Eclipse Visual Studio Code Git Postman Microsoft Azure Senior JavaJ2EE Full Stack Developer Bank of America Charlotte NC April 2012 to June 2014 Responsibilities Developed and Designed J2EE 7 webbased consumer applications using Spring DHTML and Ajax Implementing UI screens using HTML CSS JSP and JavaScript Maintaining the application on IBM WSAD and deployed it on IBM WebSphere Application Server Performed the testing of Web methods in J Unit and Testing framework using Selenium Executed the test scripts using Selenium validate the actual and expected results Responsible for Automation Scripts library functions maintenance Used STRUTS Framework based on MVC Model View Controller architecture in WebSphere Application Development Created Docker images for SOA projects that are developed as Microservices Developed and executed software systems utilizing JavaScript and Groovy Implemented entire application using Core java java Collections Struts and Spring 30 MVC design framework Generated executable code in JAXWS by using WSDL file which helps clients to call web services Understanding the functionality and developing test automation scripts with Selenium using Java Configured Hibernate Spring and My Faces JSF to map the business objects to MySQL Database using XML configuration file Developed business modules with JSP Servlet Struts framework Java UML XMLXSL and EJB technologies Used ReactJs in components like JSX creating React components Virtual Implemented maintained the branching and buildrelease strategies utilizing GIT Designed and developed a webbased test client using Spring Struts JSP Tag Libraries Java Backend applications has been implemented with Spring MVC architecture with Junit test case and interceptor for the validation of the secured cookie Designed and created Microservices business segments and RESTful administration endpoints utilizing Spring Boot Used Spring JMS to post messages to MQ Used jQuery to simplify the clientside scripting of HTML Responsible for design and maintenance of the GIT Repositories and the access control strategies Developed Struts form beans action classes JSPs and tiles which follow struts framework standards Used HQL Hibernate Query Language for database querying and retrieval of results Developed specialized search system using Mongo DB Angular JS Java Servlets JUnit Maven Used SNAPSMTP PROTOCOL for communication purpose with Storage Device Java Networking Socket Programming Automation of the build process using Continuous Integration tools like Continuum and Jenkins Web layer is implemented using Servlets and JSP using Struts Framework Eclipse is used as Java IDE tool for creating Hibernate Servlets and JSP JSF Utilized the IBM WebSphere MQ for asynchronous messaging between components using JMS Constructed web pages for application using MVC3 Java Script jQuery React JS Node JS Karma Jasmine Created configuration files for spring Hibernate and JSF integration Converted Java objects to XML and JSON files using XML build annotation and returned them to frontend to be read Developed XML Java Script Angular JS and Java classes for dynamic HTML generation to perform the serverside processing on the client requests Environment Java17J2EE Struts Framework 20 Angular JS 2 AJAX Eclipse IDE SOA Java Beans Tibco Log4j CVS WebLogic GWT MongoDB Oracle 10 g Spring 30 JSP 20 Core java Web Services Groovy JAXWS Hibernate 30 GIT Microservices Node JS JPA HTMLHTML5 CSS XSLT JavaScript UML jQuery Rational Rose JUnit TDD Maven UNIX Java Developer Alliance Prosys Private Limited Hyderabad Telangana May 2009 to March 2012 Responsibilities As part of the life cycle development prepared class model sequence model and flow diagrams by analyzing use cases using Rational Tools Used JUNIT for testing and check API performance Development of RESTful API Services to address online incoming requests either as RAW EDI or parameterized EDI from WebPortal Involved in writing the clientside scripts using JavaScript Participated in the designing of the Web framework using Struts framework as a modelviewcontroller MVC design paradigm Used log4j for application error logging Extensive use of Struts Framework for Controller components and view components Developed SQL and PLSQL stored procedures and prepared statements for updating and accessing data from Oracle database Involved in writing the parsers for parsing and building the XML documents using SAX and DOM Parsers Reviewing and analyzing data model for developing the Presentation layer and Value Objects Used Clear Case Version Control for Project Configuration Management Environment Java JDK13 J2EE Jsp11 JavaScript HTML XML XSL Ant Eclipse Log4j JUnit   Struts10 JDBC Oracle 8i Linux and windows XP Java Developer Meta business solutions Hyderabad Telangana January 2006 to April 2009 Meta EMR Meets the key needs of healthcare organizations in an EMR improve clinical processes and workflow demonstrate higher levels of care share medical records among healthcare professionals and access medical records from any location Responsibilities Development of module end to end from JSP conversion from HTML to Data access layer Designed and developed the application using Struts Model View Controller MVC design Pattern Designing the Graphical User Interfaces using HTML JSP and JSF MYSQL is used to store the data Used JavaScript for clientside validations and validation framework for serverside validations Involved in configuring webxml and strutsconfigxml according to the Struts framework Extensively used HTML JavaScript and AJAX for clientside development and validations Hibernate frame work is used in persistence layer for mapping an objectoriented domain model to a relational database Developed Web Services using XML messages that use SOAP Developed Web Services for Payment Transaction and Payment Release Wrote test cases in Junit for unit testing of classes and implemented the logging using log4j Involved in deploying the application in test environment using Tomcat Prepared the SQL Queries Developed JSPs and Servlets to dynamically generate HTML and display the data to the client side Extensively used JSP standard tag libraries and Struts Tag libraries Application developed using Eclipse IDE Wrote SQL Stored Procedures Functions and Packages to meet the business requirements Extensively used HTML JavaScript and AJAX for clientside development and validations Used Spring IOC as Dependency Injection Developed client request validations and processing using Spring Validation Environment Struts spring Hibernate AJAX JavaScript HTML CSS Eclipse Tomcat and MYSQL Education Bachelors IIT Skills Eclipse Java Hibernate Spring jquery Visual studio Frontend Git Html Javascript Bootstrap Nodejs Typescript Json Orm Python Jira Junit Mvc Html5 Java J2Ee J2Ee JSP Angularjs JEE Links httpinput httpinput httpinput",
    "extracted_keywords": [
        "Lead",
        "Java",
        "Developer",
        "Lead",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Lead",
        "Java",
        "Developer",
        "COPE",
        "Health",
        "Solutions",
        "Princeton",
        "NJ",
        "Full",
        "Stack",
        "Web",
        "Developer",
        "over14",
        "years",
        "experience",
        "working",
        "experience",
        "Reactjs",
        "Angular",
        "Java",
        "Spring",
        "MVC",
        "Hibernate",
        "Microsoft",
        "SQL",
        "Server",
        "MySQL",
        "Excellent",
        "knowledge",
        "Frontend",
        "web",
        "developing",
        "HTMLCSS",
        "JavaScript",
        "ES5ES6",
        "TypeScript",
        "JQuery",
        "AJAX",
        "JSON",
        "Reactjs",
        "Angular",
        "Clientside",
        "Handson",
        "experience",
        "request",
        "JQuery",
        "DOM",
        "manipulation",
        "frontend",
        "development",
        "Bootstrap",
        "media",
        "query",
        "web",
        "design",
        "Proficient",
        "singlepage",
        "application",
        "use",
        "JavaScript",
        "library",
        "Reactjs",
        "depth",
        "experience",
        "Reactjs",
        "libraries",
        "techniques",
        "Redux",
        "Axios",
        "JSX",
        "Material",
        "UI",
        "Form",
        "Validation",
        "HOC",
        "reactrouter",
        "framework",
        "Angular",
        "working",
        "experience",
        "opensource",
        "libraries",
        "techniques",
        "primeNG",
        "Angular",
        "Material",
        "Directive",
        "Services",
        "Routing",
        "Dependency",
        "Injection",
        "Interceptor",
        "Restful",
        "web",
        "API",
        "Nodejs",
        "Node",
        "Package",
        "Management",
        "Jasmine",
        "Karma",
        "frontend",
        "testing",
        "JUnit",
        "testing",
        "experience",
        "J2EE",
        "technologies",
        "Java",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Maven",
        "JDBCHibernate",
        "JPA",
        "knowledge",
        "OOP",
        "DAO",
        "Singleton",
        "TDD",
        "Microservices",
        "web",
        "services",
        "Software",
        "Development",
        "Life",
        "CyclesSDLC",
        "Git",
        "version",
        "control",
        "AGILE",
        "methodology",
        "sprintiterations",
        "Scrum",
        "meetings",
        "project",
        "management",
        "tool",
        "Jira",
        "Microsoft",
        "Azure",
        "Sponsorship",
        "US",
        "Work",
        "Experience",
        "Lead",
        "Java",
        "Developer",
        "COPE",
        "Health",
        "Solutions",
        "New",
        "York",
        "NY",
        "August",
        "Present",
        "COPE",
        "Health",
        "Solutions",
        "consulting",
        "firm",
        "partners",
        "health",
        "systems",
        "clients",
        "project",
        "health",
        "management",
        "system",
        "center",
        "EMR",
        "appointment",
        "scheduling",
        "billing",
        "referral",
        "services",
        "laboratory",
        "management",
        "HIPAA",
        "EMR",
        "Login",
        "module",
        "dozens",
        "components",
        "services",
        "interceptors",
        "Responsibilities",
        "team",
        "members",
        "SPA",
        "Angular",
        "Java",
        "Spring",
        "Boot",
        "Angular",
        "CLI",
        "generation",
        "component",
        "service",
        "applications",
        "minification",
        "deployment",
        "routing",
        "navigation",
        "Router",
        "Module",
        "Activated",
        "Route",
        "parameters",
        "route",
        "guard",
        "purpose",
        "interceptor",
        "http",
        "request",
        "JWT",
        "header",
        "response",
        "call",
        "directive",
        "ngIf",
        "ngFor",
        "DOM",
        "structure",
        "manipulation",
        "attribute",
        "directive",
        "DOM",
        "behavior",
        "manipulation",
        "custom",
        "directives",
        "code",
        "reusability",
        "property",
        "decorator",
        "input",
        "output",
        "data",
        "communication",
        "parent",
        "child",
        "components",
        "services",
        "components",
        "form",
        "login",
        "page",
        "form",
        "validation",
        "logic",
        "validation",
        "addition",
        "login",
        "features",
        "login",
        "types",
        "doctorsaccountantsnurses",
        "form",
        "form",
        "control",
        "validation",
        "logic",
        "application",
        "API",
        "services",
        "postman",
        "Angular",
        "Http",
        "Client",
        "module",
        "HTTP",
        "request",
        "call",
        "data",
        "server",
        "side",
        "data",
        "UI",
        "component",
        "library",
        "material",
        "matform",
        "maticon",
        "user",
        "experience",
        "Contributed",
        "JSON",
        "Web",
        "generation",
        "distribution",
        "login",
        "use",
        "Spring",
        "Security",
        "hibernate",
        "backend",
        "communication",
        "creation",
        "POJO",
        "classes",
        "Controllers",
        "Repositories",
        "Spring",
        "Configuration",
        "Annotation",
        "configuration",
        "hibernate",
        "JPA",
        "Annotation",
        "POJO",
        "classes",
        "Spring",
        "Annotation",
        "spring",
        "boot",
        "application",
        "application",
        "Jasmine",
        "crossbrowser",
        "compatibility",
        "web",
        "application",
        "unit",
        "testing",
        "JUnit",
        "backend",
        "states",
        "SDLC",
        "building",
        "testing",
        "AGILE",
        "methodologies",
        "development",
        "environment",
        "version",
        "control",
        "GIT",
        "project",
        "management",
        "Jira",
        "Environment",
        "AngularJs",
        "Java",
        "Spring",
        "Boot",
        "Apache",
        "Tomcat",
        "Hibernate",
        "JUnit",
        "Jasmine",
        "Docker",
        "Azure",
        "Data",
        "Studio",
        "ES6",
        "HTML",
        "CSS3",
        "Eclipse",
        "Visual",
        "Stuido",
        "Code",
        "Git",
        "Postman",
        "Jira",
        "Lead",
        "Java",
        "Developer",
        "Protective",
        "Insurance",
        "Carmel",
        "January",
        "July",
        "Protective",
        "Insurance",
        "Company",
        "marketing",
        "underwriting",
        "insurance",
        "transportation",
        "industry",
        "project",
        "use",
        "application",
        "customer",
        "information",
        "payment",
        "plan",
        "risk",
        "analyze",
        "insurance",
        "policy",
        "management",
        "Responsibilities",
        "page",
        "application",
        "Reactjs",
        "Java",
        "Spring",
        "MVC",
        "Hibernate",
        "Rest",
        "API",
        "MySQL",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "dependencies",
        "reactredux",
        "reduxthunk",
        "babel",
        "webpack",
        "MaterialUI",
        "reactrouterdom",
        "web",
        "design",
        "platforms",
        "desktop",
        "tablet",
        "CSS",
        "components",
        "page",
        "application",
        "CSS",
        "background",
        "text",
        "border",
        "margin",
        "padding",
        "table",
        "MaterialUI",
        "UI",
        "components",
        "application",
        "user",
        "experience",
        "performance",
        "React",
        "Router",
        "page",
        "application",
        "Applied",
        "Router",
        "Guard",
        "access",
        "components",
        "application",
        "props",
        "data",
        "parent",
        "child",
        "component",
        "component",
        "class",
        "component",
        "order",
        "code",
        "way",
        "Component",
        "life",
        "cycle",
        "hooks",
        "Component",
        "Mount",
        "component",
        "http",
        "request",
        "data",
        "Axios",
        "HTTP",
        "requests",
        "response",
        "application",
        "Redux",
        "state",
        "management",
        "Store",
        "application",
        "Reducers",
        "Actions",
        "UI",
        "events",
        "State",
        "actions",
        "reactthunk",
        "Used",
        "Maven",
        "dependencies",
        "management",
        "tool",
        "dependencies",
        "installation",
        "Configured",
        "hibernate",
        "spring",
        "MVC",
        "Annotation",
        "Object",
        "Relational",
        "Table",
        "mapping",
        "POJO",
        "classes",
        "Authentication",
        "Authorization",
        "JWT",
        "web",
        "GIT",
        "version",
        "control",
        "Jira",
        "issues",
        "management",
        "SLDC",
        "standup",
        "meeting",
        "Environment",
        "Java",
        "Spring",
        "MVC",
        "Maven",
        "Apache",
        "Tomcat",
        "Hibernate",
        "JUnit",
        "Jasmine",
        "MySQL",
        "workbench",
        "ES6",
        "HTML",
        "CSS3",
        "Eclipse",
        "Visual",
        "Stuido",
        "Code",
        "Git",
        "Postman",
        "Jira",
        "Sr",
        "Java",
        "Developer",
        "Safeway",
        "Pleasanton",
        "CA",
        "July",
        "February",
        "Safeway",
        "Supermarket",
        "chain",
        "supermarket",
        "chain",
        "North",
        "America",
        "stores",
        "United",
        "States",
        "north",
        "Mexico",
        "December",
        "stores",
        "MidAtlantic",
        "region",
        "Eastern",
        "Seaboard",
        "company",
        "Pleasanton",
        "CA",
        "Supermarket",
        "News",
        "Safeway",
        "Gathered",
        "clients",
        "requirements",
        "departments",
        "Responsibilities",
        "ntier",
        "J2EE",
        "architecture",
        "BEA",
        "Weblogic",
        "Application",
        "Server",
        "System",
        "Analysis",
        "Design",
        "methodology",
        "Object",
        "Oriented",
        "Design",
        "development",
        "methodology",
        "model",
        "business",
        "requirements",
        "Developed",
        "Servlets",
        "JSPs",
        "MVC",
        "pattern",
        "Struts",
        "Action",
        "framework",
        "EJBs",
        "Stateless",
        "Session",
        "Beans",
        "Entity",
        "beans",
        "Savings",
        "Credit",
        "Card",
        "Loan",
        "Current",
        "account",
        "Mortgage",
        "modules",
        "web",
        "services",
        "framework",
        "User",
        "details",
        "Axis",
        "Acegi",
        "security",
        "modules",
        "product",
        "user",
        "authentication",
        "authorization",
        "Password",
        "encryption",
        "SRP",
        "protocol",
        "application",
        "functionalities",
        "Download",
        "Install",
        "session",
        "module",
        "product",
        "Persistence",
        "DAO",
        "layer",
        "implementation",
        "EJB",
        "ORM",
        "domain",
        "objects",
        "Development",
        "content",
        "management",
        "Struts",
        "MVC",
        "Open",
        "Cms",
        "Jboss",
        "web",
        "commerce",
        "department",
        "unit",
        "tests",
        "JUnit",
        "Easy",
        "Mock",
        "functionality",
        "baseline",
        "expansion",
        "Internal",
        "Admin",
        "module",
        "product",
        "Struts",
        "MVC",
        "administer",
        "product",
        "configurations",
        "desktop",
        "session",
        "OO",
        "JavaScript",
        "CSS",
        "UI",
        "Design",
        "Mockup",
        "Written",
        "code",
        "jQueryJavaScript",
        "CSS",
        "AJAX",
        "application",
        "interfaces",
        "Design",
        "Patterns",
        "Command",
        "Singleton",
        "Factory",
        "Controller",
        "OO",
        "JavaScript",
        "Created",
        "Dynamic",
        "Integration",
        "jQuery",
        "Tab",
        "jQuery",
        "Grid",
        "jQuery",
        "component",
        "Integration",
        "Ajax",
        "jQuery",
        "plugin",
        "Auto",
        "selectbox",
        "Search",
        "plugin",
        "calendar",
        "ajaxqueue",
        "plugin",
        "Auto",
        "selectboxes",
        "Call",
        "user",
        "characters",
        "mesh",
        "node",
        "entries",
        "AJAX",
        "call",
        "entries",
        "database",
        "JSON",
        "Payload",
        "list",
        "box",
        "Tiles",
        "header",
        "footer",
        "navigation",
        "Apache",
        "Validator",
        "Framework",
        "Form",
        "validation",
        "logging",
        "framework",
        "Log",
        "messages",
        "levels",
        "library",
        "class",
        "calculations",
        "issues",
        "Mortgage",
        "Loans",
        "Java",
        "Mail",
        "API",
        "Secured",
        "Emailing",
        "system",
        "session",
        "bean",
        "bugs",
        "enhancements",
        "frontend",
        "modules",
        "JUnit",
        "framework",
        "Test",
        "Classes",
        "Ant",
        "application",
        "server",
        "modes",
        "Visual",
        "Source",
        "Safe",
        "version",
        "control",
        "Environment",
        "Java",
        "JDK",
        "JSP",
        "Servlets",
        "Struts",
        "MVC",
        "Struts2",
        "Spring",
        "IOC",
        "JavaScript",
        "JQuery",
        "Ajax",
        "HTML",
        "CSS",
        "XML",
        "XSTL",
        "DHTML",
        "Design",
        "Patterns",
        "Eclipse",
        "CVS",
        "Apache",
        "Tomcat",
        "JDBC",
        "Oracle",
        "9i10",
        "g",
        "Rational",
        "Rose",
        "Xml",
        "Spy",
        "UNIX",
        "Lead",
        "Java",
        "Developer",
        "Rehab",
        "Medical",
        "Indianapolis",
        "March",
        "December",
        "Rehab",
        "Medical",
        "Complex",
        "Rehab",
        "Technology",
        "CRT",
        "Wound",
        "Care",
        "Company",
        "needs",
        "condition",
        "patient",
        "project",
        "use",
        "system",
        "product",
        "supply",
        "inventory",
        "management",
        "insurance",
        "policy",
        "functionalities",
        "customer",
        "management",
        "tasks",
        "LoginSignupForget",
        "Password",
        "customer",
        "information",
        "module",
        "components",
        "insurance",
        "policy",
        "module",
        "Responsibilities",
        "team",
        "members",
        "use",
        "page",
        "application",
        "Reactjs",
        "Java",
        "Spring",
        "boot",
        "hibernate",
        "component",
        "class",
        "component",
        "order",
        "code",
        "way",
        "Applied",
        "Bootstrap",
        "React",
        "MaterialUI",
        "user",
        "Experience",
        "form",
        "validation",
        "login",
        "page",
        "component",
        "data",
        "places",
        "resource",
        "page",
        "user",
        "update",
        "operations",
        "end",
        "database",
        "API",
        "Used",
        "Redux",
        "state",
        "management",
        "tool",
        "state",
        "application",
        "level",
        "implement",
        "actions",
        "reducers",
        "stores",
        "props",
        "components",
        "data",
        "communication",
        "synchronization",
        "Redux",
        "application",
        "use",
        "middleware",
        "ReduxThunk",
        "operations",
        "http",
        "action",
        "React",
        "Router",
        "page",
        "application",
        "route",
        "guard",
        "access",
        "permissions",
        "access",
        "Higher",
        "Order",
        "Components",
        "component",
        "reusability",
        "JWT",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "POJO",
        "classes",
        "controllers",
        "repositories",
        "use",
        "hibernate",
        "Jpa",
        "repository",
        "annotation",
        "SQL",
        "server",
        "Performed",
        "Integration",
        "Testing",
        "DataJpa",
        "Test",
        "unit",
        "Unit",
        "Testing",
        "Web",
        "Mvc",
        "Test",
        "testing",
        "API",
        "calls",
        "procedure",
        "database",
        "hibernate",
        "performance",
        "Microsoft",
        "Azure",
        "project",
        "progress",
        "checking",
        "GIT",
        "version",
        "control",
        "AGILE",
        "development",
        "environment",
        "SLDC",
        "Environment",
        "Java",
        "Spring",
        "Boot",
        "Apache",
        "Tomcat",
        "Hibernate",
        "JUnit",
        "Jasmine",
        "Docker",
        "Azure",
        "Data",
        "Studio",
        "ES6",
        "HTML",
        "CSS3",
        "Eclipse",
        "Visual",
        "Studio",
        "Code",
        "Git",
        "Postman",
        "Microsoft",
        "Azure",
        "Senior",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Bank",
        "America",
        "Charlotte",
        "NC",
        "April",
        "June",
        "Responsibilities",
        "J2EE",
        "consumer",
        "applications",
        "Spring",
        "DHTML",
        "Ajax",
        "Implementing",
        "UI",
        "screens",
        "HTML",
        "CSS",
        "JSP",
        "JavaScript",
        "application",
        "IBM",
        "WSAD",
        "IBM",
        "WebSphere",
        "Application",
        "Server",
        "testing",
        "Web",
        "methods",
        "J",
        "Unit",
        "Testing",
        "framework",
        "Selenium",
        "test",
        "scripts",
        "Selenium",
        "validate",
        "results",
        "Automation",
        "Scripts",
        "library",
        "functions",
        "maintenance",
        "STRUTS",
        "Framework",
        "MVC",
        "Model",
        "View",
        "Controller",
        "architecture",
        "WebSphere",
        "Application",
        "Development",
        "Created",
        "Docker",
        "images",
        "SOA",
        "projects",
        "Microservices",
        "Developed",
        "software",
        "systems",
        "JavaScript",
        "Groovy",
        "application",
        "Core",
        "java",
        "Collections",
        "Struts",
        "Spring",
        "MVC",
        "design",
        "framework",
        "code",
        "JAXWS",
        "WSDL",
        "file",
        "clients",
        "web",
        "services",
        "functionality",
        "test",
        "automation",
        "scripts",
        "Selenium",
        "Java",
        "Configured",
        "Hibernate",
        "Spring",
        "Faces",
        "JSF",
        "business",
        "MySQL",
        "Database",
        "XML",
        "configuration",
        "file",
        "business",
        "modules",
        "JSP",
        "Servlet",
        "Struts",
        "Java",
        "UML",
        "XMLXSL",
        "EJB",
        "technologies",
        "ReactJs",
        "components",
        "JSX",
        "React",
        "components",
        "branching",
        "buildrelease",
        "strategies",
        "GIT",
        "test",
        "client",
        "Spring",
        "Struts",
        "JSP",
        "Tag",
        "Libraries",
        "Java",
        "Backend",
        "applications",
        "Spring",
        "MVC",
        "architecture",
        "Junit",
        "test",
        "case",
        "interceptor",
        "validation",
        "cookie",
        "Microservices",
        "business",
        "segments",
        "administration",
        "endpoints",
        "Spring",
        "Boot",
        "Spring",
        "JMS",
        "messages",
        "MQ",
        "jQuery",
        "scripting",
        "HTML",
        "design",
        "maintenance",
        "GIT",
        "Repositories",
        "access",
        "control",
        "strategies",
        "Struts",
        "form",
        "beans",
        "action",
        "classes",
        "JSPs",
        "tiles",
        "struts",
        "framework",
        "standards",
        "HQL",
        "Hibernate",
        "Query",
        "Language",
        "database",
        "retrieval",
        "results",
        "search",
        "system",
        "Mongo",
        "DB",
        "Angular",
        "JS",
        "Java",
        "Servlets",
        "JUnit",
        "Maven",
        "SNAPSMTP",
        "PROTOCOL",
        "communication",
        "purpose",
        "Storage",
        "Device",
        "Java",
        "Networking",
        "Socket",
        "Programming",
        "Automation",
        "build",
        "process",
        "Continuous",
        "Integration",
        "tools",
        "Continuum",
        "Jenkins",
        "Web",
        "layer",
        "Servlets",
        "JSP",
        "Struts",
        "Framework",
        "Eclipse",
        "Java",
        "IDE",
        "tool",
        "Hibernate",
        "Servlets",
        "JSP",
        "JSF",
        "IBM",
        "WebSphere",
        "MQ",
        "messaging",
        "components",
        "JMS",
        "Constructed",
        "web",
        "pages",
        "application",
        "MVC3",
        "Java",
        "Script",
        "jQuery",
        "React",
        "JS",
        "Node",
        "JS",
        "Karma",
        "Jasmine",
        "Created",
        "configuration",
        "files",
        "spring",
        "Hibernate",
        "JSF",
        "integration",
        "Java",
        "files",
        "XML",
        "build",
        "annotation",
        "XML",
        "Java",
        "Script",
        "Angular",
        "JS",
        "Java",
        "classes",
        "HTML",
        "generation",
        "serverside",
        "processing",
        "client",
        "requests",
        "Environment",
        "Java17J2EE",
        "Struts",
        "Framework",
        "Angular",
        "JS",
        "AJAX",
        "Eclipse",
        "IDE",
        "SOA",
        "Java",
        "Beans",
        "Tibco",
        "Log4j",
        "CVS",
        "WebLogic",
        "GWT",
        "MongoDB",
        "Oracle",
        "g",
        "Spring",
        "JSP",
        "Core",
        "java",
        "Web",
        "Services",
        "Groovy",
        "JAXWS",
        "Hibernate",
        "GIT",
        "Microservices",
        "Node",
        "JS",
        "JPA",
        "HTMLHTML5",
        "CSS",
        "XSLT",
        "JavaScript",
        "UML",
        "jQuery",
        "Rational",
        "Rose",
        "JUnit",
        "TDD",
        "Maven",
        "UNIX",
        "Java",
        "Developer",
        "Alliance",
        "Prosys",
        "Private",
        "Limited",
        "Hyderabad",
        "Telangana",
        "May",
        "March",
        "Responsibilities",
        "part",
        "life",
        "cycle",
        "development",
        "class",
        "model",
        "sequence",
        "model",
        "flow",
        "diagrams",
        "use",
        "cases",
        "Rational",
        "Tools",
        "JUNIT",
        "testing",
        "API",
        "performance",
        "Development",
        "API",
        "Services",
        "requests",
        "RAW",
        "EDI",
        "EDI",
        "WebPortal",
        "scripts",
        "JavaScript",
        "Participated",
        "designing",
        "Web",
        "framework",
        "Struts",
        "framework",
        "modelviewcontroller",
        "MVC",
        "design",
        "paradigm",
        "Used",
        "log4j",
        "application",
        "error",
        "use",
        "Struts",
        "Framework",
        "Controller",
        "components",
        "view",
        "components",
        "SQL",
        "procedures",
        "statements",
        "data",
        "Oracle",
        "database",
        "parsers",
        "XML",
        "documents",
        "SAX",
        "DOM",
        "Parsers",
        "Reviewing",
        "data",
        "model",
        "Presentation",
        "layer",
        "Value",
        "Objects",
        "Clear",
        "Case",
        "Version",
        "Control",
        "Project",
        "Configuration",
        "Management",
        "Environment",
        "Java",
        "JDK13",
        "J2EE",
        "Jsp11",
        "JavaScript",
        "HTML",
        "XML",
        "XSL",
        "Ant",
        "Eclipse",
        "Log4j",
        "JUnit",
        "Struts10",
        "JDBC",
        "Oracle",
        "Linux",
        "XP",
        "Java",
        "Developer",
        "Meta",
        "business",
        "solutions",
        "Hyderabad",
        "Telangana",
        "January",
        "April",
        "Meta",
        "EMR",
        "needs",
        "healthcare",
        "organizations",
        "EMR",
        "processes",
        "levels",
        "care",
        "share",
        "records",
        "healthcare",
        "professionals",
        "records",
        "location",
        "Responsibilities",
        "Development",
        "module",
        "end",
        "JSP",
        "conversion",
        "HTML",
        "Data",
        "access",
        "layer",
        "application",
        "Struts",
        "Model",
        "View",
        "Controller",
        "MVC",
        "design",
        "Pattern",
        "Designing",
        "Graphical",
        "User",
        "Interfaces",
        "HTML",
        "JSP",
        "JSF",
        "MYSQL",
        "data",
        "JavaScript",
        "validations",
        "validation",
        "framework",
        "serverside",
        "validations",
        "webxml",
        "strutsconfigxml",
        "Struts",
        "framework",
        "HTML",
        "JavaScript",
        "AJAX",
        "development",
        "Hibernate",
        "frame",
        "work",
        "persistence",
        "layer",
        "domain",
        "model",
        "database",
        "Developed",
        "Web",
        "Services",
        "XML",
        "messages",
        "SOAP",
        "Developed",
        "Web",
        "Services",
        "Payment",
        "Transaction",
        "Payment",
        "Release",
        "Wrote",
        "test",
        "cases",
        "Junit",
        "unit",
        "testing",
        "classes",
        "logging",
        "log4j",
        "application",
        "test",
        "environment",
        "Tomcat",
        "Prepared",
        "SQL",
        "Queries",
        "JSPs",
        "Servlets",
        "HTML",
        "data",
        "client",
        "side",
        "JSP",
        "standard",
        "tag",
        "libraries",
        "Struts",
        "Tag",
        "Application",
        "Eclipse",
        "IDE",
        "Wrote",
        "SQL",
        "Stored",
        "Procedures",
        "Functions",
        "Packages",
        "business",
        "requirements",
        "HTML",
        "JavaScript",
        "AJAX",
        "development",
        "validations",
        "Spring",
        "IOC",
        "Dependency",
        "Injection",
        "client",
        "request",
        "validations",
        "processing",
        "Spring",
        "Validation",
        "Environment",
        "Struts",
        "spring",
        "Hibernate",
        "AJAX",
        "JavaScript",
        "HTML",
        "CSS",
        "Eclipse",
        "Tomcat",
        "MYSQL",
        "Education",
        "Bachelors",
        "IIT",
        "Skills",
        "Eclipse",
        "Java",
        "Hibernate",
        "Spring",
        "jquery",
        "Visual",
        "studio",
        "Frontend",
        "Git",
        "Html",
        "Javascript",
        "Bootstrap",
        "Nodejs",
        "Typescript",
        "Json",
        "Orm",
        "Python",
        "Jira",
        "Junit",
        "Mvc",
        "Html5",
        "Java",
        "J2Ee",
        "JSP",
        "Angularjs",
        "JEE",
        "Links",
        "httpinput",
        "httpinput"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:13:04.908265",
    "resume_data": "Lead Java Developer Lead span lJavaspan span lDeveloperspan Lead Java Developer COPE Health Solutions Princeton NJ Full Stack Web Developer with over14 years of experience Extensive working experience with Reactjs Angular 5 Java Spring MVC Hibernate Microsoft SQL Server MySQL Excellent knowledge in Frontend web developing such as HTMLCSS JavaScript ES5ES6 TypeScript JQuery AJAX JSON Reactjs 1516 Angular 2 and Clientside validations Handson experience on AJAX request and JQuery DOM manipulation in frontend development as well as applied Bootstrap 34 and media query for responsive web design Proficient in developing singlepage application with use of JavaScript library Reactjs In depth experience in Reactjs libraries and techniques such as Redux Axios JSX Material UI Form Validation HOC and reactrouter Used opensource framework Angular 5 Good working experience in various Angular opensource libraries and techniques such as primeNG Angular Material Directive Services Routing Dependency Injection and Interceptor Built Restful web API with Nodejs and Node Package Management and implemented Jasmine Karma for the frontend testing and JUnit for the backend testing Indepth experience with J2EE technologies Java Spring MVC Spring AOP Spring Security Spring Boot Maven JDBCHibernate and JPA Solid knowledge of OOP DAO Singleton TDD Microservices and RESTful web services Involved in Software Development Life CyclesSDLC and worked with Git version control Experienced in AGILE methodology such as participating in sprintiterations and Scrum meetings as well as used with project management tool such as Jira and Microsoft Azure Sponsorship required to work in the US Work Experience Lead Java Developer COPE Health Solutions New York NY August 2017 to Present COPE Health Solutions is a national missiondriven consulting firm that partners with health systems and payor clients This project built a health management system for a medical center to deal with secured EMR appointment scheduling billing referral services and laboratory management under HIPAA I was responsible for the EMR and Login module which contains dozens of components and created corresponded services and interceptors Responsibilities Collaborated with team members and developed a SPA based on Angular 5 and Java Spring Boot Used Angular CLI for easy generation of component and service as well as applications minification and deployment Built routing and navigation with Router Module and injected Activated Route for parameters passing and implemented route guard for the purpose of secured routing Used interceptor to capture http request and attached JWT token to header before sending it and catch the response and process it before completing the call Applied with angular structural directive such as ngIf ngFor for DOM structure manipulation as well as attribute directive for DOM behavior manipulation and custom directives to achieve code reusability Implemented property decorator such as input output for data passing and communication within parent and child components as well as different services for components Used templatedriven form for login page form validation with coded logic and validation In addition to it added separated login features by identify different login types doctorsaccountantsnurses Also coded reactive form for form control which requires a more complicated validation logic resides in angular application Worked on RESTful API to created services tested on postman and use Angular Http Client module for making HTTP request call to get and bind the data from server side Implemented Observable and subscribe for constantly data handling Applied UI component library angular material such as matform maticon and etc for a better user experience Contributed in JSON Web Token generation and distribution upon successful login with the use of Spring Security in the backend Implemented hibernate for backend and databases communication with creation of POJO classes Controllers and Repositories Used Spring Configuration Annotation for easy configuration hibernate JPA Annotation in POJO classes as well as Spring Annotation across the spring boot application Tested angular application on Jasmine and responsible for crossbrowser compatibility of the web application Also performed unit testing with JUnit for the backend Involved in various states of SDLC such as designing building and testing Also enforced AGILE methodologies for optimized development environment as well as used version control such as GIT and project management Jira Environment AngularJs Java 18 Spring Boot Apache Tomcat Hibernate JUnit Jasmine Docker Azure Data Studio ES6 HTML 5 CSS3 Eclipse Visual Stuido Code Git Postman Jira Lead Java Developer Protective Insurance Carmel IN January 2016 to July 2017 Protective Insurance Company specializes in marketing and underwriting insurance for the transportation industry This project built an internal use application for managing customer information payment plan risk analyze and insurance policy management Responsibilities Developed single page application with Reactjs Java Spring MVC Hibernate Rest API and MySQL Used Node Package Manager NPM to install required dependencies such as reactredux reduxthunk babel webpack MaterialUI and reactrouterdom Involved in responsive web design and supported for multiple platforms desktop tablet and mobile Designed CSS for different components on the single page application with CSS background positioning text border margin padding and table Applied MaterialUI to the UI components for the application to allow a better user experience and performance Used React Router to created single page application Applied Router Guard to deny unauthorized access Created reusable components for the application and used props to pass data between parent and child component Also created functional component as well as class component in order to maintain code in simple and clean way Used different Component life cycle hooks such as Component Did Mount and component Did Update for http request and fetch data Implemented Axios to handle HTTP requests and response for the application Implemented Redux for state management and configured global Store for the entire application Also developed Reducers and Actions to manage various UI events to update the State and handle asynchronous actions by using reactthunk Used Maven as dependencies management tool for easy dependencies installation Configured hibernate with spring MVC Used Annotation for easy Object and Relational Table mapping Implement several POJO classes Implemented Authentication and Authorization via generating JWT web token in the backend Utilized GIT for version control and Jira for issues tracking and workflow management Involved in SLDC and participated in standup meeting Environment Java 17 Spring MVC Maven Apache Tomcat Hibernate JUnit Jasmine MySQL workbench ES6 HTML 5 CSS3 Eclipse Visual Stuido Code Git Postman Jira Sr Java Developer Safeway Pleasanton CA July 2014 to February 2016 Safeway is an American Supermarket chain it is the second largest supermarket chain in North America and has 1678 stores located throughout the western and central United States and north western Mexico as of December It also operates some stores in the MidAtlantic region of the Eastern Seaboard The company is headquartered in Pleasanton CA Supermarket News ranked Safeway No 4 in the 2011 Gathered clients requirements coordinated with different departments Responsibilities Designed developed and tested using ntier J2EE architecture in BEA Weblogic Application Server Involved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements Developed Servlets and JSPs based on MVC pattern using Struts Action framework Developed EJBs Stateless Session Beans and Entity beans for Savings Credit Card Loan Current account and Mortgage modules Developed web services framework for retrieving User details using Axis Implemented Acegi security for all modules in product which require user authentication and authorization Password encryption using SRP protocol Designed and developed important application functionalities Download and Install session module for this product Developed Persistence and DAO layer implementation using EJB 30 ORM for the domain objects involved Development of content management as Struts MVC on Open Cms on Jboss for web commerce department Wrote many unit tests using JUnit and Easy Mock to cover existing functionality and provide a baseline for expansion Designed and developed the Internal Admin module of the product using Struts MVC where the administer can login and configure the product specific configurations to start remote desktop session Used OO JavaScript and CSS for UI Design Mockup Written code in jQueryJavaScript CSS AJAX for the navigationoriented application Designed and developed interfaces using Design Patterns Like Command Singleton Factory and Controller in OO JavaScript Created Dynamic Integration of jQuery Tab jQuery Grid and another jQuery component Integration with Ajax Extensively used jQuery plugin like Auto populating selectbox Search plugin calendar plugin ajaxqueue plugin and Auto populating multiple selectboxes Implemented Ajax Call when the user keys in the first few characters of mesh node entries an AJAX call is made and all the matching node entries are retrieved from database as a JSON Payload and displayed in a dropdown list box Used Tiles for setting the header footer and navigation and Apache Validator Framework for Form validation Used Log4J logging framework to write Log messages with various levels Created library class for financial calculations of various financial issues like Mortgage Loans etc Used Java Mail API developed Secured Emailing system a session bean Involved in fixing bugs and minor enhancements for the frontend modules Used JUnit framework for writing Test Classes Used Ant for starting up the application server in various modes Used Visual Source Safe for version control Environment Java JDK 15 JSP Servlets Struts MVC Struts2 Spring IOC JavaScript JQuery Ajax HTML CSS XML XSTL DHTML Design Patterns Eclipse CVS Apache Tomcat 55 JDBC Oracle 9i10g Rational Rose Xml Spy UNIX WindowsXP Lead Java Developer Rehab Medical Indianapolis IN March 2013 to December 2015 Rehab Medical is a Complex Rehab Technology CRT and Wound Care Company supporting the individualized needs of the complicated condition patient This project is to develop an internal use system which provides product supply and inventory management insurance policy related functionalities customer management I was responsible for the tasks related to LoginSignupForget Password customer information module some of the components in insurance policy module Responsibilities Collaborated with team members and developed internal use single page application with Reactjs and Java Spring boot and hibernate Created functional component as well as class component in order to maintain code in simple and clean way Applied Bootstrap 4 React MaterialUI for a better user Experience Implemented form validation in login page as well as in customized component to validate data that entered in different places Responsible for implementing resource displaying page which enables user to perform create update delete operations through the front end to database via Axios API calls Used Redux global state management tool to allow state shared at application level with implement of actions reducers and stores Also used props to ensure components data exchanging and communication Ensured synchronization across the Redux application with use of middleware ReduxThunk to manage asynchronous operations such as http calls before action passed to reducer Used React Router to create single page application and react route guard to control access permissions and reject unauthorized access Created Higher Order Components to achieve component reusability Contributed in implementing JWT with Spring Boot and Spring Security in the backend Created POJO classes controllers and repositories with the use of hibernate Jpa repository and annotation to work with SQL server Performed Integration Testing with DataJpa Test unit and Unit Testing with Web Mvc Test testing on API calls Implemented Stored procedure in database to improve hibernate performance Used Microsoft Azure for project progress checking and GIT for version control Participated in AGILE development environment as well as involved in SLDC Environment Java 17 Spring Boot Apache Tomcat Hibernate JUnit Jasmine Docker Azure Data Studio ES6 HTML 5 CSS3 Eclipse Visual Studio Code Git Postman Microsoft Azure Senior JavaJ2EE Full Stack Developer Bank of America Charlotte NC April 2012 to June 2014 Responsibilities Developed and Designed J2EE 7 webbased consumer applications using Spring DHTML and Ajax Implementing UI screens using HTML CSS JSP and JavaScript Maintaining the application on IBM WSAD and deployed it on IBM WebSphere Application Server Performed the testing of Web methods in J Unit and Testing framework using Selenium Executed the test scripts using Selenium validate the actual and expected results Responsible for Automation Scripts library functions maintenance Used STRUTS Framework based on MVC Model View Controller architecture in WebSphere Application Development Created Docker images for SOA projects that are developed as Microservices Developed and executed software systems utilizing JavaScript and Groovy Implemented entire application using Core java java Collections Struts and Spring 30 MVC design framework Generated executable code in JAXWS by using WSDL file which helps clients to call web services Understanding the functionality and developing test automation scripts with Selenium using Java Configured Hibernate Spring and My Faces JSF to map the business objects to MySQL Database using XML configuration file Developed business modules with JSP Servlet Struts framework Java UML XMLXSL and EJB technologies Used ReactJs in components like JSX creating React components Virtual Implemented maintained the branching and buildrelease strategies utilizing GIT Designed and developed a webbased test client using Spring Struts JSP Tag Libraries Java Backend applications has been implemented with Spring MVC architecture with Junit test case and interceptor for the validation of the secured cookie Designed and created Microservices business segments and RESTful administration endpoints utilizing Spring Boot Used Spring JMS to post messages to MQ Used jQuery to simplify the clientside scripting of HTML Responsible for design and maintenance of the GIT Repositories and the access control strategies Developed Struts form beans action classes JSPs and tiles which follow struts framework standards Used HQL Hibernate Query Language for database querying and retrieval of results Developed specialized search system using Mongo DB Angular JS Java Servlets JUnit Maven Used SNAPSMTP PROTOCOL for communication purpose with Storage Device Java Networking Socket Programming Automation of the build process using Continuous Integration tools like Continuum and Jenkins Web layer is implemented using Servlets and JSP using Struts Framework Eclipse is used as Java IDE tool for creating Hibernate Servlets and JSP JSF Utilized the IBM WebSphere MQ for asynchronous messaging between components using JMS Constructed web pages for application using MVC3 Java Script jQuery React JS Node JS Karma Jasmine Created configuration files for spring Hibernate and JSF integration Converted Java objects to XML and JSON files using XML build annotation and returned them to frontend to be read Developed XML Java Script Angular JS and Java classes for dynamic HTML generation to perform the serverside processing on the client requests Environment Java17J2EE Struts Framework 20 Angular JS 2 AJAX Eclipse IDE SOA Java Beans Tibco Log4j CVS WebLogic GWT MongoDB Oracle 10g Spring 30 JSP 20 Core java Web Services Groovy JAXWS Hibernate 30 GIT Microservices Node JS JPA HTMLHTML5 CSS XSLT JavaScript UML jQuery Rational Rose JUnit TDD Maven UNIX Java Developer Alliance Prosys Private Limited Hyderabad Telangana May 2009 to March 2012 Responsibilities As part of the life cycle development prepared class model sequence model and flow diagrams by analyzing use cases using Rational Tools Used JUNIT for testing and check API performance Development of RESTful API Services to address online incoming requests either as RAW EDI or parameterized EDI from WebPortal Involved in writing the clientside scripts using JavaScript Participated in the designing of the Web framework using Struts framework as a modelviewcontroller MVC design paradigm Used log4j for application error logging Extensive use of Struts Framework for Controller components and view components Developed SQL and PLSQL stored procedures and prepared statements for updating and accessing data from Oracle database Involved in writing the parsers for parsing and building the XML documents using SAX and DOM Parsers Reviewing and analyzing data model for developing the Presentation layer and Value Objects Used Clear Case Version Control for Project Configuration Management Environment Java JDK13 J2EE Jsp11 JavaScript HTML XML XSL Ant Eclipse Log4j JUnit Servlets22 Struts10 JDBC Oracle 8i Linux and windows XP Java Developer Meta business solutions Hyderabad Telangana January 2006 to April 2009 Meta EMR Meets the key needs of healthcare organizations in an EMR improve clinical processes and workflow demonstrate higher levels of care share medical records among healthcare professionals and access medical records from any location Responsibilities Development of module end to end from JSP conversion from HTML to Data access layer Designed and developed the application using Struts Model View Controller MVC design Pattern Designing the Graphical User Interfaces using HTML JSP and JSF MYSQL is used to store the data Used JavaScript for clientside validations and validation framework for serverside validations Involved in configuring webxml and strutsconfigxml according to the Struts framework Extensively used HTML JavaScript and AJAX for clientside development and validations Hibernate frame work is used in persistence layer for mapping an objectoriented domain model to a relational database Developed Web Services using XML messages that use SOAP Developed Web Services for Payment Transaction and Payment Release Wrote test cases in Junit for unit testing of classes and implemented the logging using log4j Involved in deploying the application in test environment using Tomcat Prepared the SQL Queries Developed JSPs and Servlets to dynamically generate HTML and display the data to the client side Extensively used JSP standard tag libraries and Struts Tag libraries Application developed using Eclipse IDE Wrote SQL Stored Procedures Functions and Packages to meet the business requirements Extensively used HTML JavaScript and AJAX for clientside development and validations Used Spring IOC as Dependency Injection Developed client request validations and processing using Spring Validation Environment Struts spring Hibernate AJAX JavaScript HTML CSS Eclipse Tomcat and MYSQL Education Bachelors IIT Skills Eclipse Java Hibernate Spring jquery Visual studio Frontend Git Html Javascript Bootstrap Nodejs Typescript Json Orm Python Jira Junit Mvc Html5 Java J2Ee J2Ee JSP Angularjs JEE Links httpinput httpinput httpinput",
    "unique_id": "df0d2ea8-1e49-4df0-8744-a042d121d4d9"
}