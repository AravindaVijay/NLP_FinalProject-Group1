{
    "clean_data": "SrFull Stack Developer SrFull Stack span lDeveloperspan SrFull Stack Developer Cross River Bank Over 8years of experience involving all phases of Software Development Life Cycle SDLC including planning analysis design implementation testing and maintenance of MultiTier distributed secure enterprise applications using JavaJ2EE technologies inBanking Insurance and Communication Experience in application development using Software development methodologies such as Agile Waterfall development and TDD Test Driven Development environments Expertise in Core Java concepts of JavaJ2EE like JSP Servlets JSF JSTL EJB transaction implementation CMP BMP MessageDriven Beans JMS Struts Spring Swing Hibernate Java Beans JDBC XML Web Services JNDI MultiThreading Data Structures etc Experience in User Interactive UI Web Pages and visually appealing User Interface usingHTML5 CSS3 jQuery Ajax JavaScript and PHP Extensively worked on XML related technologies like XML XSLT XPATH XSL DTD and DOM Responsible for creating a microservice system using Java 8 with Spring Boot RESTful API SOAP API and experience with Java 8 features like Stream Lambda expressions and Filters Experienced in Middleware persistence frameworks like HibernateJPA for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria and Projections Experience in database modelling design and development of PLSQL stored procedures packages in relational databases like Oracle 9i10g 11g SQL Server 20052008 and MySQL Experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDBCassandra and Couch DB Experienced in implementing Service Oriented Architecture and Web Services such as SOAP using WDSL JAXWS and REST using Spring Boot Apache CFX JAXRS and Jersey Frameworks Hands on experience in configuration and deployment of multitier applications using servers like Apache Tomcat WebSphere JBoss and WebLogic Knowledge on Spring Framework like Spring Core Spring DAO Spring IoC Spring MVC Spring ORM Spring AOP Spring Boot and Spring Web flow Involved and developed various phases of security implementation using Spring Security system against all types of authentications like LDAP authentication Basic authentication and PreAuthentication Having knowledge on JMS MQs like Kafka Rabbit MQ and Active MQ Hands on experience with version control tools like SVN GIT and CVS Experience in using Jenkins for CICD process and creating Docker images and containers Experience in using Automation tools like Selenium and Cucumber Hands on experience with build tools like ANT Maven and logging tools like Log4j and SLF4J Work Experience SrFull Stack Developer Cross River Bank Fort Lee NJ March 2018 to Present Description Cross River Bank is a financial services organization that combines traditional banking services and the offerings of a technology company Cross River combines a comprehensive suite of products into a bankingasaplatform solution encompassing lending payments and risk management Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Extensively made use ofJava8features like Predicates Functional Interfaces and Lambda Expressions Method References and Stream API for bulk data operations on Collections Involved in developing UI pages using Angular 40 HTML5 CSS3 and Twitter Bootstrap Designed and developed Microservice using synchronous protocols like HTTP REST JAXRS and SOAP JAXB Implemented Spring Framework including Spring CoreIOC Spring AOP Spring ORM and Spring Batch and implemented the authentication authorization and accesscontrol features by making use of Spring Security Used Spring Boot to develop and deploy both RESTful web services and MVC applications Written shell scripts to copy output files to a different location from Spring Batch Used Spring Boot to develop and deploy RESTful web services SOAP and MVC applications Implemented Swagger Configuration in Java Spring Boot for auto generating swagger JSON files for REST API calls Implemented exception handling in Java Spring Boot for REST API by making use of Exception Handler and Controller Advice annotations Used Apache Camel for processing different files creating routes using router for communication and integration with other microservice Used Openshiftplatform to deploy applications on cloud Scripted Ansible playbook to deploy applications inOpenshift clusters Effectively developed and deployed Spring Boot applications for REST services on Openshiftplatform and implemented platform as service technologies Added security layer for web services using Oauth Sami integration SHA256 authentication and Basic Authentication Used Apache Kafka with Zoo Keeper for achieving synchronous and asynchronous messaging techniques Used ActiveMQ for asynchronous messaging techniques Developed the Application Module using several design patterns like Singleton Factory DAO DTO Business Delegate Faade prototype and Composite View Integrated with Oracle Field Service Cloud for outbound messages through SMS Used Hibernate objectrelationalmapping ORM technique for mapping data from MVC model to MySQL Relational data model with and SQLbased schema Developed session entity beans and message driven beans mapping of Java objects to database tables using Hibernate Extensively used Hibernate Transaction Management and Hibernate Batch Transactions Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Used PostgreSQL as customer database then migrated to MongoDB used both database in Spring Boot Created Docker images and ran the Docker containers in various environments Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes Used Elastic search Fluentdand Kibana as Log Database for microservice applications Implemented GUIDGlobal Unique Identifier for unique identification of logs Worked with Prometheus as system monitoring tool and Grafana as graphical dashboard Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Used Log4j for logging errors and GIT for version control Deployed the application on JBOSS application server Developed unit and integration tests for existing microservice using Junit andMockito Integrated SOAPUI in Jenkins with Mavenenvironments for unit and Integration testing Developed Cucumber tests for Behaviour Driven integration testing Fixed defects identified during QA UAT and Production Environment Java 8 J2EE Spring Boot AJAX jQuery Angular4 Microservice Openshift JBOSS Hibernate Apache Camel OAuth Basic Authentication Swagger RESTful web services SOAP web service PostgreSQL ELKDocker Maven Jenkins ActiveMQ Kafka Shell Scripts GitGitLab Googs JUnit Mockito CucumberLog4j Full Stack Java Developer USAA San Antonio TX June 2016 to February 2018 Description USAA a diversified financial services group of companies is among the leading providers of financial planning insurance investments and banking products to members of the US military and their families CIM is a webservice based application which deals with creating user credentials with specific password rules that are following the USAA policys and managing them in LDAP directory and Postgres database for Online USAA customers It performs operations like modifyingresetting user password and username in LDAP directory Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Extensively made use of Java8 features like Predicates Functional Interfaces and Lambda Expressions Method References and Stream API for bulk data operations on Collections Involved in developing UI pages using Angular 40 HTML5 CSS3 and Twitter Bootstrap Developing web pages using Angular40 Framework and worked with various Angular JS directives and services and Filters to build the Applications Designed and developed Microservice using synchronous protocols like HTTP REST JAXRS Implemented Spring Framework including Spring CoreIOC Spring AOP Spring ORM and Spring Batch and implemented the authentication authorization and accesscontrol features by making use of Spring Security Used Spring Boot to develop and deploy both RESTful web services and MVC applications Written Shell scripts to copy output files to a different location from Spring Batch Implemented Swagger Configuration in Java Spring Boot for auto generating swagger JSON files for REST API calls Implemented exception handling in Java Spring Boot for REST API by making use of Exception Handler and Controller Advice annotations Used Pivotal Cloud Foundry to deploy applications on cloud Effectively developed and deployed Spring Boot applications for REST services on Pivotal Cloud Foundry and implemented platform as service technologies Added security layer for web services using OAuth and Sami integration Developed the Application Module using several design patterns like Singleton Factory DAO DTO Business Delegate Faade prototype and Composite View Implemented RESTful Web services for transmission of data in JSON format Used Hibernate objectrelationalmapping ORM technique for mapping data from MVC model to MySQL Relational data model with an SQLbased schema Developed session entity beans and message driven beans mapping of Java objects to database tables using Hibernate Extensively used Hibernate Transaction Management and Hibernate Batch Transactions Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Preparing PostgreSQL queries for reporting and analysing production data for various applications Created Docker images and ran the Docker containers in various environments Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Used Log4j for logging errors and GIT for version control Deployed the application on JBOSS Nginx application server Developed unit and integration tests for existing microservice using JUnit Mockito environments for development and QA teams Fixed defects identified during QA UAT and Production Environment Java 8 J2EE Spring Boot AJAX jQuery Angular4 Microservice Pivotal Cloud Foundry JBOSS JBPM Netflix Eureka Hibernate Spring Batch OAuth Swagger RESTful web services MongoDB PostgreSQL Docker Maven Jenkins Kafka Shell Scripts Git GitHub JUnit MockitoLog4j Federal Home Loan Bank Des Moines IA August 2015 to May 2016 Des Moines IA Aug 2015 to May 2016 JavaJ2EE Description A primary benefit FHLB application in access to low cost secured borrowings known as advances which are funded by the FHL Banks in the capital markets from the issuance of discount notes or term debt collectively known as consolidated obligations COs Responsibilities Involved in requirement analysis design development testing of application using Agile methodology Used AWS Amazon Web Services as a cloud platform to deploy the application Leveraged AWS cloud services such as EC2 autoscaling and VPC to build secure highly scalable and flexible systems that handled expected and unexpected load bursts Used Amazon IAM to grant finegrained access to AWS resources to users Managed roles and permissions of users to AWS account through IAM Experience in Integration of Amazon Web Services AWS with other applications infrastructure Utilized S3 buckets and Glacier for file storage and backup on AWS cloud Developed various helper classes necessary using MultiThreading Developed Interactive web pages using AngularJS HTML5 CSS3 and JavaScript Developed Single Page Application SPA using AngularJS Framework and injected generic services using Angular2 Used NodeJS Express to create API which can provide or consume JSON Integrated the IoC container of Spring Framework to handle the creation of beans dependency injection and transaction management Used Hibernate ORM to integrate with business application with Oracle Database where Hibernate template is used to implement business logic Created XML configuration file for Hibernate Database connectivity Consumed Web Services by implementing Springs REST support for development of RESTful Web services Created Shell script to deploy resource bundles on different environments Worked with Git Version control system to track various aspects of the project Used Maven as build tool on Java projects for the development of build artefacts on the source code Used Log4j logging framework to write Log messages with various levels for logging across the application Execute finished output and supporting documentation for banking requirements Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Developed test cases using JUnit and jMock for unit testing as well as integration testing as part of TestDriven Development TDD Interacted with Business Analysts to come up with better implementation designs for the application Provided production support for the application Involved in testing debugging bugs fixing and documentation of the system Environment Java 7 J2EE Spring MVC 30 Hibernate 30 JSP AngularJS Nodejs HTML5 CSS3 JavaScript AWSVPC EC2 IAM Route53 Lambda ELB S3 RESTful web services Rabbit MQ ESB Shell Scripts Git Maven Log4j Cassandra Oracle 11g Docker JUnit jMock Java Developer Equifax Atlanta GA May 2014 to July 2015 Description Equifax Inc is a consumer credit reporting agency Equifax collects and aggregates information on over 800 million individual consumers and more than 88 million businesses worldwide Responsibilities Worked on Agile methodology including teambased design and code reviews Actively involved in Requirement Analysis designing development and testing of the entire application Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Enhance and modify the presentation layer and GUI framework that are written using JSP and clientside validations done using JavaScript Worked on the Common UI layout for defining the Header Footer and Menu using JSF Facelets Implemented navigation using Spring MVC controllers configured controllers using Spring MVC annotations and configuration files Implemented spring framework BeanFactoryApplicationContext for bean initialization and configurations SpringAOP is used for logging auditing and security and transaction management to distinguish business logic from the crosscutting concerns Implemented the backend functionality of the modules using Singleton and Session Facade design patterns Configured Hibernate configuration files to persist the data to the Oracle 10g Database Configured Hibernate objects as Spring Beans in Spring Configuration File Involved in development of POJO classes and writing Hibernate Query Language HQL queries Asynchronous messaging is done using JMS and created Queue for point to point messaging Developed REST web services using Spring MVC to extract client related data from database and used SOAP UI for testing these RESTFUL API web services Implemented Service Oriented Architecture SOA by developing and consuming RESTful web services based on JAXRS and Jersey Designed and implemented Java Classes to use JAXP parser to create Java objects to be able to modify the data received in the response Implemented Core Java Concepts such as MultiThreading Exception Handling and Collections when needed Handled MultiThreading part in the backend component one thread will be running for each other Worked with DB2 and wrote SQL Queries Stored Procedures triggers views and integrated SQL Queries into DAO Deployed the application on Tomcat Application Server Used Log4j logging mechanism for logging Used SVN for versioning and concurrent access to the project files Resolving spring framework artefacts and code build deployment with Maven Used JIRA for defect and issue tracking Used Jenkins for continuous integrationcontinuous deployment Automated regression test cases using Selenium Coordinated with testing team for timely release of product Environment Java J2EE Spring MVC 30 Hibernate 30 HTML CSS JavaScript React JS JMS SOAP Axis2 Maven Jenkins DB2 Selenium Log4j SVN JIRA Tomcat 60 Java Developer Soft Tech Consulting Inc Chantilly VA July 2012 to April 2014 Description See what employees say about what its like to work at Soft Tech Consulting Salaries reviews and more all posted by employees working at Soft Tech Responsibilities Participated in all phases of the project like design development testing enhancements and production support Used Rational Rose for the Use Case Diagrams Object Diagrams Class Diagrams and Sequence Diagrams to represent the detailed design phase Developed front end using JSP HTML CSS and clientside validations using JavaScript Implemented MVC architecture and developed form classes action classes for the entire application using Struts Framework Implemented Singleton Service Locator design patterns in MVC framework and developed command delegate model action script classes to interact with the backend Involved in writing the exception and validation classes using Struts validation rules Developed Enterprise Java Beans like Entity Beans Session Beans both Stateless and State Full Session beans Designed and developed reusable Java utility classes for the business logic functionality using services like JDBC and JNDI Deployed the application on WebLogic application server Monitored the error logs using Log4j and fixing the problems Designed database Tables View Indexs and create triggers for optimized data access Written JUnit test cases for unit testing of the application Written Ant scripts for building application artifacts Involved in Unit integration bug fixing acceptance testing with test cases Code reviews Provided troubleshooting and error handling support in multiple projects Environment Java 6 J2EE JSP HTML CSS JavaScript Struts 20 EJB 21 JDBC JNDI JUnit Log4j WebLogic 70 Rational Rose Java Developer Intercontinental Exchange Atlanta GA September 2010 to June 2012 Description Intercontinental Exchange is an American company that owns exchanges for financial and commodity markets and operates 12 regulated exchanges and marketplaces Responsibilities Involved in requirement analysis design and development of the application Created the design using class diagrams and sequence diagrams Implemented MVC architecture using JSP Servlets and EJB Developed web Components using JSP HTML CSS and JavaScript Extensively used XML documents with XSLT and CSS to translate the content into HTML to present to GUI Developed EJB middleware components to implement business objects and business logic of the system Used JDBC to establish connectivity to the database for performing the database operations Created and modified Stored Procedures complex SQL Commands for the application using PLSQL Deployed the application on WebSphere application server Involved in enhancements of the system and worked on fixing bugs and supporting the entire system Environment Java 5 J2EE JSP HTML CSS JavaScript XSLT Servlets EJB JDBC WebSphere 70 Oracle 10g PLSQL Education Bachelors Skills Eclipse Ejb J2ee Java Hibernate Intellij idea Spring Jax Jaxrpc Jaxws Jboss jquery Servlets Struts Angularjs Bootstrap Html5 Mvc Soap Git Additional Information TECHNICAL SKILLS Languages Java 678 HTML JavaScript PHP Apache Camel Visual Basic Web Technologies HTML5 XHTML DHTML CSS3 JavaScript PHPAJAX jQuery Angular 4 AngularJS Bootstrap JavaJ2EE Technologies J2EE Servlets JDBC Struts EJB Hibernate Spring MVC Spring Boot Spring Security SOAP REST ApplicationWeb Servers IBM WebSphere Apache Tomcat WebLogic JBoss GlassFish Relational Databases Oracle 9i10g11g DB2 SQL Server MySQL Mongo DB Cassandra Cloud Environments AWS Openshift Pivotal Cloud Foundry IDE Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STSRed Hat Development Studio Operating system Windows Linux Unix Methodologies Agile Waterfall Kanban TDD TestDrivenDevelopment Scrum Build Tools Ant Maven Gradle Log4J Hudson Jenkins Version Control CVS SVN GIT JIRA Subversion Web Services SOAP RESTful JAXWS JAXRPC JAXRS JAXP JAXB",
    "entities": [
        "Stored Procedures Tables Views Sequences Cursors Packages and Triggers",
        "Amazon IAM",
        "Maven Used",
        "Bootstrap JavaJ2EE Technologies J2EE Servlets",
        "Spring Framework",
        "Used Hibernate",
        "Agile Waterfall",
        "User Interactive UI",
        "GUI",
        "Developed the Application Module",
        "Menu",
        "IDEA Spring Tool Suite STSRed Hat Development Studio",
        "Boot Spring Security SOAP",
        "Created XML",
        "JMS",
        "jMock",
        "JSON",
        "Tomcat Application Server Used",
        "Integration of Amazon Web Services AWS",
        "IBM",
        "USAA",
        "the FHL Banks",
        "Controller Advice",
        "XML",
        "SOAP",
        "JavaScript Implemented",
        "PreAuthentication Having",
        "Atlanta",
        "OAuth",
        "Filters Experienced",
        "Automation",
        "JUnit",
        "Struts Framework Implemented Singleton Service Locator",
        "WebLogic",
        "Description Equifax Inc",
        "Automated",
        "Springs",
        "Bootstrap Enhance",
        "JavaJ2EE",
        "Predicates Functional Interfaces and Lambda Expressions Method References",
        "TX",
        "NodeJS Express",
        "GUI Developed",
        "Equifax",
        "WebSphere",
        "SLF4J Work Experience SrFull Stack Developer Cross River Bank",
        "Developed",
        "DAO",
        "Maven Jenkins DB2 Selenium Log4j",
        "LDAP",
        "Middleware",
        "Hibernate Database",
        "Spring MVC",
        "Hibernate Query Language HQL HSQL Named Queries Criteria",
        "TDD Test Driven Development",
        "Responsibilities Involved",
        "JAXWS JAXRPC JAXRS JAXP",
        "RESTFUL API",
        "DTD",
        "Monitored",
        "TestDriven Development TDD Interacted with Business Analysts",
        "REST API",
        "HTML5",
        "Spring Security",
        "Stored Procedures Tables Views Sequences Cursors Packages",
        "San Antonio",
        "DTO Business Delegate Faade",
        "DOM Responsible",
        "JSP",
        "Used Rational Rose for the Use Case Diagrams Object Diagrams Class Diagrams",
        "Stream Lambda",
        "Hibernate Transaction Management and",
        "Collections Involved",
        "SQL Queries",
        "JavaScript PHP Apache",
        "WebLogic 70 Rational",
        "Hibernate Extensively",
        "SQLbased",
        "Created Docker",
        "Log Database",
        "Oracle Database",
        "MVC",
        "Agile",
        "EJB",
        "GIT",
        "Soft Tech Consulting Salaries",
        "Nodejs HTML5 CSS3",
        "Implemented Swagger Configuration",
        "Java Spring Boot for REST API",
        "JSON Integrated",
        "Exception Handler",
        "API",
        "US",
        "QA",
        "POJO",
        "IA",
        "Created",
        "SrFull Stack Developer Cross River Bank",
        "SrFull Stack Developer SrFull Stack",
        "IAM Experience",
        "AWS",
        "Oracle",
        "Angular40 Framework",
        "Singleton",
        "Postgres",
        "SQL Commands",
        "SQL",
        "Behaviour Driven",
        "Log4j",
        "Execute",
        "Insurance and Communication Experience",
        "Kubernetes",
        "Git Version",
        "Mvc Soap Git Additional Information TECHNICAL SKILLS Languages",
        "JAXRS",
        "MultiThreading Developed Interactive",
        "Developed Enterprise Java Beans like",
        "CICD",
        "XML XSLT",
        "Description Intercontinental Exchange",
        "Basic Authentication",
        "Hibernate Query Language HQL",
        "Fixed",
        "CMP",
        "MultiThreading Exception Handling and Collections",
        "Present Description Cross River Bank",
        "Leveraged AWS",
        "Maven",
        "EJB Developed web Components",
        "Scripted Ansible",
        "XSLT",
        "JBOSS Nginx",
        "Oracle Field Service Cloud",
        "ANT",
        "UI",
        "CVS Experience",
        "JBOSS",
        "Selenium",
        "JSP Servlets",
        "QA UAT and Production Environment",
        "Kubernetes Used Elastic",
        "Sami",
        "SVN",
        "CSS",
        "JavaScript Developed Single Page Application",
        "Hibernate 30",
        "Des Moines",
        "REST",
        "NetBeans",
        "PHP",
        "NoSQL",
        "JSF JSTL",
        "Software Development Life Cycle",
        "WebLogic Knowledge",
        "ELKDocker Maven Jenkins",
        "Integration",
        "Microservice",
        "Openshiftplatform"
    ],
    "experience": "Experience in application development using Software development methodologies such as Agile Waterfall development and TDD Test Driven Development environments Expertise in Core Java concepts of JavaJ2EE like JSP Servlets JSF JSTL EJB transaction implementation CMP BMP MessageDriven Beans JMS Struts Spring Swing Hibernate Java Beans JDBC XML Web Services JNDI MultiThreading Data Structures etc Experience in User Interactive UI Web Pages and visually appealing User Interface usingHTML5 CSS3 jQuery Ajax JavaScript and PHP Extensively worked on XML related technologies like XML XSLT XPATH XSL DTD and DOM Responsible for creating a microservice system using Java 8 with Spring Boot RESTful API SOAP API and experience with Java 8 features like Stream Lambda expressions and Filters Experienced in Middleware persistence frameworks like HibernateJPA for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria and Projections Experience in database modelling design and development of PLSQL stored procedures packages in relational databases like Oracle 9i10 g 11 g SQL Server 20052008 and MySQL Experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDBCassandra and Couch DB Experienced in implementing Service Oriented Architecture and Web Services such as SOAP using WDSL JAXWS and REST using Spring Boot Apache CFX JAXRS and Jersey Frameworks Hands on experience in configuration and deployment of multitier applications using servers like Apache Tomcat WebSphere JBoss and WebLogic Knowledge on Spring Framework like Spring Core Spring DAO Spring IoC Spring MVC Spring ORM Spring AOP Spring Boot and Spring Web flow Involved and developed various phases of security implementation using Spring Security system against all types of authentications like LDAP authentication Basic authentication and PreAuthentication Having knowledge on JMS MQs like Kafka Rabbit MQ and Active MQ Hands on experience with version control tools like SVN GIT and CVS Experience in using Jenkins for CICD process and creating Docker images and containers Experience in using Automation tools like Selenium and Cucumber Hands on experience with build tools like ANT Maven and logging tools like Log4j and SLF4J Work Experience SrFull Stack Developer Cross River Bank Fort Lee NJ March 2018 to Present Description Cross River Bank is a financial services organization that combines traditional banking services and the offerings of a technology company Cross River combines a comprehensive suite of products into a bankingasaplatform solution encompassing lending payments and risk management Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Extensively made use ofJava8features like Predicates Functional Interfaces and Lambda Expressions Method References and Stream API for bulk data operations on Collections Involved in developing UI pages using Angular 40 HTML5 CSS3 and Twitter Bootstrap Designed and developed Microservice using synchronous protocols like HTTP REST JAXRS and SOAP JAXB Implemented Spring Framework including Spring CoreIOC Spring AOP Spring ORM and Spring Batch and implemented the authentication authorization and accesscontrol features by making use of Spring Security Used Spring Boot to develop and deploy both RESTful web services and MVC applications Written shell scripts to copy output files to a different location from Spring Batch Used Spring Boot to develop and deploy RESTful web services SOAP and MVC applications Implemented Swagger Configuration in Java Spring Boot for auto generating swagger JSON files for REST API calls Implemented exception handling in Java Spring Boot for REST API by making use of Exception Handler and Controller Advice annotations Used Apache Camel for processing different files creating routes using router for communication and integration with other microservice Used Openshiftplatform to deploy applications on cloud Scripted Ansible playbook to deploy applications inOpenshift clusters Effectively developed and deployed Spring Boot applications for REST services on Openshiftplatform and implemented platform as service technologies Added security layer for web services using Oauth Sami integration SHA256 authentication and Basic Authentication Used Apache Kafka with Zoo Keeper for achieving synchronous and asynchronous messaging techniques Used ActiveMQ for asynchronous messaging techniques Developed the Application Module using several design patterns like Singleton Factory DAO DTO Business Delegate Faade prototype and Composite View Integrated with Oracle Field Service Cloud for outbound messages through SMS Used Hibernate objectrelationalmapping ORM technique for mapping data from MVC model to MySQL Relational data model with and SQLbased schema Developed session entity beans and message driven beans mapping of Java objects to database tables using Hibernate Extensively used Hibernate Transaction Management and Hibernate Batch Transactions Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Used PostgreSQL as customer database then migrated to MongoDB used both database in Spring Boot Created Docker images and ran the Docker containers in various environments Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes Used Elastic search Fluentdand Kibana as Log Database for microservice applications Implemented GUIDGlobal Unique Identifier for unique identification of logs Worked with Prometheus as system monitoring tool and Grafana as graphical dashboard Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Used Log4j for logging errors and GIT for version control Deployed the application on JBOSS application server Developed unit and integration tests for existing microservice using Junit andMockito Integrated SOAPUI in Jenkins with Mavenenvironments for unit and Integration testing Developed Cucumber tests for Behaviour Driven integration testing Fixed defects identified during QA UAT and Production Environment Java 8 J2EE Spring Boot AJAX jQuery Angular4 Microservice Openshift JBOSS Hibernate Apache Camel OAuth Basic Authentication Swagger RESTful web services SOAP web service PostgreSQL ELKDocker Maven Jenkins ActiveMQ Kafka Shell Scripts GitGitLab Googs JUnit Mockito CucumberLog4j Full Stack Java Developer USAA San Antonio TX June 2016 to February 2018 Description USAA a diversified financial services group of companies is among the leading providers of financial planning insurance investments and banking products to members of the US military and their families CIM is a webservice based application which deals with creating user credentials with specific password rules that are following the USAA policys and managing them in LDAP directory and Postgres database for Online USAA customers It performs operations like modifyingresetting user password and username in LDAP directory Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Extensively made use of Java8 features like Predicates Functional Interfaces and Lambda Expressions Method References and Stream API for bulk data operations on Collections Involved in developing UI pages using Angular 40 HTML5 CSS3 and Twitter Bootstrap Developing web pages using Angular40 Framework and worked with various Angular JS directives and services and Filters to build the Applications Designed and developed Microservice using synchronous protocols like HTTP REST JAXRS Implemented Spring Framework including Spring CoreIOC Spring AOP Spring ORM and Spring Batch and implemented the authentication authorization and accesscontrol features by making use of Spring Security Used Spring Boot to develop and deploy both RESTful web services and MVC applications Written Shell scripts to copy output files to a different location from Spring Batch Implemented Swagger Configuration in Java Spring Boot for auto generating swagger JSON files for REST API calls Implemented exception handling in Java Spring Boot for REST API by making use of Exception Handler and Controller Advice annotations Used Pivotal Cloud Foundry to deploy applications on cloud Effectively developed and deployed Spring Boot applications for REST services on Pivotal Cloud Foundry and implemented platform as service technologies Added security layer for web services using OAuth and Sami integration Developed the Application Module using several design patterns like Singleton Factory DAO DTO Business Delegate Faade prototype and Composite View Implemented RESTful Web services for transmission of data in JSON format Used Hibernate objectrelationalmapping ORM technique for mapping data from MVC model to MySQL Relational data model with an SQLbased schema Developed session entity beans and message driven beans mapping of Java objects to database tables using Hibernate Extensively used Hibernate Transaction Management and Hibernate Batch Transactions Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Preparing PostgreSQL queries for reporting and analysing production data for various applications Created Docker images and ran the Docker containers in various environments Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Used Log4j for logging errors and GIT for version control Deployed the application on JBOSS Nginx application server Developed unit and integration tests for existing microservice using JUnit Mockito environments for development and QA teams Fixed defects identified during QA UAT and Production Environment Java 8 J2EE Spring Boot AJAX jQuery Angular4 Microservice Pivotal Cloud Foundry JBOSS JBPM Netflix Eureka Hibernate Spring Batch OAuth Swagger RESTful web services MongoDB PostgreSQL Docker Maven Jenkins Kafka Shell Scripts Git GitHub JUnit MockitoLog4j Federal Home Loan Bank Des Moines IA August 2015 to May 2016 Des Moines IA Aug 2015 to May 2016 JavaJ2EE Description A primary benefit FHLB application in access to low cost secured borrowings known as advances which are funded by the FHL Banks in the capital markets from the issuance of discount notes or term debt collectively known as consolidated obligations COs Responsibilities Involved in requirement analysis design development testing of application using Agile methodology Used AWS Amazon Web Services as a cloud platform to deploy the application Leveraged AWS cloud services such as EC2 autoscaling and VPC to build secure highly scalable and flexible systems that handled expected and unexpected load bursts Used Amazon IAM to grant finegrained access to AWS resources to users Managed roles and permissions of users to AWS account through IAM Experience in Integration of Amazon Web Services AWS with other applications infrastructure Utilized S3 buckets and Glacier for file storage and backup on AWS cloud Developed various helper classes necessary using MultiThreading Developed Interactive web pages using AngularJS HTML5 CSS3 and JavaScript Developed Single Page Application SPA using AngularJS Framework and injected generic services using Angular2 Used NodeJS Express to create API which can provide or consume JSON Integrated the IoC container of Spring Framework to handle the creation of beans dependency injection and transaction management Used Hibernate ORM to integrate with business application with Oracle Database where Hibernate template is used to implement business logic Created XML configuration file for Hibernate Database connectivity Consumed Web Services by implementing Springs REST support for development of RESTful Web services Created Shell script to deploy resource bundles on different environments Worked with Git Version control system to track various aspects of the project Used Maven as build tool on Java projects for the development of build artefacts on the source code Used Log4j logging framework to write Log messages with various levels for logging across the application Execute finished output and supporting documentation for banking requirements Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Developed test cases using JUnit and jMock for unit testing as well as integration testing as part of TestDriven Development TDD Interacted with Business Analysts to come up with better implementation designs for the application Provided production support for the application Involved in testing debugging bugs fixing and documentation of the system Environment Java 7 J2EE Spring MVC 30 Hibernate 30 JSP AngularJS Nodejs HTML5 CSS3 JavaScript AWSVPC EC2 IAM Route53 Lambda ELB S3 RESTful web services Rabbit MQ ESB Shell Scripts Git Maven Log4j Cassandra Oracle 11 g Docker JUnit jMock Java Developer Equifax Atlanta GA May 2014 to July 2015 Description Equifax Inc is a consumer credit reporting agency Equifax collects and aggregates information on over 800 million individual consumers and more than 88 million businesses worldwide Responsibilities Worked on Agile methodology including teambased design and code reviews Actively involved in Requirement Analysis designing development and testing of the entire application Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Enhance and modify the presentation layer and GUI framework that are written using JSP and clientside validations done using JavaScript Worked on the Common UI layout for defining the Header Footer and Menu using JSF Facelets Implemented navigation using Spring MVC controllers configured controllers using Spring MVC annotations and configuration files Implemented spring framework BeanFactoryApplicationContext for bean initialization and configurations SpringAOP is used for logging auditing and security and transaction management to distinguish business logic from the crosscutting concerns Implemented the backend functionality of the modules using Singleton and Session Facade design patterns Configured Hibernate configuration files to persist the data to the Oracle 10 g Database Configured Hibernate objects as Spring Beans in Spring Configuration File Involved in development of POJO classes and writing Hibernate Query Language HQL queries Asynchronous messaging is done using JMS and created Queue for point to point messaging Developed REST web services using Spring MVC to extract client related data from database and used SOAP UI for testing these RESTFUL API web services Implemented Service Oriented Architecture SOA by developing and consuming RESTful web services based on JAXRS and Jersey Designed and implemented Java Classes to use JAXP parser to create Java objects to be able to modify the data received in the response Implemented Core Java Concepts such as MultiThreading Exception Handling and Collections when needed Handled MultiThreading part in the backend component one thread will be running for each other Worked with DB2 and wrote SQL Queries Stored Procedures triggers views and integrated SQL Queries into DAO Deployed the application on Tomcat Application Server Used Log4j logging mechanism for logging Used SVN for versioning and concurrent access to the project files Resolving spring framework artefacts and code build deployment with Maven Used JIRA for defect and issue tracking Used Jenkins for continuous integrationcontinuous deployment Automated regression test cases using Selenium Coordinated with testing team for timely release of product Environment Java J2EE Spring MVC 30 Hibernate 30 HTML CSS JavaScript React JS JMS SOAP Axis2 Maven Jenkins DB2 Selenium Log4j SVN JIRA Tomcat 60 Java Developer Soft Tech Consulting Inc Chantilly VA July 2012 to April 2014 Description See what employees say about what its like to work at Soft Tech Consulting Salaries reviews and more all posted by employees working at Soft Tech Responsibilities Participated in all phases of the project like design development testing enhancements and production support Used Rational Rose for the Use Case Diagrams Object Diagrams Class Diagrams and Sequence Diagrams to represent the detailed design phase Developed front end using JSP HTML CSS and clientside validations using JavaScript Implemented MVC architecture and developed form classes action classes for the entire application using Struts Framework Implemented Singleton Service Locator design patterns in MVC framework and developed command delegate model action script classes to interact with the backend Involved in writing the exception and validation classes using Struts validation rules Developed Enterprise Java Beans like Entity Beans Session Beans both Stateless and State Full Session beans Designed and developed reusable Java utility classes for the business logic functionality using services like JDBC and JNDI Deployed the application on WebLogic application server Monitored the error logs using Log4j and fixing the problems Designed database Tables View Indexs and create triggers for optimized data access Written JUnit test cases for unit testing of the application Written Ant scripts for building application artifacts Involved in Unit integration bug fixing acceptance testing with test cases Code reviews Provided troubleshooting and error handling support in multiple projects Environment Java 6 J2EE JSP HTML CSS JavaScript Struts 20 EJB 21 JDBC JNDI JUnit Log4j WebLogic 70 Rational Rose Java Developer Intercontinental Exchange Atlanta GA September 2010 to June 2012 Description Intercontinental Exchange is an American company that owns exchanges for financial and commodity markets and operates 12 regulated exchanges and marketplaces Responsibilities Involved in requirement analysis design and development of the application Created the design using class diagrams and sequence diagrams Implemented MVC architecture using JSP Servlets and EJB Developed web Components using JSP HTML CSS and JavaScript Extensively used XML documents with XSLT and CSS to translate the content into HTML to present to GUI Developed EJB middleware components to implement business objects and business logic of the system Used JDBC to establish connectivity to the database for performing the database operations Created and modified Stored Procedures complex SQL Commands for the application using PLSQL Deployed the application on WebSphere application server Involved in enhancements of the system and worked on fixing bugs and supporting the entire system Environment Java 5 J2EE JSP HTML CSS JavaScript XSLT Servlets EJB JDBC WebSphere 70 Oracle 10 g PLSQL Education Bachelors Skills Eclipse Ejb J2ee Java Hibernate Intellij idea Spring Jax Jaxrpc Jaxws Jboss jquery Servlets Struts Angularjs Bootstrap Html5 Mvc Soap Git Additional Information TECHNICAL SKILLS Languages Java 678 HTML JavaScript PHP Apache Camel Visual Basic Web Technologies HTML5 XHTML DHTML CSS3 JavaScript PHPAJAX jQuery Angular 4 AngularJS Bootstrap JavaJ2EE Technologies J2EE Servlets JDBC Struts EJB Hibernate Spring MVC Spring Boot Spring Security SOAP REST ApplicationWeb Servers IBM WebSphere Apache Tomcat WebLogic JBoss GlassFish Relational Databases Oracle 9i10g11 g DB2 SQL Server MySQL Mongo DB Cassandra Cloud Environments AWS Openshift Pivotal Cloud Foundry IDE Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STSRed Hat Development Studio Operating system Windows Linux Unix Methodologies Agile Waterfall Kanban TDD TestDrivenDevelopment Scrum Build Tools Ant Maven Gradle Log4J Hudson Jenkins Version Control CVS SVN GIT JIRA Subversion Web Services SOAP RESTful JAXWS JAXRPC JAXRS JAXP JAXB",
    "extracted_keywords": [
        "SrFull",
        "Stack",
        "Developer",
        "SrFull",
        "Stack",
        "span",
        "lDeveloperspan",
        "SrFull",
        "Stack",
        "Developer",
        "Cross",
        "River",
        "Bank",
        "8years",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "analysis",
        "design",
        "implementation",
        "testing",
        "maintenance",
        "MultiTier",
        "enterprise",
        "applications",
        "JavaJ2EE",
        "technologies",
        "Insurance",
        "Communication",
        "Experience",
        "application",
        "development",
        "Software",
        "development",
        "methodologies",
        "Agile",
        "Waterfall",
        "development",
        "TDD",
        "Test",
        "Driven",
        "Development",
        "Expertise",
        "Core",
        "Java",
        "concepts",
        "JavaJ2EE",
        "JSP",
        "Servlets",
        "JSF",
        "JSTL",
        "EJB",
        "transaction",
        "implementation",
        "CMP",
        "BMP",
        "MessageDriven",
        "JMS",
        "Struts",
        "Spring",
        "Swing",
        "Hibernate",
        "Java",
        "Beans",
        "JDBC",
        "XML",
        "Web",
        "Services",
        "JNDI",
        "MultiThreading",
        "Data",
        "Structures",
        "Experience",
        "User",
        "Interactive",
        "UI",
        "Web",
        "Pages",
        "User",
        "Interface",
        "usingHTML5",
        "CSS3",
        "jQuery",
        "Ajax",
        "JavaScript",
        "PHP",
        "XML",
        "technologies",
        "XML",
        "XSLT",
        "XPATH",
        "XSL",
        "DTD",
        "DOM",
        "Responsible",
        "microservice",
        "system",
        "Java",
        "Spring",
        "Boot",
        "API",
        "SOAP",
        "API",
        "experience",
        "Java",
        "features",
        "Stream",
        "Lambda",
        "expressions",
        "Filters",
        "Middleware",
        "persistence",
        "frameworks",
        "HibernateJPA",
        "mapping",
        "Java",
        "classes",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "HSQL",
        "Queries",
        "Criteria",
        "Projections",
        "Experience",
        "database",
        "design",
        "development",
        "procedures",
        "packages",
        "databases",
        "Oracle",
        "9i10",
        "g",
        "g",
        "SQL",
        "Server",
        "MySQL",
        "Experience",
        "MongoDB",
        "development",
        "reports",
        "schema",
        "design",
        "map",
        "functions",
        "migrations",
        "SQL",
        "databases",
        "databases",
        "MongoDBCassandra",
        "Couch",
        "DB",
        "Service",
        "Oriented",
        "Architecture",
        "Web",
        "Services",
        "SOAP",
        "JAXWS",
        "REST",
        "Spring",
        "Boot",
        "Apache",
        "CFX",
        "JAXRS",
        "Jersey",
        "Frameworks",
        "Hands",
        "experience",
        "configuration",
        "deployment",
        "applications",
        "servers",
        "Apache",
        "Tomcat",
        "WebSphere",
        "JBoss",
        "WebLogic",
        "Knowledge",
        "Spring",
        "Framework",
        "Spring",
        "Core",
        "Spring",
        "DAO",
        "Spring",
        "IoC",
        "Spring",
        "MVC",
        "Spring",
        "ORM",
        "Spring",
        "AOP",
        "Spring",
        "Boot",
        "Spring",
        "Web",
        "flow",
        "phases",
        "security",
        "implementation",
        "Spring",
        "Security",
        "system",
        "types",
        "authentications",
        "LDAP",
        "authentication",
        "authentication",
        "PreAuthentication",
        "knowledge",
        "JMS",
        "MQs",
        "Kafka",
        "Rabbit",
        "MQ",
        "MQ",
        "Hands",
        "experience",
        "version",
        "control",
        "tools",
        "SVN",
        "GIT",
        "CVS",
        "Experience",
        "Jenkins",
        "CICD",
        "process",
        "Docker",
        "images",
        "containers",
        "Experience",
        "Automation",
        "tools",
        "Selenium",
        "Cucumber",
        "Hands",
        "experience",
        "build",
        "tools",
        "ANT",
        "Maven",
        "tools",
        "Log4j",
        "SLF4J",
        "Work",
        "Experience",
        "SrFull",
        "Stack",
        "Developer",
        "Cross",
        "River",
        "Bank",
        "Fort",
        "Lee",
        "NJ",
        "March",
        "Present",
        "Description",
        "Cross",
        "River",
        "Bank",
        "services",
        "organization",
        "banking",
        "services",
        "offerings",
        "technology",
        "company",
        "Cross",
        "River",
        "suite",
        "products",
        "bankingasaplatform",
        "solution",
        "lending",
        "payments",
        "risk",
        "management",
        "Responsibilities",
        "methodology",
        "SCRUM",
        "meetings",
        "sprint",
        "planning",
        "showcases",
        "JIRA",
        "tracking",
        "tool",
        "sprints",
        "use",
        "ofJava8features",
        "Predicates",
        "Functional",
        "Interfaces",
        "Lambda",
        "Expressions",
        "Method",
        "References",
        "Stream",
        "API",
        "data",
        "operations",
        "Collections",
        "UI",
        "pages",
        "Angular",
        "HTML5",
        "CSS3",
        "Twitter",
        "Bootstrap",
        "Microservice",
        "protocols",
        "HTTP",
        "REST",
        "JAXRS",
        "SOAP",
        "JAXB",
        "Spring",
        "Framework",
        "Spring",
        "CoreIOC",
        "Spring",
        "AOP",
        "Spring",
        "ORM",
        "Spring",
        "Batch",
        "authentication",
        "authorization",
        "features",
        "use",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "web",
        "services",
        "MVC",
        "applications",
        "shell",
        "scripts",
        "output",
        "files",
        "location",
        "Spring",
        "Batch",
        "Spring",
        "Boot",
        "web",
        "services",
        "SOAP",
        "MVC",
        "applications",
        "Swagger",
        "Configuration",
        "Java",
        "Spring",
        "Boot",
        "auto",
        "generating",
        "swagger",
        "files",
        "REST",
        "API",
        "exception",
        "handling",
        "Java",
        "Spring",
        "Boot",
        "REST",
        "API",
        "use",
        "Exception",
        "Handler",
        "Controller",
        "Advice",
        "annotations",
        "Apache",
        "Camel",
        "files",
        "routes",
        "router",
        "communication",
        "integration",
        "microservice",
        "Openshiftplatform",
        "applications",
        "cloud",
        "Scripted",
        "Ansible",
        "playbook",
        "applications",
        "inOpenshift",
        "clusters",
        "Spring",
        "Boot",
        "applications",
        "REST",
        "services",
        "Openshiftplatform",
        "platform",
        "service",
        "technologies",
        "security",
        "layer",
        "web",
        "services",
        "Oauth",
        "Sami",
        "integration",
        "SHA256",
        "authentication",
        "Basic",
        "Authentication",
        "Apache",
        "Kafka",
        "Zoo",
        "Keeper",
        "techniques",
        "ActiveMQ",
        "messaging",
        "techniques",
        "Application",
        "Module",
        "design",
        "patterns",
        "Singleton",
        "Factory",
        "DAO",
        "DTO",
        "Business",
        "Delegate",
        "Faade",
        "prototype",
        "Composite",
        "View",
        "Oracle",
        "Field",
        "Service",
        "Cloud",
        "outbound",
        "messages",
        "SMS",
        "Hibernate",
        "ORM",
        "technique",
        "mapping",
        "data",
        "MVC",
        "model",
        "MySQL",
        "data",
        "model",
        "schema",
        "session",
        "entity",
        "beans",
        "message",
        "beans",
        "mapping",
        "Java",
        "database",
        "tables",
        "Hibernate",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "database",
        "Procedures",
        "Tables",
        "Views",
        "Sequences",
        "Cursors",
        "Packages",
        "Triggers",
        "PostgreSQL",
        "customer",
        "database",
        "database",
        "Spring",
        "Boot",
        "Created",
        "Docker",
        "images",
        "Docker",
        "containers",
        "environments",
        "implementation",
        "experience",
        "installation",
        "configuration",
        "Kubernetes",
        "deployments",
        "Kubernetes",
        "search",
        "Fluentdand",
        "Kibana",
        "Log",
        "Database",
        "microservice",
        "applications",
        "GUIDGlobal",
        "Unique",
        "Identifier",
        "identification",
        "logs",
        "Prometheus",
        "system",
        "monitoring",
        "tool",
        "Grafana",
        "dashboard",
        "Developed",
        "Maven",
        "scripts",
        "builds",
        "Maven",
        "integration",
        "servers",
        "Jenkins",
        "Log4j",
        "errors",
        "GIT",
        "version",
        "control",
        "application",
        "JBOSS",
        "application",
        "server",
        "unit",
        "integration",
        "tests",
        "microservice",
        "Junit",
        "andMockito",
        "Integrated",
        "SOAPUI",
        "Jenkins",
        "Mavenenvironments",
        "unit",
        "Integration",
        "testing",
        "Developed",
        "Cucumber",
        "tests",
        "Behaviour",
        "integration",
        "testing",
        "defects",
        "QA",
        "UAT",
        "Production",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Boot",
        "AJAX",
        "jQuery",
        "Angular4",
        "Microservice",
        "Openshift",
        "JBOSS",
        "Hibernate",
        "Apache",
        "Camel",
        "OAuth",
        "Basic",
        "Authentication",
        "Swagger",
        "RESTful",
        "web",
        "services",
        "SOAP",
        "web",
        "service",
        "PostgreSQL",
        "ELKDocker",
        "Maven",
        "Jenkins",
        "ActiveMQ",
        "Kafka",
        "Shell",
        "Scripts",
        "GitGitLab",
        "Googs",
        "JUnit",
        "Mockito",
        "CucumberLog4j",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "USAA",
        "San",
        "Antonio",
        "TX",
        "June",
        "February",
        "Description",
        "USAA",
        "services",
        "group",
        "companies",
        "providers",
        "planning",
        "insurance",
        "investments",
        "banking",
        "products",
        "members",
        "US",
        "military",
        "families",
        "CIM",
        "webservice",
        "application",
        "user",
        "credentials",
        "password",
        "rules",
        "USAA",
        "policys",
        "LDAP",
        "directory",
        "Postgres",
        "database",
        "Online",
        "USAA",
        "customers",
        "operations",
        "user",
        "password",
        "LDAP",
        "directory",
        "Responsibilities",
        "methodology",
        "SCRUM",
        "meetings",
        "sprint",
        "planning",
        "showcases",
        "JIRA",
        "tracking",
        "tool",
        "sprints",
        "use",
        "Java8",
        "features",
        "Predicates",
        "Functional",
        "Interfaces",
        "Lambda",
        "Expressions",
        "Method",
        "References",
        "Stream",
        "API",
        "data",
        "operations",
        "Collections",
        "UI",
        "pages",
        "Angular",
        "HTML5",
        "CSS3",
        "Twitter",
        "Bootstrap",
        "web",
        "pages",
        "Angular40",
        "Framework",
        "JS",
        "directives",
        "services",
        "Filters",
        "Applications",
        "Microservice",
        "protocols",
        "HTTP",
        "REST",
        "JAXRS",
        "Spring",
        "Framework",
        "Spring",
        "CoreIOC",
        "Spring",
        "AOP",
        "Spring",
        "ORM",
        "Spring",
        "Batch",
        "authentication",
        "authorization",
        "features",
        "use",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "web",
        "services",
        "MVC",
        "applications",
        "Written",
        "Shell",
        "scripts",
        "output",
        "files",
        "location",
        "Spring",
        "Batch",
        "Swagger",
        "Configuration",
        "Java",
        "Spring",
        "Boot",
        "auto",
        "generating",
        "swagger",
        "files",
        "REST",
        "API",
        "exception",
        "handling",
        "Java",
        "Spring",
        "Boot",
        "REST",
        "API",
        "use",
        "Exception",
        "Handler",
        "Controller",
        "Advice",
        "annotations",
        "Cloud",
        "Foundry",
        "applications",
        "cloud",
        "Spring",
        "Boot",
        "applications",
        "REST",
        "services",
        "Cloud",
        "Foundry",
        "platform",
        "service",
        "technologies",
        "security",
        "layer",
        "web",
        "services",
        "OAuth",
        "Sami",
        "integration",
        "Application",
        "Module",
        "design",
        "patterns",
        "Singleton",
        "Factory",
        "DAO",
        "DTO",
        "Business",
        "Delegate",
        "Faade",
        "prototype",
        "Composite",
        "View",
        "Web",
        "services",
        "transmission",
        "data",
        "format",
        "Hibernate",
        "ORM",
        "technique",
        "mapping",
        "data",
        "MVC",
        "model",
        "MySQL",
        "data",
        "model",
        "schema",
        "session",
        "entity",
        "beans",
        "message",
        "beans",
        "mapping",
        "Java",
        "database",
        "tables",
        "Hibernate",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "database",
        "Procedures",
        "Tables",
        "Views",
        "Sequences",
        "Cursors",
        "Packages",
        "Triggers",
        "PostgreSQL",
        "production",
        "data",
        "applications",
        "Docker",
        "images",
        "Docker",
        "containers",
        "environments",
        "Developed",
        "Maven",
        "scripts",
        "builds",
        "Maven",
        "integration",
        "servers",
        "Jenkins",
        "Log4j",
        "errors",
        "GIT",
        "version",
        "control",
        "application",
        "JBOSS",
        "Nginx",
        "application",
        "server",
        "unit",
        "integration",
        "tests",
        "microservice",
        "JUnit",
        "Mockito",
        "environments",
        "development",
        "QA",
        "teams",
        "defects",
        "QA",
        "UAT",
        "Production",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Boot",
        "AJAX",
        "jQuery",
        "Angular4",
        "Microservice",
        "Pivotal",
        "Cloud",
        "Foundry",
        "JBOSS",
        "JBPM",
        "Netflix",
        "Eureka",
        "Hibernate",
        "Spring",
        "Batch",
        "OAuth",
        "Swagger",
        "RESTful",
        "web",
        "services",
        "MongoDB",
        "PostgreSQL",
        "Docker",
        "Maven",
        "Jenkins",
        "Kafka",
        "Shell",
        "Scripts",
        "Git",
        "GitHub",
        "JUnit",
        "MockitoLog4j",
        "Federal",
        "Home",
        "Loan",
        "Bank",
        "Des",
        "Moines",
        "IA",
        "August",
        "May",
        "Des",
        "Moines",
        "IA",
        "Aug",
        "May",
        "JavaJ2EE",
        "Description",
        "benefit",
        "FHLB",
        "application",
        "access",
        "cost",
        "borrowings",
        "advances",
        "FHL",
        "Banks",
        "capital",
        "markets",
        "issuance",
        "discount",
        "notes",
        "term",
        "debt",
        "obligations",
        "COs",
        "Responsibilities",
        "requirement",
        "analysis",
        "design",
        "development",
        "testing",
        "application",
        "methodology",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "platform",
        "application",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "autoscaling",
        "systems",
        "load",
        "bursts",
        "Amazon",
        "IAM",
        "access",
        "AWS",
        "resources",
        "users",
        "roles",
        "permissions",
        "users",
        "AWS",
        "IAM",
        "Experience",
        "Integration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "infrastructure",
        "S3",
        "buckets",
        "Glacier",
        "file",
        "storage",
        "backup",
        "AWS",
        "cloud",
        "helper",
        "classes",
        "MultiThreading",
        "Developed",
        "Interactive",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Developed",
        "Single",
        "Page",
        "Application",
        "SPA",
        "Framework",
        "services",
        "Angular2",
        "NodeJS",
        "Express",
        "API",
        "JSON",
        "Integrated",
        "IoC",
        "container",
        "Spring",
        "Framework",
        "creation",
        "beans",
        "dependency",
        "injection",
        "transaction",
        "management",
        "Hibernate",
        "ORM",
        "business",
        "application",
        "Oracle",
        "Database",
        "Hibernate",
        "template",
        "business",
        "logic",
        "Created",
        "XML",
        "configuration",
        "file",
        "Hibernate",
        "Database",
        "connectivity",
        "Consumed",
        "Web",
        "Services",
        "Springs",
        "REST",
        "support",
        "development",
        "Web",
        "services",
        "Shell",
        "script",
        "resource",
        "bundles",
        "environments",
        "Git",
        "Version",
        "control",
        "system",
        "aspects",
        "project",
        "Maven",
        "build",
        "tool",
        "Java",
        "projects",
        "development",
        "build",
        "artefacts",
        "source",
        "code",
        "Log4j",
        "logging",
        "framework",
        "Log",
        "messages",
        "levels",
        "application",
        "Execute",
        "output",
        "documentation",
        "banking",
        "requirements",
        "Docker",
        "deployment",
        "pipeline",
        "custom",
        "application",
        "images",
        "cloud",
        "Jenkins",
        "test",
        "cases",
        "JUnit",
        "jMock",
        "unit",
        "testing",
        "integration",
        "testing",
        "part",
        "TestDriven",
        "Development",
        "TDD",
        "Business",
        "Analysts",
        "implementation",
        "designs",
        "application",
        "production",
        "support",
        "application",
        "testing",
        "bugs",
        "fixing",
        "documentation",
        "system",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "MVC",
        "Hibernate",
        "JSP",
        "Nodejs",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AWSVPC",
        "EC2",
        "IAM",
        "Route53",
        "Lambda",
        "ELB",
        "S3",
        "RESTful",
        "web",
        "services",
        "Rabbit",
        "MQ",
        "ESB",
        "Shell",
        "Scripts",
        "Git",
        "Maven",
        "Log4j",
        "Cassandra",
        "Oracle",
        "g",
        "Docker",
        "JUnit",
        "jMock",
        "Java",
        "Developer",
        "Equifax",
        "Atlanta",
        "GA",
        "May",
        "July",
        "Description",
        "Equifax",
        "Inc",
        "consumer",
        "credit",
        "reporting",
        "agency",
        "Equifax",
        "information",
        "consumers",
        "businesses",
        "Responsibilities",
        "methodology",
        "design",
        "code",
        "reviews",
        "Requirement",
        "Analysis",
        "development",
        "testing",
        "application",
        "web",
        "interface",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AngularJS",
        "Bootstrap",
        "Enhance",
        "presentation",
        "layer",
        "GUI",
        "framework",
        "JSP",
        "validations",
        "JavaScript",
        "Worked",
        "Common",
        "UI",
        "layout",
        "Header",
        "Footer",
        "Menu",
        "JSF",
        "Facelets",
        "navigation",
        "Spring",
        "MVC",
        "controllers",
        "controllers",
        "Spring",
        "MVC",
        "annotations",
        "configuration",
        "files",
        "spring",
        "framework",
        "bean",
        "initialization",
        "configurations",
        "auditing",
        "security",
        "transaction",
        "management",
        "business",
        "logic",
        "concerns",
        "functionality",
        "modules",
        "Singleton",
        "Session",
        "Facade",
        "design",
        "patterns",
        "Hibernate",
        "configuration",
        "files",
        "data",
        "Oracle",
        "g",
        "Database",
        "Configured",
        "Hibernate",
        "Spring",
        "Beans",
        "Spring",
        "Configuration",
        "File",
        "development",
        "POJO",
        "classes",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "messaging",
        "JMS",
        "Queue",
        "point",
        "Developed",
        "REST",
        "web",
        "services",
        "Spring",
        "MVC",
        "client",
        "data",
        "database",
        "SOAP",
        "UI",
        "RESTFUL",
        "API",
        "web",
        "services",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "web",
        "services",
        "JAXRS",
        "Jersey",
        "Designed",
        "Java",
        "Classes",
        "JAXP",
        "parser",
        "Java",
        "objects",
        "data",
        "response",
        "Core",
        "Java",
        "Concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "MultiThreading",
        "part",
        "component",
        "thread",
        "DB2",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "views",
        "SQL",
        "Queries",
        "DAO",
        "application",
        "Tomcat",
        "Application",
        "Server",
        "Log4j",
        "logging",
        "mechanism",
        "SVN",
        "access",
        "project",
        "files",
        "spring",
        "framework",
        "artefacts",
        "code",
        "build",
        "deployment",
        "Maven",
        "JIRA",
        "defect",
        "Jenkins",
        "deployment",
        "regression",
        "test",
        "cases",
        "Selenium",
        "Coordinated",
        "testing",
        "team",
        "release",
        "product",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "MVC",
        "Hibernate",
        "HTML",
        "CSS",
        "JavaScript",
        "React",
        "JS",
        "JMS",
        "SOAP",
        "Axis2",
        "Maven",
        "Jenkins",
        "DB2",
        "Selenium",
        "Log4j",
        "SVN",
        "JIRA",
        "Tomcat",
        "Java",
        "Developer",
        "Soft",
        "Tech",
        "Consulting",
        "Inc",
        "Chantilly",
        "VA",
        "July",
        "April",
        "Description",
        "employees",
        "Soft",
        "Tech",
        "Consulting",
        "Salaries",
        "reviews",
        "employees",
        "Soft",
        "Tech",
        "Responsibilities",
        "phases",
        "project",
        "design",
        "development",
        "testing",
        "enhancements",
        "production",
        "support",
        "Rational",
        "Rose",
        "Use",
        "Case",
        "Diagrams",
        "Object",
        "Diagrams",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "design",
        "phase",
        "end",
        "JSP",
        "HTML",
        "CSS",
        "validations",
        "JavaScript",
        "MVC",
        "architecture",
        "form",
        "classes",
        "action",
        "classes",
        "application",
        "Struts",
        "Framework",
        "Singleton",
        "Service",
        "Locator",
        "design",
        "patterns",
        "MVC",
        "framework",
        "command",
        "delegate",
        "model",
        "action",
        "script",
        "classes",
        "backend",
        "exception",
        "validation",
        "classes",
        "Struts",
        "validation",
        "rules",
        "Developed",
        "Enterprise",
        "Java",
        "Beans",
        "Entity",
        "Beans",
        "Session",
        "Beans",
        "Stateless",
        "State",
        "Full",
        "Session",
        "beans",
        "Java",
        "utility",
        "classes",
        "business",
        "logic",
        "functionality",
        "services",
        "JDBC",
        "JNDI",
        "application",
        "WebLogic",
        "application",
        "server",
        "error",
        "logs",
        "Log4j",
        "problems",
        "database",
        "Tables",
        "View",
        "Indexs",
        "triggers",
        "data",
        "access",
        "Written",
        "JUnit",
        "test",
        "cases",
        "unit",
        "testing",
        "application",
        "Ant",
        "scripts",
        "application",
        "artifacts",
        "Unit",
        "integration",
        "bug",
        "acceptance",
        "testing",
        "test",
        "cases",
        "Code",
        "troubleshooting",
        "error",
        "handling",
        "support",
        "projects",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "Struts",
        "EJB",
        "JDBC",
        "JNDI",
        "JUnit",
        "Log4j",
        "WebLogic",
        "Rational",
        "Rose",
        "Java",
        "Developer",
        "Intercontinental",
        "Exchange",
        "Atlanta",
        "GA",
        "September",
        "June",
        "Description",
        "Intercontinental",
        "Exchange",
        "company",
        "exchanges",
        "commodity",
        "markets",
        "exchanges",
        "marketplaces",
        "Responsibilities",
        "requirement",
        "analysis",
        "design",
        "development",
        "application",
        "design",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "MVC",
        "architecture",
        "JSP",
        "Servlets",
        "EJB",
        "Developed",
        "web",
        "Components",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "documents",
        "XSLT",
        "CSS",
        "content",
        "HTML",
        "GUI",
        "Developed",
        "EJB",
        "middleware",
        "components",
        "business",
        "objects",
        "business",
        "logic",
        "system",
        "JDBC",
        "connectivity",
        "database",
        "database",
        "operations",
        "Stored",
        "Procedures",
        "SQL",
        "Commands",
        "application",
        "PLSQL",
        "application",
        "WebSphere",
        "application",
        "server",
        "enhancements",
        "system",
        "bugs",
        "system",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "XSLT",
        "Servlets",
        "EJB",
        "JDBC",
        "WebSphere",
        "Oracle",
        "g",
        "PLSQL",
        "Education",
        "Bachelors",
        "Skills",
        "Eclipse",
        "Ejb",
        "J2ee",
        "Java",
        "Hibernate",
        "Intellij",
        "idea",
        "Spring",
        "Jax",
        "Jaxrpc",
        "Jaxws",
        "Jboss",
        "jquery",
        "Servlets",
        "Struts",
        "Angularjs",
        "Bootstrap",
        "Html5",
        "Mvc",
        "Soap",
        "Git",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "Java",
        "HTML",
        "JavaScript",
        "PHP",
        "Apache",
        "Camel",
        "Visual",
        "Basic",
        "Web",
        "Technologies",
        "HTML5",
        "DHTML",
        "CSS3",
        "JavaScript",
        "PHPAJAX",
        "jQuery",
        "Angular",
        "Bootstrap",
        "JavaJ2EE",
        "Technologies",
        "J2EE",
        "Servlets",
        "JDBC",
        "Struts",
        "EJB",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "SOAP",
        "REST",
        "ApplicationWeb",
        "Servers",
        "IBM",
        "WebSphere",
        "Apache",
        "Tomcat",
        "WebLogic",
        "JBoss",
        "GlassFish",
        "Relational",
        "Databases",
        "Oracle",
        "9i10g11",
        "g",
        "DB2",
        "SQL",
        "Server",
        "MySQL",
        "Mongo",
        "DB",
        "Cassandra",
        "Cloud",
        "Environments",
        "AWS",
        "Openshift",
        "Cloud",
        "Foundry",
        "IDE",
        "Eclipse",
        "NetBeans",
        "IDEA",
        "Spring",
        "Tool",
        "Suite",
        "STSRed",
        "Hat",
        "Development",
        "Studio",
        "Operating",
        "system",
        "Windows",
        "Linux",
        "Unix",
        "Methodologies",
        "Agile",
        "Waterfall",
        "Kanban",
        "TDD",
        "TestDrivenDevelopment",
        "Scrum",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Gradle",
        "Log4J",
        "Hudson",
        "Jenkins",
        "Version",
        "Control",
        "CVS",
        "SVN",
        "GIT",
        "JIRA",
        "Subversion",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "JAXWS",
        "JAXRPC",
        "JAXRS",
        "JAXP",
        "JAXB"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:19:31.332893",
    "resume_data": "SrFull Stack Developer SrFull Stack span lDeveloperspan SrFull Stack Developer Cross River Bank Over 8years of experience involving all phases of Software Development Life Cycle SDLC including planning analysis design implementation testing and maintenance of MultiTier distributed secure enterprise applications using JavaJ2EE technologies inBanking Insurance and Communication Experience in application development using Software development methodologies such as Agile Waterfall development and TDD Test Driven Development environments Expertise in Core Java concepts of JavaJ2EE like JSP Servlets JSF JSTL EJB transaction implementation CMP BMP MessageDriven Beans JMS Struts Spring Swing Hibernate Java Beans JDBC XML Web Services JNDI MultiThreading Data Structures etc Experience in User Interactive UI Web Pages and visually appealing User Interface usingHTML5 CSS3 jQuery Ajax JavaScript and PHP Extensively worked on XML related technologies like XML XSLT XPATH XSL DTD and DOM Responsible for creating a microservice system using Java 8 with Spring Boot RESTful API SOAP API and experience with Java 8 features like Stream Lambda expressions and Filters Experienced in Middleware persistence frameworks like HibernateJPA for mapping Java classes using Hibernate Query Language HQL HSQL Named Queries Criteria and Projections Experience in database modelling design and development of PLSQL stored procedures packages in relational databases like Oracle 9i10g 11g SQL Server 20052008 and MySQL Experience with MongoDB development reports schema design map reduce functions and migrations from SQL relational databases to NoSQL databases like MongoDBCassandra and Couch DB Experienced in implementing Service Oriented Architecture and Web Services such as SOAP using WDSL JAXWS and REST using Spring Boot Apache CFX JAXRS and Jersey Frameworks Hands on experience in configuration and deployment of multitier applications using servers like Apache Tomcat WebSphere JBoss and WebLogic Knowledge on Spring Framework like Spring Core Spring DAO Spring IoC Spring MVC Spring ORM Spring AOP Spring Boot and Spring Web flow Involved and developed various phases of security implementation using Spring Security system against all types of authentications like LDAP authentication Basic authentication and PreAuthentication Having knowledge on JMS MQs like Kafka Rabbit MQ and Active MQ Hands on experience with version control tools like SVN GIT and CVS Experience in using Jenkins for CICD process and creating Docker images and containers Experience in using Automation tools like Selenium and Cucumber Hands on experience with build tools like ANT Maven and logging tools like Log4j and SLF4J Work Experience SrFull Stack Developer Cross River Bank Fort Lee NJ March 2018 to Present Description Cross River Bank is a financial services organization that combines traditional banking services and the offerings of a technology company Cross River combines a comprehensive suite of products into a bankingasaplatform solution encompassing lending payments and risk management Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Extensively made use ofJava8features like Predicates Functional Interfaces and Lambda Expressions Method References and Stream API for bulk data operations on Collections Involved in developing UI pages using Angular 40 HTML5 CSS3 and Twitter Bootstrap Designed and developed Microservice using synchronous protocols like HTTP REST JAXRS and SOAP JAXB Implemented Spring Framework including Spring CoreIOC Spring AOP Spring ORM and Spring Batch and implemented the authentication authorization and accesscontrol features by making use of Spring Security Used Spring Boot to develop and deploy both RESTful web services and MVC applications Written shell scripts to copy output files to a different location from Spring Batch Used Spring Boot to develop and deploy RESTful web services SOAP and MVC applications Implemented Swagger Configuration in Java Spring Boot for auto generating swagger JSON files for REST API calls Implemented exception handling in Java Spring Boot for REST API by making use of Exception Handler and Controller Advice annotations Used Apache Camel for processing different files creating routes using router for communication and integration with other microservice Used Openshiftplatform to deploy applications on cloud Scripted Ansible playbook to deploy applications inOpenshift clusters Effectively developed and deployed Spring Boot applications for REST services on Openshiftplatform and implemented platform as service technologies Added security layer for web services using Oauth Sami integration SHA256 authentication and Basic Authentication Used Apache Kafka with Zoo Keeper for achieving synchronous and asynchronous messaging techniques Used ActiveMQ for asynchronous messaging techniques Developed the Application Module using several design patterns like Singleton Factory DAO DTO Business Delegate Faade prototype and Composite View Integrated with Oracle Field Service Cloud for outbound messages through SMS Used Hibernate objectrelationalmapping ORM technique for mapping data from MVC model to MySQL Relational data model with and SQLbased schema Developed session entity beans and message driven beans mapping of Java objects to database tables using Hibernate Extensively used Hibernate Transaction Management and Hibernate Batch Transactions Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Used PostgreSQL as customer database then migrated to MongoDB used both database in Spring Boot Created Docker images and ran the Docker containers in various environments Having good implementation experience with installation and configuration of Kubernetes clustering them and managed local deployments in Kubernetes Used Elastic search Fluentdand Kibana as Log Database for microservice applications Implemented GUIDGlobal Unique Identifier for unique identification of logs Worked with Prometheus as system monitoring tool and Grafana as graphical dashboard Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Used Log4j for logging errors and GIT for version control Deployed the application on JBOSS application server Developed unit and integration tests for existing microservice using Junit andMockito Integrated SOAPUI in Jenkins with Mavenenvironments for unit and Integration testing Developed Cucumber tests for Behaviour Driven integration testing Fixed defects identified during QA UAT and Production Environment Java 8 J2EE Spring Boot AJAX jQuery Angular4 Microservice Openshift JBOSS Hibernate Apache Camel OAuth Basic Authentication Swagger RESTful web services SOAP web service PostgreSQL ELKDocker Maven Jenkins ActiveMQ Kafka Shell Scripts GitGitLab Googs JUnit Mockito CucumberLog4j Full Stack Java Developer USAA San Antonio TX June 2016 to February 2018 Description USAA a diversified financial services group of companies is among the leading providers of financial planning insurance investments and banking products to members of the US military and their families CIM is a webservice based application which deals with creating user credentials with specific password rules that are following the USAA policys and managing them in LDAP directory and Postgres database for Online USAA customers It performs operations like modifyingresetting user password and username in LDAP directory Responsibilities Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Extensively made use of Java8 features like Predicates Functional Interfaces and Lambda Expressions Method References and Stream API for bulk data operations on Collections Involved in developing UI pages using Angular 40 HTML5 CSS3 and Twitter Bootstrap Developing web pages using Angular40 Framework and worked with various Angular JS directives and services and Filters to build the Applications Designed and developed Microservice using synchronous protocols like HTTP REST JAXRS Implemented Spring Framework including Spring CoreIOC Spring AOP Spring ORM and Spring Batch and implemented the authentication authorization and accesscontrol features by making use of Spring Security Used Spring Boot to develop and deploy both RESTful web services and MVC applications Written Shell scripts to copy output files to a different location from Spring Batch Implemented Swagger Configuration in Java Spring Boot for auto generating swagger JSON files for REST API calls Implemented exception handling in Java Spring Boot for REST API by making use of Exception Handler and Controller Advice annotations Used Pivotal Cloud Foundry to deploy applications on cloud Effectively developed and deployed Spring Boot applications for REST services on Pivotal Cloud Foundry and implemented platform as service technologies Added security layer for web services using OAuth and Sami integration Developed the Application Module using several design patterns like Singleton Factory DAO DTO Business Delegate Faade prototype and Composite View Implemented RESTful Web services for transmission of data in JSON format Used Hibernate objectrelationalmapping ORM technique for mapping data from MVC model to MySQL Relational data model with an SQLbased schema Developed session entity beans and message driven beans mapping of Java objects to database tables using Hibernate Extensively used Hibernate Transaction Management and Hibernate Batch Transactions Created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Preparing PostgreSQL queries for reporting and analysing production data for various applications Created Docker images and ran the Docker containers in various environments Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins Used Log4j for logging errors and GIT for version control Deployed the application on JBOSS Nginx application server Developed unit and integration tests for existing microservice using JUnit Mockito environments for development and QA teams Fixed defects identified during QA UAT and Production Environment Java 8 J2EE Spring Boot AJAX jQuery Angular4 Microservice Pivotal Cloud Foundry JBOSS JBPM Netflix Eureka Hibernate Spring Batch OAuth Swagger RESTful web services MongoDB PostgreSQL Docker Maven Jenkins Kafka Shell Scripts Git GitHub JUnit MockitoLog4j Federal Home Loan Bank Des Moines IA August 2015 to May 2016 Des Moines IA Aug 2015 to May 2016 JavaJ2EE Description A primary benefit FHLB application in access to low cost secured borrowings known as advances which are funded by the FHL Banks in the capital markets from the issuance of discount notes or term debt collectively known as consolidated obligations COs Responsibilities Involved in requirement analysis design development testing of application using Agile methodology Used AWS Amazon Web Services as a cloud platform to deploy the application Leveraged AWS cloud services such as EC2 autoscaling and VPC to build secure highly scalable and flexible systems that handled expected and unexpected load bursts Used Amazon IAM to grant finegrained access to AWS resources to users Managed roles and permissions of users to AWS account through IAM Experience in Integration of Amazon Web Services AWS with other applications infrastructure Utilized S3 buckets and Glacier for file storage and backup on AWS cloud Developed various helper classes necessary using MultiThreading Developed Interactive web pages using AngularJS HTML5 CSS3 and JavaScript Developed Single Page Application SPA using AngularJS Framework and injected generic services using Angular2 Used NodeJS Express to create API which can provide or consume JSON Integrated the IoC container of Spring Framework to handle the creation of beans dependency injection and transaction management Used Hibernate ORM to integrate with business application with Oracle Database where Hibernate template is used to implement business logic Created XML configuration file for Hibernate Database connectivity Consumed Web Services by implementing Springs REST support for development of RESTful Web services Created Shell script to deploy resource bundles on different environments Worked with Git Version control system to track various aspects of the project Used Maven as build tool on Java projects for the development of build artefacts on the source code Used Log4j logging framework to write Log messages with various levels for logging across the application Execute finished output and supporting documentation for banking requirements Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Developed test cases using JUnit and jMock for unit testing as well as integration testing as part of TestDriven Development TDD Interacted with Business Analysts to come up with better implementation designs for the application Provided production support for the application Involved in testing debugging bugs fixing and documentation of the system Environment Java 7 J2EE Spring MVC 30 Hibernate 30 JSP AngularJS Nodejs HTML5 CSS3 JavaScript AWSVPC EC2 IAM Route53 Lambda ELB S3 RESTful web services Rabbit MQ ESB Shell Scripts Git Maven Log4j Cassandra Oracle 11g Docker JUnit jMock Java Developer Equifax Atlanta GA May 2014 to July 2015 Description Equifax Inc is a consumer credit reporting agency Equifax collects and aggregates information on over 800 million individual consumers and more than 88 million businesses worldwide Responsibilities Worked on Agile methodology including teambased design and code reviews Actively involved in Requirement Analysis designing development and testing of the entire application Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Enhance and modify the presentation layer and GUI framework that are written using JSP and clientside validations done using JavaScript Worked on the Common UI layout for defining the Header Footer and Menu using JSF Facelets Implemented navigation using Spring MVC controllers configured controllers using Spring MVC annotations and configuration files Implemented spring framework BeanFactoryApplicationContext for bean initialization and configurations SpringAOP is used for logging auditing and security and transaction management to distinguish business logic from the crosscutting concerns Implemented the backend functionality of the modules using Singleton and Session Facade design patterns Configured Hibernate configuration files to persist the data to the Oracle 10g Database Configured Hibernate objects as Spring Beans in Spring Configuration File Involved in development of POJO classes and writing Hibernate Query Language HQL queries Asynchronous messaging is done using JMS and created Queue for point to point messaging Developed REST web services using Spring MVC to extract client related data from database and used SOAP UI for testing these RESTFUL API web services Implemented Service Oriented Architecture SOA by developing and consuming RESTful web services based on JAXRS and Jersey Designed and implemented Java Classes to use JAXP parser to create Java objects to be able to modify the data received in the response Implemented Core Java Concepts such as MultiThreading Exception Handling and Collections when needed Handled MultiThreading part in the backend component one thread will be running for each other Worked with DB2 and wrote SQL Queries Stored Procedures triggers views and integrated SQL Queries into DAO Deployed the application on Tomcat Application Server Used Log4j logging mechanism for logging Used SVN for versioning and concurrent access to the project files Resolving spring framework artefacts and code build deployment with Maven Used JIRA for defect and issue tracking Used Jenkins for continuous integrationcontinuous deployment Automated regression test cases using Selenium Coordinated with testing team for timely release of product Environment Java J2EE Spring MVC 30 Hibernate 30 HTML CSS JavaScript React JS JMS SOAP Axis2 Maven Jenkins DB2 Selenium Log4j SVN JIRA Tomcat 60 Java Developer Soft Tech Consulting Inc Chantilly VA July 2012 to April 2014 Description See what employees say about what its like to work at Soft Tech Consulting Salaries reviews and more all posted by employees working at Soft Tech Responsibilities Participated in all phases of the project like design development testing enhancements and production support Used Rational Rose for the Use Case Diagrams Object Diagrams Class Diagrams and Sequence Diagrams to represent the detailed design phase Developed front end using JSP HTML CSS and clientside validations using JavaScript Implemented MVC architecture and developed form classes action classes for the entire application using Struts Framework Implemented Singleton Service Locator design patterns in MVC framework and developed command delegate model action script classes to interact with the backend Involved in writing the exception and validation classes using Struts validation rules Developed Enterprise Java Beans like Entity Beans Session Beans both Stateless and State Full Session beans Designed and developed reusable Java utility classes for the business logic functionality using services like JDBC and JNDI Deployed the application on WebLogic application server Monitored the error logs using Log4j and fixing the problems Designed database Tables View Indexs and create triggers for optimized data access Written JUnit test cases for unit testing of the application Written Ant scripts for building application artifacts Involved in Unit integration bug fixing acceptance testing with test cases Code reviews Provided troubleshooting and error handling support in multiple projects Environment Java 6 J2EE JSP HTML CSS JavaScript Struts 20 EJB 21 JDBC JNDI JUnit Log4j WebLogic 70 Rational Rose Java Developer Intercontinental Exchange Atlanta GA September 2010 to June 2012 Description Intercontinental Exchange is an American company that owns exchanges for financial and commodity markets and operates 12 regulated exchanges and marketplaces Responsibilities Involved in requirement analysis design and development of the application Created the design using class diagrams and sequence diagrams Implemented MVC architecture using JSP Servlets and EJB Developed web Components using JSP HTML CSS and JavaScript Extensively used XML documents with XSLT and CSS to translate the content into HTML to present to GUI Developed EJB middleware components to implement business objects and business logic of the system Used JDBC to establish connectivity to the database for performing the database operations Created and modified Stored Procedures complex SQL Commands for the application using PLSQL Deployed the application on WebSphere application server Involved in enhancements of the system and worked on fixing bugs and supporting the entire system Environment Java 5 J2EE JSP HTML CSS JavaScript XSLT Servlets EJB JDBC WebSphere 70 Oracle 10g PLSQL Education Bachelors Skills Eclipse Ejb J2ee Java Hibernate Intellij idea Spring Jax Jaxrpc Jaxws Jboss jquery Servlets Struts Angularjs Bootstrap Html5 Mvc Soap Git Additional Information TECHNICAL SKILLS Languages Java 678 HTML JavaScript PHP Apache Camel Visual Basic Web Technologies HTML5 XHTML DHTML CSS3 JavaScript PHPAJAX jQuery Angular 4 AngularJS Bootstrap JavaJ2EE Technologies J2EE Servlets JDBC Struts EJB Hibernate Spring MVC Spring Boot Spring Security SOAP REST ApplicationWeb Servers IBM WebSphere Apache Tomcat WebLogic JBoss GlassFish Relational Databases Oracle 9i10g11g DB2 SQL Server MySQL Mongo DB Cassandra Cloud Environments AWS Openshift Pivotal Cloud Foundry IDE Eclipse NetBeans IntelliJ IDEA Spring Tool Suite STSRed Hat Development Studio Operating system Windows Linux Unix Methodologies Agile Waterfall Kanban TDD TestDrivenDevelopment Scrum Build Tools Ant Maven Gradle Log4J Hudson Jenkins Version Control CVS SVN GIT JIRA Subversion Web Services SOAP RESTful JAXWS JAXRPC JAXRS JAXP JAXB",
    "unique_id": "4ce90cd0-3bf4-414b-b22f-c18264dfee42"
}