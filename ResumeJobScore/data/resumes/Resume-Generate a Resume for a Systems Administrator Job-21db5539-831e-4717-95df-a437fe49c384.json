{
    "clean_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Intuit Inc South Jordan UT Having 8 years on requirement analysis design development testing implementation and support using Object Oriented Methodologies and JavaJ2EE technologies Actively participated in every phase of Software Development Life cycle SDLC and proficient with software development methods like Agile scrum and Water Fall Expertise in client scripting language and server scripting languages like HTML5 CSS3 JavaScript JQuery Ajax AngularJS JSP NodeJS React JS PHP Bootstrap Expert in Core Java with strong understanding of Collections Multithreading Event handling Exception handling and Generics Utilized Java 8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application Experience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM DynamoDB Elastic Search Virtual Private Cloud VPC through AWS Console and API Integration Hands on experience with Amazon web services AWS and Amazon cloud technologies such as Amazon EC2 virtual servers and Amazon Cloud Watch monitoring Deploy application updates to AWS and monitored the load balancing of different instances Experience using Spring MVC Spring Boot Spring DAO Spring Data Spring IOC Spring Annotations Spring AOP Spring Transactions and Spring SecuritySSL OAUTH2 Extensive experience working in Spring framework Struts framework OR Mapping Hibernate framework and web services Strong work experience in application integration and communicating using SOA Web Services such as JAXRPC JAXRS JAXWS SOAP WSDL UDDI and XML over HTTP Apache CXF JAXB XSD Axis 2 and RESTFUL web services Strong Experience in database design using PLSQL to write Stored Procedures Functions Triggers Indexers and proficiency in writing complex queries using Oracle IDM DB2 SQL Server and MySQL MongoDB Expertise in XML technologies such as XSL XSLT XML schemas XPath XForms XSLFO and parsers like SAX DOM Experienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications Used Apache  and Apache Camel as JASMS provider Experience in developed logging and standard mechanism based on Log4j and SLF4j Experience in version control system tools like GIT CVS and SVN Experience in unit testing the applications using JUnit TDD Framework Worked on implementing full life cycle of software development process SDLC in using version control tools like Rational Clear Case Tortoise SVN CVS Concurrent Version System Handson experience working with Continuous Integration CI buildautomation tools such as Maven SVN CVS Jenkins and Apache Ant Significant experience in web development tools like Spring Tool Suite RAD Intellij Eclipse Hands on experience with Windows UNIX and Linux Environments Having Experience on Shell Scripting and Deployment of Applications in Server Experience in designing developing and deploying J2EE applications on Web sphere Web logic Apache Tomcat and JBoss application Servers Excellent written and verbal communication skills Analytical Problem Solving skills strict attention to detail and ability to work independently leadwork within a team environment Authorized to work in the US for any employer Work Experience Full Stack Developer Intuit Inc Plano TX May 2017 to Present Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Interacted with various business user groups for gathering the requirements for Salesforce implementation and documented the Business and Software Requirements Identify improvements to enhance CICD Involved in designing the client side module architecture based on new Angular Framework Used NodeJS to run AngularJS on server with mock JSON data and completed the UI development independent of server Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Oracle 11g was used as the database for the application which was hosted in the cloud using Amazon RDS service Deployed the built docker image on Mesos using Marathon Using a multi container setup deployed on Mesos Experienced in setting up Amazon EC2 instances virtual private cloud VPCs and security groups Setting up databases in AWS using RDS storage using S3 bucket and configuring instance backups to S3 bucket All the functionality is implemented using Spring Boot Micro Services and Hibernate ORM Used Spring Core Annotations for Spring DI Spring MVC for REST APIs Spring Security and Spring Boot for Microservices Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring MVC module to develop MVC Architecture Developed the Controller to handle the requests and responses Used Core Java to develop Business Logic as Spring Beans Extensively used Core Java 18 concepts and implemented Collections IO Exception Handling and Generics in logic design and development Configured Spring Container to implement IOCDI of the Spring Beans Bean Factory and to manage the beans life circle Used Spring Security for Authentication and Authorization of the application Used spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template to perform the database the database operations by connecting Data Sources available Implemented Spring AOP for declarative transaction management Using Hibernate ORM tool for Memory mapping objectoriented domain model to relational database Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Jersey to implement Restful Web Service and used XML form to transfer the data Used Rest Controllers to replace the existing operations layer which acts as bridge between business layer and the UI Implemented OAuth20 for authentication based web application and accessed their APIs for fetching data services Used Grunt as task runner Used MongoDB as data storage and utilized aspects like replica sets sharing and clever document design to make service extensible scale and feature wise Responsible for Production support activities like Jobs monitoring log the load statistics analysis and resolve in case of any production issues coordinate with business to fix any source file issues coordinate with DBA to resolve any table space or file system related issues Deployed the Web Application in WebSphere Developed Unit Test Cases Used JUnit for unit testing of the application Developed the unit testing scripts using Jasmine for testing the JavaScript code and automation of the tasks with GruntGulp Configured pomxml to deploy the project using Maven Environment Java J2EE HTML5 CSS3 OAuth20 JavaScript JQuery AJAX AngularJS NodeJS Bootstrap JSON JSP JNDI Oracle SQL Server 20081216 Spring AOPBean Factory Spring cloud Hibernate RabbitMQ Spring MVC Spring JDBC JDBC Amazon WebServices Elastic SearchSOA Serviceoriented Architecture REST JAXRS Jersey JUnit JAXB Mongo DBCICD Docker WebSphere Micro Services JIRA Maven GIT RAD Jenkins Unix Grunt Gulp Jasmine Salesforce Agile Methodology Full Stack Developer Health Care Management Systems Irving TX December 2016 to April 2017 Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Involved in designing the client side module architecture based on AngularJS Framework Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Virtualized the servers on AWS using the Docker created the Docker files and version controlled them Expertise in container technologies and writing containerized software Docker Manipulated data using CRUD Create Read Update and Delete operations of SQL database management system and handled database access and data transmission based on RESTful web service Experienced in setting up Amazon EC2 instances virtual private cloud VPCs and security groups Setting up databases in AWS using RDS storage using S3 bucket and configuring instance backups to S3 bucket All the functionality is implemented using Spring Boot and Spring JNDI Used Spring Core Annotations for Spring DI Spring MVC for REST APIs Spring Security and Spring Boot Used spring Data Framework to use the features of Spring JDBC Spring data JPA and Spring ORM classes like JDBC template to perform the database operations by connecting Data Sources available Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring Security for Authentication and Authorization of the application Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Implemented swagger in project for API design build document and consume RESTful Web services Implemented Spring security and authentication using Java Web Tokens using Layer Seven on both frontend and Backend Created Ant build file to build the application and deployed in WebLogic Developed JUnit Test Cases using Mockito framework and also using in memory H2DB Used JUnit for unit testing of the application Used HARVEST for version control tool Configured pomxml to deploy the project using Maven Experience on Log4J to validate functionalities and developed customized reports Used Version One for tracking the Project Stories in AGILE Methodology Environment Java J2EE HTML5 CSS3 JavaScript JQuery AJAX AngularJS NodeJS Bootstrap JSON JSP JNDI DB2 SQL Server Spring data JPA Spring AOPBean Factory Spring cloud Hibernate Spring MVC Spring JDBC JDBC Amazon WebServices Elastic Search RDS S3SOA Serviceoriented Architecture REST JAXRS Jersey JUnit JAXB Docker WebSphere Micro Services Version One Maven Harvest Eclipse IDE Jenkins Unix Grunt Gulp Jasmine Salesforce Agile Methodology Full Stack Developer ATT Alpharetta GA January 2015 to November 2016 Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using AGILE methodology Created userfriendly GUI interface and Web pages using HTML5 CSS3 Java script JQuery AngularJS Defined new validations through AngularJS for the form field validation implemented through HTML5 Used Spring MVC design patterns Ajax and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Used Active MQ for asynchronous communication by putting the messages in the message queue Responsible for designing Hibernate mapping files based on business logic and Object relationships Created data model and generated Hibernate mappings and domain objects using Hibernate tools Integrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring Extensively used HQL and SQL for querying databases Consumed Web Services to interact with other external interfaces in order to exchange the data in the form of XML and by using SOAP Designed and implemented MySQL solutions as per project specifications Used Rest methodology for the service layer interface and used JSON for the data transformation Developed various AJAX and JSON calls for the communication between the server and the UI Involved in developing Web Services to send XML request and reading the response SOAP UI from Java platform Worked on Spring Cloud Config Pivotal cloud foundry to deploy application to cloud Developed RESTful web services are deployed to pivotal web services Deployed application using Pivotal Cloud Foundry PCF CLI Good knowledge on Pivotal Cloud Foundry Established Database Connectivity using Hibernate OR mapping with Spring ORM for MySQL Server Experienced in implementation of JMS in order to exchange information over reliable channel in an asynchronous way by using  as a message queue Packaged and deployed the application in IBM WebSphere Written LINUX shell scripts to identify user login information Used log4J for application logging and notification tracing mechanisms Analysis and Bug fixing of the production problems and defects along with enhancements Used Maven as the build tool Used JUnit Testing and Ant Scripts Used JIRA for tracking the Project Stories in AGILE Methodology Environment Java JDK J2EE EJBs JSPServlet JDBC XML HTML CSS Java Script JQuery Ajax AngularJS NodeJS JSON JMS Struts Spring MVC design patterns  Spring MVC Hibernate Agile Ant Maven IBM Web Sphere PHP SOAP UI JNDI Log4J MySQL Server 20081216 JIRA RMI Intellij IDE LINUX Sr JavaJ2EE Developer Health Connection Minnesota January 2014 to December 2014 Responsibilities Involved in client requirement gathering analysis application design of Extreme Programming using Agile methodology with iterative and incremental software development Involved in the development of the User Interfaces using AngularJS HTML JSP JS CSS and AJAX Used Dependency Injection feature of Spring framework to inject dependency into objects and to wire objects of business classes Used Spring framework including Spring core IOCBean Factory Spring Web Spring Security Developed persistence layer Data access objects using DAO pattern JDBC Hibernate Developed costume queries using Hibernate criteria native SQL and HQL Developed inheritance domain objects using table per class hierarchy strategy Configured EH Cache to load the static tables into secondary storage area Implemented SOA architecture with WSDL Mainframe Web Services using SOAP WSDL UDDI and XML using CXF framework toolApache Commons Developed Stateless session beans to parse parser frame work and process the user request into domain object DAO design pattern to delegate the business request to the business delegate object Used SOAP web services and XML data over HTTP Developed necessary parsing and XML construction logic using XML parser APIs JAXB Developed user interface using JSP Struts published validation framework to support client side and server side validation Used built in store Procedures to reach the requirements from the Client to improve the response times of the services Created tables triggers stored procedures SQL queries joins integrity constraints and views for multiple databases Oracle using TOAD tool Developed an automated application using JMS for messaging and JNDI to interact with the Server Used Hibernate as ORM tool to store the persistence data into the Oracle database Created Stored Procedures using PLSQL Developed Scripts for the build process and deployed in Web Logic Server Developed customized SQL for retrieving the data from the database worked with business and client to reach the performance parameters Used Jenkins as build management tool for continuous integration process Implemented Log4J for logging errors tracking using loggers components Developed unit test cases to test business scenarios associated with each use case sequences Used GIT for version control tool Experienced in writing unit test cases using JUNIT Worked on UNIX environment for development Environment Java JEE JSP HTML CSS JavaScript AngularJS Spring dependency injection AOP Spring corebean factoryIOC Web Struts Hibernate JMS Clear case WebLogic Server Web services SOAP WSDL Mainframe JNDI UDDI JAXRPC JAXB Log4j Oracle Rally JUnit Jenkins GIT TOAD UNIX Java Developer Colonial Life Insurance Columbia SC May 2010 to December 2013 Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using Agile methodology Used Spring MVC design patterns and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Involved in developing SOAP and Restful web services functions to get data from the MainFrame Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for Oracle Developed user interfaces for policy owner module using Swing JSP HTML and CSS Developed policy owner business logic using Stateless Enterprise Java Beans EJBs Participated in designing and development of DAO Data Access Objects for policy owner module Developed application components using Apache Struts Framework Performed server side validations using Struts validations Developed Business tier and Presentation tier using IBM WSAD Written LINUX shell scripts to identify user login information Involved in Unit testing and System testing of the application Developed test cases and performed unit testing using JUnit Used JIRA for tracking the Project Stories in Agile Methodology Used CVS for version Repository maintenance Environment Spring MVC Spring IOC Spring AOP JDBC Hibernate JSP HTML CSS IBM WSAD WebSphere Studio Application Developer MainFrame IBM WebSphere Application Server CSS IBM Rational Rose DB2 Jira CVS Junior Java Developer World Bank Washington DC August 2009 to May 2010 Responsibilities Technical responsibilities included high level architecture and rapid development Design architecture following J2EE MVC framework Developed interfaces using HTML JSP pages and Struts Presentation View Developed and implemented Servlets running under JBoss Designed the user interfaces using JSPs developed custom tags and used JSTL Taglib Developed various java business classes for handling different functions Developed controller classes using Struts and tiles API Used J2EE design patterns and Data Access Object DAO for the business tier and integration Tier layer of the project Designed and developed Message driven beans that consumed the messages from the Java message queue Implemented CMP entity beans for persistence of business logic implementation Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement InspectionReview of quality deliverables such as Design Documents Developed EJBs Session and Entity Beans for business processing and database access Wrote SQL Scripts Stored procedures and SQL Loader to load reference data Used Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Used Maven as a build tool for deployment purpose Environment Java J2EE Java Servlets JSP Struts HTML EJB MVC Framework JDBC Maven JBoss SQL Oracle Tortoise SVN Apache Tomcat Education Bachelors Skills JAVA 9 years HIBERNATE 8 years JSP 9 years DATABASE 9 years JDBC 9 years Additional Information TECHNICAL SKILLS Languages C C Java J2EE SQL PLSQL J2EE Technologies Servlets JDBC JSP JSF JMS EJB Java Security JMS  Rabbit MQ MarkupXML Technologies HTML CSS JavaScript JQuery Ajax AngularJS PHP XML XSD XSLXSLT SAXDOM Node JS React JS JSON Tools Framework Struts Spring Hibernate Spring MVC Spring IOC Spring AOP Spring Boot Spring Cloud Spring Security OAUTH2 JSF JUnit SOAP UI PHP Apache  ANT Maven Apache camel CICD Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Micro Services WebApp Servers IBM Web Sphere Apache Tomcat JBoss Web Logic Server Database Oracle SQLServer 20081216 Netezza MySQL server TOAD MongoDBNoSQL IDEs Eclipse Intellij Spring Tool Suite STS RAD OR mapping Hibernate IBATIS Testing Tools Others JUnit Soap UI Putty Log4j and Jira Version Control Tortoise SVN CVS Rational Clear case GitHub Build Tools Ant Maven Jenkins Docker OS Environment Windows UNIX Linux Cloud Technologies AWS EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Cloud front Elastic search Elastic Beanstalk Virtual Private Cloud VPC Micro Services Pivotal Cloud FoundryPCF Docker",
    "entities": [
        "Micro Services",
        "CSS Developed",
        "SQL Server Implemented",
        "GUI",
        "CSS IBM",
        "ELB AutoScaling SNS SQS",
        "ANT Maven Apache",
        "Data Sources",
        "Jersey",
        "WebSphere Micro Services",
        "Spring IOC",
        "HTTP",
        "Present Responsibilities Involved",
        "IBM",
        "CVS",
        "J2EE Technologies Servlets",
        "Amazon Web Services AWS",
        "Continuous Integration CI",
        "XML",
        "SOAP",
        "Functional Architects Developed",
        "Coordinate",
        "CRUD Create Read Update",
        "WebLogic",
        "JSP Struts",
        "JUnit",
        "Creating",
        "Layer Seven",
        "Stateless",
        "Stream API for Bulk",
        "Amazon",
        "SQL Server",
        "WebLogic Developed JUnit Test Cases",
        "Hibernate Spring",
        "Developed",
        "DAO",
        "Mesos using Marathon Using",
        "Mockito",
        "SAX DOM Experienced",
        "Client",
        "Restful",
        "Amazon WebServices Elastic",
        "Exception",
        "Oracle Rally JUnit Jenkins",
        "Eclipse Intellij Spring Tool",
        "HTML5",
        "Data Access Object DAO",
        "Hibernate IBATIS Testing Tools Others",
        "AGILE",
        "JNDI",
        "WebSphere Studio Application Developer MainFrame IBM",
        "Apache Camel",
        "the MainFrame Established Database Connectivity",
        "JSP",
        "Repository",
        "Micro",
        "the Business and Software Requirements Identify",
        "Analytical Problem Solving",
        "the UI Implemented",
        "Washington DC",
        "the Server Used Hibernate",
        "JAXRPC JAXRS JAXWS SOAP",
        "Axis2 Micro Services",
        "RDS",
        "DBA",
        "AWS Console",
        "Collections",
        "Used Active MQ",
        "MVC",
        "Spring JDBC Spring",
        "Agile",
        "Oracle IDM DB2",
        "EJB",
        "GIT",
        "Extreme Programming",
        "Used JUnit Testing",
        "Restful Web Service",
        "API",
        "Ajax and Dependency Injection",
        "US",
        "Oracle Developed",
        "Followed Agile Methodology",
        "Spring JDBC",
        "Created",
        "JASMS",
        "Configured EH Cache",
        "AWS",
        "the Application Experience",
        "Spring Boot Micro Services",
        "Backend Created Ant",
        "Additional Information TECHNICAL SKILLS Languages C C",
        "Designed Configured",
        "Shell Scripting and Deployment of Applications",
        "Framework Designed Configured",
        "JSF JUnit",
        "InspectionReview",
        "Software Development Life",
        "CXF",
        "RESTFUL",
        "SQL",
        "Maven Environment",
        "Data Framework",
        "GruntGulp Configured",
        "Hibernate Handled Transaction Management",
        "Amazon WebServices Elastic SearchSOA Serviceoriented Architecture REST",
        "Pivotal Cloud Foundry PCF CLI Good",
        "SOA Web Services",
        "Mesos Experienced",
        "SVN CVS Rational Clear",
        "GIT CVS",
        "SQL Query Statements",
        "Jira Version Control",
        "the Web Application",
        "Responsibilities Technical",
        "UDDI",
        "DAO Data Access Objects",
        "Implemented Spring AOP",
        "Maven",
        "Memory",
        "Hibernate Implemented",
        "JavaScript",
        "UI",
        "Business Logic",
        "Collections IO Exception Handling and Generics",
        "Delete",
        "Sr JavaJ2EE Developer Health Connection",
        "the UI Involved",
        "Java Developer Colonial Life Insurance Columbia",
        "SVN",
        "CSS",
        "REST",
        "Data",
        "Responsible for Production",
        "the Project Stories",
        "API Integration Hands",
        "Object Oriented Methodologies",
        "IDE Jenkins Unix Grunt Gulp Jasmine Salesforce Agile Methodology Full Stack Developer ATT",
        "TOAD",
        "WebSphere Developed Unit Test Cases Used",
        "JQuery",
        "HTTP Apache CXF",
        "Rabbit MQ MarkupXML Technologies HTML CSS"
    ],
    "experience": "Experience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM DynamoDB Elastic Search Virtual Private Cloud VPC through AWS Console and API Integration Hands on experience with Amazon web services AWS and Amazon cloud technologies such as Amazon EC2 virtual servers and Amazon Cloud Watch monitoring Deploy application updates to AWS and monitored the load balancing of different instances Experience using Spring MVC Spring Boot Spring DAO Spring Data Spring IOC Spring Annotations Spring AOP Spring Transactions and Spring SecuritySSL OAUTH2 Extensive experience working in Spring framework Struts framework OR Mapping Hibernate framework and web services Strong work experience in application integration and communicating using SOA Web Services such as JAXRPC JAXRS JAXWS SOAP WSDL UDDI and XML over HTTP Apache CXF JAXB XSD Axis 2 and RESTFUL web services Strong Experience in database design using PLSQL to write Stored Procedures Functions Triggers Indexers and proficiency in writing complex queries using Oracle IDM DB2 SQL Server and MySQL MongoDB Expertise in XML technologies such as XSL XSLT XML schemas XPath XForms XSLFO and parsers like SAX DOM Experienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications Used Apache   and Apache Camel as JASMS provider Experience in developed logging and standard mechanism based on Log4j and SLF4j Experience in version control system tools like GIT CVS and SVN Experience in unit testing the applications using JUnit TDD Framework Worked on implementing full life cycle of software development process SDLC in using version control tools like Rational Clear Case Tortoise SVN CVS Concurrent Version System Handson experience working with Continuous Integration CI buildautomation tools such as Maven SVN CVS Jenkins and Apache Ant Significant experience in web development tools like Spring Tool Suite RAD Intellij Eclipse Hands on experience with Windows UNIX and Linux Environments Having Experience on Shell Scripting and Deployment of Applications in Server Experience in designing developing and deploying J2EE applications on Web sphere Web logic Apache Tomcat and JBoss application Servers Excellent written and verbal communication skills Analytical Problem Solving skills strict attention to detail and ability to work independently leadwork within a team environment Authorized to work in the US for any employer Work Experience Full Stack Developer Intuit Inc Plano TX May 2017 to Present Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Interacted with various business user groups for gathering the requirements for Salesforce implementation and documented the Business and Software Requirements Identify improvements to enhance CICD Involved in designing the client side module architecture based on new Angular Framework Used NodeJS to run AngularJS on server with mock JSON data and completed the UI development independent of server Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Oracle 11 g was used as the database for the application which was hosted in the cloud using Amazon RDS service Deployed the built docker image on Mesos using Marathon Using a multi container setup deployed on Mesos Experienced in setting up Amazon EC2 instances virtual private cloud VPCs and security groups Setting up databases in AWS using RDS storage using S3 bucket and configuring instance backups to S3 bucket All the functionality is implemented using Spring Boot Micro Services and Hibernate ORM Used Spring Core Annotations for Spring DI Spring MVC for REST APIs Spring Security and Spring Boot for Microservices Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring MVC module to develop MVC Architecture Developed the Controller to handle the requests and responses Used Core Java to develop Business Logic as Spring Beans Extensively used Core Java 18 concepts and implemented Collections IO Exception Handling and Generics in logic design and development Configured Spring Container to implement IOCDI of the Spring Beans Bean Factory and to manage the beans life circle Used Spring Security for Authentication and Authorization of the application Used spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template to perform the database the database operations by connecting Data Sources available Implemented Spring AOP for declarative transaction management Using Hibernate ORM tool for Memory mapping objectoriented domain model to relational database Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Jersey to implement Restful Web Service and used XML form to transfer the data Used Rest Controllers to replace the existing operations layer which acts as bridge between business layer and the UI Implemented OAuth20 for authentication based web application and accessed their APIs for fetching data services Used Grunt as task runner Used MongoDB as data storage and utilized aspects like replica sets sharing and clever document design to make service extensible scale and feature wise Responsible for Production support activities like Jobs monitoring log the load statistics analysis and resolve in case of any production issues coordinate with business to fix any source file issues coordinate with DBA to resolve any table space or file system related issues Deployed the Web Application in WebSphere Developed Unit Test Cases Used JUnit for unit testing of the application Developed the unit testing scripts using Jasmine for testing the JavaScript code and automation of the tasks with GruntGulp Configured pomxml to deploy the project using Maven Environment Java J2EE HTML5 CSS3 OAuth20 JavaScript JQuery AJAX AngularJS NodeJS Bootstrap JSON JSP JNDI Oracle SQL Server 20081216 Spring AOPBean Factory Spring cloud Hibernate RabbitMQ Spring MVC Spring JDBC JDBC Amazon WebServices Elastic SearchSOA Serviceoriented Architecture REST JAXRS Jersey JUnit JAXB Mongo DBCICD Docker WebSphere Micro Services JIRA Maven GIT RAD Jenkins Unix Grunt Gulp Jasmine Salesforce Agile Methodology Full Stack Developer Health Care Management Systems Irving TX December 2016 to April 2017 Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Involved in designing the client side module architecture based on AngularJS Framework Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Virtualized the servers on AWS using the Docker created the Docker files and version controlled them Expertise in container technologies and writing containerized software Docker Manipulated data using CRUD Create Read Update and Delete operations of SQL database management system and handled database access and data transmission based on RESTful web service Experienced in setting up Amazon EC2 instances virtual private cloud VPCs and security groups Setting up databases in AWS using RDS storage using S3 bucket and configuring instance backups to S3 bucket All the functionality is implemented using Spring Boot and Spring JNDI Used Spring Core Annotations for Spring DI Spring MVC for REST APIs Spring Security and Spring Boot Used spring Data Framework to use the features of Spring JDBC Spring data JPA and Spring ORM classes like JDBC template to perform the database operations by connecting Data Sources available Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring Security for Authentication and Authorization of the application Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Implemented swagger in project for API design build document and consume RESTful Web services Implemented Spring security and authentication using Java Web Tokens using Layer Seven on both frontend and Backend Created Ant build file to build the application and deployed in WebLogic Developed JUnit Test Cases using Mockito framework and also using in memory H2DB Used JUnit for unit testing of the application Used HARVEST for version control tool Configured pomxml to deploy the project using Maven Experience on Log4J to validate functionalities and developed customized reports Used Version One for tracking the Project Stories in AGILE Methodology Environment Java J2EE HTML5 CSS3 JavaScript JQuery AJAX AngularJS NodeJS Bootstrap JSON JSP JNDI DB2 SQL Server Spring data JPA Spring AOPBean Factory Spring cloud Hibernate Spring MVC Spring JDBC JDBC Amazon WebServices Elastic Search RDS S3SOA Serviceoriented Architecture REST JAXRS Jersey JUnit JAXB Docker WebSphere Micro Services Version One Maven Harvest Eclipse IDE Jenkins Unix Grunt Gulp Jasmine Salesforce Agile Methodology Full Stack Developer ATT Alpharetta GA January 2015 to November 2016 Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using AGILE methodology Created userfriendly GUI interface and Web pages using HTML5 CSS3 Java script JQuery AngularJS Defined new validations through AngularJS for the form field validation implemented through HTML5 Used Spring MVC design patterns Ajax and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Used Active MQ for asynchronous communication by putting the messages in the message queue Responsible for designing Hibernate mapping files based on business logic and Object relationships Created data model and generated Hibernate mappings and domain objects using Hibernate tools Integrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring Extensively used HQL and SQL for querying databases Consumed Web Services to interact with other external interfaces in order to exchange the data in the form of XML and by using SOAP Designed and implemented MySQL solutions as per project specifications Used Rest methodology for the service layer interface and used JSON for the data transformation Developed various AJAX and JSON calls for the communication between the server and the UI Involved in developing Web Services to send XML request and reading the response SOAP UI from Java platform Worked on Spring Cloud Config Pivotal cloud foundry to deploy application to cloud Developed RESTful web services are deployed to pivotal web services Deployed application using Pivotal Cloud Foundry PCF CLI Good knowledge on Pivotal Cloud Foundry Established Database Connectivity using Hibernate OR mapping with Spring ORM for MySQL Server Experienced in implementation of JMS in order to exchange information over reliable channel in an asynchronous way by using   as a message queue Packaged and deployed the application in IBM WebSphere Written LINUX shell scripts to identify user login information Used log4J for application logging and notification tracing mechanisms Analysis and Bug fixing of the production problems and defects along with enhancements Used Maven as the build tool Used JUnit Testing and Ant Scripts Used JIRA for tracking the Project Stories in AGILE Methodology Environment Java JDK J2EE EJBs JSPServlet JDBC XML HTML CSS Java Script JQuery Ajax AngularJS NodeJS JSON JMS Struts Spring MVC design patterns   Spring MVC Hibernate Agile Ant Maven IBM Web Sphere PHP SOAP UI JNDI Log4J MySQL Server 20081216 JIRA RMI Intellij IDE LINUX Sr JavaJ2EE Developer Health Connection Minnesota January 2014 to December 2014 Responsibilities Involved in client requirement gathering analysis application design of Extreme Programming using Agile methodology with iterative and incremental software development Involved in the development of the User Interfaces using AngularJS HTML JSP JS CSS and AJAX Used Dependency Injection feature of Spring framework to inject dependency into objects and to wire objects of business classes Used Spring framework including Spring core IOCBean Factory Spring Web Spring Security Developed persistence layer Data access objects using DAO pattern JDBC Hibernate Developed costume queries using Hibernate criteria native SQL and HQL Developed inheritance domain objects using table per class hierarchy strategy Configured EH Cache to load the static tables into secondary storage area Implemented SOA architecture with WSDL Mainframe Web Services using SOAP WSDL UDDI and XML using CXF framework toolApache Commons Developed Stateless session beans to parse parser frame work and process the user request into domain object DAO design pattern to delegate the business request to the business delegate object Used SOAP web services and XML data over HTTP Developed necessary parsing and XML construction logic using XML parser APIs JAXB Developed user interface using JSP Struts published validation framework to support client side and server side validation Used built in store Procedures to reach the requirements from the Client to improve the response times of the services Created tables triggers stored procedures SQL queries joins integrity constraints and views for multiple databases Oracle using TOAD tool Developed an automated application using JMS for messaging and JNDI to interact with the Server Used Hibernate as ORM tool to store the persistence data into the Oracle database Created Stored Procedures using PLSQL Developed Scripts for the build process and deployed in Web Logic Server Developed customized SQL for retrieving the data from the database worked with business and client to reach the performance parameters Used Jenkins as build management tool for continuous integration process Implemented Log4J for logging errors tracking using loggers components Developed unit test cases to test business scenarios associated with each use case sequences Used GIT for version control tool Experienced in writing unit test cases using JUNIT Worked on UNIX environment for development Environment Java JEE JSP HTML CSS JavaScript AngularJS Spring dependency injection AOP Spring corebean factoryIOC Web Struts Hibernate JMS Clear case WebLogic Server Web services SOAP WSDL Mainframe JNDI UDDI JAXRPC JAXB Log4j Oracle Rally JUnit Jenkins GIT TOAD UNIX Java Developer Colonial Life Insurance Columbia SC May 2010 to December 2013 Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using Agile methodology Used Spring MVC design patterns and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Involved in developing SOAP and Restful web services functions to get data from the MainFrame Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for Oracle Developed user interfaces for policy owner module using Swing JSP HTML and CSS Developed policy owner business logic using Stateless Enterprise Java Beans EJBs Participated in designing and development of DAO Data Access Objects for policy owner module Developed application components using Apache Struts Framework Performed server side validations using Struts validations Developed Business tier and Presentation tier using IBM WSAD Written LINUX shell scripts to identify user login information Involved in Unit testing and System testing of the application Developed test cases and performed unit testing using JUnit Used JIRA for tracking the Project Stories in Agile Methodology Used CVS for version Repository maintenance Environment Spring MVC Spring IOC Spring AOP JDBC Hibernate JSP HTML CSS IBM WSAD WebSphere Studio Application Developer MainFrame IBM WebSphere Application Server CSS IBM Rational Rose DB2 Jira CVS Junior Java Developer World Bank Washington DC August 2009 to May 2010 Responsibilities Technical responsibilities included high level architecture and rapid development Design architecture following J2EE MVC framework Developed interfaces using HTML JSP pages and Struts Presentation View Developed and implemented Servlets running under JBoss Designed the user interfaces using JSPs developed custom tags and used JSTL Taglib Developed various java business classes for handling different functions Developed controller classes using Struts and tiles API Used J2EE design patterns and Data Access Object DAO for the business tier and integration Tier layer of the project Designed and developed Message driven beans that consumed the messages from the Java message queue Implemented CMP entity beans for persistence of business logic implementation Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement InspectionReview of quality deliverables such as Design Documents Developed EJBs Session and Entity Beans for business processing and database access Wrote SQL Scripts Stored procedures and SQL Loader to load reference data Used Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Used Maven as a build tool for deployment purpose Environment Java J2EE Java Servlets JSP Struts HTML EJB MVC Framework JDBC Maven JBoss SQL Oracle Tortoise SVN Apache Tomcat Education Bachelors Skills JAVA 9 years HIBERNATE 8 years JSP 9 years DATABASE 9 years JDBC 9 years Additional Information TECHNICAL SKILLS Languages C C Java J2EE SQL PLSQL J2EE Technologies Servlets JDBC JSP JSF JMS EJB Java Security JMS   Rabbit MQ MarkupXML Technologies HTML CSS JavaScript JQuery Ajax AngularJS PHP XML XSD XSLXSLT SAXDOM Node JS React JS JSON Tools Framework Struts Spring Hibernate Spring MVC Spring IOC Spring AOP Spring Boot Spring Cloud Spring Security OAUTH2 JSF JUnit SOAP UI PHP Apache   ANT Maven Apache camel CICD Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Micro Services WebApp Servers IBM Web Sphere Apache Tomcat JBoss Web Logic Server Database Oracle SQLServer 20081216 Netezza MySQL server TOAD MongoDBNoSQL IDEs Eclipse Intellij Spring Tool Suite STS RAD OR mapping Hibernate IBATIS Testing Tools Others JUnit Soap UI Putty Log4j and Jira Version Control Tortoise SVN CVS Rational Clear case GitHub Build Tools Ant Maven Jenkins Docker OS Environment Windows UNIX Linux Cloud Technologies AWS EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Cloud front Elastic search Elastic Beanstalk Virtual Private Cloud VPC Micro Services Pivotal Cloud FoundryPCF Docker",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Developer",
        "Intuit",
        "Inc",
        "South",
        "Jordan",
        "UT",
        "years",
        "requirement",
        "analysis",
        "design",
        "development",
        "testing",
        "implementation",
        "support",
        "Object",
        "Oriented",
        "Methodologies",
        "JavaJ2EE",
        "technologies",
        "phase",
        "Software",
        "Development",
        "Life",
        "cycle",
        "SDLC",
        "software",
        "development",
        "methods",
        "scrum",
        "Water",
        "Fall",
        "Expertise",
        "client",
        "scripting",
        "language",
        "server",
        "scripting",
        "languages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Ajax",
        "JSP",
        "NodeJS",
        "React",
        "JS",
        "PHP",
        "Bootstrap",
        "Expert",
        "Core",
        "Java",
        "understanding",
        "Collections",
        "Multithreading",
        "Event",
        "Exception",
        "handling",
        "Generics",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "Stream",
        "API",
        "Bulk",
        "data",
        "operations",
        "Collections",
        "performance",
        "Application",
        "Experience",
        "Creating",
        "delivery",
        "pipelines",
        "Micro",
        "services",
        "functions",
        "Jenkins",
        "CI",
        "server",
        "Managed",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "bucket",
        "ELB",
        "AutoScaling",
        "SNS",
        "SQS",
        "AMI",
        "IAM",
        "DynamoDB",
        "Elastic",
        "Search",
        "Virtual",
        "Cloud",
        "VPC",
        "AWS",
        "Console",
        "API",
        "Integration",
        "Hands",
        "experience",
        "Amazon",
        "web",
        "services",
        "AWS",
        "Amazon",
        "cloud",
        "technologies",
        "Amazon",
        "EC2",
        "servers",
        "Amazon",
        "Cloud",
        "Watch",
        "Deploy",
        "application",
        "updates",
        "AWS",
        "load",
        "balancing",
        "instances",
        "Experience",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "DAO",
        "Spring",
        "Data",
        "Spring",
        "IOC",
        "Spring",
        "Annotations",
        "Spring",
        "AOP",
        "Spring",
        "Transactions",
        "Spring",
        "SecuritySSL",
        "OAUTH2",
        "experience",
        "Spring",
        "framework",
        "Struts",
        "framework",
        "Mapping",
        "Hibernate",
        "framework",
        "web",
        "services",
        "work",
        "experience",
        "application",
        "integration",
        "communicating",
        "SOA",
        "Web",
        "Services",
        "JAXRPC",
        "JAXRS",
        "JAXWS",
        "SOAP",
        "WSDL",
        "UDDI",
        "XML",
        "HTTP",
        "Apache",
        "CXF",
        "JAXB",
        "XSD",
        "Axis",
        "RESTFUL",
        "web",
        "services",
        "Strong",
        "Experience",
        "database",
        "design",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Indexers",
        "proficiency",
        "queries",
        "Oracle",
        "IDM",
        "DB2",
        "SQL",
        "Server",
        "MySQL",
        "MongoDB",
        "Expertise",
        "XML",
        "technologies",
        "XSL",
        "XSLT",
        "XML",
        "schemas",
        "XPath",
        "XForms",
        "XSLFO",
        "parsers",
        "SAX",
        "DOM",
        "JMS",
        "information",
        "way",
        "enterprise",
        "Applications",
        "Apache",
        "Apache",
        "Camel",
        "JASMS",
        "provider",
        "Experience",
        "logging",
        "mechanism",
        "Log4j",
        "SLF4j",
        "Experience",
        "version",
        "control",
        "system",
        "tools",
        "GIT",
        "CVS",
        "SVN",
        "Experience",
        "unit",
        "applications",
        "JUnit",
        "TDD",
        "Framework",
        "life",
        "cycle",
        "software",
        "development",
        "process",
        "SDLC",
        "version",
        "control",
        "tools",
        "Rational",
        "Clear",
        "Case",
        "Tortoise",
        "SVN",
        "CVS",
        "Concurrent",
        "Version",
        "System",
        "Handson",
        "experience",
        "Continuous",
        "Integration",
        "CI",
        "buildautomation",
        "tools",
        "Maven",
        "SVN",
        "CVS",
        "Jenkins",
        "Apache",
        "Ant",
        "Significant",
        "experience",
        "web",
        "development",
        "tools",
        "Spring",
        "Tool",
        "Suite",
        "RAD",
        "Intellij",
        "Eclipse",
        "Hands",
        "experience",
        "Windows",
        "UNIX",
        "Linux",
        "Environments",
        "Experience",
        "Shell",
        "Scripting",
        "Deployment",
        "Applications",
        "Server",
        "Experience",
        "J2EE",
        "applications",
        "Web",
        "sphere",
        "Web",
        "logic",
        "Apache",
        "Tomcat",
        "JBoss",
        "application",
        "Servers",
        "Excellent",
        "communication",
        "skills",
        "Analytical",
        "Problem",
        "Solving",
        "attention",
        "detail",
        "ability",
        "team",
        "environment",
        "US",
        "employer",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "Intuit",
        "Inc",
        "Plano",
        "TX",
        "May",
        "Present",
        "Responsibilities",
        "SDLC",
        "software",
        "development",
        "life",
        "cycle",
        "application",
        "requirement",
        "analysis",
        "Agile",
        "Methodology",
        "define",
        "application",
        "business",
        "requirements",
        "efforts",
        "Functional",
        "Architects",
        "UI",
        "HTML5",
        "CSS3",
        "JSP",
        "JavaScript",
        "cross",
        "browser",
        "functionality",
        "user",
        "interface",
        "business",
        "user",
        "groups",
        "requirements",
        "implementation",
        "Business",
        "Software",
        "Requirements",
        "improvements",
        "CICD",
        "client",
        "side",
        "module",
        "architecture",
        "new",
        "Angular",
        "Framework",
        "NodeJS",
        "server",
        "JSON",
        "data",
        "UI",
        "development",
        "server",
        "Configured",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "multitude",
        "applications",
        "Amazon",
        "cloud",
        "formation",
        "Oracle",
        "g",
        "database",
        "application",
        "cloud",
        "Amazon",
        "RDS",
        "service",
        "docker",
        "image",
        "Mesos",
        "Marathon",
        "container",
        "setup",
        "Mesos",
        "Amazon",
        "EC2",
        "cloud",
        "VPCs",
        "security",
        "groups",
        "databases",
        "AWS",
        "RDS",
        "storage",
        "S3",
        "bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "functionality",
        "Spring",
        "Boot",
        "Micro",
        "Services",
        "Hibernate",
        "ORM",
        "Spring",
        "Core",
        "Annotations",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "APIs",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Microservices",
        "REST",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "MVC",
        "module",
        "MVC",
        "Architecture",
        "Controller",
        "requests",
        "responses",
        "Core",
        "Java",
        "Business",
        "Logic",
        "Spring",
        "Beans",
        "Core",
        "Java",
        "concepts",
        "Collections",
        "IO",
        "Exception",
        "Handling",
        "Generics",
        "design",
        "development",
        "Configured",
        "Spring",
        "Container",
        "IOCDI",
        "Spring",
        "Beans",
        "Bean",
        "Factory",
        "beans",
        "life",
        "circle",
        "Used",
        "Spring",
        "Security",
        "Authentication",
        "Authorization",
        "application",
        "spring",
        "Data",
        "Framework",
        "features",
        "Spring",
        "JDBC",
        "Spring",
        "ORM",
        "classes",
        "JDBC",
        "Template",
        "database",
        "database",
        "operations",
        "Data",
        "Sources",
        "Implemented",
        "Spring",
        "AOP",
        "transaction",
        "management",
        "Hibernate",
        "ORM",
        "tool",
        "Memory",
        "mapping",
        "domain",
        "model",
        "database",
        "POJO",
        "objects",
        "Hibernate",
        "ObjectRelational",
        "Mapping",
        "ORM",
        "tool",
        "data",
        "SQL",
        "Server",
        "Jersey",
        "Restful",
        "Web",
        "Service",
        "XML",
        "form",
        "data",
        "Rest",
        "Controllers",
        "operations",
        "layer",
        "bridge",
        "business",
        "layer",
        "UI",
        "OAuth20",
        "authentication",
        "web",
        "application",
        "APIs",
        "data",
        "services",
        "Grunt",
        "task",
        "runner",
        "MongoDB",
        "data",
        "storage",
        "aspects",
        "replica",
        "sharing",
        "document",
        "design",
        "service",
        "scale",
        "Production",
        "support",
        "activities",
        "Jobs",
        "load",
        "analysis",
        "resolve",
        "case",
        "production",
        "issues",
        "business",
        "source",
        "file",
        "issues",
        "DBA",
        "table",
        "space",
        "file",
        "system",
        "issues",
        "Web",
        "Application",
        "WebSphere",
        "Developed",
        "Unit",
        "Test",
        "Cases",
        "JUnit",
        "unit",
        "testing",
        "application",
        "unit",
        "testing",
        "scripts",
        "Jasmine",
        "JavaScript",
        "code",
        "automation",
        "tasks",
        "GruntGulp",
        "Configured",
        "pomxml",
        "project",
        "Maven",
        "Environment",
        "Java",
        "J2EE",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "AJAX",
        "NodeJS",
        "Bootstrap",
        "JSP",
        "JNDI",
        "Oracle",
        "SQL",
        "Server",
        "Spring",
        "Factory",
        "Spring",
        "cloud",
        "Hibernate",
        "RabbitMQ",
        "Spring",
        "MVC",
        "Spring",
        "JDBC",
        "JDBC",
        "Amazon",
        "WebServices",
        "SearchSOA",
        "Serviceoriented",
        "Architecture",
        "REST",
        "JAXRS",
        "Jersey",
        "JUnit",
        "JAXB",
        "Mongo",
        "DBCICD",
        "Docker",
        "WebSphere",
        "Micro",
        "Services",
        "JIRA",
        "Maven",
        "GIT",
        "RAD",
        "Jenkins",
        "Unix",
        "Grunt",
        "Gulp",
        "Jasmine",
        "Salesforce",
        "Agile",
        "Methodology",
        "Full",
        "Stack",
        "Developer",
        "Health",
        "Care",
        "Management",
        "Systems",
        "Irving",
        "TX",
        "December",
        "April",
        "Responsibilities",
        "SDLC",
        "software",
        "development",
        "life",
        "cycle",
        "application",
        "requirement",
        "analysis",
        "Agile",
        "Methodology",
        "define",
        "application",
        "business",
        "requirements",
        "efforts",
        "Functional",
        "Architects",
        "UI",
        "HTML5",
        "CSS3",
        "JSP",
        "JavaScript",
        "cross",
        "browser",
        "functionality",
        "user",
        "interface",
        "client",
        "side",
        "module",
        "architecture",
        "AngularJS",
        "Framework",
        "Configured",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "multitude",
        "applications",
        "Amazon",
        "cloud",
        "formation",
        "servers",
        "AWS",
        "Docker",
        "Docker",
        "files",
        "version",
        "Expertise",
        "container",
        "technologies",
        "software",
        "Docker",
        "Manipulated",
        "data",
        "CRUD",
        "Create",
        "Read",
        "Update",
        "Delete",
        "operations",
        "SQL",
        "database",
        "management",
        "system",
        "database",
        "access",
        "data",
        "transmission",
        "web",
        "service",
        "Amazon",
        "EC2",
        "cloud",
        "VPCs",
        "security",
        "groups",
        "databases",
        "AWS",
        "RDS",
        "storage",
        "S3",
        "bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "functionality",
        "Spring",
        "Boot",
        "Spring",
        "JNDI",
        "Spring",
        "Core",
        "Annotations",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "APIs",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "spring",
        "Data",
        "Framework",
        "features",
        "Spring",
        "JDBC",
        "Spring",
        "data",
        "JPA",
        "Spring",
        "ORM",
        "classes",
        "JDBC",
        "template",
        "database",
        "operations",
        "Data",
        "Sources",
        "REST",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Security",
        "Authentication",
        "Authorization",
        "application",
        "POJO",
        "objects",
        "Hibernate",
        "ObjectRelational",
        "Mapping",
        "ORM",
        "tool",
        "data",
        "SQL",
        "Server",
        "swagger",
        "project",
        "API",
        "design",
        "build",
        "document",
        "Web",
        "services",
        "Spring",
        "security",
        "authentication",
        "Java",
        "Web",
        "Tokens",
        "Layer",
        "Seven",
        "frontend",
        "Backend",
        "Created",
        "Ant",
        "file",
        "application",
        "WebLogic",
        "Developed",
        "JUnit",
        "Test",
        "Cases",
        "Mockito",
        "framework",
        "memory",
        "H2DB",
        "JUnit",
        "unit",
        "testing",
        "application",
        "HARVEST",
        "version",
        "control",
        "tool",
        "Configured",
        "pomxml",
        "project",
        "Maven",
        "Experience",
        "Log4J",
        "functionalities",
        "reports",
        "Version",
        "Project",
        "Stories",
        "AGILE",
        "Methodology",
        "Environment",
        "Java",
        "J2EE",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "AJAX",
        "NodeJS",
        "Bootstrap",
        "JSON",
        "JSP",
        "JNDI",
        "DB2",
        "SQL",
        "Server",
        "Spring",
        "data",
        "JPA",
        "Spring",
        "AOPBean",
        "Factory",
        "Spring",
        "cloud",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "JDBC",
        "JDBC",
        "Amazon",
        "WebServices",
        "Elastic",
        "Search",
        "RDS",
        "S3SOA",
        "Architecture",
        "REST",
        "JAXRS",
        "Jersey",
        "JUnit",
        "JAXB",
        "Docker",
        "WebSphere",
        "Micro",
        "Services",
        "Version",
        "Maven",
        "Harvest",
        "Eclipse",
        "IDE",
        "Jenkins",
        "Unix",
        "Grunt",
        "Gulp",
        "Jasmine",
        "Salesforce",
        "Agile",
        "Methodology",
        "Full",
        "Stack",
        "Developer",
        "ATT",
        "Alpharetta",
        "GA",
        "January",
        "November",
        "Responsibilities",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "application",
        "methodology",
        "GUI",
        "interface",
        "Web",
        "pages",
        "HTML5",
        "CSS3",
        "Java",
        "script",
        "JQuery",
        "validations",
        "form",
        "field",
        "validation",
        "HTML5",
        "Spring",
        "MVC",
        "design",
        "patterns",
        "Ajax",
        "Dependency",
        "Injection",
        "presentation",
        "business",
        "logic",
        "coupling",
        "layers",
        "business",
        "layer",
        "services",
        "components",
        "Spring",
        "IOC",
        "cross",
        "concerns",
        "Logging",
        "User",
        "Interface",
        "exceptions",
        "Transactions",
        "Spring",
        "AOP",
        "Integrated",
        "Spring",
        "DAO",
        "data",
        "access",
        "Hibernate",
        "persistence",
        "framework",
        "Hibernate",
        "Handled",
        "Transaction",
        "Management",
        "data",
        "source",
        "MQ",
        "communication",
        "messages",
        "message",
        "queue",
        "Hibernate",
        "mapping",
        "files",
        "business",
        "logic",
        "Object",
        "relationships",
        "data",
        "model",
        "Hibernate",
        "mappings",
        "domain",
        "objects",
        "Hibernate",
        "tools",
        "spring",
        "hibernate",
        "components",
        "services",
        "Hibernate",
        "spring",
        "HQL",
        "SQL",
        "databases",
        "Consumed",
        "Web",
        "Services",
        "interfaces",
        "order",
        "data",
        "form",
        "XML",
        "SOAP",
        "MySQL",
        "solutions",
        "project",
        "specifications",
        "Rest",
        "methodology",
        "service",
        "layer",
        "interface",
        "JSON",
        "data",
        "transformation",
        "AJAX",
        "JSON",
        "communication",
        "server",
        "UI",
        "Web",
        "Services",
        "XML",
        "request",
        "response",
        "SOAP",
        "UI",
        "Java",
        "platform",
        "Spring",
        "Cloud",
        "Config",
        "cloud",
        "foundry",
        "application",
        "Developed",
        "web",
        "services",
        "web",
        "services",
        "application",
        "Cloud",
        "Foundry",
        "PCF",
        "CLI",
        "knowledge",
        "Cloud",
        "Foundry",
        "Database",
        "Connectivity",
        "Hibernate",
        "mapping",
        "Spring",
        "ORM",
        "MySQL",
        "Server",
        "implementation",
        "JMS",
        "order",
        "information",
        "channel",
        "way",
        "message",
        "queue",
        "application",
        "IBM",
        "WebSphere",
        "Written",
        "LINUX",
        "shell",
        "scripts",
        "user",
        "login",
        "information",
        "log4J",
        "application",
        "logging",
        "notification",
        "tracing",
        "mechanisms",
        "Analysis",
        "Bug",
        "fixing",
        "production",
        "problems",
        "defects",
        "enhancements",
        "Maven",
        "build",
        "tool",
        "JUnit",
        "Testing",
        "Ant",
        "Scripts",
        "JIRA",
        "Project",
        "Stories",
        "AGILE",
        "Methodology",
        "Environment",
        "Java",
        "JDK",
        "J2EE",
        "EJBs",
        "JDBC",
        "XML",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "JQuery",
        "Ajax",
        "AngularJS",
        "NodeJS",
        "JSON",
        "JMS",
        "Struts",
        "Spring",
        "MVC",
        "design",
        "patterns",
        "Spring",
        "MVC",
        "Hibernate",
        "Agile",
        "Ant",
        "Maven",
        "IBM",
        "Web",
        "Sphere",
        "PHP",
        "SOAP",
        "UI",
        "JNDI",
        "Log4J",
        "MySQL",
        "Server",
        "JIRA",
        "RMI",
        "Intellij",
        "IDE",
        "LINUX",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Health",
        "Connection",
        "Minnesota",
        "January",
        "December",
        "Responsibilities",
        "client",
        "requirement",
        "analysis",
        "application",
        "design",
        "Extreme",
        "Programming",
        "methodology",
        "software",
        "development",
        "development",
        "User",
        "Interfaces",
        "HTML",
        "JSP",
        "JS",
        "CSS",
        "AJAX",
        "Used",
        "Dependency",
        "Injection",
        "feature",
        "Spring",
        "framework",
        "dependency",
        "objects",
        "wire",
        "objects",
        "business",
        "classes",
        "Spring",
        "framework",
        "Spring",
        "core",
        "IOCBean",
        "Factory",
        "Spring",
        "Web",
        "Spring",
        "Security",
        "persistence",
        "layer",
        "Data",
        "access",
        "objects",
        "DAO",
        "pattern",
        "JDBC",
        "Hibernate",
        "Developed",
        "costume",
        "queries",
        "Hibernate",
        "criteria",
        "SQL",
        "HQL",
        "inheritance",
        "domain",
        "objects",
        "table",
        "class",
        "hierarchy",
        "strategy",
        "Configured",
        "EH",
        "Cache",
        "tables",
        "storage",
        "area",
        "SOA",
        "architecture",
        "WSDL",
        "Mainframe",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "UDDI",
        "XML",
        "CXF",
        "framework",
        "toolApache",
        "Commons",
        "Developed",
        "Stateless",
        "session",
        "beans",
        "parser",
        "frame",
        "work",
        "user",
        "request",
        "domain",
        "object",
        "DAO",
        "design",
        "pattern",
        "business",
        "request",
        "business",
        "delegate",
        "object",
        "SOAP",
        "web",
        "services",
        "XML",
        "data",
        "HTTP",
        "parsing",
        "XML",
        "construction",
        "logic",
        "XML",
        "parser",
        "APIs",
        "JAXB",
        "user",
        "interface",
        "JSP",
        "Struts",
        "validation",
        "framework",
        "client",
        "side",
        "server",
        "side",
        "validation",
        "store",
        "Procedures",
        "requirements",
        "Client",
        "response",
        "times",
        "services",
        "tables",
        "triggers",
        "procedures",
        "SQL",
        "queries",
        "integrity",
        "constraints",
        "views",
        "databases",
        "Oracle",
        "TOAD",
        "tool",
        "application",
        "JMS",
        "JNDI",
        "Server",
        "Hibernate",
        "ORM",
        "tool",
        "persistence",
        "data",
        "Oracle",
        "database",
        "Stored",
        "Procedures",
        "PLSQL",
        "Scripts",
        "build",
        "process",
        "Web",
        "Logic",
        "Server",
        "Developed",
        "SQL",
        "data",
        "database",
        "business",
        "client",
        "performance",
        "parameters",
        "Jenkins",
        "management",
        "tool",
        "integration",
        "process",
        "errors",
        "loggers",
        "components",
        "unit",
        "test",
        "cases",
        "business",
        "scenarios",
        "use",
        "case",
        "sequences",
        "GIT",
        "version",
        "control",
        "tool",
        "unit",
        "test",
        "cases",
        "JUNIT",
        "UNIX",
        "environment",
        "development",
        "Environment",
        "Java",
        "JEE",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "Spring",
        "dependency",
        "injection",
        "AOP",
        "Spring",
        "corebean",
        "factoryIOC",
        "Web",
        "Struts",
        "Hibernate",
        "JMS",
        "Clear",
        "case",
        "WebLogic",
        "Server",
        "Web",
        "services",
        "SOAP",
        "WSDL",
        "Mainframe",
        "JNDI",
        "UDDI",
        "JAXRPC",
        "JAXB",
        "Log4j",
        "Oracle",
        "Rally",
        "JUnit",
        "Jenkins",
        "GIT",
        "TOAD",
        "UNIX",
        "Java",
        "Developer",
        "Colonial",
        "Life",
        "Insurance",
        "Columbia",
        "SC",
        "May",
        "December",
        "Responsibilities",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "application",
        "methodology",
        "Spring",
        "MVC",
        "design",
        "patterns",
        "Dependency",
        "Injection",
        "presentation",
        "business",
        "logic",
        "coupling",
        "layers",
        "business",
        "layer",
        "services",
        "components",
        "Spring",
        "IOC",
        "cross",
        "concerns",
        "Logging",
        "User",
        "Interface",
        "exceptions",
        "Transactions",
        "Spring",
        "AOP",
        "SOAP",
        "web",
        "services",
        "functions",
        "data",
        "MainFrame",
        "Established",
        "Database",
        "Connectivity",
        "JDBC",
        "Hibernate",
        "mapping",
        "Spring",
        "ORM",
        "Oracle",
        "Developed",
        "user",
        "interfaces",
        "policy",
        "owner",
        "module",
        "Swing",
        "JSP",
        "HTML",
        "CSS",
        "policy",
        "owner",
        "business",
        "logic",
        "Stateless",
        "Enterprise",
        "Java",
        "Beans",
        "EJBs",
        "designing",
        "development",
        "DAO",
        "Data",
        "Access",
        "Objects",
        "policy",
        "owner",
        "module",
        "application",
        "components",
        "Apache",
        "Struts",
        "Framework",
        "Performed",
        "server",
        "side",
        "validations",
        "Struts",
        "Developed",
        "Business",
        "tier",
        "Presentation",
        "tier",
        "IBM",
        "WSAD",
        "Written",
        "LINUX",
        "shell",
        "scripts",
        "user",
        "login",
        "information",
        "Unit",
        "testing",
        "System",
        "testing",
        "application",
        "test",
        "cases",
        "unit",
        "testing",
        "JUnit",
        "JIRA",
        "Project",
        "Stories",
        "Agile",
        "Methodology",
        "CVS",
        "version",
        "Repository",
        "maintenance",
        "Environment",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "JDBC",
        "Hibernate",
        "JSP",
        "HTML",
        "CSS",
        "IBM",
        "WSAD",
        "WebSphere",
        "Studio",
        "Application",
        "Developer",
        "MainFrame",
        "IBM",
        "WebSphere",
        "Application",
        "Server",
        "CSS",
        "IBM",
        "Rational",
        "Rose",
        "DB2",
        "Jira",
        "CVS",
        "Junior",
        "Java",
        "Developer",
        "World",
        "Bank",
        "Washington",
        "DC",
        "August",
        "May",
        "Responsibilities",
        "responsibilities",
        "level",
        "architecture",
        "development",
        "Design",
        "architecture",
        "J2EE",
        "MVC",
        "framework",
        "interfaces",
        "HTML",
        "JSP",
        "pages",
        "Struts",
        "Presentation",
        "View",
        "Developed",
        "Servlets",
        "JBoss",
        "user",
        "interfaces",
        "JSPs",
        "custom",
        "tags",
        "JSTL",
        "Taglib",
        "business",
        "classes",
        "functions",
        "controller",
        "classes",
        "Struts",
        "API",
        "J2EE",
        "design",
        "patterns",
        "Data",
        "Access",
        "Object",
        "DAO",
        "business",
        "tier",
        "integration",
        "Tier",
        "layer",
        "project",
        "Message",
        "beans",
        "messages",
        "Java",
        "message",
        "queue",
        "CMP",
        "entity",
        "beans",
        "persistence",
        "business",
        "logic",
        "implementation",
        "Development",
        "database",
        "interaction",
        "code",
        "JDBC",
        "API",
        "use",
        "SQL",
        "Query",
        "Statements",
        "statement",
        "InspectionReview",
        "quality",
        "deliverables",
        "Design",
        "Documents",
        "EJBs",
        "Session",
        "Entity",
        "Beans",
        "business",
        "processing",
        "database",
        "access",
        "Wrote",
        "SQL",
        "Scripts",
        "procedures",
        "SQL",
        "Loader",
        "reference",
        "data",
        "Tortoise",
        "SVN",
        "version",
        "files",
        "responsibility",
        "code",
        "merges",
        "branch",
        "trunk",
        "branch",
        "feature",
        "implementation",
        "Maven",
        "build",
        "tool",
        "purpose",
        "Environment",
        "Java",
        "J2EE",
        "Java",
        "Servlets",
        "JSP",
        "Struts",
        "HTML",
        "EJB",
        "MVC",
        "Framework",
        "JDBC",
        "Maven",
        "JBoss",
        "SQL",
        "Oracle",
        "Tortoise",
        "SVN",
        "Apache",
        "Tomcat",
        "Education",
        "Bachelors",
        "Skills",
        "JAVA",
        "years",
        "HIBERNATE",
        "years",
        "JSP",
        "years",
        "DATABASE",
        "years",
        "JDBC",
        "years",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "C",
        "C",
        "Java",
        "J2EE",
        "SQL",
        "PLSQL",
        "J2EE",
        "Technologies",
        "Servlets",
        "JDBC",
        "JSP",
        "JSF",
        "JMS",
        "EJB",
        "Java",
        "Security",
        "JMS",
        "Rabbit",
        "MQ",
        "MarkupXML",
        "Technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Ajax",
        "PHP",
        "XML",
        "XSD",
        "XSLXSLT",
        "SAXDOM",
        "Node",
        "JS",
        "React",
        "JS",
        "JSON",
        "Tools",
        "Framework",
        "Struts",
        "Spring",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Security",
        "OAUTH2",
        "JSF",
        "JUnit",
        "SOAP",
        "UI",
        "PHP",
        "Apache",
        "ANT",
        "Maven",
        "Apache",
        "camel",
        "CICD",
        "Web",
        "services",
        "Restful",
        "UDDI",
        "WSDL",
        "JAXRPC",
        "JAXRS",
        "JAXWS",
        "JAXB",
        "Axis2",
        "Micro",
        "Services",
        "WebApp",
        "Servers",
        "IBM",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "JBoss",
        "Web",
        "Logic",
        "Server",
        "Database",
        "Oracle",
        "SQLServer",
        "Netezza",
        "MySQL",
        "server",
        "TOAD",
        "MongoDBNoSQL",
        "IDEs",
        "Eclipse",
        "Intellij",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "RAD",
        "mapping",
        "Hibernate",
        "IBATIS",
        "Testing",
        "Tools",
        "Others",
        "JUnit",
        "Soap",
        "UI",
        "Putty",
        "Log4j",
        "Jira",
        "Version",
        "Control",
        "Tortoise",
        "SVN",
        "CVS",
        "Rational",
        "Clear",
        "case",
        "GitHub",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Jenkins",
        "Docker",
        "OS",
        "Environment",
        "UNIX",
        "Linux",
        "Cloud",
        "Technologies",
        "AWS",
        "EC2",
        "S3",
        "bucket",
        "ELB",
        "AutoScaling",
        "SNS",
        "SQS",
        "AMI",
        "IAM",
        "Dynamo",
        "DB",
        "Cloud",
        "front",
        "search",
        "Elastic",
        "Beanstalk",
        "Virtual",
        "Cloud",
        "VPC",
        "Micro",
        "Services",
        "Pivotal",
        "Cloud",
        "FoundryPCF",
        "Docker"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:39:00.800298",
    "resume_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer Intuit Inc South Jordan UT Having 8 years on requirement analysis design development testing implementation and support using Object Oriented Methodologies and JavaJ2EE technologies Actively participated in every phase of Software Development Life cycle SDLC and proficient with software development methods like Agile scrum and Water Fall Expertise in client scripting language and server scripting languages like HTML5 CSS3 JavaScript JQuery Ajax AngularJS JSP NodeJS React JS PHP Bootstrap Expert in Core Java with strong understanding of Collections Multithreading Event handling Exception handling and Generics Utilized Java 8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application Experience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM DynamoDB Elastic Search Virtual Private Cloud VPC through AWS Console and API Integration Hands on experience with Amazon web services AWS and Amazon cloud technologies such as Amazon EC2 virtual servers and Amazon Cloud Watch monitoring Deploy application updates to AWS and monitored the load balancing of different instances Experience using Spring MVC Spring Boot Spring DAO Spring Data Spring IOC Spring Annotations Spring AOP Spring Transactions and Spring SecuritySSL OAUTH2 Extensive experience working in Spring framework Struts framework OR Mapping Hibernate framework and web services Strong work experience in application integration and communicating using SOA Web Services such as JAXRPC JAXRS JAXWS SOAP WSDL UDDI and XML over HTTP Apache CXF JAXB XSD Axis 2 and RESTFUL web services Strong Experience in database design using PLSQL to write Stored Procedures Functions Triggers Indexers and proficiency in writing complex queries using Oracle IDM DB2 SQL Server and MySQL MongoDB Expertise in XML technologies such as XSL XSLT XML schemas XPath XForms XSLFO and parsers like SAX DOM Experienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications Used Apache ActiveMQ and Apache Camel as JASMS provider Experience in developed logging and standard mechanism based on Log4j and SLF4j Experience in version control system tools like GIT CVS and SVN Experience in unit testing the applications using JUnit TDD Framework Worked on implementing full life cycle of software development process SDLC in using version control tools like Rational Clear Case Tortoise SVN CVS Concurrent Version System Handson experience working with Continuous Integration CI buildautomation tools such as Maven SVN CVS Jenkins and Apache Ant Significant experience in web development tools like Spring Tool Suite RAD Intellij Eclipse Hands on experience with Windows UNIX and Linux Environments Having Experience on Shell Scripting and Deployment of Applications in Server Experience in designing developing and deploying J2EE applications on Web sphere Web logic Apache Tomcat and JBoss application Servers Excellent written and verbal communication skills Analytical Problem Solving skills strict attention to detail and ability to work independently leadwork within a team environment Authorized to work in the US for any employer Work Experience Full Stack Developer Intuit Inc Plano TX May 2017 to Present Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Interacted with various business user groups for gathering the requirements for Salesforce implementation and documented the Business and Software Requirements Identify improvements to enhance CICD Involved in designing the client side module architecture based on new Angular Framework Used NodeJS to run AngularJS on server with mock JSON data and completed the UI development independent of server Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Oracle 11g was used as the database for the application which was hosted in the cloud using Amazon RDS service Deployed the built docker image on Mesos using Marathon Using a multi container setup deployed on Mesos Experienced in setting up Amazon EC2 instances virtual private cloud VPCs and security groups Setting up databases in AWS using RDS storage using S3 bucket and configuring instance backups to S3 bucket All the functionality is implemented using Spring Boot Micro Services and Hibernate ORM Used Spring Core Annotations for Spring DI Spring MVC for REST APIs Spring Security and Spring Boot for Microservices Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring MVC module to develop MVC Architecture Developed the Controller to handle the requests and responses Used Core Java to develop Business Logic as Spring Beans Extensively used Core Java 18 concepts and implemented Collections IO Exception Handling and Generics in logic design and development Configured Spring Container to implement IOCDI of the Spring Beans Bean Factory and to manage the beans life circle Used Spring Security for Authentication and Authorization of the application Used spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template to perform the database the database operations by connecting Data Sources available Implemented Spring AOP for declarative transaction management Using Hibernate ORM tool for Memory mapping objectoriented domain model to relational database Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Jersey to implement Restful Web Service and used XML form to transfer the data Used Rest Controllers to replace the existing operations layer which acts as bridge between business layer and the UI Implemented OAuth20 for authentication based web application and accessed their APIs for fetching data services Used Grunt as task runner Used MongoDB as data storage and utilized aspects like replica sets sharing and clever document design to make service extensible scale and feature wise Responsible for Production support activities like Jobs monitoring log the load statistics analysis and resolve in case of any production issues coordinate with business to fix any source file issues coordinate with DBA to resolve any table space or file system related issues Deployed the Web Application in WebSphere Developed Unit Test Cases Used JUnit for unit testing of the application Developed the unit testing scripts using Jasmine for testing the JavaScript code and automation of the tasks with GruntGulp Configured pomxml to deploy the project using Maven Environment Java J2EE HTML5 CSS3 OAuth20 JavaScript JQuery AJAX AngularJS NodeJS Bootstrap JSON JSP JNDI Oracle SQL Server 20081216 Spring AOPBean Factory Spring cloud Hibernate RabbitMQ Spring MVC Spring JDBC JDBC Amazon WebServices Elastic SearchSOA Serviceoriented Architecture REST JAXRS Jersey JUnit JAXB Mongo DBCICD Docker WebSphere Micro Services JIRA Maven GIT RAD Jenkins Unix Grunt Gulp Jasmine Salesforce Agile Methodology Full Stack Developer Health Care Management Systems Irving TX December 2016 to April 2017 Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Followed Agile Methodology in analyze define and document the application which will support functional and business requirements Coordinate these efforts with Functional Architects Developed the UI using HTML5 CSS3 JSP and JavaScript for interactive cross browser functionality and complex user interface Involved in designing the client side module architecture based on AngularJS Framework Designed Configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon cloud formation Virtualized the servers on AWS using the Docker created the Docker files and version controlled them Expertise in container technologies and writing containerized software Docker Manipulated data using CRUD Create Read Update and Delete operations of SQL database management system and handled database access and data transmission based on RESTful web service Experienced in setting up Amazon EC2 instances virtual private cloud VPCs and security groups Setting up databases in AWS using RDS storage using S3 bucket and configuring instance backups to S3 bucket All the functionality is implemented using Spring Boot and Spring JNDI Used Spring Core Annotations for Spring DI Spring MVC for REST APIs Spring Security and Spring Boot Used spring Data Framework to use the features of Spring JDBC Spring data JPA and Spring ORM classes like JDBC template to perform the database operations by connecting Data Sources available Designed and developed the REST based Micro Services using the Spring Boot and Spring Cloud Used Spring Security for Authentication and Authorization of the application Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Implemented swagger in project for API design build document and consume RESTful Web services Implemented Spring security and authentication using Java Web Tokens using Layer Seven on both frontend and Backend Created Ant build file to build the application and deployed in WebLogic Developed JUnit Test Cases using Mockito framework and also using in memory H2DB Used JUnit for unit testing of the application Used HARVEST for version control tool Configured pomxml to deploy the project using Maven Experience on Log4J to validate functionalities and developed customized reports Used Version One for tracking the Project Stories in AGILE Methodology Environment Java J2EE HTML5 CSS3 JavaScript JQuery AJAX AngularJS NodeJS Bootstrap JSON JSP JNDI DB2 SQL Server Spring data JPA Spring AOPBean Factory Spring cloud Hibernate Spring MVC Spring JDBC JDBC Amazon WebServices Elastic Search RDS S3SOA Serviceoriented Architecture REST JAXRS Jersey JUnit JAXB Docker WebSphere Micro Services Version One Maven Harvest Eclipse IDE Jenkins Unix Grunt Gulp Jasmine Salesforce Agile Methodology Full Stack Developer ATT Alpharetta GA January 2015 to November 2016 Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using AGILE methodology Created userfriendly GUI interface and Web pages using HTML5 CSS3 Java script JQuery AngularJS Defined new validations through AngularJS for the form field validation implemented through HTML5 Used Spring MVC design patterns Ajax and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate Implemented persistence framework using Hibernate Handled Transaction Management using the provided data source Used Active MQ for asynchronous communication by putting the messages in the message queue Responsible for designing Hibernate mapping files based on business logic and Object relationships Created data model and generated Hibernate mappings and domain objects using Hibernate tools Integrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring Extensively used HQL and SQL for querying databases Consumed Web Services to interact with other external interfaces in order to exchange the data in the form of XML and by using SOAP Designed and implemented MySQL solutions as per project specifications Used Rest methodology for the service layer interface and used JSON for the data transformation Developed various AJAX and JSON calls for the communication between the server and the UI Involved in developing Web Services to send XML request and reading the response SOAP UI from Java platform Worked on Spring Cloud Config Pivotal cloud foundry to deploy application to cloud Developed RESTful web services are deployed to pivotal web services Deployed application using Pivotal Cloud Foundry PCF CLI Good knowledge on Pivotal Cloud Foundry Established Database Connectivity using Hibernate OR mapping with Spring ORM for MySQL Server Experienced in implementation of JMS in order to exchange information over reliable channel in an asynchronous way by using ActiveMQ as a message queue Packaged and deployed the application in IBM WebSphere Written LINUX shell scripts to identify user login information Used log4J for application logging and notification tracing mechanisms Analysis and Bug fixing of the production problems and defects along with enhancements Used Maven as the build tool Used JUnit Testing and Ant Scripts Used JIRA for tracking the Project Stories in AGILE Methodology Environment Java JDK J2EE EJBs JSPServlet JDBC XML HTML CSS Java Script JQuery Ajax AngularJS NodeJS JSON JMS Struts Spring MVC design patterns ActiveMQ Spring MVC Hibernate Agile Ant Maven IBM Web Sphere PHP SOAP UI JNDI Log4J MySQL Server 20081216 JIRA RMI Intellij IDE LINUX Sr JavaJ2EE Developer Health Connection Minnesota January 2014 to December 2014 Responsibilities Involved in client requirement gathering analysis application design of Extreme Programming using Agile methodology with iterative and incremental software development Involved in the development of the User Interfaces using AngularJS HTML JSP JS CSS and AJAX Used Dependency Injection feature of Spring framework to inject dependency into objects and to wire objects of business classes Used Spring framework including Spring core IOCBean Factory Spring Web Spring Security Developed persistence layer Data access objects using DAO pattern JDBC Hibernate Developed costume queries using Hibernate criteria native SQL and HQL Developed inheritance domain objects using table per class hierarchy strategy Configured EH Cache to load the static tables into secondary storage area Implemented SOA architecture with WSDL Mainframe Web Services using SOAP WSDL UDDI and XML using CXF framework toolApache Commons Developed Stateless session beans to parse parser frame work and process the user request into domain object DAO design pattern to delegate the business request to the business delegate object Used SOAP web services and XML data over HTTP Developed necessary parsing and XML construction logic using XML parser APIs JAXB Developed user interface using JSP Struts published validation framework to support client side and server side validation Used built in store Procedures to reach the requirements from the Client to improve the response times of the services Created tables triggers stored procedures SQL queries joins integrity constraints and views for multiple databases Oracle using TOAD tool Developed an automated application using JMS for messaging and JNDI to interact with the Server Used Hibernate as ORM tool to store the persistence data into the Oracle database Created Stored Procedures using PLSQL Developed Scripts for the build process and deployed in Web Logic Server Developed customized SQL for retrieving the data from the database worked with business and client to reach the performance parameters Used Jenkins as build management tool for continuous integration process Implemented Log4J for logging errors tracking using loggers components Developed unit test cases to test business scenarios associated with each use case sequences Used GIT for version control tool Experienced in writing unit test cases using JUNIT Worked on UNIX environment for development Environment Java JEE JSP HTML CSS JavaScript AngularJS Spring dependency injection AOP Spring corebean factoryIOC Web Struts Hibernate JMS Clear case WebLogic Server Web services SOAP WSDL Mainframe JNDI UDDI JAXRPC JAXB Log4j Oracle Rally JUnit Jenkins GIT TOAD UNIX Java Developer Colonial Life Insurance Columbia SC May 2010 to December 2013 Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using Agile methodology Used Spring MVC design patterns and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Involved in developing SOAP and Restful web services functions to get data from the MainFrame Established Database Connectivity using JDBC Hibernate OR mapping with Spring ORM for Oracle Developed user interfaces for policy owner module using Swing JSP HTML and CSS Developed policy owner business logic using Stateless Enterprise Java Beans EJBs Participated in designing and development of DAO Data Access Objects for policy owner module Developed application components using Apache Struts Framework Performed server side validations using Struts validations Developed Business tier and Presentation tier using IBM WSAD Written LINUX shell scripts to identify user login information Involved in Unit testing and System testing of the application Developed test cases and performed unit testing using JUnit Used JIRA for tracking the Project Stories in Agile Methodology Used CVS for version Repository maintenance Environment Spring MVC Spring IOC Spring AOP JDBC Hibernate JSP HTML CSS IBM WSAD WebSphere Studio Application Developer MainFrame IBM WebSphere Application Server CSS IBM Rational Rose DB2 Jira CVS Junior Java Developer World Bank Washington DC August 2009 to May 2010 Responsibilities Technical responsibilities included high level architecture and rapid development Design architecture following J2EE MVC framework Developed interfaces using HTML JSP pages and Struts Presentation View Developed and implemented Servlets running under JBoss Designed the user interfaces using JSPs developed custom tags and used JSTL Taglib Developed various java business classes for handling different functions Developed controller classes using Struts and tiles API Used J2EE design patterns and Data Access Object DAO for the business tier and integration Tier layer of the project Designed and developed Message driven beans that consumed the messages from the Java message queue Implemented CMP entity beans for persistence of business logic implementation Development of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement InspectionReview of quality deliverables such as Design Documents Developed EJBs Session and Entity Beans for business processing and database access Wrote SQL Scripts Stored procedures and SQL Loader to load reference data Used Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Used Maven as a build tool for deployment purpose Environment Java J2EE Java Servlets JSP Struts HTML EJB MVC Framework JDBC Maven JBoss SQL Oracle Tortoise SVN Apache Tomcat Education Bachelors Skills JAVA 9 years HIBERNATE 8 years JSP 9 years DATABASE 9 years JDBC 9 years Additional Information TECHNICAL SKILLS Languages C C Java J2EE SQL PLSQL J2EE Technologies Servlets JDBC JSP JSF JMS EJB Java Security JMS ActiveMQ Rabbit MQ MarkupXML Technologies HTML CSS JavaScript JQuery Ajax AngularJS PHP XML XSD XSLXSLT SAXDOM Node JS React JS JSON Tools Framework Struts Spring Hibernate Spring MVC Spring IOC Spring AOP Spring Boot Spring Cloud Spring Security OAUTH2 JSF JUnit SOAP UI PHP Apache ActiveMQ ANT Maven Apache camel CICD Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Micro Services WebApp Servers IBM Web Sphere Apache Tomcat JBoss Web Logic Server Database Oracle SQLServer 20081216 Netezza MySQL server TOAD MongoDBNoSQL IDEs Eclipse Intellij Spring Tool Suite STS RAD OR mapping Hibernate IBATIS Testing Tools Others JUnit Soap UI Putty Log4j and Jira Version Control Tortoise SVN CVS Rational Clear case GitHub Build Tools Ant Maven Jenkins Docker OS Environment Windows UNIX Linux Cloud Technologies AWS EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Cloud front Elastic search Elastic Beanstalk Virtual Private Cloud VPC Micro Services Pivotal Cloud FoundryPCF Docker",
    "unique_id": "21db5539-831e-4717-95df-a437fe49c384"
}