{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Verizon Atlanta GA Overall 8 years of extensive experience in objectoriented designanalysis Java development web services for serviceoriented architecture and data modeling skilled at progressing from problem statement to welldocumented designs and code Proficient experience in Scala to develop webapplications analyze data with Spark and implementing the same in AWS lambda functions In depth knowledge and work experience in managing NoSQL based databases specifically like MongoDB and managing very high load of transactions Proficient with various Software Development Life Cycle SDLC methodologies like Agile Scrum Experienced in UI frame works such as jQuery Ajax Google Web Toolkit GWT JavaScript Node JS React JS Backbone JS AngularJS Tag Libraries Custom Tags Strong experience in designing and developing data models and accessing from Java applications using SQL PLSQL ORM tool Hibernate and has experience with NoSQL databases like MongoDB Cassandra Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache Good experience in using Amazon Web Services AWS and AWS SNSSQS for delivering messages Deploy application updates to AWS and monitored the load balancing of different instances Experience in developing web services like SOAP and REST and consuming web services with Python and Scala Extensively used Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experienced in Full stack UI technologies using Grunt JS Gulp Server Yeoman generator for Angular Expertise in design and development of various web and enterpriselevel applications using JavaJ2EE technologies such as Spring Hibernate EJB JPA JSF Struts framework Servlets Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Experience in implementing client server business applications using Microservices Designed and developed Microservices business components using Spring Boot In depth knowledge on core java concepts such as OOPS Collections Threading generics exception handling Thread pools concurrent utilities File IO and Serialization Good knowledge in Hadoop Architecture with various components such as HDFS Flume Pig and MapReduce Good experience with messaging systems like Kafka event sourcing Hands on experience in XML related technologies JAXP SAX DOM parsers for parsing XML in to Java object Proficient in developing Web Services related technologies frame works WSDL SOAP REST JAXWS JAXB JAXRPC AXIS and Jersey SOAP UI Experienced with JAXRS specification like Jersey and REST Easy to Implement REST based applications Also worked on creation of Docker images Containers pushpull and on integration with Spring Boot Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Extensively worked on UNIX shell scripts to do the batch processing Hands on experience in configuring and using Maven Ant build tools and Jenkins to deploy automated builds in different environments Expert in using version control tools such as such as SVN CSV and GIT Experienced in writing and implementing unit test cases using Junit Easy mock and Mockito Ability to adapt to evolving technology strong sense of responsibility and accomplishment Work Experience Full Stack Java Developer Verizon Irving TX July 2017 to Present Description Verizon Wireless is an American telecommunications company a wholly owned subsidiary of Verizon Communications which offers wireless products and services Verizon wireless customer can do all sorts of activities like activation of phone downloading ringtones changing bill cycle paying their bill changing mobile number changing device changing SIM card device software upgrade downloading widgets Verizon apps accessing NFL TV etc The purpose of this project was to support all real time customer level APIs throughout the day 120140 millions Responsibilities Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Sprint planning and estimation for user stories in Agile Environment Designed and Developed enterprise level angular component libraries such as datatables autosuggestion pagination etc Implemented React JS on serverside validations to handle actions and Events and Encapsulation Worked on migration of AngularJS to Angular 20 Developed the application using Java 8 and implemented its features like lambdas Expressions Time API Streams functional interfaces collectors default methods type interfaces for each Used multithreaded environment to run processes asynchronously using different future calls to access the data Extensively used various Spring Framework modules like MVC Dependency Injection IOC Auto Wiring Spring Security and AOP Created and injected spring services spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Spring Boot Micro Services were developed using Micro Service architecture with RESTFUL and Apache Kafka Exceptionally handled heavy traffic with the help of Spring Ribbon and Kafka broker service Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications Implemented functionalities using Spring IO Spring Boot with Thymeleaf and Hibernate ORM Spring security is used for authorizationauthentication session fixation click jacking cross site request forgery Configured the Hibernate configuration files to persist the data to the Mongo DB Database Developed Python and Scala based API RESTful Web Service to track the events Used Spring Tool Suite STS which is based on Eclipse to develop and debug application code Creating REST based Web Services by establishing links using Hateoas from spring based Applications Worked on Scala to manage parallel processing concurrent programming with mutable state parsing of files and developed applications using Play framework Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Worked on Swagger UI to interact with the APIS Designed and documented APIs using Swagger Migration of Existing Application to AWS cloud Used Amazon Web Services AWS like EC2 S3 RDS cloud watch and Cloud Front for promoting code in various environments Deployed Microservices as Restful Java Web Services on Amazon Elastic Beanstalk Docker containers were used to deploy the applications as part of scaling application using Micro services and increase isolation Image creation pushing and pulling of images was also part of deploying application Using Kafka on publishsubscribe messaging as a distributed commit log have experienced in its fast and Python and Scalable GIT is used for the version control Maven is used for build script and configured log4j log files Using JUnit test in Eclipse developed Unit test cases and test suite Curl was also implemented to test Used JIRA for project management Issue tracking and monitoring errors and fixed the errors Used Jenkins as the integration tool and improved Scalability of applications on crossplatforms Used Drools Decision table using excel sheets with a Spring MVC project Involved in System Testing Integration Testing and Production Testing on WebLogic Server Worked on Karma to unit test the Angular API modules Track production incidents identify and prioritize scope for bugs and enhancements conduct reviews with State counterparts and plan releases Environment J2EE Spring Spring boot Spring MVC Java Scripts Hibernate Rest Maven JUnit Angular HystrixDashboard AWS Netflix Ribbon Spring Kafka MAVEN JUnit Jenkins Agile Methodology Eclipse Curl GIT Mongo DB Log4j PLSQL STS Docker Hateoas WebLogic Application Server Karma JavaJ2EE Developer Liberty Mutual Insurance Seattle WA September 2016 to June 2017 Description Liberty Mutual Insurance is one of the leading Auto Home Personal and Fire Insurance Provider Quote and Issue Application web portal application which is designed and developed especially for Liberty Mutual agents and users where they can get the Auto Home Personal Fire quotes and policies for the customers The application is designed at various milestones starting from quote new business and amendment Used Agile Methodologies to manage the full life cycle development of the project Participated in development of a well responsive Single Page Application SPA using AngularJS framework JavaScript and jQuery in conjunction with HTML CSS3 standards with frontend UI team Worked on MongoDB to manage high writing load of data setting up of replicaSet and managed millions of transactions occurring at different locations Use JSF Java Server Faces to implement component based User Interface Applications Developed server side JEE application components using Spring Core Spring MVC Annotations Servlets JDK 17 Extensively used Spring Framework modules like DIIOC Auto Wiring JDBC Templates Spring Security AOP Deployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Developing spring boot application using Micro Services architecture with Spring Eureka to maintain small and lightweight services and communication between these services are done by using API routes for the entire cluster Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Extensively used Hibernate concepts such as inheritance lazy loading dirty checking locking and transactions Hibernate DAO classes were developed to retrieve and save data using Spring framework manager classes Performance monitoring of Mongo databases with OPS  and familiar in installing and maintaining MongoDB in private Cloud Environments Worked on multiple BSON type objects and used based on requirement Developed a code for Web services using JAXWS SOAP and used SOAP UI tool for testing the services Consumed Web Services WSDL SOAP from third party for authorizing payments tofrom customers Modified existing applications to a suite of Micro Services and all Micro Services to facilitate deployment using Spring Boot and JUnit and Power Mock frameworks for unit testing Involved in developing Micro Services integrated with VSTS for CICD by automating the buildrelease process Moving existing monolithic architecture to Micro Services and migrating them to AWS cloud Created and configured AWS Elastic Load Balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Deployed and tested on WebSphere application server Configured Maven for Java automation projects and developed Maven Project Object Model POM Writing Unit test cases using JUNIT testing framework and performed unit and system testing Used Log4J to capture the log that includes runtime exceptions monitored error logs and fixed the problems Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Used IBM Clear case as version controlling system Environment Agile Servlets Bootstrap HTML CSS3 AngularJS JSP HTML XML JSF AJAX jQuery JSON Spring MVC JDK 17 EJB JMS J2EE Eclipse Spring Batch Security Transaction Hibernate Apache Tomcat MySQL PLSQL Apache Axis2 SOAP WSDL SOAPUI Microservices AWS Maven JUnit Log4j Selenium Sr Java Developer Ally Bank Detroit MI April 2015 to August 2016 DescriptionAlly Bank offers a broad array of financial banking services etc The system developed provides personal savings details of Ally bank Customers It offers a broad array of financial clients and as per the users account status offers him to take up the new schemes enrolling with the bank Upon the users request it generates the reports of user details and submits it to the user Advertises other mutual benefits and keeps track of the contact details of the users and updates them on an event if requested Responsibilities Involved in Design Code Test Integrate UAT Deployment production phases Implemented Spring MVC with JSP20 and JSP Tag libraries to facilitate user interface Adapted various design patterns like Business Delegate Singleton Service locator Session Faade Data Transfer Objects DTO and Data Access Objects DAO patterns Implemented Java and J2EE Design patterns like Business Delegate and Data Transfer Object DTO Data Access Object and Service Locator Used Angular JS as the development framework to build a singlepage application Load data from various data sources into AWS using Kafka Following Agile methodology and SCRUM meetings to track optimize and resolve impediments to meet deadlines on time Used Spring Core Annotaions for dependency injection spring Di and Spring MVC for Rest APIs and spring Boot for Microservices Developed tested and deployed Storify Business feature set in Nodejs with Express and Mongo DB backend Expertise with web based GUI architecture and development using HTML CSS JavaScript XML and Tag libraries JSTL Worked with maven 30 and Spring 30 and Spring suite to develop the coding to batch jobs Searched and fetched the records by using SOLR queries Responsible for supporting integration and testing environment Used JUnit Testing Framework for testing DAOs Created a build environment for Java using Jenkins Git Maven Artifactory and a number of reporting tools Configured Splunk database connector Configure producer and consumer coding part in java to establish connection from twitter source to AWS with popular hash tags DesignImplement large scale pubsub message queues using Apache Kafka Responsible in designing and developing reports using jasper reports Created build scripts for running components individually using Apache ANT and XML Environment Spring JMS SOAP JavaScript JSON Nodejs Spring Boot Splunk Jasper report Apache Kafka UNIX Oracle 9i JUnit SVN Log4J and ANT JavaJ2EE Developer GE Healthcare Milwaukee WI January 2013 to March 2015 Project Provider Appliances Description GE Healthcare provides transformational medical technologies and services expertise in medical imaging and information technologies medical diagnostics patient monitoring systems drug discovery biopharmaceutical manufacturing technologies performance improvement and performance services help customers to deliver better care to more Responsibilities Involved in the Software Development Life Cycle SDLC Requirements gathering Design Code Integrate and Deployment and production phases Worked on front end pages that were developed in a professional manner using HTML CSS JavaScript and JQUERY Extensively usedmodified JQUERY to perform AJAX calls for creating interactive web pages on JSON response Worked to convert HTMLCSS nonfunctional pages into dynamic JSP pages Implemented Struts Framework along with JSP20 Struts Tiles and Struts Tag libraries to facilitate user interface design Involved in test driven development TDD model using JUnit Developed validations using Struts validation framework Authentication and security in apache kafka Pubsub system JAXB parser for marshaling and unmarshaling Experienced in handling multithreading applications in java Working with WSDL and SOAP messages Used Hibernate31 to store the persistence data into the Oracle9i database Used Struts Framework to integrate the application with Hibernate31 JMS was used to sendreceive asynchronous data from various message brokers Involved in writing the ANT scripts to build the application Involved in using Log4J to create log files to debug Used JUnit Testing Framework for Unit Level Testing Worked in IBMRAD 60 to develop complete application Deployed the application on WebSphere Application Server60 WAS EnvironmentWAS Struts spring EJB Servlets 23 HTML JSP 20 JNDI Web Services JMS SOAP IBM MQ Series JavaScript JQuery WSDL UNIX Oracle 9i JUnit Java developer Gilead Sciences Foster City CA June 2011 to December 2012 Description Worked as a Java Developer to make enhancements to the existing Supply Chain Management application Initially the application was built using Spring MVC Hibernate and REST We were responsible to enhance performance effective use of spring boot to migrate Micro service to AWS Responsibilities Full System Development Lifecycle experience Participate in all aspects of the Software Development lifecycle Support existing software development efforts and develop new software modules Maintain the application MVC architecture using Spring Framework Analysis design and development of applications based on J2EE design patterns Used Hibernate ORM Tool for the backend persistence and developed DAO interfaces for interaction with the database Design build maintain web sites using authoring or scripting languages HTML5 CSS3 content creation tools management tools Created database tables and implemented SQL Stored Procedures and complex queries in Oracle SQL Developer Used JUnit for unit testing Involved in writing Multiple Service calls using Spring MVC and for version control management like GIT Hub Security platformsprotocols related to user authenticationauthorization and security implementation for APIsMicroservices Evaluate code to ensure that it is valid properly structured meets industry standards and is compatible with browsers devices or operating systems Business process and domain knowledge in Supply Chain Management Inventory Management specifically in context of ecommerce business landscape Identify locate acquire and curate data Environment Java JSP Spring Hibernate HTML5 CSS3 Tomcat Oracle GIT Eclipse Jenkins and JUnit Java Developer Hoffman Estates IL August 2009 to May 2011 Description Worked as a Java Developer to developenhance the ECommerce application in order to allow purchase of products by the customers The web application included CRMlike functionality to allow Customer Sales Representatives to process and maintain new and existing orders Responsibilities Implemented JSPs corresponding to the controller wherein the data was propagated into from the model and view object from the Controller Designed and Implemented MVC architecture using Spring Framework Provided technical guidance to business analysts gather the requirements and convert them into technical specificationsartifacts Analyzed the low level design LLD document and high level design document HLD as per the business requirements Administered and Engineered Jenkins for managing weekly Build Test and Deploy chain GIT with DevTestProd Branching Model for weekly releases Actively participated in Story Card Reviews during the transition from Waterfall to Agile Scrum Used Quality Center for change management and defect tracking Used Spring Framework as middle tier application framework persistence strategy using spring support for Hibernate for integrating with database Involved in Developing and performing Unit Testing and creating mock objects using JUnit Implemented business tier using Spring Dependency Injection in order to establish relationships between application components Developed Hibernate Mapping hbmxml file for mapping declaration Involved in writing simplex and complex SELECT queries in SQL for backend testing Created database tables and implemented SQL Stored Procedures and complex queries in Oracle SQL Developer Worked on CICD tools like Jenkins Docker in Devops Team Analyzed and performed fixes on logged application defects by comparing the system behavior to the design specifications Built and accessed the database using Hibernate with Oracle Developed unit test cases using JUnit framework Used Spring validation framework for server side validation of user data submissions Created JSP pages using standard JSTL tags as well as Struts tags Used Apache log 4j logging framework for application logging for debug purposes Environment Java JSP JSTL Spring Hibernate Oracle Eclipse Jenkins and JUnit Education Bachelors Skills JAVA 9 years JUNIT 9 years TESTING 9 years DATABASE 8 years JSP 7 years Additional Information TECHNICAL SKILLS Languages C C Java 161718 J2EE SQL PLSQL J2EE Technologies Servlets JMS EJB JDBC JSP JNDI Java Security XML web Technologies HTML5 CSS3 JavaScript jQuery Ajax AngularJS NodeJS ReactJS XML XSD XSLXSLT SAXDOM JSON Bootstrap Tools Framework Struts Spring Hibernate Spring MVC Spring IOC Spring AOP Spring Boot JSF JUnit SOAP UI Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Micro Services AWS Amazon Web Services WebApp Servers IBM Web Sphere Apache Tomcat JBoss EAP Web Logic Server Glassfish Database Oracle SQLServer MongoDBNoSQL IDEs Eclipse IntelliJ Spring Tool Suite STS RAD OR mapping Hibernate MyBatis Testing Tools Others JUnit Soap UI Mockito Rational Clear Quest JMeter StarTeam TOAD Jenkins Version Control Tortoise SVN CVS Rational Clear case GitHub OS Environment Windows UNIX Linux",
    "entities": [
        "Micro Services",
        "Devops Team Analyzed",
        "UI Experienced",
        "AJAX",
        "Analysis Design Development System Testing",
        "GUI",
        "WebSphere Application",
        "Identify",
        "Business Delegate Singleton Service",
        "UNIX",
        "Storify Business",
        "SOLR",
        "Jersey",
        "JTA",
        "Agile Environment Designed",
        "AOP Created",
        "Maven Project Object Model POM Writing Unit",
        "Detroit",
        "User Interface Applications Developed",
        "Authorization using Spring Security",
        "JSON",
        "IBM",
        "Oracle SQL Developer Worked",
        "Amazon Web Services AWS",
        "Implemented React JS",
        "EJB Servlets",
        "Responsibilities Implemented",
        "Used JUnit Testing Framework",
        "Build Test",
        "SOAP",
        "XML",
        "Supply Chain Management",
        "Atlanta",
        "Used Hibernate ORM Tool",
        "JUnit",
        "State",
        "Java object Proficient",
        "NFL TV",
        "JavaJ2EE",
        "Amazon",
        "WebSphere",
        "SIM",
        "Spring boot micro services",
        "Gilead Sciences",
        "Developed",
        "Mongo",
        "Curl",
        "Tomcat WebSphere WebLogic",
        "WebLogic Server Worked",
        "the Controller Designed",
        "Responsibilities Involved",
        "GitHub OS Environment Windows",
        "Auto Home Personal and Fire Insurance Provider Quote",
        "Waterfall",
        "Customer Sales Representatives",
        "Spring MVC IOC",
        "JQUERY",
        "Mockito Ability",
        "AWS Responsibilities Full System Development Lifecycle",
        "Spring Security",
        "API RESTful Web Service",
        "JSP",
        "Technologies HTML5",
        "Created JSP",
        "JNDI Web Services JMS SOAP",
        "Supply Chain Management Inventory Management",
        "Micro",
        "Responsibilities Involved in Design Code Test Integrate UAT Deployment",
        "Built",
        "ANT JavaJ2EE Developer",
        "JAXP SAX DOM",
        "Involved in System Testing Integration Testing and Production Testing",
        "Axis2 Micro Services",
        "Bank",
        "Docker",
        "HTML CSS JavaScript XML",
        "JSP Tag",
        "JBoss Servers",
        "MVC",
        "Spring Boot Experience",
        "Spark",
        "EJB",
        "Liberty Mutual",
        "GE Healthcare",
        "IBM Clear",
        "Data Access Objects",
        "TOAD Jenkins Version",
        "Spring Boot Micro Service",
        "API",
        "HTML CSS JavaScript",
        "Boot for Microservices Developed",
        "Used JUnit Testing Framework for Unit Level Testing Worked",
        "Oracle Developed",
        "Business Delegate",
        "Created",
        "AWS",
        "Hadoop Architecture",
        "Spring Boot Micro Services",
        "Additional Information TECHNICAL SKILLS Languages C C",
        "SELECT",
        "Seattle",
        "UNIX Oracle",
        "Oracle SQL Developer Used JUnit",
        "Developed Hibernate Mapping",
        "java",
        "User Acceptance Testing Successfully",
        "Spring MVC Hibernate",
        "RESTFUL",
        "DIIOC Auto Wiring JDBC",
        "SQL",
        "the Software Development Life Cycle SDLC Requirements gathering Design Code Integrate and Deployment",
        "OAuth Spring Transaction",
        "JAXWS SOAP",
        "Software Development",
        "GIT Hub Security",
        "JAXRS",
        "SVN CVS Rational Clear",
        "Consumed Web Services WSDL SOAP",
        "HLD",
        "CICD",
        "JUNIT",
        "Spring Eureka",
        "MVC JDK",
        "DesignImplement",
        "Multiple Service",
        "Jersey SOAP",
        "AWS Netflix Eureka Spring Hystrix",
        "File IO",
        "GIT Experienced",
        "the Auto Home Personal Fire",
        "Maven",
        "lJavaspan",
        "Power Mock",
        "ANT",
        "UI",
        "REST Easy to Implement",
        "all Micro Services",
        "Hibernate MyBatis Testing Tools Others",
        "Clients",
        "Amazon Web Services WebApp Servers",
        "Hateoas",
        "SVN",
        "Swagger Migration of Existing Application",
        "Expertise",
        "Maven Ant",
        "VSTS",
        "jQuery",
        "REST",
        "Micro Service",
        "WI",
        "JEE",
        "Verizon Communications",
        "CRMlike",
        "TDD",
        "NoSQL",
        "Application",
        "Software Development Life Cycle",
        "Amazon Web Services AWS Extensive",
        "Nodejs with Express",
        "Hystrix and Hystrix Dashboard"
    ],
    "experience": "Experience in developing web services like SOAP and REST and consuming web services with Python and Scala Extensively used Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experienced in Full stack UI technologies using Grunt JS Gulp Server Yeoman generator for Angular Expertise in design and development of various web and enterpriselevel applications using JavaJ2EE technologies such as Spring Hibernate EJB JPA JSF Struts framework Servlets Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Experience in implementing client server business applications using Microservices Designed and developed Microservices business components using Spring Boot In depth knowledge on core java concepts such as OOPS Collections Threading generics exception handling Thread pools concurrent utilities File IO and Serialization Good knowledge in Hadoop Architecture with various components such as HDFS Flume Pig and MapReduce Good experience with messaging systems like Kafka event sourcing Hands on experience in XML related technologies JAXP SAX DOM parsers for parsing XML in to Java object Proficient in developing Web Services related technologies frame works WSDL SOAP REST JAXWS JAXB JAXRPC AXIS and Jersey SOAP UI Experienced with JAXRS specification like Jersey and REST Easy to Implement REST based applications Also worked on creation of Docker images Containers pushpull and on integration with Spring Boot Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Extensively worked on UNIX shell scripts to do the batch processing Hands on experience in configuring and using Maven Ant build tools and Jenkins to deploy automated builds in different environments Expert in using version control tools such as such as SVN CSV and GIT Experienced in writing and implementing unit test cases using Junit Easy mock and Mockito Ability to adapt to evolving technology strong sense of responsibility and accomplishment Work Experience Full Stack Java Developer Verizon Irving TX July 2017 to Present Description Verizon Wireless is an American telecommunications company a wholly owned subsidiary of Verizon Communications which offers wireless products and services Verizon wireless customer can do all sorts of activities like activation of phone downloading ringtones changing bill cycle paying their bill changing mobile number changing device changing SIM card device software upgrade downloading widgets Verizon apps accessing NFL TV etc The purpose of this project was to support all real time customer level APIs throughout the day 120140 millions Responsibilities Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Sprint planning and estimation for user stories in Agile Environment Designed and Developed enterprise level angular component libraries such as datatables autosuggestion pagination etc Implemented React JS on serverside validations to handle actions and Events and Encapsulation Worked on migration of AngularJS to Angular 20 Developed the application using Java 8 and implemented its features like lambdas Expressions Time API Streams functional interfaces collectors default methods type interfaces for each Used multithreaded environment to run processes asynchronously using different future calls to access the data Extensively used various Spring Framework modules like MVC Dependency Injection IOC Auto Wiring Spring Security and AOP Created and injected spring services spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Spring Boot Micro Services were developed using Micro Service architecture with RESTFUL and Apache Kafka Exceptionally handled heavy traffic with the help of Spring Ribbon and Kafka broker service Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications Implemented functionalities using Spring IO Spring Boot with Thymeleaf and Hibernate ORM Spring security is used for authorizationauthentication session fixation click jacking cross site request forgery Configured the Hibernate configuration files to persist the data to the Mongo DB Database Developed Python and Scala based API RESTful Web Service to track the events Used Spring Tool Suite STS which is based on Eclipse to develop and debug application code Creating REST based Web Services by establishing links using Hateoas from spring based Applications Worked on Scala to manage parallel processing concurrent programming with mutable state parsing of files and developed applications using Play framework Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Worked on Swagger UI to interact with the APIS Designed and documented APIs using Swagger Migration of Existing Application to AWS cloud Used Amazon Web Services AWS like EC2 S3 RDS cloud watch and Cloud Front for promoting code in various environments Deployed Microservices as Restful Java Web Services on Amazon Elastic Beanstalk Docker containers were used to deploy the applications as part of scaling application using Micro services and increase isolation Image creation pushing and pulling of images was also part of deploying application Using Kafka on publishsubscribe messaging as a distributed commit log have experienced in its fast and Python and Scalable GIT is used for the version control Maven is used for build script and configured log4j log files Using JUnit test in Eclipse developed Unit test cases and test suite Curl was also implemented to test Used JIRA for project management Issue tracking and monitoring errors and fixed the errors Used Jenkins as the integration tool and improved Scalability of applications on crossplatforms Used Drools Decision table using excel sheets with a Spring MVC project Involved in System Testing Integration Testing and Production Testing on WebLogic Server Worked on Karma to unit test the Angular API modules Track production incidents identify and prioritize scope for bugs and enhancements conduct reviews with State counterparts and plan releases Environment J2EE Spring Spring boot Spring MVC Java Scripts Hibernate Rest Maven JUnit Angular HystrixDashboard AWS Netflix Ribbon Spring Kafka MAVEN JUnit Jenkins Agile Methodology Eclipse Curl GIT Mongo DB Log4j PLSQL STS Docker Hateoas WebLogic Application Server Karma JavaJ2EE Developer Liberty Mutual Insurance Seattle WA September 2016 to June 2017 Description Liberty Mutual Insurance is one of the leading Auto Home Personal and Fire Insurance Provider Quote and Issue Application web portal application which is designed and developed especially for Liberty Mutual agents and users where they can get the Auto Home Personal Fire quotes and policies for the customers The application is designed at various milestones starting from quote new business and amendment Used Agile Methodologies to manage the full life cycle development of the project Participated in development of a well responsive Single Page Application SPA using AngularJS framework JavaScript and jQuery in conjunction with HTML CSS3 standards with frontend UI team Worked on MongoDB to manage high writing load of data setting up of replicaSet and managed millions of transactions occurring at different locations Use JSF Java Server Faces to implement component based User Interface Applications Developed server side JEE application components using Spring Core Spring MVC Annotations Servlets JDK 17 Extensively used Spring Framework modules like DIIOC Auto Wiring JDBC Templates Spring Security AOP Deployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Developing spring boot application using Micro Services architecture with Spring Eureka to maintain small and lightweight services and communication between these services are done by using API routes for the entire cluster Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Extensively used Hibernate concepts such as inheritance lazy loading dirty checking locking and transactions Hibernate DAO classes were developed to retrieve and save data using Spring framework manager classes Performance monitoring of Mongo databases with OPS   and familiar in installing and maintaining MongoDB in private Cloud Environments Worked on multiple BSON type objects and used based on requirement Developed a code for Web services using JAXWS SOAP and used SOAP UI tool for testing the services Consumed Web Services WSDL SOAP from third party for authorizing payments tofrom customers Modified existing applications to a suite of Micro Services and all Micro Services to facilitate deployment using Spring Boot and JUnit and Power Mock frameworks for unit testing Involved in developing Micro Services integrated with VSTS for CICD by automating the buildrelease process Moving existing monolithic architecture to Micro Services and migrating them to AWS cloud Created and configured AWS Elastic Load Balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Deployed and tested on WebSphere application server Configured Maven for Java automation projects and developed Maven Project Object Model POM Writing Unit test cases using JUNIT testing framework and performed unit and system testing Used Log4J to capture the log that includes runtime exceptions monitored error logs and fixed the problems Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Used IBM Clear case as version controlling system Environment Agile Servlets Bootstrap HTML CSS3 AngularJS JSP HTML XML JSF AJAX jQuery JSON Spring MVC JDK 17 EJB JMS J2EE Eclipse Spring Batch Security Transaction Hibernate Apache Tomcat MySQL PLSQL Apache Axis2 SOAP WSDL SOAPUI Microservices AWS Maven JUnit Log4j Selenium Sr Java Developer Ally Bank Detroit MI April 2015 to August 2016 DescriptionAlly Bank offers a broad array of financial banking services etc The system developed provides personal savings details of Ally bank Customers It offers a broad array of financial clients and as per the users account status offers him to take up the new schemes enrolling with the bank Upon the users request it generates the reports of user details and submits it to the user Advertises other mutual benefits and keeps track of the contact details of the users and updates them on an event if requested Responsibilities Involved in Design Code Test Integrate UAT Deployment production phases Implemented Spring MVC with JSP20 and JSP Tag libraries to facilitate user interface Adapted various design patterns like Business Delegate Singleton Service locator Session Faade Data Transfer Objects DTO and Data Access Objects DAO patterns Implemented Java and J2EE Design patterns like Business Delegate and Data Transfer Object DTO Data Access Object and Service Locator Used Angular JS as the development framework to build a singlepage application Load data from various data sources into AWS using Kafka Following Agile methodology and SCRUM meetings to track optimize and resolve impediments to meet deadlines on time Used Spring Core Annotaions for dependency injection spring Di and Spring MVC for Rest APIs and spring Boot for Microservices Developed tested and deployed Storify Business feature set in Nodejs with Express and Mongo DB backend Expertise with web based GUI architecture and development using HTML CSS JavaScript XML and Tag libraries JSTL Worked with maven 30 and Spring 30 and Spring suite to develop the coding to batch jobs Searched and fetched the records by using SOLR queries Responsible for supporting integration and testing environment Used JUnit Testing Framework for testing DAOs Created a build environment for Java using Jenkins Git Maven Artifactory and a number of reporting tools Configured Splunk database connector Configure producer and consumer coding part in java to establish connection from twitter source to AWS with popular hash tags DesignImplement large scale pubsub message queues using Apache Kafka Responsible in designing and developing reports using jasper reports Created build scripts for running components individually using Apache ANT and XML Environment Spring JMS SOAP JavaScript JSON Nodejs Spring Boot Splunk Jasper report Apache Kafka UNIX Oracle 9i JUnit SVN Log4J and ANT JavaJ2EE Developer GE Healthcare Milwaukee WI January 2013 to March 2015 Project Provider Appliances Description GE Healthcare provides transformational medical technologies and services expertise in medical imaging and information technologies medical diagnostics patient monitoring systems drug discovery biopharmaceutical manufacturing technologies performance improvement and performance services help customers to deliver better care to more Responsibilities Involved in the Software Development Life Cycle SDLC Requirements gathering Design Code Integrate and Deployment and production phases Worked on front end pages that were developed in a professional manner using HTML CSS JavaScript and JQUERY Extensively usedmodified JQUERY to perform AJAX calls for creating interactive web pages on JSON response Worked to convert HTMLCSS nonfunctional pages into dynamic JSP pages Implemented Struts Framework along with JSP20 Struts Tiles and Struts Tag libraries to facilitate user interface design Involved in test driven development TDD model using JUnit Developed validations using Struts validation framework Authentication and security in apache kafka Pubsub system JAXB parser for marshaling and unmarshaling Experienced in handling multithreading applications in java Working with WSDL and SOAP messages Used Hibernate31 to store the persistence data into the Oracle9i database Used Struts Framework to integrate the application with Hibernate31 JMS was used to sendreceive asynchronous data from various message brokers Involved in writing the ANT scripts to build the application Involved in using Log4J to create log files to debug Used JUnit Testing Framework for Unit Level Testing Worked in IBMRAD 60 to develop complete application Deployed the application on WebSphere Application Server60 WAS EnvironmentWAS Struts spring EJB Servlets 23 HTML JSP 20 JNDI Web Services JMS SOAP IBM MQ Series JavaScript JQuery WSDL UNIX Oracle 9i JUnit Java developer Gilead Sciences Foster City CA June 2011 to December 2012 Description Worked as a Java Developer to make enhancements to the existing Supply Chain Management application Initially the application was built using Spring MVC Hibernate and REST We were responsible to enhance performance effective use of spring boot to migrate Micro service to AWS Responsibilities Full System Development Lifecycle experience Participate in all aspects of the Software Development lifecycle Support existing software development efforts and develop new software modules Maintain the application MVC architecture using Spring Framework Analysis design and development of applications based on J2EE design patterns Used Hibernate ORM Tool for the backend persistence and developed DAO interfaces for interaction with the database Design build maintain web sites using authoring or scripting languages HTML5 CSS3 content creation tools management tools Created database tables and implemented SQL Stored Procedures and complex queries in Oracle SQL Developer Used JUnit for unit testing Involved in writing Multiple Service calls using Spring MVC and for version control management like GIT Hub Security platformsprotocols related to user authenticationauthorization and security implementation for APIsMicroservices Evaluate code to ensure that it is valid properly structured meets industry standards and is compatible with browsers devices or operating systems Business process and domain knowledge in Supply Chain Management Inventory Management specifically in context of ecommerce business landscape Identify locate acquire and curate data Environment Java JSP Spring Hibernate HTML5 CSS3 Tomcat Oracle GIT Eclipse Jenkins and JUnit Java Developer Hoffman Estates IL August 2009 to May 2011 Description Worked as a Java Developer to developenhance the ECommerce application in order to allow purchase of products by the customers The web application included CRMlike functionality to allow Customer Sales Representatives to process and maintain new and existing orders Responsibilities Implemented JSPs corresponding to the controller wherein the data was propagated into from the model and view object from the Controller Designed and Implemented MVC architecture using Spring Framework Provided technical guidance to business analysts gather the requirements and convert them into technical specificationsartifacts Analyzed the low level design LLD document and high level design document HLD as per the business requirements Administered and Engineered Jenkins for managing weekly Build Test and Deploy chain GIT with DevTestProd Branching Model for weekly releases Actively participated in Story Card Reviews during the transition from Waterfall to Agile Scrum Used Quality Center for change management and defect tracking Used Spring Framework as middle tier application framework persistence strategy using spring support for Hibernate for integrating with database Involved in Developing and performing Unit Testing and creating mock objects using JUnit Implemented business tier using Spring Dependency Injection in order to establish relationships between application components Developed Hibernate Mapping hbmxml file for mapping declaration Involved in writing simplex and complex SELECT queries in SQL for backend testing Created database tables and implemented SQL Stored Procedures and complex queries in Oracle SQL Developer Worked on CICD tools like Jenkins Docker in Devops Team Analyzed and performed fixes on logged application defects by comparing the system behavior to the design specifications Built and accessed the database using Hibernate with Oracle Developed unit test cases using JUnit framework Used Spring validation framework for server side validation of user data submissions Created JSP pages using standard JSTL tags as well as Struts tags Used Apache log 4j logging framework for application logging for debug purposes Environment Java JSP JSTL Spring Hibernate Oracle Eclipse Jenkins and JUnit Education Bachelors Skills JAVA 9 years JUNIT 9 years TESTING 9 years DATABASE 8 years JSP 7 years Additional Information TECHNICAL SKILLS Languages C C Java 161718 J2EE SQL PLSQL J2EE Technologies Servlets JMS EJB JDBC JSP JNDI Java Security XML web Technologies HTML5 CSS3 JavaScript jQuery Ajax AngularJS NodeJS ReactJS XML XSD XSLXSLT SAXDOM JSON Bootstrap Tools Framework Struts Spring Hibernate Spring MVC Spring IOC Spring AOP Spring Boot JSF JUnit SOAP UI Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Micro Services AWS Amazon Web Services WebApp Servers IBM Web Sphere Apache Tomcat JBoss EAP Web Logic Server Glassfish Database Oracle SQLServer MongoDBNoSQL IDEs Eclipse IntelliJ Spring Tool Suite STS RAD OR mapping Hibernate MyBatis Testing Tools Others JUnit Soap UI Mockito Rational Clear Quest JMeter StarTeam TOAD Jenkins Version Control Tortoise SVN CVS Rational Clear case GitHub OS Environment Windows UNIX Linux",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Verizon",
        "Atlanta",
        "GA",
        "years",
        "experience",
        "designanalysis",
        "Java",
        "development",
        "web",
        "services",
        "architecture",
        "data",
        "problem",
        "statement",
        "designs",
        "experience",
        "Scala",
        "webapplications",
        "data",
        "Spark",
        "AWS",
        "lambda",
        "functions",
        "depth",
        "knowledge",
        "work",
        "experience",
        "NoSQL",
        "databases",
        "MongoDB",
        "load",
        "transactions",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodologies",
        "Agile",
        "Scrum",
        "UI",
        "frame",
        "jQuery",
        "Ajax",
        "Google",
        "Web",
        "Toolkit",
        "GWT",
        "JavaScript",
        "Node",
        "JS",
        "React",
        "JS",
        "Backbone",
        "JS",
        "AngularJS",
        "Tag",
        "Custom",
        "Tags",
        "experience",
        "data",
        "models",
        "Java",
        "applications",
        "SQL",
        "PLSQL",
        "ORM",
        "tool",
        "Hibernate",
        "experience",
        "databases",
        "MongoDB",
        "Cassandra",
        "Proficient",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "experience",
        "services",
        "EC2",
        "VPC",
        "Cloud",
        "Watch",
        "Cloud",
        "Front",
        "Cloud",
        "Formation",
        "IAM",
        "S3",
        "Amazon",
        "RDS",
        "Elastic",
        "Cache",
        "Good",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "messages",
        "application",
        "updates",
        "AWS",
        "load",
        "balancing",
        "instances",
        "web",
        "services",
        "SOAP",
        "REST",
        "web",
        "services",
        "Python",
        "Scala",
        "Java",
        "features",
        "expressions",
        "operations",
        "collections",
        "mechanisms",
        "Date",
        "Time",
        "API",
        "stack",
        "UI",
        "technologies",
        "Grunt",
        "JS",
        "Gulp",
        "Server",
        "Yeoman",
        "generator",
        "Angular",
        "Expertise",
        "design",
        "development",
        "web",
        "enterpriselevel",
        "applications",
        "JavaJ2EE",
        "technologies",
        "Spring",
        "Hibernate",
        "EJB",
        "JPA",
        "JSF",
        "Struts",
        "framework",
        "Strong",
        "experience",
        "Spring",
        "Framework",
        "modules",
        "Spring",
        "MVC",
        "IOC",
        "AOP",
        "JDBC",
        "JTA",
        "IO",
        "Spring",
        "Boot",
        "Spring",
        "Microservices",
        "Spring",
        "REST",
        "Spring",
        "Annotations",
        "Spring",
        "Transactions",
        "Spring",
        "Security",
        "Experience",
        "client",
        "server",
        "business",
        "applications",
        "Microservices",
        "Microservices",
        "business",
        "components",
        "Spring",
        "Boot",
        "depth",
        "knowledge",
        "core",
        "concepts",
        "OOPS",
        "Collections",
        "Threading",
        "generics",
        "exception",
        "Thread",
        "pools",
        "utilities",
        "File",
        "IO",
        "Serialization",
        "knowledge",
        "Hadoop",
        "Architecture",
        "components",
        "HDFS",
        "Flume",
        "Pig",
        "MapReduce",
        "experience",
        "systems",
        "Kafka",
        "event",
        "Hands",
        "experience",
        "XML",
        "technologies",
        "JAXP",
        "SAX",
        "DOM",
        "parsers",
        "XML",
        "Java",
        "object",
        "Proficient",
        "Web",
        "Services",
        "technologies",
        "frame",
        "WSDL",
        "SOAP",
        "REST",
        "JAXWS",
        "JAXB",
        "JAXRPC",
        "AXIS",
        "Jersey",
        "SOAP",
        "UI",
        "JAXRS",
        "specification",
        "Jersey",
        "REST",
        "Easy",
        "REST",
        "applications",
        "creation",
        "Docker",
        "Containers",
        "pushpull",
        "integration",
        "Spring",
        "Boot",
        "Experience",
        "applications",
        "Tomcat",
        "WebSphere",
        "WebLogic",
        "JBoss",
        "Servers",
        "UNIX",
        "shell",
        "scripts",
        "batch",
        "Hands",
        "experience",
        "Maven",
        "Ant",
        "build",
        "tools",
        "Jenkins",
        "builds",
        "environments",
        "Expert",
        "version",
        "control",
        "tools",
        "SVN",
        "CSV",
        "GIT",
        "writing",
        "unit",
        "test",
        "cases",
        "Junit",
        "Easy",
        "mock",
        "Mockito",
        "Ability",
        "technology",
        "sense",
        "responsibility",
        "accomplishment",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Verizon",
        "Irving",
        "TX",
        "July",
        "Present",
        "Description",
        "Verizon",
        "Wireless",
        "telecommunications",
        "company",
        "subsidiary",
        "Verizon",
        "Communications",
        "products",
        "services",
        "Verizon",
        "customer",
        "sorts",
        "activities",
        "activation",
        "phone",
        "downloading",
        "bill",
        "cycle",
        "bill",
        "number",
        "device",
        "SIM",
        "card",
        "device",
        "software",
        "upgrade",
        "widgets",
        "Verizon",
        "apps",
        "NFL",
        "TV",
        "purpose",
        "project",
        "time",
        "customer",
        "level",
        "APIs",
        "day",
        "millions",
        "Responsibilities",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "Sprint",
        "planning",
        "estimation",
        "user",
        "stories",
        "Agile",
        "Environment",
        "enterprise",
        "level",
        "component",
        "libraries",
        "datatables",
        "autosuggestion",
        "pagination",
        "React",
        "JS",
        "serverside",
        "validations",
        "actions",
        "Events",
        "Encapsulation",
        "migration",
        "Angular",
        "application",
        "Java",
        "features",
        "lambdas",
        "Expressions",
        "Time",
        "API",
        "Streams",
        "interfaces",
        "collectors",
        "default",
        "methods",
        "interfaces",
        "environment",
        "processes",
        "calls",
        "data",
        "Spring",
        "Framework",
        "modules",
        "MVC",
        "Dependency",
        "Injection",
        "IOC",
        "Auto",
        "Wiring",
        "Spring",
        "Security",
        "AOP",
        "Created",
        "spring",
        "services",
        "spring",
        "controllers",
        "DAOs",
        "dependency",
        "injection",
        "wire",
        "objects",
        "business",
        "classes",
        "Spring",
        "Boot",
        "Micro",
        "Services",
        "Micro",
        "Service",
        "architecture",
        "RESTFUL",
        "Apache",
        "Kafka",
        "traffic",
        "help",
        "Spring",
        "Ribbon",
        "Kafka",
        "broker",
        "service",
        "Employed",
        "circuit",
        "breaker",
        "patterns",
        "time",
        "Clients",
        "email",
        "applications",
        "Hystrix",
        "Hystrix",
        "Dashboard",
        "Spring",
        "Boot",
        "Micro",
        "Service",
        "Applications",
        "functionalities",
        "Spring",
        "IO",
        "Spring",
        "Boot",
        "Thymeleaf",
        "Hibernate",
        "ORM",
        "Spring",
        "security",
        "authorizationauthentication",
        "session",
        "fixation",
        "cross",
        "site",
        "request",
        "forgery",
        "Hibernate",
        "configuration",
        "files",
        "data",
        "Mongo",
        "DB",
        "Database",
        "Developed",
        "Python",
        "Scala",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "Eclipse",
        "application",
        "code",
        "REST",
        "Web",
        "Services",
        "links",
        "Hateoas",
        "spring",
        "Applications",
        "Scala",
        "processing",
        "programming",
        "state",
        "parsing",
        "files",
        "applications",
        "Play",
        "framework",
        "Deployed",
        "Docker",
        "Spring",
        "boot",
        "micro",
        "services",
        "AWS",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "AWS",
        "console",
        "Swagger",
        "UI",
        "APIS",
        "APIs",
        "Swagger",
        "Migration",
        "Existing",
        "Application",
        "AWS",
        "cloud",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "S3",
        "RDS",
        "cloud",
        "Cloud",
        "Front",
        "code",
        "environments",
        "Microservices",
        "Restful",
        "Java",
        "Web",
        "Services",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Docker",
        "containers",
        "applications",
        "part",
        "application",
        "Micro",
        "services",
        "isolation",
        "Image",
        "creation",
        "pulling",
        "images",
        "part",
        "application",
        "Kafka",
        "publishsubscribe",
        "commit",
        "log",
        "Python",
        "Scalable",
        "GIT",
        "version",
        "control",
        "Maven",
        "build",
        "script",
        "log4j",
        "log",
        "files",
        "JUnit",
        "test",
        "Eclipse",
        "Unit",
        "test",
        "cases",
        "test",
        "suite",
        "Curl",
        "JIRA",
        "project",
        "management",
        "Issue",
        "errors",
        "errors",
        "Jenkins",
        "integration",
        "tool",
        "Scalability",
        "applications",
        "crossplatforms",
        "Drools",
        "Decision",
        "table",
        "sheets",
        "Spring",
        "MVC",
        "project",
        "System",
        "Testing",
        "Integration",
        "Testing",
        "Production",
        "Testing",
        "WebLogic",
        "Server",
        "Worked",
        "Karma",
        "unit",
        "Angular",
        "API",
        "modules",
        "Track",
        "production",
        "incidents",
        "scope",
        "bugs",
        "enhancements",
        "reviews",
        "State",
        "counterparts",
        "plan",
        "releases",
        "Environment",
        "J2EE",
        "Spring",
        "Spring",
        "boot",
        "Spring",
        "MVC",
        "Java",
        "Scripts",
        "Hibernate",
        "Rest",
        "Maven",
        "JUnit",
        "Angular",
        "HystrixDashboard",
        "AWS",
        "Netflix",
        "Ribbon",
        "Spring",
        "Kafka",
        "MAVEN",
        "JUnit",
        "Jenkins",
        "Agile",
        "Methodology",
        "Eclipse",
        "Curl",
        "GIT",
        "Mongo",
        "DB",
        "Log4j",
        "PLSQL",
        "STS",
        "Docker",
        "Hateoas",
        "WebLogic",
        "Application",
        "Server",
        "Karma",
        "JavaJ2EE",
        "Developer",
        "Liberty",
        "Mutual",
        "Insurance",
        "Seattle",
        "WA",
        "September",
        "June",
        "Description",
        "Liberty",
        "Mutual",
        "Insurance",
        "Auto",
        "Home",
        "Personal",
        "Fire",
        "Insurance",
        "Provider",
        "Quote",
        "Issue",
        "Application",
        "web",
        "application",
        "Liberty",
        "agents",
        "users",
        "Auto",
        "Home",
        "Personal",
        "Fire",
        "quotes",
        "policies",
        "customers",
        "application",
        "milestones",
        "business",
        "amendment",
        "Agile",
        "Methodologies",
        "life",
        "cycle",
        "development",
        "project",
        "development",
        "Single",
        "Page",
        "Application",
        "SPA",
        "framework",
        "JavaScript",
        "jQuery",
        "conjunction",
        "HTML",
        "CSS3",
        "standards",
        "frontend",
        "UI",
        "team",
        "writing",
        "load",
        "data",
        "replicaSet",
        "millions",
        "transactions",
        "locations",
        "JSF",
        "Java",
        "Server",
        "Faces",
        "component",
        "User",
        "Interface",
        "Applications",
        "server",
        "side",
        "JEE",
        "application",
        "components",
        "Spring",
        "Core",
        "Spring",
        "MVC",
        "Annotations",
        "Servlets",
        "JDK",
        "Spring",
        "Framework",
        "modules",
        "DIIOC",
        "Auto",
        "Wiring",
        "JDBC",
        "Templates",
        "Spring",
        "Security",
        "AOP",
        "Application",
        "Docker",
        "container",
        "runtime",
        "Cloud",
        "Foundry",
        "services",
        "AWS",
        "Netflix",
        "Eureka",
        "Spring",
        "Hystrix",
        "method",
        "Spring",
        "Ribbon",
        "load",
        "balancing",
        "broker",
        "service",
        "status",
        "Spring",
        "Kafka",
        "Zookeeper",
        "Developing",
        "spring",
        "boot",
        "application",
        "Micro",
        "Services",
        "architecture",
        "Spring",
        "Eureka",
        "services",
        "communication",
        "services",
        "API",
        "routes",
        "cluster",
        "Spring",
        "Batch",
        "spring",
        "batch",
        "jobs",
        "requirements",
        "reliability",
        "robustness",
        "traceability",
        "processing",
        "amount",
        "data",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "OAuth",
        "Spring",
        "Transaction",
        "degree",
        "isolation",
        "transactions",
        "transaction",
        "scope",
        "transaction",
        "transaction",
        "Hibernate",
        "concepts",
        "inheritance",
        "loading",
        "dirty",
        "transactions",
        "Hibernate",
        "DAO",
        "classes",
        "data",
        "Spring",
        "framework",
        "manager",
        "classes",
        "Performance",
        "monitoring",
        "Mongo",
        "OPS",
        "MongoDB",
        "Cloud",
        "Environments",
        "BSON",
        "type",
        "objects",
        "requirement",
        "code",
        "Web",
        "services",
        "JAXWS",
        "SOAP",
        "SOAP",
        "UI",
        "tool",
        "services",
        "Consumed",
        "Web",
        "Services",
        "WSDL",
        "SOAP",
        "party",
        "payments",
        "customers",
        "applications",
        "suite",
        "Micro",
        "Services",
        "Micro",
        "Services",
        "deployment",
        "Spring",
        "Boot",
        "JUnit",
        "Power",
        "Mock",
        "frameworks",
        "unit",
        "testing",
        "Micro",
        "Services",
        "VSTS",
        "CICD",
        "buildrelease",
        "process",
        "architecture",
        "Micro",
        "Services",
        "AWS",
        "cloud",
        "AWS",
        "Elastic",
        "Load",
        "Balancers",
        "auto",
        "scaling",
        "groups",
        "traffic",
        "cost",
        "fault",
        "environment",
        "WebSphere",
        "application",
        "server",
        "Configured",
        "Maven",
        "Java",
        "automation",
        "projects",
        "Maven",
        "Project",
        "Object",
        "Model",
        "POM",
        "Writing",
        "Unit",
        "test",
        "cases",
        "JUNIT",
        "testing",
        "framework",
        "unit",
        "system",
        "testing",
        "Log4J",
        "log",
        "runtime",
        "exceptions",
        "error",
        "logs",
        "problems",
        "Seleniums",
        "playback",
        "tool",
        "tests",
        "test",
        "cases",
        "IBM",
        "Clear",
        "case",
        "version",
        "system",
        "Environment",
        "Agile",
        "Servlets",
        "Bootstrap",
        "HTML",
        "CSS3",
        "JSP",
        "HTML",
        "XML",
        "JSF",
        "jQuery",
        "JSON",
        "Spring",
        "MVC",
        "JDK",
        "EJB",
        "JMS",
        "J2EE",
        "Eclipse",
        "Spring",
        "Batch",
        "Security",
        "Transaction",
        "Hibernate",
        "Apache",
        "Tomcat",
        "MySQL",
        "PLSQL",
        "Apache",
        "Axis2",
        "SOAP",
        "WSDL",
        "SOAPUI",
        "Microservices",
        "AWS",
        "Maven",
        "JUnit",
        "Log4j",
        "Selenium",
        "Sr",
        "Java",
        "Developer",
        "Ally",
        "Bank",
        "Detroit",
        "MI",
        "April",
        "August",
        "DescriptionAlly",
        "Bank",
        "array",
        "banking",
        "services",
        "system",
        "savings",
        "details",
        "Ally",
        "bank",
        "Customers",
        "array",
        "clients",
        "users",
        "status",
        "schemes",
        "bank",
        "users",
        "reports",
        "user",
        "details",
        "user",
        "benefits",
        "track",
        "contact",
        "details",
        "users",
        "event",
        "Responsibilities",
        "Design",
        "Code",
        "Test",
        "Deployment",
        "production",
        "phases",
        "Spring",
        "MVC",
        "JSP20",
        "JSP",
        "Tag",
        "user",
        "interface",
        "design",
        "patterns",
        "Business",
        "Delegate",
        "Singleton",
        "Service",
        "locator",
        "Session",
        "Faade",
        "Data",
        "Transfer",
        "DTO",
        "Data",
        "Access",
        "DAO",
        "patterns",
        "Java",
        "J2EE",
        "Design",
        "patterns",
        "Business",
        "Delegate",
        "Data",
        "Transfer",
        "Object",
        "DTO",
        "Data",
        "Access",
        "Object",
        "Service",
        "Locator",
        "Angular",
        "JS",
        "development",
        "framework",
        "singlepage",
        "application",
        "Load",
        "data",
        "data",
        "sources",
        "AWS",
        "Kafka",
        "methodology",
        "meetings",
        "optimize",
        "impediments",
        "deadlines",
        "time",
        "Spring",
        "Core",
        "Annotaions",
        "dependency",
        "injection",
        "spring",
        "Di",
        "Spring",
        "MVC",
        "Rest",
        "APIs",
        "spring",
        "Boot",
        "Microservices",
        "Storify",
        "Business",
        "feature",
        "Nodejs",
        "Express",
        "Mongo",
        "DB",
        "backend",
        "Expertise",
        "web",
        "GUI",
        "architecture",
        "development",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "Tag",
        "JSTL",
        "maven",
        "Spring",
        "Spring",
        "suite",
        "coding",
        "jobs",
        "records",
        "SOLR",
        "queries",
        "integration",
        "testing",
        "environment",
        "JUnit",
        "Testing",
        "Framework",
        "testing",
        "DAOs",
        "build",
        "environment",
        "Java",
        "Jenkins",
        "Git",
        "Maven",
        "Artifactory",
        "number",
        "tools",
        "Configured",
        "Splunk",
        "database",
        "connector",
        "Configure",
        "producer",
        "consumer",
        "part",
        "connection",
        "twitter",
        "source",
        "AWS",
        "hash",
        "tags",
        "DesignImplement",
        "scale",
        "message",
        "queues",
        "Apache",
        "Kafka",
        "reports",
        "jasper",
        "reports",
        "scripts",
        "components",
        "Apache",
        "ANT",
        "XML",
        "Environment",
        "Spring",
        "JMS",
        "SOAP",
        "JavaScript",
        "JSON",
        "Nodejs",
        "Spring",
        "Boot",
        "Splunk",
        "Jasper",
        "report",
        "Apache",
        "Kafka",
        "UNIX",
        "Oracle",
        "9i",
        "JUnit",
        "SVN",
        "Log4J",
        "ANT",
        "JavaJ2EE",
        "Developer",
        "GE",
        "Healthcare",
        "Milwaukee",
        "WI",
        "January",
        "March",
        "Project",
        "Provider",
        "Appliances",
        "Description",
        "GE",
        "Healthcare",
        "technologies",
        "services",
        "expertise",
        "imaging",
        "information",
        "technologies",
        "diagnostics",
        "monitoring",
        "systems",
        "drug",
        "discovery",
        "manufacturing",
        "technologies",
        "performance",
        "improvement",
        "performance",
        "services",
        "customers",
        "care",
        "Responsibilities",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Requirements",
        "Design",
        "Code",
        "Integrate",
        "Deployment",
        "production",
        "phases",
        "end",
        "pages",
        "manner",
        "HTML",
        "CSS",
        "JavaScript",
        "JQUERY",
        "JQUERY",
        "AJAX",
        "calls",
        "web",
        "pages",
        "response",
        "HTMLCSS",
        "pages",
        "JSP",
        "pages",
        "Struts",
        "Framework",
        "JSP20",
        "Struts",
        "Tiles",
        "Struts",
        "Tag",
        "user",
        "interface",
        "design",
        "test",
        "development",
        "TDD",
        "model",
        "JUnit",
        "Developed",
        "validations",
        "Struts",
        "validation",
        "framework",
        "Authentication",
        "security",
        "apache",
        "kafka",
        "Pubsub",
        "system",
        "JAXB",
        "parser",
        "applications",
        "Working",
        "WSDL",
        "messages",
        "Hibernate31",
        "persistence",
        "data",
        "Oracle9i",
        "database",
        "Struts",
        "Framework",
        "application",
        "Hibernate31",
        "JMS",
        "data",
        "message",
        "brokers",
        "ANT",
        "scripts",
        "application",
        "log",
        "files",
        "JUnit",
        "Testing",
        "Framework",
        "Unit",
        "Level",
        "Testing",
        "IBMRAD",
        "application",
        "application",
        "WebSphere",
        "Application",
        "Server60",
        "Struts",
        "spring",
        "EJB",
        "Servlets",
        "HTML",
        "JSP",
        "JNDI",
        "Web",
        "Services",
        "JMS",
        "SOAP",
        "IBM",
        "MQ",
        "Series",
        "JavaScript",
        "JQuery",
        "WSDL",
        "UNIX",
        "Oracle",
        "9i",
        "JUnit",
        "Java",
        "developer",
        "Gilead",
        "Sciences",
        "Foster",
        "City",
        "CA",
        "June",
        "December",
        "Description",
        "Java",
        "Developer",
        "enhancements",
        "Supply",
        "Chain",
        "Management",
        "application",
        "application",
        "Spring",
        "MVC",
        "Hibernate",
        "REST",
        "performance",
        "use",
        "spring",
        "boot",
        "Micro",
        "service",
        "AWS",
        "Responsibilities",
        "Full",
        "System",
        "Development",
        "Lifecycle",
        "experience",
        "Participate",
        "aspects",
        "Software",
        "Development",
        "lifecycle",
        "software",
        "development",
        "efforts",
        "software",
        "modules",
        "application",
        "MVC",
        "architecture",
        "Spring",
        "Framework",
        "Analysis",
        "design",
        "development",
        "applications",
        "J2EE",
        "design",
        "patterns",
        "Hibernate",
        "ORM",
        "Tool",
        "persistence",
        "DAO",
        "interfaces",
        "interaction",
        "database",
        "Design",
        "maintain",
        "web",
        "sites",
        "scripting",
        "languages",
        "HTML5",
        "CSS3",
        "content",
        "creation",
        "tools",
        "management",
        "tools",
        "database",
        "tables",
        "SQL",
        "Stored",
        "Procedures",
        "queries",
        "Oracle",
        "SQL",
        "Developer",
        "JUnit",
        "unit",
        "testing",
        "Multiple",
        "Service",
        "Spring",
        "MVC",
        "version",
        "control",
        "management",
        "GIT",
        "Hub",
        "Security",
        "platformsprotocols",
        "user",
        "authenticationauthorization",
        "security",
        "implementation",
        "APIsMicroservices",
        "code",
        "industry",
        "standards",
        "browsers",
        "devices",
        "operating",
        "systems",
        "Business",
        "process",
        "knowledge",
        "Supply",
        "Chain",
        "Management",
        "Inventory",
        "Management",
        "context",
        "ecommerce",
        "business",
        "landscape",
        "Identify",
        "locate",
        "acquire",
        "data",
        "Environment",
        "Java",
        "JSP",
        "Spring",
        "Hibernate",
        "HTML5",
        "CSS3",
        "Tomcat",
        "Oracle",
        "GIT",
        "Eclipse",
        "Jenkins",
        "JUnit",
        "Java",
        "Developer",
        "Hoffman",
        "Estates",
        "IL",
        "August",
        "May",
        "Description",
        "Java",
        "Developer",
        "developenhance",
        "ECommerce",
        "application",
        "order",
        "purchase",
        "products",
        "customers",
        "web",
        "application",
        "CRMlike",
        "functionality",
        "Customer",
        "Sales",
        "Representatives",
        "orders",
        "Responsibilities",
        "JSPs",
        "controller",
        "data",
        "model",
        "object",
        "Controller",
        "MVC",
        "architecture",
        "Spring",
        "Framework",
        "guidance",
        "business",
        "analysts",
        "requirements",
        "specificationsartifacts",
        "level",
        "design",
        "LLD",
        "document",
        "level",
        "design",
        "document",
        "HLD",
        "business",
        "requirements",
        "Engineered",
        "Jenkins",
        "Build",
        "Test",
        "chain",
        "GIT",
        "DevTestProd",
        "Branching",
        "Model",
        "releases",
        "Story",
        "Card",
        "Reviews",
        "transition",
        "Waterfall",
        "Agile",
        "Scrum",
        "Used",
        "Quality",
        "Center",
        "change",
        "management",
        "Spring",
        "Framework",
        "tier",
        "application",
        "framework",
        "persistence",
        "strategy",
        "spring",
        "support",
        "Hibernate",
        "database",
        "Unit",
        "Testing",
        "objects",
        "JUnit",
        "business",
        "tier",
        "Spring",
        "Dependency",
        "Injection",
        "order",
        "relationships",
        "application",
        "components",
        "Hibernate",
        "Mapping",
        "hbmxml",
        "file",
        "mapping",
        "declaration",
        "simplex",
        "SELECT",
        "SQL",
        "testing",
        "database",
        "tables",
        "SQL",
        "Stored",
        "Procedures",
        "queries",
        "Oracle",
        "SQL",
        "Developer",
        "CICD",
        "tools",
        "Jenkins",
        "Docker",
        "Devops",
        "Team",
        "Analyzed",
        "fixes",
        "application",
        "defects",
        "system",
        "behavior",
        "design",
        "specifications",
        "database",
        "Hibernate",
        "Oracle",
        "Developed",
        "unit",
        "test",
        "cases",
        "JUnit",
        "framework",
        "Spring",
        "validation",
        "framework",
        "server",
        "side",
        "validation",
        "user",
        "data",
        "submissions",
        "JSP",
        "pages",
        "JSTL",
        "tags",
        "Struts",
        "Apache",
        "4j",
        "framework",
        "application",
        "debug",
        "purposes",
        "Environment",
        "Java",
        "JSP",
        "JSTL",
        "Spring",
        "Hibernate",
        "Oracle",
        "Eclipse",
        "Jenkins",
        "JUnit",
        "Education",
        "Bachelors",
        "Skills",
        "JAVA",
        "years",
        "JUNIT",
        "years",
        "years",
        "DATABASE",
        "years",
        "JSP",
        "years",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "C",
        "C",
        "Java",
        "J2EE",
        "SQL",
        "PLSQL",
        "J2EE",
        "Technologies",
        "Servlets",
        "JMS",
        "EJB",
        "JDBC",
        "JSP",
        "JNDI",
        "Java",
        "Security",
        "XML",
        "web",
        "Technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Ajax",
        "NodeJS",
        "ReactJS",
        "XML",
        "XSD",
        "XSLXSLT",
        "SAXDOM",
        "JSON",
        "Bootstrap",
        "Tools",
        "Framework",
        "Struts",
        "Spring",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "Boot",
        "JSF",
        "JUnit",
        "SOAP",
        "UI",
        "Web",
        "services",
        "Restful",
        "UDDI",
        "WSDL",
        "JAXRPC",
        "JAXRS",
        "JAXWS",
        "JAXB",
        "Axis2",
        "Micro",
        "Services",
        "Amazon",
        "Web",
        "Services",
        "WebApp",
        "Servers",
        "IBM",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "JBoss",
        "EAP",
        "Web",
        "Logic",
        "Server",
        "Glassfish",
        "Database",
        "Oracle",
        "SQLServer",
        "MongoDBNoSQL",
        "IDEs",
        "Eclipse",
        "IntelliJ",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "RAD",
        "mapping",
        "Hibernate",
        "MyBatis",
        "Testing",
        "Tools",
        "Others",
        "JUnit",
        "Soap",
        "UI",
        "Mockito",
        "Rational",
        "Clear",
        "Quest",
        "JMeter",
        "StarTeam",
        "TOAD",
        "Jenkins",
        "Version",
        "Control",
        "Tortoise",
        "SVN",
        "CVS",
        "Rational",
        "Clear",
        "case",
        "GitHub",
        "OS",
        "Environment",
        "UNIX",
        "Linux"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:17:33.332102",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Verizon Atlanta GA Overall 8 years of extensive experience in objectoriented designanalysis Java development web services for serviceoriented architecture and data modeling skilled at progressing from problem statement to welldocumented designs and code Proficient experience in Scala to develop webapplications analyze data with Spark and implementing the same in AWS lambda functions In depth knowledge and work experience in managing NoSQL based databases specifically like MongoDB and managing very high load of transactions Proficient with various Software Development Life Cycle SDLC methodologies like Agile Scrum Experienced in UI frame works such as jQuery Ajax Google Web Toolkit GWT JavaScript Node JS React JS Backbone JS AngularJS Tag Libraries Custom Tags Strong experience in designing and developing data models and accessing from Java applications using SQL PLSQL ORM tool Hibernate and has experience with NoSQL databases like MongoDB Cassandra Proficient in using Amazon Web Services AWS Extensive experience focusing on services like EC2 VPC Cloud Watch Cloud Front Cloud Formation IAM S3 Amazon RDS Elastic Cache Good experience in using Amazon Web Services AWS and AWS SNSSQS for delivering messages Deploy application updates to AWS and monitored the load balancing of different instances Experience in developing web services like SOAP and REST and consuming web services with Python and Scala Extensively used Java 8 features such as lambda expressions Parallel operations on collections and for effective sorting mechanisms and new Date Time API Experienced in Full stack UI technologies using Grunt JS Gulp Server Yeoman generator for Angular Expertise in design and development of various web and enterpriselevel applications using JavaJ2EE technologies such as Spring Hibernate EJB JPA JSF Struts framework Servlets Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Experience in implementing client server business applications using Microservices Designed and developed Microservices business components using Spring Boot In depth knowledge on core java concepts such as OOPS Collections Threading generics exception handling Thread pools concurrent utilities File IO and Serialization Good knowledge in Hadoop Architecture with various components such as HDFS Flume Pig and MapReduce Good experience with messaging systems like Kafka event sourcing Hands on experience in XML related technologies JAXP SAX DOM parsers for parsing XML in to Java object Proficient in developing Web Services related technologies frame works WSDL SOAP REST JAXWS JAXB JAXRPC AXIS and Jersey SOAP UI Experienced with JAXRS specification like Jersey and REST Easy to Implement REST based applications Also worked on creation of Docker images Containers pushpull and on integration with Spring Boot Experience in configuring and deploying the applications into Tomcat WebSphere WebLogic and JBoss Servers Extensively worked on UNIX shell scripts to do the batch processing Hands on experience in configuring and using Maven Ant build tools and Jenkins to deploy automated builds in different environments Expert in using version control tools such as such as SVN CSV and GIT Experienced in writing and implementing unit test cases using Junit Easy mock and Mockito Ability to adapt to evolving technology strong sense of responsibility and accomplishment Work Experience Full Stack Java Developer Verizon Irving TX July 2017 to Present Description Verizon Wireless is an American telecommunications company a wholly owned subsidiary of Verizon Communications which offers wireless products and services Verizon wireless customer can do all sorts of activities like activation of phone downloading ringtones changing bill cycle paying their bill changing mobile number changing device changing SIM card device software upgrade downloading widgets Verizon apps accessing NFL TV etc The purpose of this project was to support all real time customer level APIs throughout the day 120140 millions Responsibilities Actively involved in Analysis Design Development System Testing and User Acceptance Testing Successfully followed Sprint planning and estimation for user stories in Agile Environment Designed and Developed enterprise level angular component libraries such as datatables autosuggestion pagination etc Implemented React JS on serverside validations to handle actions and Events and Encapsulation Worked on migration of AngularJS to Angular 20 Developed the application using Java 8 and implemented its features like lambdas Expressions Time API Streams functional interfaces collectors default methods type interfaces for each Used multithreaded environment to run processes asynchronously using different future calls to access the data Extensively used various Spring Framework modules like MVC Dependency Injection IOC Auto Wiring Spring Security and AOP Created and injected spring services spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Spring Boot Micro Services were developed using Micro Service architecture with RESTFUL and Apache Kafka Exceptionally handled heavy traffic with the help of Spring Ribbon and Kafka broker service Employed fail safe and circuit breaker patterns for the first time in Clients email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications Implemented functionalities using Spring IO Spring Boot with Thymeleaf and Hibernate ORM Spring security is used for authorizationauthentication session fixation click jacking cross site request forgery Configured the Hibernate configuration files to persist the data to the Mongo DB Database Developed Python and Scala based API RESTful Web Service to track the events Used Spring Tool Suite STS which is based on Eclipse to develop and debug application code Creating REST based Web Services by establishing links using Hateoas from spring based Applications Worked on Scala to manage parallel processing concurrent programming with mutable state parsing of files and developed applications using Play framework Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Worked on Swagger UI to interact with the APIS Designed and documented APIs using Swagger Migration of Existing Application to AWS cloud Used Amazon Web Services AWS like EC2 S3 RDS cloud watch and Cloud Front for promoting code in various environments Deployed Microservices as Restful Java Web Services on Amazon Elastic Beanstalk Docker containers were used to deploy the applications as part of scaling application using Micro services and increase isolation Image creation pushing and pulling of images was also part of deploying application Using Kafka on publishsubscribe messaging as a distributed commit log have experienced in its fast and Python and Scalable GIT is used for the version control Maven is used for build script and configured log4j log files Using JUnit test in Eclipse developed Unit test cases and test suite Curl was also implemented to test Used JIRA for project management Issue tracking and monitoring errors and fixed the errors Used Jenkins as the integration tool and improved Scalability of applications on crossplatforms Used Drools Decision table using excel sheets with a Spring MVC project Involved in System Testing Integration Testing and Production Testing on WebLogic Server Worked on Karma to unit test the Angular API modules Track production incidents identify and prioritize scope for bugs and enhancements conduct reviews with State counterparts and plan releases Environment J2EE Spring Spring boot Spring MVC Java Scripts Hibernate Rest Maven JUnit Angular HystrixDashboard AWS Netflix Ribbon Spring Kafka MAVEN JUnit Jenkins Agile Methodology Eclipse Curl GIT Mongo DB Log4j PLSQL STS Docker Hateoas WebLogic Application Server Karma JavaJ2EE Developer Liberty Mutual Insurance Seattle WA September 2016 to June 2017 Description Liberty Mutual Insurance is one of the leading Auto Home Personal and Fire Insurance Provider Quote and Issue Application web portal application which is designed and developed especially for Liberty Mutual agents and users where they can get the Auto Home Personal Fire quotes and policies for the customers The application is designed at various milestones starting from quote new business and amendment Used Agile Methodologies to manage the full life cycle development of the project Participated in development of a well responsive Single Page Application SPA using AngularJS framework JavaScript and jQuery in conjunction with HTML CSS3 standards with frontend UI team Worked on MongoDB to manage high writing load of data setting up of replicaSet and managed millions of transactions occurring at different locations Use JSF Java Server Faces to implement component based User Interface Applications Developed server side JEE application components using Spring Core Spring MVC Annotations Servlets JDK 17 Extensively used Spring Framework modules like DIIOC Auto Wiring JDBC Templates Spring Security AOP Deployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS Netflix Eureka Spring Hystrix as fallback method Spring Ribbon for load balancing and a broker service to maintain status using Spring Kafka and Zookeeper Developing spring boot application using Micro Services architecture with Spring Eureka to maintain small and lightweight services and communication between these services are done by using API routes for the entire cluster Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Extensively used Hibernate concepts such as inheritance lazy loading dirty checking locking and transactions Hibernate DAO classes were developed to retrieve and save data using Spring framework manager classes Performance monitoring of Mongo databases with OPS managerMMS and familiar in installing and maintaining MongoDB in private Cloud Environments Worked on multiple BSON type objects and used based on requirement Developed a code for Web services using JAXWS SOAP and used SOAP UI tool for testing the services Consumed Web Services WSDL SOAP from third party for authorizing payments tofrom customers Modified existing applications to a suite of Micro Services and all Micro Services to facilitate deployment using Spring Boot and JUnit and Power Mock frameworks for unit testing Involved in developing Micro Services integrated with VSTS for CICD by automating the buildrelease process Moving existing monolithic architecture to Micro Services and migrating them to AWS cloud Created and configured AWS Elastic Load Balancers and auto scaling groups to distribute the traffic and to have a cost efficient fault tolerant and highly available environment Deployed and tested on WebSphere application server Configured Maven for Java automation projects and developed Maven Project Object Model POM Writing Unit test cases using JUNIT testing framework and performed unit and system testing Used Log4J to capture the log that includes runtime exceptions monitored error logs and fixed the problems Seleniums playback tool feature for authoring tests has been used in executing more than 100 test cases Used IBM Clear case as version controlling system Environment Agile Servlets Bootstrap HTML CSS3 AngularJS JSP HTML XML JSF AJAX jQuery JSON Spring MVC JDK 17 EJB JMS J2EE Eclipse Spring Batch Security Transaction Hibernate Apache Tomcat MySQL PLSQL Apache Axis2 SOAP WSDL SOAPUI Microservices AWS Maven JUnit Log4j Selenium Sr Java Developer Ally Bank Detroit MI April 2015 to August 2016 DescriptionAlly Bank offers a broad array of financial banking services etc The system developed provides personal savings details of Ally bank Customers It offers a broad array of financial clients and as per the users account status offers him to take up the new schemes enrolling with the bank Upon the users request it generates the reports of user details and submits it to the user Advertises other mutual benefits and keeps track of the contact details of the users and updates them on an event if requested Responsibilities Involved in Design Code Test Integrate UAT Deployment production phases Implemented Spring MVC with JSP20 and JSP Tag libraries to facilitate user interface Adapted various design patterns like Business Delegate Singleton Service locator Session Faade Data Transfer Objects DTO and Data Access Objects DAO patterns Implemented Java and J2EE Design patterns like Business Delegate and Data Transfer Object DTO Data Access Object and Service Locator Used Angular JS as the development framework to build a singlepage application Load data from various data sources into AWS using Kafka Following Agile methodology and SCRUM meetings to track optimize and resolve impediments to meet deadlines on time Used Spring Core Annotaions for dependency injection spring Di and Spring MVC for Rest APIs and spring Boot for Microservices Developed tested and deployed Storify Business feature set in Nodejs with Express and Mongo DB backend Expertise with web based GUI architecture and development using HTML CSS JavaScript XML and Tag libraries JSTL Worked with maven 30 and Spring 30 and Spring suite to develop the coding to batch jobs Searched and fetched the records by using SOLR queries Responsible for supporting integration and testing environment Used JUnit Testing Framework for testing DAOs Created a build environment for Java using Jenkins Git Maven Artifactory and a number of reporting tools Configured Splunk database connector Configure producer and consumer coding part in java to establish connection from twitter source to AWS with popular hash tags DesignImplement large scale pubsub message queues using Apache Kafka Responsible in designing and developing reports using jasper reports Created build scripts for running components individually using Apache ANT and XML Environment Spring JMS SOAP JavaScript JSON Nodejs Spring Boot Splunk Jasper report Apache Kafka UNIX Oracle 9i JUnit SVN Log4J and ANT JavaJ2EE Developer GE Healthcare Milwaukee WI January 2013 to March 2015 Project Provider Appliances Description GE Healthcare provides transformational medical technologies and services expertise in medical imaging and information technologies medical diagnostics patient monitoring systems drug discovery biopharmaceutical manufacturing technologies performance improvement and performance services help customers to deliver better care to more Responsibilities Involved in the Software Development Life Cycle SDLC Requirements gathering Design Code Integrate and Deployment and production phases Worked on front end pages that were developed in a professional manner using HTML CSS JavaScript and JQUERY Extensively usedmodified JQUERY to perform AJAX calls for creating interactive web pages on JSON response Worked to convert HTMLCSS nonfunctional pages into dynamic JSP pages Implemented Struts Framework along with JSP20 Struts Tiles and Struts Tag libraries to facilitate user interface design Involved in test driven development TDD model using JUnit Developed validations using Struts validation framework Authentication and security in apache kafka Pubsub system JAXB parser for marshaling and unmarshaling Experienced in handling multithreading applications in java Working with WSDL and SOAP messages Used Hibernate31 to store the persistence data into the Oracle9i database Used Struts Framework to integrate the application with Hibernate31 JMS was used to sendreceive asynchronous data from various message brokers Involved in writing the ANT scripts to build the application Involved in using Log4J to create log files to debug Used JUnit Testing Framework for Unit Level Testing Worked in IBMRAD 60 to develop complete application Deployed the application on WebSphere Application Server60 WAS EnvironmentWAS Struts spring EJB Servlets 23 HTML JSP 20 JNDI Web Services JMS SOAP IBM MQ Series JavaScript JQuery WSDL UNIX Oracle 9i JUnit Java developer Gilead Sciences Foster City CA June 2011 to December 2012 Description Worked as a Java Developer to make enhancements to the existing Supply Chain Management application Initially the application was built using Spring MVC Hibernate and REST We were responsible to enhance performance effective use of spring boot to migrate Micro service to AWS Responsibilities Full System Development Lifecycle experience Participate in all aspects of the Software Development lifecycle Support existing software development efforts and develop new software modules Maintain the application MVC architecture using Spring Framework Analysis design and development of applications based on J2EE design patterns Used Hibernate ORM Tool for the backend persistence and developed DAO interfaces for interaction with the database Design build maintain web sites using authoring or scripting languages HTML5 CSS3 content creation tools management tools Created database tables and implemented SQL Stored Procedures and complex queries in Oracle SQL Developer Used JUnit for unit testing Involved in writing Multiple Service calls using Spring MVC and for version control management like GIT Hub Security platformsprotocols related to user authenticationauthorization and security implementation for APIsMicroservices Evaluate code to ensure that it is valid properly structured meets industry standards and is compatible with browsers devices or operating systems Business process and domain knowledge in Supply Chain Management Inventory Management specifically in context of ecommerce business landscape Identify locate acquire and curate data Environment Java JSP Spring Hibernate HTML5 CSS3 Tomcat Oracle GIT Eclipse Jenkins and JUnit Java Developer Hoffman Estates IL August 2009 to May 2011 Description Worked as a Java Developer to developenhance the ECommerce application in order to allow purchase of products by the customers The web application included CRMlike functionality to allow Customer Sales Representatives to process and maintain new and existing orders Responsibilities Implemented JSPs corresponding to the controller wherein the data was propagated into from the model and view object from the Controller Designed and Implemented MVC architecture using Spring Framework Provided technical guidance to business analysts gather the requirements and convert them into technical specificationsartifacts Analyzed the low level design LLD document and high level design document HLD as per the business requirements Administered and Engineered Jenkins for managing weekly Build Test and Deploy chain GIT with DevTestProd Branching Model for weekly releases Actively participated in Story Card Reviews during the transition from Waterfall to Agile Scrum Used Quality Center for change management and defect tracking Used Spring Framework as middle tier application framework persistence strategy using spring support for Hibernate for integrating with database Involved in Developing and performing Unit Testing and creating mock objects using JUnit Implemented business tier using Spring Dependency Injection in order to establish relationships between application components Developed Hibernate Mapping hbmxml file for mapping declaration Involved in writing simplex and complex SELECT queries in SQL for backend testing Created database tables and implemented SQL Stored Procedures and complex queries in Oracle SQL Developer Worked on CICD tools like Jenkins Docker in Devops Team Analyzed and performed fixes on logged application defects by comparing the system behavior to the design specifications Built and accessed the database using Hibernate with Oracle Developed unit test cases using JUnit framework Used Spring validation framework for server side validation of user data submissions Created JSP pages using standard JSTL tags as well as Struts tags Used Apache log 4j logging framework for application logging for debug purposes Environment Java JSP JSTL Spring Hibernate Oracle Eclipse Jenkins and JUnit Education Bachelors Skills JAVA 9 years JUNIT 9 years TESTING 9 years DATABASE 8 years JSP 7 years Additional Information TECHNICAL SKILLS Languages C C Java 161718 J2EE SQL PLSQL J2EE Technologies Servlets JMS EJB JDBC JSP JNDI Java Security XML web Technologies HTML5 CSS3 JavaScript jQuery Ajax AngularJS NodeJS ReactJS XML XSD XSLXSLT SAXDOM JSON Bootstrap Tools Framework Struts Spring Hibernate Spring MVC Spring IOC Spring AOP Spring Boot JSF JUnit SOAP UI Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Micro Services AWS Amazon Web Services WebApp Servers IBM Web Sphere Apache Tomcat JBoss EAP Web Logic Server Glassfish Database Oracle SQLServer MongoDBNoSQL IDEs Eclipse IntelliJ Spring Tool Suite STS RAD OR mapping Hibernate MyBatis Testing Tools Others JUnit Soap UI Mockito Rational Clear Quest JMeter StarTeam TOAD Jenkins Version Control Tortoise SVN CVS Rational Clear case GitHub OS Environment Windows UNIX Linux",
    "unique_id": "7db9240c-2303-4a78-b7ff-d698da4ebafd"
}