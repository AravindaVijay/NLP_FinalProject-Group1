{
    "clean_data": "Sr JavaJ2EE Full Stack Developer Sr span lJavaspanJ2EE Full Stack span lDeveloperspan Sr JavaJ2EE Full Stack Developer The General Automobile Insurance Franklin TN Having 6 years of extensive IT experience in all phases of Software Development Life Cycle SDLC which includes development design analysis testing and Integration of various web based and clientserver applications in multiplatform environments with JAVAJ2EE technologies Experience in developing applications using SDLC methodologies like Waterfall Agile TDD SCRUM and TestDriven Development Developed Service Oriented Architecture SOA and Micro Service Architecture based J2EE applications Expertise in developing web pages using HTML5 CSS3 Bootstrap JavaScript JQuery Ajax and AngularJS with webpage cross browser compatibility and Responsive Web Design and have knowledge on Server scripting language like NodeJS Utilized Java 18 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application Experience in developing and deploying applications on Cloud Platforms like Amazon Web Services Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Elastic search Virtual Private Cloud VPC through AWS Console and API Integration Excellent in deploying the applications in AWS as EC2 instances and created snapshots for the data that had to be stored in AWS S3 Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed reaching one or more EC2 instances Experience in troubleshooting within Pivotal cloud foundry Experience with and solid understanding of Micro Services Created and consumed Micro Services based on Web API using Spring Boot Create and configured the continuous delivery pipelines for deploying Micro Services and Lambda functions using Jenkins CI server Experienced in developing webbased applications using JavaJ2EE Servlets Struts Struts Tag Libraries and Struts custom validation rules Tiles Spring IOC Spring MVC Spring AOP Spring Security Spring Boot Spring Web Flow Spring Data JDBC Web Services SOAP RESTful services and ORM frameworks like Hibernate iBatis Excellent in developing REST and SOAP based Web Services using JAXRS JAXWS WSDL JAXB Apache Axis Apache CXF and Jersey frameworks Experienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ RabbitMQ Kafka as message queue Experience using Hibernate for mapping Java classes with database and using Criteria API and Hibernate Query Language HQL Proficient in developing RESTful web services in Python using XML JSON Good Knowledge of Data Access Object DAO pattern to introduce an abstraction layer between the Business logic tier Business object and the Persistent storage tier data source Worked with SQL databases like Oracle MySQL IBM DB2 and Hands on Experience in working with NoSQL Database like MongoDB Cassandra to manage extremely large data sets Proficient in writing SQL queries PLSQL Stored Procedures Triggers and creating business tables Hands on experience in working with JUnit Mockito Selenium and Groovy Experienced with deploying applications on to production servers configuring various parameters of servers like IBM Web Sphere Apache Tomcat JBOSS BEA Web Logic Worked on production support for the client and business user application Also supported critical business applications as L2 production support engineer Portable deployment of applications as a single object using Docker Actively involved in the DevOps streamlining process through Jenkins CI and CD Release Automation Proficient on Automation tools like Selenium WebDriver and Selenium GRID using Java for developing automation scripts in Eclipse IDE with TestNG Maven and Jenkins for testing Web Based Applications Used version controller tools like Tortoise Subversion SVN CVS and GIT Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Experience in working with IDES like JBoss Eclipse Spring Tool Suite STS RAD and IntelliJ Have extensive experience working on Windows Linux and UNIX Operating Systems Ability to work effectively in crossfunctional team environments and experience of providing training to business users Good understanding of Business workflow Business logic and Business methods for further implementation of user requirement in a distributed application environment Authorized to work in the US for any employer Work Experience Sr JavaJ2EE Full Stack Developer The General Automobile Insurance Nashville TN January 2019 to Present Description The General Automobile Insurance Services Inc The General is a licensed insurance agency that is a subsidiary of PGC Holdings Corp PGC which is an affiliate of American Family Insurance Through its insurance company subsidiaries and their predecessors PGC has been writing automobile insurance in many states throughout the country for over 50 years Responsibilities Involved in Daily Scrum meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Technical hands on experience with Microservices Architecture Style and the related patterns where software is developed as small and independently deployable services that work together modeled around a business domain Experience in developing Cloud computing microservices using Spring Boot Spring Cloud and Netflix based Eureka Discovery Eureka Server Zuul Ribbon Hystrix and Feign Experience in developing batch processes in Java and Java Spring batch framework Experience of designing Webservices in Java and Java frameworks using Spring Boot and Spring Cloud framework Worked on defining Swagger specs for REST APIs understand REST principles Developed Restful Web Services using JAXWS Experienced in working with SQL and NoSQL databases including Oracle Mongodb Wrote views Triggers Stored Procedures using MySQL database Log Management tools Kibana newRelic Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Checked the health and utilization of AWS resources using AWS Cloud Watch Experience in creating build scripts using Maven also have experience in Jenkins Strong TDD test driven development and continuous integration experience using JUnit Mock Framework Resolved defectsbugs during regression testing preproduction Good experience in documentation of designs and flow charts Also worked on designing DATA Models and maintain the existing documents in Sharepoint Used the Atlassian products JIRA Confluence in the business process Conducted code reviews against coding standards and made sure the best practices are maintained in development process Environment Java 1718 Agile Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Mongodb Intellij Eclipse GIT Jenkins Full Stack Developer ACT Iowa City IA January 2018 to December 2018 Description The ACT college readiness assessment is a standardized test for high school achievement and college admissions in the United States ODS Operational Data Store is the data services team which integrates event based the incoming payloads from different services and transform the data to create a standard Canonical document for the dependent teams to further consume the data Endpoints exposed using OAuth 20 act as the source for data incoming in the application MongoDB is implemented to handle the dynamic data in this process Responsibilities Understanding clients requirements and turning them into modularized stories for sprints CreatingManaging release plan sprint deliveries responsible for version control GIT and configuration of the project keeping track of project activities Sprint execution planning in JIRA Collaborative work with the team on the sprint TestingScrum MasterBusiness Analysts and proactiveness in resolving roadblocks Involved in implementation Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups and EC2 instances Worked on Cloud Watch to monitor resources such as EC2 Amazon RDS DB services Dynamo DB tables and EBS volumes Good knowledge in Developed Java API to connect with AWS S3 Services for storing and retrieving data stored in the S3 buckets Developed API for using AWS Lambda to manage the servers and run the code in the AWS Participated in creation of Spring Configurations using Java 18 features Lambda expressions Streams filters Proficient in core java concepts like Collection Framework Multithreading Generics Annotations Serialization Thread pools JavaBeans Externalization Developed Controller Classes using Spring MVC Spring AOP Spring Boot Spring Batch modules and handled the security using Spring Security Involved in integrating JAXRS into Spring Boot application Involved in writing Spring Configuration XML file that contains declarations and other dependent objects declaration Consumed Web Services to interact with other external interfaces in order to exchange the data in different forms by using Restful service Developed JUnit test cases for DAO and Service Layer methods Developed the test cases to test the application functionalities using Junit using Mockito PowerMock EasyMock frameworks Designed and Developed Module based persistence layer under the guidance of DAO design pattern ORMJPA principles using Hibernate Involved in creating various Data Access Objects DAO for addition modification and deletion of records using various specification files Implemented functionality like searching filtering sorting validating using AngularJS and Java Script for creating objects that store the JSON data retrieved from REST Services Worked on endpoints with OAuth 20 and implemented services using Restful web services in Java Tested Web Services Using Postman Extensively worked on eventbased programs to incorporate incoming data using Rabbit Queues Worked on creating new Triggers and handson experience with Quartz Worked on Mongo DB Aggregation Framework mapreduce and created a job for running a combination of these frameworks Version control using SVN and Bitbucket CICD process for continuous delivery of the stories Hands on experience with Splunk for monitoring the logs in all the environments Environment Java 1718 Agile Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Jersey Robomongo Jira OAuth 20 Postman Tortoise SVN Quick Build Splunk Ant JBoss Developer Studio JBoss Application Server Easymock Powermock RabbitMQ Jenkins JavaJ2EE Full Stack Developer Charter Communications St Louis MO March 2017 to December 2017 Description Charter Communications is an American telecommunications company which offers its services like cable television highspeed internet and telephone services to consumers and businesses under the branding of Spectrum The project is to develop Order Management which provides the functionality to test the statusfeasibility of user requested services by interacting with other downstream systems like inventory activation and billing Responsibilities Developed the existing UI with HTML5 CSS3 jQuery Bootstrap and AngularJS Developed AngularJS custom directives working on attribute level element level and class level directives Developed Eventbased callback functions on a single thread using NodeJS Worked with AWS Amazon Web Services Elastic Bean Stalk like EC2 SQS S3 Elastic Search and Elastic Load Balancer Used Docker to containerize the services and deploy on Cloud Implemented and maintained the monitoring and alerting of production and corporate serversstorage using AWS Cloud Watch Involved in troubleshooting issues within Pivotal cloud foundry environments Designed and developed Micro Services business components using Spring Boot Implemented Micro Services to divide the application into various sub modules Used Spring Security as authentication layer for authenticating users using the credentials from LDAP Implemented Batch jobs to deal with large number of chunks using Spring Batch Framework to execute the similar jobs simultaneously Hands on coding to build REST Micro Services using Spring Cloud Oracle XSD JSON Spring Config and Jenkins Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Implemented persistence layer using Hibernate and developed the Data Access Layer to retrieve JSON documents related to customer Used Apache Kafka to route asynchronous messages to different consumers Created and Consumed REST Web Services to retrieve data from LDAP as well as consuming thirdparty Services Involved in Design and Development of Resource URIs and Collection URIs for creating new REST Web Services using JAXRS and JAXB annotations to convert the data to XML whenever necessary Used Jersey Framework to create REST APIs and used Postman for monitoring the request and responses of REST Services Worked with Oracle Database as Operational Data Storage ODS to perform payment operations done by the users Used MongoDB as Application Data Storage ADS to store the details of the members in the form of documents Used Mongo Vue as an interface to monitor the operations done on MongoDB Written complex SQL queries PLSQL Stored Procedures Functions Triggers cursors and indexes Created UNIX shell scripting for periodic generation of reports Implemented and developed test cases with Mockito framework to test the functionalities of the application and Log4j for logging errors Developed UI Unit Test cases to test the functionality of the business logic using Groovy before releasing the code for Functional Testing Used Gradle as a build tool for downloading the dependencies and used Gradle command line using GIT BASH Deployed the war file of the enterprise application on Web Sphere application server that handles various requests from Client and fixed deployment issues Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Used JIRA tool for Issuebug tracking monitoring of work assignment in the system GIT as a Version Control tool and Intellij 12 as IDE Environment Java 18 J2EE HTML5 CSS3 Bootstrap JQuery AngularJS NodeJS Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Jersey Hibernate Gradle Micro Services AWS Amazon Web Services Oracle Docker MongoDB Mockito Log4j JIRA GIT Jenkins Intellij and Web Sphere Application Server JavaJ2EE Developer State Of New York Albany NY July 2016 to March 2017 Description The New York Motor Vehicle Commission MVC is the government agency responsible for titling registering and providing plates and also licensing drivers in the US state of New York It also provides online support for Renewing titles registrations licenses etc Responsibilities Worked in an Agile Scrum environment and participated in the entire SDLC process Involved in Daily Scrum meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Developed the User Interface using HTML5 CSS3 Bootstrap jQuery AngularJS and NodeJS Developed Single page application and structured the JavaScript code using AngularJS and Created responsive web pages using Bootstrap Consumed REST Web services from serverside application using JAXRS libraries for modifying the data and the data expecting from client has no modification and requested from AngularJS and sent to UI directly Developed and Implemented the application using Spring Framework Modules like Spring IOC Spring AOP Spring MVC Model View Controller Spring Security Web Services SOAP and REST and Hibernate Integrated spring Dependency Injection with Spring IOC among different layers of an application to make the application loosely coupled and used Spring AOP for logging purposes Developed the service layer that acts a bridge between the presentation layer and data access layer with spring framework Used RabbitMQ as a message broker to send asynchronous messages to the subscribers and consumers Implemented Restful web services using JAXRS annotations Jersey as provider and implemented security using LDAP Implemented SOA architecture with Web Services using SOAP WSDL UDDI and XML using Apache CXF framework and worked on parsing the XML files using DOMSAX parsers Developed necessary parsing and XML construction logic using XML parser APIs JAXB Developed persistence Layer using Hibernate to persist the data and to manage the data in Oracle database Developed queries using hibernate criteria native SQL and HQL Developed inheritance domain objects using table per class hierarchy strategy Used NoSQL DB database MongoDB for proof of concept and having experience in create a Stored Procedures and having experience in Remote Procedure call RPC and Redis Developed the test cases to test the application functionalities using JUnit Packaged and deployed the application in Web Logic Application server in different environments like Development and testing etc Used log4J for application logging and notification tracing mechanisms Automate build process through Maven build automation tool Used JIRA to keep track of bugs and stories and Spring Tool Suite as IDE Used GIT Version Controller to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment Java J2EE HTML5 CSS3 Bootstrap JQuery AngularJS NodeJS Spring IOC Spring AOP Spring MVC Spring Security Web Services SOAP and REST Spring Boot WSDL Service Oriented Architecture Hibernate Oracle JBOSS JUnit Log4j Maven JIRA GIT and Spring Toot Suite JavaJ2EE Developer Techno Soft Solutions Bengaluru Karnataka May 2013 to December 2015 Description Techno soft provides a range of professional services delivered by experts with operational experience building and running the largest EMail messaging and Internet networks These services range from architecture and design of software solutions website design development to deployment services and operational support Responsibilities Developed various helper classes needed following Core Java multithreaded programming Implemented Struts MVC design pattern and front controller pattern to this project Developed user interface by creating at least one webpage for each component using Struts web MVC and Action Servlet as front controller for this application Developed Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file Developed SCM by using the JSPHTML like one form for each functionality user interface standard validations using the JavaScript Servlets used as the controllers for the business logic and business logic using JDBC XML parsing techniques etc using MVC Implemented the application using Spring Frame work Developed Value ObjectsPOJO classes to hold the values between Data Layer and Business logic layer Developed and maintained the data layer using DAOs Developed Single Sign On SSO functionality through which we can run SCM from Oracle Applications Involved in developing the Routings and configured Routing Program as scheduled the concurrent request Developed ServerSide components for the business services for creating Items BOM Sourcing Rules and substitute Involved in raising the Notifications to Oracle Users through Mailing Concept for intimating to start the next process using workflow Extensively worked on SQL Server for writing complex queries in the business logic layer Used joins debugging the SCM related packages and customization Extensively worked on creating the setups for Organizations Templates Concurrent Requests Cross Reference Types User Creations assigning responsibilities creating value sets Descriptive Flex Fields etc in SQL Server Applications Used SVN for source code version control Using JIRA tracking the issues and resolving them Implemented Log4J for Logging Errors debugging and tracking using loggers appenders components Followed Agile methodology and prepared technical reports documentation manuals during the program development Environment Java JDBC Servlets Struts JSP Hibernate Java Mail API AJAX HTML XML ANT Log4J CVS RAD Putty SQL Server Apache Tomcat SQL Server JavaJ2EE Developer Mega Soft Technologies Hyderabad Telangana June 2012 to May 2013 Description The main object of this project is to provide a frame work for evaluating the entire life cycle cost for a product including warranty claims The project aim is to provide warranty analysis by evaluating warranty claims data to spot trends and incorporate feedback into the next product version Responsibilities Involved in the implementation of design using vital phases of the Software development life cycle SDLC that includes Development Testing Implementation and Maintenance Support in WATER FALL methodology Designed and developed dynamic Web Pages using JSP HTML CSS JavaScript and Query Implemented the Struts framework based on MVC design pattern and Session Faade Pattern using Session and Entity Beans Used Struts for web tier development and created Struts Action Controllers to handle the requests Involved in writing the strutsconfig files and implemented the Struts Tag library Responsible for designing coding and developed the application in J2EE using Struts MVC Implemented Struts framework Action Controller classes for dispatching request to appropriate classes Used simple Struts Validation for validation of user input as per the business logic and initial data loading Developed Restful Services and SOAP based Web Services Developed Web Service provider methods bottom up approach using WSDL and SOAP for transferring data between the applications Worked on XML technologies like XML Parsers JAXB for binding data to java objects Used Java Messaging Services JMS for reliable and asynchronous communication Implemented the persistence layer using Hibernate and JDBC Template and developed the DAL Data Access Layer to store and retrieve data from the database Responsible to writing JDBC programming to persist the data in My SQL database Written some SQL Queries and PLSQL procedures to fetch data from the database Tested Service and data access tier using JUnit Used Web Logic for application deployment and Log 4J used for Loggingdebugging Used CVS version controlling tool and project build tool using ANT Worked with production support team in debugging and fixing various production issues Environment Java J2EE JSP HTML CSS JavaScript jQuery Struts Restful Services SOAP WSDL Hibernate JDBC JMS My SQL CVS ANT Log4j and Web Logic Skills ECLIPSE J2EE JAVA HIBERNATE SPRING Additional Information TECHNICAL SKILLS Languages C C Java 18 J2EE SQL and PLSQL Enterprise Java JSP Servlet JDBC and Java security MarkupXML Technologies HTML CSS Bootstrap JavaScript JQuery Ajax AngularJS NodeJS XHTML XML XSD XSLXSLT SAXDOM and JSON Tools Framework Servlets Struts Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data JSF JUnit Mockito and SOAP UI Google Web Toolkit Visual Studio Code Mongo Vue Web services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis and Apache CXF Postman Micro Services AWS Amazon Web Services WebApp Servers Web Sphere Apache Tomcat JBOSS EAP and Web Logic Server Cloud Technologies Amazon Web Services EC2 SQS RDS IAM S3 and Spring Cloud Database Oracle My SQL DB2 MongoDB and Dynamo DB OR mapping Hibernate IBATIS Development Tools Eclipse RAD Spring Tool Suite and Intellij Testing Tools Others JUnit and Soap UI Version Control Tortoise SVN CVS and GitHub OS Environment Windows UNIX and LINUX Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns",
    "entities": [
        "Responsive Web Design",
        "Micro Services",
        "REST Web Services",
        "Development Testing Implementation and Maintenance Support",
        "Kibana newRelic Responsible",
        "Routings",
        "New York",
        "Spring Boot Implemented Micro Services",
        "ELB AutoScaling SNS SQS",
        "JMS",
        "Jersey",
        "PGC Holdings Corp PGC",
        "IDE Environment",
        "The General Automobile Insurance Nashville",
        "IBM",
        "Spring Configuration XML",
        "CVS",
        "Maven JIRA GIT",
        "Followed Agile",
        "Oracle Applications Involved",
        "TestDriven Development Developed Service Oriented Architecture SOA and Micro Service Architecture",
        "JavaJ2EE Servlets Struts Struts Tag Libraries",
        "XML",
        "SOAP",
        "Spring Toot Suite JavaJ2EE Developer Techno Soft Solutions",
        "IDE Used",
        "OAuth",
        "Spring Frame",
        "Sharepoint",
        "JUnit",
        "DevOps",
        "Stream API for Bulk",
        "Log Management",
        "Amazon",
        "ServerSide",
        "Tested Service",
        "JAVAJ2EE",
        "The General Automobile Insurance Services Inc The General",
        "Oracle Users through Mailing Concept",
        "GIT BASH Deployed",
        "SQL Server",
        "DOMSAX",
        "Virtual Private Cloud VPC",
        "REST Services Worked",
        "NodeJS Utilized Java",
        "Work Experience Sr JavaJ2EE Full Stack Developer",
        "Developed Restful Web Services",
        "Hibernate Involved",
        "Developed",
        "Developed Restful Services",
        "LDAP",
        "DAO",
        "Mega Soft Technologies Hyderabad",
        "DAL Data Access Layer",
        "Version Control",
        "American Family Insurance Through",
        "DATA Models",
        "Mockito",
        "Developed Module",
        "Responsibilities Involved",
        "Spring",
        "Hibernate iBatis Excellent",
        "Cloud Implemented",
        "Web Sphere Application Server JavaJ2EE Developer State Of",
        "AWS S3 Defined AWS Security Groups",
        "Restful",
        "Client",
        "XML Parsers",
        "GitHub OS Environment Windows",
        "the Data Access Layer",
        "API Integration Excellent",
        "Order Management",
        "Spring Security",
        "JSP",
        "ORMJPA",
        "NodeJS Worked",
        "the JavaScript Servlets",
        "Version",
        "SPRING Additional Information TECHNICAL SKILLS Languages C C",
        "Automate",
        "SQL Queries",
        "Oracle MySQL IBM DB2",
        "JBoss",
        "AWS Console",
        "Collections",
        "Jenkins Strong",
        "Oracle Database",
        "JAXWS Experienced",
        "MVC",
        "Responsibilities Understanding",
        "Session Faade Pattern",
        "GIT",
        "Web Logic Application",
        "Data Access Objects",
        "Web Services",
        "Hibernate Query Language HQL Proficient",
        "US",
        "Apache CXF Postman Micro Services",
        "Data Layer and Business",
        "Created",
        "AWS",
        "Server",
        "Bootstrap Consumed",
        "the Application Experience",
        "Present Description",
        "Hibernate IBATIS Development Tools",
        "Amazon Web Services WebApp Servers Web Sphere Apache Tomcat JBOSS EAP",
        "MVC Spring AOP Spring Security",
        "Implemented Restful",
        "Developed JUnit",
        "Intellij 12",
        "Netflix",
        "JSON Tools Framework",
        "java",
        "Created UNIX",
        "SQL",
        "GitHub",
        "Amazon Web Services",
        "Oracle Mongodb Wrote",
        "Pivotal",
        "JSPHTML",
        "Responsibilities Worked",
        "CreatingManaging",
        "JIRA Collaborative",
        "Micro Service Architecture",
        "JAXRS",
        "the United States",
        "Routing Program",
        "CI",
        "Hibernate Gradle Micro Services",
        "Query Implemented",
        "ANT Worked",
        "PGC",
        "The General Automobile Insurance Franklin",
        "Java Tested Web Services Using Postman",
        "IDES",
        "The New York Motor Vehicle Commission",
        "SQS",
        "SCM",
        "Bitbucket CICD",
        "AWS S3 Services",
        "Maven",
        "RESTful Service",
        "REST Spring Boot WSDL Service Oriented Architecture Hibernate Oracle JBOSS JUnit",
        "UI",
        "Selenium",
        "Remote Procedure",
        "Cloud Platforms",
        "Selenium WebDriver",
        "SVN",
        "UNIX Operating Systems Ability",
        "CSS",
        "Collection",
        "Postman Tortoise",
        "AWS Stack",
        "Organizations Templates Concurrent Requests Cross",
        "REST",
        "Micro Services Created",
        "JUnit Packaged",
        "Developed Action Class",
        "JUnit Mockito Selenium",
        "REST Micro Services",
        "TDD",
        "NoSQL",
        "java concepts",
        "AWS Cloud Services",
        "Software Development Life Cycle",
        "Soap UI Version",
        "Sprint",
        "NoSQL Database",
        "Quartz Worked",
        "Used Java Messaging Services",
        "JUnit Mock Framework Resolved",
        "Release Automation Proficient on Automation",
        "RPC",
        "Microservices Architecture Style"
    ],
    "experience": "Experience in developing applications using SDLC methodologies like Waterfall Agile TDD SCRUM and TestDriven Development Developed Service Oriented Architecture SOA and Micro Service Architecture based J2EE applications Expertise in developing web pages using HTML5 CSS3 Bootstrap JavaScript JQuery Ajax and AngularJS with webpage cross browser compatibility and Responsive Web Design and have knowledge on Server scripting language like NodeJS Utilized Java 18 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application Experience in developing and deploying applications on Cloud Platforms like Amazon Web Services Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Elastic search Virtual Private Cloud VPC through AWS Console and API Integration Excellent in deploying the applications in AWS as EC2 instances and created snapshots for the data that had to be stored in AWS S3 Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed reaching one or more EC2 instances Experience in troubleshooting within Pivotal cloud foundry Experience with and solid understanding of Micro Services Created and consumed Micro Services based on Web API using Spring Boot Create and configured the continuous delivery pipelines for deploying Micro Services and Lambda functions using Jenkins CI server Experienced in developing webbased applications using JavaJ2EE Servlets Struts Struts Tag Libraries and Struts custom validation rules Tiles Spring IOC Spring MVC Spring AOP Spring Security Spring Boot Spring Web Flow Spring Data JDBC Web Services SOAP RESTful services and ORM frameworks like Hibernate iBatis Excellent in developing REST and SOAP based Web Services using JAXRS JAXWS WSDL JAXB Apache Axis Apache CXF and Jersey frameworks Experienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ RabbitMQ Kafka as message queue Experience using Hibernate for mapping Java classes with database and using Criteria API and Hibernate Query Language HQL Proficient in developing RESTful web services in Python using XML JSON Good Knowledge of Data Access Object DAO pattern to introduce an abstraction layer between the Business logic tier Business object and the Persistent storage tier data source Worked with SQL databases like Oracle MySQL IBM DB2 and Hands on Experience in working with NoSQL Database like MongoDB Cassandra to manage extremely large data sets Proficient in writing SQL queries PLSQL Stored Procedures Triggers and creating business tables Hands on experience in working with JUnit Mockito Selenium and Groovy Experienced with deploying applications on to production servers configuring various parameters of servers like IBM Web Sphere Apache Tomcat JBOSS BEA Web Logic Worked on production support for the client and business user application Also supported critical business applications as L2 production support engineer Portable deployment of applications as a single object using Docker Actively involved in the DevOps streamlining process through Jenkins CI and CD Release Automation Proficient on Automation tools like Selenium WebDriver and Selenium GRID using Java for developing automation scripts in Eclipse IDE with TestNG Maven and Jenkins for testing Web Based Applications Used version controller tools like Tortoise Subversion SVN CVS and GIT Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Experience in working with IDES like JBoss Eclipse Spring Tool Suite STS RAD and IntelliJ Have extensive experience working on Windows Linux and UNIX Operating Systems Ability to work effectively in crossfunctional team environments and experience of providing training to business users Good understanding of Business workflow Business logic and Business methods for further implementation of user requirement in a distributed application environment Authorized to work in the US for any employer Work Experience Sr JavaJ2EE Full Stack Developer The General Automobile Insurance Nashville TN January 2019 to Present Description The General Automobile Insurance Services Inc The General is a licensed insurance agency that is a subsidiary of PGC Holdings Corp PGC which is an affiliate of American Family Insurance Through its insurance company subsidiaries and their predecessors PGC has been writing automobile insurance in many states throughout the country for over 50 years Responsibilities Involved in Daily Scrum meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Technical hands on experience with Microservices Architecture Style and the related patterns where software is developed as small and independently deployable services that work together modeled around a business domain Experience in developing Cloud computing microservices using Spring Boot Spring Cloud and Netflix based Eureka Discovery Eureka Server Zuul Ribbon Hystrix and Feign Experience in developing batch processes in Java and Java Spring batch framework Experience of designing Webservices in Java and Java frameworks using Spring Boot and Spring Cloud framework Worked on defining Swagger specs for REST APIs understand REST principles Developed Restful Web Services using JAXWS Experienced in working with SQL and NoSQL databases including Oracle Mongodb Wrote views Triggers Stored Procedures using MySQL database Log Management tools Kibana newRelic Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Checked the health and utilization of AWS resources using AWS Cloud Watch Experience in creating build scripts using Maven also have experience in Jenkins Strong TDD test driven development and continuous integration experience using JUnit Mock Framework Resolved defectsbugs during regression testing preproduction Good experience in documentation of designs and flow charts Also worked on designing DATA Models and maintain the existing documents in Sharepoint Used the Atlassian products JIRA Confluence in the business process Conducted code reviews against coding standards and made sure the best practices are maintained in development process Environment Java 1718 Agile Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Mongodb Intellij Eclipse GIT Jenkins Full Stack Developer ACT Iowa City IA January 2018 to December 2018 Description The ACT college readiness assessment is a standardized test for high school achievement and college admissions in the United States ODS Operational Data Store is the data services team which integrates event based the incoming payloads from different services and transform the data to create a standard Canonical document for the dependent teams to further consume the data Endpoints exposed using OAuth 20 act as the source for data incoming in the application MongoDB is implemented to handle the dynamic data in this process Responsibilities Understanding clients requirements and turning them into modularized stories for sprints CreatingManaging release plan sprint deliveries responsible for version control GIT and configuration of the project keeping track of project activities Sprint execution planning in JIRA Collaborative work with the team on the sprint TestingScrum MasterBusiness Analysts and proactiveness in resolving roadblocks Involved in implementation Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups and EC2 instances Worked on Cloud Watch to monitor resources such as EC2 Amazon RDS DB services Dynamo DB tables and EBS volumes Good knowledge in Developed Java API to connect with AWS S3 Services for storing and retrieving data stored in the S3 buckets Developed API for using AWS Lambda to manage the servers and run the code in the AWS Participated in creation of Spring Configurations using Java 18 features Lambda expressions Streams filters Proficient in core java concepts like Collection Framework Multithreading Generics Annotations Serialization Thread pools JavaBeans Externalization Developed Controller Classes using Spring MVC Spring AOP Spring Boot Spring Batch modules and handled the security using Spring Security Involved in integrating JAXRS into Spring Boot application Involved in writing Spring Configuration XML file that contains declarations and other dependent objects declaration Consumed Web Services to interact with other external interfaces in order to exchange the data in different forms by using Restful service Developed JUnit test cases for DAO and Service Layer methods Developed the test cases to test the application functionalities using Junit using Mockito PowerMock EasyMock frameworks Designed and Developed Module based persistence layer under the guidance of DAO design pattern ORMJPA principles using Hibernate Involved in creating various Data Access Objects DAO for addition modification and deletion of records using various specification files Implemented functionality like searching filtering sorting validating using AngularJS and Java Script for creating objects that store the JSON data retrieved from REST Services Worked on endpoints with OAuth 20 and implemented services using Restful web services in Java Tested Web Services Using Postman Extensively worked on eventbased programs to incorporate incoming data using Rabbit Queues Worked on creating new Triggers and handson experience with Quartz Worked on Mongo DB Aggregation Framework mapreduce and created a job for running a combination of these frameworks Version control using SVN and Bitbucket CICD process for continuous delivery of the stories Hands on experience with Splunk for monitoring the logs in all the environments Environment Java 1718 Agile Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Jersey Robomongo Jira OAuth 20 Postman Tortoise SVN Quick Build Splunk Ant JBoss Developer Studio JBoss Application Server Easymock Powermock RabbitMQ Jenkins JavaJ2EE Full Stack Developer Charter Communications St Louis MO March 2017 to December 2017 Description Charter Communications is an American telecommunications company which offers its services like cable television highspeed internet and telephone services to consumers and businesses under the branding of Spectrum The project is to develop Order Management which provides the functionality to test the statusfeasibility of user requested services by interacting with other downstream systems like inventory activation and billing Responsibilities Developed the existing UI with HTML5 CSS3 jQuery Bootstrap and AngularJS Developed AngularJS custom directives working on attribute level element level and class level directives Developed Eventbased callback functions on a single thread using NodeJS Worked with AWS Amazon Web Services Elastic Bean Stalk like EC2 SQS S3 Elastic Search and Elastic Load Balancer Used Docker to containerize the services and deploy on Cloud Implemented and maintained the monitoring and alerting of production and corporate serversstorage using AWS Cloud Watch Involved in troubleshooting issues within Pivotal cloud foundry environments Designed and developed Micro Services business components using Spring Boot Implemented Micro Services to divide the application into various sub modules Used Spring Security as authentication layer for authenticating users using the credentials from LDAP Implemented Batch jobs to deal with large number of chunks using Spring Batch Framework to execute the similar jobs simultaneously Hands on coding to build REST Micro Services using Spring Cloud Oracle XSD JSON Spring Config and Jenkins Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Implemented persistence layer using Hibernate and developed the Data Access Layer to retrieve JSON documents related to customer Used Apache Kafka to route asynchronous messages to different consumers Created and Consumed REST Web Services to retrieve data from LDAP as well as consuming thirdparty Services Involved in Design and Development of Resource URIs and Collection URIs for creating new REST Web Services using JAXRS and JAXB annotations to convert the data to XML whenever necessary Used Jersey Framework to create REST APIs and used Postman for monitoring the request and responses of REST Services Worked with Oracle Database as Operational Data Storage ODS to perform payment operations done by the users Used MongoDB as Application Data Storage ADS to store the details of the members in the form of documents Used Mongo Vue as an interface to monitor the operations done on MongoDB Written complex SQL queries PLSQL Stored Procedures Functions Triggers cursors and indexes Created UNIX shell scripting for periodic generation of reports Implemented and developed test cases with Mockito framework to test the functionalities of the application and Log4j for logging errors Developed UI Unit Test cases to test the functionality of the business logic using Groovy before releasing the code for Functional Testing Used Gradle as a build tool for downloading the dependencies and used Gradle command line using GIT BASH Deployed the war file of the enterprise application on Web Sphere application server that handles various requests from Client and fixed deployment issues Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Used JIRA tool for Issuebug tracking monitoring of work assignment in the system GIT as a Version Control tool and Intellij 12 as IDE Environment Java 18 J2EE HTML5 CSS3 Bootstrap JQuery AngularJS NodeJS Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Jersey Hibernate Gradle Micro Services AWS Amazon Web Services Oracle Docker MongoDB Mockito Log4j JIRA GIT Jenkins Intellij and Web Sphere Application Server JavaJ2EE Developer State Of New York Albany NY July 2016 to March 2017 Description The New York Motor Vehicle Commission MVC is the government agency responsible for titling registering and providing plates and also licensing drivers in the US state of New York It also provides online support for Renewing titles registrations licenses etc Responsibilities Worked in an Agile Scrum environment and participated in the entire SDLC process Involved in Daily Scrum meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Developed the User Interface using HTML5 CSS3 Bootstrap jQuery AngularJS and NodeJS Developed Single page application and structured the JavaScript code using AngularJS and Created responsive web pages using Bootstrap Consumed REST Web services from serverside application using JAXRS libraries for modifying the data and the data expecting from client has no modification and requested from AngularJS and sent to UI directly Developed and Implemented the application using Spring Framework Modules like Spring IOC Spring AOP Spring MVC Model View Controller Spring Security Web Services SOAP and REST and Hibernate Integrated spring Dependency Injection with Spring IOC among different layers of an application to make the application loosely coupled and used Spring AOP for logging purposes Developed the service layer that acts a bridge between the presentation layer and data access layer with spring framework Used RabbitMQ as a message broker to send asynchronous messages to the subscribers and consumers Implemented Restful web services using JAXRS annotations Jersey as provider and implemented security using LDAP Implemented SOA architecture with Web Services using SOAP WSDL UDDI and XML using Apache CXF framework and worked on parsing the XML files using DOMSAX parsers Developed necessary parsing and XML construction logic using XML parser APIs JAXB Developed persistence Layer using Hibernate to persist the data and to manage the data in Oracle database Developed queries using hibernate criteria native SQL and HQL Developed inheritance domain objects using table per class hierarchy strategy Used NoSQL DB database MongoDB for proof of concept and having experience in create a Stored Procedures and having experience in Remote Procedure call RPC and Redis Developed the test cases to test the application functionalities using JUnit Packaged and deployed the application in Web Logic Application server in different environments like Development and testing etc Used log4J for application logging and notification tracing mechanisms Automate build process through Maven build automation tool Used JIRA to keep track of bugs and stories and Spring Tool Suite as IDE Used GIT Version Controller to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment Java J2EE HTML5 CSS3 Bootstrap JQuery AngularJS NodeJS Spring IOC Spring AOP Spring MVC Spring Security Web Services SOAP and REST Spring Boot WSDL Service Oriented Architecture Hibernate Oracle JBOSS JUnit Log4j Maven JIRA GIT and Spring Toot Suite JavaJ2EE Developer Techno Soft Solutions Bengaluru Karnataka May 2013 to December 2015 Description Techno soft provides a range of professional services delivered by experts with operational experience building and running the largest EMail messaging and Internet networks These services range from architecture and design of software solutions website design development to deployment services and operational support Responsibilities Developed various helper classes needed following Core Java multithreaded programming Implemented Struts MVC design pattern and front controller pattern to this project Developed user interface by creating at least one webpage for each component using Struts web MVC and Action Servlet as front controller for this application Developed Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file Developed SCM by using the JSPHTML like one form for each functionality user interface standard validations using the JavaScript Servlets used as the controllers for the business logic and business logic using JDBC XML parsing techniques etc using MVC Implemented the application using Spring Frame work Developed Value ObjectsPOJO classes to hold the values between Data Layer and Business logic layer Developed and maintained the data layer using DAOs Developed Single Sign On SSO functionality through which we can run SCM from Oracle Applications Involved in developing the Routings and configured Routing Program as scheduled the concurrent request Developed ServerSide components for the business services for creating Items BOM Sourcing Rules and substitute Involved in raising the Notifications to Oracle Users through Mailing Concept for intimating to start the next process using workflow Extensively worked on SQL Server for writing complex queries in the business logic layer Used joins debugging the SCM related packages and customization Extensively worked on creating the setups for Organizations Templates Concurrent Requests Cross Reference Types User Creations assigning responsibilities creating value sets Descriptive Flex Fields etc in SQL Server Applications Used SVN for source code version control Using JIRA tracking the issues and resolving them Implemented Log4J for Logging Errors debugging and tracking using loggers appenders components Followed Agile methodology and prepared technical reports documentation manuals during the program development Environment Java JDBC Servlets Struts JSP Hibernate Java Mail API AJAX HTML XML ANT Log4J CVS RAD Putty SQL Server Apache Tomcat SQL Server JavaJ2EE Developer Mega Soft Technologies Hyderabad Telangana June 2012 to May 2013 Description The main object of this project is to provide a frame work for evaluating the entire life cycle cost for a product including warranty claims The project aim is to provide warranty analysis by evaluating warranty claims data to spot trends and incorporate feedback into the next product version Responsibilities Involved in the implementation of design using vital phases of the Software development life cycle SDLC that includes Development Testing Implementation and Maintenance Support in WATER FALL methodology Designed and developed dynamic Web Pages using JSP HTML CSS JavaScript and Query Implemented the Struts framework based on MVC design pattern and Session Faade Pattern using Session and Entity Beans Used Struts for web tier development and created Struts Action Controllers to handle the requests Involved in writing the strutsconfig files and implemented the Struts Tag library Responsible for designing coding and developed the application in J2EE using Struts MVC Implemented Struts framework Action Controller classes for dispatching request to appropriate classes Used simple Struts Validation for validation of user input as per the business logic and initial data loading Developed Restful Services and SOAP based Web Services Developed Web Service provider methods bottom up approach using WSDL and SOAP for transferring data between the applications Worked on XML technologies like XML Parsers JAXB for binding data to java objects Used Java Messaging Services JMS for reliable and asynchronous communication Implemented the persistence layer using Hibernate and JDBC Template and developed the DAL Data Access Layer to store and retrieve data from the database Responsible to writing JDBC programming to persist the data in My SQL database Written some SQL Queries and PLSQL procedures to fetch data from the database Tested Service and data access tier using JUnit Used Web Logic for application deployment and Log 4J used for Loggingdebugging Used CVS version controlling tool and project build tool using ANT Worked with production support team in debugging and fixing various production issues Environment Java J2EE JSP HTML CSS JavaScript jQuery Struts Restful Services SOAP WSDL Hibernate JDBC JMS My SQL CVS ANT Log4j and Web Logic Skills ECLIPSE J2EE JAVA HIBERNATE SPRING Additional Information TECHNICAL SKILLS Languages C C Java 18 J2EE SQL and PLSQL Enterprise Java JSP Servlet JDBC and Java security MarkupXML Technologies HTML CSS Bootstrap JavaScript JQuery Ajax AngularJS NodeJS XHTML XML XSD XSLXSLT SAXDOM and JSON Tools Framework Servlets Struts Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data JSF JUnit Mockito and SOAP UI Google Web Toolkit Visual Studio Code Mongo Vue Web services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis and Apache CXF Postman Micro Services AWS Amazon Web Services WebApp Servers Web Sphere Apache Tomcat JBOSS EAP and Web Logic Server Cloud Technologies Amazon Web Services EC2 SQS RDS IAM S3 and Spring Cloud Database Oracle My SQL DB2 MongoDB and Dynamo DB OR mapping Hibernate IBATIS Development Tools Eclipse RAD Spring Tool Suite and Intellij Testing Tools Others JUnit and Soap UI Version Control Tortoise SVN CVS and GitHub OS Environment Windows UNIX and LINUX Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns",
    "extracted_keywords": [
        "Sr",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Sr",
        "span",
        "lJavaspanJ2EE",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "General",
        "Automobile",
        "Insurance",
        "Franklin",
        "TN",
        "years",
        "IT",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "development",
        "design",
        "analysis",
        "testing",
        "Integration",
        "web",
        "applications",
        "environments",
        "JAVAJ2EE",
        "technologies",
        "Experience",
        "applications",
        "SDLC",
        "methodologies",
        "Waterfall",
        "Agile",
        "TDD",
        "SCRUM",
        "TestDriven",
        "Development",
        "Developed",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Micro",
        "Service",
        "Architecture",
        "J2EE",
        "applications",
        "Expertise",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "Ajax",
        "AngularJS",
        "webpage",
        "cross",
        "browser",
        "compatibility",
        "Responsive",
        "Web",
        "Design",
        "knowledge",
        "Server",
        "language",
        "NodeJS",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "Stream",
        "API",
        "Bulk",
        "data",
        "operations",
        "Collections",
        "performance",
        "Application",
        "Experience",
        "applications",
        "Cloud",
        "Platforms",
        "Amazon",
        "Web",
        "Services",
        "Managed",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "bucket",
        "ELB",
        "AutoScaling",
        "SNS",
        "SQS",
        "AMI",
        "IAM",
        "Dynamo",
        "DB",
        "search",
        "Virtual",
        "Cloud",
        "VPC",
        "AWS",
        "Console",
        "API",
        "Integration",
        "Excellent",
        "applications",
        "AWS",
        "EC2",
        "instances",
        "snapshots",
        "data",
        "AWS",
        "S3",
        "AWS",
        "Security",
        "Groups",
        "firewalls",
        "traffic",
        "EC2",
        "instances",
        "troubleshooting",
        "cloud",
        "foundry",
        "Experience",
        "understanding",
        "Micro",
        "Services",
        "Created",
        "Micro",
        "Services",
        "Web",
        "API",
        "Spring",
        "Boot",
        "Create",
        "delivery",
        "pipelines",
        "Micro",
        "Services",
        "Lambda",
        "functions",
        "Jenkins",
        "CI",
        "server",
        "applications",
        "JavaJ2EE",
        "Servlets",
        "Struts",
        "Struts",
        "Tag",
        "Libraries",
        "Struts",
        "custom",
        "validation",
        "rules",
        "Tiles",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "Data",
        "JDBC",
        "Web",
        "Services",
        "services",
        "ORM",
        "frameworks",
        "Hibernate",
        "iBatis",
        "Excellent",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "JAXRS",
        "JAXWS",
        "WSDL",
        "JAXB",
        "Apache",
        "Axis",
        "Apache",
        "CXF",
        "Jersey",
        "frameworks",
        "implementation",
        "JMS",
        "information",
        "channel",
        "way",
        "ActiveMQ",
        "RabbitMQ",
        "Kafka",
        "message",
        "queue",
        "Experience",
        "Hibernate",
        "mapping",
        "Java",
        "classes",
        "database",
        "Criteria",
        "API",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "Proficient",
        "web",
        "services",
        "Python",
        "XML",
        "JSON",
        "Good",
        "Knowledge",
        "Data",
        "Access",
        "Object",
        "DAO",
        "pattern",
        "abstraction",
        "layer",
        "Business",
        "logic",
        "tier",
        "Business",
        "object",
        "storage",
        "tier",
        "data",
        "source",
        "SQL",
        "Oracle",
        "MySQL",
        "IBM",
        "DB2",
        "Hands",
        "Experience",
        "NoSQL",
        "Database",
        "MongoDB",
        "Cassandra",
        "data",
        "sets",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "Triggers",
        "business",
        "tables",
        "Hands",
        "experience",
        "JUnit",
        "Mockito",
        "Selenium",
        "Groovy",
        "applications",
        "production",
        "servers",
        "parameters",
        "servers",
        "IBM",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "JBOSS",
        "BEA",
        "Web",
        "Logic",
        "production",
        "support",
        "client",
        "business",
        "user",
        "application",
        "business",
        "applications",
        "L2",
        "production",
        "support",
        "engineer",
        "deployment",
        "applications",
        "object",
        "Docker",
        "DevOps",
        "streamlining",
        "process",
        "Jenkins",
        "CI",
        "CD",
        "Release",
        "Automation",
        "Proficient",
        "Automation",
        "tools",
        "Selenium",
        "WebDriver",
        "Selenium",
        "GRID",
        "Java",
        "automation",
        "scripts",
        "Eclipse",
        "IDE",
        "TestNG",
        "Maven",
        "Jenkins",
        "Web",
        "Based",
        "Applications",
        "version",
        "controller",
        "tools",
        "Tortoise",
        "Subversion",
        "SVN",
        "CVS",
        "GIT",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "AWS",
        "AMIs",
        "Experience",
        "IDES",
        "JBoss",
        "Eclipse",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "RAD",
        "IntelliJ",
        "experience",
        "Windows",
        "Linux",
        "UNIX",
        "Operating",
        "Systems",
        "Ability",
        "team",
        "environments",
        "experience",
        "training",
        "business",
        "users",
        "understanding",
        "Business",
        "workflow",
        "Business",
        "logic",
        "Business",
        "methods",
        "implementation",
        "user",
        "requirement",
        "application",
        "environment",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "General",
        "Automobile",
        "Insurance",
        "Nashville",
        "TN",
        "January",
        "Present",
        "Description",
        "General",
        "Automobile",
        "Insurance",
        "Services",
        "Inc",
        "General",
        "insurance",
        "agency",
        "subsidiary",
        "PGC",
        "Holdings",
        "Corp",
        "PGC",
        "affiliate",
        "American",
        "Family",
        "Insurance",
        "insurance",
        "company",
        "subsidiaries",
        "predecessors",
        "PGC",
        "automobile",
        "insurance",
        "states",
        "country",
        "years",
        "Responsibilities",
        "Daily",
        "Scrum",
        "meetings",
        "Sprint",
        "planning",
        "estimation",
        "tasks",
        "user",
        "stories",
        "Demo",
        "end",
        "sprint",
        "hands",
        "experience",
        "Microservices",
        "Architecture",
        "Style",
        "patterns",
        "software",
        "services",
        "business",
        "domain",
        "Experience",
        "Cloud",
        "computing",
        "microservices",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Netflix",
        "Eureka",
        "Discovery",
        "Eureka",
        "Server",
        "Zuul",
        "Ribbon",
        "Hystrix",
        "Feign",
        "Experience",
        "batch",
        "processes",
        "Java",
        "Java",
        "Spring",
        "batch",
        "framework",
        "Experience",
        "Webservices",
        "Java",
        "Java",
        "frameworks",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "framework",
        "Swagger",
        "specs",
        "REST",
        "APIs",
        "REST",
        "principles",
        "Restful",
        "Web",
        "Services",
        "JAXWS",
        "SQL",
        "NoSQL",
        "databases",
        "Oracle",
        "Mongodb",
        "Wrote",
        "views",
        "Triggers",
        "Stored",
        "Procedures",
        "MySQL",
        "database",
        "Log",
        "Management",
        "tools",
        "Kibana",
        "newRelic",
        "AWS",
        "Cloud",
        "Services",
        "infrastructure",
        "AWS",
        "Stack",
        "database",
        "setup",
        "maintenance",
        "AWS",
        "EC2",
        "health",
        "utilization",
        "AWS",
        "resources",
        "AWS",
        "Cloud",
        "Watch",
        "Experience",
        "build",
        "scripts",
        "Maven",
        "experience",
        "Jenkins",
        "Strong",
        "TDD",
        "test",
        "development",
        "integration",
        "experience",
        "JUnit",
        "Mock",
        "Framework",
        "defectsbugs",
        "regression",
        "testing",
        "preproduction",
        "experience",
        "documentation",
        "designs",
        "charts",
        "DATA",
        "Models",
        "documents",
        "Sharepoint",
        "products",
        "JIRA",
        "Confluence",
        "business",
        "process",
        "Conducted",
        "code",
        "reviews",
        "standards",
        "practices",
        "development",
        "process",
        "Environment",
        "Java",
        "Agile",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Spring",
        "Data",
        "RESTful",
        "Services",
        "Mongodb",
        "Intellij",
        "Eclipse",
        "GIT",
        "Jenkins",
        "Full",
        "Stack",
        "Developer",
        "ACT",
        "Iowa",
        "City",
        "IA",
        "January",
        "December",
        "Description",
        "ACT",
        "college",
        "readiness",
        "assessment",
        "test",
        "school",
        "achievement",
        "college",
        "admissions",
        "United",
        "States",
        "ODS",
        "Operational",
        "Data",
        "Store",
        "data",
        "services",
        "team",
        "event",
        "payloads",
        "services",
        "data",
        "document",
        "teams",
        "data",
        "Endpoints",
        "OAuth",
        "act",
        "source",
        "data",
        "application",
        "MongoDB",
        "data",
        "process",
        "Responsibilities",
        "clients",
        "requirements",
        "stories",
        "sprints",
        "CreatingManaging",
        "release",
        "plan",
        "sprint",
        "deliveries",
        "version",
        "control",
        "GIT",
        "configuration",
        "project",
        "track",
        "project",
        "activities",
        "Sprint",
        "execution",
        "planning",
        "JIRA",
        "Collaborative",
        "work",
        "team",
        "sprint",
        "TestingScrum",
        "MasterBusiness",
        "Analysts",
        "proactiveness",
        "roadblocks",
        "implementation",
        "AWS",
        "solutions",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "EC2",
        "instances",
        "Cloud",
        "Watch",
        "resources",
        "EC2",
        "Amazon",
        "RDS",
        "DB",
        "services",
        "Dynamo",
        "DB",
        "tables",
        "EBS",
        "knowledge",
        "Developed",
        "Java",
        "API",
        "AWS",
        "S3",
        "Services",
        "data",
        "S3",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "creation",
        "Spring",
        "Configurations",
        "Java",
        "Lambda",
        "expressions",
        "Streams",
        "filters",
        "core",
        "concepts",
        "Collection",
        "Framework",
        "Multithreading",
        "Generics",
        "Annotations",
        "Serialization",
        "Thread",
        "JavaBeans",
        "Externalization",
        "Developed",
        "Controller",
        "Classes",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "Spring",
        "Boot",
        "Spring",
        "Batch",
        "modules",
        "security",
        "Spring",
        "Security",
        "JAXRS",
        "Spring",
        "Boot",
        "application",
        "Spring",
        "Configuration",
        "XML",
        "file",
        "declarations",
        "objects",
        "declaration",
        "Consumed",
        "Web",
        "Services",
        "interfaces",
        "order",
        "data",
        "forms",
        "service",
        "Developed",
        "JUnit",
        "test",
        "cases",
        "DAO",
        "Service",
        "Layer",
        "methods",
        "test",
        "cases",
        "application",
        "functionalities",
        "Junit",
        "Mockito",
        "PowerMock",
        "EasyMock",
        "frameworks",
        "Developed",
        "Module",
        "persistence",
        "layer",
        "guidance",
        "DAO",
        "design",
        "pattern",
        "ORMJPA",
        "principles",
        "Hibernate",
        "Data",
        "Access",
        "DAO",
        "addition",
        "modification",
        "deletion",
        "records",
        "specification",
        "files",
        "functionality",
        "AngularJS",
        "Java",
        "Script",
        "objects",
        "data",
        "REST",
        "Services",
        "endpoints",
        "OAuth",
        "services",
        "web",
        "services",
        "Java",
        "Tested",
        "Web",
        "Services",
        "Postman",
        "programs",
        "data",
        "Rabbit",
        "Queues",
        "Triggers",
        "handson",
        "experience",
        "Quartz",
        "Worked",
        "Mongo",
        "DB",
        "Aggregation",
        "Framework",
        "mapreduce",
        "job",
        "combination",
        "frameworks",
        "Version",
        "control",
        "SVN",
        "Bitbucket",
        "CICD",
        "process",
        "delivery",
        "stories",
        "Hands",
        "experience",
        "Splunk",
        "logs",
        "environments",
        "Environment",
        "Java",
        "Agile",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Spring",
        "Data",
        "RESTful",
        "Services",
        "Jersey",
        "Robomongo",
        "Jira",
        "OAuth",
        "Postman",
        "Tortoise",
        "SVN",
        "Quick",
        "Build",
        "Splunk",
        "Ant",
        "JBoss",
        "Developer",
        "Studio",
        "JBoss",
        "Application",
        "Server",
        "Easymock",
        "Powermock",
        "Jenkins",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Charter",
        "Communications",
        "St",
        "Louis",
        "MO",
        "March",
        "December",
        "Description",
        "Charter",
        "Communications",
        "telecommunications",
        "company",
        "services",
        "cable",
        "television",
        "highspeed",
        "internet",
        "telephone",
        "services",
        "consumers",
        "businesses",
        "branding",
        "Spectrum",
        "project",
        "Order",
        "Management",
        "functionality",
        "statusfeasibility",
        "user",
        "services",
        "systems",
        "inventory",
        "activation",
        "billing",
        "Responsibilities",
        "UI",
        "HTML5",
        "CSS3",
        "jQuery",
        "Bootstrap",
        "AngularJS",
        "custom",
        "directives",
        "attribute",
        "level",
        "element",
        "level",
        "class",
        "level",
        "directives",
        "callback",
        "functions",
        "thread",
        "NodeJS",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "Elastic",
        "Bean",
        "Stalk",
        "EC2",
        "SQS",
        "S3",
        "Elastic",
        "Search",
        "Elastic",
        "Load",
        "Balancer",
        "Docker",
        "services",
        "Cloud",
        "monitoring",
        "alerting",
        "production",
        "serversstorage",
        "AWS",
        "Cloud",
        "Watch",
        "troubleshooting",
        "issues",
        "cloud",
        "foundry",
        "environments",
        "Micro",
        "Services",
        "business",
        "components",
        "Spring",
        "Boot",
        "Implemented",
        "Micro",
        "Services",
        "application",
        "sub",
        "modules",
        "Spring",
        "Security",
        "authentication",
        "layer",
        "authenticating",
        "users",
        "credentials",
        "LDAP",
        "Batch",
        "jobs",
        "number",
        "chunks",
        "Spring",
        "Batch",
        "Framework",
        "jobs",
        "REST",
        "Micro",
        "Services",
        "Spring",
        "Cloud",
        "Oracle",
        "XSD",
        "JSON",
        "Spring",
        "Config",
        "Jenkins",
        "application",
        "application",
        "Micro",
        "Service",
        "Architecture",
        "RESTful",
        "Service",
        "deployments",
        "AWS",
        "Spring",
        "Cloud",
        "AWS",
        "persistence",
        "layer",
        "Hibernate",
        "Data",
        "Access",
        "Layer",
        "documents",
        "customer",
        "Apache",
        "Kafka",
        "messages",
        "consumers",
        "Consumed",
        "REST",
        "Web",
        "Services",
        "data",
        "LDAP",
        "thirdparty",
        "Services",
        "Design",
        "Development",
        "Resource",
        "URIs",
        "Collection",
        "URIs",
        "REST",
        "Web",
        "Services",
        "JAXRS",
        "JAXB",
        "annotations",
        "data",
        "Used",
        "Jersey",
        "Framework",
        "REST",
        "APIs",
        "Postman",
        "request",
        "responses",
        "REST",
        "Services",
        "Oracle",
        "Database",
        "Operational",
        "Data",
        "Storage",
        "ODS",
        "payment",
        "operations",
        "users",
        "MongoDB",
        "Application",
        "Data",
        "Storage",
        "ADS",
        "details",
        "members",
        "form",
        "documents",
        "Mongo",
        "Vue",
        "interface",
        "operations",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "cursors",
        "indexes",
        "UNIX",
        "shell",
        "scripting",
        "generation",
        "reports",
        "test",
        "cases",
        "Mockito",
        "framework",
        "functionalities",
        "application",
        "Log4j",
        "errors",
        "UI",
        "Unit",
        "Test",
        "cases",
        "functionality",
        "business",
        "logic",
        "Groovy",
        "code",
        "Functional",
        "Testing",
        "Gradle",
        "build",
        "tool",
        "dependencies",
        "Gradle",
        "command",
        "line",
        "GIT",
        "BASH",
        "war",
        "file",
        "enterprise",
        "application",
        "Web",
        "Sphere",
        "application",
        "server",
        "requests",
        "Client",
        "deployment",
        "issues",
        "applications",
        "integration",
        "environments",
        "Jenkins",
        "code",
        "CI",
        "environments",
        "development",
        "testing",
        "JIRA",
        "tool",
        "Issuebug",
        "tracking",
        "monitoring",
        "work",
        "assignment",
        "system",
        "GIT",
        "Version",
        "Control",
        "tool",
        "Intellij",
        "IDE",
        "Environment",
        "Java",
        "J2EE",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JQuery",
        "NodeJS",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Spring",
        "Data",
        "RESTful",
        "Services",
        "Jersey",
        "Hibernate",
        "Gradle",
        "Micro",
        "Services",
        "Amazon",
        "Web",
        "Services",
        "Oracle",
        "Docker",
        "MongoDB",
        "Mockito",
        "Log4j",
        "JIRA",
        "GIT",
        "Jenkins",
        "Intellij",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "JavaJ2EE",
        "Developer",
        "State",
        "New",
        "York",
        "Albany",
        "NY",
        "July",
        "March",
        "Description",
        "New",
        "York",
        "Motor",
        "Vehicle",
        "Commission",
        "MVC",
        "government",
        "agency",
        "plates",
        "drivers",
        "US",
        "state",
        "New",
        "York",
        "support",
        "titles",
        "registrations",
        "Responsibilities",
        "Agile",
        "Scrum",
        "environment",
        "SDLC",
        "process",
        "Daily",
        "Scrum",
        "meetings",
        "Sprint",
        "planning",
        "estimation",
        "tasks",
        "user",
        "stories",
        "Demo",
        "end",
        "sprint",
        "User",
        "Interface",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "jQuery",
        "AngularJS",
        "NodeJS",
        "page",
        "application",
        "JavaScript",
        "code",
        "AngularJS",
        "Created",
        "web",
        "pages",
        "Bootstrap",
        "Consumed",
        "REST",
        "Web",
        "services",
        "serverside",
        "application",
        "JAXRS",
        "libraries",
        "data",
        "data",
        "client",
        "modification",
        "UI",
        "application",
        "Spring",
        "Framework",
        "Modules",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Model",
        "View",
        "Controller",
        "Spring",
        "Security",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Hibernate",
        "Integrated",
        "spring",
        "Dependency",
        "Injection",
        "Spring",
        "IOC",
        "layers",
        "application",
        "application",
        "Spring",
        "AOP",
        "purposes",
        "service",
        "layer",
        "bridge",
        "presentation",
        "layer",
        "data",
        "access",
        "layer",
        "spring",
        "framework",
        "RabbitMQ",
        "message",
        "broker",
        "messages",
        "subscribers",
        "consumers",
        "web",
        "services",
        "JAXRS",
        "annotations",
        "Jersey",
        "provider",
        "security",
        "LDAP",
        "SOA",
        "architecture",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "UDDI",
        "XML",
        "Apache",
        "CXF",
        "framework",
        "XML",
        "files",
        "DOMSAX",
        "parsers",
        "parsing",
        "XML",
        "construction",
        "logic",
        "XML",
        "parser",
        "APIs",
        "JAXB",
        "persistence",
        "Layer",
        "Hibernate",
        "data",
        "data",
        "Oracle",
        "database",
        "Developed",
        "queries",
        "hibernate",
        "criteria",
        "SQL",
        "HQL",
        "inheritance",
        "domain",
        "objects",
        "table",
        "class",
        "hierarchy",
        "strategy",
        "NoSQL",
        "DB",
        "database",
        "MongoDB",
        "proof",
        "concept",
        "experience",
        "Stored",
        "Procedures",
        "experience",
        "Remote",
        "Procedure",
        "RPC",
        "Redis",
        "test",
        "cases",
        "application",
        "functionalities",
        "JUnit",
        "Packaged",
        "application",
        "Web",
        "Logic",
        "Application",
        "server",
        "environments",
        "Development",
        "testing",
        "log4J",
        "application",
        "logging",
        "notification",
        "tracing",
        "mechanisms",
        "build",
        "process",
        "Maven",
        "automation",
        "tool",
        "JIRA",
        "track",
        "bugs",
        "stories",
        "Spring",
        "Tool",
        "Suite",
        "IDE",
        "GIT",
        "Version",
        "Controller",
        "version",
        "files",
        "responsibility",
        "code",
        "merges",
        "branch",
        "trunk",
        "branch",
        "feature",
        "implementation",
        "Environment",
        "Java",
        "J2EE",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JQuery",
        "NodeJS",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Spring",
        "Boot",
        "WSDL",
        "Service",
        "Oriented",
        "Architecture",
        "Hibernate",
        "Oracle",
        "JBOSS",
        "JUnit",
        "Log4j",
        "Maven",
        "JIRA",
        "GIT",
        "Spring",
        "Toot",
        "Suite",
        "JavaJ2EE",
        "Developer",
        "Techno",
        "Soft",
        "Solutions",
        "Bengaluru",
        "Karnataka",
        "May",
        "December",
        "Description",
        "Techno",
        "range",
        "services",
        "experts",
        "experience",
        "building",
        "EMail",
        "Internet",
        "networks",
        "services",
        "architecture",
        "design",
        "software",
        "solutions",
        "website",
        "design",
        "development",
        "deployment",
        "services",
        "support",
        "Responsibilities",
        "helper",
        "classes",
        "Core",
        "Java",
        "programming",
        "Struts",
        "MVC",
        "design",
        "pattern",
        "controller",
        "pattern",
        "project",
        "user",
        "interface",
        "webpage",
        "component",
        "Struts",
        "web",
        "MVC",
        "Action",
        "Servlet",
        "controller",
        "application",
        "Action",
        "Class",
        "components",
        "business",
        "process",
        "execution",
        "configuration",
        "struts",
        "configuration",
        "xml",
        "file",
        "SCM",
        "JSPHTML",
        "form",
        "functionality",
        "user",
        "validations",
        "JavaScript",
        "Servlets",
        "controllers",
        "business",
        "logic",
        "business",
        "logic",
        "JDBC",
        "XML",
        "techniques",
        "MVC",
        "application",
        "Spring",
        "Frame",
        "work",
        "Value",
        "classes",
        "values",
        "Data",
        "Layer",
        "Business",
        "logic",
        "layer",
        "data",
        "layer",
        "DAOs",
        "Sign",
        "SSO",
        "functionality",
        "SCM",
        "Oracle",
        "Applications",
        "Routings",
        "Routing",
        "Program",
        "request",
        "ServerSide",
        "components",
        "business",
        "services",
        "Items",
        "BOM",
        "Sourcing",
        "Rules",
        "substitute",
        "Notifications",
        "Oracle",
        "Users",
        "Mailing",
        "Concept",
        "process",
        "workflow",
        "SQL",
        "Server",
        "queries",
        "business",
        "logic",
        "layer",
        "SCM",
        "packages",
        "customization",
        "setups",
        "Organizations",
        "Templates",
        "Concurrent",
        "Requests",
        "Cross",
        "Reference",
        "Types",
        "User",
        "Creations",
        "responsibilities",
        "value",
        "Descriptive",
        "Flex",
        "Fields",
        "SQL",
        "Server",
        "Applications",
        "SVN",
        "source",
        "code",
        "version",
        "control",
        "JIRA",
        "issues",
        "Log4J",
        "Logging",
        "Errors",
        "tracking",
        "loggers",
        "components",
        "methodology",
        "reports",
        "documentation",
        "manuals",
        "program",
        "development",
        "Environment",
        "Java",
        "JDBC",
        "Servlets",
        "Struts",
        "JSP",
        "Hibernate",
        "Java",
        "Mail",
        "API",
        "AJAX",
        "HTML",
        "XML",
        "ANT",
        "Log4J",
        "CVS",
        "RAD",
        "Putty",
        "SQL",
        "Server",
        "Apache",
        "Tomcat",
        "SQL",
        "Server",
        "JavaJ2EE",
        "Developer",
        "Mega",
        "Soft",
        "Technologies",
        "Hyderabad",
        "Telangana",
        "June",
        "May",
        "Description",
        "object",
        "project",
        "frame",
        "work",
        "life",
        "cycle",
        "cost",
        "product",
        "warranty",
        "project",
        "aim",
        "warranty",
        "analysis",
        "warranty",
        "claims",
        "data",
        "trends",
        "feedback",
        "product",
        "version",
        "Responsibilities",
        "implementation",
        "design",
        "phases",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "Development",
        "Testing",
        "Implementation",
        "Maintenance",
        "Support",
        "WATER",
        "FALL",
        "methodology",
        "Web",
        "Pages",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "Query",
        "Struts",
        "framework",
        "MVC",
        "design",
        "pattern",
        "Session",
        "Faade",
        "Pattern",
        "Session",
        "Entity",
        "Beans",
        "Struts",
        "web",
        "tier",
        "development",
        "Struts",
        "Action",
        "Controllers",
        "requests",
        "files",
        "Struts",
        "Tag",
        "library",
        "coding",
        "application",
        "J2EE",
        "Struts",
        "MVC",
        "Struts",
        "framework",
        "Action",
        "Controller",
        "classes",
        "request",
        "classes",
        "Struts",
        "Validation",
        "validation",
        "user",
        "input",
        "business",
        "logic",
        "data",
        "Developed",
        "Restful",
        "Services",
        "SOAP",
        "Web",
        "Services",
        "Developed",
        "Web",
        "Service",
        "provider",
        "methods",
        "approach",
        "WSDL",
        "SOAP",
        "data",
        "applications",
        "XML",
        "technologies",
        "XML",
        "Parsers",
        "JAXB",
        "data",
        "objects",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "communication",
        "persistence",
        "layer",
        "Hibernate",
        "JDBC",
        "Template",
        "DAL",
        "Data",
        "Access",
        "Layer",
        "data",
        "database",
        "JDBC",
        "programming",
        "data",
        "SQL",
        "database",
        "SQL",
        "Queries",
        "PLSQL",
        "procedures",
        "data",
        "database",
        "Tested",
        "Service",
        "data",
        "access",
        "tier",
        "JUnit",
        "Web",
        "Logic",
        "application",
        "deployment",
        "Log",
        "4J",
        "CVS",
        "version",
        "controlling",
        "tool",
        "project",
        "build",
        "tool",
        "ANT",
        "production",
        "support",
        "team",
        "production",
        "issues",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Struts",
        "Restful",
        "Services",
        "SOAP",
        "WSDL",
        "Hibernate",
        "JDBC",
        "JMS",
        "SQL",
        "CVS",
        "ANT",
        "Log4j",
        "Web",
        "Logic",
        "Skills",
        "ECLIPSE",
        "J2EE",
        "HIBERNATE",
        "SPRING",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "C",
        "C",
        "Java",
        "J2EE",
        "SQL",
        "PLSQL",
        "Enterprise",
        "Java",
        "JSP",
        "Servlet",
        "JDBC",
        "Java",
        "security",
        "MarkupXML",
        "Technologies",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "Ajax",
        "AngularJS",
        "NodeJS",
        "XHTML",
        "XML",
        "XSD",
        "XSLXSLT",
        "SAXDOM",
        "JSON",
        "Tools",
        "Framework",
        "Servlets",
        "Struts",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Spring",
        "Data",
        "JSF",
        "JUnit",
        "Mockito",
        "SOAP",
        "UI",
        "Google",
        "Web",
        "Toolkit",
        "Visual",
        "Studio",
        "Code",
        "Mongo",
        "Vue",
        "Web",
        "services",
        "RESTful",
        "UDDI",
        "WSDL",
        "JAXRPC",
        "JAXRS",
        "JAXWS",
        "JAXB",
        "Axis",
        "Apache",
        "CXF",
        "Postman",
        "Micro",
        "Services",
        "Amazon",
        "Web",
        "Services",
        "WebApp",
        "Servers",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "JBOSS",
        "EAP",
        "Web",
        "Logic",
        "Server",
        "Cloud",
        "Technologies",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "SQS",
        "RDS",
        "IAM",
        "S3",
        "Spring",
        "Cloud",
        "Database",
        "Oracle",
        "SQL",
        "DB2",
        "MongoDB",
        "Dynamo",
        "DB",
        "mapping",
        "Hibernate",
        "IBATIS",
        "Development",
        "Tools",
        "Eclipse",
        "RAD",
        "Spring",
        "Tool",
        "Suite",
        "Intellij",
        "Testing",
        "Tools",
        "Others",
        "JUnit",
        "Soap",
        "UI",
        "Version",
        "Control",
        "Tortoise",
        "SVN",
        "CVS",
        "GitHub",
        "OS",
        "Environment",
        "UNIX",
        "LINUX",
        "Design",
        "Patterns",
        "MVC",
        "Front",
        "Controller",
        "Singleton",
        "Business",
        "Delegate",
        "DAO",
        "patterns"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:26:26.187395",
    "resume_data": "Sr JavaJ2EE Full Stack Developer Sr span lJavaspanJ2EE Full Stack span lDeveloperspan Sr JavaJ2EE Full Stack Developer The General Automobile Insurance Franklin TN Having 6 years of extensive IT experience in all phases of Software Development Life Cycle SDLC which includes development design analysis testing and Integration of various web based and clientserver applications in multiplatform environments with JAVAJ2EE technologies Experience in developing applications using SDLC methodologies like Waterfall Agile TDD SCRUM and TestDriven Development Developed Service Oriented Architecture SOA and Micro Service Architecture based J2EE applications Expertise in developing web pages using HTML5 CSS3 Bootstrap JavaScript JQuery Ajax and AngularJS with webpage cross browser compatibility and Responsive Web Design and have knowledge on Server scripting language like NodeJS Utilized Java 18 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application Experience in developing and deploying applications on Cloud Platforms like Amazon Web Services Managed Amazon Web Services like EC2 S3 bucket ELB AutoScaling SNS SQS AMI IAM Dynamo DB Elastic search Virtual Private Cloud VPC through AWS Console and API Integration Excellent in deploying the applications in AWS as EC2 instances and created snapshots for the data that had to be stored in AWS S3 Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed reaching one or more EC2 instances Experience in troubleshooting within Pivotal cloud foundry Experience with and solid understanding of Micro Services Created and consumed Micro Services based on Web API using Spring Boot Create and configured the continuous delivery pipelines for deploying Micro Services and Lambda functions using Jenkins CI server Experienced in developing webbased applications using JavaJ2EE Servlets Struts Struts Tag Libraries and Struts custom validation rules Tiles Spring IOC Spring MVC Spring AOP Spring Security Spring Boot Spring Web Flow Spring Data JDBC Web Services SOAP RESTful services and ORM frameworks like Hibernate iBatis Excellent in developing REST and SOAP based Web Services using JAXRS JAXWS WSDL JAXB Apache Axis Apache CXF and Jersey frameworks Experienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ RabbitMQ Kafka as message queue Experience using Hibernate for mapping Java classes with database and using Criteria API and Hibernate Query Language HQL Proficient in developing RESTful web services in Python using XML JSON Good Knowledge of Data Access Object DAO pattern to introduce an abstraction layer between the Business logic tier Business object and the Persistent storage tier data source Worked with SQL databases like Oracle MySQL IBM DB2 and Hands on Experience in working with NoSQL Database like MongoDB Cassandra to manage extremely large data sets Proficient in writing SQL queries PLSQL Stored Procedures Triggers and creating business tables Hands on experience in working with JUnit Mockito Selenium and Groovy Experienced with deploying applications on to production servers configuring various parameters of servers like IBM Web Sphere Apache Tomcat JBOSS BEA Web Logic Worked on production support for the client and business user application Also supported critical business applications as L2 production support engineer Portable deployment of applications as a single object using Docker Actively involved in the DevOps streamlining process through Jenkins CI and CD Release Automation Proficient on Automation tools like Selenium WebDriver and Selenium GRID using Java for developing automation scripts in Eclipse IDE with TestNG Maven and Jenkins for testing Web Based Applications Used version controller tools like Tortoise Subversion SVN CVS and GIT Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and AWS AMIs Experience in working with IDES like JBoss Eclipse Spring Tool Suite STS RAD and IntelliJ Have extensive experience working on Windows Linux and UNIX Operating Systems Ability to work effectively in crossfunctional team environments and experience of providing training to business users Good understanding of Business workflow Business logic and Business methods for further implementation of user requirement in a distributed application environment Authorized to work in the US for any employer Work Experience Sr JavaJ2EE Full Stack Developer The General Automobile Insurance Nashville TN January 2019 to Present Description The General Automobile Insurance Services Inc The General is a licensed insurance agency that is a subsidiary of PGC Holdings Corp PGC which is an affiliate of American Family Insurance Through its insurance company subsidiaries and their predecessors PGC has been writing automobile insurance in many states throughout the country for over 50 years Responsibilities Involved in Daily Scrum meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Technical hands on experience with Microservices Architecture Style and the related patterns where software is developed as small and independently deployable services that work together modeled around a business domain Experience in developing Cloud computing microservices using Spring Boot Spring Cloud and Netflix based Eureka Discovery Eureka Server Zuul Ribbon Hystrix and Feign Experience in developing batch processes in Java and Java Spring batch framework Experience of designing Webservices in Java and Java frameworks using Spring Boot and Spring Cloud framework Worked on defining Swagger specs for REST APIs understand REST principles Developed Restful Web Services using JAXWS Experienced in working with SQL and NoSQL databases including Oracle Mongodb Wrote views Triggers Stored Procedures using MySQL database Log Management tools Kibana newRelic Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance on AWS EC2 Checked the health and utilization of AWS resources using AWS Cloud Watch Experience in creating build scripts using Maven also have experience in Jenkins Strong TDD test driven development and continuous integration experience using JUnit Mock Framework Resolved defectsbugs during regression testing preproduction Good experience in documentation of designs and flow charts Also worked on designing DATA Models and maintain the existing documents in Sharepoint Used the Atlassian products JIRA Confluence in the business process Conducted code reviews against coding standards and made sure the best practices are maintained in development process Environment Java 1718 Agile Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Mongodb Intellij Eclipse GIT Jenkins Full Stack Developer ACT Iowa City IA January 2018 to December 2018 Description The ACT college readiness assessment is a standardized test for high school achievement and college admissions in the United States ODS Operational Data Store is the data services team which integrates event based the incoming payloads from different services and transform the data to create a standard Canonical document for the dependent teams to further consume the data Endpoints exposed using OAuth 20 act as the source for data incoming in the application MongoDB is implemented to handle the dynamic data in this process Responsibilities Understanding clients requirements and turning them into modularized stories for sprints CreatingManaging release plan sprint deliveries responsible for version control GIT and configuration of the project keeping track of project activities Sprint execution planning in JIRA Collaborative work with the team on the sprint TestingScrum MasterBusiness Analysts and proactiveness in resolving roadblocks Involved in implementation Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups and EC2 instances Worked on Cloud Watch to monitor resources such as EC2 Amazon RDS DB services Dynamo DB tables and EBS volumes Good knowledge in Developed Java API to connect with AWS S3 Services for storing and retrieving data stored in the S3 buckets Developed API for using AWS Lambda to manage the servers and run the code in the AWS Participated in creation of Spring Configurations using Java 18 features Lambda expressions Streams filters Proficient in core java concepts like Collection Framework Multithreading Generics Annotations Serialization Thread pools JavaBeans Externalization Developed Controller Classes using Spring MVC Spring AOP Spring Boot Spring Batch modules and handled the security using Spring Security Involved in integrating JAXRS into Spring Boot application Involved in writing Spring Configuration XML file that contains declarations and other dependent objects declaration Consumed Web Services to interact with other external interfaces in order to exchange the data in different forms by using Restful service Developed JUnit test cases for DAO and Service Layer methods Developed the test cases to test the application functionalities using Junit using Mockito PowerMock EasyMock frameworks Designed and Developed Module based persistence layer under the guidance of DAO design pattern ORMJPA principles using Hibernate Involved in creating various Data Access Objects DAO for addition modification and deletion of records using various specification files Implemented functionality like searching filtering sorting validating using AngularJS and Java Script for creating objects that store the JSON data retrieved from REST Services Worked on endpoints with OAuth 20 and implemented services using Restful web services in Java Tested Web Services Using Postman Extensively worked on eventbased programs to incorporate incoming data using Rabbit Queues Worked on creating new Triggers and handson experience with Quartz Worked on Mongo DB Aggregation Framework mapreduce and created a job for running a combination of these frameworks Version control using SVN and Bitbucket CICD process for continuous delivery of the stories Hands on experience with Splunk for monitoring the logs in all the environments Environment Java 1718 Agile Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Jersey Robomongo Jira OAuth 20 Postman Tortoise SVN Quick Build Splunk Ant JBoss Developer Studio JBoss Application Server Easymock Powermock RabbitMQ Jenkins JavaJ2EE Full Stack Developer Charter Communications St Louis MO March 2017 to December 2017 Description Charter Communications is an American telecommunications company which offers its services like cable television highspeed internet and telephone services to consumers and businesses under the branding of Spectrum The project is to develop Order Management which provides the functionality to test the statusfeasibility of user requested services by interacting with other downstream systems like inventory activation and billing Responsibilities Developed the existing UI with HTML5 CSS3 jQuery Bootstrap and AngularJS Developed AngularJS custom directives working on attribute level element level and class level directives Developed Eventbased callback functions on a single thread using NodeJS Worked with AWS Amazon Web Services Elastic Bean Stalk like EC2 SQS S3 Elastic Search and Elastic Load Balancer Used Docker to containerize the services and deploy on Cloud Implemented and maintained the monitoring and alerting of production and corporate serversstorage using AWS Cloud Watch Involved in troubleshooting issues within Pivotal cloud foundry environments Designed and developed Micro Services business components using Spring Boot Implemented Micro Services to divide the application into various sub modules Used Spring Security as authentication layer for authenticating users using the credentials from LDAP Implemented Batch jobs to deal with large number of chunks using Spring Batch Framework to execute the similar jobs simultaneously Hands on coding to build REST Micro Services using Spring Cloud Oracle XSD JSON Spring Config and Jenkins Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Implemented persistence layer using Hibernate and developed the Data Access Layer to retrieve JSON documents related to customer Used Apache Kafka to route asynchronous messages to different consumers Created and Consumed REST Web Services to retrieve data from LDAP as well as consuming thirdparty Services Involved in Design and Development of Resource URIs and Collection URIs for creating new REST Web Services using JAXRS and JAXB annotations to convert the data to XML whenever necessary Used Jersey Framework to create REST APIs and used Postman for monitoring the request and responses of REST Services Worked with Oracle Database as Operational Data Storage ODS to perform payment operations done by the users Used MongoDB as Application Data Storage ADS to store the details of the members in the form of documents Used Mongo Vue as an interface to monitor the operations done on MongoDB Written complex SQL queries PLSQL Stored Procedures Functions Triggers cursors and indexes Created UNIX shell scripting for periodic generation of reports Implemented and developed test cases with Mockito framework to test the functionalities of the application and Log4j for logging errors Developed UI Unit Test cases to test the functionality of the business logic using Groovy before releasing the code for Functional Testing Used Gradle as a build tool for downloading the dependencies and used Gradle command line using GIT BASH Deployed the war file of the enterprise application on Web Sphere application server that handles various requests from Client and fixed deployment issues Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing Used JIRA tool for Issuebug tracking monitoring of work assignment in the system GIT as a Version Control tool and Intellij 12 as IDE Environment Java 18 J2EE HTML5 CSS3 Bootstrap JQuery AngularJS NodeJS Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data RESTful Services Jersey Hibernate Gradle Micro Services AWS Amazon Web Services Oracle Docker MongoDB Mockito Log4j JIRA GIT Jenkins Intellij and Web Sphere Application Server JavaJ2EE Developer State Of New York Albany NY July 2016 to March 2017 Description The New York Motor Vehicle Commission MVC is the government agency responsible for titling registering and providing plates and also licensing drivers in the US state of New York It also provides online support for Renewing titles registrations licenses etc Responsibilities Worked in an Agile Scrum environment and participated in the entire SDLC process Involved in Daily Scrum meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Developed the User Interface using HTML5 CSS3 Bootstrap jQuery AngularJS and NodeJS Developed Single page application and structured the JavaScript code using AngularJS and Created responsive web pages using Bootstrap Consumed REST Web services from serverside application using JAXRS libraries for modifying the data and the data expecting from client has no modification and requested from AngularJS and sent to UI directly Developed and Implemented the application using Spring Framework Modules like Spring IOC Spring AOP Spring MVC Model View Controller Spring Security Web Services SOAP and REST and Hibernate Integrated spring Dependency Injection with Spring IOC among different layers of an application to make the application loosely coupled and used Spring AOP for logging purposes Developed the service layer that acts a bridge between the presentation layer and data access layer with spring framework Used RabbitMQ as a message broker to send asynchronous messages to the subscribers and consumers Implemented Restful web services using JAXRS annotations Jersey as provider and implemented security using LDAP Implemented SOA architecture with Web Services using SOAP WSDL UDDI and XML using Apache CXF framework and worked on parsing the XML files using DOMSAX parsers Developed necessary parsing and XML construction logic using XML parser APIs JAXB Developed persistence Layer using Hibernate to persist the data and to manage the data in Oracle database Developed queries using hibernate criteria native SQL and HQL Developed inheritance domain objects using table per class hierarchy strategy Used NoSQL DB database MongoDB for proof of concept and having experience in create a Stored Procedures and having experience in Remote Procedure call RPC and Redis Developed the test cases to test the application functionalities using JUnit Packaged and deployed the application in Web Logic Application server in different environments like Development and testing etc Used log4J for application logging and notification tracing mechanisms Automate build process through Maven build automation tool Used JIRA to keep track of bugs and stories and Spring Tool Suite as IDE Used GIT Version Controller to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment Java J2EE HTML5 CSS3 Bootstrap JQuery AngularJS NodeJS Spring IOC Spring AOP Spring MVC Spring Security Web Services SOAP and REST Spring Boot WSDL Service Oriented Architecture Hibernate Oracle JBOSS JUnit Log4j Maven JIRA GIT and Spring Toot Suite JavaJ2EE Developer Techno Soft Solutions Bengaluru Karnataka May 2013 to December 2015 Description Techno soft provides a range of professional services delivered by experts with operational experience building and running the largest EMail messaging and Internet networks These services range from architecture and design of software solutions website design development to deployment services and operational support Responsibilities Developed various helper classes needed following Core Java multithreaded programming Implemented Struts MVC design pattern and front controller pattern to this project Developed user interface by creating at least one webpage for each component using Struts web MVC and Action Servlet as front controller for this application Developed Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file Developed SCM by using the JSPHTML like one form for each functionality user interface standard validations using the JavaScript Servlets used as the controllers for the business logic and business logic using JDBC XML parsing techniques etc using MVC Implemented the application using Spring Frame work Developed Value ObjectsPOJO classes to hold the values between Data Layer and Business logic layer Developed and maintained the data layer using DAOs Developed Single Sign On SSO functionality through which we can run SCM from Oracle Applications Involved in developing the Routings and configured Routing Program as scheduled the concurrent request Developed ServerSide components for the business services for creating Items BOM Sourcing Rules and substitute Involved in raising the Notifications to Oracle Users through Mailing Concept for intimating to start the next process using workflow Extensively worked on SQL Server for writing complex queries in the business logic layer Used joins debugging the SCM related packages and customization Extensively worked on creating the setups for Organizations Templates Concurrent Requests Cross Reference Types User Creations assigning responsibilities creating value sets Descriptive Flex Fields etc in SQL Server Applications Used SVN for source code version control Using JIRA tracking the issues and resolving them Implemented Log4J for Logging Errors debugging and tracking using loggers appenders components Followed Agile methodology and prepared technical reports documentation manuals during the program development Environment Java JDBC Servlets Struts JSP Hibernate Java Mail API AJAX HTML XML ANT Log4J CVS RAD Putty SQL Server Apache Tomcat SQL Server JavaJ2EE Developer Mega Soft Technologies Hyderabad Telangana June 2012 to May 2013 Description The main object of this project is to provide a frame work for evaluating the entire life cycle cost for a product including warranty claims The project aim is to provide warranty analysis by evaluating warranty claims data to spot trends and incorporate feedback into the next product version Responsibilities Involved in the implementation of design using vital phases of the Software development life cycle SDLC that includes Development Testing Implementation and Maintenance Support in WATER FALL methodology Designed and developed dynamic Web Pages using JSP HTML CSS JavaScript and Query Implemented the Struts framework based on MVC design pattern and Session Faade Pattern using Session and Entity Beans Used Struts for web tier development and created Struts Action Controllers to handle the requests Involved in writing the strutsconfig files and implemented the Struts Tag library Responsible for designing coding and developed the application in J2EE using Struts MVC Implemented Struts framework Action Controller classes for dispatching request to appropriate classes Used simple Struts Validation for validation of user input as per the business logic and initial data loading Developed Restful Services and SOAP based Web Services Developed Web Service provider methods bottom up approach using WSDL and SOAP for transferring data between the applications Worked on XML technologies like XML Parsers JAXB for binding data to java objects Used Java Messaging Services JMS for reliable and asynchronous communication Implemented the persistence layer using Hibernate and JDBC Template and developed the DAL Data Access Layer to store and retrieve data from the database Responsible to writing JDBC programming to persist the data in My SQL database Written some SQL Queries and PLSQL procedures to fetch data from the database Tested Service and data access tier using JUnit Used Web Logic for application deployment and Log 4J used for Loggingdebugging Used CVS version controlling tool and project build tool using ANT Worked with production support team in debugging and fixing various production issues Environment Java J2EE JSP HTML CSS JavaScript jQuery Struts Restful Services SOAP WSDL Hibernate JDBC JMS My SQL CVS ANT Log4j and Web Logic Skills ECLIPSE J2EE JAVA HIBERNATE SPRING Additional Information TECHNICAL SKILLS Languages C C Java 18 J2EE SQL and PLSQL Enterprise Java JSP Servlet JDBC and Java security MarkupXML Technologies HTML CSS Bootstrap JavaScript JQuery Ajax AngularJS NodeJS XHTML XML XSD XSLXSLT SAXDOM and JSON Tools Framework Servlets Struts Spring IOC Spring AOP Spring MVC Spring Boot Spring Security Spring Data JSF JUnit Mockito and SOAP UI Google Web Toolkit Visual Studio Code Mongo Vue Web services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis and Apache CXF Postman Micro Services AWS Amazon Web Services WebApp Servers Web Sphere Apache Tomcat JBOSS EAP and Web Logic Server Cloud Technologies Amazon Web Services EC2 SQS RDS IAM S3 and Spring Cloud Database Oracle My SQL DB2 MongoDB and Dynamo DB OR mapping Hibernate IBATIS Development Tools Eclipse RAD Spring Tool Suite and Intellij Testing Tools Others JUnit and Soap UI Version Control Tortoise SVN CVS and GitHub OS Environment Windows UNIX and LINUX Design Patterns MVC Front Controller Singleton Business Delegate and DAO patterns",
    "unique_id": "2a165bd4-7f62-41cc-81b2-d2e35103ac3e"
}