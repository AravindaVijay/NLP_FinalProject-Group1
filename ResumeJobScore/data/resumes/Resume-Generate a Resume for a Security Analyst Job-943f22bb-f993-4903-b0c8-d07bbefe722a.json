{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Dexcom Inc Extensive knowledge in Python Django Django Rest Framework C Shell Scripting Unix and Linux Good Knowledge in Objected Oriented Concepts Standard Template Library Smart Pointers Data Structures and Design patterns More than 4 years of Professional Web Apps development experience using Django and flask inclusive of experience in UI and experience in data validation using JavaScript and AngularJS Web development using Python and Django Flask Experienced in MVC frameworks like Django Django REST AngularJS JavaScript JQuery and NodeJS Expert knowledge of and experience in Object Oriented Design and Programming concepts Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP JavaScript Architecture Experience with creating and publishing Docker images and containers and managing it using Nginx Proficient knowledge in Web services like Google Cloud and Amazon AWS Services Experienced with databases using ORMsDOMs for integrating with MySQL Postgres MongoDB Cassandra SQLite Also experienced with writing custom queries through database connectors Leveraging queueing architectures with RabbitMQ for scalability performance and building distributed systems Experience in planning designing developing and implementation in the area of Amazon Web Services AWS Experience with Developed and deployed RESTAPIs on AWS Experience in installing softwares using pip command for python libraries like BeautifulSoup numpy Scipy PySide pythontwitter RabbitMQ matplotlib Pandas dataframe and used PEP coding convention Experience with Docker Ansible Jenkins deployment of application inside software containers Experienced in web applications development using Django Python Flask Python and NodeJS AngularJS DOJO JQuery while using HTMLCSSJS for serverside rendered applications Familiar with RaspberryPI and Raspbian OS for UART controlling Experience using GIT version control and testing deployments using Heroku Work Experience Python Developer Dexcom Inc San Diego CA October 2016 to Present San Diego CA Description Dexcom Inc provides continuous glucose monitoring technology to help patients and their clinicians better manage diabetes Focused on better outcomes for patients caregivers and clinicians by delivering solutions for people with diabetes Python Developer October 2016 Present Designed front end and backend of the application using Python on Django Web Framework Designed and developed the complete admin module and resolved issues and enhanced the Admin module for more achievements Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Worked on AngularJSDjangoJavaScript for the client facing application Develop consumer based features and applications using Python Django HTML and Test Driven Development TDD Developed Python web services for processing JSON and interfacing with the Data layer Used GIT version control and deployed project to Heroku Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Increased the speed of preexisting search indexes through Django ORM optimizations Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Used Python and Django to interface with the AngularJS and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Skilled in using Collections in Python for manipulating and looping through different user defined objects Integrated Ansible to manage all existing servers and automate the buildconfigurations of new server Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Used PandasAPI to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Uploaded the admin module on Elastic Bean Stalk EBS and EC2 and stored the static files in S3 on Amazon cloud Automated most of the task using python scripting RaspberryPI and Raspbian OS and UnixLinux shell Scripting Used multiple containers and managed the load balancing between all the containers using NGINX Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Developed leadership skills and managing the team spirit Environment Python 27 Django AngularJS JavaScript Validation Jenkins Dockers Container GitHub Ansible RaspberryPI Raspbian  MS SQL Server 2013 Amazon Web Service AWS S3 EC2 EBS MySQL JavaScript Eclipse Linux Shell Scripting Python Developer Riverbed Technology San Francisco CA April 2015 to September 2016 San Francisco CA Description Riverbed Technology Inc is an American IT company that develops products to improve application performance across wide area networks a technique known as WAN optimization Python Developer April 2015 September 2016 Responsible for gathering requirements system analysis design development testing and deployment Create application using Django using RESTful API Developed user interface using CSS HTML JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Utilized PyUnit the Python unit test framework for all Python applications Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed tools using Python Shell scripting XML to automate some of the menial tasks Wrote Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up PythonLinux test beds Coded test programs and evaluated existing engineering processes Used Python Library Beautiful Soup for Web Scrapping Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Build all Database Mapping classes using Django Generic Class and functioned based methods File handling for the client data in files like txt and xlxs file for data retrieve and storing purpose Graphical data representation using python modules like Numpy SciPy Pandas Pygal and installed using pip command toolkit Data Exchanges and sorting as per customer requirement between Database and Files Developed tested and debugged software tools utilized by clients and internal customers Developed and tested many features for dashboard using Python AngularJS CSS and JavaScript Used Bootstrap to design responsive webpages Designed RESTful XML web service for handling AJAX requests Managed large datasets using Panda data frames and MySQL Designed and configured database and back end applications and programs Designing of various Database on MongoDB Used GIT version control and deployed project to Heroku Worked on creating the Docker containers and Docker consoles for managing the application life cycle Resolved ongoing problems and accurately documented progress of a project Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django MongoDB AWS AngularJS Bootstrap CSS JavaScript Docker Python Developer Ingram Micro Los Angeles CA February 2014 to March 2015 February 2014 March 2015 Developed entire frontend and backend modules using Python on Django Web Framework Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Configured Grafana to Influxdb and created dashboards on Grafana to show graphs of Environment performance Designed and developed data management system using MongoDB Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote Python Scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the client side validation using JavaScript Creating unit testregression test framework for workingnew code Build SQL queries implementing functions packages views triggers and tables AWS data pipeline for Data Extraction Transformation and Loading from homogeneous or heterogeneous data sources Responsible for debugging and troubleshooting the web application Handling the day to day issues and fine tuning the applications for enhanced performance Environment Python 27 Django 10 MySQL Linux HTML XHTML CSS AJAX JavaScript SQL MySQL Apache Web Server Jr Python Developer Tech Mahindra Pune Maharashtra August 2010 to November 2013 Pune India DescriptionTech Mahindra Limited is an Indian multinational provider of information technology networking technology solutions and Business Process Outsourcing to the telecommunications industry Jr Python Developer August 2010 November 2013 Used Django database APIs to access database objects Rewrite existing PythonDjango modules to deliver certain format of data Generated graphical reports using python package NumpyandMatPlotLib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Wrote programs to parse excel file and process many user data with data validations Create Cassandra database to handle the users data serverclient Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developing and maintenance of the tool that abstracts the information for the user Utilized various IDEs and internal debug tools during debugging Environment Python Django MySQL Linux HTML GIT CSS JavaScript and Apache Web Server Education Bachelors in Engineering Gujarat Technology University 2010 Skills CSS 7 years Django 7 years HTML 7 years JavaScript 7 years Linux 7 years Additional Information Skills Primary Languages  C C SQL HTML Shell Script Python Framework Django Flask Pandas Version Control Tools Clear Case 7 GitHub SVN 1612 Database Cassandra MongoDB MySQL Web Technologies CSS JavaScript HTML AJAX Bootstrap AWS RESTFul Web Services Angular JS Ansible Other Tools PyCharm Sublime Eclipse IDLE Putty SQL developer JIRA Operating System Unix Linux Windows",
    "entities": [
        "CSS HTML JavaScript",
        "GIT",
        "Development of Python",
        "Additional Information Skills Primary Languages  C C SQL HTML Shell Script Python Framework Django Flask Pandas Version",
        "Amazon AWS Services Experienced",
        "PandasAPI",
        "Developed",
        "Create",
        "Amazon AWS S3",
        "AJAX",
        "Object Oriented Design",
        "ORMsDOMs",
        "Asset Department",
        "NGINX",
        "File",
        "Database",
        "Graphical",
        "HTML AJAX CSS",
        "PEP",
        "Utilized",
        "JavaScript Architecture",
        "the Inquiry Tool",
        "Djangos",
        "Engineering Gujarat Technology University",
        "JavaScript",
        "AWS",
        "Wrote Python Object Oriented Design",
        "WAMP Windows Apache",
        "Data Exchanges",
        "UI",
        "Coded",
        "Integrated Ansible",
        "PythonLinux",
        "Interfacing",
        "Pune India DescriptionTech Mahindra Limited",
        "Nginx Proficient",
        "LAMP Linux",
        "Developer Ingram Micro",
        "PythonPHP",
        "WAN",
        "Develop",
        "Los Angeles",
        "Pandas Pygal",
        "Amazon",
        "CSS",
        "Amazon Web Services AWS",
        "API Developed",
        "Heroku",
        "Panda",
        "Data Extraction Transformation",
        "SQL",
        "Flask",
        "Python Developer Tech Mahindra",
        "XML",
        "Python Developer Riverbed Technology San Francisco",
        "Amazon Web Service AWS S3 EC2",
        "HTMLCSSJS",
        "lPythonspan",
        "Python Developer Dexcom Inc Extensive",
        "Database Mapping",
        "Bootstrap CSS",
        "Influxdb",
        "PythonDjango",
        "Skills CSS",
        "RDS",
        "Shell",
        "EBS",
        "Heroku Work Experience Python Developer Dexcom Inc",
        "Automated",
        "Single Page Application",
        "AJAX Bootstrap AWS",
        "MVC",
        "UnixLinux",
        "Validation Controls",
        "JQuery Developed"
    ],
    "experience": "Experience with creating and publishing Docker images and containers and managing it using Nginx Proficient knowledge in Web services like Google Cloud and Amazon AWS Services Experienced with databases using ORMsDOMs for integrating with MySQL Postgres MongoDB Cassandra SQLite Also experienced with writing custom queries through database connectors Leveraging queueing architectures with RabbitMQ for scalability performance and building distributed systems Experience in planning designing developing and implementation in the area of Amazon Web Services AWS Experience with Developed and deployed RESTAPIs on AWS Experience in installing softwares using pip command for python libraries like BeautifulSoup numpy Scipy PySide pythontwitter RabbitMQ matplotlib Pandas dataframe and used PEP coding convention Experience with Docker Ansible Jenkins deployment of application inside software containers Experienced in web applications development using Django Python Flask Python and NodeJS AngularJS DOJO JQuery while using HTMLCSSJS for serverside rendered applications Familiar with RaspberryPI and Raspbian OS for UART controlling Experience using GIT version control and testing deployments using Heroku Work Experience Python Developer Dexcom Inc San Diego CA October 2016 to Present San Diego CA Description Dexcom Inc provides continuous glucose monitoring technology to help patients and their clinicians better manage diabetes Focused on better outcomes for patients caregivers and clinicians by delivering solutions for people with diabetes Python Developer October 2016 Present Designed front end and backend of the application using Python on Django Web Framework Designed and developed the complete admin module and resolved issues and enhanced the Admin module for more achievements Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Worked on AngularJSDjangoJavaScript for the client facing application Develop consumer based features and applications using Python Django HTML and Test Driven Development TDD Developed Python web services for processing JSON and interfacing with the Data layer Used GIT version control and deployed project to Heroku Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Increased the speed of preexisting search indexes through Django ORM optimizations Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Used Python and Django to interface with the AngularJS and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Skilled in using Collections in Python for manipulating and looping through different user defined objects Integrated Ansible to manage all existing servers and automate the buildconfigurations of new server Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Used PandasAPI to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Uploaded the admin module on Elastic Bean Stalk EBS and EC2 and stored the static files in S3 on Amazon cloud Automated most of the task using python scripting RaspberryPI and Raspbian OS and UnixLinux shell Scripting Used multiple containers and managed the load balancing between all the containers using NGINX Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Developed leadership skills and managing the team spirit Environment Python 27 Django AngularJS JavaScript Validation Jenkins Dockers Container GitHub Ansible RaspberryPI Raspbian   MS SQL Server 2013 Amazon Web Service AWS S3 EC2 EBS MySQL JavaScript Eclipse Linux Shell Scripting Python Developer Riverbed Technology San Francisco CA April 2015 to September 2016 San Francisco CA Description Riverbed Technology Inc is an American IT company that develops products to improve application performance across wide area networks a technique known as WAN optimization Python Developer April 2015 September 2016 Responsible for gathering requirements system analysis design development testing and deployment Create application using Django using RESTful API Developed user interface using CSS HTML JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Utilized PyUnit the Python unit test framework for all Python applications Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed tools using Python Shell scripting XML to automate some of the menial tasks Wrote Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up PythonLinux test beds Coded test programs and evaluated existing engineering processes Used Python Library Beautiful Soup for Web Scrapping Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Build all Database Mapping classes using Django Generic Class and functioned based methods File handling for the client data in files like txt and xlxs file for data retrieve and storing purpose Graphical data representation using python modules like Numpy SciPy Pandas Pygal and installed using pip command toolkit Data Exchanges and sorting as per customer requirement between Database and Files Developed tested and debugged software tools utilized by clients and internal customers Developed and tested many features for dashboard using Python AngularJS CSS and JavaScript Used Bootstrap to design responsive webpages Designed RESTful XML web service for handling AJAX requests Managed large datasets using Panda data frames and MySQL Designed and configured database and back end applications and programs Designing of various Database on MongoDB Used GIT version control and deployed project to Heroku Worked on creating the Docker containers and Docker consoles for managing the application life cycle Resolved ongoing problems and accurately documented progress of a project Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django MongoDB AWS AngularJS Bootstrap CSS JavaScript Docker Python Developer Ingram Micro Los Angeles CA February 2014 to March 2015 February 2014 March 2015 Developed entire frontend and backend modules using Python on Django Web Framework Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Configured Grafana to Influxdb and created dashboards on Grafana to show graphs of Environment performance Designed and developed data management system using MongoDB Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote Python Scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the client side validation using JavaScript Creating unit testregression test framework for workingnew code Build SQL queries implementing functions packages views triggers and tables AWS data pipeline for Data Extraction Transformation and Loading from homogeneous or heterogeneous data sources Responsible for debugging and troubleshooting the web application Handling the day to day issues and fine tuning the applications for enhanced performance Environment Python 27 Django 10 MySQL Linux HTML XHTML CSS AJAX JavaScript SQL MySQL Apache Web Server Jr Python Developer Tech Mahindra Pune Maharashtra August 2010 to November 2013 Pune India DescriptionTech Mahindra Limited is an Indian multinational provider of information technology networking technology solutions and Business Process Outsourcing to the telecommunications industry Jr Python Developer August 2010 November 2013 Used Django database APIs to access database objects Rewrite existing PythonDjango modules to deliver certain format of data Generated graphical reports using python package NumpyandMatPlotLib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Wrote programs to parse excel file and process many user data with data validations Create Cassandra database to handle the users data serverclient Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developing and maintenance of the tool that abstracts the information for the user Utilized various IDEs and internal debug tools during debugging Environment Python Django MySQL Linux HTML GIT CSS JavaScript and Apache Web Server Education Bachelors in Engineering Gujarat Technology University 2010 Skills CSS 7 years Django 7 years HTML 7 years JavaScript 7 years Linux 7 years Additional Information Skills Primary Languages   C C SQL HTML Shell Script Python Framework Django Flask Pandas Version Control Tools Clear Case 7 GitHub SVN 1612 Database Cassandra MongoDB MySQL Web Technologies CSS JavaScript HTML AJAX Bootstrap AWS RESTFul Web Services Angular JS Ansible Other Tools PyCharm Sublime Eclipse IDLE Putty SQL developer JIRA Operating System Unix Linux Windows",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Dexcom",
        "Inc",
        "knowledge",
        "Python",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "C",
        "Shell",
        "Scripting",
        "Unix",
        "Linux",
        "Good",
        "Knowledge",
        "Objected",
        "Oriented",
        "Concepts",
        "Standard",
        "Template",
        "Library",
        "Smart",
        "Pointers",
        "Data",
        "Structures",
        "Design",
        "patterns",
        "years",
        "Professional",
        "Web",
        "Apps",
        "development",
        "experience",
        "Django",
        "flask",
        "inclusive",
        "experience",
        "UI",
        "experience",
        "data",
        "validation",
        "JavaScript",
        "Web",
        "development",
        "Python",
        "Django",
        "Flask",
        "MVC",
        "frameworks",
        "Django",
        "Django",
        "JavaScript",
        "JQuery",
        "NodeJS",
        "Expert",
        "knowledge",
        "Object",
        "Oriented",
        "Design",
        "Programming",
        "concepts",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "JavaScript",
        "Architecture",
        "Experience",
        "Docker",
        "images",
        "containers",
        "Nginx",
        "Proficient",
        "knowledge",
        "Web",
        "services",
        "Google",
        "Cloud",
        "Amazon",
        "AWS",
        "Services",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "Postgres",
        "MongoDB",
        "Cassandra",
        "SQLite",
        "custom",
        "queries",
        "database",
        "connectors",
        "architectures",
        "RabbitMQ",
        "scalability",
        "performance",
        "building",
        "systems",
        "Experience",
        "implementation",
        "area",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Experience",
        "Developed",
        "RESTAPIs",
        "AWS",
        "Experience",
        "softwares",
        "pip",
        "command",
        "python",
        "libraries",
        "BeautifulSoup",
        "Scipy",
        "PySide",
        "pythontwitter",
        "matplotlib",
        "Pandas",
        "dataframe",
        "PEP",
        "convention",
        "Experience",
        "Docker",
        "Ansible",
        "Jenkins",
        "deployment",
        "application",
        "software",
        "containers",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "Python",
        "NodeJS",
        "DOJO",
        "JQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "RaspberryPI",
        "OS",
        "UART",
        "Experience",
        "GIT",
        "version",
        "control",
        "testing",
        "deployments",
        "Heroku",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Dexcom",
        "Inc",
        "San",
        "Diego",
        "CA",
        "October",
        "Present",
        "San",
        "Diego",
        "CA",
        "Description",
        "Dexcom",
        "Inc",
        "glucose",
        "technology",
        "patients",
        "clinicians",
        "diabetes",
        "outcomes",
        "patients",
        "caregivers",
        "clinicians",
        "solutions",
        "people",
        "diabetes",
        "Python",
        "Developer",
        "October",
        "Present",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "admin",
        "module",
        "issues",
        "Admin",
        "module",
        "achievements",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "client",
        "facing",
        "application",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Developed",
        "Python",
        "web",
        "services",
        "JSON",
        "Data",
        "layer",
        "GIT",
        "version",
        "control",
        "project",
        "Heroku",
        "Worked",
        "development",
        "SQL",
        "procedures",
        "normalization",
        "renormalization",
        "MYSQL",
        "speed",
        "search",
        "indexes",
        "Django",
        "ORM",
        "optimizations",
        "module",
        "Django",
        "ORM",
        "queries",
        "data",
        "number",
        "databases",
        "queries",
        "amount",
        "data",
        "Python",
        "Django",
        "AngularJS",
        "storage",
        "deletion",
        "content",
        "operations",
        "calculation",
        "purpose",
        "python",
        "libraries",
        "Collections",
        "Python",
        "user",
        "Integrated",
        "Ansible",
        "servers",
        "buildconfigurations",
        "server",
        "Validation",
        "Controls",
        "form",
        "validation",
        "custom",
        "validation",
        "controls",
        "Object",
        "Oriented",
        "JavaScript",
        "projects",
        "web",
        "page",
        "Single",
        "Page",
        "Application",
        "SPA",
        "AngularJS",
        "JavaScript",
        "API",
        "delivery",
        "driver",
        "application",
        "microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Developed",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "website",
        "interface",
        "PandasAPI",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "admin",
        "module",
        "Elastic",
        "Bean",
        "Stalk",
        "EBS",
        "EC2",
        "files",
        "S3",
        "Amazon",
        "cloud",
        "task",
        "python",
        "scripting",
        "RaspberryPI",
        "OS",
        "UnixLinux",
        "shell",
        "Scripting",
        "containers",
        "load",
        "containers",
        "NGINX",
        "programming",
        "automations",
        "Jenkins",
        "Ansible",
        "UnixLinux",
        "OS",
        "cloud",
        "Docker",
        "recommendations",
        "team",
        "terms",
        "testing",
        "techniques",
        "testing",
        "tasks",
        "leadership",
        "skills",
        "team",
        "spirit",
        "Environment",
        "Python",
        "Django",
        "JavaScript",
        "Validation",
        "Jenkins",
        "Dockers",
        "Container",
        "GitHub",
        "RaspberryPI",
        "MS",
        "SQL",
        "Server",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "S3",
        "EC2",
        "EBS",
        "MySQL",
        "JavaScript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "Riverbed",
        "Technology",
        "San",
        "Francisco",
        "CA",
        "April",
        "September",
        "San",
        "Francisco",
        "CA",
        "Description",
        "Riverbed",
        "Technology",
        "Inc",
        "IT",
        "company",
        "products",
        "application",
        "performance",
        "area",
        "technique",
        "WAN",
        "optimization",
        "Python",
        "Developer",
        "April",
        "September",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Create",
        "application",
        "Django",
        "API",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Django",
        "framework",
        "application",
        "development",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "Utilized",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "solutions",
        "Inquiry",
        "Tool",
        "Asset",
        "Department",
        "reporting",
        "features",
        "bugs",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Wrote",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Installation",
        "PythonLinux",
        "test",
        "beds",
        "test",
        "programs",
        "engineering",
        "processes",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Build",
        "Database",
        "Mapping",
        "classes",
        "Django",
        "Generic",
        "Class",
        "methods",
        "File",
        "client",
        "data",
        "files",
        "txt",
        "file",
        "data",
        "retrieve",
        "purpose",
        "data",
        "representation",
        "modules",
        "Numpy",
        "SciPy",
        "Pandas",
        "Pygal",
        "pip",
        "command",
        "toolkit",
        "Data",
        "Exchanges",
        "customer",
        "requirement",
        "Database",
        "Files",
        "Developed",
        "software",
        "tools",
        "clients",
        "customers",
        "features",
        "dashboard",
        "Python",
        "AngularJS",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "webpages",
        "XML",
        "web",
        "service",
        "AJAX",
        "requests",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "database",
        "end",
        "applications",
        "programs",
        "Database",
        "GIT",
        "version",
        "control",
        "project",
        "Heroku",
        "Worked",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "problems",
        "progress",
        "project",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "AWS",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Docker",
        "Python",
        "Developer",
        "Ingram",
        "Micro",
        "Los",
        "Angeles",
        "CA",
        "February",
        "March",
        "February",
        "March",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Design",
        "test",
        "deploy",
        "website",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Configured",
        "Grafana",
        "Influxdb",
        "dashboards",
        "Grafana",
        "graphs",
        "Environment",
        "performance",
        "data",
        "management",
        "system",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "Python",
        "Scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "python",
        "client",
        "side",
        "validation",
        "JavaScript",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Build",
        "SQL",
        "functions",
        "packages",
        "views",
        "triggers",
        "tables",
        "AWS",
        "data",
        "pipeline",
        "Data",
        "Extraction",
        "Transformation",
        "Loading",
        "data",
        "sources",
        "web",
        "application",
        "day",
        "day",
        "issues",
        "applications",
        "performance",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "SQL",
        "MySQL",
        "Apache",
        "Web",
        "Server",
        "Jr",
        "Python",
        "Developer",
        "Tech",
        "Mahindra",
        "Pune",
        "Maharashtra",
        "August",
        "November",
        "Pune",
        "India",
        "DescriptionTech",
        "Mahindra",
        "Limited",
        "provider",
        "information",
        "technology",
        "networking",
        "technology",
        "solutions",
        "Business",
        "Process",
        "Outsourcing",
        "telecommunications",
        "industry",
        "Jr",
        "Python",
        "Developer",
        "August",
        "November",
        "Used",
        "Django",
        "database",
        "APIs",
        "database",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "reports",
        "python",
        "package",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Wrote",
        "programs",
        "file",
        "user",
        "data",
        "data",
        "validations",
        "Cassandra",
        "database",
        "users",
        "data",
        "serverclient",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Developing",
        "maintenance",
        "tool",
        "information",
        "user",
        "IDEs",
        "debug",
        "tools",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "GIT",
        "CSS",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Education",
        "Bachelors",
        "Engineering",
        "Gujarat",
        "Technology",
        "University",
        "Skills",
        "CSS",
        "years",
        "Django",
        "years",
        "HTML",
        "years",
        "JavaScript",
        "years",
        "Linux",
        "years",
        "Additional",
        "Information",
        "Skills",
        "Primary",
        "Languages",
        "C",
        "C",
        "SQL",
        "HTML",
        "Shell",
        "Script",
        "Python",
        "Framework",
        "Django",
        "Flask",
        "Pandas",
        "Version",
        "Control",
        "Tools",
        "Clear",
        "Case",
        "GitHub",
        "SVN",
        "Database",
        "Cassandra",
        "MongoDB",
        "MySQL",
        "Web",
        "Technologies",
        "CSS",
        "JavaScript",
        "HTML",
        "AJAX",
        "Bootstrap",
        "AWS",
        "RESTFul",
        "Web",
        "Services",
        "Angular",
        "JS",
        "Ansible",
        "Tools",
        "PyCharm",
        "Sublime",
        "Eclipse",
        "IDLE",
        "Putty",
        "SQL",
        "developer",
        "JIRA",
        "Operating",
        "System",
        "Unix",
        "Linux",
        "Windows"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:23:09.222347",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Dexcom Inc Extensive knowledge in Python Django Django Rest Framework C Shell Scripting Unix and Linux Good Knowledge in Objected Oriented Concepts Standard Template Library Smart Pointers Data Structures and Design patterns More than 4 years of Professional Web Apps development experience using Django and flask inclusive of experience in UI and experience in data validation using JavaScript and AngularJS Web development using Python and Django Flask Experienced in MVC frameworks like Django Django REST AngularJS JavaScript JQuery and NodeJS Expert knowledge of and experience in Object Oriented Design and Programming concepts Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP JavaScript Architecture Experience with creating and publishing Docker images and containers and managing it using Nginx Proficient knowledge in Web services like Google Cloud and Amazon AWS Services Experienced with databases using ORMsDOMs for integrating with MySQL Postgres MongoDB Cassandra SQLite Also experienced with writing custom queries through database connectors Leveraging queueing architectures with RabbitMQ for scalability performance and building distributed systems Experience in planning designing developing and implementation in the area of Amazon Web Services AWS Experience with Developed and deployed RESTAPIs on AWS Experience in installing softwares using pip command for python libraries like BeautifulSoup numpy Scipy PySide pythontwitter RabbitMQ matplotlib Pandas dataframe and used PEP coding convention Experience with Docker Ansible Jenkins deployment of application inside software containers Experienced in web applications development using Django Python Flask Python and NodeJS AngularJS DOJO JQuery while using HTMLCSSJS for serverside rendered applications Familiar with RaspberryPI and Raspbian OS for UART controlling Experience using GIT version control and testing deployments using Heroku Work Experience Python Developer Dexcom Inc San Diego CA October 2016 to Present San Diego CA Description Dexcom Inc provides continuous glucose monitoring technology to help patients and their clinicians better manage diabetes Focused on better outcomes for patients caregivers and clinicians by delivering solutions for people with diabetes Python Developer October 2016 Present Designed front end and backend of the application using Python on Django Web Framework Designed and developed the complete admin module and resolved issues and enhanced the Admin module for more achievements Developed views and templates with Python and Django view controller and template language to create a userfriendly website interface Worked on AngularJSDjangoJavaScript for the client facing application Develop consumer based features and applications using Python Django HTML and Test Driven Development TDD Developed Python web services for processing JSON and interfacing with the Data layer Used GIT version control and deployed project to Heroku Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Increased the speed of preexisting search indexes through Django ORM optimizations Developed a module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Used Python and Django to interface with the AngularJS and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Skilled in using Collections in Python for manipulating and looping through different user defined objects Integrated Ansible to manage all existing servers and automate the buildconfigurations of new server Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Used PandasAPI to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Uploaded the admin module on Elastic Bean Stalk EBS and EC2 and stored the static files in S3 on Amazon cloud Automated most of the task using python scripting RaspberryPI and Raspbian OS and UnixLinux shell Scripting Used multiple containers and managed the load balancing between all the containers using NGINX Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Making recommendations to the team in terms of appropriate testing techniques shared testing tasks Developed leadership skills and managing the team spirit Environment Python 27 Django AngularJS JavaScript Validation Jenkins Dockers Container GitHub Ansible RaspberryPI Raspbian HTML5CSS MS SQL Server 2013 Amazon Web Service AWS S3 EC2 EBS MySQL JavaScript Eclipse Linux Shell Scripting Python Developer Riverbed Technology San Francisco CA April 2015 to September 2016 San Francisco CA Description Riverbed Technology Inc is an American IT company that develops products to improve application performance across wide area networks a technique known as WAN optimization Python Developer April 2015 September 2016 Responsible for gathering requirements system analysis design development testing and deployment Create application using Django using RESTful API Developed user interface using CSS HTML JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Utilized PyUnit the Python unit test framework for all Python applications Enhanced existing automated solutions such as the Inquiry Tool for automated Asset Department reporting and added new features and fixed bugs Developed tools using Python Shell scripting XML to automate some of the menial tasks Wrote Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up PythonLinux test beds Coded test programs and evaluated existing engineering processes Used Python Library Beautiful Soup for Web Scrapping Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Build all Database Mapping classes using Django Generic Class and functioned based methods File handling for the client data in files like txt and xlxs file for data retrieve and storing purpose Graphical data representation using python modules like Numpy SciPy Pandas Pygal and installed using pip command toolkit Data Exchanges and sorting as per customer requirement between Database and Files Developed tested and debugged software tools utilized by clients and internal customers Developed and tested many features for dashboard using Python AngularJS CSS and JavaScript Used Bootstrap to design responsive webpages Designed RESTful XML web service for handling AJAX requests Managed large datasets using Panda data frames and MySQL Designed and configured database and back end applications and programs Designing of various Database on MongoDB Used GIT version control and deployed project to Heroku Worked on creating the Docker containers and Docker consoles for managing the application life cycle Resolved ongoing problems and accurately documented progress of a project Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python Django MongoDB AWS AngularJS Bootstrap CSS JavaScript Docker Python Developer Ingram Micro Los Angeles CA February 2014 to March 2015 February 2014 March 2015 Developed entire frontend and backend modules using Python on Django Web Framework Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Configured Grafana to Influxdb and created dashboards on Grafana to show graphs of Environment performance Designed and developed data management system using MongoDB Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote Python Scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the client side validation using JavaScript Creating unit testregression test framework for workingnew code Build SQL queries implementing functions packages views triggers and tables AWS data pipeline for Data Extraction Transformation and Loading from homogeneous or heterogeneous data sources Responsible for debugging and troubleshooting the web application Handling the day to day issues and fine tuning the applications for enhanced performance Environment Python 27 Django 10 MySQL Linux HTML XHTML CSS AJAX JavaScript SQL MySQL Apache Web Server Jr Python Developer Tech Mahindra Pune Maharashtra August 2010 to November 2013 Pune India DescriptionTech Mahindra Limited is an Indian multinational provider of information technology networking technology solutions and Business Process Outsourcing to the telecommunications industry Jr Python Developer August 2010 November 2013 Used Django database APIs to access database objects Rewrite existing PythonDjango modules to deliver certain format of data Generated graphical reports using python package NumpyandMatPlotLib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Wrote programs to parse excel file and process many user data with data validations Create Cassandra database to handle the users data serverclient Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Developing and maintenance of the tool that abstracts the information for the user Utilized various IDEs and internal debug tools during debugging Environment Python Django MySQL Linux HTML GIT CSS JavaScript and Apache Web Server Education Bachelors in Engineering Gujarat Technology University 2010 Skills CSS 7 years Django 7 years HTML 7 years JavaScript 7 years Linux 7 years Additional Information Skills Primary Languages Python273 C C SQL HTML Shell Script Python Framework Django Flask Pandas Version Control Tools Clear Case 7 GitHub SVN 1612 Database Cassandra MongoDB MySQL Web Technologies CSS JavaScript HTML AJAX Bootstrap AWS RESTFul Web Services Angular JS Ansible Other Tools PyCharm Sublime Eclipse IDLE Putty SQL developer JIRA Operating System Unix Linux Windows",
    "unique_id": "943f22bb-f993-4903-b0c8-d07bbefe722a"
}