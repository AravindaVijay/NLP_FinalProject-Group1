{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer State Street North Quincy MA Around 7 years of experience as a WebApplication Developer and coding with analytical programming using Python Experience in analysis design and development testing implementation and maintenance of various web applications using Python and Django Experience with Django and Flask a highlevel Python Web framework Experienced with full Software Development LifeCycle SDLC architecting scalable platforms Object Oriented Programming Database Design and Agile Methodologies Experience with Requests Numpy Scipy Matplotlib and Pandas python libraries during development lifecycle Experience with automationconfiguration management using tools like Ansible Puppet Chef and SaltStack Knowledge on Open Stack Environment Implementation and the architecture using API to integrate between multiple utilities storage Monitoring computing Authentication Authorization Worked with python libraries from Python Package Index PyPI Experience with Jenkins and Enterprise GitHub Worked on Jenkins continuous integration tool for deployment of project Experienced in using MVCMVT architecture using RESTful Soap Web services and highlevel Python Web frameworks like Django and Flask Experience in end to end design and deploy rich Graphic visualizations with Drill Down and Drop down menu option and Parameterized using Tableau Worked on Loading and transforming large sets of structured semi structured and unstructured data using Hadoop Bigdata concepts Proficient in SQL databases MSSQL Server MySQL RDBMS Oracle DB Postgres and MongoDB Working experience on JSON based REST Web services and Amazon Web Services AWS Such as EC2 Lambda ELB SQS Queuing Services VPC and cloud watch Working knowledge on Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Knowledge in Data mining and Data warehousing using ETL Tools and Proficient in Building reports and dashboards in Tableau BI Tool Experience in implementing PEP8 coding standards Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings TECHNOLOGY AND TOOLS Work Experience Sr Python Developer State Street North Quincy MA February 2018 to Present Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Worked with Splunk for testing the performance and debugging server level problems Developing Python Framework using Django to perform scan software unit monitoring Designed the front end of the application using Python HTML CSS AJAX JSON and Query Used Djangocelery with the help of RabbitMQ message broker for large processing Utilized the Python unit test framework for all Python applications Used Django configuration to manage URLs and application parameters Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Actively involved in analysis of the system requirements specifications and involved in client interaction during requirements specifications Performed Unit testing Integration Testing Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Carried out various mathematical operations for calculation purpose using Python libraries numpy Successfully migrated the Django database from SQLite to MySQL with complete data integrity Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Built various graphs for business decision making using Python matplotlib library Environment Python 2627 JavaScript Django Framework 13 CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer GE Energy Houston TX July 2017 to January 2018 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Experience using Content Management Systems WordPress and Django CMS plugins Generated Python Django Forms to record data of online users Performed testing using Djangos Test Module Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL PLSQL Developed the required XML Schema documents and implemented the framework for parsing XML documents Wrote Python scripts to parse XML documents and load the data in database Install and configuring monitoring scripts for AWS EC2 instances Environment Python 27 Django 17 HTML5 CSS XML KML MySQL JavaScript Angular JS JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Windows 12 Server Amazon s3 Jenkins Map Box My SQL Mongo DB GitHub Bit Bucket Linux and Windows Python developer Rockwell Collins Cedar Rapids IA September 2016 to June 2017 Responsibilities Worked on development and enhancement of automated tools for testing integration and global application development Work with team of developers on python applications for RISK management Held overall responsibility of coordination of implementations of software builds and releases Provided analytics to help determine optimal way to assemble releases Tracked any additions deletions or change in scope on the published release plan including efficient tracking of defects Built the release plan roadmap and keep maintained for communication Worked on UI modification using HTML CSS Developed Application logic using Python 27 and Django framework Wrote backend data access Logic using MYSQL and SQL Server Used Web Services to extract Supplier inventory for various high end items Integrated the application with different internal system Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in Unit integration and smoke testing Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire front end and back end modules using Python on Django Web Framework Designed and developed data center management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the client side validation using JavaScript Environment Python 27 Django 18 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Python Developer ISpace October 2015 to August 2016 Responsibilities Automation for execution of tests in batch using Shell scripting in python Development of data structures XML parsing using Python Usage of advance features like pickleunpick in python for sharing the information across the applications Used Django database APIs to access database objects Rewrite existing PythonDjango modules to deliver certain format of data Generated graphical reports using python package Numpy and matPlotLib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Wrote programs to parse excel file and process many user data with data validations Create Cassandra database to handle the users data serverclient Developed front end page using HTML CSS JavaScript and JQuery Generated property list for every application dynamically using python Developing and maintenance of the tool that abstracts the information for the user Implemented multiple high performances MongoDB Utilized various IDEs and internal debug tools during debugging Analyzing the data in design database Used SVN for version control Maintaining the data with different levels of access privileges Environment Python Django Linux HTML CSS MongoDB Cassandra Web services SVN Python Developer Nivisol Technologies May 2012 to September 2015 Responsibilities Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Designed and created backend data access modules using PLSQL stored procedures and Oracle Designed and developed components using Python with Django framework Implemented code in Python to retrieve and manipulate data Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Created data access modules in python Used functional programming data aggregation with pagination and parsing using Jackson library Used Django Database APIs to access database objects Developed multithreaded standalone app in Python and PHP to view performance Used PySpark Data frame for creation of table and performing analytics over it Participated in developing view pages using HTML5 CSS3 and Tag Libraries Actively involved in production support and resolved the production issues depending upon priority of issues Environment Python Django PYQT JQuery DOM JSON HTML XHTML CSS AJAX JavaScript JSON Rest PHP SVN MY SQL Windows and LINUX Education Bachelors Skills NET Less than 1 year Apache 2 years AWS 1 year CSS 7 years databases 3 years HTML 7 years Integration 2 years INTEGRATOR 2 years JavaScript 7 years Jira 1 year Linux 7 years MongoDB 1 year MS SQL Server 1 year MySQL 2 years Oracle 4 years PLSQL 4 years Python 7 years SQL 6 years SQL Server 1 year web server 1 year Additional Information Operating Systems Unix Linux Ubuntu Solaris Windows and MacOS Programming Languages Python PLSQL Java CSSHTMLJavaScript Databases Oracle 1011g MySQL SQL Server and PostgreSQL MongoDB Tools PyCharm PLSQL Developer Spyder Visual Studio Visio IBM Websphere Integration Tools Jenkins and Web Builder Message Broker RabbitMQ IBM MQ Web Server Apache Webserver Defect Tracking JIRA and VersionOne Cloud services AWS Microsoft Azure",
    "entities": [
        "ETL Tools",
        "HTML AJAX CSS",
        "Building",
        "Oracle SQL PLSQL Developed",
        "Content Management Systems WordPress",
        "IBM",
        "XML",
        "Proficient",
        "Shell",
        "GitHub Bit Bucket",
        "Parameterized",
        "Python",
        "Development of data",
        "Utilized",
        "Windows",
        "Waterfall",
        "Virtual DOM React Props Lifecycle",
        "Tableau BI Tool",
        "API RESTful Web Service",
        "Linux",
        "Flask",
        "Worked",
        "Additional Information Operating Systems",
        "Oracle DB Postgres",
        "PEP8",
        "MVC",
        "Flask SQL Alchemy",
        "PythonDjango",
        "Agile",
        "Djangos Test Module Developed SQL Queries Stored Procedures",
        "Development of Python",
        "API",
        "HTML CSS JavaScript",
        "Present Responsibilities Designed",
        "HTML CSS Developed Application",
        "Object Oriented Programming Database Design",
        "AWS",
        "GitHub Ansible",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Ansible Puppet Chef",
        "JSX",
        "HTML",
        "Performed Unit",
        "JQuery Generated",
        "Python Package Index PyPI Experience",
        "Hadoop Bigdata",
        "SQL",
        "Django Migrations",
        "GitHub",
        "TECHNOLOGY",
        "lPythonspan",
        "Kubernetes",
        "WebApplication Developer",
        "CICD",
        "Amazon AWS",
        "Integration Testing Involved",
        "the React States",
        "Soap Web",
        "SQLite",
        "PySpark Data",
        "Performed",
        "Djangos",
        "Oracle Designed",
        "UI",
        "Amazon Web Services AWS Such as EC2",
        "Microsoft",
        "MVCMVT",
        "Django Database",
        "SVN",
        "CSS",
        "Amazon Web Service",
        "Django Python Carried",
        "HTML5 CSS3",
        "Python Usage of advance",
        "REST",
        "Data",
        "PHP",
        "Lambda ELB SQS Queuing Services VPC",
        "Monitoring",
        "EBS",
        "JavaScript Environment Python",
        "Validation Controls",
        "VersionOne Cloud"
    ],
    "experience": "Experience in analysis design and development testing implementation and maintenance of various web applications using Python and Django Experience with Django and Flask a highlevel Python Web framework Experienced with full Software Development LifeCycle SDLC architecting scalable platforms Object Oriented Programming Database Design and Agile Methodologies Experience with Requests Numpy Scipy Matplotlib and Pandas python libraries during development lifecycle Experience with automationconfiguration management using tools like Ansible Puppet Chef and SaltStack Knowledge on Open Stack Environment Implementation and the architecture using API to integrate between multiple utilities storage Monitoring computing Authentication Authorization Worked with python libraries from Python Package Index PyPI Experience with Jenkins and Enterprise GitHub Worked on Jenkins continuous integration tool for deployment of project Experienced in using MVCMVT architecture using RESTful Soap Web services and highlevel Python Web frameworks like Django and Flask Experience in end to end design and deploy rich Graphic visualizations with Drill Down and Drop down menu option and Parameterized using Tableau Worked on Loading and transforming large sets of structured semi structured and unstructured data using Hadoop Bigdata concepts Proficient in SQL databases MSSQL Server MySQL RDBMS Oracle DB Postgres and MongoDB Working experience on JSON based REST Web services and Amazon Web Services AWS Such as EC2 Lambda ELB SQS Queuing Services VPC and cloud watch Working knowledge on Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Knowledge in Data mining and Data warehousing using ETL Tools and Proficient in Building reports and dashboards in Tableau BI Tool Experience in implementing PEP8 coding standards Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings TECHNOLOGY AND TOOLS Work Experience Sr Python Developer State Street North Quincy MA February 2018 to Present Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Worked with Splunk for testing the performance and debugging server level problems Developing Python Framework using Django to perform scan software unit monitoring Designed the front end of the application using Python HTML CSS AJAX JSON and Query Used Djangocelery with the help of RabbitMQ message broker for large processing Utilized the Python unit test framework for all Python applications Used Django configuration to manage URLs and application parameters Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Actively involved in analysis of the system requirements specifications and involved in client interaction during requirements specifications Performed Unit testing Integration Testing Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Carried out various mathematical operations for calculation purpose using Python libraries numpy Successfully migrated the Django database from SQLite to MySQL with complete data integrity Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Built various graphs for business decision making using Python matplotlib library Environment Python 2627 JavaScript Django Framework 13 CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer GE Energy Houston TX July 2017 to January 2018 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Experience using Content Management Systems WordPress and Django CMS plugins Generated Python Django Forms to record data of online users Performed testing using Djangos Test Module Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL PLSQL Developed the required XML Schema documents and implemented the framework for parsing XML documents Wrote Python scripts to parse XML documents and load the data in database Install and configuring monitoring scripts for AWS EC2 instances Environment Python 27 Django 17 HTML5 CSS XML KML MySQL JavaScript Angular JS JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Windows 12 Server Amazon s3 Jenkins Map Box My SQL Mongo DB GitHub Bit Bucket Linux and Windows Python developer Rockwell Collins Cedar Rapids IA September 2016 to June 2017 Responsibilities Worked on development and enhancement of automated tools for testing integration and global application development Work with team of developers on python applications for RISK management Held overall responsibility of coordination of implementations of software builds and releases Provided analytics to help determine optimal way to assemble releases Tracked any additions deletions or change in scope on the published release plan including efficient tracking of defects Built the release plan roadmap and keep maintained for communication Worked on UI modification using HTML CSS Developed Application logic using Python 27 and Django framework Wrote backend data access Logic using MYSQL and SQL Server Used Web Services to extract Supplier inventory for various high end items Integrated the application with different internal system Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in Unit integration and smoke testing Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire front end and back end modules using Python on Django Web Framework Designed and developed data center management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the client side validation using JavaScript Environment Python 27 Django 18 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Python Developer ISpace October 2015 to August 2016 Responsibilities Automation for execution of tests in batch using Shell scripting in python Development of data structures XML parsing using Python Usage of advance features like pickleunpick in python for sharing the information across the applications Used Django database APIs to access database objects Rewrite existing PythonDjango modules to deliver certain format of data Generated graphical reports using python package Numpy and matPlotLib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Wrote programs to parse excel file and process many user data with data validations Create Cassandra database to handle the users data serverclient Developed front end page using HTML CSS JavaScript and JQuery Generated property list for every application dynamically using python Developing and maintenance of the tool that abstracts the information for the user Implemented multiple high performances MongoDB Utilized various IDEs and internal debug tools during debugging Analyzing the data in design database Used SVN for version control Maintaining the data with different levels of access privileges Environment Python Django Linux HTML CSS MongoDB Cassandra Web services SVN Python Developer Nivisol Technologies May 2012 to September 2015 Responsibilities Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Designed and created backend data access modules using PLSQL stored procedures and Oracle Designed and developed components using Python with Django framework Implemented code in Python to retrieve and manipulate data Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Created data access modules in python Used functional programming data aggregation with pagination and parsing using Jackson library Used Django Database APIs to access database objects Developed multithreaded standalone app in Python and PHP to view performance Used PySpark Data frame for creation of table and performing analytics over it Participated in developing view pages using HTML5 CSS3 and Tag Libraries Actively involved in production support and resolved the production issues depending upon priority of issues Environment Python Django PYQT JQuery DOM JSON HTML XHTML CSS AJAX JavaScript JSON Rest PHP SVN MY SQL Windows and LINUX Education Bachelors Skills NET Less than 1 year Apache 2 years AWS 1 year CSS 7 years databases 3 years HTML 7 years Integration 2 years INTEGRATOR 2 years JavaScript 7 years Jira 1 year Linux 7 years MongoDB 1 year MS SQL Server 1 year MySQL 2 years Oracle 4 years PLSQL 4 years Python 7 years SQL 6 years SQL Server 1 year web server 1 year Additional Information Operating Systems Unix Linux Ubuntu Solaris Windows and MacOS Programming Languages Python PLSQL Java CSSHTMLJavaScript Databases Oracle 1011 g MySQL SQL Server and PostgreSQL MongoDB Tools PyCharm PLSQL Developer Spyder Visual Studio Visio IBM Websphere Integration Tools Jenkins and Web Builder Message Broker RabbitMQ IBM MQ Web Server Apache Webserver Defect Tracking JIRA and VersionOne Cloud services AWS Microsoft Azure",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "State",
        "Street",
        "North",
        "Quincy",
        "MA",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "Python",
        "Experience",
        "analysis",
        "design",
        "development",
        "testing",
        "implementation",
        "maintenance",
        "web",
        "applications",
        "Python",
        "Django",
        "Experience",
        "Django",
        "Flask",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "Software",
        "Development",
        "LifeCycle",
        "SDLC",
        "platforms",
        "Programming",
        "Database",
        "Design",
        "Agile",
        "Methodologies",
        "Experience",
        "Requests",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Experience",
        "automationconfiguration",
        "management",
        "tools",
        "Puppet",
        "Chef",
        "SaltStack",
        "Knowledge",
        "Open",
        "Stack",
        "Environment",
        "Implementation",
        "architecture",
        "API",
        "utilities",
        "storage",
        "Monitoring",
        "Authentication",
        "Authorization",
        "libraries",
        "Python",
        "Package",
        "Index",
        "PyPI",
        "Experience",
        "Jenkins",
        "Enterprise",
        "GitHub",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "MVCMVT",
        "architecture",
        "Soap",
        "Web",
        "services",
        "highlevel",
        "Python",
        "Web",
        "frameworks",
        "Django",
        "Flask",
        "Experience",
        "end",
        "design",
        "visualizations",
        "Drill",
        "Down",
        "menu",
        "option",
        "Parameterized",
        "Tableau",
        "Worked",
        "Loading",
        "sets",
        "data",
        "Hadoop",
        "Bigdata",
        "SQL",
        "MSSQL",
        "Server",
        "MySQL",
        "RDBMS",
        "Oracle",
        "DB",
        "Postgres",
        "experience",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "Lambda",
        "ELB",
        "SQS",
        "Queuing",
        "Services",
        "VPC",
        "cloud",
        "Working",
        "knowledge",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "Docker",
        "containers",
        "namespace",
        "versions",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "understanding",
        "protocolstechnologies",
        "HTTP",
        "LDAP",
        "JDBC",
        "SSL",
        "ServletJSP",
        "SQL",
        "HTML",
        "XML",
        "Knowledge",
        "Data",
        "mining",
        "Data",
        "warehousing",
        "ETL",
        "Tools",
        "Proficient",
        "Building",
        "reports",
        "dashboards",
        "Tableau",
        "BI",
        "Tool",
        "Experience",
        "PEP8",
        "standards",
        "Agile",
        "Waterfall",
        "development",
        "methodologies",
        "Agile",
        "Methodologies",
        "Scrum",
        "standup",
        "meetings",
        "TECHNOLOGY",
        "TOOLS",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "State",
        "Street",
        "North",
        "Quincy",
        "MA",
        "February",
        "Present",
        "Responsibilities",
        "server",
        "module",
        "issues",
        "enhancements",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "React",
        "Webpack",
        "Redux",
        "ES67",
        "PostgreSQL",
        "database",
        "Django",
        "ORM",
        "module",
        "queries",
        "Django",
        "API",
        "profiling",
        "techniques",
        "information",
        "Ansible",
        "Vagrant",
        "Docker",
        "application",
        "environments",
        "Splunk",
        "performance",
        "server",
        "level",
        "problems",
        "Python",
        "Framework",
        "Django",
        "software",
        "unit",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "Query",
        "Djangocelery",
        "help",
        "RabbitMQ",
        "message",
        "broker",
        "processing",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Validation",
        "Controls",
        "form",
        "validation",
        "custom",
        "validation",
        "controls",
        "Object",
        "Oriented",
        "JavaScript",
        "React",
        "JS",
        "components",
        "JSX",
        "React",
        "components",
        "DOM",
        "React",
        "Props",
        "Lifecycle",
        "methods",
        "React",
        "States",
        "Events",
        "Developed",
        "Restful",
        "Micro",
        "Services",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Developed",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "website",
        "interface",
        "Django",
        "queues",
        "analysis",
        "system",
        "requirements",
        "specifications",
        "client",
        "interaction",
        "requirements",
        "specifications",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Python",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "data",
        "integrity",
        "Circle",
        "CI",
        "integration",
        "delivery",
        "platform",
        "GIT",
        "Django",
        "Migrations",
        "database",
        "task",
        "python",
        "scripting",
        "CICD",
        "pipeline",
        "management",
        "releases",
        "Jira",
        "tasks",
        "performance",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Environment",
        "Python",
        "JavaScript",
        "Django",
        "Framework",
        "CSS",
        "SQL",
        "MySQL",
        "LAMP",
        "JQuery",
        "Adobe",
        "Dreamweaver",
        "Apache",
        "web",
        "server",
        "GitHub",
        "Ansible",
        "HTML5CSS",
        "PostgreSQL",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "S3",
        "EC2",
        "EBS",
        "PyCharm",
        "Microsoft",
        "Visual",
        "Code",
        "Linux",
        "Shell",
        "Scripting",
        "JIRA",
        "Python",
        "Developer",
        "GE",
        "Energy",
        "Houston",
        "TX",
        "July",
        "January",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "testing",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "AJAX",
        "CSS",
        "appearance",
        "Knowledge",
        "crossbrowser",
        "development",
        "HTML",
        "CSS",
        "websites",
        "Windows",
        "IE",
        "IE",
        "IE",
        "FF",
        "AJAX",
        "portions",
        "web",
        "pages",
        "request",
        "server",
        "need",
        "web",
        "page",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "code",
        "reviews",
        "GitHub",
        "pull",
        "requests",
        "bugs",
        "code",
        "quality",
        "knowledge",
        "monitoring",
        "practices",
        "search",
        "Experience",
        "Content",
        "Management",
        "Systems",
        "WordPress",
        "Django",
        "CMS",
        "plugins",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "SQL",
        "PLSQL",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Wrote",
        "Python",
        "XML",
        "documents",
        "data",
        "database",
        "monitoring",
        "scripts",
        "AWS",
        "EC2",
        "instances",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "KML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "MS",
        "SQL",
        "Server",
        "Elastic",
        "Search",
        "Ubuntu",
        "server",
        "Windows",
        "Server",
        "Amazon",
        "s3",
        "Jenkins",
        "Map",
        "Box",
        "SQL",
        "Mongo",
        "DB",
        "GitHub",
        "Bit",
        "Bucket",
        "Linux",
        "Windows",
        "Python",
        "developer",
        "Rockwell",
        "Collins",
        "Cedar",
        "Rapids",
        "IA",
        "September",
        "June",
        "Responsibilities",
        "development",
        "enhancement",
        "tools",
        "integration",
        "application",
        "development",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "responsibility",
        "coordination",
        "implementations",
        "software",
        "builds",
        "analytics",
        "way",
        "releases",
        "additions",
        "deletions",
        "change",
        "scope",
        "release",
        "plan",
        "tracking",
        "defects",
        "release",
        "plan",
        "roadmap",
        "communication",
        "UI",
        "modification",
        "HTML",
        "CSS",
        "Developed",
        "Application",
        "logic",
        "Python",
        "Django",
        "framework",
        "Wrote",
        "data",
        "access",
        "Logic",
        "MYSQL",
        "SQL",
        "Server",
        "Used",
        "Web",
        "Services",
        "Supplier",
        "inventory",
        "end",
        "items",
        "application",
        "system",
        "QA",
        "infrastructure",
        "testing",
        "process",
        "software",
        "product",
        "Unit",
        "integration",
        "smoke",
        "testing",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "end",
        "end",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "center",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "python",
        "client",
        "side",
        "validation",
        "JavaScript",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Windows",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Python",
        "Developer",
        "ISpace",
        "October",
        "August",
        "Responsibilities",
        "Automation",
        "execution",
        "tests",
        "batch",
        "Shell",
        "scripting",
        "python",
        "Development",
        "data",
        "structures",
        "Python",
        "Usage",
        "advance",
        "features",
        "pickleunpick",
        "python",
        "information",
        "applications",
        "Django",
        "database",
        "APIs",
        "database",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "reports",
        "package",
        "Numpy",
        "matPlotLib",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Wrote",
        "programs",
        "file",
        "user",
        "data",
        "data",
        "validations",
        "Cassandra",
        "database",
        "users",
        "data",
        "serverclient",
        "end",
        "page",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "property",
        "list",
        "application",
        "python",
        "Developing",
        "maintenance",
        "tool",
        "information",
        "user",
        "performances",
        "IDEs",
        "debug",
        "tools",
        "data",
        "design",
        "database",
        "SVN",
        "version",
        "control",
        "data",
        "levels",
        "access",
        "privileges",
        "Environment",
        "Python",
        "Django",
        "Linux",
        "HTML",
        "CSS",
        "MongoDB",
        "Cassandra",
        "Web",
        "services",
        "SVN",
        "Python",
        "Developer",
        "Nivisol",
        "Technologies",
        "May",
        "September",
        "Responsibilities",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "components",
        "Python",
        "Django",
        "framework",
        "code",
        "Python",
        "manipulate",
        "data",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "data",
        "access",
        "modules",
        "programming",
        "data",
        "aggregation",
        "pagination",
        "Jackson",
        "library",
        "Django",
        "Database",
        "APIs",
        "database",
        "app",
        "Python",
        "PHP",
        "performance",
        "PySpark",
        "Data",
        "frame",
        "creation",
        "table",
        "analytics",
        "view",
        "pages",
        "HTML5",
        "CSS3",
        "Tag",
        "Libraries",
        "production",
        "support",
        "production",
        "issues",
        "priority",
        "issues",
        "Environment",
        "Python",
        "Django",
        "PYQT",
        "JQuery",
        "DOM",
        "JSON",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "JSON",
        "Rest",
        "PHP",
        "SVN",
        "SQL",
        "Windows",
        "LINUX",
        "Education",
        "Bachelors",
        "Skills",
        "NET",
        "year",
        "Apache",
        "years",
        "AWS",
        "year",
        "CSS",
        "years",
        "years",
        "HTML",
        "years",
        "Integration",
        "years",
        "INTEGRATOR",
        "years",
        "JavaScript",
        "years",
        "Jira",
        "year",
        "Linux",
        "years",
        "MongoDB",
        "year",
        "MS",
        "SQL",
        "Server",
        "year",
        "MySQL",
        "years",
        "Oracle",
        "years",
        "years",
        "Python",
        "years",
        "SQL",
        "years",
        "SQL",
        "Server",
        "year",
        "web",
        "server",
        "year",
        "Additional",
        "Information",
        "Operating",
        "Systems",
        "Unix",
        "Linux",
        "Ubuntu",
        "Solaris",
        "Windows",
        "MacOS",
        "Programming",
        "Languages",
        "Python",
        "PLSQL",
        "Java",
        "CSSHTMLJavaScript",
        "Oracle",
        "g",
        "MySQL",
        "SQL",
        "Server",
        "PostgreSQL",
        "MongoDB",
        "Tools",
        "PyCharm",
        "PLSQL",
        "Developer",
        "Spyder",
        "Visual",
        "Studio",
        "Visio",
        "IBM",
        "Websphere",
        "Integration",
        "Tools",
        "Jenkins",
        "Web",
        "Builder",
        "Message",
        "Broker",
        "IBM",
        "MQ",
        "Web",
        "Server",
        "Apache",
        "Webserver",
        "Defect",
        "Tracking",
        "JIRA",
        "Cloud",
        "services",
        "Microsoft",
        "Azure"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:54:07.616737",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer State Street North Quincy MA Around 7 years of experience as a WebApplication Developer and coding with analytical programming using Python Experience in analysis design and development testing implementation and maintenance of various web applications using Python and Django Experience with Django and Flask a highlevel Python Web framework Experienced with full Software Development LifeCycle SDLC architecting scalable platforms Object Oriented Programming Database Design and Agile Methodologies Experience with Requests Numpy Scipy Matplotlib and Pandas python libraries during development lifecycle Experience with automationconfiguration management using tools like Ansible Puppet Chef and SaltStack Knowledge on Open Stack Environment Implementation and the architecture using API to integrate between multiple utilities storage Monitoring computing Authentication Authorization Worked with python libraries from Python Package Index PyPI Experience with Jenkins and Enterprise GitHub Worked on Jenkins continuous integration tool for deployment of project Experienced in using MVCMVT architecture using RESTful Soap Web services and highlevel Python Web frameworks like Django and Flask Experience in end to end design and deploy rich Graphic visualizations with Drill Down and Drop down menu option and Parameterized using Tableau Worked on Loading and transforming large sets of structured semi structured and unstructured data using Hadoop Bigdata concepts Proficient in SQL databases MSSQL Server MySQL RDBMS Oracle DB Postgres and MongoDB Working experience on JSON based REST Web services and Amazon Web Services AWS Such as EC2 Lambda ELB SQS Queuing Services VPC and cloud watch Working knowledge on Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Knowledge in Data mining and Data warehousing using ETL Tools and Proficient in Building reports and dashboards in Tableau BI Tool Experience in implementing PEP8 coding standards Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings TECHNOLOGY AND TOOLS Work Experience Sr Python Developer State Street North Quincy MA February 2018 to Present Responsibilities Designed and developed the server module and resolved issues and responsible for its enhancements Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Worked on Django ORM module for signing complex queries Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Worked with Splunk for testing the performance and debugging server level problems Developing Python Framework using Django to perform scan software unit monitoring Designed the front end of the application using Python HTML CSS AJAX JSON and Query Used Djangocelery with the help of RabbitMQ message broker for large processing Utilized the Python unit test framework for all Python applications Used Django configuration to manage URLs and application parameters Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Worked on Django and RabbitMQ queues Actively involved in analysis of the system requirements specifications and involved in client interaction during requirements specifications Performed Unit testing Integration Testing Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Carried out various mathematical operations for calculation purpose using Python libraries numpy Successfully migrated the Django database from SQLite to MySQL with complete data integrity Used Circle CI for continuous integration and delivery platform over GIT Used Django Migrations for designing and expanding of the database Automated most of the daily task using python scripting Involved in the CICD pipeline management for managing the weekly releases Worked on Jira for managing the tasks and improving the individual performance Built various graphs for business decision making using Python matplotlib library Environment Python 2627 JavaScript Django Framework 13 CSS SQL MySQL LAMP JQuery Adobe Dreamweaver Apache web server GitHub Ansible HTML5CSS PostgreSQL Amazon Web Service AWS S3 EC2 EBS PyCharm Microsoft Visual Code Linux Shell Scripting JIRA Python Developer GE Energy Houston TX July 2017 to January 2018 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Used AJAX to modify small portions of the web pages by sending a request to the server avoiding the need of reloading the entire web page Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Experience using Content Management Systems WordPress and Django CMS plugins Generated Python Django Forms to record data of online users Performed testing using Djangos Test Module Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL PLSQL Developed the required XML Schema documents and implemented the framework for parsing XML documents Wrote Python scripts to parse XML documents and load the data in database Install and configuring monitoring scripts for AWS EC2 instances Environment Python 27 Django 17 HTML5 CSS XML KML MySQL JavaScript Angular JS JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Windows 12 Server Amazon s3 Jenkins Map Box My SQL Mongo DB GitHub Bit Bucket Linux and Windows Python developer Rockwell Collins Cedar Rapids IA September 2016 to June 2017 Responsibilities Worked on development and enhancement of automated tools for testing integration and global application development Work with team of developers on python applications for RISK management Held overall responsibility of coordination of implementations of software builds and releases Provided analytics to help determine optimal way to assemble releases Tracked any additions deletions or change in scope on the published release plan including efficient tracking of defects Built the release plan roadmap and keep maintained for communication Worked on UI modification using HTML CSS Developed Application logic using Python 27 and Django framework Wrote backend data access Logic using MYSQL and SQL Server Used Web Services to extract Supplier inventory for various high end items Integrated the application with different internal system Designed and implemented a distributed QA infrastructure for automated testing of a multi process software product Involved in Unit integration and smoke testing Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed entire front end and back end modules using Python on Django Web Framework Designed and developed data center management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the client side validation using JavaScript Environment Python 27 Django 18 MySQL Windows Linux HTML CSS JQuery JavaScript Apache Linux Python Developer ISpace October 2015 to August 2016 Responsibilities Automation for execution of tests in batch using Shell scripting in python Development of data structures XML parsing using Python Usage of advance features like pickleunpick in python for sharing the information across the applications Used Django database APIs to access database objects Rewrite existing PythonDjango modules to deliver certain format of data Generated graphical reports using python package Numpy and matPlotLib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Wrote programs to parse excel file and process many user data with data validations Create Cassandra database to handle the users data serverclient Developed front end page using HTML CSS JavaScript and JQuery Generated property list for every application dynamically using python Developing and maintenance of the tool that abstracts the information for the user Implemented multiple high performances MongoDB Utilized various IDEs and internal debug tools during debugging Analyzing the data in design database Used SVN for version control Maintaining the data with different levels of access privileges Environment Python Django Linux HTML CSS MongoDB Cassandra Web services SVN Python Developer Nivisol Technologies May 2012 to September 2015 Responsibilities Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Designed and created backend data access modules using PLSQL stored procedures and Oracle Designed and developed components using Python with Django framework Implemented code in Python to retrieve and manipulate data Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Created data access modules in python Used functional programming data aggregation with pagination and parsing using Jackson library Used Django Database APIs to access database objects Developed multithreaded standalone app in Python and PHP to view performance Used PySpark Data frame for creation of table and performing analytics over it Participated in developing view pages using HTML5 CSS3 and Tag Libraries Actively involved in production support and resolved the production issues depending upon priority of issues Environment Python Django PYQT JQuery DOM JSON HTML XHTML CSS AJAX JavaScript JSON Rest PHP SVN MY SQL Windows and LINUX Education Bachelors Skills NET Less than 1 year Apache 2 years AWS 1 year CSS 7 years databases 3 years HTML 7 years Integration 2 years INTEGRATOR 2 years JavaScript 7 years Jira 1 year Linux 7 years MongoDB 1 year MS SQL Server 1 year MySQL 2 years Oracle 4 years PLSQL 4 years Python 7 years SQL 6 years SQL Server 1 year web server 1 year Additional Information Operating Systems Unix Linux Ubuntu Solaris Windows and MacOS Programming Languages Python PLSQL Java CSSHTMLJavaScript Databases Oracle 1011g MySQL SQL Server and PostgreSQL MongoDB Tools PyCharm PLSQL Developer Spyder Visual Studio Visio IBM Websphere Integration Tools Jenkins and Web Builder Message Broker RabbitMQ IBM MQ Web Server Apache Webserver Defect Tracking JIRA and VersionOne Cloud services AWS Microsoft Azure",
    "unique_id": "af039889-768f-4220-92f9-b28b2532cfa1"
}