{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer ExxonMobil Irving TX Around 5 years full stack experiences in python and web application development technologies include Flask Django AngularJS ExtJS Twitter Bootstrap 30 MySQL MongoDB Elasticsearch Celery RabbitMQ etc to solve complex business requirements and software design problems Strong experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs Sublime text Spyder PyCharm Eclipse Emacs Good experience in Python in creating scalable and robust applications along with other technologies also proficient in developing Web Services SOAP RESTful in Python using XML JSON Knowledge of Cloud Computing Open stackHelion SDN OpenFlowOpen daylight NFV Cloud Foundry Docker Ansible Chef Jenkins Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experience in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts also good in practicing the SDLC models Extreme Programming Ticketing systems using JIRA and TestDriven Development TDD Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript jQuery MVC3 Bootstrap RESTful RUBY and AJAX Expertise in working with different databases like Cassandra Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Flask Web2Py and Pyramid Excellent experience with python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux also well versed with Version control systems such as Git SVN and CVS Good experience in strategy and implementation of AWS technologies such as EC2 S3 and EBS also experience in project deployment using Google CloudJenkins Elasticsearch and using web Services like Amazon Web Services AWS Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI also experience in using UNIX Shell Scripts for automating batch programs Experience of AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON also driven to architect Big Data solutions on multiple platforms using data analytics Experience in implementing core cache and abstraction with Jasmine and Redis cache server Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Good experience in developing web applications implementing Model View Control architecture using Django Flask and Pyramid Python web application frameworks Good knowledge on front end frame works like CSS Bootstrap also experience in implementation of Python best Practices PEP8 Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Experience with Design code and debug operations reporting data analysis and web applications utilizing Python also have good experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections also have knowledge about setting up Python REST API Frame work using Django and Flask Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL PostgreSQL DB2 also experience in working with SQL Alchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Good experience of NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Very good knowledge of various softwares organizing technical demonstrations with sound understanding and skill of creating new software systems designing analysis testing database development and coding for modules while structuring customized solutions to meet customers specific needs Work Experience Python Developer ExxonMobil Irving TX July 2018 to Present Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and jQuery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development also involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches Used ADONET objects such as Dataset SQL Command SQL Connection and SQL Data Reader in Data Access Layer Designed front end and backend of the application using Python on Django Web Framework also developed a consumerbased features and applications using Python and Django in test driven Development and pairbased programming Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Implemented the application using Python Spring IOCInversion of Control Django Framework and Apache spark handled the security using Python Spring Security also developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra also build Restful API web services using Node JS and Express JS and used a Full complement of Express Angular JS Nodejs and Mongo DB to store and present assessments Worked on Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Involved in developing the AngularJS Meteor framework for the Single Page Application development also wrote ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Worked on frontend frameworks like CSS Bootstrap for development of Web application also used Python based GUI components for the frontend functionality such as selection criteria Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git also deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Developed existing network mapping microservices using python Nmap and deployed it on Kubernetes also performed Restful routing using Nodejs which submits my form data to the Mongo DB database Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template also automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python also run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization deployed the project into Jenkins using GIT version control system Developed spark application working with Spark Context SparkSQL Data Frame Pair RDDs Wrote Restful web services to communicate with Mongo DB and performed CRUD operations on Mongo DB using Restful web API services Managed Linux and windows virtual servers on AWS EC2 using opensource chef server Worked on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for querying Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through mo as a CICD Process Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs to Kafka topics and handful in use of version controlling systems like GIT and SVN Worked on importing the realtime data to Hadoop using Kafka and implemented the Oozie job Experience Schedule Recurring Hadoop Jobs with Apache Oozie Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Utilized Python libraries wx Python NumPy Twisted and matplotlib and designing mobile search application system requirements and coded backend and frontend in Python Created Chef roles for different Applications and services and to spin in different environments Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Implemented SQL Alchemy which is a python library for complete access over SQL Having expertise on performance testing of the applications on Mongo DB using Studio3T and OPS Manager Developed Hibernate with Spring Integration as the data abstraction to interact with the database of Mongo DB Worked on Element tree XML API in python to parse XML documents and load the data in database Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs as well used Angular JS as the development framework to build a singlepage application Python Developer Infosys Bengaluru Karnataka October 2015 to December 2017 Worked on several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed and designed system to collect data from multiple portal using Kafka and then process it using spark Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Worked on installation of Docker using Docker toolbox used GIT for the version control and deployed project into AWS Created RESTful APIs calls with server parse output report of excel files wrote scripts in Python for extracting data from HTML file Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment worked on creation of custom Docker container images tagging and pushing the images Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster also used Storm and Kafka Services to push data to HBase and Hive tables Used Chef deployed and configured for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Used Spark Streaming APIs to perform transformations and actions on the fly for building common Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Creating and configuring virtual development environments with Chef and Virtual Box and Developed a fully automated continuous integration system using Git Gerrit Jenkins and custom tools developed in Python and Bash and Responsible for developing and maintaining web application using React JS and Node JS Developed analytics designed and implemented a proprietary system for algorithmic trading risk management and trading cost optimizationJava Expertise in managing AWS cloud resources EC2 S3 EBS VPC ELB RDS Elastic beanstalk Cloud Watch and IAM and configured Elastic Load Balancers with EC2 Auto scaling groups Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL and Involved in the development ORM Queries Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Managed communication between Clients Architects Developers and UAT Testing teams Developing software in Python C and web development frameworks such as Flask as well as Angular 2Mongo DB Express Nodejs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Designed and deployed multiple applications utilizing most of the AWS services such as EC2 Route 53 RDS DynamoDB EMR and SQS Worked on core AWS services such as Setting up new server EC2 instancesservices in AWS configuring security groups and setting up Elastic IPs autoscaling configuration and Cloud Formation Extensively used Nodejs tools like Gulp Grunt Web pack Developed internal CLI applications using Commander Module for application build Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Spark Streaming to divide streaming data into batches as an input to Spark engine for batch processing Good experience using various Python libraries including Beautiful Soup NumPy SciPy Matplotlib pythontwitter Urllib Pandas data frame network for database connectivity to speed up development Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Worked on bugtracking Jira source code management tools Git GitHub Stash and team collaboration software SAAS tool Confluence Worked on big data Technologies particularly Hadoop Hive Pig as well as Spark also installed and maintained web servers Tomcat and Apache HTTP in UNIX Worked on various Python packages such as SQL Alchemy Pickle PySide PySpark PyMongo PyTable Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Python Developer CGI Group Hyderabad Telangana August 2013 to September 2015 Set up data storage using a PostgreSQL database on an AWS Relational Database Service Utilized Django ORM for simpler queries and cursors for more complex queries to call manytomany data relations Queries were further abstracted using objectoriented programming Extensive usage of User Controls and ASPNET server controls Developed and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Trained staff on effective use of Jenkins Docker GitLab and Kubernetes Coordination of Middleware project components into releases for deployment into testing regions and production Wrote SQL and implemented ORM using JPA and developed front end features using ReactReduxES6 with Web pack Analyzed global trading data wrote SQL stored procedures to extract trading data from multiple databases to report Global Trading Metrics blocks allocations notional late and not confirmed trades Designed Configured and managed publicprivate cloud infrastructures utilizing Amazon Web ServicesAWS including EC2 AutoScaling Elastic Load Balancer Elastic Beanstalk S3 Cloud Front RDS VPC Route53 Cloud Watch Cloud Formation IAM EBS RDS SNS SQS Redshift Managed continuous build and share progress with Confluence Bamboo and SVN Instituted configuration and systems management via Ansible inventoried and standardized system configurations and package installations trained other team members in the use of Git and Ansible Conducted system requirements sessions and documented requirements Deliver Big Data Products including replatforming Legacy Global Risk Management System with BigData Technologies such as Hadoop Hive and HBase Worked with NoSQL Mongo DB and heavily worked on Hive Hbase and HDFS Involved in designing application system requirements and coded backend and frontend in Django Python and Used ReactRouter to turn application into Single Page Application Managed local deployments in Kubernetes creating local cluster and deploying application containers Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Performed AWS Cloud administration managing EC2 instances S3 Cloud Formation SES and SNS services Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS JQuery AJAX and implemented CSS3 for better appearance and feel Implement modules into Node JS to integrate with designs and requirements Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Integration Test Coordinator and manager for Enterprise Testing ServicesETS organization specializing in Ecommerce projects Architecture and development of REST Services powered webbased SaaS application for largescale video processing using custom DV Labs video compression software able to reduce the size of video by over 50 without a loss in perceived quality Java Groovy Python AWS SQS Jenkins MySQL NginX REST Services Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Involved in building stable React components and standalone functions to be added to any future pages Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed remote integration with third party platforms by using RESTful web services Improved code reuse and performance by making effective use of various design patterns and refactoring code base Created proofofconcept using responsive web design Nodejs React JS HTML5 and CSS3 Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Installed and Configured the Apache Nginx Tomcat web application servers for Dev and Integration Test Environments Education Masters in Information Technology University of Texas Skills Javascript MySQL jQuery HTML 5 CSS",
    "entities": [
        "Object Oriented Programming",
        "Spark Context",
        "AJAX",
        "CVS Good",
        "GUI",
        "Nodejs",
        "Karnataka",
        "UNIX",
        "BigData Technologies",
        "Sublime Text",
        "AJAX JSON",
        "Design Patterns",
        "JSON",
        "Created Terraform",
        "LAMP Linux",
        "GIT Repository Setup",
        "Panda",
        "Design Development and Deployment Testing and Implementation",
        "Nodejs React JS HTML5",
        "Installed and Configured",
        "Model View Control MVC",
        "Hadoop",
        "XML",
        "SOAP",
        "DHTML",
        "Telangana",
        "jQuery Created",
        "Oracle MySQL PostgreSQL DB2",
        "Developed Chef Cookbooks",
        "User Controls",
        "JIRA",
        "SVN Worked",
        "Chef Serverworkstation",
        "ONCORE",
        "Implemented Terraform",
        "HBase",
        "Apache Spark",
        "Amazon",
        "Storm and Kafka Services",
        "Maven Repository and Deployment",
        "Python Developer Infosys",
        "Global Risk Management System",
        "ReactRouter",
        "GitHub Bit Bucket",
        "Bigdata Integration and Analytics",
        "Python",
        "the Single Page Application",
        "Used UML Rational Rose",
        "Stored Procedures",
        "Developed",
        "SQL Having",
        "Amazon AWS S3",
        "JPA",
        "Jenkins",
        "Bash",
        "CSS Bootstrap",
        "Python REST API Frame",
        "Amazon Web Services AWS Experience",
        "Oracle Application Server",
        "Puppet",
        "Extreme Programming Ticketing",
        "Kanban",
        "Git",
        "Restful",
        "DDL",
        "ANSIBLE",
        "DjangoREST",
        "RD",
        "Chef and Ansible Followed Agile",
        "PythonPHP",
        "HTML5",
        "Flask Django",
        "Chef Done",
        "API RESTful Web Service",
        "NodeJS Involved",
        "Flask",
        "MVC Singleton",
        "AWS Lambda and CloudWatch Used Spark Streaming",
        "Version",
        "SDLC",
        "Docker",
        "RDS",
        "CLI",
        "Dataset SQL Command",
        "Flask SQL Alchemy",
        "Spark",
        "PythonPHP Architecture",
        "jQuery Designed",
        "Validate",
        "GIT",
        "Global Trading Metrics",
        "Node JS",
        "Python on Django",
        "API",
        "Restful API",
        "Hadoop Hive",
        "NGINX",
        "Cassandra Oracle MySQL PostgreSQL",
        "IAM",
        "Angular 2Mongo DB Express",
        "Information Technology University of Texas",
        "AWS",
        "WAMP Windows Apache",
        "Python Created Chef",
        "Designed Configured",
        "React JS",
        "DV Labs",
        "HTML",
        "Bootstrap RESTful RUBY",
        "AWS Relational Database Service Utilized Django",
        "SQL",
        "TSQL Queries",
        "DML",
        "SQS Worked",
        "AWS Created",
        "lPythonspan",
        "Kubernetes",
        "REST Integration Test Coordinator",
        "Dev and Integration Test Environments Education Masters",
        "TestDriven Development TDD Experienced",
        "Python Spring Security",
        "Apache Cassandra 311",
        "Ant",
        "Kubernetes Coordination of Middleware",
        "SSH",
        "SQL Alchemy",
        "Clients Architects Developers",
        "REST Services Managed",
        "CI",
        "Big Data",
        "Model View Control",
        "Hive",
        "Express Angular JS Nodejs",
        "HBase Worked",
        "Python Django PHP C XML",
        "Pandas",
        "AJAX Expertise",
        "SQLite",
        "CRUD",
        "MultiThreading Exception Handling and Collections",
        "Maven",
        "REST Services",
        "Worked on Mongo DB",
        "Spark SQL",
        "Djangos",
        "JavaScript",
        "Pyramid Excellent",
        "Deliver Big Data Products",
        "Django WSGI",
        "Web Services SOAP",
        "SQL Queries Stored",
        "SQL Data Reader in Data Access Layer Designed",
        "View Sets",
        "SVN",
        "Expertise",
        "CSS",
        "jQuery",
        "Tomcat",
        "ASPNET",
        "Data",
        "Nmap",
        "Present Involved",
        "NoSQL",
        "EBS",
        "Google CloudJenkins Elasticsearch",
        "Apache Spark Hadoop",
        "Mongo DB",
        "Single Page Application",
        "MFA",
        "Node"
    ],
    "experience": "Experience in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts also good in practicing the SDLC models Extreme Programming Ticketing systems using JIRA and TestDriven Development TDD Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript jQuery MVC3 Bootstrap RESTful RUBY and AJAX Expertise in working with different databases like Cassandra Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Flask Web2Py and Pyramid Excellent experience with python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux also well versed with Version control systems such as Git SVN and CVS Good experience in strategy and implementation of AWS technologies such as EC2 S3 and EBS also experience in project deployment using Google CloudJenkins Elasticsearch and using web Services like Amazon Web Services AWS Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI also experience in using UNIX Shell Scripts for automating batch programs Experience of AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON also driven to architect Big Data solutions on multiple platforms using data analytics Experience in implementing core cache and abstraction with Jasmine and Redis cache server Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Good experience in developing web applications implementing Model View Control architecture using Django Flask and Pyramid Python web application frameworks Good knowledge on front end frame works like CSS Bootstrap also experience in implementation of Python best Practices PEP8 Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Experience with Design code and debug operations reporting data analysis and web applications utilizing Python also have good experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections also have knowledge about setting up Python REST API Frame work using Django and Flask Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL PostgreSQL DB2 also experience in working with SQL Alchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Good experience of NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Very good knowledge of various softwares organizing technical demonstrations with sound understanding and skill of creating new software systems designing analysis testing database development and coding for modules while structuring customized solutions to meet customers specific needs Work Experience Python Developer ExxonMobil Irving TX July 2018 to Present Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and jQuery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development also involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches Used ADONET objects such as Dataset SQL Command SQL Connection and SQL Data Reader in Data Access Layer Designed front end and backend of the application using Python on Django Web Framework also developed a consumerbased features and applications using Python and Django in test driven Development and pairbased programming Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Implemented the application using Python Spring IOCInversion of Control Django Framework and Apache spark handled the security using Python Spring Security also developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra also build Restful API web services using Node JS and Express JS and used a Full complement of Express Angular JS Nodejs and Mongo DB to store and present assessments Worked on Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Involved in developing the AngularJS Meteor framework for the Single Page Application development also wrote ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Worked on frontend frameworks like CSS Bootstrap for development of Web application also used Python based GUI components for the frontend functionality such as selection criteria Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git also deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Developed existing network mapping microservices using python Nmap and deployed it on Kubernetes also performed Restful routing using Nodejs which submits my form data to the Mongo DB database Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template also automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python also run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization deployed the project into Jenkins using GIT version control system Developed spark application working with Spark Context SparkSQL Data Frame Pair RDDs Wrote Restful web services to communicate with Mongo DB and performed CRUD operations on Mongo DB using Restful web API services Managed Linux and windows virtual servers on AWS EC2 using opensource chef server Worked on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for querying Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through mo as a CICD Process Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs to Kafka topics and handful in use of version controlling systems like GIT and SVN Worked on importing the realtime data to Hadoop using Kafka and implemented the Oozie job Experience Schedule Recurring Hadoop Jobs with Apache Oozie Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Utilized Python libraries wx Python NumPy Twisted and matplotlib and designing mobile search application system requirements and coded backend and frontend in Python Created Chef roles for different Applications and services and to spin in different environments Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Implemented SQL Alchemy which is a python library for complete access over SQL Having expertise on performance testing of the applications on Mongo DB using Studio3 T and OPS Manager Developed Hibernate with Spring Integration as the data abstraction to interact with the database of Mongo DB Worked on Element tree XML API in python to parse XML documents and load the data in database Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs as well used Angular JS as the development framework to build a singlepage application Python Developer Infosys Bengaluru Karnataka October 2015 to December 2017 Worked on several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed and designed system to collect data from multiple portal using Kafka and then process it using spark Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Worked on installation of Docker using Docker toolbox used GIT for the version control and deployed project into AWS Created RESTful APIs calls with server parse output report of excel files wrote scripts in Python for extracting data from HTML file Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment worked on creation of custom Docker container images tagging and pushing the images Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster also used Storm and Kafka Services to push data to HBase and Hive tables Used Chef deployed and configured for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Used Spark Streaming APIs to perform transformations and actions on the fly for building common Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Creating and configuring virtual development environments with Chef and Virtual Box and Developed a fully automated continuous integration system using Git Gerrit Jenkins and custom tools developed in Python and Bash and Responsible for developing and maintaining web application using React JS and Node JS Developed analytics designed and implemented a proprietary system for algorithmic trading risk management and trading cost optimizationJava Expertise in managing AWS cloud resources EC2 S3 EBS VPC ELB RDS Elastic beanstalk Cloud Watch and IAM and configured Elastic Load Balancers with EC2 Auto scaling groups Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL and Involved in the development ORM Queries Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Managed communication between Clients Architects Developers and UAT Testing teams Developing software in Python C and web development frameworks such as Flask as well as Angular 2Mongo DB Express Nodejs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Designed and deployed multiple applications utilizing most of the AWS services such as EC2 Route 53 RDS DynamoDB EMR and SQS Worked on core AWS services such as Setting up new server EC2 instancesservices in AWS configuring security groups and setting up Elastic IPs autoscaling configuration and Cloud Formation Extensively used Nodejs tools like Gulp Grunt Web pack Developed internal CLI applications using Commander Module for application build Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Spark Streaming to divide streaming data into batches as an input to Spark engine for batch processing Good experience using various Python libraries including Beautiful Soup NumPy SciPy Matplotlib pythontwitter Urllib Pandas data frame network for database connectivity to speed up development Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Worked on bugtracking Jira source code management tools Git GitHub Stash and team collaboration software SAAS tool Confluence Worked on big data Technologies particularly Hadoop Hive Pig as well as Spark also installed and maintained web servers Tomcat and Apache HTTP in UNIX Worked on various Python packages such as SQL Alchemy Pickle PySide PySpark PyMongo PyTable Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Python Developer CGI Group Hyderabad Telangana August 2013 to September 2015 Set up data storage using a PostgreSQL database on an AWS Relational Database Service Utilized Django ORM for simpler queries and cursors for more complex queries to call manytomany data relations Queries were further abstracted using objectoriented programming Extensive usage of User Controls and ASPNET server controls Developed and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Trained staff on effective use of Jenkins Docker GitLab and Kubernetes Coordination of Middleware project components into releases for deployment into testing regions and production Wrote SQL and implemented ORM using JPA and developed front end features using ReactReduxES6 with Web pack Analyzed global trading data wrote SQL stored procedures to extract trading data from multiple databases to report Global Trading Metrics blocks allocations notional late and not confirmed trades Designed Configured and managed publicprivate cloud infrastructures utilizing Amazon Web ServicesAWS including EC2 AutoScaling Elastic Load Balancer Elastic Beanstalk S3 Cloud Front RDS VPC Route53 Cloud Watch Cloud Formation IAM EBS RDS SNS SQS Redshift Managed continuous build and share progress with Confluence Bamboo and SVN Instituted configuration and systems management via Ansible inventoried and standardized system configurations and package installations trained other team members in the use of Git and Ansible Conducted system requirements sessions and documented requirements Deliver Big Data Products including replatforming Legacy Global Risk Management System with BigData Technologies such as Hadoop Hive and HBase Worked with NoSQL Mongo DB and heavily worked on Hive Hbase and HDFS Involved in designing application system requirements and coded backend and frontend in Django Python and Used ReactRouter to turn application into Single Page Application Managed local deployments in Kubernetes creating local cluster and deploying application containers Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Performed AWS Cloud administration managing EC2 instances S3 Cloud Formation SES and SNS services Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS JQuery AJAX and implemented CSS3 for better appearance and feel Implement modules into Node JS to integrate with designs and requirements Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Integration Test Coordinator and manager for Enterprise Testing ServicesETS organization specializing in Ecommerce projects Architecture and development of REST Services powered webbased SaaS application for largescale video processing using custom DV Labs video compression software able to reduce the size of video by over 50 without a loss in perceived quality Java Groovy Python AWS SQS Jenkins MySQL NginX REST Services Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Involved in building stable React components and standalone functions to be added to any future pages Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed remote integration with third party platforms by using RESTful web services Improved code reuse and performance by making effective use of various design patterns and refactoring code base Created proofofconcept using responsive web design Nodejs React JS HTML5 and CSS3 Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Installed and Configured the Apache Nginx Tomcat web application servers for Dev and Integration Test Environments Education Masters in Information Technology University of Texas Skills Javascript MySQL jQuery HTML 5 CSS",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "ExxonMobil",
        "Irving",
        "TX",
        "years",
        "stack",
        "experiences",
        "python",
        "web",
        "application",
        "development",
        "technologies",
        "Flask",
        "Django",
        "ExtJS",
        "Twitter",
        "Bootstrap",
        "MySQL",
        "Elasticsearch",
        "Celery",
        "business",
        "requirements",
        "software",
        "design",
        "problems",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "Sublime",
        "text",
        "Spyder",
        "PyCharm",
        "Eclipse",
        "Emacs",
        "experience",
        "Python",
        "applications",
        "technologies",
        "Web",
        "Services",
        "SOAP",
        "Python",
        "XML",
        "JSON",
        "Knowledge",
        "Cloud",
        "Computing",
        "Open",
        "stackHelion",
        "SDN",
        "daylight",
        "NFV",
        "Cloud",
        "Foundry",
        "Docker",
        "Ansible",
        "Chef",
        "Jenkins",
        "Hands",
        "experience",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Data",
        "analytics",
        "data",
        "Excel",
        "data",
        "SDLC",
        "models",
        "Extreme",
        "Programming",
        "Ticketing",
        "systems",
        "JIRA",
        "TestDriven",
        "Development",
        "TDD",
        "applications",
        "Python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "jQuery",
        "MVC3",
        "Bootstrap",
        "RUBY",
        "AJAX",
        "Expertise",
        "databases",
        "Cassandra",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "knowledge",
        "NoSQL",
        "database",
        "MongoDB",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Web2Py",
        "Pyramid",
        "Excellent",
        "experience",
        "python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "Red",
        "Hat",
        "Linux",
        "Version",
        "control",
        "systems",
        "Git",
        "SVN",
        "CVS",
        "Good",
        "experience",
        "strategy",
        "implementation",
        "AWS",
        "technologies",
        "EC2",
        "S3",
        "EBS",
        "project",
        "deployment",
        "Google",
        "CloudJenkins",
        "Elasticsearch",
        "web",
        "Services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Experience",
        "Design",
        "Patterns",
        "MVC",
        "Singleton",
        "frameworks",
        "Django",
        "WSGI",
        "UNIX",
        "Shell",
        "Scripts",
        "batch",
        "programs",
        "Experience",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "Serializable",
        "JSON",
        "Data",
        "solutions",
        "platforms",
        "data",
        "analytics",
        "Experience",
        "core",
        "cache",
        "abstraction",
        "Jasmine",
        "Redis",
        "cache",
        "server",
        "Proficient",
        "SQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Cursor",
        "Packages",
        "DDL",
        "DML",
        "operations",
        "MySQL",
        "PostgreSQL",
        "database",
        "Modified",
        "Stored",
        "Procedures",
        "TSQL",
        "Queries",
        "query",
        "execution",
        "process",
        "knowledge",
        "REST",
        "API",
        "development",
        "idea",
        "tools",
        "Bugzilla",
        "JIRA",
        "Good",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Python",
        "web",
        "application",
        "knowledge",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "implementation",
        "Python",
        "Practices",
        "PEP8",
        "Proficient",
        "editors",
        "Eclipse",
        "Visual",
        "Studio",
        "Code",
        "PyCharm",
        "Py",
        "Scripter",
        "Notepad",
        "Sublime",
        "Text",
        "applications",
        "Experience",
        "Design",
        "code",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "experience",
        "data",
        "Bigdata",
        "Integration",
        "Analytics",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "Experience",
        "Object",
        "Oriented",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "knowledge",
        "Python",
        "REST",
        "API",
        "Frame",
        "work",
        "Django",
        "Flask",
        "Proficient",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "DB2",
        "SQL",
        "Alchemy",
        "databases",
        "Mongo",
        "DB",
        "Cassandra",
        "Oracle",
        "MySQL",
        "experience",
        "Apache",
        "Cassandra",
        "Couchbase",
        "Kubernetes",
        "Mongo",
        "DB",
        "Orient",
        "DBF",
        "Experience",
        "applications",
        "Application",
        "Servers",
        "TOMCAT",
        "Web",
        "Logic",
        "Oracle",
        "Application",
        "Server",
        "Experience",
        "deployment",
        "tools",
        "Google",
        "Cloud",
        "Jenkins",
        "Ansible",
        "Pylint",
        "cpp",
        "Check",
        "Coverity",
        "knowledge",
        "softwares",
        "demonstrations",
        "understanding",
        "skill",
        "software",
        "systems",
        "analysis",
        "testing",
        "database",
        "development",
        "modules",
        "solutions",
        "customers",
        "needs",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "ExxonMobil",
        "Irving",
        "TX",
        "July",
        "Present",
        "development",
        "end",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "bootstrap",
        "AJAX",
        "JSON",
        "jQuery",
        "Web",
        "Application",
        "MultiTier",
        "Architecture",
        "web",
        "technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "RESTful",
        "Web",
        "Services",
        "Create",
        "Jenkins",
        "pipeline",
        "jobs",
        "Puppet",
        "release",
        "process",
        "module",
        "deployment",
        "Kanban",
        "methodology",
        "Puppet",
        "development",
        "GIT",
        "Puppet",
        "integrity",
        "applications",
        "Production",
        "Development",
        "Test",
        "Release",
        "Branches",
        "ADONET",
        "objects",
        "Dataset",
        "SQL",
        "Command",
        "SQL",
        "Connection",
        "SQL",
        "Data",
        "Reader",
        "Data",
        "Access",
        "Layer",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "application",
        "Python",
        "Spring",
        "IOCInversion",
        "Control",
        "Django",
        "Framework",
        "Apache",
        "spark",
        "security",
        "Python",
        "Spring",
        "Security",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "API",
        "web",
        "services",
        "Node",
        "JS",
        "Express",
        "JS",
        "complement",
        "Express",
        "Angular",
        "JS",
        "Nodejs",
        "Mongo",
        "DB",
        "assessments",
        "Mongo",
        "DB",
        "concern",
        "loss",
        "data",
        "system",
        "failures",
        "read",
        "preferences",
        "Mongo",
        "DB",
        "replica",
        "Meteor",
        "framework",
        "Single",
        "Page",
        "Application",
        "development",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "pie",
        "Web",
        "Framework",
        "Git",
        "Microservices",
        "cloud",
        "foundry",
        "domains",
        "routes",
        "network",
        "mapping",
        "microservices",
        "python",
        "Nmap",
        "Kubernetes",
        "routing",
        "Nodejs",
        "form",
        "data",
        "Mongo",
        "DB",
        "database",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "template",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "spark",
        "application",
        "Spark",
        "Context",
        "SparkSQL",
        "Data",
        "Frame",
        "Pair",
        "RDDs",
        "Wrote",
        "Restful",
        "web",
        "services",
        "Mongo",
        "DB",
        "CRUD",
        "operations",
        "Mongo",
        "DB",
        "Restful",
        "web",
        "API",
        "services",
        "Managed",
        "Linux",
        "servers",
        "AWS",
        "EC2",
        "chef",
        "server",
        "Apache",
        "Spark",
        "jobs",
        "Scala",
        "test",
        "environment",
        "data",
        "processing",
        "Spark",
        "SQL",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Understanding",
        "configuration",
        "Cloud",
        "Trail",
        "cloudsecurity",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systemsIAM",
        "Experience",
        "Installing",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "mo",
        "CICD",
        "Process",
        "Configured",
        "Jenkins",
        "CI",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Done",
        "POC",
        "Kafka",
        "Spark",
        "Streaming",
        "data",
        "application",
        "analytics",
        "application",
        "Wrote",
        "Kafka",
        "producers",
        "data",
        "rest",
        "APIs",
        "Kafka",
        "topics",
        "handful",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "data",
        "Hadoop",
        "Kafka",
        "Oozie",
        "job",
        "Experience",
        "Schedule",
        "Recurring",
        "Hadoop",
        "Jobs",
        "Apache",
        "Oozie",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "wx",
        "Python",
        "NumPy",
        "Twisted",
        "matplotlib",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Python",
        "Created",
        "Chef",
        "roles",
        "Applications",
        "services",
        "environments",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "SQL",
        "Alchemy",
        "library",
        "access",
        "SQL",
        "expertise",
        "performance",
        "testing",
        "applications",
        "Mongo",
        "DB",
        "Studio3",
        "T",
        "OPS",
        "Manager",
        "Hibernate",
        "Spring",
        "Integration",
        "data",
        "abstraction",
        "database",
        "Mongo",
        "DB",
        "Worked",
        "Element",
        "tree",
        "XML",
        "API",
        "python",
        "XML",
        "documents",
        "data",
        "database",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "JS",
        "development",
        "framework",
        "singlepage",
        "application",
        "Python",
        "Developer",
        "Infosys",
        "Bengaluru",
        "Karnataka",
        "October",
        "December",
        "Python",
        "libraries",
        "Python",
        "NumPy",
        "matplotlib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "system",
        "data",
        "portal",
        "Kafka",
        "spark",
        "Developed",
        "Chef",
        "Cookbooks",
        "Apache",
        "Tomcat",
        "Jenkins",
        "deployment",
        "automation",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "Numerical",
        "analysis",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "installation",
        "Docker",
        "Docker",
        "toolbox",
        "GIT",
        "version",
        "control",
        "project",
        "AWS",
        "APIs",
        "server",
        "parse",
        "output",
        "report",
        "files",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Jenkins",
        "testing",
        "integration",
        "deployment",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "project",
        "JIRA",
        "Agile",
        "Confluent",
        "Kafka",
        "RD",
        "line",
        "installation",
        "HDFS",
        "connector",
        "Hive",
        "connectors",
        "Performed",
        "Disk",
        "Space",
        "management",
        "users",
        "groups",
        "cluster",
        "Storm",
        "Kafka",
        "Services",
        "data",
        "HBase",
        "Hive",
        "tables",
        "Chef",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "Spark",
        "Streaming",
        "APIs",
        "transformations",
        "actions",
        "fly",
        "Installed",
        "configuration",
        "tool",
        "Chef",
        "Serverworkstation",
        "nodes",
        "CLI",
        "tools",
        "AWS",
        "nodes",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "methodology",
        "SCRUM",
        "meetings",
        "sprint",
        "planning",
        "showcases",
        "JIRA",
        "tracking",
        "tool",
        "sprints",
        "development",
        "environments",
        "Chef",
        "Virtual",
        "Box",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Responsible",
        "web",
        "application",
        "React",
        "JS",
        "Node",
        "JS",
        "Developed",
        "analytics",
        "system",
        "trading",
        "risk",
        "management",
        "trading",
        "cost",
        "optimizationJava",
        "Expertise",
        "AWS",
        "cloud",
        "resources",
        "EC2",
        "S3",
        "EBS",
        "VPC",
        "ELB",
        "RDS",
        "beanstalk",
        "Cloud",
        "Watch",
        "IAM",
        "Elastic",
        "Load",
        "Balancers",
        "EC2",
        "Auto",
        "scaling",
        "groups",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "development",
        "ORM",
        "Queries",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "communication",
        "Clients",
        "Architects",
        "Developers",
        "UAT",
        "Testing",
        "teams",
        "software",
        "Python",
        "C",
        "web",
        "development",
        "frameworks",
        "Flask",
        "Angular",
        "2Mongo",
        "DB",
        "Express",
        "Nodejs",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "applications",
        "AWS",
        "services",
        "EC2",
        "Route",
        "RDS",
        "DynamoDB",
        "EMR",
        "SQS",
        "core",
        "AWS",
        "services",
        "server",
        "EC2",
        "instancesservices",
        "AWS",
        "security",
        "groups",
        "IPs",
        "configuration",
        "Cloud",
        "Formation",
        "Nodejs",
        "tools",
        "Gulp",
        "Grunt",
        "Web",
        "pack",
        "CLI",
        "applications",
        "Commander",
        "Module",
        "application",
        "build",
        "UML",
        "Rational",
        "Rose",
        "Usecase",
        "Class",
        "Object",
        "diagrams",
        "techniques",
        "Spark",
        "Streaming",
        "streaming",
        "data",
        "batches",
        "input",
        "Spark",
        "engine",
        "batch",
        "experience",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Urllib",
        "Pandas",
        "data",
        "frame",
        "network",
        "database",
        "connectivity",
        "development",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "Jira",
        "source",
        "code",
        "management",
        "tools",
        "Git",
        "GitHub",
        "Stash",
        "team",
        "collaboration",
        "software",
        "SAAS",
        "tool",
        "Confluence",
        "data",
        "Technologies",
        "Hadoop",
        "Hive",
        "Pig",
        "Spark",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Python",
        "packages",
        "SQL",
        "Alchemy",
        "Pickle",
        "PySide",
        "PySpark",
        "PyMongo",
        "PyTable",
        "Responsible",
        "testing",
        "web",
        "application",
        "databases",
        "Pandas",
        "data",
        "frames",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "project",
        "Amazon",
        "web",
        "services",
        "AWS",
        "amazon",
        "bean",
        "stalk",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "pie",
        "Web",
        "Framework",
        "Git",
        "Python",
        "Developer",
        "CGI",
        "Group",
        "Hyderabad",
        "Telangana",
        "August",
        "September",
        "data",
        "storage",
        "PostgreSQL",
        "database",
        "AWS",
        "Relational",
        "Database",
        "Service",
        "Django",
        "ORM",
        "queries",
        "cursors",
        "queries",
        "data",
        "relations",
        "Queries",
        "programming",
        "usage",
        "User",
        "Controls",
        "ASPNET",
        "server",
        "Developed",
        "Python",
        "scripts",
        "automation",
        "procedure",
        "API",
        "JSON",
        "data",
        "hardware",
        "system",
        "design",
        "documents",
        "business",
        "objectives",
        "developer",
        "testing",
        "activities",
        "unit",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "staff",
        "use",
        "Jenkins",
        "Docker",
        "GitLab",
        "Kubernetes",
        "Coordination",
        "Middleware",
        "project",
        "components",
        "releases",
        "deployment",
        "testing",
        "regions",
        "production",
        "Wrote",
        "SQL",
        "ORM",
        "JPA",
        "end",
        "features",
        "ReactReduxES6",
        "Web",
        "pack",
        "trading",
        "data",
        "SQL",
        "procedures",
        "trading",
        "data",
        "databases",
        "Global",
        "Trading",
        "Metrics",
        "blocks",
        "allocations",
        "trades",
        "Configured",
        "publicprivate",
        "cloud",
        "infrastructures",
        "Amazon",
        "Web",
        "ServicesAWS",
        "EC2",
        "AutoScaling",
        "Elastic",
        "Load",
        "Balancer",
        "Elastic",
        "Beanstalk",
        "S3",
        "Cloud",
        "Front",
        "RDS",
        "VPC",
        "Route53",
        "Cloud",
        "Watch",
        "Cloud",
        "Formation",
        "IAM",
        "EBS",
        "RDS",
        "SNS",
        "SQS",
        "Redshift",
        "build",
        "progress",
        "Confluence",
        "Bamboo",
        "SVN",
        "configuration",
        "systems",
        "management",
        "system",
        "configurations",
        "package",
        "installations",
        "team",
        "members",
        "use",
        "Git",
        "Ansible",
        "Conducted",
        "system",
        "requirements",
        "sessions",
        "requirements",
        "Deliver",
        "Big",
        "Data",
        "Products",
        "Legacy",
        "Global",
        "Risk",
        "Management",
        "System",
        "BigData",
        "Technologies",
        "Hadoop",
        "Hive",
        "HBase",
        "NoSQL",
        "Mongo",
        "DB",
        "Hive",
        "Hbase",
        "HDFS",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Python",
        "ReactRouter",
        "application",
        "Single",
        "Page",
        "Application",
        "deployments",
        "Kubernetes",
        "cluster",
        "application",
        "containers",
        "frontend",
        "code",
        "call",
        "AngularJS",
        "jQuery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "RESTful",
        "Server",
        "Performed",
        "AWS",
        "Cloud",
        "administration",
        "EC2",
        "instances",
        "S3",
        "Cloud",
        "Formation",
        "SES",
        "SNS",
        "services",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML5",
        "JavaScript",
        "JQuery",
        "AJAX",
        "CSS3",
        "appearance",
        "Implement",
        "modules",
        "Node",
        "JS",
        "designs",
        "requirements",
        "network",
        "web",
        "pages",
        "user",
        "application",
        "links",
        "page",
        "user",
        "use",
        "REST",
        "Integration",
        "Test",
        "Coordinator",
        "manager",
        "Enterprise",
        "Testing",
        "ServicesETS",
        "organization",
        "Ecommerce",
        "projects",
        "Architecture",
        "development",
        "REST",
        "Services",
        "SaaS",
        "application",
        "largescale",
        "video",
        "processing",
        "custom",
        "DV",
        "Labs",
        "video",
        "compression",
        "software",
        "size",
        "video",
        "loss",
        "quality",
        "Java",
        "Groovy",
        "Python",
        "AWS",
        "SQS",
        "Jenkins",
        "MySQL",
        "NginX",
        "REST",
        "Services",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "React",
        "components",
        "functions",
        "pages",
        "task",
        "object",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "Performed",
        "security",
        "patching",
        "Apache",
        "NGINX",
        "Vhosts",
        "Linux",
        "hosts",
        "Ubuntu",
        "CentOS",
        "Amazon",
        "Linux",
        "SSH",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "refactoring",
        "code",
        "base",
        "Created",
        "proofofconcept",
        "web",
        "design",
        "Nodejs",
        "React",
        "JS",
        "HTML5",
        "CSS3",
        "page",
        "application",
        "Angular",
        "JS",
        "MongoDB",
        "NodeJS",
        "development",
        "Map",
        "application",
        "analysis",
        "purpose",
        "Experience",
        "debugging",
        "troubleshooting",
        "programming",
        "issues",
        "Configured",
        "Apache",
        "Nginx",
        "Tomcat",
        "web",
        "application",
        "servers",
        "Dev",
        "Integration",
        "Test",
        "Environments",
        "Education",
        "Masters",
        "Information",
        "Technology",
        "University",
        "Texas",
        "Skills",
        "Javascript",
        "MySQL",
        "jQuery",
        "HTML",
        "CSS"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:17:36.000084",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer ExxonMobil Irving TX Around 5 years full stack experiences in python and web application development technologies include Flask Django AngularJS ExtJS Twitter Bootstrap 30 MySQL MongoDB Elasticsearch Celery RabbitMQ etc to solve complex business requirements and software design problems Strong experience of software development in Python libraries used Beautiful Soup NumPy SciPy Matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs Sublime text Spyder PyCharm Eclipse Emacs Good experience in Python in creating scalable and robust applications along with other technologies also proficient in developing Web Services SOAP RESTful in Python using XML JSON Knowledge of Cloud Computing Open stackHelion SDN OpenFlowOpen daylight NFV Cloud Foundry Docker Ansible Chef Jenkins Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experience in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts also good in practicing the SDLC models Extreme Programming Ticketing systems using JIRA and TestDriven Development TDD Experienced in developing webbased applications using Python Django PHP C XML CSS HTML DHTML JavaScript jQuery MVC3 Bootstrap RESTful RUBY and AJAX Expertise in working with different databases like Cassandra Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Flask Web2Py and Pyramid Excellent experience with python development under Linux OS Debian Ubuntu SUSE Linux Red Hat Linux also well versed with Version control systems such as Git SVN and CVS Good experience in strategy and implementation of AWS technologies such as EC2 S3 and EBS also experience in project deployment using Google CloudJenkins Elasticsearch and using web Services like Amazon Web Services AWS Experience in using Design Patterns such as MVC Singleton and frameworks such as Django WSGI also experience in using UNIX Shell Scripts for automating batch programs Experience of AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON also driven to architect Big Data solutions on multiple platforms using data analytics Experience in implementing core cache and abstraction with Jasmine and Redis cache server Proficient in developing complex SQL queries Stored Procedures Functions Triggers Cursor and Packages along with performing DDL and DML operations on the MySQL and PostgreSQL database and Modified Stored Procedures and complex TSQL Queries to improve query execution process Strong knowledge with REST API development and good idea using debugging tools like Bugzilla and JIRA Good experience in developing web applications implementing Model View Control architecture using Django Flask and Pyramid Python web application frameworks Good knowledge on front end frame works like CSS Bootstrap also experience in implementation of Python best Practices PEP8 Proficient in using editors Eclipse Visual Studio Code PyCharm Py Scripter Notepad and Sublime Text while developing different applications Experience with Design code and debug operations reporting data analysis and web applications utilizing Python also have good experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections also have knowledge about setting up Python REST API Frame work using Django and Flask Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle MySQL PostgreSQL DB2 also experience in working with SQL Alchemy in connecting with databases like Mongo DB Cassandra Oracle and MySQL Good experience of NoSQL databases like Apache Cassandra 311 Couchbase Kubernetes and Mongo DB 40 Orient DBF net Experience in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Experience in several deployment tools using Google Cloud Jenkins Ansible Pylint cpp Check and Coverity Very good knowledge of various softwares organizing technical demonstrations with sound understanding and skill of creating new software systems designing analysis testing database development and coding for modules while structuring customized solutions to meet customers specific needs Work Experience Python Developer ExxonMobil Irving TX July 2018 to Present Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and jQuery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Create Jenkins pipeline jobs for Puppet release process for module deployment using Kanban methodology for Puppet development also involved in integrating the GIT into the Puppet to ensure the integrity of applications by creating Production Development Test and Release Branches Used ADONET objects such as Dataset SQL Command SQL Connection and SQL Data Reader in Data Access Layer Designed front end and backend of the application using Python on Django Web Framework also developed a consumerbased features and applications using Python and Django in test driven Development and pairbased programming Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Implemented the application using Python Spring IOCInversion of Control Django Framework and Apache spark handled the security using Python Spring Security also developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra also build Restful API web services using Node JS and Express JS and used a Full complement of Express Angular JS Nodejs and Mongo DB to store and present assessments Worked on Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Involved in developing the AngularJS Meteor framework for the Single Page Application development also wrote ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Worked on frontend frameworks like CSS Bootstrap for development of Web application also used Python based GUI components for the frontend functionality such as selection criteria Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git also deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Developed existing network mapping microservices using python Nmap and deployed it on Kubernetes also performed Restful routing using Nodejs which submits my form data to the Mongo DB database Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template also automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python also run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization deployed the project into Jenkins using GIT version control system Developed spark application working with Spark Context SparkSQL Data Frame Pair RDDs Wrote Restful web services to communicate with Mongo DB and performed CRUD operations on Mongo DB using Restful web API services Managed Linux and windows virtual servers on AWS EC2 using opensource chef server Worked on Apache Spark jobs using Scala in test environment for faster data processing and used Spark SQL for querying Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through mo as a CICD Process Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs to Kafka topics and handful in use of version controlling systems like GIT and SVN Worked on importing the realtime data to Hadoop using Kafka and implemented the Oozie job Experience Schedule Recurring Hadoop Jobs with Apache Oozie Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Utilized Python libraries wx Python NumPy Twisted and matplotlib and designing mobile search application system requirements and coded backend and frontend in Python Created Chef roles for different Applications and services and to spin in different environments Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Implemented SQL Alchemy which is a python library for complete access over SQL Having expertise on performance testing of the applications on Mongo DB using Studio3T and OPS Manager Developed Hibernate with Spring Integration as the data abstraction to interact with the database of Mongo DB Worked on Element tree XML API in python to parse XML documents and load the data in database Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs as well used Angular JS as the development framework to build a singlepage application Python Developer Infosys Bengaluru Karnataka October 2015 to December 2017 Worked on several Python libraries like Python NumPy and matplotlib and was involved in environment code installation as well as the SVN implementation Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed and designed system to collect data from multiple portal using Kafka and then process it using spark Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on Python OpenStack APIs and used NumPy for Numerical analysis Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Worked on installation of Docker using Docker toolbox used GIT for the version control and deployed project into AWS Created RESTful APIs calls with server parse output report of excel files wrote scripts in Python for extracting data from HTML file Used Jenkins to build and troubleshoot automated testing and for continuous integration and deployment worked on creation of custom Docker container images tagging and pushing the images Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Involved in installing and configuring Confluent Kafka in RD line also Validate the installation with HDFS connector and Hive connectors Performed Disk Space management to the users and groups in the cluster also used Storm and Kafka Services to push data to HBase and Hive tables Used Chef deployed and configured for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Used Spark Streaming APIs to perform transformations and actions on the fly for building common Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Followed Agile methodology and involved in daily SCRUM meetings sprint planning showcases and retrospective and used JIRA as a tracking tool for the sprints Creating and configuring virtual development environments with Chef and Virtual Box and Developed a fully automated continuous integration system using Git Gerrit Jenkins and custom tools developed in Python and Bash and Responsible for developing and maintaining web application using React JS and Node JS Developed analytics designed and implemented a proprietary system for algorithmic trading risk management and trading cost optimizationJava Expertise in managing AWS cloud resources EC2 S3 EBS VPC ELB RDS Elastic beanstalk Cloud Watch and IAM and configured Elastic Load Balancers with EC2 Auto scaling groups Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL and Involved in the development ORM Queries Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Managed communication between Clients Architects Developers and UAT Testing teams Developing software in Python C and web development frameworks such as Flask as well as Angular 2Mongo DB Express Nodejs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Designed and deployed multiple applications utilizing most of the AWS services such as EC2 Route 53 RDS DynamoDB EMR and SQS Worked on core AWS services such as Setting up new server EC2 instancesservices in AWS configuring security groups and setting up Elastic IPs autoscaling configuration and Cloud Formation Extensively used Nodejs tools like Gulp Grunt Web pack Developed internal CLI applications using Commander Module for application build Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Used Spark Streaming to divide streaming data into batches as an input to Spark engine for batch processing Good experience using various Python libraries including Beautiful Soup NumPy SciPy Matplotlib pythontwitter Urllib Pandas data frame network for database connectivity to speed up development Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Worked on bugtracking Jira source code management tools Git GitHub Stash and team collaboration software SAAS tool Confluence Worked on big data Technologies particularly Hadoop Hive Pig as well as Spark also installed and maintained web servers Tomcat and Apache HTTP in UNIX Worked on various Python packages such as SQL Alchemy Pickle PySide PySpark PyMongo PyTable Responsible for designing developing testing deploying and maintaining the web application Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL dB package Deployed project into Amazon web services AWS using amazon elastic bean stalk Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Python Developer CGI Group Hyderabad Telangana August 2013 to September 2015 Set up data storage using a PostgreSQL database on an AWS Relational Database Service Utilized Django ORM for simpler queries and cursors for more complex queries to call manytomany data relations Queries were further abstracted using objectoriented programming Extensive usage of User Controls and ASPNET server controls Developed and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Trained staff on effective use of Jenkins Docker GitLab and Kubernetes Coordination of Middleware project components into releases for deployment into testing regions and production Wrote SQL and implemented ORM using JPA and developed front end features using ReactReduxES6 with Web pack Analyzed global trading data wrote SQL stored procedures to extract trading data from multiple databases to report Global Trading Metrics blocks allocations notional late and not confirmed trades Designed Configured and managed publicprivate cloud infrastructures utilizing Amazon Web ServicesAWS including EC2 AutoScaling Elastic Load Balancer Elastic Beanstalk S3 Cloud Front RDS VPC Route53 Cloud Watch Cloud Formation IAM EBS RDS SNS SQS Redshift Managed continuous build and share progress with Confluence Bamboo and SVN Instituted configuration and systems management via Ansible inventoried and standardized system configurations and package installations trained other team members in the use of Git and Ansible Conducted system requirements sessions and documented requirements Deliver Big Data Products including replatforming Legacy Global Risk Management System with BigData Technologies such as Hadoop Hive and HBase Worked with NoSQL Mongo DB and heavily worked on Hive Hbase and HDFS Involved in designing application system requirements and coded backend and frontend in Django Python and Used ReactRouter to turn application into Single Page Application Managed local deployments in Kubernetes creating local cluster and deploying application containers Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Performed AWS Cloud administration managing EC2 instances S3 Cloud Formation SES and SNS services Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS JQuery AJAX and implemented CSS3 for better appearance and feel Implement modules into Node JS to integrate with designs and requirements Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Integration Test Coordinator and manager for Enterprise Testing ServicesETS organization specializing in Ecommerce projects Architecture and development of REST Services powered webbased SaaS application for largescale video processing using custom DV Labs video compression software able to reduce the size of video by over 50 without a loss in perceived quality Java Groovy Python AWS SQS Jenkins MySQL NginX REST Services Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Involved in building stable React components and standalone functions to be added to any future pages Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed remote integration with third party platforms by using RESTful web services Improved code reuse and performance by making effective use of various design patterns and refactoring code base Created proofofconcept using responsive web design Nodejs React JS HTML5 and CSS3 Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Installed and Configured the Apache Nginx Tomcat web application servers for Dev and Integration Test Environments Education Masters in Information Technology University of Texas Skills Javascript MySQL jQuery HTML 5 CSS",
    "unique_id": "bdcd423c-7719-4780-ac38-98bf50caa61e"
}