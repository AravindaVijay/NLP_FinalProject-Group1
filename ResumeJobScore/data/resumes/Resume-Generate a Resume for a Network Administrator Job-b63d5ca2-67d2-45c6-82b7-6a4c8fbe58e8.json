{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer New York Life Insurance Tampa FL 4 Experience in software development in Python libraries used Beautiful Soup Numpy scipy matplotlib Pythontwitter Pandas data frame MySQL dB for database connectivity and IDEs sublime text Spyder PYcharm Strong background in programming committed to maintaining technical skills and to be uptodate with industry knowledge Have good knowledge on NoSQL databases like Cassandra and Mongo DB and SQL databases like MySQL PostgreSQL and SQLite3 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS Bootstrap AngularJS JavaScript Python Django Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience with full software development lifecycle SDLC architecting scalable platforms objectoriented programming OOPs database design and agile methodologies Good experience of software development in Python libraries used Turtle Tkinter numpy matplotlib Pandas urllib2 MySQL dB for database connectivity and IDEs PyCharm Eclipse VS Code Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQLAlchemy Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy PyQt Scapy SQLAlchemy Experience in working on different operating systemswindows Linux UNIX and Mac also strong development experience on Linux based operating systems such as Ubuntu Red Hat and CentOS Hands on experience with various application servers and web servers including Apache Tomcat Apache http servers Web logic and WebSphere Experience in working with different databases using Oracle MySQL Having Knowledge on Vertica a columnar Relational Database Management System used for Data Warehousing and Big Data Analytics Hands on experience in working with various Version Control Systems mostly GIT CVS and SVN Involved in all the phases of Software Development Life Cycle SDLC Experience in developing applications using agile methodologies like Test Driven Development TDD Worked on various operating systems Windows XP7810 UNIX and Linux Experience in working with Amazon Web Services AWS like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front Authorized to work in the US for any employer Work Experience Python Developer New York Life Insurance Tampa FL September 2017 to Present Designed and implemented a userfriendly website interface using Python and Djangos view controller and templating language Built development environment with JIRA StashGit Developed entire frontend and backend modules using Python on Django Web Framework Designed RESTful Web services using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and Intellij Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL DB package Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Responsible Identifying and implementing mechanism to onboarding multiple customers to phantom Production environment Upgrading Phantom Orchestration servers versions to latest versions using puppet configuration management tool Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Developed automation scripting in Python core using Puppet to deploy and manage Java applications across Linux servers Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Minimal Viable product development using Python 37 schedule assisted with brainstorming approaches to data visualization and virtual analytics Tested applications using the principles of Unit testing Testdriven Development TDD Load Testing and Integration testing Implemented SOAP using web services to interact with various devices to pull realtime data on the network Wrote Python OO Design code for monitoring logging and debugging code optimization and Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Developed GIT hooks for the local repository code commit and remote repository code push functionality and on Git Hub Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Created RESTful web services for Catalog and Pricing with Jersey MySQL and MongoDB while working on Single nodeMulticluster setup using technology NoSQL and MongoDB while using MongoDB as a persistent store and Apache Kafka as a messaging layer for custom Implemented the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Build highly available content distribution sites by using CICD tools like Chef Ansible Docker Maven Jenkins Jira Kubernetes etc Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Python Developer ADOBE INC San Jose CA June 2015 to August 2017 Worked on Creating Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Automation of unit testing using Python Used UnixLinux OS based cloud for the deployment Wrote scripts in Python for extracting data from HTML file using Python library Beautiful Soup Worked with Data migration from Sqlite3 to MongoDB Build the Silent Circle Management System SCMC in Django Python and AngularJS while integrating with infrastructure services Developed python scripts to migrate information from Oracle to MongoDB Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Used AWS Cloud Watch to monitor and store logging information Deployed project into Amazon web services AWS using amazon elastic bean stalk Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented the Spring MVC architecture Worked on Restful API development using Jersey API Worked on different J2EE Design Patterns such as Factory Pattern and Singleton Created User Interface screens using HTML AJAX CSS Java script Developed Action classes Action Forms and Struts Configuration file to handle required UI actions JSPs for Views Developed build scripts to generate EAR and WAR files Tomcat Server Developed serverside presentation layer using Spring MVC Framework using Maven Used the light weight container of the Spring Frame work to provide architectural flexibility for inversion of controller IOC Performed Inheritance based Object Relational Mappings in tables to simplify the data using Hibernate ORM Used Java Scripts for data validations and designed validations modules Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Developed views and templates with Django view controller and template to create a userfriendly website interface Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Deployed and tested different modules in Docker containers and GIT Used multiple containers and managed the load balancing between all the containers using NGINX Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Technical Skills Languages Network Python Java C C Frameworks Django Pyramid WEB2PY Flask Tornado Dash WebApplication Servers IBM Web sphere JBoss 4x 3x Apache Tomcat XML Technologies XML DTD XML Schema XSLT XPath Scripting JavaScript AJAX ANT Databases Oracle MySQL MS Access NoSQL Database Access Languages SQL PLSQL NoSQL MongoDB Cassandra Development Methods UML Development Tools Eclipse ANT JUnit Interwoven Worksite Content Management Operating Systems Windows Linux Unix Education Bachelors in Computer science 2011 to June 2014 Skills MYSQL Javascript PHP Git CSS CertificationsLicenses Aws 2014 to Present Python 2013 to Present django 2014 to Present",
    "entities": [
        "Bash Implemented Multithreading",
        "JBoss 4x 3x",
        "Amazon EBS",
        "Wrote Python OO Design",
        "Phantom Orchestration",
        "webapp2",
        "IBM",
        "FLASKHTTPAuth",
        "Amazon Web Services AWS",
        "Kubernetes Build",
        "Test Driven Development TDD Worked",
        "Spring MVC Framework",
        "EAR",
        "Sublime Text PyCharm Eclipse",
        "PyUnit",
        "Software Development Life Cycle SDLC",
        "Content Management Operating Systems",
        "Amazon",
        "Spring Boot",
        "GitHub Projects",
        "Selenium Automation",
        "WebSphere",
        "Python",
        "Bash",
        "Factory Pattern",
        "Puppet",
        "Testdriven Development TDD Load Testing and Integration",
        "Views Developed",
        "Linux",
        "Javascript PHP Git",
        "Docker",
        "RDS",
        "Computer",
        "Interface",
        "MVC",
        "Python Used UnixLinux OS",
        "PythonDjango",
        "UnixLinux",
        "GIT",
        "US",
        "Vertica",
        "NGINX",
        "Created",
        "AWS",
        "Sqlite3",
        "Oracle",
        "Singleton",
        "PyCharm",
        "SQL PostgreSQL Handson",
        "Turtle Tkinter",
        "Ubuntu Red Hat",
        "GitHub",
        "lPythonspan",
        "Kubernetes",
        "Oracle MySQL Having Knowledge on",
        "FLASK",
        "Administrators",
        "Object Relational Mappings",
        "Work Experience Python Developer New York Life Insurance",
        "Developed Action classes Action Forms and Struts Configuration",
        "RESTAPI",
        "Relational Database Management System",
        "HTML AJAX CSS Java",
        "CICD",
        "Data Warehousing and Big Data Analytics Hands",
        "Pandas",
        "CRUD",
        "Maven",
        "Kubernetes Python Developer ADOBE INC",
        "Performed",
        "Windows XP7810",
        "the Spring Frame",
        "XSLT",
        "Djangos",
        "API Integration Created",
        "UI",
        "SQLAlchemy Excellent",
        "the Silent Circle Management System SCMC",
        "Version Control Systems",
        "SMTP",
        "SVN",
        "PythonFlaskDjango",
        "REST",
        "NetBeans",
        "NoSQL",
        "HTMLCSSjQuery",
        "Single Page Application",
        "Docker Technical Skills Languages Network Python",
        "HTML CSS Bootstrap",
        "Microservice",
        "SVN Involved",
        "Sublime Text PyCharm NetBeans Spyder"
    ],
    "experience": "Experience in software development in Python libraries used Beautiful Soup Numpy scipy matplotlib Pythontwitter Pandas data frame MySQL dB for database connectivity and IDEs sublime text Spyder PYcharm Strong background in programming committed to maintaining technical skills and to be uptodate with industry knowledge Have good knowledge on NoSQL databases like Cassandra and Mongo DB and SQL databases like MySQL PostgreSQL and SQLite3 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS Bootstrap AngularJS JavaScript Python Django Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience with full software development lifecycle SDLC architecting scalable platforms objectoriented programming OOPs database design and agile methodologies Good experience of software development in Python libraries used Turtle Tkinter numpy matplotlib Pandas urllib2 MySQL dB for database connectivity and IDEs PyCharm Eclipse VS Code Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQLAlchemy Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy PyQt Scapy SQLAlchemy Experience in working on different operating systemswindows Linux UNIX and Mac also strong development experience on Linux based operating systems such as Ubuntu Red Hat and CentOS Hands on experience with various application servers and web servers including Apache Tomcat Apache http servers Web logic and WebSphere Experience in working with different databases using Oracle MySQL Having Knowledge on Vertica a columnar Relational Database Management System used for Data Warehousing and Big Data Analytics Hands on experience in working with various Version Control Systems mostly GIT CVS and SVN Involved in all the phases of Software Development Life Cycle SDLC Experience in developing applications using agile methodologies like Test Driven Development TDD Worked on various operating systems Windows XP7810 UNIX and Linux Experience in working with Amazon Web Services AWS like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front Authorized to work in the US for any employer Work Experience Python Developer New York Life Insurance Tampa FL September 2017 to Present Designed and implemented a userfriendly website interface using Python and Djangos view controller and templating language Built development environment with JIRA StashGit Developed entire frontend and backend modules using Python on Django Web Framework Designed RESTful Web services using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and Intellij Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL DB package Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Responsible Identifying and implementing mechanism to onboarding multiple customers to phantom Production environment Upgrading Phantom Orchestration servers versions to latest versions using puppet configuration management tool Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Developed automation scripting in Python core using Puppet to deploy and manage Java applications across Linux servers Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Minimal Viable product development using Python 37 schedule assisted with brainstorming approaches to data visualization and virtual analytics Tested applications using the principles of Unit testing Testdriven Development TDD Load Testing and Integration testing Implemented SOAP using web services to interact with various devices to pull realtime data on the network Wrote Python OO Design code for monitoring logging and debugging code optimization and Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Developed GIT hooks for the local repository code commit and remote repository code push functionality and on Git Hub Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Created RESTful web services for Catalog and Pricing with Jersey MySQL and MongoDB while working on Single nodeMulticluster setup using technology NoSQL and MongoDB while using MongoDB as a persistent store and Apache Kafka as a messaging layer for custom Implemented the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Build highly available content distribution sites by using CICD tools like Chef Ansible Docker Maven Jenkins Jira Kubernetes etc Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Python Developer ADOBE INC San Jose CA June 2015 to August 2017 Worked on Creating Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Automation of unit testing using Python Used UnixLinux OS based cloud for the deployment Wrote scripts in Python for extracting data from HTML file using Python library Beautiful Soup Worked with Data migration from Sqlite3 to MongoDB Build the Silent Circle Management System SCMC in Django Python and AngularJS while integrating with infrastructure services Developed python scripts to migrate information from Oracle to MongoDB Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Used AWS Cloud Watch to monitor and store logging information Deployed project into Amazon web services AWS using amazon elastic bean stalk Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented the Spring MVC architecture Worked on Restful API development using Jersey API Worked on different J2EE Design Patterns such as Factory Pattern and Singleton Created User Interface screens using HTML AJAX CSS Java script Developed Action classes Action Forms and Struts Configuration file to handle required UI actions JSPs for Views Developed build scripts to generate EAR and WAR files Tomcat Server Developed serverside presentation layer using Spring MVC Framework using Maven Used the light weight container of the Spring Frame work to provide architectural flexibility for inversion of controller IOC Performed Inheritance based Object Relational Mappings in tables to simplify the data using Hibernate ORM Used Java Scripts for data validations and designed validations modules Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Developed views and templates with Django view controller and template to create a userfriendly website interface Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Deployed and tested different modules in Docker containers and GIT Used multiple containers and managed the load balancing between all the containers using NGINX Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Technical Skills Languages Network Python Java C C Frameworks Django Pyramid WEB2PY Flask Tornado Dash WebApplication Servers IBM Web sphere JBoss 4x 3x Apache Tomcat XML Technologies XML DTD XML Schema XSLT XPath Scripting JavaScript AJAX ANT Databases Oracle MySQL MS Access NoSQL Database Access Languages SQL PLSQL NoSQL MongoDB Cassandra Development Methods UML Development Tools Eclipse ANT JUnit Interwoven Worksite Content Management Operating Systems Windows Linux Unix Education Bachelors in Computer science 2011 to June 2014 Skills MYSQL Javascript PHP Git CSS CertificationsLicenses Aws 2014 to Present Python 2013 to Present django 2014 to Present",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "New",
        "York",
        "Life",
        "Insurance",
        "Tampa",
        "FL",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "Numpy",
        "matplotlib",
        "Pythontwitter",
        "Pandas",
        "data",
        "frame",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "background",
        "programming",
        "skills",
        "industry",
        "knowledge",
        "knowledge",
        "NoSQL",
        "databases",
        "Cassandra",
        "Mongo",
        "DB",
        "SQL",
        "MySQL",
        "PostgreSQL",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Python",
        "Django",
        "Backend",
        "applications",
        "PythonFlaskDjango",
        "SQL",
        "PostgreSQL",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "Experience",
        "software",
        "development",
        "lifecycle",
        "SDLC",
        "platforms",
        "programming",
        "OOPs",
        "database",
        "design",
        "methodologies",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Turtle",
        "Tkinter",
        "matplotlib",
        "Pandas",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "PyCharm",
        "Eclipse",
        "VS",
        "Code",
        "experience",
        "web",
        "applications",
        "MVT",
        "architecture",
        "Django",
        "Flask",
        "web",
        "application",
        "frameworks",
        "understanding",
        "Django",
        "ORM",
        "SQLAlchemy",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "Eclipse",
        "NetBeans",
        "Experience",
        "python",
        "libraries",
        "soup",
        "NumPy",
        "matplotlib",
        "SciPy",
        "PyQt",
        "Scapy",
        "SQLAlchemy",
        "Experience",
        "operating",
        "systemswindows",
        "Linux",
        "UNIX",
        "Mac",
        "development",
        "experience",
        "Linux",
        "operating",
        "systems",
        "Ubuntu",
        "Red",
        "Hat",
        "CentOS",
        "Hands",
        "experience",
        "application",
        "servers",
        "web",
        "servers",
        "Apache",
        "Tomcat",
        "Apache",
        "http",
        "Web",
        "logic",
        "WebSphere",
        "Experience",
        "databases",
        "Oracle",
        "MySQL",
        "Knowledge",
        "Vertica",
        "Relational",
        "Database",
        "Management",
        "System",
        "Data",
        "Warehousing",
        "Big",
        "Data",
        "Analytics",
        "Hands",
        "experience",
        "Version",
        "Control",
        "Systems",
        "GIT",
        "CVS",
        "SVN",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Experience",
        "applications",
        "methodologies",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "operating",
        "systems",
        "Windows",
        "UNIX",
        "Linux",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "S3",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "identity",
        "access",
        "management",
        "AWS",
        "Cloud",
        "Amazon",
        "EBS",
        "Amazon",
        "Cloud",
        "front",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "New",
        "York",
        "Life",
        "Insurance",
        "Tampa",
        "FL",
        "September",
        "Present",
        "website",
        "interface",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "development",
        "environment",
        "JIRA",
        "StashGit",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Web",
        "services",
        "FLASK",
        "emphasis",
        "Security",
        "service",
        "FLASKHTTPAuth",
        "HTTPS",
        "applications",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "NetBeans",
        "Spyder",
        "Intellij",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "NUMPY",
        "Wrote",
        "MySQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "DB",
        "package",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "interface",
        "MVC",
        "architecture",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Identifying",
        "mechanism",
        "customers",
        "Production",
        "environment",
        "Phantom",
        "Orchestration",
        "servers",
        "versions",
        "versions",
        "puppet",
        "configuration",
        "management",
        "tool",
        "POC",
        "application",
        "service",
        "architecture",
        "architecture",
        "Docker",
        "container",
        "technology",
        "Kubernetes",
        "REST",
        "API",
        "automation",
        "Python",
        "core",
        "Puppet",
        "Java",
        "applications",
        "Linux",
        "servers",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "Minimal",
        "product",
        "development",
        "Python",
        "schedule",
        "approaches",
        "data",
        "visualization",
        "analytics",
        "applications",
        "principles",
        "Unit",
        "testing",
        "Testdriven",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Integration",
        "testing",
        "SOAP",
        "web",
        "services",
        "devices",
        "data",
        "network",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "code",
        "optimization",
        "Installation",
        "Python",
        "Linux",
        "test",
        "beds",
        "JSON",
        "REST",
        "Web",
        "services",
        "GIT",
        "hooks",
        "repository",
        "code",
        "commit",
        "repository",
        "code",
        "push",
        "functionality",
        "Git",
        "Hub",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "auto",
        "scaling",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Multithreading",
        "module",
        "networking",
        "operations",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Python",
        "test",
        "cases",
        "PyUnit",
        "Selenium",
        "Automation",
        "testing",
        "manipulation",
        "test",
        "scripts",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Jersey",
        "MySQL",
        "MongoDB",
        "nodeMulticluster",
        "setup",
        "technology",
        "NoSQL",
        "MongoDB",
        "MongoDB",
        "store",
        "Apache",
        "Kafka",
        "layer",
        "custom",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "Build",
        "distribution",
        "sites",
        "CICD",
        "tools",
        "Chef",
        "Ansible",
        "Docker",
        "Maven",
        "Jenkins",
        "Jira",
        "Kubernetes",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "Python",
        "Developer",
        "ADOBE",
        "INC",
        "San",
        "Jose",
        "CA",
        "June",
        "August",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Automation",
        "unit",
        "testing",
        "Python",
        "Used",
        "UnixLinux",
        "OS",
        "cloud",
        "deployment",
        "Wrote",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "Worked",
        "Data",
        "migration",
        "Sqlite3",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Django",
        "Python",
        "AngularJS",
        "infrastructure",
        "services",
        "python",
        "scripts",
        "information",
        "Oracle",
        "core",
        "repository",
        "SUBVERSION",
        "GIT",
        "Managed",
        "GitHub",
        "Projects",
        "SVN",
        "GitHub",
        "history",
        "GIT",
        "Source",
        "control",
        "repositories",
        "code",
        "reviews",
        "pullmerge",
        "requests",
        "reality",
        "solution",
        "form",
        "video",
        "Premiere",
        "Pro",
        "Pylatte",
        "Python",
        "Git",
        "Adobe",
        "Effects",
        "AWS",
        "Cloud",
        "information",
        "project",
        "Amazon",
        "web",
        "services",
        "AWS",
        "amazon",
        "bean",
        "stalk",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "RESTAPI",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Spring",
        "MVC",
        "architecture",
        "API",
        "development",
        "Jersey",
        "API",
        "J2EE",
        "Design",
        "Patterns",
        "Factory",
        "Pattern",
        "Singleton",
        "Created",
        "User",
        "Interface",
        "screens",
        "HTML",
        "AJAX",
        "CSS",
        "Java",
        "script",
        "Developed",
        "Action",
        "classes",
        "Action",
        "Forms",
        "Struts",
        "Configuration",
        "file",
        "UI",
        "actions",
        "JSPs",
        "Views",
        "scripts",
        "EAR",
        "WAR",
        "Tomcat",
        "Server",
        "serverside",
        "presentation",
        "layer",
        "Spring",
        "MVC",
        "Framework",
        "Maven",
        "weight",
        "container",
        "Spring",
        "Frame",
        "work",
        "flexibility",
        "inversion",
        "controller",
        "IOC",
        "Performed",
        "Inheritance",
        "Object",
        "Relational",
        "Mappings",
        "tables",
        "data",
        "Hibernate",
        "ORM",
        "Java",
        "Scripts",
        "data",
        "validations",
        "validations",
        "projects",
        "web",
        "page",
        "Single",
        "Page",
        "Application",
        "SPA",
        "AngularJS",
        "JavaScript",
        "API",
        "delivery",
        "driver",
        "application",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "website",
        "interface",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Deployed",
        "modules",
        "Docker",
        "containers",
        "GIT",
        "containers",
        "load",
        "containers",
        "NGINX",
        "programming",
        "automations",
        "Jenkins",
        "Ansible",
        "UnixLinux",
        "OS",
        "cloud",
        "Docker",
        "Technical",
        "Skills",
        "Languages",
        "Network",
        "Python",
        "Java",
        "C",
        "C",
        "Frameworks",
        "Django",
        "Pyramid",
        "WEB2PY",
        "Flask",
        "Tornado",
        "Dash",
        "WebApplication",
        "Servers",
        "IBM",
        "Web",
        "sphere",
        "JBoss",
        "4x",
        "Apache",
        "Tomcat",
        "XML",
        "Technologies",
        "XML",
        "DTD",
        "XML",
        "Schema",
        "XSLT",
        "XPath",
        "Scripting",
        "JavaScript",
        "AJAX",
        "ANT",
        "Oracle",
        "MySQL",
        "MS",
        "Access",
        "NoSQL",
        "Database",
        "Access",
        "Languages",
        "SQL",
        "PLSQL",
        "NoSQL",
        "Cassandra",
        "Development",
        "Methods",
        "UML",
        "Development",
        "Tools",
        "Eclipse",
        "ANT",
        "JUnit",
        "Interwoven",
        "Worksite",
        "Content",
        "Management",
        "Operating",
        "Systems",
        "Windows",
        "Linux",
        "Unix",
        "Education",
        "Bachelors",
        "Computer",
        "science",
        "June",
        "Skills",
        "MYSQL",
        "Javascript",
        "PHP",
        "Git",
        "CSS",
        "CertificationsLicenses",
        "Aws",
        "Present",
        "Python",
        "Present",
        "django",
        "Present"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:26:35.058270",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer New York Life Insurance Tampa FL 4 Experience in software development in Python libraries used Beautiful Soup Numpy scipy matplotlib Pythontwitter Pandas data frame MySQL dB for database connectivity and IDEs sublime text Spyder PYcharm Strong background in programming committed to maintaining technical skills and to be uptodate with industry knowledge Have good knowledge on NoSQL databases like Cassandra and Mongo DB and SQL databases like MySQL PostgreSQL and SQLite3 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS Bootstrap AngularJS JavaScript Python Django Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience with full software development lifecycle SDLC architecting scalable platforms objectoriented programming OOPs database design and agile methodologies Good experience of software development in Python libraries used Turtle Tkinter numpy matplotlib Pandas urllib2 MySQL dB for database connectivity and IDEs PyCharm Eclipse VS Code Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQLAlchemy Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy PyQt Scapy SQLAlchemy Experience in working on different operating systemswindows Linux UNIX and Mac also strong development experience on Linux based operating systems such as Ubuntu Red Hat and CentOS Hands on experience with various application servers and web servers including Apache Tomcat Apache http servers Web logic and WebSphere Experience in working with different databases using Oracle MySQL Having Knowledge on Vertica a columnar Relational Database Management System used for Data Warehousing and Big Data Analytics Hands on experience in working with various Version Control Systems mostly GIT CVS and SVN Involved in all the phases of Software Development Life Cycle SDLC Experience in developing applications using agile methodologies like Test Driven Development TDD Worked on various operating systems Windows XP7810 UNIX and Linux Experience in working with Amazon Web Services AWS like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front Authorized to work in the US for any employer Work Experience Python Developer New York Life Insurance Tampa FL September 2017 to Present Designed and implemented a userfriendly website interface using Python and Djangos view controller and templating language Built development environment with JIRA StashGit Developed entire frontend and backend modules using Python on Django Web Framework Designed RESTful Web services using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and Intellij Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Wrote and executed various MySQL database queries from python using PythonMySQL connector and MySQL DB package Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Responsible Identifying and implementing mechanism to onboarding multiple customers to phantom Production environment Upgrading Phantom Orchestration servers versions to latest versions using puppet configuration management tool Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Developed automation scripting in Python core using Puppet to deploy and manage Java applications across Linux servers Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Minimal Viable product development using Python 37 schedule assisted with brainstorming approaches to data visualization and virtual analytics Tested applications using the principles of Unit testing Testdriven Development TDD Load Testing and Integration testing Implemented SOAP using web services to interact with various devices to pull realtime data on the network Wrote Python OO Design code for monitoring logging and debugging code optimization and Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Developed GIT hooks for the local repository code commit and remote repository code push functionality and on Git Hub Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Created RESTful web services for Catalog and Pricing with Jersey MySQL and MongoDB while working on Single nodeMulticluster setup using technology NoSQL and MongoDB while using MongoDB as a persistent store and Apache Kafka as a messaging layer for custom Implemented the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Build highly available content distribution sites by using CICD tools like Chef Ansible Docker Maven Jenkins Jira Kubernetes etc Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Python Developer ADOBE INC San Jose CA June 2015 to August 2017 Worked on Creating Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Automation of unit testing using Python Used UnixLinux OS based cloud for the deployment Wrote scripts in Python for extracting data from HTML file using Python library Beautiful Soup Worked with Data migration from Sqlite3 to MongoDB Build the Silent Circle Management System SCMC in Django Python and AngularJS while integrating with infrastructure services Developed python scripts to migrate information from Oracle to MongoDB Migrated out core repository from SUBVERSION to GIT Managed GitHub Projects and migrated from SVN to GitHub with history Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Used AWS Cloud Watch to monitor and store logging information Deployed project into Amazon web services AWS using amazon elastic bean stalk Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and RESTAPI calls Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Implemented the Spring MVC architecture Worked on Restful API development using Jersey API Worked on different J2EE Design Patterns such as Factory Pattern and Singleton Created User Interface screens using HTML AJAX CSS Java script Developed Action classes Action Forms and Struts Configuration file to handle required UI actions JSPs for Views Developed build scripts to generate EAR and WAR files Tomcat Server Developed serverside presentation layer using Spring MVC Framework using Maven Used the light weight container of the Spring Frame work to provide architectural flexibility for inversion of controller IOC Performed Inheritance based Object Relational Mappings in tables to simplify the data using Hibernate ORM Used Java Scripts for data validations and designed validations modules Developed projects web page as Single Page Application SPA by using AngularJS and JavaScript API and build delivery driver application Developed views and templates with Django view controller and template to create a userfriendly website interface Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Deployed and tested different modules in Docker containers and GIT Used multiple containers and managed the load balancing between all the containers using NGINX Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Technical Skills Languages Network Python Java C C Frameworks Django Pyramid WEB2PY Flask Tornado Dash WebApplication Servers IBM Web sphere JBoss 4x 3x Apache Tomcat XML Technologies XML DTD XML Schema XSLT XPath Scripting JavaScript AJAX ANT Databases Oracle MySQL MS Access NoSQL Database Access Languages SQL PLSQL NoSQL MongoDB Cassandra Development Methods UML Development Tools Eclipse ANT JUnit Interwoven Worksite Content Management Operating Systems Windows Linux Unix Education Bachelors in Computer science 2011 to June 2014 Skills MYSQL Javascript PHP Git CSS CertificationsLicenses Aws 2014 to Present Python 2013 to Present django 2014 to Present",
    "unique_id": "b63d5ca2-67d2-45c6-82b7-6a4c8fbe58e8"
}