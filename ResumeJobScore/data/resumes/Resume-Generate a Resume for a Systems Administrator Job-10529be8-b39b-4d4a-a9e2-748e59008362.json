{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Frost Bank Work Experience Sr Python Developer Frost Bank Austin TX January 2016 to Present Responsibilities Involved in design and development of UI component using frameworks AngularJS JavaScript HTML5 CSS and Bootstrap Involved in the development of front end of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery Worked in designdevelopment of web applications using JavaScript XML DHTML Ajax Tomcat and Apache Application server over various platforms UNIX Linux and Windows Used HTML 4 and CSS3 for website development and build on Bootstrap 30 Data binding using Angular JS Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Involved in environment code installation as well as the SVN implementation Designed Hibernate configuration file in ORM model which automate the mapping between the SQL databases and objects in python Created database tables and implemented SQL Stored Procedures triggers and complex queries in MYSQL Application were developed using Angularjs for frontend RESTful web services Apache Cassandra for Backend and deployed in Cloud Foundry Developed single page application by using Angular JS Developed tools using Python Shell scripting XML to automate some of the menial tasks Upgraded existing UI with HTML5 CSS3 JQuery and Bootstrap with AngularJS interaction Used Python and Django creating graphics XML processing data exchange and business logic implementation Worked on analysing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Business logic implementation data exchange XML processing XML Schema and graphics creation has been done using Python and Django Used several python libraries like wxPython numPY Jython and matPlotLib Used Spring MVC Transaction Management SpringHibernate Batch Transactions and Hibernate cache concepts Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Contributing in the design and creation of RESTful APIs using PythonDjangoDjango Rest Framework Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Wrote complex SQL queries using hibernates native SQL Used SAX for XML parsing JSON and AJAX to send request to secured web service Used CSS media queries and bootstrap to support for Responsive development Implemented performance oriented CSS selector scalable and modular CSS approach for frontend architecture Developed Views and Templates with Python and to create a userfriendly website interface Djangos view controller and template language is used Build all database mapping classes using Django models with the help of ORM like SQLAlchemy Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Worked in Cloud based NMS application which monitors the CPUMemory parameters of Virtual machines Configured Spark streaming to receive real time data from the Kafka and store the stream data to HDFS using Scale Implementing the existing Spring MVC based application to work with both vSphere and Openstack simultaneously Configured several nodes Amazon EC2 spot Instance Hadoop cluster to transfer the data from Amazon S3 to HDFS and HDFS to AmazonS3 and to direct input and output to the Hadoop Language Implementation Practiced the use of this language by solving a variety of usetest cases with the concept of objectoriented programming and programming logic Successfully migrated the Django database from SQLite to MySQL with complete data integrity Wrote application front end developed and designed all the UI screens with HTML JSP Ajax angular JS and CSS Extensively worked on Hibernate Cache Query Criteria and Transactions in secondary project Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and J Query Experience with Optimistic Locking Mappings using Hibernate Successfully implemented Apache Spark and Spark Streaming applications for large scale data Designed Hibernate configuration file in ORM model which automate the mapping between the SQL databases and objects Involved in Installing Hadoop Map Reduce HDFS AWS and developed multiple MapReduce jobs in Hive for data cleaning and preprocessing Developed and designed automation framework using Python and Shell scripting Created and maintained the framework and layout of each portal with Cascading Style Sheets CSS Used Unit Test Python library for testing many programs on python and other codes Developed test cases and performed unit testing using JUnit Worked on MultiThreading factory to distribute learning process backtesting and the into various worker processes Reviewed and worked on the implementation of change requests raised by the clientInvolved in complete AgileSDLC Requirement Analysis Development System and Integration Testing Performed different testing methods like unit testing Integration testing web application testing and selenium testing Designed Data Quality Framework to perform schema validation and data profiling on Spark Pyspark Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Python Developer STARBUCKS January 2013 to November 2015 Responsibilities Used Struts framework along with JSP HTML CSS and Java Script to construct the dynamic web pages presentation layer for the application Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in collecting requirements from client and explained the planning details to the client on daily basis and share the requirement details to the team Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Familiar with several ORM libraries in Python such as Djangos ORM and SQLAlchemy Designed the Web application layout and forms using HTML CSS and JavaScript Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed custom directives elements Attributes and classes using angularjs Developed Spark code using Scala and SparkSQL for faster testing and data processing Developed single page applications using Angularjs Implemented twoway data binding using AngularJS Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in the creation of interface to manage user menu and Bulk update of Attributes using AngularJS nodeJs and JQuery Handled RESTful services with the help of python library URLLIBS Created Database tables functions stored procedures and wrote prepared statements using PLSQL Developed dynamic responsive Web Application by integrating AngularJS with Twitter Bootstrap which is further integrated with Web Services provided by the development team Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Generate UI mockups from paperandpencil concepts to highfidelity prototypes that convey the interaction model using HTML CSS and Angular JS Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed application using Amazon Web Service AWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Consumed NodeJS and REST API in angular services and created internal webpages Worked on server side applications with Django using Python programming Developed Responsive Design UI Single Page Applications and HTML Wireframes using HTML5 Grid StructuresLayouts CSS3 Media Queries Angular JS JQuery and Bootstrap JS Familiarity with concepts of MVC JDBC and RESTful Developed Merge jobs in Python to extract and load data into MySQL database Prepared scripts executing test cases and debugging also prepared automation scripts in Selenium WebDriver Implemented failed transactions verificationresubmission batch process using python scripts Backend data access modules using PLSQL stored procedures and Oracle were designed and created Implemented unit testing test driven development and integration test automation in order to test a group of related functionalities Worked on Python OpenStack APIs and used NumPy for Numerical analysis Develop customized framework for Open Stack infrastructure in the lab environment Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created standalone Java programs to read data from several XLS files and insert data into the Database as needed by the Testing team Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Used Python in a Linux environment to work with databases and also involved in generating python scripts Created data pipelines using Apache Spark a bigdata processing and computing framework Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Developed data formatted web applications and deploy the script using HTML5 XHTML CSS and Client side scripting usiVerizon Infinite Computer Solutions using JavaScript Implemented RESTful WebServices For sending and receiving the data between multiple systems Developed use case diagrams class diagrams database tables and mapping between procedure results set and objectoriented java objects Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Reviewed and worked on the implementation of change requests raised by the clientInvolved in complete AgileSDLC Requirement Analysis Development System and Integration Testing Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developing different micro scripts for planning modules in selenium with java j2ee in Testng framework Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working on manual testing the developed application in gui methods Analysis the proper functionality and raise the defects tickets to further to work on Created RESTful APIs calls with server parse output report of excel files Python Developer American River Bank Sacramento CA August 2011 to December 2012 Responsibilities Developed front end of the application using Python HTML CSS AJAX JSON and JQuery Involved in building database Model and Views utilizing Python in order to build an interactive web based solution Designed Use Case Diagrams Class Diagrams and Sequence Diagrams and Object Diagrams using UML to model the detail design of the application Used Django Python webframework to develop application Used MVC framework to build modular maintainable applications Created database tables and implemented SQL Stored Procedures triggers and complex queries in MYSQL Preparing test cases and strategies for unit testing and integration testing Involved Developed dynamic web pages using python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Developed automation scripts to create test data and test environment Resolved issues and improvised the process to ensure a stable and accurate solution Written Client Server side validations for the project using JavaScript Used AWS for application deployment and configuration Created usecase scenarios and storyboards in MS Word and MS PowerPoint for better visualization of the application Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C Work with team of developers on python applications for RISK management Developed solutions using JavaScript Web Services SOAP and other web technologies to integrate ServiceNow with internal external systems and tools Automated data movements using python scripts involved in splitting validating and processing of files Simplified delegation assignment and approval by including compliance teams in broader range of work assignments Write Automationtest python scripts to test Used HTML CSS for frontend applications Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Design common framework for REST API consumption using Spring Rest Templates Design application using Spring MVC Request Mappings etc Design and develop auto generation of JAVA Objects from JSON Schema using Faster Xml libraries Involved in design and development of RESTful JAXRS web services Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing a Restful APIS service using Python Flask framework Implemented Test Driven Development TDD strategy for the project Wrote and executed various MYSQL database queries from python using PythonMySQL Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Worked in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Build SQL queries for performing various CRUD operations like create update read and delete Taken part in software Education development life cycle SDLC of the tracking systems Requirements Gathering Analysis Detail Design Development System Testing and User Acceptance Testing Perform the duties as a Build Rep by reviewing and creating code patches for peers before pushing any code to production Training peers on the application usage and support it during its entire life span in a project Involved in development of entire frontend and backend modules using Python on Django Web Framework Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django and PostgreSQL Held meetings with client and worked with team for the entire project with limited help from the client Skills DJANGO 6 years INTEGRATION 6 years INTEGRATOR 6 years JAVASCRIPT 6 years jQuery 6 years Additional Information SKILL SET Development Stack Experience Frameworks Django Openstack API Databases MongoDB MySQL SQL Server PostgreSQL Oracle JavaScript Frameworks Nodejs jQuery Backbonejs ExtJS Emberjs AngularJS Hosting Rackspace Linux Red Hat Ubuntu CentOS API Integration JSON REST XML SOAP",
    "entities": [
        "CSS HTML JavaScript",
        "Python Flask",
        "AJAX",
        "Test Driven Development TDD",
        "ORM",
        "Designed Hibernate",
        "HDFS",
        "AIX",
        "Bulk",
        "Agile Software Methodology",
        "JQuery Handled RESTful services",
        "usiVerizon Infinite Computer Solutions",
        "webapp2",
        "the Hadoop Language Implementation Practiced",
        "Bootstrap 30 Data",
        "CSS HTML",
        "Present Responsibilities Involved",
        "OpenStack",
        "Cloud",
        "JAVA Objects",
        "Amazon Web Services AWS",
        "Sacramento",
        "Panda",
        "Involved Developed",
        "Hadoop",
        "XML",
        "Hibernate Cache Query Criteria",
        "SOAP",
        "Bootstrap Involved",
        "JUnit",
        "Conversions Developed",
        "Shell",
        "Automated",
        "Apache Application",
        "Apache Spark",
        "TX",
        "Amazon",
        "Build Rep",
        "Python",
        "Created RESTful",
        "Designed Data Quality Framework",
        "Developed",
        "SparkSQL",
        "Skills",
        "JavaScript Implemented RESTful WebServices For",
        "MultiThreading",
        "UML",
        "Model and Views",
        "Additional Information SKILL SET Development Stack",
        "Client",
        "Developed Views",
        "Python Developer American River Bank",
        "Spark Pyspark Developed UI",
        "Instance Hadoop",
        "J Query Experience",
        "Twitter Bootstrap",
        "Linux",
        "Spark Streaming",
        "Tools C Work",
        "MVC",
        "XLS",
        "JQuery Involved",
        "JS",
        "HTML CSS",
        "HTML CSS JavaScript",
        "Database",
        "Created",
        "CA",
        "Oracle",
        "SAX",
        "java",
        "SQL",
        "lPythonspan",
        "NMS",
        "Testng",
        "Hive",
        "Wrote",
        "AgileSDLC Requirement Analysis Development System",
        "Developed Responsive Design UI Single Page Applications",
        "Virtual",
        "SQLite",
        "CRUD",
        "Backend",
        "vSphere",
        "Build",
        "Performed",
        "Software Development Lifecycle SDLC Involved",
        "Chef and Puppet Involved",
        "Sequence Diagrams",
        "Djangos",
        "Optimistic Locking Mappings using Hibernate Successfully",
        "UI",
        "Amazon Web Service AWS",
        "SVN",
        "ServiceNow",
        "CSS",
        "JavaScript Web Services SOAP",
        "MapReduce",
        "JSP HTML CSS",
        "Python Unit Test",
        "Integration",
        "UNIX Linux",
        "Nodejs with Express",
        "Developed GUI"
    ],
    "experience": "Experience Sr Python Developer Frost Bank Austin TX January 2016 to Present Responsibilities Involved in design and development of UI component using frameworks AngularJS JavaScript HTML5 CSS and Bootstrap Involved in the development of front end of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery Worked in designdevelopment of web applications using JavaScript XML DHTML Ajax Tomcat and Apache Application server over various platforms UNIX Linux and Windows Used HTML 4 and CSS3 for website development and build on Bootstrap 30 Data binding using Angular JS Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Involved in environment code installation as well as the SVN implementation Designed Hibernate configuration file in ORM model which automate the mapping between the SQL databases and objects in python Created database tables and implemented SQL Stored Procedures triggers and complex queries in MYSQL Application were developed using Angularjs for frontend RESTful web services Apache Cassandra for Backend and deployed in Cloud Foundry Developed single page application by using Angular JS Developed tools using Python Shell scripting XML to automate some of the menial tasks Upgraded existing UI with HTML5 CSS3 JQuery and Bootstrap with AngularJS interaction Used Python and Django creating graphics XML processing data exchange and business logic implementation Worked on analysing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Business logic implementation data exchange XML processing XML Schema and graphics creation has been done using Python and Django Used several python libraries like wxPython numPY Jython and matPlotLib Used Spring MVC Transaction Management SpringHibernate Batch Transactions and Hibernate cache concepts Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Contributing in the design and creation of RESTful APIs using PythonDjangoDjango Rest Framework Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Wrote complex SQL queries using hibernates native SQL Used SAX for XML parsing JSON and AJAX to send request to secured web service Used CSS media queries and bootstrap to support for Responsive development Implemented performance oriented CSS selector scalable and modular CSS approach for frontend architecture Developed Views and Templates with Python and to create a userfriendly website interface Djangos view controller and template language is used Build all database mapping classes using Django models with the help of ORM like SQLAlchemy Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Worked in Cloud based NMS application which monitors the CPUMemory parameters of Virtual machines Configured Spark streaming to receive real time data from the Kafka and store the stream data to HDFS using Scale Implementing the existing Spring MVC based application to work with both vSphere and Openstack simultaneously Configured several nodes Amazon EC2 spot Instance Hadoop cluster to transfer the data from Amazon S3 to HDFS and HDFS to AmazonS3 and to direct input and output to the Hadoop Language Implementation Practiced the use of this language by solving a variety of usetest cases with the concept of objectoriented programming and programming logic Successfully migrated the Django database from SQLite to MySQL with complete data integrity Wrote application front end developed and designed all the UI screens with HTML JSP Ajax angular JS and CSS Extensively worked on Hibernate Cache Query Criteria and Transactions in secondary project Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and J Query Experience with Optimistic Locking Mappings using Hibernate Successfully implemented Apache Spark and Spark Streaming applications for large scale data Designed Hibernate configuration file in ORM model which automate the mapping between the SQL databases and objects Involved in Installing Hadoop Map Reduce HDFS AWS and developed multiple MapReduce jobs in Hive for data cleaning and preprocessing Developed and designed automation framework using Python and Shell scripting Created and maintained the framework and layout of each portal with Cascading Style Sheets CSS Used Unit Test Python library for testing many programs on python and other codes Developed test cases and performed unit testing using JUnit Worked on MultiThreading factory to distribute learning process backtesting and the into various worker processes Reviewed and worked on the implementation of change requests raised by the clientInvolved in complete AgileSDLC Requirement Analysis Development System and Integration Testing Performed different testing methods like unit testing Integration testing web application testing and selenium testing Designed Data Quality Framework to perform schema validation and data profiling on Spark Pyspark Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Python Developer STARBUCKS January 2013 to November 2015 Responsibilities Used Struts framework along with JSP HTML CSS and Java Script to construct the dynamic web pages presentation layer for the application Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in collecting requirements from client and explained the planning details to the client on daily basis and share the requirement details to the team Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Familiar with several ORM libraries in Python such as Djangos ORM and SQLAlchemy Designed the Web application layout and forms using HTML CSS and JavaScript Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed custom directives elements Attributes and classes using angularjs Developed Spark code using Scala and SparkSQL for faster testing and data processing Developed single page applications using Angularjs Implemented twoway data binding using AngularJS Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in the creation of interface to manage user menu and Bulk update of Attributes using AngularJS nodeJs and JQuery Handled RESTful services with the help of python library URLLIBS Created Database tables functions stored procedures and wrote prepared statements using PLSQL Developed dynamic responsive Web Application by integrating AngularJS with Twitter Bootstrap which is further integrated with Web Services provided by the development team Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Generate UI mockups from paperandpencil concepts to highfidelity prototypes that convey the interaction model using HTML CSS and Angular JS Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed application using Amazon Web Service AWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Consumed NodeJS and REST API in angular services and created internal webpages Worked on server side applications with Django using Python programming Developed Responsive Design UI Single Page Applications and HTML Wireframes using HTML5 Grid StructuresLayouts CSS3 Media Queries Angular JS JQuery and Bootstrap JS Familiarity with concepts of MVC JDBC and RESTful Developed Merge jobs in Python to extract and load data into MySQL database Prepared scripts executing test cases and debugging also prepared automation scripts in Selenium WebDriver Implemented failed transactions verificationresubmission batch process using python scripts Backend data access modules using PLSQL stored procedures and Oracle were designed and created Implemented unit testing test driven development and integration test automation in order to test a group of related functionalities Worked on Python OpenStack APIs and used NumPy for Numerical analysis Develop customized framework for Open Stack infrastructure in the lab environment Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created standalone Java programs to read data from several XLS files and insert data into the Database as needed by the Testing team Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Used Python in a Linux environment to work with databases and also involved in generating python scripts Created data pipelines using Apache Spark a bigdata processing and computing framework Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Developed data formatted web applications and deploy the script using HTML5 XHTML CSS and Client side scripting usiVerizon Infinite Computer Solutions using JavaScript Implemented RESTful WebServices For sending and receiving the data between multiple systems Developed use case diagrams class diagrams database tables and mapping between procedure results set and objectoriented java objects Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Reviewed and worked on the implementation of change requests raised by the clientInvolved in complete AgileSDLC Requirement Analysis Development System and Integration Testing Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developing different micro scripts for planning modules in selenium with java j2ee in Testng framework Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working on manual testing the developed application in gui methods Analysis the proper functionality and raise the defects tickets to further to work on Created RESTful APIs calls with server parse output report of excel files Python Developer American River Bank Sacramento CA August 2011 to December 2012 Responsibilities Developed front end of the application using Python HTML CSS AJAX JSON and JQuery Involved in building database Model and Views utilizing Python in order to build an interactive web based solution Designed Use Case Diagrams Class Diagrams and Sequence Diagrams and Object Diagrams using UML to model the detail design of the application Used Django Python webframework to develop application Used MVC framework to build modular maintainable applications Created database tables and implemented SQL Stored Procedures triggers and complex queries in MYSQL Preparing test cases and strategies for unit testing and integration testing Involved Developed dynamic web pages using python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Developed automation scripts to create test data and test environment Resolved issues and improvised the process to ensure a stable and accurate solution Written Client Server side validations for the project using JavaScript Used AWS for application deployment and configuration Created usecase scenarios and storyboards in MS Word and MS PowerPoint for better visualization of the application Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C Work with team of developers on python applications for RISK management Developed solutions using JavaScript Web Services SOAP and other web technologies to integrate ServiceNow with internal external systems and tools Automated data movements using python scripts involved in splitting validating and processing of files Simplified delegation assignment and approval by including compliance teams in broader range of work assignments Write Automationtest python scripts to test Used HTML CSS for frontend applications Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Design common framework for REST API consumption using Spring Rest Templates Design application using Spring MVC Request Mappings etc Design and develop auto generation of JAVA Objects from JSON Schema using Faster Xml libraries Involved in design and development of RESTful JAXRS web services Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing a Restful APIS service using Python Flask framework Implemented Test Driven Development TDD strategy for the project Wrote and executed various MYSQL database queries from python using PythonMySQL Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Worked in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Build SQL queries for performing various CRUD operations like create update read and delete Taken part in software Education development life cycle SDLC of the tracking systems Requirements Gathering Analysis Detail Design Development System Testing and User Acceptance Testing Perform the duties as a Build Rep by reviewing and creating code patches for peers before pushing any code to production Training peers on the application usage and support it during its entire life span in a project Involved in development of entire frontend and backend modules using Python on Django Web Framework Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django and PostgreSQL Held meetings with client and worked with team for the entire project with limited help from the client Skills DJANGO 6 years INTEGRATION 6 years INTEGRATOR 6 years JAVASCRIPT 6 years jQuery 6 years Additional Information SKILL SET Development Stack Experience Frameworks Django Openstack API Databases MongoDB MySQL SQL Server PostgreSQL Oracle JavaScript Frameworks Nodejs jQuery Backbonejs ExtJS Emberjs AngularJS Hosting Rackspace Linux Red Hat Ubuntu CentOS API Integration JSON REST XML SOAP",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Frost",
        "Bank",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Frost",
        "Bank",
        "Austin",
        "TX",
        "January",
        "Present",
        "Responsibilities",
        "design",
        "development",
        "UI",
        "component",
        "frameworks",
        "AngularJS",
        "JavaScript",
        "HTML5",
        "CSS",
        "Bootstrap",
        "development",
        "end",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "JQuery",
        "Worked",
        "designdevelopment",
        "web",
        "applications",
        "JavaScript",
        "XML",
        "DHTML",
        "Ajax",
        "Tomcat",
        "Apache",
        "Application",
        "server",
        "platforms",
        "UNIX",
        "Linux",
        "Windows",
        "HTML",
        "CSS3",
        "website",
        "development",
        "Bootstrap",
        "Data",
        "JS",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Puppet",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "Hibernate",
        "configuration",
        "file",
        "ORM",
        "model",
        "mapping",
        "SQL",
        "databases",
        "objects",
        "python",
        "database",
        "tables",
        "SQL",
        "Stored",
        "Procedures",
        "triggers",
        "queries",
        "MYSQL",
        "Application",
        "Angularjs",
        "frontend",
        "web",
        "services",
        "Apache",
        "Cassandra",
        "Backend",
        "Cloud",
        "Foundry",
        "page",
        "application",
        "JS",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "UI",
        "HTML5",
        "CSS3",
        "JQuery",
        "Bootstrap",
        "interaction",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Hadoop",
        "stack",
        "data",
        "tools",
        "Pig",
        "Hive",
        "HBase",
        "database",
        "DynamoDB",
        "Business",
        "logic",
        "implementation",
        "data",
        "exchange",
        "XML",
        "processing",
        "XML",
        "Schema",
        "graphics",
        "creation",
        "Python",
        "Django",
        "python",
        "libraries",
        "wxPython",
        "numPY",
        "Jython",
        "matPlotLib",
        "Spring",
        "MVC",
        "Transaction",
        "Management",
        "SpringHibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "concepts",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "design",
        "creation",
        "APIs",
        "Rest",
        "Framework",
        "Cloud",
        "Infrastructure",
        "Service",
        "environment",
        "source",
        "technology",
        "OpenStack",
        "portability",
        "cloud",
        "services",
        "cloud",
        "environments",
        "Wrote",
        "SQL",
        "queries",
        "hibernates",
        "SQL",
        "SAX",
        "XML",
        "JSON",
        "AJAX",
        "request",
        "web",
        "service",
        "CSS",
        "media",
        "queries",
        "bootstrap",
        "development",
        "performance",
        "CSS",
        "selector",
        "CSS",
        "approach",
        "frontend",
        "architecture",
        "Views",
        "Templates",
        "Python",
        "website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "language",
        "Build",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "help",
        "ORM",
        "SQLAlchemy",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "Cloud",
        "NMS",
        "application",
        "CPUMemory",
        "parameters",
        "machines",
        "Spark",
        "streaming",
        "time",
        "data",
        "Kafka",
        "stream",
        "data",
        "HDFS",
        "Scale",
        "Spring",
        "MVC",
        "application",
        "vSphere",
        "Openstack",
        "nodes",
        "Amazon",
        "EC2",
        "spot",
        "Instance",
        "Hadoop",
        "cluster",
        "data",
        "Amazon",
        "S3",
        "HDFS",
        "HDFS",
        "AmazonS3",
        "input",
        "output",
        "Hadoop",
        "Language",
        "Implementation",
        "use",
        "language",
        "variety",
        "cases",
        "concept",
        "programming",
        "programming",
        "logic",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "data",
        "integrity",
        "Wrote",
        "application",
        "end",
        "UI",
        "screens",
        "HTML",
        "JSP",
        "Ajax",
        "JS",
        "CSS",
        "Hibernate",
        "Cache",
        "Query",
        "Criteria",
        "Transactions",
        "project",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "J",
        "Query",
        "Experience",
        "Optimistic",
        "Locking",
        "Mappings",
        "Hibernate",
        "Apache",
        "Spark",
        "Spark",
        "Streaming",
        "applications",
        "scale",
        "data",
        "Hibernate",
        "configuration",
        "file",
        "ORM",
        "model",
        "mapping",
        "SQL",
        "databases",
        "objects",
        "Installing",
        "Hadoop",
        "Map",
        "HDFS",
        "AWS",
        "MapReduce",
        "jobs",
        "Hive",
        "data",
        "Developed",
        "automation",
        "framework",
        "Python",
        "Shell",
        "scripting",
        "framework",
        "layout",
        "Style",
        "Sheets",
        "CSS",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "test",
        "cases",
        "unit",
        "testing",
        "JUnit",
        "Worked",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "implementation",
        "change",
        "requests",
        "AgileSDLC",
        "Requirement",
        "Analysis",
        "Development",
        "System",
        "Integration",
        "Testing",
        "testing",
        "methods",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "selenium",
        "testing",
        "Designed",
        "Data",
        "Quality",
        "Framework",
        "schema",
        "validation",
        "data",
        "profiling",
        "Spark",
        "Pyspark",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "JSON",
        "Python",
        "Developer",
        "STARBUCKS",
        "January",
        "November",
        "Responsibilities",
        "Struts",
        "framework",
        "JSP",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "web",
        "pages",
        "presentation",
        "layer",
        "application",
        "Test",
        "Approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "Test",
        "framework",
        "requirements",
        "client",
        "planning",
        "details",
        "client",
        "basis",
        "details",
        "team",
        "procedures",
        "text",
        "analytics",
        "processing",
        "inmemory",
        "computing",
        "capabilities",
        "Apache",
        "Spark",
        "Scala",
        "Familiar",
        "ORM",
        "libraries",
        "Python",
        "Djangos",
        "ORM",
        "SQLAlchemy",
        "Web",
        "application",
        "layout",
        "forms",
        "HTML",
        "CSS",
        "JavaScript",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "custom",
        "directives",
        "elements",
        "Attributes",
        "classes",
        "angularjs",
        "Developed",
        "Spark",
        "code",
        "Scala",
        "SparkSQL",
        "testing",
        "data",
        "page",
        "applications",
        "Angularjs",
        "twoway",
        "data",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "DB",
        "package",
        "information",
        "creation",
        "interface",
        "user",
        "menu",
        "update",
        "Attributes",
        "nodeJs",
        "JQuery",
        "services",
        "help",
        "python",
        "library",
        "URLLIBS",
        "Created",
        "Database",
        "functions",
        "procedures",
        "statements",
        "Web",
        "Application",
        "Twitter",
        "Bootstrap",
        "Web",
        "Services",
        "development",
        "team",
        "Ajax",
        "JQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "Generate",
        "UI",
        "mockups",
        "paperandpencil",
        "concepts",
        "highfidelity",
        "prototypes",
        "interaction",
        "model",
        "HTML",
        "CSS",
        "Angular",
        "JS",
        "Developed",
        "Business",
        "feature",
        "Nodejs",
        "Express",
        "backend",
        "APIs",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "application",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "EC2",
        "cloud",
        "search",
        "load",
        "balancer",
        "ELB",
        "Cloud",
        "Deploy",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "puppet",
        "Consumed",
        "NodeJS",
        "REST",
        "API",
        "services",
        "webpages",
        "server",
        "side",
        "applications",
        "Django",
        "Python",
        "programming",
        "Responsive",
        "Design",
        "UI",
        "Single",
        "Page",
        "Applications",
        "HTML",
        "Wireframes",
        "HTML5",
        "Grid",
        "StructuresLayouts",
        "CSS3",
        "Media",
        "Queries",
        "Angular",
        "JS",
        "JQuery",
        "Bootstrap",
        "JS",
        "Familiarity",
        "concepts",
        "MVC",
        "JDBC",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "scripts",
        "test",
        "cases",
        "debugging",
        "automation",
        "scripts",
        "Selenium",
        "WebDriver",
        "transactions",
        "verificationresubmission",
        "batch",
        "process",
        "python",
        "scripts",
        "Backend",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "unit",
        "testing",
        "test",
        "development",
        "integration",
        "test",
        "automation",
        "order",
        "group",
        "functionalities",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "analysis",
        "Develop",
        "framework",
        "Open",
        "Stack",
        "infrastructure",
        "lab",
        "environment",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "standalone",
        "Java",
        "programs",
        "data",
        "XLS",
        "files",
        "data",
        "Database",
        "Testing",
        "team",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "Python",
        "Linux",
        "environment",
        "databases",
        "python",
        "scripts",
        "data",
        "pipelines",
        "Apache",
        "Spark",
        "bigdata",
        "processing",
        "computing",
        "framework",
        "Performed",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "DB2SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "data",
        "web",
        "applications",
        "script",
        "HTML5",
        "XHTML",
        "CSS",
        "Client",
        "side",
        "usiVerizon",
        "Infinite",
        "Computer",
        "Solutions",
        "JavaScript",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "use",
        "case",
        "diagrams",
        "class",
        "diagrams",
        "database",
        "tables",
        "mapping",
        "procedure",
        "results",
        "Developed",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "implementation",
        "change",
        "requests",
        "AgileSDLC",
        "Requirement",
        "Analysis",
        "Development",
        "System",
        "Integration",
        "Testing",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "micro",
        "scripts",
        "modules",
        "selenium",
        "java",
        "framework",
        "Embedded",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "testing",
        "application",
        "gui",
        "methods",
        "Analysis",
        "functionality",
        "defects",
        "tickets",
        "APIs",
        "server",
        "parse",
        "output",
        "report",
        "files",
        "Python",
        "Developer",
        "American",
        "River",
        "Bank",
        "Sacramento",
        "CA",
        "August",
        "December",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "database",
        "Model",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "Use",
        "Case",
        "Diagrams",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "Object",
        "Diagrams",
        "UML",
        "detail",
        "design",
        "application",
        "Django",
        "Python",
        "webframework",
        "application",
        "MVC",
        "framework",
        "applications",
        "database",
        "tables",
        "SQL",
        "Stored",
        "Procedures",
        "triggers",
        "queries",
        "MYSQL",
        "test",
        "cases",
        "strategies",
        "unit",
        "testing",
        "integration",
        "testing",
        "web",
        "pages",
        "python",
        "Django",
        "Frameworks",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "automation",
        "scripts",
        "test",
        "data",
        "test",
        "environment",
        "issues",
        "process",
        "solution",
        "Written",
        "Client",
        "Server",
        "side",
        "validations",
        "project",
        "JavaScript",
        "AWS",
        "application",
        "deployment",
        "configuration",
        "usecase",
        "scenarios",
        "storyboards",
        "MS",
        "Word",
        "MS",
        "PowerPoint",
        "visualization",
        "application",
        "availability",
        "time",
        "system",
        "financialBanking",
        "transactions",
        "components",
        "Linux",
        "UNIX",
        "AIX",
        "platforms",
        "Tools",
        "C",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "solutions",
        "JavaScript",
        "Web",
        "Services",
        "SOAP",
        "web",
        "technologies",
        "ServiceNow",
        "systems",
        "tools",
        "data",
        "movements",
        "scripts",
        "splitting",
        "processing",
        "files",
        "delegation",
        "assignment",
        "approval",
        "compliance",
        "teams",
        "range",
        "work",
        "assignments",
        "Automationtest",
        "scripts",
        "HTML",
        "CSS",
        "frontend",
        "applications",
        "analysis",
        "design",
        "development",
        "testing",
        "phases",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Design",
        "framework",
        "REST",
        "API",
        "consumption",
        "Spring",
        "Rest",
        "Templates",
        "Design",
        "application",
        "Spring",
        "MVC",
        "Request",
        "Mappings",
        "Design",
        "auto",
        "generation",
        "JAVA",
        "JSON",
        "Schema",
        "Faster",
        "Xml",
        "libraries",
        "design",
        "development",
        "RESTful",
        "JAXRS",
        "web",
        "services",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "strategy",
        "project",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "CSS",
        "HTML",
        "framework",
        "Installation",
        "PythonUnix",
        "test",
        "beds",
        "Apache",
        "Server",
        "Linux",
        "Platform",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Taken",
        "part",
        "software",
        "Education",
        "development",
        "life",
        "cycle",
        "SDLC",
        "tracking",
        "systems",
        "Requirements",
        "Analysis",
        "Detail",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "duties",
        "Build",
        "Rep",
        "code",
        "patches",
        "peers",
        "code",
        "production",
        "Training",
        "peers",
        "application",
        "usage",
        "life",
        "span",
        "project",
        "development",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "transactions",
        "persistence",
        "layers",
        "data",
        "application",
        "functionalities",
        "Django",
        "PostgreSQL",
        "meetings",
        "client",
        "team",
        "project",
        "help",
        "client",
        "Skills",
        "DJANGO",
        "years",
        "INTEGRATION",
        "years",
        "INTEGRATOR",
        "years",
        "JAVASCRIPT",
        "years",
        "jQuery",
        "years",
        "Additional",
        "Information",
        "SKILL",
        "SET",
        "Development",
        "Stack",
        "Experience",
        "Frameworks",
        "Django",
        "Openstack",
        "API",
        "MongoDB",
        "MySQL",
        "SQL",
        "Server",
        "PostgreSQL",
        "Oracle",
        "JavaScript",
        "Frameworks",
        "Nodejs",
        "jQuery",
        "Backbonejs",
        "ExtJS",
        "Emberjs",
        "AngularJS",
        "Rackspace",
        "Linux",
        "Red",
        "Hat",
        "Ubuntu",
        "CentOS",
        "API",
        "Integration",
        "JSON",
        "REST",
        "XML",
        "SOAP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:40:45.040879",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Frost Bank Work Experience Sr Python Developer Frost Bank Austin TX January 2016 to Present Responsibilities Involved in design and development of UI component using frameworks AngularJS JavaScript HTML5 CSS and Bootstrap Involved in the development of front end of the application using Python 27 HTML5 CSS3 AJAX JSON and JQuery Worked in designdevelopment of web applications using JavaScript XML DHTML Ajax Tomcat and Apache Application server over various platforms UNIX Linux and Windows Used HTML 4 and CSS3 for website development and build on Bootstrap 30 Data binding using Angular JS Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Involved in environment code installation as well as the SVN implementation Designed Hibernate configuration file in ORM model which automate the mapping between the SQL databases and objects in python Created database tables and implemented SQL Stored Procedures triggers and complex queries in MYSQL Application were developed using Angularjs for frontend RESTful web services Apache Cassandra for Backend and deployed in Cloud Foundry Developed single page application by using Angular JS Developed tools using Python Shell scripting XML to automate some of the menial tasks Upgraded existing UI with HTML5 CSS3 JQuery and Bootstrap with AngularJS interaction Used Python and Django creating graphics XML processing data exchange and business logic implementation Worked on analysing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Business logic implementation data exchange XML processing XML Schema and graphics creation has been done using Python and Django Used several python libraries like wxPython numPY Jython and matPlotLib Used Spring MVC Transaction Management SpringHibernate Batch Transactions and Hibernate cache concepts Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Contributing in the design and creation of RESTful APIs using PythonDjangoDjango Rest Framework Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Wrote complex SQL queries using hibernates native SQL Used SAX for XML parsing JSON and AJAX to send request to secured web service Used CSS media queries and bootstrap to support for Responsive development Implemented performance oriented CSS selector scalable and modular CSS approach for frontend architecture Developed Views and Templates with Python and to create a userfriendly website interface Djangos view controller and template language is used Build all database mapping classes using Django models with the help of ORM like SQLAlchemy Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Worked in Cloud based NMS application which monitors the CPUMemory parameters of Virtual machines Configured Spark streaming to receive real time data from the Kafka and store the stream data to HDFS using Scale Implementing the existing Spring MVC based application to work with both vSphere and Openstack simultaneously Configured several nodes Amazon EC2 spot Instance Hadoop cluster to transfer the data from Amazon S3 to HDFS and HDFS to AmazonS3 and to direct input and output to the Hadoop Language Implementation Practiced the use of this language by solving a variety of usetest cases with the concept of objectoriented programming and programming logic Successfully migrated the Django database from SQLite to MySQL with complete data integrity Wrote application front end developed and designed all the UI screens with HTML JSP Ajax angular JS and CSS Extensively worked on Hibernate Cache Query Criteria and Transactions in secondary project Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and J Query Experience with Optimistic Locking Mappings using Hibernate Successfully implemented Apache Spark and Spark Streaming applications for large scale data Designed Hibernate configuration file in ORM model which automate the mapping between the SQL databases and objects Involved in Installing Hadoop Map Reduce HDFS AWS and developed multiple MapReduce jobs in Hive for data cleaning and preprocessing Developed and designed automation framework using Python and Shell scripting Created and maintained the framework and layout of each portal with Cascading Style Sheets CSS Used Unit Test Python library for testing many programs on python and other codes Developed test cases and performed unit testing using JUnit Worked on MultiThreading factory to distribute learning process backtesting and the into various worker processes Reviewed and worked on the implementation of change requests raised by the clientInvolved in complete AgileSDLC Requirement Analysis Development System and Integration Testing Performed different testing methods like unit testing Integration testing web application testing and selenium testing Designed Data Quality Framework to perform schema validation and data profiling on Spark Pyspark Developed UI using CSS HTML JavaScript AngularJS JQuery and JSON Python Developer STARBUCKS January 2013 to November 2015 Responsibilities Used Struts framework along with JSP HTML CSS and Java Script to construct the dynamic web pages presentation layer for the application Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in collecting requirements from client and explained the planning details to the client on daily basis and share the requirement details to the team Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Familiar with several ORM libraries in Python such as Djangos ORM and SQLAlchemy Designed the Web application layout and forms using HTML CSS and JavaScript Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed custom directives elements Attributes and classes using angularjs Developed Spark code using Scala and SparkSQL for faster testing and data processing Developed single page applications using Angularjs Implemented twoway data binding using AngularJS Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in the creation of interface to manage user menu and Bulk update of Attributes using AngularJS nodeJs and JQuery Handled RESTful services with the help of python library URLLIBS Created Database tables functions stored procedures and wrote prepared statements using PLSQL Developed dynamic responsive Web Application by integrating AngularJS with Twitter Bootstrap which is further integrated with Web Services provided by the development team Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Generate UI mockups from paperandpencil concepts to highfidelity prototypes that convey the interaction model using HTML CSS and Angular JS Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed application using Amazon Web Service AWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Consumed NodeJS and REST API in angular services and created internal webpages Worked on server side applications with Django using Python programming Developed Responsive Design UI Single Page Applications and HTML Wireframes using HTML5 Grid StructuresLayouts CSS3 Media Queries Angular JS JQuery and Bootstrap JS Familiarity with concepts of MVC JDBC and RESTful Developed Merge jobs in Python to extract and load data into MySQL database Prepared scripts executing test cases and debugging also prepared automation scripts in Selenium WebDriver Implemented failed transactions verificationresubmission batch process using python scripts Backend data access modules using PLSQL stored procedures and Oracle were designed and created Implemented unit testing test driven development and integration test automation in order to test a group of related functionalities Worked on Python OpenStack APIs and used NumPy for Numerical analysis Develop customized framework for Open Stack infrastructure in the lab environment Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created standalone Java programs to read data from several XLS files and insert data into the Database as needed by the Testing team Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Used Python in a Linux environment to work with databases and also involved in generating python scripts Created data pipelines using Apache Spark a bigdata processing and computing framework Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Developed data formatted web applications and deploy the script using HTML5 XHTML CSS and Client side scripting usiVerizon Infinite Computer Solutions using JavaScript Implemented RESTful WebServices For sending and receiving the data between multiple systems Developed use case diagrams class diagrams database tables and mapping between procedure results set and objectoriented java objects Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Reviewed and worked on the implementation of change requests raised by the clientInvolved in complete AgileSDLC Requirement Analysis Development System and Integration Testing Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developing different micro scripts for planning modules in selenium with java j2ee in Testng framework Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Working on manual testing the developed application in gui methods Analysis the proper functionality and raise the defects tickets to further to work on Created RESTful APIs calls with server parse output report of excel files Python Developer American River Bank Sacramento CA August 2011 to December 2012 Responsibilities Developed front end of the application using Python HTML CSS AJAX JSON and JQuery Involved in building database Model and Views utilizing Python in order to build an interactive web based solution Designed Use Case Diagrams Class Diagrams and Sequence Diagrams and Object Diagrams using UML to model the detail design of the application Used Django Python webframework to develop application Used MVC framework to build modular maintainable applications Created database tables and implemented SQL Stored Procedures triggers and complex queries in MYSQL Preparing test cases and strategies for unit testing and integration testing Involved Developed dynamic web pages using python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Developed automation scripts to create test data and test environment Resolved issues and improvised the process to ensure a stable and accurate solution Written Client Server side validations for the project using JavaScript Used AWS for application deployment and configuration Created usecase scenarios and storyboards in MS Word and MS PowerPoint for better visualization of the application Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C Work with team of developers on python applications for RISK management Developed solutions using JavaScript Web Services SOAP and other web technologies to integrate ServiceNow with internal external systems and tools Automated data movements using python scripts involved in splitting validating and processing of files Simplified delegation assignment and approval by including compliance teams in broader range of work assignments Write Automationtest python scripts to test Used HTML CSS for frontend applications Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Design common framework for REST API consumption using Spring Rest Templates Design application using Spring MVC Request Mappings etc Design and develop auto generation of JAVA Objects from JSON Schema using Faster Xml libraries Involved in design and development of RESTful JAXRS web services Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing a Restful APIS service using Python Flask framework Implemented Test Driven Development TDD strategy for the project Wrote and executed various MYSQL database queries from python using PythonMySQL Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Worked in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Developed views and templates with Python and Djangos view controller and template language to create a userfriendly website interface Build SQL queries for performing various CRUD operations like create update read and delete Taken part in software Education development life cycle SDLC of the tracking systems Requirements Gathering Analysis Detail Design Development System Testing and User Acceptance Testing Perform the duties as a Build Rep by reviewing and creating code patches for peers before pushing any code to production Training peers on the application usage and support it during its entire life span in a project Involved in development of entire frontend and backend modules using Python on Django Web Framework Designed and developed transactions and persistence layers to saveretrievemodify data for application functionalities using Django and PostgreSQL Held meetings with client and worked with team for the entire project with limited help from the client Skills DJANGO 6 years INTEGRATION 6 years INTEGRATOR 6 years JAVASCRIPT 6 years jQuery 6 years Additional Information SKILL SET Development Stack Experience Frameworks Django Openstack API Databases MongoDB MySQL SQL Server PostgreSQL Oracle JavaScript Frameworks Nodejs jQuery Backbonejs ExtJS Emberjs AngularJS Hosting Rackspace Linux Red Hat Ubuntu CentOS API Integration JSON REST XML SOAP",
    "unique_id": "10529be8-b39b-4d4a-a9e2-748e59008362"
}