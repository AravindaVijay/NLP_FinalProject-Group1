{
    "clean_data": "Python developer span lPythonspan span ldeveloperspan Python developer Amazon Seattle WA Experienced professional with 5 years of technical exposure in diverse technologies like Python Django PostgreSQL Linux Java MySQL and AWS Experienced in developing webbased applications using Python DJANGO GTK QT C JSON CSS Expertise in implementing ObjectOriented technologies Web based clientserver architecture serviceoriented architecture and Object Relational Mappings ORM Experienced in developing Webbased Applications using Python CSS HTML JavaScript Angular JS and JQuery Skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide Pandas dataframe SQLAlchemy networkx numpy scipy urllib2 Pychart Highcharts PySide SciPy PyTables to drive improvements throughout entire SDLC Experience with Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in PIP community most used Python Package Manager PyVows BDD tool for Python Expertise in working with GUI frameworksPyjamas Jytho guidata  PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Authorized to work in United States for any employee Authorized to work in the US for any employer Work Experience Python developer Amazon Seattle WA August 2018 to Present Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Worked on Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Amazon Elastic Beanstalk with Amazon EC2 instance to deploy Django project into AWS Configured continuous integration with Jenkins on Amazon EC2 Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created Data pipelines and configured EMR Cluster to offload the data to Redshift Configured Data pipelines with EMR Cluster to offload the data to Redshift Configured and administered Jenkins for continuous integration and deployment into Tomcat Application Server and to improve reusability for building pipelines Created data pipelines in AWS using AWS native services like LambdaEC2 and are aware of big data transformation Python Developer Cisco Dublin OH January 2017 to December 2017 Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Using SQL Alchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Python Developer HUBSPOT INC Cambridge MA November 2015 to November 2016 Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Implemented Test Driven Development TDD strategy for the project Developed Python batch processors to consume and produce various feeds Created database access layer using JDBC and PLSQL stored procedures Responsible for search engine optimization to improve the visibility of the website Developed Merge jobs in Python to extract and load data into MySQL database Use Git for version control Used AngularJS builtin directives custom directives and services for developing interceptor and complex UI data table grids Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Utilized Python specific tools including Django Django Rest Framework Django ORM Flask SQL Alchemy Pandas NumPy Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Deployed the project into WebLogic using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Python Developer IBM IN January 2013 to February 2015 Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Created Business Logic using Python 27 Used FLASK framework for application development Utilized PyTest the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved and played a leading role in database migration projects from Oracle to MongoDB Deployment and Build of various environments including Linux and UNIX Installed and maintained web servers Tomcat and Apache HTTP Web servers in UNIX Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Worked on automation setup and administration of build and deployment tools such as Jenkins Used RESTful API with JSON for extracting Network trafficMemory performance information Created database using MySQL wrote several queries and used FLASK to extract data from database Created specific images using Python Imaging Library for the custom images used for each book Effectively communicated with the external vendors to resolve queries Used GIT for the version control Education Masters Skills AMAZON WEB SERVICES Hadoop BOOTSTRAP REACTJS JSON MySQL Javascript Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix AJAX JQuery JSON XML XSLT LDAP OAuth SOAP REST Selenium Splinter PyChecker Komodo PyCharm PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Kafka Swagger OpenStack Amazon Web Services AWS Microsoft Azure NumPy PyDev Data pipelines",
    "entities": [
        "DAO Added",
        "Python Flask",
        "GUI",
        "PyCharm PyScripter PyStudio",
        "XMLJSON",
        "HTML AJAX CSS",
        "Cambridge",
        "UNIX",
        "CSS HTML",
        "UNIX Installed",
        "Identity Compute Image Service Block Storage Networking Neutron",
        "Hadoop",
        "Spec Involved",
        "MAC",
        "Functional",
        "J2EE Design",
        "WebLogic",
        "MA",
        "Bash Successfully",
        "HBase",
        "Amazon",
        "Kubernetes Created Data",
        "UserAcceptance",
        "Python",
        "Migrations Network",
        "Docker AWS Lambda Serverless",
        "Amazon AWS S3",
        "Stored Procedures",
        "Bash",
        "HDFS Hive Leveraged AWS",
        "NOVA",
        "PyWebkitGtk",
        "Redshift Configured Data",
        "Developed Business Logic",
        "Hadoop MapReduce",
        "AWS Cloud",
        "urllib2 Pychart",
        "Bash Involved",
        "PyDev Data",
        "API RESTful Web Service",
        "Linux",
        "Created Data",
        "Flask",
        "ObjectOriented",
        "SQL Queries",
        "Python Developer IBM",
        "Shell Scripting",
        "Utilized PyTest",
        "Docker",
        "DOM",
        "RDS",
        "UNIX Involved",
        "Amazon Seattle",
        "Views",
        "PyQt",
        "MVC",
        "Spark",
        "Scala Container",
        "GIT",
        "API",
        "US",
        "Python Django PostgreSQL",
        "Created",
        "Bootstrap Big Data Hadoop",
        "AWS",
        "GitHub Bitbucket",
        "Oracle",
        "Python Developer HUBSPOT INC",
        "Worked on Microservices",
        "SAS",
        "SQL",
        "Design",
        "Fiddler",
        "lPythonspan",
        "FLASK",
        "Wireshark",
        "Integration Testing GUI",
        "Developed Python",
        "Javascript Additional Information",
        "United States",
        "SQLite",
        "CRUD",
        "Build",
        "Performed",
        "Tomcat Application Server",
        "AWS Configured",
        "Redshift Configured",
        "UI",
        "Python Package",
        "Microsoft",
        "Spark shark Streams",
        "Using SQL Alchemy",
        "Created Business Logic",
        "Implemented Test Driven Development TDD",
        "Present Developed",
        "Tomcat",
        "REST",
        "Python Developed",
        "PIP",
        "Amazon Seattle WA Experienced",
        "Object Relational Mappings ORM Experienced",
        "JQuery",
        "PythonTornado"
    ],
    "experience": "Experience with Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in PIP community most used Python Package Manager PyVows BDD tool for Python Expertise in working with GUI frameworksPyjamas Jytho guidata   PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Authorized to work in United States for any employee Authorized to work in the US for any employer Work Experience Python developer Amazon Seattle WA August 2018 to Present Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Worked on Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Amazon Elastic Beanstalk with Amazon EC2 instance to deploy Django project into AWS Configured continuous integration with Jenkins on Amazon EC2 Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created Data pipelines and configured EMR Cluster to offload the data to Redshift Configured Data pipelines with EMR Cluster to offload the data to Redshift Configured and administered Jenkins for continuous integration and deployment into Tomcat Application Server and to improve reusability for building pipelines Created data pipelines in AWS using AWS native services like LambdaEC2 and are aware of big data transformation Python Developer Cisco Dublin OH January 2017 to December 2017 Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Using SQL Alchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Python Developer HUBSPOT INC Cambridge MA November 2015 to November 2016 Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Implemented Test Driven Development TDD strategy for the project Developed Python batch processors to consume and produce various feeds Created database access layer using JDBC and PLSQL stored procedures Responsible for search engine optimization to improve the visibility of the website Developed Merge jobs in Python to extract and load data into MySQL database Use Git for version control Used AngularJS builtin directives custom directives and services for developing interceptor and complex UI data table grids Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Utilized Python specific tools including Django Django Rest Framework Django ORM Flask SQL Alchemy Pandas NumPy Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Deployed the project into WebLogic using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Python Developer IBM IN January 2013 to February 2015 Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Created Business Logic using Python 27 Used FLASK framework for application development Utilized PyTest the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved and played a leading role in database migration projects from Oracle to MongoDB Deployment and Build of various environments including Linux and UNIX Installed and maintained web servers Tomcat and Apache HTTP Web servers in UNIX Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Worked on automation setup and administration of build and deployment tools such as Jenkins Used RESTful API with JSON for extracting Network trafficMemory performance information Created database using MySQL wrote several queries and used FLASK to extract data from database Created specific images using Python Imaging Library for the custom images used for each book Effectively communicated with the external vendors to resolve queries Used GIT for the version control Education Masters Skills AMAZON WEB SERVICES Hadoop BOOTSTRAP REACTJS JSON MySQL Javascript Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix AJAX JQuery JSON XML XSLT LDAP OAuth SOAP REST Selenium Splinter PyChecker Komodo PyCharm PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Kafka Swagger OpenStack Amazon Web Services AWS Microsoft Azure NumPy PyDev Data pipelines",
    "extracted_keywords": [
        "developer",
        "span",
        "lPythonspan",
        "span",
        "ldeveloperspan",
        "Python",
        "developer",
        "Amazon",
        "Seattle",
        "WA",
        "years",
        "exposure",
        "technologies",
        "Python",
        "Django",
        "PostgreSQL",
        "Linux",
        "Java",
        "MySQL",
        "AWS",
        "applications",
        "Python",
        "DJANGO",
        "GTK",
        "QT",
        "C",
        "JSON",
        "CSS",
        "Expertise",
        "ObjectOriented",
        "technologies",
        "Web",
        "clientserver",
        "architecture",
        "architecture",
        "Object",
        "Relational",
        "Mappings",
        "ORM",
        "Webbased",
        "Applications",
        "Python",
        "CSS",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "experience",
        "Python",
        "tools",
        "developments",
        "Beautiful",
        "Soup",
        "Jasy",
        "Scipy",
        "matplotlib",
        "Pickle",
        "PySide",
        "Pandas",
        "SQLAlchemy",
        "networkx",
        "numpy",
        "urllib2",
        "Pychart",
        "Highcharts",
        "PySide",
        "SciPy",
        "PyTables",
        "improvements",
        "SDLC",
        "Experience",
        "Open",
        "VMS",
        "Unix",
        "SOLARIS",
        "Linux",
        "NT",
        "systems",
        "Performed",
        "system",
        "functions",
        "software",
        "NT",
        "Unix",
        "Alphaservers",
        "Expertise",
        "serverside",
        "technologies",
        "Restful",
        "APL",
        "MVC",
        "design",
        "patterns",
        "Experience",
        "stack",
        "services",
        "Identity",
        "Compute",
        "Image",
        "Service",
        "Block",
        "Storage",
        "Networking",
        "Neutron",
        "Keystone",
        "Superior",
        "Troubleshooting",
        "support",
        "abilities",
        "Migrations",
        "Network",
        "connectivity",
        "Security",
        "Database",
        "experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Open",
        "stack",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "Experience",
        "operating",
        "systems",
        "Windows",
        "NT",
        "XP",
        "Vista",
        "UNIX",
        "MAC",
        "OS",
        "X",
        "Experience",
        "AWS",
        "Cloud",
        "services",
        "EC2",
        "S3",
        "EBS",
        "VPC",
        "ELB",
        "Route53",
        "Cloud",
        "Watch",
        "Security",
        "Groups",
        "Cloud",
        "Trail",
        "IAM",
        "Cloud",
        "Front",
        "Snowball",
        "RDS",
        "Glacier",
        "API",
        "services",
        "PythonTornado",
        "NodeJS",
        "AMQP",
        "architectures",
        "Expertise",
        "PIP",
        "community",
        "Python",
        "Package",
        "Manager",
        "BDD",
        "tool",
        "Python",
        "Expertise",
        "GUI",
        "Jytho",
        "PyQt",
        "PyWebkitGtk",
        "Elasticsearch",
        "Log",
        "stash",
        "Kibana",
        "ELK",
        "Expertise",
        "Crypto",
        "Blockchain",
        "Bitcoin",
        "Monaro",
        "Bitcoin",
        "Cash",
        "Ecommerce",
        "platform",
        "Python",
        "Flask",
        "backend",
        "JinjaJavaScript",
        "frontend",
        "United",
        "States",
        "employee",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "developer",
        "Amazon",
        "Seattle",
        "WA",
        "August",
        "Present",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "companys",
        "website",
        "Django",
        "framework",
        "design",
        "server",
        "applications",
        "Wrote",
        "Python",
        "code",
        "procedure",
        "automate",
        "processes",
        "Build",
        "test",
        "functionality",
        "production",
        "pipeline",
        "Python",
        "code",
        "bugs",
        "upgrades",
        "functionality",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "solution",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "web",
        "middleware",
        "end",
        "systems",
        "Python",
        "SQL",
        "Linux",
        "Windows",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "editors",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "PyDev",
        "Wing",
        "IDE",
        "Spyder",
        "services",
        "NOVA",
        "SWIFT",
        "KEYSTONE",
        "NEUTRON",
        "CINDER",
        "GLANCE",
        "J2EE",
        "Design",
        "patterns",
        "Singleton",
        "Service",
        "Locator",
        "DAO",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Developed",
        "Kafka",
        "producer",
        "consumers",
        "HBase",
        "Spark",
        "shark",
        "Streams",
        "Hadoop",
        "MapReduce",
        "jobs",
        "components",
        "HDFS",
        "Hive",
        "Leveraged",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "auto",
        "scaling",
        "systems",
        "load",
        "servers",
        "Microservices",
        "architecture",
        "technologies",
        "Docker",
        "AWS",
        "Lambda",
        "Serverless",
        "design",
        "patterns",
        "Hadoop",
        "stack",
        "data",
        "tools",
        "Pig",
        "Hive",
        "HBase",
        "database",
        "DynamoDB",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "instance",
        "Django",
        "project",
        "AWS",
        "integration",
        "Jenkins",
        "Amazon",
        "EC2",
        "Connected",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Python",
        "Scala",
        "Container",
        "management",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "Created",
        "Data",
        "pipelines",
        "EMR",
        "Cluster",
        "data",
        "Configured",
        "Data",
        "pipelines",
        "EMR",
        "Cluster",
        "data",
        "Redshift",
        "Configured",
        "Jenkins",
        "integration",
        "deployment",
        "Tomcat",
        "Application",
        "Server",
        "reusability",
        "pipelines",
        "data",
        "pipelines",
        "AWS",
        "AWS",
        "services",
        "LambdaEC2",
        "data",
        "transformation",
        "Python",
        "Developer",
        "Cisco",
        "Dublin",
        "OH",
        "January",
        "December",
        "Writing",
        "REST",
        "APIs",
        "part",
        "applications",
        "insurance",
        "premium",
        "calculations",
        "Django",
        "REST",
        "framework",
        "Pythons",
        "graphics",
        "APIs",
        "graphics",
        "serialization",
        "libraries",
        "data",
        "XMLJSON",
        "formats",
        "REST",
        "APIs",
        "Django",
        "framework",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Experience",
        "collections",
        "Python",
        "user",
        "objects",
        "Design",
        "custom",
        "Bash",
        "scripts",
        "data",
        "flow",
        "PostgreSQL",
        "database",
        "development",
        "team",
        "data",
        "query",
        "strings",
        "PostgreSQL",
        "backend",
        "data",
        "SQL",
        "Alchemy",
        "Flask",
        "PostgreSQL",
        "database",
        "web",
        "application",
        "REST",
        "API",
        "testing",
        "web",
        "service",
        "serverside",
        "changes",
        "scripts",
        "build",
        "deployment",
        "maintain",
        "task",
        "Jenkins",
        "Maven",
        "Python",
        "Bash",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Managed",
        "code",
        "GitHub",
        "Bitbucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "Python",
        "Developer",
        "HUBSPOT",
        "INC",
        "Cambridge",
        "MA",
        "November",
        "November",
        "Design",
        "development",
        "test",
        "deploy",
        "maintenance",
        "website",
        "UI",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "property",
        "list",
        "application",
        "Python",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "CSS",
        "HTML",
        "framework",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "strategy",
        "project",
        "Python",
        "batch",
        "processors",
        "feeds",
        "database",
        "access",
        "layer",
        "JDBC",
        "procedures",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Use",
        "Git",
        "version",
        "control",
        "builtin",
        "directives",
        "custom",
        "directives",
        "services",
        "interceptor",
        "UI",
        "data",
        "table",
        "grids",
        "services",
        "filters",
        "filter",
        "functionality",
        "search",
        "box",
        "integrator",
        "functionalities",
        "Python",
        "tools",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "Django",
        "ORM",
        "Flask",
        "SQL",
        "Alchemy",
        "Pandas",
        "NumPy",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Spec",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "project",
        "WebLogic",
        "GIT",
        "version",
        "control",
        "system",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Python",
        "Developer",
        "IBM",
        "January",
        "February",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "SDLC",
        "process",
        "Business",
        "Logic",
        "Python",
        "FLASK",
        "framework",
        "application",
        "development",
        "PyTest",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "role",
        "database",
        "migration",
        "projects",
        "Oracle",
        "MongoDB",
        "Deployment",
        "Build",
        "environments",
        "Linux",
        "UNIX",
        "Installed",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "Web",
        "servers",
        "UNIX",
        "Installation",
        "Python",
        "Linux",
        "test",
        "beds",
        "JSON",
        "REST",
        "Web",
        "services",
        "automation",
        "setup",
        "administration",
        "build",
        "deployment",
        "tools",
        "Jenkins",
        "API",
        "JSON",
        "Network",
        "performance",
        "information",
        "database",
        "MySQL",
        "queries",
        "FLASK",
        "data",
        "database",
        "images",
        "Python",
        "Imaging",
        "Library",
        "custom",
        "images",
        "book",
        "vendors",
        "queries",
        "GIT",
        "version",
        "control",
        "Education",
        "Masters",
        "Skills",
        "AMAZON",
        "WEB",
        "SERVICES",
        "Hadoop",
        "BOOTSTRAP",
        "REACTJS",
        "JSON",
        "MySQL",
        "Javascript",
        "Information",
        "SKILLS",
        "Python",
        "Scala",
        "SQL",
        "PLSQL",
        "SAS",
        "PEP8",
        "PIP",
        "Spark",
        "Requests",
        "Scrapy",
        "SQLAlchemy",
        "BeautifulSoup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "EmberJS",
        "ReactJS",
        "Bootstrap",
        "Big",
        "Data",
        "Hadoop",
        "Linux",
        "Unix",
        "AJAX",
        "JQuery",
        "JSON",
        "XML",
        "XSLT",
        "LDAP",
        "OAuth",
        "SOAP",
        "REST",
        "Selenium",
        "Splinter",
        "PyChecker",
        "Komodo",
        "PyCharm",
        "PyScripter",
        "PyShield",
        "Spyder",
        "Jupyter",
        "MySQL",
        "Teradata",
        "SQL",
        "Server",
        "IntelliJ",
        "Kafka",
        "Swagger",
        "OpenStack",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Microsoft",
        "Azure",
        "NumPy",
        "PyDev",
        "Data",
        "pipelines"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:31:39.067850",
    "resume_data": "Python developer span lPythonspan span ldeveloperspan Python developer Amazon Seattle WA Experienced professional with 5 years of technical exposure in diverse technologies like Python Django PostgreSQL Linux Java MySQL and AWS Experienced in developing webbased applications using Python DJANGO GTK QT C JSON CSS Expertise in implementing ObjectOriented technologies Web based clientserver architecture serviceoriented architecture and Object Relational Mappings ORM Experienced in developing Webbased Applications using Python CSS HTML JavaScript Angular JS and JQuery Skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy numpy Scipy matplotlib Pickle PySide Pandas dataframe SQLAlchemy networkx numpy scipy urllib2 Pychart Highcharts PySide SciPy PyTables to drive improvements throughout entire SDLC Experience with Open VMS 62 71 72 Unix SOLARIS Linux and NT systems Performed system tuning functions and installed software on NT Unix and Alphaservers Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Experience in creating Open stack services for Identity Compute Image Service Block Storage Networking Neutron Keystone Superior Troubleshooting and Technical support abilities with Migrations Network connectivity Security and Database applications Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Expertise in PIP community most used Python Package Manager PyVows BDD tool for Python Expertise in working with GUI frameworksPyjamas Jytho guidata PyGUI PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Authorized to work in United States for any employee Authorized to work in the US for any employer Work Experience Python developer Amazon Seattle WA August 2018 to Present Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Worked on Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Amazon Elastic Beanstalk with Amazon EC2 instance to deploy Django project into AWS Configured continuous integration with Jenkins on Amazon EC2 Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created Data pipelines and configured EMR Cluster to offload the data to Redshift Configured Data pipelines with EMR Cluster to offload the data to Redshift Configured and administered Jenkins for continuous integration and deployment into Tomcat Application Server and to improve reusability for building pipelines Created data pipelines in AWS using AWS native services like LambdaEC2 and are aware of big data transformation Python Developer Cisco Dublin OH January 2017 to December 2017 Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Using SQL Alchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Python Developer HUBSPOT INC Cambridge MA November 2015 to November 2016 Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Implemented Test Driven Development TDD strategy for the project Developed Python batch processors to consume and produce various feeds Created database access layer using JDBC and PLSQL stored procedures Responsible for search engine optimization to improve the visibility of the website Developed Merge jobs in Python to extract and load data into MySQL database Use Git for version control Used AngularJS builtin directives custom directives and services for developing interceptor and complex UI data table grids Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Utilized Python specific tools including Django Django Rest Framework Django ORM Flask SQL Alchemy Pandas NumPy Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Deployed the project into WebLogic using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Python Developer IBM IN January 2013 to February 2015 Responsible for gathering requirements system analysis design development testing and deployment Participated in the complete SDLC process Created Business Logic using Python 27 Used FLASK framework for application development Utilized PyTest the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved and played a leading role in database migration projects from Oracle to MongoDB Deployment and Build of various environments including Linux and UNIX Installed and maintained web servers Tomcat and Apache HTTP Web servers in UNIX Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Worked on automation setup and administration of build and deployment tools such as Jenkins Used RESTful API with JSON for extracting Network trafficMemory performance information Created database using MySQL wrote several queries and used FLASK to extract data from database Created specific images using Python Imaging Library for the custom images used for each book Effectively communicated with the external vendors to resolve queries Used GIT for the version control Education Masters Skills AMAZON WEB SERVICES Hadoop BOOTSTRAP REACTJS JSON MySQL Javascript Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix AJAX JQuery JSON XML XSLT LDAP OAuth SOAP REST Selenium Splinter PyChecker Komodo PyCharm PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Kafka Swagger OpenStack Amazon Web Services AWS Microsoft Azure NumPy PyDev Data pipelines",
    "unique_id": "9202c5bd-e198-482f-8bfa-c43eaacca614"
}