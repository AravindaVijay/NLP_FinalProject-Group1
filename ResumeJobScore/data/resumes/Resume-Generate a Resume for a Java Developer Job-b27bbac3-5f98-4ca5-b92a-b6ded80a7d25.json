{
    "clean_data": "SR PYTHON DEVELOPER SR span lPYTHONspan span lDEVELOPERspan SR PYTHON DEVELOPER Berkshire Hathaway Omaha NE Work Experience SR PYTHON DEVELOPER Berkshire Hathaway Omaha NE November 2017 to Present Designed front end and backend of the application utilizing Python on Django Web Framework For the dashboard utilized the Python web development framework TurboGear Developed user interface of the website used HTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Debug application deployments on multiple environments Wrote Python modules to view and connect the Apache Cassandra instance Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browser to web application Worked on several Palettes such as SOAP REST HTTP FTP JDBC File JMS etc Rewrite existing Python Django modules to deliver certain format of data Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Worked on integrating python with Web development tools and Web Services under linux environment Created and executed test plans using PyUnit Utilized PyUnit the Python Unit test framework for all Python applications Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Used AngularJS as the development framework to build a singlepage application Responsible for setting up AngularJS framework for UI development Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used DBIDBD for Oracle connection from Perl Created batch jobs using Unix shell scripts and Perl scripts to process database activities Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Machine learning techniques like unsupervised Classification optimization and prediction Good Knowledge on engineers for building Artificial Intelligence Machine Learning and Deep Learning capabilities in the Enterprise Services Platform Deployed and monitored scalable infrastructure on Amazon web services AWS configuration management using puppet and involved in serverside applications with Django using Python programming Responsible for the Automation of the deployment of the Conductor application on AWS lambda using highend AWS architectural components Developed AWS lambda scripts to build on demand EC2 instance formation Created the policy to migrate the logs from AWS S3 to Glacier automatically from S3 bucket PYTHON DEVELOPER ATT Dallas TX December 2015 to October 2017 Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Used Pandas and Scikitlearn libraries for statistics Analysis Used python flask framework to develop Restful APIs service Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Designed Cassandra scheme for the APIs Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Extracted data from XML files using PERLXML modules Good understanding and knowledge of Apache Airflow Wrote multiple Shell and Perl scripts for the automation of the unit testing Wrote multiple Perl programs to generate configuration files from Oracle Database Running loadendurance tests using Vugen ALM and controller server monitoring analysis using Dynatrace UNIX putty SQL logs and other tools and reporting the performance Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Design and manage API system deployment using fast http server and Amazon AWS architecture In Machine learning background and skills in data science applied research and heavyduty coding Working on with Python programming and Python libraries for data science Used Machine learning techniques like unsupervised Classification optimization and prediction PYTHON DEVELOPER McKesson San Francisco CA May 2014 to November 2015 Designing mobile search application system requirements and coded backend and frontend in Django Python Authored encryption scripts Collaborated with crossfunctional teams to scope project requirements author documents etc Handled the security content and issues Created many web applications using HTML CSS and JavaScript Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Interactive in providing change requests trouble reports and requirements collection with the client Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Used MVT pattern to encapsulate clientserver interactions helps to illustrate softwarepattern roles as well as developer roles by separating object components and services into multitiers with welldefined boundaries Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviordriven development BDD Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Extensively used Python Django Framework for developing backend of applications Implementing admin sites to manage database information with Flask Admin MySQL and SQLite Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Build SQL queries for performing various CRUD operations like create update read and delete Expertise in establishing database connections for Python by configuring packages like MySQL Python Deployed the project into Heroku using GIT version control system Creating restful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Wrote Python scripts to XML documents and load the data in the database Designed and developed application frontend GUI using JSP HTML JavaScript CSS Ajax Designed controller and business logic using SpringMVCmodule Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap Extensively developed stored procedures triggers functions and packages in oracle SQL PLSQL Used AngularJS as the development framework to build a singlepage application Utilized Python in the handling of all the hits on Django Redis and other applications Implemented SOAP using web services to interact with various devices to pull realtime data on the network Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users PYTHON DEVELOPER IBM June 2012 to April 2014 Designing mobile search application system requirements and coded backend and frontend in Django Python Authored encryption scripts Collaborated with crossfunctional teams to scope project requirements author documents etc Handled the security content and issues Created many web applications using HTML CSS and JavaScript Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Interactive in providing change requests trouble reports and requirements collection with the client As a team member I was involved in design of Employee Management software called iconnect Maintained the clientserver environment and implemented the updates successfully Created and modified required viewstablestriggers using SQL and worked on database bug fixes Developed Detail Design and Technical Design Document Designed unit Test Plans Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX and Used JQuery libraries for all clientside JavaScript manipulations Involved in Developing a Restful service using Python Flask framework Involved in the Design development test deploy and maintenance of the website Wrote validation scripts in SQL to validate data loading Hosted various companywide training sessions on Pandas RESTful Microservices To fetch data of definite options that are selected Python routines were written to log into websites Developed a web tool that monitors and drives the automated continuous integration system allowing release managers to track changes Developed a Coverity mail script that extracts code defects data per component for a daily report to drive reducing defects in the code base Built various graphs for business decision making using Python matplotlib Successfully migrated the Elasticsearch database from SQLite to MySQL to PostgreSQL with complete data integrity Education Bachelors Skills Amazon Elastic Compute Cloud 5 years Angularjs 7 years Apache Cassandra 5 years API 5 years ASTERADATA 4 years AWS 5 years Bash 5 years Bootstrap 4 years Cassandra 3 years Git 4 years HTML 7 years JIRA 6 years JQuery 6 years Machine learning 4 years Perl 5 years scripting 6 years Shell scripting 4 years SOAP 4 years SQL 5 years XML 3 years Javascript 7 years ASP 6 years jQuery 5 years CSS 5 years HTML 5 7 years MySQL 6 years PHP 6 years Additional Information SKILLS Jquery AngularJS Djanjo Mango DB My SQL Flask HTML JDBC Github XSLT CVS Cassandra MVW Shell Scripting SOAP Restful API DBF Servelets Bash Vugen Perl Pyramid Web2py Tornado Flask Bottle Turbogears Mako Jinja2 devops air flow tensor flow machine learning algorithm AI AWS EC2 Lambada EBS sys HIVE PIG OOZIE SPARK Mapreduce Sqoop XML XSD XSLT DTD DOM SAXparser Xquery JIRA Jboss Shell scripting Dojo SUN SOLARIS Bugzilla JBDC JSF WSDL GitHub Puppet Chef Anaconda Matplotlib Clear Quest Emacs Linux Ubuntu Bootstrap",
    "entities": [
        "NE",
        "Hosted",
        "Bash Implemented Multithreading",
        "Continuous Deployment Application Server",
        "AJAX",
        "Django Python Interactive",
        "GUI",
        "Dynatrace",
        "Elastic Container",
        "Agile Software Methodology",
        "IBM",
        "My SQL Flask",
        "Developed Detail Design and Technical Design Document",
        "Amazon Web Services AWS",
        "Panda",
        "TestDriven Development TDD",
        "Heroku",
        "Flask Admin MySQL",
        "SOAP",
        "XML",
        "Shell",
        "AI AWS",
        "Automated",
        "TX",
        "Amazon",
        "Python",
        "Employee Management",
        "Amazon AWS S3",
        "Developed",
        "AWS S3",
        "Dallas",
        "Created Python",
        "MVT",
        "Python Flask framework Involved",
        "Recording of Scripts Web Services",
        "GitHub Puppet Chef Anaconda",
        "JavaScript Involved",
        "API RESTful Web Service",
        "JSP",
        "Pandas RESTful Microservices",
        "FLASK Framework Developed",
        "Flask",
        "Collaborated",
        "Classification",
        "Docker",
        "RDS",
        "XML BIG DATA",
        "PyQt",
        "Oracle Database",
        "HTML CSS JavaScript JQuery",
        "Flask SQL Alchemy",
        "SQLite Performed",
        "GIT",
        "HTML CSS",
        "API",
        "PyUnit Utilized PyUnit",
        "HIVE",
        "Created",
        "Python Django Framework",
        "AWS",
        "Perl",
        "PIG",
        "HTML",
        "Elasticsearch",
        "SQL",
        "Bootstrap",
        "Artificial Intelligence Machine Learning",
        "Amazon AWS",
        "Wrote",
        "Pandas",
        "SQLite",
        "CRUD",
        "Developed AWS",
        "Build",
        "Django Python",
        "Firebug Used JIRA",
        "Python Bootstrap CSS",
        "UI",
        "JavaScript manipulations Involved",
        "Deep Learning",
        "SMTP",
        "ATT",
        "Perl Created",
        "HTML CSS Java Script",
        "Developed GUI"
    ],
    "experience": "Experience SR PYTHON DEVELOPER Berkshire Hathaway Omaha NE November 2017 to Present Designed front end and backend of the application utilizing Python on Django Web Framework For the dashboard utilized the Python web development framework TurboGear Developed user interface of the website used HTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Debug application deployments on multiple environments Wrote Python modules to view and connect the Apache Cassandra instance Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browser to web application Worked on several Palettes such as SOAP REST HTTP FTP JDBC File JMS etc Rewrite existing Python Django modules to deliver certain format of data Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Worked on integrating python with Web development tools and Web Services under linux environment Created and executed test plans using PyUnit Utilized PyUnit the Python Unit test framework for all Python applications Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Used AngularJS as the development framework to build a singlepage application Responsible for setting up AngularJS framework for UI development Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used DBIDBD for Oracle connection from Perl Created batch jobs using Unix shell scripts and Perl scripts to process database activities Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Machine learning techniques like unsupervised Classification optimization and prediction Good Knowledge on engineers for building Artificial Intelligence Machine Learning and Deep Learning capabilities in the Enterprise Services Platform Deployed and monitored scalable infrastructure on Amazon web services AWS configuration management using puppet and involved in serverside applications with Django using Python programming Responsible for the Automation of the deployment of the Conductor application on AWS lambda using highend AWS architectural components Developed AWS lambda scripts to build on demand EC2 instance formation Created the policy to migrate the logs from AWS S3 to Glacier automatically from S3 bucket PYTHON DEVELOPER ATT Dallas TX December 2015 to October 2017 Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Used Pandas and Scikitlearn libraries for statistics Analysis Used python flask framework to develop Restful APIs service Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Designed Cassandra scheme for the APIs Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Extracted data from XML files using PERLXML modules Good understanding and knowledge of Apache Airflow Wrote multiple Shell and Perl scripts for the automation of the unit testing Wrote multiple Perl programs to generate configuration files from Oracle Database Running loadendurance tests using Vugen ALM and controller server monitoring analysis using Dynatrace UNIX putty SQL logs and other tools and reporting the performance Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Design and manage API system deployment using fast http server and Amazon AWS architecture In Machine learning background and skills in data science applied research and heavyduty coding Working on with Python programming and Python libraries for data science Used Machine learning techniques like unsupervised Classification optimization and prediction PYTHON DEVELOPER McKesson San Francisco CA May 2014 to November 2015 Designing mobile search application system requirements and coded backend and frontend in Django Python Authored encryption scripts Collaborated with crossfunctional teams to scope project requirements author documents etc Handled the security content and issues Created many web applications using HTML CSS and JavaScript Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Interactive in providing change requests trouble reports and requirements collection with the client Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Used MVT pattern to encapsulate clientserver interactions helps to illustrate softwarepattern roles as well as developer roles by separating object components and services into multitiers with welldefined boundaries Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviordriven development BDD Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Extensively used Python Django Framework for developing backend of applications Implementing admin sites to manage database information with Flask Admin MySQL and SQLite Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Build SQL queries for performing various CRUD operations like create update read and delete Expertise in establishing database connections for Python by configuring packages like MySQL Python Deployed the project into Heroku using GIT version control system Creating restful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Wrote Python scripts to XML documents and load the data in the database Designed and developed application frontend GUI using JSP HTML JavaScript CSS Ajax Designed controller and business logic using SpringMVCmodule Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap Extensively developed stored procedures triggers functions and packages in oracle SQL PLSQL Used AngularJS as the development framework to build a singlepage application Utilized Python in the handling of all the hits on Django Redis and other applications Implemented SOAP using web services to interact with various devices to pull realtime data on the network Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users PYTHON DEVELOPER IBM June 2012 to April 2014 Designing mobile search application system requirements and coded backend and frontend in Django Python Authored encryption scripts Collaborated with crossfunctional teams to scope project requirements author documents etc Handled the security content and issues Created many web applications using HTML CSS and JavaScript Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Interactive in providing change requests trouble reports and requirements collection with the client As a team member I was involved in design of Employee Management software called iconnect Maintained the clientserver environment and implemented the updates successfully Created and modified required viewstablestriggers using SQL and worked on database bug fixes Developed Detail Design and Technical Design Document Designed unit Test Plans Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX and Used JQuery libraries for all clientside JavaScript manipulations Involved in Developing a Restful service using Python Flask framework Involved in the Design development test deploy and maintenance of the website Wrote validation scripts in SQL to validate data loading Hosted various companywide training sessions on Pandas RESTful Microservices To fetch data of definite options that are selected Python routines were written to log into websites Developed a web tool that monitors and drives the automated continuous integration system allowing release managers to track changes Developed a Coverity mail script that extracts code defects data per component for a daily report to drive reducing defects in the code base Built various graphs for business decision making using Python matplotlib Successfully migrated the Elasticsearch database from SQLite to MySQL to PostgreSQL with complete data integrity Education Bachelors Skills Amazon Elastic Compute Cloud 5 years Angularjs 7 years Apache Cassandra 5 years API 5 years ASTERADATA 4 years AWS 5 years Bash 5 years Bootstrap 4 years Cassandra 3 years Git 4 years HTML 7 years JIRA 6 years JQuery 6 years Machine learning 4 years Perl 5 years scripting 6 years Shell scripting 4 years SOAP 4 years SQL 5 years XML 3 years Javascript 7 years ASP 6 years jQuery 5 years CSS 5 years HTML 5 7 years MySQL 6 years PHP 6 years Additional Information SKILLS Jquery AngularJS Djanjo Mango DB My SQL Flask HTML JDBC Github XSLT CVS Cassandra MVW Shell Scripting SOAP Restful API DBF Servelets Bash Vugen Perl Pyramid Web2py Tornado Flask Bottle Turbogears Mako Jinja2 devops air flow tensor flow machine learning algorithm AI AWS EC2 Lambada EBS sys HIVE PIG OOZIE SPARK Mapreduce Sqoop XML XSD XSLT DTD DOM SAXparser Xquery JIRA Jboss Shell scripting Dojo SUN SOLARIS Bugzilla JBDC JSF WSDL GitHub Puppet Chef Anaconda Matplotlib Clear Quest Emacs Linux Ubuntu Bootstrap",
    "extracted_keywords": [
        "SR",
        "PYTHON",
        "DEVELOPER",
        "SR",
        "span",
        "lPYTHONspan",
        "span",
        "lDEVELOPERspan",
        "SR",
        "PYTHON",
        "DEVELOPER",
        "Berkshire",
        "Hathaway",
        "Omaha",
        "NE",
        "Work",
        "Experience",
        "SR",
        "PYTHON",
        "DEVELOPER",
        "Berkshire",
        "Hathaway",
        "Omaha",
        "NE",
        "November",
        "Present",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "dashboard",
        "Python",
        "web",
        "development",
        "framework",
        "TurboGear",
        "user",
        "interface",
        "website",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "Pythons",
        "modules",
        "numpy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "Debug",
        "application",
        "deployments",
        "environments",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "Rest",
        "APIs",
        "development",
        "Flask",
        "Swagger",
        "application",
        "communication",
        "server",
        "client",
        "Akka",
        "HTTP",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Multithreading",
        "module",
        "networking",
        "operations",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Python",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Used",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browser",
        "web",
        "application",
        "Palettes",
        "SOAP",
        "REST",
        "HTTP",
        "FTP",
        "JDBC",
        "File",
        "JMS",
        "Rewrite",
        "Python",
        "Django",
        "format",
        "data",
        "Develop",
        "module",
        "Django",
        "ORM",
        "queries",
        "data",
        "number",
        "databases",
        "queries",
        "amount",
        "data",
        "python",
        "Web",
        "development",
        "tools",
        "Web",
        "Services",
        "linux",
        "environment",
        "test",
        "plans",
        "PyUnit",
        "Utilized",
        "PyUnit",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "applications",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "framework",
        "UI",
        "development",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "DBIDBD",
        "Oracle",
        "connection",
        "Perl",
        "batch",
        "jobs",
        "Unix",
        "shell",
        "scripts",
        "Perl",
        "scripts",
        "database",
        "activities",
        "Recording",
        "Scripts",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "SoapUI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "machine",
        "solutions",
        "Python",
        "millions",
        "Twitter",
        "users",
        "data",
        "product",
        "Machine",
        "techniques",
        "Classification",
        "optimization",
        "prediction",
        "Good",
        "Knowledge",
        "engineers",
        "Artificial",
        "Intelligence",
        "Machine",
        "Learning",
        "Deep",
        "Learning",
        "capabilities",
        "Enterprise",
        "Services",
        "Platform",
        "Deployed",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "puppet",
        "serverside",
        "applications",
        "Django",
        "Python",
        "programming",
        "Automation",
        "deployment",
        "Conductor",
        "application",
        "AWS",
        "lambda",
        "highend",
        "AWS",
        "components",
        "AWS",
        "lambda",
        "scripts",
        "demand",
        "EC2",
        "instance",
        "formation",
        "policy",
        "logs",
        "AWS",
        "S3",
        "Glacier",
        "S3",
        "bucket",
        "PYTHON",
        "DEVELOPER",
        "ATT",
        "Dallas",
        "TX",
        "December",
        "October",
        "IDE",
        "tool",
        "application",
        "JIRA",
        "bug",
        "issue",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "GIT",
        "team",
        "development",
        "Developed",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "DB",
        "package",
        "information",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "application",
        "deployment",
        "cloud",
        "Docker",
        "technology",
        "Elastic",
        "Container",
        "service",
        "scheduler",
        "Pandas",
        "Scikitlearn",
        "libraries",
        "statistics",
        "Analysis",
        "python",
        "flask",
        "framework",
        "APIs",
        "service",
        "Python",
        "Bash",
        "scripts",
        "increase",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "Cassandra",
        "scheme",
        "APIs",
        "Django",
        "CMS",
        "promotion",
        "management",
        "system",
        "ability",
        "forms",
        "admin",
        "interface",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "Monitoring",
        "playbooks",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "Python",
        "modules",
        "eg",
        "csv",
        "robot",
        "parser",
        "iter",
        "tools",
        "jinja2",
        "lxml",
        "development",
        "frontend",
        "modules",
        "Python",
        "FLASK",
        "Framework",
        "custom",
        "screens",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Jinja",
        "Angularjs",
        "data",
        "XML",
        "files",
        "PERLXML",
        "modules",
        "understanding",
        "knowledge",
        "Apache",
        "Airflow",
        "Shell",
        "Perl",
        "scripts",
        "automation",
        "unit",
        "testing",
        "Wrote",
        "Perl",
        "programs",
        "configuration",
        "files",
        "Oracle",
        "Database",
        "loadendurance",
        "tests",
        "Vugen",
        "ALM",
        "controller",
        "server",
        "monitoring",
        "analysis",
        "Dynatrace",
        "UNIX",
        "putty",
        "SQL",
        "logs",
        "tools",
        "performance",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Design",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Machine",
        "background",
        "skills",
        "data",
        "science",
        "research",
        "heavyduty",
        "Working",
        "Python",
        "programming",
        "Python",
        "libraries",
        "data",
        "science",
        "Machine",
        "techniques",
        "Classification",
        "optimization",
        "prediction",
        "PYTHON",
        "DEVELOPER",
        "McKesson",
        "San",
        "Francisco",
        "CA",
        "May",
        "November",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Python",
        "Authored",
        "encryption",
        "scripts",
        "teams",
        "project",
        "requirements",
        "author",
        "documents",
        "security",
        "content",
        "issues",
        "web",
        "applications",
        "HTML",
        "CSS",
        "JavaScript",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Python",
        "Interactive",
        "change",
        "requests",
        "trouble",
        "reports",
        "requirements",
        "collection",
        "client",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "MVT",
        "pattern",
        "interactions",
        "roles",
        "developer",
        "roles",
        "object",
        "components",
        "services",
        "multitiers",
        "boundaries",
        "tools",
        "Python",
        "Shell",
        "XML",
        "BIG",
        "DATA",
        "tasks",
        "PyQt",
        "functionality",
        "filtering",
        "columns",
        "customers",
        "transactions",
        "statements",
        "navigation",
        "rules",
        "application",
        "page",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Web",
        "development",
        "programming",
        "engineering",
        "Django",
        "Web",
        "Server",
        "Gateway",
        "Interface",
        "WSGI",
        "SQL",
        "admin",
        "tools",
        "Behaviordriven",
        "development",
        "BDD",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Python",
        "Django",
        "Framework",
        "backend",
        "applications",
        "admin",
        "sites",
        "database",
        "information",
        "Flask",
        "Admin",
        "MySQL",
        "SQLite",
        "delivery",
        "code",
        "principles",
        "TestDriven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Expertise",
        "database",
        "connections",
        "Python",
        "packages",
        "MySQL",
        "Python",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "application",
        "frontend",
        "GUI",
        "JSP",
        "HTML",
        "JavaScript",
        "CSS",
        "Ajax",
        "controller",
        "business",
        "logic",
        "forms",
        "HTML",
        "validations",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "procedures",
        "functions",
        "packages",
        "oracle",
        "SQL",
        "PLSQL",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "Python",
        "handling",
        "hits",
        "Django",
        "Redis",
        "applications",
        "SOAP",
        "web",
        "services",
        "devices",
        "data",
        "network",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Developed",
        "Perl",
        "Shell",
        "scripts",
        "upload",
        "data",
        "feed",
        "database",
        "reports",
        "Perl",
        "end",
        "users",
        "PYTHON",
        "DEVELOPER",
        "IBM",
        "June",
        "April",
        "Designing",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Python",
        "Authored",
        "encryption",
        "scripts",
        "teams",
        "project",
        "requirements",
        "author",
        "documents",
        "security",
        "content",
        "issues",
        "web",
        "applications",
        "HTML",
        "CSS",
        "JavaScript",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Python",
        "Interactive",
        "change",
        "requests",
        "trouble",
        "reports",
        "requirements",
        "collection",
        "client",
        "team",
        "member",
        "design",
        "Employee",
        "Management",
        "software",
        "iconnect",
        "clientserver",
        "environment",
        "updates",
        "viewstablestriggers",
        "SQL",
        "database",
        "bug",
        "fixes",
        "Detail",
        "Design",
        "Technical",
        "Design",
        "Document",
        "unit",
        "Test",
        "Plans",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "JQuery",
        "libraries",
        "JavaScript",
        "manipulations",
        "service",
        "Python",
        "Flask",
        "framework",
        "Design",
        "development",
        "test",
        "deploy",
        "maintenance",
        "website",
        "validation",
        "scripts",
        "SQL",
        "data",
        "loading",
        "companywide",
        "training",
        "sessions",
        "Pandas",
        "Microservices",
        "data",
        "options",
        "Python",
        "routines",
        "websites",
        "web",
        "tool",
        "integration",
        "system",
        "release",
        "managers",
        "changes",
        "Coverity",
        "mail",
        "script",
        "code",
        "defects",
        "data",
        "component",
        "report",
        "defects",
        "code",
        "base",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "Elasticsearch",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Education",
        "Bachelors",
        "Skills",
        "Amazon",
        "Elastic",
        "Compute",
        "Cloud",
        "years",
        "Angularjs",
        "years",
        "Apache",
        "Cassandra",
        "years",
        "API",
        "years",
        "ASTERADATA",
        "years",
        "AWS",
        "years",
        "Bash",
        "years",
        "Bootstrap",
        "years",
        "Cassandra",
        "years",
        "Git",
        "years",
        "HTML",
        "years",
        "JIRA",
        "years",
        "JQuery",
        "years",
        "Machine",
        "years",
        "Perl",
        "years",
        "years",
        "Shell",
        "years",
        "SOAP",
        "years",
        "SQL",
        "years",
        "XML",
        "years",
        "Javascript",
        "years",
        "ASP",
        "years",
        "jQuery",
        "years",
        "CSS",
        "years",
        "HTML",
        "years",
        "MySQL",
        "years",
        "PHP",
        "years",
        "Information",
        "SKILLS",
        "Jquery",
        "Djanjo",
        "Mango",
        "DB",
        "SQL",
        "Flask",
        "HTML",
        "JDBC",
        "Github",
        "XSLT",
        "CVS",
        "Cassandra",
        "MVW",
        "Shell",
        "Scripting",
        "SOAP",
        "API",
        "DBF",
        "Servelets",
        "Bash",
        "Vugen",
        "Perl",
        "Pyramid",
        "Web2py",
        "Tornado",
        "Flask",
        "Bottle",
        "Turbogears",
        "Mako",
        "Jinja2",
        "air",
        "flow",
        "tensor",
        "flow",
        "machine",
        "algorithm",
        "AI",
        "AWS",
        "EC2",
        "Lambada",
        "EBS",
        "sys",
        "HIVE",
        "PIG",
        "OOZIE",
        "SPARK",
        "Mapreduce",
        "Sqoop",
        "XML",
        "XSD",
        "XSLT",
        "DTD",
        "DOM",
        "SAXparser",
        "Xquery",
        "JIRA",
        "Jboss",
        "Shell",
        "Dojo",
        "SUN",
        "SOLARIS",
        "Bugzilla",
        "JBDC",
        "JSF",
        "WSDL",
        "GitHub",
        "Puppet",
        "Chef",
        "Anaconda",
        "Matplotlib",
        "Clear",
        "Quest",
        "Emacs",
        "Linux",
        "Ubuntu",
        "Bootstrap"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:07:26.721210",
    "resume_data": "SR PYTHON DEVELOPER SR span lPYTHONspan span lDEVELOPERspan SR PYTHON DEVELOPER Berkshire Hathaway Omaha NE Work Experience SR PYTHON DEVELOPER Berkshire Hathaway Omaha NE November 2017 to Present Designed front end and backend of the application utilizing Python on Django Web Framework For the dashboard utilized the Python web development framework TurboGear Developed user interface of the website used HTML CSS Java Script and AJAX Used the Pythons modules numpy matplotlib etc for generating complex graphical data creation of histograms etc Debug application deployments on multiple environments Wrote Python modules to view and connect the Apache Cassandra instance Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browser to web application Worked on several Palettes such as SOAP REST HTTP FTP JDBC File JMS etc Rewrite existing Python Django modules to deliver certain format of data Develop module to build Django ORM queries that can preload data to greatly reduce the number of databases queries needed to retrieve the same amount of data Worked on integrating python with Web development tools and Web Services under linux environment Created and executed test plans using PyUnit Utilized PyUnit the Python Unit test framework for all Python applications Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Used AngularJS as the development framework to build a singlepage application Responsible for setting up AngularJS framework for UI development Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used DBIDBD for Oracle connection from Perl Created batch jobs using Unix shell scripts and Perl scripts to process database activities Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Designed and deployed machine learning solutions in Python to classify millions of previously unclassified Twitter users into core data product Used Machine learning techniques like unsupervised Classification optimization and prediction Good Knowledge on engineers for building Artificial Intelligence Machine Learning and Deep Learning capabilities in the Enterprise Services Platform Deployed and monitored scalable infrastructure on Amazon web services AWS configuration management using puppet and involved in serverside applications with Django using Python programming Responsible for the Automation of the deployment of the Conductor application on AWS lambda using highend AWS architectural components Developed AWS lambda scripts to build on demand EC2 instance formation Created the policy to migrate the logs from AWS S3 to Glacier automatically from S3 bucket PYTHON DEVELOPER ATT Dallas TX December 2015 to October 2017 Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Used Pandas and Scikitlearn libraries for statistics Analysis Used python flask framework to develop Restful APIs service Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Designed Cassandra scheme for the APIs Developed a Django CMS based promotion management system offering the ability to created arbitrary forms through an admin interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Extracted data from XML files using PERLXML modules Good understanding and knowledge of Apache Airflow Wrote multiple Shell and Perl scripts for the automation of the unit testing Wrote multiple Perl programs to generate configuration files from Oracle Database Running loadendurance tests using Vugen ALM and controller server monitoring analysis using Dynatrace UNIX putty SQL logs and other tools and reporting the performance Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Design and manage API system deployment using fast http server and Amazon AWS architecture In Machine learning background and skills in data science applied research and heavyduty coding Working on with Python programming and Python libraries for data science Used Machine learning techniques like unsupervised Classification optimization and prediction PYTHON DEVELOPER McKesson San Francisco CA May 2014 to November 2015 Designing mobile search application system requirements and coded backend and frontend in Django Python Authored encryption scripts Collaborated with crossfunctional teams to scope project requirements author documents etc Handled the security content and issues Created many web applications using HTML CSS and JavaScript Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Interactive in providing change requests trouble reports and requirements collection with the client Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Used MVT pattern to encapsulate clientserver interactions helps to illustrate softwarepattern roles as well as developer roles by separating object components and services into multitiers with welldefined boundaries Developed tools using Python Shell scripting XML BIG DATA to automate some of the menial tasks Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Django configuration to manage URLs and application parameters Involved in Web development programming and engineering Django Web Server Gateway Interface WSGI and SQL internal admin tools behave Behaviordriven development BDD Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Extensively used Python Django Framework for developing backend of applications Implementing admin sites to manage database information with Flask Admin MySQL and SQLite Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Build SQL queries for performing various CRUD operations like create update read and delete Expertise in establishing database connections for Python by configuring packages like MySQL Python Deployed the project into Heroku using GIT version control system Creating restful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Wrote Python scripts to XML documents and load the data in the database Designed and developed application frontend GUI using JSP HTML JavaScript CSS Ajax Designed controller and business logic using SpringMVCmodule Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap Extensively developed stored procedures triggers functions and packages in oracle SQL PLSQL Used AngularJS as the development framework to build a singlepage application Utilized Python in the handling of all the hits on Django Redis and other applications Implemented SOAP using web services to interact with various devices to pull realtime data on the network Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Developed Perl and Shell scripts for upload of data feed into database Developed reports in Perl for our end users PYTHON DEVELOPER IBM June 2012 to April 2014 Designing mobile search application system requirements and coded backend and frontend in Django Python Authored encryption scripts Collaborated with crossfunctional teams to scope project requirements author documents etc Handled the security content and issues Created many web applications using HTML CSS and JavaScript Involved in designing mobile search application system requirements and coded backend and frontend in Django Python Interactive in providing change requests trouble reports and requirements collection with the client As a team member I was involved in design of Employee Management software called iconnect Maintained the clientserver environment and implemented the updates successfully Created and modified required viewstablestriggers using SQL and worked on database bug fixes Developed Detail Design and Technical Design Document Designed unit Test Plans Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed the presentation layer using HTML CSS JavaScript JQuery and AJAX and Used JQuery libraries for all clientside JavaScript manipulations Involved in Developing a Restful service using Python Flask framework Involved in the Design development test deploy and maintenance of the website Wrote validation scripts in SQL to validate data loading Hosted various companywide training sessions on Pandas RESTful Microservices To fetch data of definite options that are selected Python routines were written to log into websites Developed a web tool that monitors and drives the automated continuous integration system allowing release managers to track changes Developed a Coverity mail script that extracts code defects data per component for a daily report to drive reducing defects in the code base Built various graphs for business decision making using Python matplotlib Successfully migrated the Elasticsearch database from SQLite to MySQL to PostgreSQL with complete data integrity Education Bachelors Skills Amazon Elastic Compute Cloud 5 years Angularjs 7 years Apache Cassandra 5 years API 5 years ASTERADATA 4 years AWS 5 years Bash 5 years Bootstrap 4 years Cassandra 3 years Git 4 years HTML 7 years JIRA 6 years JQuery 6 years Machine learning 4 years Perl 5 years scripting 6 years Shell scripting 4 years SOAP 4 years SQL 5 years XML 3 years Javascript 7 years ASP 6 years jQuery 5 years CSS 5 years HTML 5 7 years MySQL 6 years PHP 6 years Additional Information SKILLS Jquery AngularJS Djanjo Mango DB My SQL Flask HTML JDBC Github XSLT CVS Cassandra MVW Shell Scripting SOAP Restful API DBF Servelets Bash Vugen Perl Pyramid Web2py Tornado Flask Bottle Turbogears Mako Jinja2 devops air flow tensor flow machine learning algorithm AI AWS EC2 Lambada EBS sys HIVE PIG OOZIE SPARK Mapreduce Sqoop XML XSD XSLT DTD DOM SAXparser Xquery JIRA Jboss Shell scripting Dojo SUN SOLARIS Bugzilla JBDC JSF WSDL GitHub Puppet Chef Anaconda Matplotlib Clear Quest Emacs Linux Ubuntu Bootstrap",
    "unique_id": "b27bbac3-5f98-4ca5-b92a-b6ded80a7d25"
}