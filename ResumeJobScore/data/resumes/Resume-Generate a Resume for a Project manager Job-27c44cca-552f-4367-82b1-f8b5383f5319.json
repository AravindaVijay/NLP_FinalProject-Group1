{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer PROFESSIONAL EXPERIRNECE San Francisco CA 6 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python Django in various domains Experienced in WAMP Windows Apache MYSQL Python Experienced with full software development lifecycle SDLC architecting scalable platforms objectoriented programming OOPs database design Experience in developing webbased applications using Python 3536 Django 17 Good experience of software development in Python libraries used NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Bootstrap CSS JavaScript JDBC XML Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Experienced in MVC frameworks like Django Java Script jQuery Worked on Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Good experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpsCenter and custom scripts Good Knowledge of web services using SOAP and REST protocols Used Django as a proxy to interact with Rest services and also interacting with Database Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Good knowledge of version control software CVS GitHub Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Deployed production site using Apache 20 with mod python Experienced in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on experience with bug tracking tools JIRA and Bugzilla Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Skilled in debuggingtroubleshooting issues in complex applications Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Reviewed requirement documents with the business and development team to understand the architecture and functionality of the application and consolidated these requirements in appropriate modules in Test strategy Experienced in Unit testing Integration testing User acceptance testing Functional testing Experienced in Requirement gathering use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Authorized to work in the US for any employer Work Experience Python Developer PROFESSIONAL EXPERIRNECE February 2018 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and JavaScripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Incomm Alphareretta GA October 2016 to January 2018 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Installed setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsofts ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Created Data tables utilizing PyQt display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP jQuery JavaScript PyCharm Python Developer Bloomin Brands Tampa FL February 2015 to September 2016 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts for API Integration Recording of Scripts Web Web Services HTML SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27  Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv xml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript and jQuery calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Worked extensively with JavaScript and jQuery to optimize the user experience Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python Django Cassandra SoapUI REST API Bash PyDev Spyder Python Developer Cyient May 2014 to November 2014 Responsibilities Translated the customer requirements into design specifications and ensured that the requirements translate into software solution Application was based on serviceoriented architecture and used Python 25 Django 15 Ajax HTML CSS for the frontend Designed the front end of the application using Python HTML CSS AJAX JSON and jQuery Worked on backend of the application mainly using Active Records Developed and designed an API RESTful Web Service Used the Python language to develop webbased data retrieval systems Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed web sites using Django Python XHTML CSS and JavaScript Developed and designed email marketing campaigns using HTML and CSS Tested and implemented applications built using Python Developed and tested many features for dashboard using Python CSS and JavaScript Created complex dynamic HTML UI using jQuery Automated Regression analysis for determining fund returns based on index returns PythonExcel Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Developed serverbased web traffic statistical analysis tool using Flask Pandas Implemented and tested pythonbased web applications interacting with MySQL Simple web app for reviewing sitcoms that gives users the ability to view add review updown vote search etc Environment Linux Python Mod Python MySQL JavaScript Ajax Shell Script HTML CSS Software Developer Precision IT Solutions Pvt Ltd January 2012 to March 2014 Responsibilities Analyzed the system requirement specifications and in client interaction during requirements specifications Providing daily reports to the Development Manager and participate in both the design phase and the development phase Utilized Agile Methodology and SCRUM Process Implemented code in Python to retrieve and manipulate data Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed dynamic web pages using Python Django frameworks and Used Django APIs for database access Utilized PyUnit the Python unit test framework for all Python applications Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Developed entire frontend and backend modules using Python on Django Web Framework Designed and implemented an application for managing customers purchases and invoices Created RESTful http services to interact with UI Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization End to end testing of the applications Reengineered various modules for implementing changes and created efficient system Maintained program libraries users manuals and technical documentation Environment Python Django RESTful Linux HTML5 CSS3 Bootstrap JavaScript jQuery AJAX MySQL Shell JIRA GIT Education Masters Skills CSS 6 years HTML 6 years JQuery 6 years MySQL 6 years Python 6 years C Javascript Django Additional Information Technical skills Operating Systems Unix Linux Windows and Mac Programming Languages Java C C Python 332724 Scripting Languages CSS Java Script JQuery Shell Scripting Markup languages HTML XML JSON Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 Python Libraries Beautiful Soup numpy matplotlib pythontwitter Pandas data frame urllib2 Databases Oracle 1011g MySQL SQL Server and PostgreSQL Servers Apache Tomcat IBM Web sphere RESTful web services Tools Intellij PyCharm FileZilla PLSQL Developer and TOAD Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and VersionOne Methodologies tools Object Oriented Programming UML Agile Scrum",
    "entities": [
        "Flashvars",
        "GUI",
        "ORMsDOMs",
        "jQuery Worked",
        "Node XL",
        "Interfacing",
        "Working",
        "MVTMVC",
        "jQuery Automated Regression",
        "IBM",
        "Panda",
        "XML",
        "SOAP",
        "Microsofts ISA",
        "Maintained",
        "Shell",
        "Tampa",
        "Amazon",
        "HTML Created Business Logic",
        "Python",
        "API Integration Recording of Scripts Web Web Services",
        "NagiosOpsCenter",
        "Bugzilla Planning",
        "Amazon AWS S3",
        "Developed",
        "Stored Procedures",
        "Present Responsibilities Responsible",
        "Bash",
        "Reengineered",
        "Django",
        "Work Experience Python Developer PROFESSIONAL EXPERIRNECE",
        "Shell Scripting AWS",
        "UML",
        "Django Websites Created",
        "AJAX Managed",
        "jQuery Developed",
        "API RESTful Web Service",
        "Created Data",
        "Mac Programming Languages",
        "JDBC MySQL Python Successfully",
        "HTML CSS JavaScript XML",
        "RDS",
        "XML SOAP web Service",
        "Views",
        "Created a",
        "PyQt",
        "HTML UI",
        "MVC",
        "Flask SQL Alchemy",
        "PythonDjango",
        "US",
        "HTML CSS JavaScript",
        "Created",
        "WAMP Windows Apache",
        "UI Worked",
        "HTML",
        "SQL",
        "lPythonspan",
        "Database Administration",
        "Administrators",
        "SQL Python",
        "HTML Bootstrap CSS",
        "Analysis Design Development Testing Customization Bug",
        "Wireshark",
        "Using Django",
        "Utilized Python",
        "CSS Tested",
        "Pandas",
        "Utilized Agile Methodology",
        "SQLite",
        "FL",
        "cat5",
        "JavaScript Created",
        "Performed",
        "Created UI",
        "PEP Guidelines",
        "Djangos",
        "Cisco",
        "Django Python",
        "JavaScript",
        "UI",
        "Amazon SQS Experienced",
        "Data Layer and Search",
        "Database Excellent",
        "Shell JIRA GIT Education Masters Skills CSS",
        "Utilized PyUnit",
        "CSS",
        "CMS",
        "Javascript Django Additional Information Technical",
        "jQuery",
        "VersionOne Methodologies",
        "Amazon Cloud Created Data",
        "PHP",
        "Application",
        "HTMLCSSjQuery",
        "Unit",
        "EBS",
        "DHCP",
        "the Flash Good Experience"
    ],
    "experience": "Experience in developing webbased applications using Python 3536 Django 17 Good experience of software development in Python libraries used NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Bootstrap CSS JavaScript JDBC XML Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Experienced in MVC frameworks like Django Java Script jQuery Worked on Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Good experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpsCenter and custom scripts Good Knowledge of web services using SOAP and REST protocols Used Django as a proxy to interact with Rest services and also interacting with Database Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Good knowledge of version control software CVS GitHub Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Deployed production site using Apache 20 with mod python Experienced in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on experience with bug tracking tools JIRA and Bugzilla Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Skilled in debuggingtroubleshooting issues in complex applications Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Reviewed requirement documents with the business and development team to understand the architecture and functionality of the application and consolidated these requirements in appropriate modules in Test strategy Experienced in Unit testing Integration testing User acceptance testing Functional testing Experienced in Requirement gathering use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Authorized to work in the US for any employer Work Experience Python Developer PROFESSIONAL EXPERIRNECE February 2018 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and JavaScripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Incomm Alphareretta GA October 2016 to January 2018 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Installed setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsofts ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Created Data tables utilizing PyQt display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP jQuery JavaScript PyCharm Python Developer Bloomin Brands Tampa FL February 2015 to September 2016 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts for API Integration Recording of Scripts Web Web Services HTML SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27   Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv xml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript and jQuery calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Worked extensively with JavaScript and jQuery to optimize the user experience Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python Django Cassandra SoapUI REST API Bash PyDev Spyder Python Developer Cyient May 2014 to November 2014 Responsibilities Translated the customer requirements into design specifications and ensured that the requirements translate into software solution Application was based on serviceoriented architecture and used Python 25 Django 15 Ajax HTML CSS for the frontend Designed the front end of the application using Python HTML CSS AJAX JSON and jQuery Worked on backend of the application mainly using Active Records Developed and designed an API RESTful Web Service Used the Python language to develop webbased data retrieval systems Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed web sites using Django Python XHTML CSS and JavaScript Developed and designed email marketing campaigns using HTML and CSS Tested and implemented applications built using Python Developed and tested many features for dashboard using Python CSS and JavaScript Created complex dynamic HTML UI using jQuery Automated Regression analysis for determining fund returns based on index returns PythonExcel Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Developed serverbased web traffic statistical analysis tool using Flask Pandas Implemented and tested pythonbased web applications interacting with MySQL Simple web app for reviewing sitcoms that gives users the ability to view add review updown vote search etc Environment Linux Python Mod Python MySQL JavaScript Ajax Shell Script HTML CSS Software Developer Precision IT Solutions Pvt Ltd January 2012 to March 2014 Responsibilities Analyzed the system requirement specifications and in client interaction during requirements specifications Providing daily reports to the Development Manager and participate in both the design phase and the development phase Utilized Agile Methodology and SCRUM Process Implemented code in Python to retrieve and manipulate data Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed dynamic web pages using Python Django frameworks and Used Django APIs for database access Utilized PyUnit the Python unit test framework for all Python applications Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Developed entire frontend and backend modules using Python on Django Web Framework Designed and implemented an application for managing customers purchases and invoices Created RESTful http services to interact with UI Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization End to end testing of the applications Reengineered various modules for implementing changes and created efficient system Maintained program libraries users manuals and technical documentation Environment Python Django RESTful Linux HTML5 CSS3 Bootstrap JavaScript jQuery AJAX MySQL Shell JIRA GIT Education Masters Skills CSS 6 years HTML 6 years JQuery 6 years MySQL 6 years Python 6 years C Javascript Django Additional Information Technical skills Operating Systems Unix Linux Windows and Mac Programming Languages Java C C Python 332724 Scripting Languages CSS Java Script JQuery Shell Scripting Markup languages HTML XML JSON Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 Python Libraries Beautiful Soup numpy matplotlib pythontwitter Pandas data frame urllib2 Databases Oracle 1011 g MySQL SQL Server and PostgreSQL Servers Apache Tomcat IBM Web sphere RESTful web services Tools Intellij PyCharm FileZilla PLSQL Developer and TOAD Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and VersionOne Methodologies tools Object Oriented Programming UML Agile Scrum",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "PROFESSIONAL",
        "San",
        "Francisco",
        "CA",
        "Years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Customization",
        "Bug",
        "fixes",
        "Enhancement",
        "Support",
        "Implementation",
        "web",
        "standalone",
        "enterprise",
        "applications",
        "Python",
        "Django",
        "domains",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "Python",
        "software",
        "development",
        "lifecycle",
        "SDLC",
        "platforms",
        "programming",
        "OOPs",
        "database",
        "design",
        "Experience",
        "applications",
        "Python",
        "Django",
        "experience",
        "software",
        "development",
        "Python",
        "NumPy",
        "SciPy",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "PyCharm",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "HTML",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JDBC",
        "XML",
        "Python",
        "Django",
        "Good",
        "experience",
        "web",
        "applications",
        "MVTMVC",
        "architecture",
        "Django",
        "MVC",
        "frameworks",
        "Django",
        "Java",
        "Script",
        "jQuery",
        "Cloud",
        "Computing",
        "EC2",
        "RDS",
        "S3",
        "Glacier",
        "SQS",
        "SNS",
        "Cloud",
        "Formation",
        "VPC",
        "IAM",
        "Route",
        "EBS",
        "DynamoDB",
        "Lambada",
        "Redshift",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "Good",
        "Experience",
        "Linux",
        "Bash",
        "PEP",
        "Guidelines",
        "Python",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "experience",
        "Amazon",
        "Cloud",
        "EC2",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Amazon",
        "SQS",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "Postgres",
        "Neo4J",
        "MongoDB",
        "Cassandra",
        "SQLite",
        "custom",
        "queries",
        "database",
        "connectors",
        "Expertise",
        "database",
        "connections",
        "Python",
        "packages",
        "JDBC",
        "MySQL",
        "Python",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Configure",
        "backup",
        "repairs",
        "monitoring",
        "Cassandra",
        "clusters",
        "conjunction",
        "NagiosOpsCenter",
        "custom",
        "scripts",
        "Good",
        "Knowledge",
        "web",
        "services",
        "SOAP",
        "REST",
        "protocols",
        "Django",
        "proxy",
        "Rest",
        "services",
        "Database",
        "Excellent",
        "Experience",
        "knowledge",
        "XML",
        "SOAP",
        "web",
        "Service",
        "inter",
        "software",
        "applications",
        "knowledge",
        "version",
        "control",
        "software",
        "CVS",
        "GitHub",
        "Efficient",
        "phases",
        "software",
        "development",
        "life",
        "cycle",
        "requirements",
        "design",
        "architecture",
        "development",
        "testing",
        "production",
        "site",
        "Apache",
        "mod",
        "python",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Hands",
        "experience",
        "bug",
        "tracking",
        "tools",
        "JIRA",
        "Bugzilla",
        "Skilled",
        "writing",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "issues",
        "applications",
        "Experience",
        "Database",
        "Administration",
        "development",
        "design",
        "maintenance",
        "production",
        "support",
        "databases",
        "business",
        "applications",
        "server",
        "setup",
        "MySQL",
        "Server",
        "installation",
        "upgrade",
        "migration",
        "requirement",
        "documents",
        "business",
        "development",
        "team",
        "architecture",
        "functionality",
        "application",
        "requirements",
        "modules",
        "Test",
        "strategy",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "Requirement",
        "gathering",
        "use",
        "case",
        "development",
        "Business",
        "Process",
        "Business",
        "Process",
        "Modeling",
        "UML",
        "use",
        "cases",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "PROFESSIONAL",
        "EXPERIRNECE",
        "February",
        "Present",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "web",
        "applications",
        "Django",
        "Framework",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modelling",
        "data",
        "import",
        "export",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "knowledge",
        "end",
        "tools",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "Angularjs",
        "AJAX",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "JavaScripts",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Performed",
        "data",
        "extraction",
        "manipulation",
        "datasets",
        "SQL",
        "Python",
        "tools",
        "Python",
        "libraries",
        "SQL",
        "queriessubqueries",
        "datasets",
        "statistics",
        "tables",
        "figures",
        "charts",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Version",
        "control",
        "GITHub",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "language",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Python",
        "Developer",
        "Incomm",
        "Alphareretta",
        "GA",
        "October",
        "January",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Python",
        "NumPy",
        "matplotlib",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Used",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Parsers",
        "Python",
        "data",
        "design",
        "data",
        "base",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "setup",
        "Cisco",
        "TCPIP",
        "intranetwork",
        "access",
        "point",
        "network",
        "area",
        "network",
        "WiFi",
        "Hardware",
        "installation",
        "patch",
        "panels",
        "fiber",
        "optic",
        "connectivity",
        "hubs",
        "cat5",
        "RJ45",
        "connectors",
        "Setup",
        "Windows",
        "clients",
        "PC",
        "kiosks",
        "hospital",
        "Windows",
        "XP",
        "workstations",
        "software",
        "configuration",
        "TCPIP",
        "network",
        "interface",
        "cards",
        "internet",
        "security",
        "acceleration",
        "network",
        "Microsofts",
        "ISA",
        "server",
        "test",
        "cases",
        "Data",
        "Layer",
        "Search",
        "server",
        "classes",
        "Django",
        "XML",
        "base",
        "services",
        "MongoDB",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "MongoDB",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "reports",
        "package",
        "NumPy",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "display",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "party",
        "jQuerybased",
        "plugins",
        "Data",
        "tables",
        "JavaScript",
        "Form",
        "Submit",
        "UI",
        "elements",
        "development",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "MySQL",
        "AJAX",
        "SOAP",
        "jQuery",
        "JavaScript",
        "PyCharm",
        "Python",
        "Developer",
        "Bloomin",
        "Brands",
        "Tampa",
        "FL",
        "February",
        "September",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "API",
        "Integration",
        "Recording",
        "Scripts",
        "Web",
        "Web",
        "Services",
        "HTML",
        "SoapUI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "Scripting",
        "web",
        "web",
        "services",
        "Application",
        "architecture",
        "Python",
        "HTML",
        "CSS",
        "frontend",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Django",
        "Python",
        "NodeJS",
        "infrastructure",
        "services",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "Python",
        "modules",
        "eg",
        "csv",
        "xml",
        "development",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "standards",
        "code",
        "performance",
        "applications",
        "use",
        "design",
        "patterns",
        "Front",
        "Controller",
        "DAO",
        "scale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "JavaScript",
        "jQuery",
        "user",
        "experience",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "operations",
        "calculation",
        "purpose",
        "python",
        "libraries",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Planning",
        "test",
        "cases",
        "automation",
        "test",
        "cases",
        "Environment",
        "Python",
        "Django",
        "Cassandra",
        "SoapUI",
        "REST",
        "API",
        "Bash",
        "PyDev",
        "Spyder",
        "Python",
        "Developer",
        "Cyient",
        "May",
        "November",
        "Responsibilities",
        "customer",
        "requirements",
        "design",
        "specifications",
        "requirements",
        "software",
        "solution",
        "Application",
        "architecture",
        "Python",
        "Django",
        "Ajax",
        "HTML",
        "CSS",
        "frontend",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "jQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "Developed",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Python",
        "language",
        "data",
        "retrieval",
        "systems",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "web",
        "sites",
        "Django",
        "Python",
        "XHTML",
        "CSS",
        "JavaScript",
        "Developed",
        "email",
        "marketing",
        "campaigns",
        "HTML",
        "CSS",
        "applications",
        "Python",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "CSS",
        "JavaScript",
        "HTML",
        "UI",
        "jQuery",
        "Automated",
        "Regression",
        "analysis",
        "fund",
        "returns",
        "index",
        "returns",
        "PythonExcel",
        "development",
        "SQL",
        "procedures",
        "trigger",
        "function",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Developed",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "web",
        "applications",
        "MySQL",
        "Simple",
        "web",
        "app",
        "sitcoms",
        "users",
        "ability",
        "review",
        "vote",
        "search",
        "Environment",
        "Linux",
        "Python",
        "Mod",
        "Python",
        "MySQL",
        "JavaScript",
        "Ajax",
        "Shell",
        "Script",
        "HTML",
        "CSS",
        "Software",
        "Developer",
        "Precision",
        "IT",
        "Solutions",
        "Pvt",
        "Ltd",
        "January",
        "March",
        "Responsibilities",
        "system",
        "requirement",
        "specifications",
        "client",
        "interaction",
        "requirements",
        "specifications",
        "reports",
        "Development",
        "Manager",
        "design",
        "phase",
        "development",
        "phase",
        "Agile",
        "Methodology",
        "SCRUM",
        "Process",
        "code",
        "Python",
        "manipulate",
        "data",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "web",
        "pages",
        "Python",
        "Django",
        "frameworks",
        "Django",
        "APIs",
        "database",
        "access",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "application",
        "customers",
        "purchases",
        "invoices",
        "http",
        "services",
        "UI",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "End",
        "testing",
        "applications",
        "modules",
        "changes",
        "system",
        "program",
        "users",
        "manuals",
        "documentation",
        "Environment",
        "Python",
        "Django",
        "RESTful",
        "Linux",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "AJAX",
        "MySQL",
        "Shell",
        "JIRA",
        "GIT",
        "Education",
        "Masters",
        "Skills",
        "CSS",
        "years",
        "HTML",
        "years",
        "JQuery",
        "years",
        "MySQL",
        "years",
        "Python",
        "years",
        "C",
        "Javascript",
        "Django",
        "Additional",
        "Information",
        "Technical",
        "skills",
        "Operating",
        "Systems",
        "Unix",
        "Linux",
        "Windows",
        "Mac",
        "Programming",
        "Languages",
        "Java",
        "C",
        "C",
        "Python",
        "Scripting",
        "Languages",
        "CSS",
        "Java",
        "Script",
        "JQuery",
        "Shell",
        "Scripting",
        "Markup",
        "HTML",
        "XML",
        "JSON",
        "Analytics",
        "Tools",
        "JMP",
        "PRO",
        "SAS",
        "Tableau",
        "UCI",
        "NET",
        "Node",
        "XL",
        "MVC3",
        "Python",
        "Beautiful",
        "Soup",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "urllib2",
        "Oracle",
        "g",
        "MySQL",
        "SQL",
        "Server",
        "PostgreSQL",
        "Servers",
        "Apache",
        "Tomcat",
        "IBM",
        "Web",
        "sphere",
        "web",
        "services",
        "Tools",
        "Intellij",
        "PyCharm",
        "FileZilla",
        "PLSQL",
        "Developer",
        "TOAD",
        "Integration",
        "Tools",
        "Jenkins",
        "Web",
        "Builder",
        "Version",
        "Control",
        "GitHub",
        "SVN",
        "Defect",
        "Tracking",
        "JIRA",
        "Git",
        "VersionOne",
        "Methodologies",
        "tools",
        "Programming",
        "UML",
        "Agile",
        "Scrum"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:59:58.082483",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer PROFESSIONAL EXPERIRNECE San Francisco CA 6 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python Django in various domains Experienced in WAMP Windows Apache MYSQL Python Experienced with full software development lifecycle SDLC architecting scalable platforms objectoriented programming OOPs database design Experience in developing webbased applications using Python 3536 Django 17 Good experience of software development in Python libraries used NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML Bootstrap CSS JavaScript JDBC XML Python Django Good experience in developing web applications implementing MVTMVC architecture using Django Experienced in MVC frameworks like Django Java Script jQuery Worked on Cloud Computing AWS EC2 RDS S3 Glacier SQS SNS Cloud Formation VPC IAM Route 53 EBS DynamoDB Lambada Redshift Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Good Experience in Linux Bash scripting and following PEP Guidelines in Python Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Good experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB and Cassandra SQLite Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Python by configuring packages like JDBC MySQL Python Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Configure backup alerts repairs and monitoring of Cassandra clusters in conjunction with NagiosOpsCenter and custom scripts Good Knowledge of web services using SOAP and REST protocols Used Django as a proxy to interact with Rest services and also interacting with Database Excellent Experience and knowledge in using XML SOAP web Service for inter operable software applications Good knowledge of version control software CVS GitHub Efficient in demonstrating all phases of software development life cycle requirements design architecture development testing Deployed production site using Apache 20 with mod python Experienced in a Python based environment along with data analytics data wrangling and Excel data extracts Hands on experience with bug tracking tools JIRA and Bugzilla Skilled in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Skilled in debuggingtroubleshooting issues in complex applications Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Reviewed requirement documents with the business and development team to understand the architecture and functionality of the application and consolidated these requirements in appropriate modules in Test strategy Experienced in Unit testing Integration testing User acceptance testing Functional testing Experienced in Requirement gathering use case development Business Process flow Business Process Modeling extensively used UML to develop various use cases class diagrams and sequence diagrams Authorized to work in the US for any employer Work Experience Python Developer PROFESSIONAL EXPERIRNECE February 2018 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and JavaScripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Python Developer Incomm Alphareretta GA October 2016 to January 2018 Responsibilities Instigated user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Utilized Python libraries NumPy and matplotlib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Installed setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Setup and configured DHCP on Windows 2003 for external wireless clients and mobile PC kiosks within the hospital Installed and configured Windows XP workstations using standard software configuration and configured TCPIP and network interface cards Managing internet security and acceleration throughout the network using Microsofts ISA server Written functional test cases for Data Layer and Search server classes using Django XML base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package NumPy and matplotlib Created Data tables utilizing PyQt display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the frontend functionality such as selection criteria Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party jQuerybased plugins like Data tables etc Heavily used JavaScript for Form Submit and other UI elements during development Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP jQuery JavaScript PyCharm Python Developer Bloomin Brands Tampa FL February 2015 to September 2016 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts for API Integration Recording of Scripts Web Web Services HTML SoapUI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27 Django15 Ajax HTML CSS for the frontend Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv xml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript and jQuery calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Worked extensively with JavaScript and jQuery to optimize the user experience Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decision making using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python Django Cassandra SoapUI REST API Bash PyDev Spyder Python Developer Cyient May 2014 to November 2014 Responsibilities Translated the customer requirements into design specifications and ensured that the requirements translate into software solution Application was based on serviceoriented architecture and used Python 25 Django 15 Ajax HTML CSS for the frontend Designed the front end of the application using Python HTML CSS AJAX JSON and jQuery Worked on backend of the application mainly using Active Records Developed and designed an API RESTful Web Service Used the Python language to develop webbased data retrieval systems Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Developed web sites using Django Python XHTML CSS and JavaScript Developed and designed email marketing campaigns using HTML and CSS Tested and implemented applications built using Python Developed and tested many features for dashboard using Python CSS and JavaScript Created complex dynamic HTML UI using jQuery Automated Regression analysis for determining fund returns based on index returns PythonExcel Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Developed serverbased web traffic statistical analysis tool using Flask Pandas Implemented and tested pythonbased web applications interacting with MySQL Simple web app for reviewing sitcoms that gives users the ability to view add review updown vote search etc Environment Linux Python Mod Python MySQL JavaScript Ajax Shell Script HTML CSS Software Developer Precision IT Solutions Pvt Ltd January 2012 to March 2014 Responsibilities Analyzed the system requirement specifications and in client interaction during requirements specifications Providing daily reports to the Development Manager and participate in both the design phase and the development phase Utilized Agile Methodology and SCRUM Process Implemented code in Python to retrieve and manipulate data Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Developed dynamic web pages using Python Django frameworks and Used Django APIs for database access Utilized PyUnit the Python unit test framework for all Python applications Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Developed entire frontend and backend modules using Python on Django Web Framework Designed and implemented an application for managing customers purchases and invoices Created RESTful http services to interact with UI Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization End to end testing of the applications Reengineered various modules for implementing changes and created efficient system Maintained program libraries users manuals and technical documentation Environment Python Django RESTful Linux HTML5 CSS3 Bootstrap JavaScript jQuery AJAX MySQL Shell JIRA GIT Education Masters Skills CSS 6 years HTML 6 years JQuery 6 years MySQL 6 years Python 6 years C Javascript Django Additional Information Technical skills Operating Systems Unix Linux Windows and Mac Programming Languages Java C C Python 332724 Scripting Languages CSS Java Script JQuery Shell Scripting Markup languages HTML XML JSON Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 Python Libraries Beautiful Soup numpy matplotlib pythontwitter Pandas data frame urllib2 Databases Oracle 1011g MySQL SQL Server and PostgreSQL Servers Apache Tomcat IBM Web sphere RESTful web services Tools Intellij PyCharm FileZilla PLSQL Developer and TOAD Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and VersionOne Methodologies tools Object Oriented Programming UML Agile Scrum",
    "unique_id": "27c44cca-552f-4367-82b1-f8b5383f5319"
}