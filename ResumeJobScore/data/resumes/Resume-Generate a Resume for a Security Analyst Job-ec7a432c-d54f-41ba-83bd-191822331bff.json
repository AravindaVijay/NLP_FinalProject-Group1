{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Eli Lilly Indianapolis IN Having 7 Years of Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Used PythonDjango MVC framework to design and develop the application Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Work Experience Python Developer Eli Lilly Indianapolis IN March 2018 to Present Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy BeautifulSoup Multithreading Pandas Numpy Scipy Matplotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loaded the data into Spark RDD and do in memory data Computation to generate the Output response Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Created Maven POMs to automate build process for the new projects and integrated them with third party tools like SonarQube Responsible for installing and administrating the SonarQube for code quality check and Nexus repository and generating reports for different projects Also integrated them into Jenkins Helped to understand the process of SonarQube through Presentations and other business value measurement Prepared scripts to ensure proper data access manipulation and reporting functions with R programming languages Formulated procedures for integration of R programming plans with data sources and delivery systems Involved in writing queries in SparkSQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and converting RDDs to Data Frames Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Kubernets Confluence Python Developer OneMain Financial June 2016 to February 2018 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django DjangoCMS SSO Kubernetes PostgreSQL MySQL Bootstrap JS HTML5 CSS3 Agile REST JSON Python Developer Catholic Health Denver CO July 2015 to May 2016 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Environment Python Windows MySQL flask Numpy SQLAlchemy Kubernetes MySQL MySQLdb HTML CSS JQuery JavaScript Python Developer Limited Brands Chicago IL January 2014 to June 2015 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented RESTful WebServices for sending and receiving the data between multiple systems Used Python Library Beautiful Soup for web Scrapping Environment Python 27 Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub SVN Linux PyCharm Python Developer Polaris IN May 2012 to December 2013 Responsibilities Participated in the complete SDLC process and used Python to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Built application logic using Python Used MYDQL for database access Used Python to extract information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Involved in gathering and analyzing system requirements Performed joins group by and other operations in MapReduce using Python Followed Agile Methodologies to manage full lifecycle development of the project Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Environment Python Django Framework JavaScript CSS SQL MySQL LAMP jQuery Adobe Dreamweaver Apache web server Environment Python Django MY SQL Linux Git Agile HTML CSS Eclipse Linux Shell Scripting Skills C Django Git Hadoop Javascript Bootstrap Json Mapreduce memcached Php Python Flask Matplotlib Numpy Svn Xml Sql server Mysql Postgresql Sql Additional Information Technical skills Languages Python C C SQL Java and PHP Web Development HTML5 CSS3 JavaScript Bootstrap AJAX XML JSON Frameworks Django Flask CherryPy Pyramid NodeJS Angular JS JSP Numpy Matplotlib Servlets Servers Apache Tomcat Apache HTTP JBOSS Databases PostgreSQL MySQL Cassandra Redis MongoDB SQL Server Big Data Technologies Hadoop MapReduce and Spark Methodologies Agile Scrum Waterfall Tools Git SVN Mercurial Memcached Jira SSIS Data Migrator Visual studio IDE Notepad Eclipse IDLE Pycharm Pyscripter OS Windows Linux Unix",
    "entities": [
        "Chef Implemented",
        "UNIX",
        "HTTP",
        "Interfacing",
        "Working",
        "SonarQube Responsible",
        "Created Terraform",
        "GIT Repository Setup",
        "Data Frames Worked",
        "Lambda Work Experience Python Developer Eli Lilly",
        "PHP Python",
        "Amazon Web Services AWS",
        "Design Development and Deployment Testing and Implementation",
        "Software Configuration Management",
        "XML",
        "Jenkins Nexus Extensive",
        "Present Responsibilities Interacted with Business",
        "Python 3627 Django 1718",
        "Software Development Life Cycle SDLC",
        "Shell",
        "the Performance of Stored Procedures and Queries Installed",
        "Implemented Terraform",
        "Formulated",
        "Apache Spark",
        "Amazon",
        "Maven Repository and Deployment",
        "Bootstrap Working",
        "Python Spring Security Launched Kubernetes",
        "OpenSource Chef",
        "WebSphere",
        "Python",
        "SQL Server",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "Amazon AWS S3",
        "SparkSQL",
        "Developed",
        "Oracle Relational",
        "Jenkins",
        "Automation Test",
        "Django",
        "Puppet",
        "SQL PLSQL",
        "Kubernets",
        "Git",
        "Bash Python",
        "ANSIBLE",
        "Technologies",
        "Terraform Developed Merge",
        "DjangoREST",
        "Developed Serverside",
        "JSP",
        "FLASK Framework Developed",
        "Flask",
        "Bootstrap Restful Web Services",
        "SonarQube",
        "HTML CSS jQuery",
        "Languages Python C C",
        "RDS",
        "Nexus",
        "Views",
        "SQLbased",
        "MVC",
        "SPRINT",
        "Python REST API Framework Involved",
        "PythonDjango",
        "GIT Proficient",
        "Integration Testing",
        "GIT",
        "Node JS",
        "jQuery Experienced",
        "API",
        "Web Services",
        "Terraform",
        "QA",
        "IAM",
        "AWS",
        "Oracle",
        "Coding",
        "ELB",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "Created an AWS Lambda",
        "Created Maven",
        "Python Spring IOC Inversion",
        "SQL",
        "Spark RDD",
        "lPythonspan",
        "Nginx",
        "Mysql Postgresql Sql Additional Information Technical",
        "FLASK",
        "Ant",
        "SSH",
        "Chicago",
        "CI",
        "Indianapolis",
        "MVW",
        "Amazon AWS",
        "Wrote",
        "CRUD",
        "Maven",
        "Data Frames",
        "Build",
        "Performed",
        "Created UI",
        "JavaScript",
        "Firebug Used JIRA",
        "Front",
        "Unit Test Framework Created Selenium",
        "Microsoft",
        "Continuous Integration",
        "Test Plans and Test Cases Verifying",
        "SVN",
        "View Sets",
        "Expertise",
        "Transformation and Actions",
        "SDK",
        "AWS Experienced",
        "MapReduce",
        "NoSQL",
        "AzureAws Established",
        "Configs",
        "MFA",
        "Node",
        "Big Data Technologies Hadoop MapReduce",
        "AWS Environment Created Test"
    ],
    "experience": "Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11 g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Used PythonDjango MVC framework to design and develop the application Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Work Experience Python Developer Eli Lilly Indianapolis IN March 2018 to Present Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy BeautifulSoup Multithreading Pandas Numpy Scipy Matplotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loaded the data into Spark RDD and do in memory data Computation to generate the Output response Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Created Maven POMs to automate build process for the new projects and integrated them with third party tools like SonarQube Responsible for installing and administrating the SonarQube for code quality check and Nexus repository and generating reports for different projects Also integrated them into Jenkins Helped to understand the process of SonarQube through Presentations and other business value measurement Prepared scripts to ensure proper data access manipulation and reporting functions with R programming languages Formulated procedures for integration of R programming plans with data sources and delivery systems Involved in writing queries in SparkSQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and converting RDDs to Data Frames Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Kubernets Confluence Python Developer OneMain Financial June 2016 to February 2018 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django DjangoCMS SSO Kubernetes PostgreSQL MySQL Bootstrap JS HTML5 CSS3 Agile REST JSON Python Developer Catholic Health Denver CO July 2015 to May 2016 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Environment Python Windows MySQL flask Numpy SQLAlchemy Kubernetes MySQL MySQLdb HTML CSS JQuery JavaScript Python Developer Limited Brands Chicago IL January 2014 to June 2015 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented RESTful WebServices for sending and receiving the data between multiple systems Used Python Library Beautiful Soup for web Scrapping Environment Python 27 Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub SVN Linux PyCharm Python Developer Polaris IN May 2012 to December 2013 Responsibilities Participated in the complete SDLC process and used Python to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Built application logic using Python Used MYDQL for database access Used Python to extract information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Involved in gathering and analyzing system requirements Performed joins group by and other operations in MapReduce using Python Followed Agile Methodologies to manage full lifecycle development of the project Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Environment Python Django Framework JavaScript CSS SQL MySQL LAMP jQuery Adobe Dreamweaver Apache web server Environment Python Django MY SQL Linux Git Agile HTML CSS Eclipse Linux Shell Scripting Skills C Django Git Hadoop Javascript Bootstrap Json Mapreduce memcached Php Python Flask Matplotlib Numpy Svn Xml Sql server Mysql Postgresql Sql Additional Information Technical skills Languages Python C C SQL Java and PHP Web Development HTML5 CSS3 JavaScript Bootstrap AJAX XML JSON Frameworks Django Flask CherryPy Pyramid NodeJS Angular JS JSP Numpy Matplotlib Servlets Servers Apache Tomcat Apache HTTP JBOSS Databases PostgreSQL MySQL Cassandra Redis MongoDB SQL Server Big Data Technologies Hadoop MapReduce and Spark Methodologies Agile Scrum Waterfall Tools Git SVN Mercurial Memcached Jira SSIS Data Migrator Visual studio IDE Notepad Eclipse IDLE Pycharm Pyscripter OS Windows Linux Unix",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Eli",
        "Lilly",
        "Indianapolis",
        "Years",
        "Experience",
        "webapplication",
        "developer",
        "software",
        "development",
        "design",
        "python",
        "Django",
        "Java",
        "Webapp2",
        "Angularjs",
        "HTMLCSS",
        "JavaScript",
        "jQuery",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "python",
        "Django",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTML",
        "CSS",
        "jQuery",
        "data",
        "visualization",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "Node",
        "JS",
        "Ansible",
        "Ansible",
        "Tower",
        "Configuration",
        "management",
        "tool",
        "tasks",
        "applications",
        "change",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JSON",
        "Angularjs",
        "Nodejs",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "designing",
        "developing",
        "Automation",
        "Test",
        "cases",
        "Selenium",
        "WebDriver",
        "Java",
        "TestNG",
        "Development",
        "Quality",
        "Assurance",
        "Management",
        "teams",
        "cross",
        "communication",
        "approval",
        "production",
        "changes",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "Working",
        "experience",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "Python",
        "scripts",
        "networking",
        "tasks",
        "Ex",
        "auto",
        "Config",
        "generation",
        "information",
        "network",
        "devices",
        "data",
        "custom",
        "Fortigate",
        "firewall",
        "Config",
        "generator",
        "functionality",
        "Configs",
        "firewalls",
        "PythonDjango",
        "MVC",
        "framework",
        "application",
        "Experience",
        "Kubernets",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "experience",
        "Python",
        "frameworks",
        "Flask",
        "WebApp2",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MYSQL",
        "Oracle",
        "SQL",
        "Cassandra",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Experience",
        "List",
        "Comprehensions",
        "Python",
        "functions",
        "Map",
        "Filter",
        "Lambda",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Eli",
        "Lilly",
        "Indianapolis",
        "March",
        "Present",
        "Responsibilities",
        "Business",
        "team",
        "requirements",
        "experience",
        "AWS",
        "services",
        "S3",
        "ELB",
        "EBS",
        "AutoScaling",
        "Route53",
        "Storefront",
        "IAM",
        "Cloud",
        "Watch",
        "RDS",
        "infrastructure",
        "code",
        "execution",
        "resource",
        "graph",
        "automation",
        "Terraform",
        "Managed",
        "AWS",
        "infrastructure",
        "code",
        "Terraform",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "file",
        "cleaners",
        "Python",
        "libraries",
        "Worked",
        "MVC",
        "architecture",
        "PHP",
        "Python",
        "controller",
        "Build",
        "Lambda",
        "functions",
        "python",
        "process",
        "event",
        "AWS",
        "Lambda",
        "architecture",
        "AWS",
        "S3",
        "Buckets",
        "thumbnail",
        "create",
        "event",
        "user",
        "picture",
        "packages",
        "socket",
        "REST",
        "API",
        "Django",
        "Hands",
        "experience",
        "Business",
        "data",
        "centre",
        "environment",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "JSON",
        "template",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Experience",
        "Python",
        "packages",
        "modules",
        "Requests",
        "Scrapy",
        "BeautifulSoup",
        "Multithreading",
        "Pandas",
        "Numpy",
        "Scipy",
        "Matplotlib",
        "wxPython",
        "QT",
        "Regex",
        "expressions",
        "SQL",
        "Alchemy",
        "SQL",
        "database",
        "connectiors",
        "JDBCODBC",
        "PyVirtual",
        "Environment",
        "Understanding",
        "configuration",
        "Cloud",
        "Trail",
        "cloudsecurity",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systemsIAM",
        "Experience",
        "Installing",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "Puppet",
        "CICD",
        "Process",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "data",
        "Spark",
        "RDD",
        "memory",
        "data",
        "Computation",
        "Output",
        "response",
        "Configured",
        "Jenkins",
        "CI",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "Maven",
        "POMs",
        "build",
        "process",
        "projects",
        "party",
        "tools",
        "SonarQube",
        "Responsible",
        "SonarQube",
        "code",
        "quality",
        "check",
        "Nexus",
        "repository",
        "generating",
        "reports",
        "projects",
        "Jenkins",
        "Helped",
        "process",
        "SonarQube",
        "Presentations",
        "business",
        "value",
        "measurement",
        "scripts",
        "data",
        "access",
        "manipulation",
        "reporting",
        "functions",
        "R",
        "programming",
        "languages",
        "procedures",
        "integration",
        "R",
        "programming",
        "plans",
        "data",
        "sources",
        "delivery",
        "systems",
        "queries",
        "SparkSQL",
        "Scala",
        "Hands",
        "experience",
        "Apache",
        "Spark",
        "RDDs",
        "Data",
        "Frames",
        "operations",
        "Transformation",
        "Actions",
        "RDDs",
        "Data",
        "Frames",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "AWS",
        "API",
        "Gateway",
        "Java",
        "J2EE",
        "REST",
        "API",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "CloudWatch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Kubernets",
        "Confluence",
        "Python",
        "Developer",
        "OneMain",
        "Financial",
        "June",
        "February",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "UI",
        "HTML",
        "CSS",
        "jQuery",
        "Bootstrap",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "Salt",
        "Stack",
        "infrastructure",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Dynamo",
        "DB",
        "SNS",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Formation",
        "Automated",
        "Regular",
        "AWS",
        "tasks",
        "snapshots",
        "creation",
        "Python",
        "scripts",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "servers",
        "Ubuntu",
        "Linux",
        "Windows",
        "AWS",
        "EC2",
        "OpenSource",
        "Chef",
        "server",
        "Deployed",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "configuration",
        "management",
        "Chef",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "integration",
        "database",
        "systems",
        "Serverside",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Performance",
        "tuning",
        "Performance",
        "Stored",
        "Procedures",
        "Queries",
        "Installed",
        "py",
        "Builder",
        "application",
        "builds",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "Deployed",
        "SOAP",
        "Web",
        "Services",
        "Tomcat",
        "Server",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "IDE",
        "tool",
        "application",
        "JIRA",
        "bug",
        "issue",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "GIT",
        "team",
        "development",
        "Environment",
        "Python",
        "Django",
        "DjangoCMS",
        "SSO",
        "Kubernetes",
        "PostgreSQL",
        "MySQL",
        "Bootstrap",
        "JS",
        "HTML5",
        "CSS3",
        "Agile",
        "REST",
        "JSON",
        "Python",
        "Developer",
        "Catholic",
        "Health",
        "Denver",
        "CO",
        "July",
        "May",
        "Responsibilities",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Build",
        "database",
        "mapping",
        "classes",
        "FLASK",
        "models",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "web",
        "solution",
        "experience",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "Jenkins",
        "AWS",
        "Environment",
        "Created",
        "Test",
        "plans",
        "SQL",
        "scripts",
        "data",
        "tables",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "domain",
        "class",
        "business",
        "logic",
        "frontend",
        "modules",
        "Python",
        "FLASK",
        "Framework",
        "custom",
        "screens",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Jinja",
        "Angularjs",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "Expert",
        "knowledge",
        "application",
        "development",
        "patterns",
        "web",
        "concept",
        "business",
        "logic",
        "discussions",
        "use",
        "case",
        "design",
        "product",
        "requirement",
        "documents",
        "specifications",
        "test",
        "strategy",
        "test",
        "plan",
        "test",
        "case",
        "documents",
        "Experience",
        "Selenium",
        "Automation",
        "Selenium",
        "Web",
        "Driver",
        "Java",
        "Unit",
        "Test",
        "Framework",
        "Created",
        "Selenium",
        "webdriver",
        "automation",
        "scripts",
        "Python",
        "functionality",
        "browsers",
        "understanding",
        "Microsoft",
        "Azure",
        "cloud",
        "platform",
        "Experience",
        "cloud",
        "delivery",
        "platforms",
        "AzureAws",
        "framework",
        "Continuous",
        "Integration",
        "environment",
        "Jenkins",
        "Nexus",
        "experience",
        "Continuous",
        "Integration",
        "Continuous",
        "Delivery",
        "Jenkins",
        "AWS",
        "Environment",
        "Couchbase",
        "Python",
        "SDK",
        "applications",
        "Couchbase",
        "Server",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "selenium",
        "automation",
        "framework",
        "TestNG",
        "Developed",
        "Maven",
        "targets",
        "automation",
        "suites",
        "command",
        "line",
        "AWS",
        "Cloud",
        "instances",
        "EC2",
        "Participated",
        "release",
        "meetings",
        "Technology",
        "stakeholders",
        "risks",
        "releases",
        "Test",
        "Plans",
        "Test",
        "Cases",
        "Verifying",
        "Web",
        "application",
        "applications",
        "Subversion",
        "SVN",
        "Environment",
        "Python",
        "Windows",
        "MySQL",
        "flask",
        "Numpy",
        "SQLAlchemy",
        "Kubernetes",
        "MySQL",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Python",
        "Developer",
        "Limited",
        "Brands",
        "Chicago",
        "IL",
        "January",
        "June",
        "Responsibilities",
        "Views",
        "Templates",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "Django",
        "admin",
        "site",
        "dashboard",
        "custom",
        "Django",
        "dashboard",
        "end",
        "users",
        "custom",
        "Django",
        "APIs",
        "database",
        "access",
        "Python",
        "Django",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "UI",
        "JavaScript",
        "HTML5",
        "data",
        "management",
        "system",
        "MySQL",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "role",
        "development",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "Scrapping",
        "Environment",
        "Python",
        "Java",
        "Script",
        "HTML",
        "JS",
        "JQuery",
        "JSON",
        "AJAX",
        "XML",
        "CSS",
        "SQL",
        "MySQL",
        "Bootstrap",
        "Restful",
        "Web",
        "Services",
        "Beautiful",
        "Soup",
        "Jenkins",
        "GitHub",
        "SVN",
        "Linux",
        "PyCharm",
        "Python",
        "Developer",
        "Polaris",
        "May",
        "December",
        "Responsibilities",
        "SDLC",
        "process",
        "Python",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "Python",
        "MYDQL",
        "database",
        "access",
        "Python",
        "information",
        "XML",
        "files",
        "requirement",
        "gathering",
        "architect",
        "channels",
        "Django",
        "Used",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "system",
        "requirements",
        "Performed",
        "group",
        "operations",
        "MapReduce",
        "Python",
        "Followed",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "monitoring",
        "practices",
        "search",
        "vendors",
        "queries",
        "AGILE",
        "SCRUM",
        "practices",
        "planning",
        "sprint",
        "SCRUM",
        "meetings",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "Environment",
        "Python",
        "Django",
        "Framework",
        "JavaScript",
        "CSS",
        "SQL",
        "MySQL",
        "LAMP",
        "jQuery",
        "Adobe",
        "Dreamweaver",
        "Apache",
        "web",
        "server",
        "Environment",
        "Python",
        "Django",
        "MY",
        "SQL",
        "Linux",
        "Git",
        "Agile",
        "HTML",
        "CSS",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "Skills",
        "C",
        "Django",
        "Git",
        "Hadoop",
        "Javascript",
        "Bootstrap",
        "Json",
        "Mapreduce",
        "Php",
        "Python",
        "Flask",
        "Matplotlib",
        "Numpy",
        "Svn",
        "Xml",
        "Sql",
        "server",
        "Mysql",
        "Postgresql",
        "Sql",
        "Additional",
        "Information",
        "Technical",
        "skills",
        "Languages",
        "Python",
        "C",
        "C",
        "SQL",
        "Java",
        "PHP",
        "Web",
        "Development",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "AJAX",
        "XML",
        "JSON",
        "Frameworks",
        "Django",
        "Flask",
        "CherryPy",
        "Pyramid",
        "NodeJS",
        "Angular",
        "JS",
        "JSP",
        "Numpy",
        "Matplotlib",
        "Servlets",
        "Servers",
        "Apache",
        "Tomcat",
        "Apache",
        "HTTP",
        "JBOSS",
        "Databases",
        "PostgreSQL",
        "MySQL",
        "Cassandra",
        "Redis",
        "MongoDB",
        "SQL",
        "Server",
        "Big",
        "Data",
        "Technologies",
        "Hadoop",
        "MapReduce",
        "Spark",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "Tools",
        "Git",
        "SVN",
        "Mercurial",
        "Memcached",
        "Jira",
        "SSIS",
        "Data",
        "Migrator",
        "Visual",
        "studio",
        "IDE",
        "Notepad",
        "Eclipse",
        "IDLE",
        "Pycharm",
        "Pyscripter",
        "OS",
        "Windows",
        "Linux",
        "Unix"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:35:28.052085",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Eli Lilly Indianapolis IN Having 7 Years of Experience as webapplication developer software development and design using python Django Java Webapp2 Angularjs HTMLCSS JavaScript and jQuery Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Working experience in UNIX and Linux shell environments using command line utilities Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Used PythonDjango MVC framework to design and develop the application Experience in Kubernets which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good experience with Python frameworks like Flask and WebApp2 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Proficient in SQL databases MS SQL MYSQL Oracle and NO SQL databases MongoDB Cassandra Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Have Experience in List Comprehensions and Python inbuilt functions such as Map Filter and Lambda Work Experience Python Developer Eli Lilly Indianapolis IN March 2018 to Present Responsibilities Interacted with Business team to gather requirements Extensive experience with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS etc Extensively involved in infrastructure as code execution plans resource graph and change automation using Terraform Managed AWS infrastructure as code using Terraform Developed Merge jobs in Python to extract and load data into MySQL database Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Developed file cleaners using Python libraries and made it clean Worked on MVC architecture using PHP Python as controller Build numerous Lambda functions using python and automated the process using the event created Created an AWS Lambda architecture to monitor AWS S3 Buckets and triggers a thumbnail create event whenever a user uploads a new picture Worked on packages like socket REST API Django Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Experience in Python advanced packages and modules like Requests Scrapy BeautifulSoup Multithreading Pandas Numpy Scipy Matplotlib wxPython QT Regex expressions SQL Alchemy SQL based database connectiors JDBCODBC and PyVirtual Environment Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Loaded the data into Spark RDD and do in memory data Computation to generate the Output response Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Created Maven POMs to automate build process for the new projects and integrated them with third party tools like SonarQube Responsible for installing and administrating the SonarQube for code quality check and Nexus repository and generating reports for different projects Also integrated them into Jenkins Helped to understand the process of SonarQube through Presentations and other business value measurement Prepared scripts to ensure proper data access manipulation and reporting functions with R programming languages Formulated procedures for integration of R programming plans with data sources and delivery systems Involved in writing queries in SparkSQL using Scala Hands on experience in Apache Spark creating RDDs and Data Frames applying operations like Transformation and Actions and converting RDDs to Data Frames Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Python 3627 Django 2016 HTML5 CSS AWS API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Kubernets Confluence Python Developer OneMain Financial June 2016 to February 2018 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Automated Regular AWS tasks like snapshots creation using Python scripts Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Managed Virtual servers Ubuntu Linux and Windows on AWS EC2 using OpenSource Chef server Deployed and monitored scalable infrastructure on Amazon Web Services AWS configuration management using Chef Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django DjangoCMS SSO Kubernetes PostgreSQL MySQL Bootstrap JS HTML5 CSS3 Agile REST JSON Python Developer Catholic Health Denver CO July 2015 to May 2016 Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Build all database mapping classes using FLASK models Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Created Test plans Worked on SQL scripts to load data in the tables Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Coding groovy domain class to handle the business logic Developed entire frontend and backend modules using Python on FLASK Framework Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Developed monitoring and notification tools using Python Expert knowledge of mobile application development along with various patterns native web and hybrid concept Involved in business logic discussions and use case design Reviewed product requirement documents functional specifications and involved in developing test strategy test plan and test case documents Experience in Selenium Automation using Selenium Web Driver Java and Unit Test Framework Created Selenium webdriver automation scripts using Python to validate functionality on various browsers Very good understanding of Microsoft Azure cloud platform Experience with managing cloud delivery platforms AzureAws Established framework to setup Continuous Integration environment using Jenkins Nexus Extensive experience in implementing Continuous Integration and Continuous Delivery using Jenkins in an AWS Environment Used Couchbase Python SDK to build applications that use Couchbase Server Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in developing selenium automation framework using TestNG Developed Maven targets to execute automation suites from command line Worked on AWS Cloud and Created instances in EC2 Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Experienced in designing Test Plans and Test Cases Verifying and Validating Web based application Imported and managed multiple corporate applications into Subversion SVN Environment Python Windows MySQL flask Numpy SQLAlchemy Kubernetes MySQL MySQLdb HTML CSS JQuery JavaScript Python Developer Limited Brands Chicago IL January 2014 to June 2015 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented RESTful WebServices for sending and receiving the data between multiple systems Used Python Library Beautiful Soup for web Scrapping Environment Python 27 Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub SVN Linux PyCharm Python Developer Polaris IN May 2012 to December 2013 Responsibilities Participated in the complete SDLC process and used Python to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Built application logic using Python Used MYDQL for database access Used Python to extract information from XML files Participated in requirement gathering and worked closely with the architect in designing and modeling Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Involved in gathering and analyzing system requirements Performed joins group by and other operations in MapReduce using Python Followed Agile Methodologies to manage full lifecycle development of the project Implemented monitoring and established best practices around using elastic search Effectively communicated with the external vendors to resolve queries Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Environment Python Django Framework JavaScript CSS SQL MySQL LAMP jQuery Adobe Dreamweaver Apache web server Environment Python Django MY SQL Linux Git Agile HTML CSS Eclipse Linux Shell Scripting Skills C Django Git Hadoop Javascript Bootstrap Json Mapreduce memcached Php Python Flask Matplotlib Numpy Svn Xml Sql server Mysql Postgresql Sql Additional Information Technical skills Languages Python C C SQL Java and PHP Web Development HTML5 CSS3 JavaScript Bootstrap AJAX XML JSON Frameworks Django Flask CherryPy Pyramid NodeJS Angular JS JSP Numpy Matplotlib Servlets Servers Apache Tomcat Apache HTTP JBOSS Databases PostgreSQL MySQL Cassandra Redis MongoDB SQL Server Big Data Technologies Hadoop MapReduce and Spark Methodologies Agile Scrum Waterfall Tools Git SVN Mercurial Memcached Jira SSIS Data Migrator Visual studio IDE Notepad Eclipse IDLE Pycharm Pyscripter OS Windows Linux Unix",
    "unique_id": "ec7a432c-d54f-41ba-83bd-191822331bff"
}