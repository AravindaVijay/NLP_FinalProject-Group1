{
    "clean_data": "Sr Full Stack Java Developer Sr Full Stack span lJavaspan span lDeveloperspan Sr Full Stack Java Developer Anthem Mason OH Around 10 years of heavy experience in all phases of Software Development Life Cycle SDLC including analysis design coding Experience in Pair Programming Test Driven Development Waterfall model and Agile methodologies like SCRUM Expertise experience in estimations analysis design development testing maintenance performance tuning and deployment of internet ecommerce and clientserver applications using Java Servlets JSP JavaBeans JDBC Spring Hibernate AJAX JavaScript Experience with different IDEs like Eclipse Net Beans IntelliJ Good knowledge and experience in Core and J2EE design patterns like Singleton Abstract Factory Builder MVC2 Business Delegate DAO etc Expertise in various open source frameworks like Angular JS Node JS Struts 2012 Spring 2530 Spring MVC IoC Web and ORM Technology like Hibernate 30 JPA EJB30 IBatis MyBatis JQuery Expertise in Distributed and Web environments focused in JAVA Technologies Java collections Threads J2SE JDBC Struts Spring Hibernate Framework Expertise in Spring Security Modules and Authentication Expertise in WebDevelopment technologies like Servlets JSP JSTL HTML5 JSON JavaScript CSS3 XML XSLXSLT AJAX JQuery Good OOAD skills and data modeling using UML Usecases Class diagrams Sequence diagrams etc Used UML tools like STARUML Extensive knowledge of XMLbased standards and protocols such as WSDL and SOAP Service Oriented Architecture SOA development of XSD schemas and implementing both SOAP and REST web services Extensively experienced in Middle Tier Development using Servlets JSPs and EJB 30 Experience in using  JAXB JAXP parsing and XML Bean to process validate parse and extract data from XML files Extensive experience with WebApplication servers likes Apache Tomcat Jetty JBoss Oracle Web Logic Servers Web Sphere AS and building the applications using ANT Maven and WEB 20 build tool Expertise in various open source frameworks and tools like Struts spring hibernate Extensive experience in using IDEs Eclipse My Eclipse Eclipse Galileo and RAD Experience in writing SQL Queries Triggers and Stored procedures for database transactions Experience in working different operations system environments with java in Windows UNIX and Linux Experience in working with the Columnar NoSQL Database like HBase Cassandra to manage extremely large data sets Experience to maintain the source using version controlling tools Visual Source safe and Rational Clear Case Good knowledge of Cloud Foundry and Spring Boot applications Expertise in SDLC that encompass with proven analytical and problem solving skills and experience working with agile methodologies Proven aptitude on learning and working on emergency technologies Extensive experience in deploying managing and developing with MongoDB clusters Effective Communication and InterPersonal skills technical design implementation deployment and support of the fixed Income Trading Platform and Fixed Income Trading suite of applications and Multi Trading Authorized to work in the US for any employer Work Experience Sr Full Stack Java Developer Anthem Mason OH US June 2016 to Present Responsibilities Involved in complete development of Agile SCRUM Development Methodology and tested the application in each iteration Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Built Spring boot based Java Microservices to support enterprise web application Implemented Micro Services using Spring Boot and AngularJS Used Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Experience with PCF and AWS cloud technologies Developed an AWS lambda function to send a request for internal service end points through API Gateway using apache Http Client Enhanced user experience by designing new web features using MVC Framework like Expressjs Requirejs Reactjs and Nodejs Backend Integration testing of Microservices thrift backend as well as API services Created a Single Page Application SPA using Angular2 as framework to bind data with specific views and to synchronize data with server Used JavaScript JQuery AngularJS Node JS and AJAX technologies for front end user input validations and Restful web service calls Wrote Python Scripts to parse XML document and load the data into Database Developed spring boot application with Microservices and deployed it into AWS using EC2 instances Designed frontend presentation logic using JSP HTML5 CSS3 and Strut tags Implemented AJAX for asynchronous communication with server providing better user experience Implemented Spring Security for authentication and authorization Implemented Business Logic using Java spring and Hibernate Implemented Representational state transfer REST Web services for distributed systems using Jersey framework to retrieve data from client side Utilize Apache Sling API in order to securely manage data in the underlying Jackrabbit JCR repository Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Accurev Git with TFS Server for version control and Gradle for deployment Created logical and physical data models putting to practice concepts of normalization and RDBMS Involved in Bug fixing of various modules that were raised by the testing teams in the application during integration testing phase Developed unit testing framework using Junit test cases for continuous integration testing and used JTest tool for performance testing Migrating oracle data model to Cassandra to achieve and reduce the SLA from 10 minutes to 2 seconds and also improve user experience by using Kafka and Cassandra Configured development environment using Web Sphere application server for developers integration testing Used Maven building tool for creating EAR file to be deployed in application servers Experience in Selenium Web Driver automation tool with TestNG using Java To keep track of issues and tasks on individuals used JIRA ticketing system Create and configured the new Jenkins slave nodes and distributed the jobs between all Jenkins minions Achieved the continuous Integration CI and continuous deployment CD in Jenkins brew master instance which reduces the time for the deployment of Microservices Environment Java J2EE Agile Kanban JSP Servlet Strut React Js Node JS JavaScript AngularJS JQuery AJAX Web Sphere Spring MVC Spring Batch Spring Boot Spring Security Microservices Hibernate Oracle MongoDB Git RESTful Web Services AWS AXIS HTML5 CSS Jenkins Maven JAXB Junit JIRA Bit bucket Beyond Compare IP Switch ORACLE SQL Developer Tool srFull Stack Java Developer Caterpillar Peoria IL US August 2014 to May 2016 Responsibilities Responsible for designing and developing Manage Purchase Order Web Service and presentation layer with Spring MVC Responsible for Requirement gathering coding testing and documentation Architected and deployed Java based web product matching framework that matches products across multiple retailers Responsible for developing and maintaining all the entity and session beans Extensively worked on Drools Rules Engine and Expectation Engine for writing Business Rules Validation Designed and developed the messaging framework for communication between workflow manager and other Enterprise Applications over Java class and MQSeries using JMS Designed and integrated the fullscale SpringHibernate persistence solution with the application architectures Worked on generating the web services classes by using Service Oriented Architecture SOA WSDL UDDI and SOAP Developed and implemented the MVC Architectural Pattern using Spring Framework including JSP Servlets and Action classes Worked on Angular JS 120 version for clientside JavaScript MVC framework for the development of dynamic web applications Worked on Nodejs v01110 version of Node JS framework for serverside JavaScript framework Downloaded data from the Amazon Cloud Database for detailed display by the app Worked with the development team to create appropriate cloud solutions for client needs Implemented database layer using EJB 30 and Java Persistence APIJPA in maintenance projects Responsible for developing Use case diagrams Class diagrams Sequence diagrams and process flow diagrams for the modules using UML and Rational Rose Involved in Preparation of the technical design documents and involved in identifying and implementation of different J2EE design patterns like Singleton and DAO etc Developed the presentation layer using JSP JSTL HTML JSON XHTML CSS and client validations using JavaScript Worked on MongoDB database concepts such as locking indexes sharing replication schema design Using Apache Camel frame work provided concrete implementations of all the widely used Enterprise Integration Patterns EIPs and connectivity to a great variety of transports and APIs Contemporary applications rely on relational databases NoSQL databases and messaging infrastructure for achieving the internet scale Cloud Foundry exposes MySQL Postgre SQL MongoDB RabbitMQ and Redis as services that offer the database and messaging capabilities Involved in designing and development of web interface using JSP Servlets JavaScript and JDBC for administering and managing users and clients Developed the application using My Eclipse 85 and used eclipse standardplugin features for editing debugging compiling and formatting and build automation Handling user requests such as code enhancements bug fixes Designed reports per the need of the user Created stored procedures triggers and functions using SQL Plus to meet user requirements Used Log4j for logging errors messages and performance l Integrated with MDM for managing user data login and registration information are retrieved from MDM and synced with E commerce database Environment Java J2ee Java beans Servlets JMS JSP Drools Angular 120 Nodejs v01110 Servlets GWT Hibernate EJB JPA Spring Java Script JDBC UNIX HTML XHTML XSLT JSON SOAP WSDL Eclipse Web Services MySQL SQL Plus LDAP Log4j srFull Stack Java Developer International Software systems Greenbelt MD US May 2012 to July 2014 Responsibilities Implemented Micro Service Architecture using Mongo DB Hapi JS Angular 4 and Node JS stack and developed Single Page Applications SPA Designed the frontend using web technologies likeHTML5 CSS3 and Twitter Bootstrap framework and Angular 4for creating grid layout responsive screen sizes and devices Developed reusable Angular 4components which are compatible with latest versions of typescript and angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Created services to consume RESTAPIs using Component based architecture provided by Angular4 Made use of AngularUI grid to display treebased grids Converted the code base to use modern ECMAScript ES6 ES7 used Babel Typescript and Web pack as a module loader and used along with Angular CLI Developed Angular views to hook up models to the DOM and synchronize data with server as a SPA Made use of Angular4 Observables to make HTTP Requests and leveraged its functions to loop around results Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Developed serverside proxy using Node JS Hapi JS for an eventdriven nonblocking IO model to make an efficient application while keeping it lightweight Used NodeJS with Hapi JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Made use of authentication and authorization techniques available with Hapi JS and used its tools like web packs to avoid boiler plate code Utilized auto configurable documentation functionality provided by Hapi JS to configure the Open API specificationSwagger using Hapiswaggered and Hapiswaggeredui Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for Angular 4 code Pushed new features live after passing tests implemented with Karma Test Runner Testing for Node JS is done using Mocha and chai Unit testing of web services is done using Spock framework by extending Groovy syntax Configured JBOSS Application server and used Oracle database to write complex PLSQL queries Designed dynamic schema through MongoDB by incorporating rich queries syntaxes and achieved data collections distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Mongoose Connector is used for implementing ODM framework for Mongo DB For dependency management used the built in NPM package manager to configure the right versions of the packages Used Jenkins CICD tool for continuous integrating and deploying application on servers Configured Docker container service and build pipe line Handled all the port mappingbinding things that happen with Dockers and Containers Used RabbitMQ for transport of data in Queue in between components of the application Configured Kibana data visualization plugin for Elasticsearch Logstash and created bar line and scatter plots pie charts and maps on top of large chunks of data Used Redis configuration with node server along with Cat box for caching the responses Implemented OAUTH20 authentication and authorization framework to provide the security to rest web services Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Implemented Netflix Zuul API gateway for all the requests from the devices and websites by registering services to Eureka Configured Kubernetes in the application for automating deployment scaling and management of applications Configured DynaTrace to measure and monitor the performance of application Environment HTML5 CSS3 Twitter Bootstrap Angular4 Typescript Angular CLI NGRX ECMAES6ES7 Babel Typescript Web Pack DOM HTTP Ajax Node JS Hapi JS REST Mongo DB Oracle Redis Swagger Karma Jasmine Mocha Chai Spock Groovy JBoss ODM Mongoose Connector Kibana Elastic Search Logstash NPM Jenkins Docker Redis AWS Netflix Zuul Eureka Kubernetes Dyna Trace Rabbit MQ Cat box AWS Java Developer JPMorgan Chase San Mateo CA US October 2010 to April 2012 Responsibilities Worked on resolving issues for the Fortify scan results on multiple subsystems Worked and developed web pages using JSP and Spring MVC Framework Actively worked in requirement gathering for all the activities and actively carried out assignments in Agile scrum work environments Involved in the development of the UI using JSP HTML CSS XML XSL JavaScript AJAX SAX and DOM Parsers Developed Hibernate components and DAO Classes for business logic processing and database operations Created UML Diagrams Class and Sequence flow during Design Phase using Rational Rose As part of ULLD2 worked on the removal of the loan data points for the loan application through Create New Loan Loan Pipeline Evaluate Loans Contract and Loan Allocation of single family selling system Involved in Quarterly Releases and Light enhancements to selling system Worked on enhancement requirements for the modules like Contract Pipeline Create Contracts View Contract Pipeline and Default Settlement Parameters Integrated with the backend code JSP using AngularJS JSON and AJAX to get and post the data to backend servers Developed serverside services using Java50 Spring 25 Web Services SOAP Provided Junit test cases for the application to support the Test Driven Development TDD Used and worked with the Maven for building the web application Consumed Web Services for the usage of Rules module in the application development Environment Java J2EE Spring Core Spring MVC Hibernate XML Web logic Server DB2 Eclipse Maven Clear Case Clear Quest Rational Rose DB Visualizer UNIX and HP Quality Center Java Developer Global Tele Systems Hyderabad ANDHRA PRADESH IN June 2008 to September 2010 Responsibilities Created web pages according to clients guidelines and standards throughout the development and maintenance of the website using HTML CSS and JavaScript Worked on CSS to change the styles to be used in future web layouts and debugging the error issues with CSS Involved in High Level Design Document HLD preparation Agile methodology is used for development of the application Designed web pages using HTML and CSS and Implemented functionality in JavaScript Involved in designing and implementing UI for SelfService Application using JQuery Ajax framework and widgetbased JavaScript programming model Designed and developed User Interface Web Forms using Face CSS and Adobe Creative Suite Developed user interface using HTML JavaScript JQuery and CSS Used J2EE design patterns like Factory pattern Singleton Pattern Involved in bug fixing and resolving issues with the QA and production environment during production support Responsible for coding SQL Statements and Stored procedures for back end communication using JDBC Worked on UML diagrams like Class Diagram Sequence Diagram required for implementing the production flow Frontend validations are done using JavaScript Developed HTML prototypes and ready XHTML documents with CSS style sheets Created Stored Procedure Trigger for database access and events Experience in installing configuring and deploying application on Web Logic Server Used SQL and PLSQL queries to perform database operations on Web Sphere Used ANT to build run and create JARs and WAR files among other uses Implemented JDBC for database connectivity with MySQL Server Participated in Java training sessions Involved in analysis for Reporting framework Used My Eclipse as an IDE for development SVN is used as a tool for version control Gained more technical skills in application design and development of Application services in real time project environment Environment Java JavaScript JQuery Ajax UML SQL Stored Procedures UML HTML CSS JSP Servlets Web Services WSDL SOAP Education Bachelors Skills ECLIPSE J2EE JAVA HIBERNATE INTELLIJ IDEA Additional Information Technical Skills Languages JavaJ2EE SQL PLSQL HTML DHTML JavaScript Perl UML XML XSL XSLT JQuery Java Frameworks Servlets 3x JDBC 4x JSTL Java Server Pages JSP 2x JSF JMS JPA Web Technologies HTML5 CSS3 JAVASCRIPT AngularJS AJAX Backbonejs JQuery SOAP and Restful Nodejs Frameworks Struts 2xx Spring 3x4x Hibernate 3x 4x Apache Camel 2x Swing Apache CXF Apache Karaf Servers Tomcat 8x 9x Web Logic 9x Web Sphere 6x Red Hat JBoss Fuse Glassfish Server 4x Databases Oracle 10g11g12c MSSQL MySQL 56 IBM DB2 MongoDB 3x Cassandra 3x Tools Ant 1x Gradle 3x Maven 3x Log4j Git 1x2x SVN 1x CVS 1xx Junit 4x Selenium 3x 4x Mockito Jenkins Hudson and Bamboo IDE Eclipse LunaM6 MarsM7 NeonRC3 IntelliJ IDEA15x Net Beans8x RAD7x Platforms Windows 7 810 Windows Server 200812 Ubuntu 1504 Red Hat Enterprise Linux",
    "entities": [
        "API Gateway",
        "Spring Framework",
        "AJAX",
        "Component",
        "Pipeline Create Contracts View Contract Pipeline",
        "SQL Statements",
        "Jersey",
        "San Mateo",
        "Implemented Spring Security",
        "Implemented Business Logic",
        "Present Responsibilities Involved",
        "IBM",
        "Drools Rules Engine",
        "HP Quality Center Java Developer Global Tele Systems Hyderabad",
        "node",
        "Used Accurev Git",
        "SOAP",
        "XML",
        "EAR",
        "WSDL and SOAP Service Oriented Architecture SOA",
        "Spring MVC Framework Actively",
        "Responsibilities Created",
        "Beyond Compare IP Switch ORACLE SQL Developer Tool",
        "Singleton Abstract Factory Builder MVC2 Business Delegate",
        "Greenbelt",
        "Developed",
        "Jenkins",
        "Rational Rose Involved",
        "SQL Queries Triggers",
        "Utilized",
        "UML",
        "Hapi JS",
        "Restful",
        "Developed Hibernate",
        "UML Usecases Class",
        "Sequence",
        "Web Services WSDL SOAP Education",
        "Java Servlets JSP JavaBeans",
        "Core",
        "Singleton Pattern Involved",
        "Created UML Diagrams Class",
        "Babel Typescript",
        "Hapiswaggered",
        "JSP HTML5 CSS3",
        "Junit",
        "Implemented Micro Services",
        "JavaScript Involved",
        "Linux",
        "MQSeries",
        "JSP",
        "Worked",
        "SDLC",
        "DOM",
        "CLI",
        "ULLD2",
        "Business Rules Validation Designed",
        "MVC",
        "JavaScript AJAX SAX",
        "Automatic Sharding Mongoose Connector",
        "Agile",
        "EJB",
        "Node JS",
        "ORM Technology like Hibernate",
        "WebDevelopment",
        "HTML CSS",
        "XML Bean",
        "US",
        "QA",
        "Karma Test Runner Testing",
        "Create New Loan Loan Pipeline Evaluate",
        "Angular CLI Developed Angular",
        "ANT Maven",
        "Created",
        "AWS",
        "Spock",
        "Singleton",
        "JBOSS Application",
        "Integration CI",
        "Implemented AWS",
        "Builtin AJAX HTTP Service",
        "MVC Framework",
        "JAVA Technologies Java",
        "HTML",
        "Net Beans8x RAD7x Platforms",
        "API services",
        "Effective Communication",
        "SQL",
        "JTest",
        "Nodejs Backend Integration",
        "Fortify",
        "Pair Programming Test Driven Development Waterfall",
        "Utilize Apache Sling API",
        "NPM",
        "Spring MVC Responsible for Requirement",
        "DAO Classes",
        "InterPersonal",
        "CSS XML",
        "Amazon AWS",
        "PCF",
        "Hibernate Implemented Representational",
        "MDM",
        "Created a Single Page Application",
        "UI for SelfService Application",
        "Maven",
        "Database Developed",
        "lJavaspan",
        "JavaScript",
        "ANT",
        "TestNG",
        "UI",
        "Boot Spring Security Microservices Hibernate Oracle",
        "IL US",
        "JSP Servlets",
        "Stack Java Developer International Software",
        "WebApplication",
        "TFS Server",
        "Built Spring",
        "XSD",
        "SVN",
        "Queue",
        "Groovy",
        "Jackrabbit JCR",
        "CSS",
        "REST",
        "CSS Involved",
        "the Test Driven Development TDD Used",
        "NoSQL",
        "Software Development Life Cycle",
        "SLA",
        "MQ Cat",
        "Java Microservices",
        "Node"
    ],
    "experience": "Experience in Pair Programming Test Driven Development Waterfall model and Agile methodologies like SCRUM Expertise experience in estimations analysis design development testing maintenance performance tuning and deployment of internet ecommerce and clientserver applications using Java Servlets JSP JavaBeans JDBC Spring Hibernate AJAX JavaScript Experience with different IDEs like Eclipse Net Beans IntelliJ Good knowledge and experience in Core and J2EE design patterns like Singleton Abstract Factory Builder MVC2 Business Delegate DAO etc Expertise in various open source frameworks like Angular JS Node JS Struts 2012 Spring 2530 Spring MVC IoC Web and ORM Technology like Hibernate 30 JPA EJB30 IBatis MyBatis JQuery Expertise in Distributed and Web environments focused in JAVA Technologies Java collections Threads J2SE JDBC Struts Spring Hibernate Framework Expertise in Spring Security Modules and Authentication Expertise in WebDevelopment technologies like Servlets JSP JSTL HTML5 JSON JavaScript CSS3 XML XSLXSLT AJAX JQuery Good OOAD skills and data modeling using UML Usecases Class diagrams Sequence diagrams etc Used UML tools like STARUML Extensive knowledge of XMLbased standards and protocols such as WSDL and SOAP Service Oriented Architecture SOA development of XSD schemas and implementing both SOAP and REST web services Extensively experienced in Middle Tier Development using Servlets JSPs and EJB 30 Experience in using   JAXB JAXP parsing and XML Bean to process validate parse and extract data from XML files Extensive experience with WebApplication servers likes Apache Tomcat Jetty JBoss Oracle Web Logic Servers Web Sphere AS and building the applications using ANT Maven and WEB 20 build tool Expertise in various open source frameworks and tools like Struts spring hibernate Extensive experience in using IDEs Eclipse My Eclipse Eclipse Galileo and RAD Experience in writing SQL Queries Triggers and Stored procedures for database transactions Experience in working different operations system environments with java in Windows UNIX and Linux Experience in working with the Columnar NoSQL Database like HBase Cassandra to manage extremely large data sets Experience to maintain the source using version controlling tools Visual Source safe and Rational Clear Case Good knowledge of Cloud Foundry and Spring Boot applications Expertise in SDLC that encompass with proven analytical and problem solving skills and experience working with agile methodologies Proven aptitude on learning and working on emergency technologies Extensive experience in deploying managing and developing with MongoDB clusters Effective Communication and InterPersonal skills technical design implementation deployment and support of the fixed Income Trading Platform and Fixed Income Trading suite of applications and Multi Trading Authorized to work in the US for any employer Work Experience Sr Full Stack Java Developer Anthem Mason OH US June 2016 to Present Responsibilities Involved in complete development of Agile SCRUM Development Methodology and tested the application in each iteration Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Built Spring boot based Java Microservices to support enterprise web application Implemented Micro Services using Spring Boot and AngularJS Used Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Experience with PCF and AWS cloud technologies Developed an AWS lambda function to send a request for internal service end points through API Gateway using apache Http Client Enhanced user experience by designing new web features using MVC Framework like Expressjs Requirejs Reactjs and Nodejs Backend Integration testing of Microservices thrift backend as well as API services Created a Single Page Application SPA using Angular2 as framework to bind data with specific views and to synchronize data with server Used JavaScript JQuery AngularJS Node JS and AJAX technologies for front end user input validations and Restful web service calls Wrote Python Scripts to parse XML document and load the data into Database Developed spring boot application with Microservices and deployed it into AWS using EC2 instances Designed frontend presentation logic using JSP HTML5 CSS3 and Strut tags Implemented AJAX for asynchronous communication with server providing better user experience Implemented Spring Security for authentication and authorization Implemented Business Logic using Java spring and Hibernate Implemented Representational state transfer REST Web services for distributed systems using Jersey framework to retrieve data from client side Utilize Apache Sling API in order to securely manage data in the underlying Jackrabbit JCR repository Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Accurev Git with TFS Server for version control and Gradle for deployment Created logical and physical data models putting to practice concepts of normalization and RDBMS Involved in Bug fixing of various modules that were raised by the testing teams in the application during integration testing phase Developed unit testing framework using Junit test cases for continuous integration testing and used JTest tool for performance testing Migrating oracle data model to Cassandra to achieve and reduce the SLA from 10 minutes to 2 seconds and also improve user experience by using Kafka and Cassandra Configured development environment using Web Sphere application server for developers integration testing Used Maven building tool for creating EAR file to be deployed in application servers Experience in Selenium Web Driver automation tool with TestNG using Java To keep track of issues and tasks on individuals used JIRA ticketing system Create and configured the new Jenkins slave nodes and distributed the jobs between all Jenkins minions Achieved the continuous Integration CI and continuous deployment CD in Jenkins brew master instance which reduces the time for the deployment of Microservices Environment Java J2EE Agile Kanban JSP Servlet Strut React Js Node JS JavaScript AngularJS JQuery AJAX Web Sphere Spring MVC Spring Batch Spring Boot Spring Security Microservices Hibernate Oracle MongoDB Git RESTful Web Services AWS AXIS HTML5 CSS Jenkins Maven JAXB Junit JIRA Bit bucket Beyond Compare IP Switch ORACLE SQL Developer Tool srFull Stack Java Developer Caterpillar Peoria IL US August 2014 to May 2016 Responsibilities Responsible for designing and developing Manage Purchase Order Web Service and presentation layer with Spring MVC Responsible for Requirement gathering coding testing and documentation Architected and deployed Java based web product matching framework that matches products across multiple retailers Responsible for developing and maintaining all the entity and session beans Extensively worked on Drools Rules Engine and Expectation Engine for writing Business Rules Validation Designed and developed the messaging framework for communication between workflow manager and other Enterprise Applications over Java class and MQSeries using JMS Designed and integrated the fullscale SpringHibernate persistence solution with the application architectures Worked on generating the web services classes by using Service Oriented Architecture SOA WSDL UDDI and SOAP Developed and implemented the MVC Architectural Pattern using Spring Framework including JSP Servlets and Action classes Worked on Angular JS 120 version for clientside JavaScript MVC framework for the development of dynamic web applications Worked on Nodejs v01110 version of Node JS framework for serverside JavaScript framework Downloaded data from the Amazon Cloud Database for detailed display by the app Worked with the development team to create appropriate cloud solutions for client needs Implemented database layer using EJB 30 and Java Persistence APIJPA in maintenance projects Responsible for developing Use case diagrams Class diagrams Sequence diagrams and process flow diagrams for the modules using UML and Rational Rose Involved in Preparation of the technical design documents and involved in identifying and implementation of different J2EE design patterns like Singleton and DAO etc Developed the presentation layer using JSP JSTL HTML JSON XHTML CSS and client validations using JavaScript Worked on MongoDB database concepts such as locking indexes sharing replication schema design Using Apache Camel frame work provided concrete implementations of all the widely used Enterprise Integration Patterns EIPs and connectivity to a great variety of transports and APIs Contemporary applications rely on relational databases NoSQL databases and messaging infrastructure for achieving the internet scale Cloud Foundry exposes MySQL Postgre SQL MongoDB RabbitMQ and Redis as services that offer the database and messaging capabilities Involved in designing and development of web interface using JSP Servlets JavaScript and JDBC for administering and managing users and clients Developed the application using My Eclipse 85 and used eclipse standardplugin features for editing debugging compiling and formatting and build automation Handling user requests such as code enhancements bug fixes Designed reports per the need of the user Created stored procedures triggers and functions using SQL Plus to meet user requirements Used Log4j for logging errors messages and performance l Integrated with MDM for managing user data login and registration information are retrieved from MDM and synced with E commerce database Environment Java J2ee Java beans Servlets JMS JSP Drools Angular 120 Nodejs v01110 Servlets GWT Hibernate EJB JPA Spring Java Script JDBC UNIX HTML XHTML XSLT JSON SOAP WSDL Eclipse Web Services MySQL SQL Plus LDAP Log4j srFull Stack Java Developer International Software systems Greenbelt MD US May 2012 to July 2014 Responsibilities Implemented Micro Service Architecture using Mongo DB Hapi JS Angular 4 and Node JS stack and developed Single Page Applications SPA Designed the frontend using web technologies likeHTML5 CSS3 and Twitter Bootstrap framework and Angular 4for creating grid layout responsive screen sizes and devices Developed reusable Angular 4components which are compatible with latest versions of typescript and angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Created services to consume RESTAPIs using Component based architecture provided by Angular4 Made use of AngularUI grid to display treebased grids Converted the code base to use modern ECMAScript ES6 ES7 used Babel Typescript and Web pack as a module loader and used along with Angular CLI Developed Angular views to hook up models to the DOM and synchronize data with server as a SPA Made use of Angular4 Observables to make HTTP Requests and leveraged its functions to loop around results Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Developed serverside proxy using Node JS Hapi JS for an eventdriven nonblocking IO model to make an efficient application while keeping it lightweight Used NodeJS with Hapi JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Made use of authentication and authorization techniques available with Hapi JS and used its tools like web packs to avoid boiler plate code Utilized auto configurable documentation functionality provided by Hapi JS to configure the Open API specificationSwagger using Hapiswaggered and Hapiswaggeredui Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for Angular 4 code Pushed new features live after passing tests implemented with Karma Test Runner Testing for Node JS is done using Mocha and chai Unit testing of web services is done using Spock framework by extending Groovy syntax Configured JBOSS Application server and used Oracle database to write complex PLSQL queries Designed dynamic schema through MongoDB by incorporating rich queries syntaxes and achieved data collections distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Mongoose Connector is used for implementing ODM framework for Mongo DB For dependency management used the built in NPM package manager to configure the right versions of the packages Used Jenkins CICD tool for continuous integrating and deploying application on servers Configured Docker container service and build pipe line Handled all the port mappingbinding things that happen with Dockers and Containers Used RabbitMQ for transport of data in Queue in between components of the application Configured Kibana data visualization plugin for Elasticsearch Logstash and created bar line and scatter plots pie charts and maps on top of large chunks of data Used Redis configuration with node server along with Cat box for caching the responses Implemented OAUTH20 authentication and authorization framework to provide the security to rest web services Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Implemented Netflix Zuul API gateway for all the requests from the devices and websites by registering services to Eureka Configured Kubernetes in the application for automating deployment scaling and management of applications Configured DynaTrace to measure and monitor the performance of application Environment HTML5 CSS3 Twitter Bootstrap Angular4 Typescript Angular CLI NGRX ECMAES6ES7 Babel Typescript Web Pack DOM HTTP Ajax Node JS Hapi JS REST Mongo DB Oracle Redis Swagger Karma Jasmine Mocha Chai Spock Groovy JBoss ODM Mongoose Connector Kibana Elastic Search Logstash NPM Jenkins Docker Redis AWS Netflix Zuul Eureka Kubernetes Dyna Trace Rabbit MQ Cat box AWS Java Developer JPMorgan Chase San Mateo CA US October 2010 to April 2012 Responsibilities Worked on resolving issues for the Fortify scan results on multiple subsystems Worked and developed web pages using JSP and Spring MVC Framework Actively worked in requirement gathering for all the activities and actively carried out assignments in Agile scrum work environments Involved in the development of the UI using JSP HTML CSS XML XSL JavaScript AJAX SAX and DOM Parsers Developed Hibernate components and DAO Classes for business logic processing and database operations Created UML Diagrams Class and Sequence flow during Design Phase using Rational Rose As part of ULLD2 worked on the removal of the loan data points for the loan application through Create New Loan Loan Pipeline Evaluate Loans Contract and Loan Allocation of single family selling system Involved in Quarterly Releases and Light enhancements to selling system Worked on enhancement requirements for the modules like Contract Pipeline Create Contracts View Contract Pipeline and Default Settlement Parameters Integrated with the backend code JSP using AngularJS JSON and AJAX to get and post the data to backend servers Developed serverside services using Java50 Spring 25 Web Services SOAP Provided Junit test cases for the application to support the Test Driven Development TDD Used and worked with the Maven for building the web application Consumed Web Services for the usage of Rules module in the application development Environment Java J2EE Spring Core Spring MVC Hibernate XML Web logic Server DB2 Eclipse Maven Clear Case Clear Quest Rational Rose DB Visualizer UNIX and HP Quality Center Java Developer Global Tele Systems Hyderabad ANDHRA PRADESH IN June 2008 to September 2010 Responsibilities Created web pages according to clients guidelines and standards throughout the development and maintenance of the website using HTML CSS and JavaScript Worked on CSS to change the styles to be used in future web layouts and debugging the error issues with CSS Involved in High Level Design Document HLD preparation Agile methodology is used for development of the application Designed web pages using HTML and CSS and Implemented functionality in JavaScript Involved in designing and implementing UI for SelfService Application using JQuery Ajax framework and widgetbased JavaScript programming model Designed and developed User Interface Web Forms using Face CSS and Adobe Creative Suite Developed user interface using HTML JavaScript JQuery and CSS Used J2EE design patterns like Factory pattern Singleton Pattern Involved in bug fixing and resolving issues with the QA and production environment during production support Responsible for coding SQL Statements and Stored procedures for back end communication using JDBC Worked on UML diagrams like Class Diagram Sequence Diagram required for implementing the production flow Frontend validations are done using JavaScript Developed HTML prototypes and ready XHTML documents with CSS style sheets Created Stored Procedure Trigger for database access and events Experience in installing configuring and deploying application on Web Logic Server Used SQL and PLSQL queries to perform database operations on Web Sphere Used ANT to build run and create JARs and WAR files among other uses Implemented JDBC for database connectivity with MySQL Server Participated in Java training sessions Involved in analysis for Reporting framework Used My Eclipse as an IDE for development SVN is used as a tool for version control Gained more technical skills in application design and development of Application services in real time project environment Environment Java JavaScript JQuery Ajax UML SQL Stored Procedures UML HTML CSS JSP Servlets Web Services WSDL SOAP Education Bachelors Skills ECLIPSE J2EE JAVA HIBERNATE INTELLIJ IDEA Additional Information Technical Skills Languages JavaJ2EE SQL PLSQL HTML DHTML JavaScript Perl UML XML XSL XSLT JQuery Java Frameworks Servlets 3x JDBC 4x JSTL Java Server Pages JSP 2x JSF JMS JPA Web Technologies HTML5 CSS3 JAVASCRIPT AngularJS AJAX Backbonejs JQuery SOAP and Restful Nodejs Frameworks Struts 2xx Spring 3x4x Hibernate 3x 4x Apache Camel 2x Swing Apache CXF Apache Karaf Servers Tomcat 8x 9x Web Logic 9x Web Sphere 6x Red Hat JBoss Fuse Glassfish Server 4x Databases Oracle 10g11g12c MSSQL MySQL 56 IBM DB2 MongoDB 3x Cassandra 3x Tools Ant 1x Gradle 3x Maven 3x Log4j Git 1x2x SVN 1x CVS 1xx Junit 4x Selenium 3x 4x Mockito Jenkins Hudson and Bamboo IDE Eclipse LunaM6 MarsM7 NeonRC3 IntelliJ IDEA15x Net Beans8x RAD7x Platforms Windows 7 810 Windows Server 200812 Ubuntu 1504 Red Hat Enterprise Linux",
    "extracted_keywords": [
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Sr",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Anthem",
        "Mason",
        "OH",
        "years",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "analysis",
        "design",
        "Experience",
        "Pair",
        "Programming",
        "Test",
        "Driven",
        "Development",
        "Waterfall",
        "model",
        "methodologies",
        "SCRUM",
        "Expertise",
        "experience",
        "estimations",
        "analysis",
        "design",
        "development",
        "testing",
        "maintenance",
        "performance",
        "tuning",
        "deployment",
        "internet",
        "ecommerce",
        "applications",
        "Java",
        "Servlets",
        "JSP",
        "JavaBeans",
        "JDBC",
        "Spring",
        "Hibernate",
        "AJAX",
        "JavaScript",
        "Experience",
        "IDEs",
        "Eclipse",
        "Net",
        "Beans",
        "knowledge",
        "experience",
        "Core",
        "J2EE",
        "design",
        "patterns",
        "Singleton",
        "Abstract",
        "Factory",
        "Builder",
        "MVC2",
        "Business",
        "Delegate",
        "DAO",
        "Expertise",
        "source",
        "frameworks",
        "JS",
        "Node",
        "JS",
        "Struts",
        "Spring",
        "Spring",
        "MVC",
        "IoC",
        "Web",
        "ORM",
        "Technology",
        "Hibernate",
        "JPA",
        "EJB30",
        "IBatis",
        "MyBatis",
        "JQuery",
        "Expertise",
        "Distributed",
        "Web",
        "environments",
        "JAVA",
        "Technologies",
        "Java",
        "collections",
        "Threads",
        "J2SE",
        "JDBC",
        "Struts",
        "Spring",
        "Hibernate",
        "Framework",
        "Expertise",
        "Spring",
        "Security",
        "Modules",
        "Authentication",
        "Expertise",
        "WebDevelopment",
        "technologies",
        "Servlets",
        "JSP",
        "JSTL",
        "HTML5",
        "JSON",
        "JavaScript",
        "CSS3",
        "XML",
        "XSLXSLT",
        "AJAX",
        "JQuery",
        "Good",
        "OOAD",
        "skills",
        "data",
        "modeling",
        "UML",
        "Usecases",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "UML",
        "tools",
        "STARUML",
        "knowledge",
        "standards",
        "protocols",
        "WSDL",
        "SOAP",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "development",
        "XSD",
        "schemas",
        "SOAP",
        "REST",
        "web",
        "services",
        "Middle",
        "Tier",
        "Development",
        "Servlets",
        "JSPs",
        "EJB",
        "Experience",
        "JAXB",
        "JAXP",
        "parsing",
        "XML",
        "Bean",
        "parse",
        "data",
        "XML",
        "files",
        "experience",
        "WebApplication",
        "servers",
        "Apache",
        "Tomcat",
        "Jetty",
        "JBoss",
        "Oracle",
        "Web",
        "Logic",
        "Servers",
        "Web",
        "Sphere",
        "AS",
        "applications",
        "ANT",
        "Maven",
        "WEB",
        "build",
        "tool",
        "Expertise",
        "source",
        "frameworks",
        "tools",
        "Struts",
        "spring",
        "hibernate",
        "experience",
        "IDEs",
        "Eclipse",
        "Eclipse",
        "Eclipse",
        "Galileo",
        "RAD",
        "Experience",
        "SQL",
        "Queries",
        "Triggers",
        "procedures",
        "database",
        "transactions",
        "Experience",
        "operations",
        "system",
        "java",
        "Windows",
        "UNIX",
        "Linux",
        "Experience",
        "Columnar",
        "NoSQL",
        "Database",
        "HBase",
        "Cassandra",
        "data",
        "Experience",
        "source",
        "version",
        "tools",
        "Visual",
        "Source",
        "Rational",
        "Clear",
        "Case",
        "knowledge",
        "Cloud",
        "Foundry",
        "Spring",
        "Boot",
        "applications",
        "Expertise",
        "SDLC",
        "encompass",
        "problem",
        "skills",
        "experience",
        "methodologies",
        "Proven",
        "emergency",
        "technologies",
        "experience",
        "MongoDB",
        "clusters",
        "Communication",
        "InterPersonal",
        "design",
        "implementation",
        "deployment",
        "support",
        "Income",
        "Trading",
        "Platform",
        "Fixed",
        "Income",
        "Trading",
        "suite",
        "applications",
        "Multi",
        "Trading",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Anthem",
        "Mason",
        "OH",
        "US",
        "June",
        "Present",
        "Responsibilities",
        "development",
        "Agile",
        "SCRUM",
        "Development",
        "Methodology",
        "application",
        "iteration",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "Spring",
        "boot",
        "Java",
        "Microservices",
        "enterprise",
        "web",
        "application",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "AngularJS",
        "Amazon",
        "AWS",
        "evaluation",
        "Experience",
        "PCF",
        "AWS",
        "cloud",
        "technologies",
        "AWS",
        "lambda",
        "function",
        "request",
        "service",
        "end",
        "API",
        "Gateway",
        "apache",
        "Http",
        "Client",
        "Enhanced",
        "user",
        "experience",
        "web",
        "features",
        "MVC",
        "Framework",
        "Expressjs",
        "Requirejs",
        "Reactjs",
        "Nodejs",
        "Backend",
        "Integration",
        "testing",
        "Microservices",
        "thrift",
        "backend",
        "API",
        "services",
        "Single",
        "Page",
        "Application",
        "SPA",
        "Angular2",
        "framework",
        "data",
        "views",
        "data",
        "server",
        "JavaScript",
        "JQuery",
        "Node",
        "JS",
        "AJAX",
        "technologies",
        "end",
        "user",
        "input",
        "validations",
        "web",
        "service",
        "Wrote",
        "Python",
        "Scripts",
        "XML",
        "document",
        "data",
        "Database",
        "spring",
        "boot",
        "application",
        "Microservices",
        "AWS",
        "EC2",
        "instances",
        "frontend",
        "presentation",
        "logic",
        "JSP",
        "HTML5",
        "CSS3",
        "Strut",
        "tags",
        "AJAX",
        "communication",
        "server",
        "user",
        "experience",
        "Spring",
        "Security",
        "authentication",
        "authorization",
        "Business",
        "Logic",
        "Java",
        "spring",
        "Hibernate",
        "state",
        "transfer",
        "REST",
        "Web",
        "services",
        "systems",
        "Jersey",
        "framework",
        "data",
        "client",
        "side",
        "Utilize",
        "Apache",
        "Sling",
        "API",
        "order",
        "data",
        "Jackrabbit",
        "JCR",
        "repository",
        "MongoDB",
        "data",
        "storage",
        "aspects",
        "replica",
        "sets",
        "document",
        "design",
        "service",
        "scale",
        "Accurev",
        "Git",
        "TFS",
        "Server",
        "version",
        "control",
        "Gradle",
        "deployment",
        "data",
        "models",
        "practice",
        "concepts",
        "normalization",
        "RDBMS",
        "Bug",
        "fixing",
        "modules",
        "testing",
        "teams",
        "application",
        "integration",
        "testing",
        "phase",
        "unit",
        "testing",
        "framework",
        "Junit",
        "test",
        "cases",
        "integration",
        "testing",
        "JTest",
        "tool",
        "performance",
        "testing",
        "Migrating",
        "oracle",
        "data",
        "model",
        "Cassandra",
        "SLA",
        "minutes",
        "seconds",
        "user",
        "experience",
        "Kafka",
        "Cassandra",
        "Configured",
        "development",
        "environment",
        "Web",
        "Sphere",
        "application",
        "server",
        "developers",
        "integration",
        "testing",
        "Maven",
        "building",
        "tool",
        "EAR",
        "file",
        "application",
        "servers",
        "Experience",
        "Selenium",
        "Web",
        "Driver",
        "automation",
        "tool",
        "TestNG",
        "Java",
        "track",
        "issues",
        "tasks",
        "individuals",
        "JIRA",
        "ticketing",
        "system",
        "Jenkins",
        "slave",
        "nodes",
        "jobs",
        "Jenkins",
        "minions",
        "Integration",
        "CI",
        "CD",
        "Jenkins",
        "master",
        "instance",
        "time",
        "deployment",
        "Microservices",
        "Environment",
        "Java",
        "J2EE",
        "Agile",
        "Kanban",
        "JSP",
        "Servlet",
        "Strut",
        "React",
        "Js",
        "Node",
        "JS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "Web",
        "Sphere",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Microservices",
        "Hibernate",
        "Oracle",
        "MongoDB",
        "Git",
        "RESTful",
        "Web",
        "Services",
        "AWS",
        "AXIS",
        "HTML5",
        "CSS",
        "Jenkins",
        "Maven",
        "JAXB",
        "Junit",
        "JIRA",
        "Bit",
        "bucket",
        "Compare",
        "IP",
        "Switch",
        "ORACLE",
        "SQL",
        "Developer",
        "Tool",
        "srFull",
        "Stack",
        "Java",
        "Developer",
        "Caterpillar",
        "Peoria",
        "IL",
        "US",
        "August",
        "May",
        "Responsibilities",
        "Manage",
        "Purchase",
        "Order",
        "Web",
        "Service",
        "presentation",
        "layer",
        "Spring",
        "MVC",
        "Responsible",
        "Requirement",
        "testing",
        "documentation",
        "Java",
        "web",
        "product",
        "matching",
        "framework",
        "products",
        "retailers",
        "entity",
        "session",
        "beans",
        "Drools",
        "Rules",
        "Engine",
        "Expectation",
        "Engine",
        "Business",
        "Rules",
        "Validation",
        "framework",
        "communication",
        "workflow",
        "manager",
        "Enterprise",
        "Applications",
        "Java",
        "class",
        "MQSeries",
        "JMS",
        "SpringHibernate",
        "persistence",
        "solution",
        "application",
        "web",
        "services",
        "classes",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "WSDL",
        "UDDI",
        "SOAP",
        "Developed",
        "MVC",
        "Architectural",
        "Pattern",
        "Spring",
        "Framework",
        "JSP",
        "Servlets",
        "Action",
        "classes",
        "Angular",
        "JS",
        "version",
        "JavaScript",
        "MVC",
        "framework",
        "development",
        "web",
        "applications",
        "Nodejs",
        "version",
        "Node",
        "JS",
        "framework",
        "serverside",
        "JavaScript",
        "framework",
        "data",
        "Amazon",
        "Cloud",
        "Database",
        "display",
        "app",
        "development",
        "team",
        "cloud",
        "solutions",
        "client",
        "database",
        "layer",
        "EJB",
        "Java",
        "Persistence",
        "APIJPA",
        "maintenance",
        "projects",
        "Use",
        "case",
        "diagrams",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "process",
        "flow",
        "diagrams",
        "modules",
        "UML",
        "Rational",
        "Rose",
        "Preparation",
        "design",
        "documents",
        "identifying",
        "implementation",
        "J2EE",
        "design",
        "patterns",
        "Singleton",
        "DAO",
        "presentation",
        "layer",
        "JSP",
        "JSTL",
        "HTML",
        "JSON",
        "XHTML",
        "CSS",
        "client",
        "validations",
        "JavaScript",
        "MongoDB",
        "database",
        "concepts",
        "indexes",
        "replication",
        "schema",
        "design",
        "Apache",
        "Camel",
        "frame",
        "work",
        "implementations",
        "Enterprise",
        "Integration",
        "Patterns",
        "EIPs",
        "connectivity",
        "variety",
        "transports",
        "APIs",
        "applications",
        "databases",
        "NoSQL",
        "infrastructure",
        "internet",
        "scale",
        "Cloud",
        "Foundry",
        "MySQL",
        "Postgre",
        "SQL",
        "MongoDB",
        "RabbitMQ",
        "Redis",
        "services",
        "database",
        "capabilities",
        "designing",
        "development",
        "web",
        "interface",
        "JSP",
        "Servlets",
        "JavaScript",
        "JDBC",
        "users",
        "clients",
        "application",
        "Eclipse",
        "eclipse",
        "standardplugin",
        "features",
        "automation",
        "user",
        "requests",
        "code",
        "enhancements",
        "bug",
        "fixes",
        "reports",
        "need",
        "user",
        "procedures",
        "triggers",
        "functions",
        "SQL",
        "Plus",
        "user",
        "requirements",
        "Log4j",
        "errors",
        "messages",
        "performance",
        "l",
        "Integrated",
        "MDM",
        "user",
        "data",
        "login",
        "registration",
        "information",
        "MDM",
        "E",
        "commerce",
        "database",
        "Environment",
        "Java",
        "J2ee",
        "Java",
        "Servlets",
        "JMS",
        "JSP",
        "Drools",
        "Angular",
        "Nodejs",
        "v01110",
        "Servlets",
        "GWT",
        "Hibernate",
        "EJB",
        "JPA",
        "Spring",
        "Java",
        "Script",
        "JDBC",
        "UNIX",
        "HTML",
        "XSLT",
        "JSON",
        "SOAP",
        "WSDL",
        "Eclipse",
        "Web",
        "Services",
        "MySQL",
        "SQL",
        "LDAP",
        "Log4j",
        "srFull",
        "Stack",
        "Java",
        "Developer",
        "International",
        "Software",
        "systems",
        "Greenbelt",
        "MD",
        "US",
        "May",
        "July",
        "Responsibilities",
        "Micro",
        "Service",
        "Architecture",
        "Mongo",
        "DB",
        "Hapi",
        "JS",
        "Angular",
        "Node",
        "JS",
        "stack",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "frontend",
        "web",
        "technologies",
        "likeHTML5",
        "CSS3",
        "Twitter",
        "Bootstrap",
        "framework",
        "Angular",
        "4for",
        "grid",
        "screen",
        "sizes",
        "devices",
        "Angular",
        "4components",
        "versions",
        "typescript",
        "CLI",
        "Configured",
        "routes",
        "directives",
        "grid",
        "pagination",
        "validations",
        "loading",
        "loading",
        "Shadow",
        "DOM",
        "ngrx",
        "store",
        "services",
        "RESTAPIs",
        "Component",
        "architecture",
        "Angular4",
        "use",
        "AngularUI",
        "grid",
        "grids",
        "code",
        "base",
        "ECMAScript",
        "ES6",
        "ES7",
        "Babel",
        "Typescript",
        "Web",
        "pack",
        "module",
        "loader",
        "Angular",
        "CLI",
        "Developed",
        "Angular",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "SPA",
        "use",
        "Angular4",
        "Observables",
        "HTTP",
        "Requests",
        "functions",
        "results",
        "Builtin",
        "AJAX",
        "HTTP",
        "Service",
        "observables",
        "updates",
        "UI",
        "application",
        "serverside",
        "proxy",
        "Node",
        "JS",
        "Hapi",
        "JS",
        "IO",
        "model",
        "application",
        "NodeJS",
        "Hapi",
        "JS",
        "server",
        "Rest",
        "services",
        "database",
        "load",
        "cloud",
        "instances",
        "use",
        "authentication",
        "authorization",
        "techniques",
        "Hapi",
        "JS",
        "tools",
        "web",
        "packs",
        "boiler",
        "plate",
        "code",
        "auto",
        "documentation",
        "functionality",
        "Hapi",
        "JS",
        "API",
        "specificationSwagger",
        "Hapiswaggered",
        "Hapiswaggeredui",
        "Karma",
        "test",
        "runner",
        "Jasmine",
        "test",
        "framework",
        "tool",
        "testing",
        "Angular",
        "code",
        "features",
        "tests",
        "Karma",
        "Test",
        "Runner",
        "Testing",
        "Node",
        "JS",
        "Mocha",
        "chai",
        "Unit",
        "testing",
        "web",
        "services",
        "Spock",
        "framework",
        "syntax",
        "Configured",
        "JBOSS",
        "Application",
        "server",
        "Oracle",
        "database",
        "PLSQL",
        "schema",
        "MongoDB",
        "queries",
        "syntaxes",
        "data",
        "collections",
        "systems",
        "scalability",
        "data",
        "volumes",
        "Automatic",
        "Sharding",
        "Mongoose",
        "Connector",
        "ODM",
        "framework",
        "Mongo",
        "DB",
        "dependency",
        "management",
        "NPM",
        "package",
        "manager",
        "versions",
        "packages",
        "Jenkins",
        "CICD",
        "tool",
        "integrating",
        "application",
        "servers",
        "Configured",
        "Docker",
        "container",
        "service",
        "pipe",
        "line",
        "port",
        "things",
        "Dockers",
        "Containers",
        "RabbitMQ",
        "transport",
        "data",
        "Queue",
        "components",
        "application",
        "Kibana",
        "data",
        "visualization",
        "plugin",
        "Elasticsearch",
        "Logstash",
        "bar",
        "line",
        "scatter",
        "pie",
        "charts",
        "maps",
        "top",
        "chunks",
        "data",
        "Redis",
        "configuration",
        "node",
        "server",
        "Cat",
        "box",
        "responses",
        "OAUTH20",
        "authentication",
        "authorization",
        "framework",
        "security",
        "rest",
        "web",
        "services",
        "NoSQL",
        "database",
        "clusters",
        "AWS",
        "Virtual",
        "Cloud",
        "Network",
        "data",
        "cloud",
        "AWS",
        "solutions",
        "E2C",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "volumes",
        "EC2",
        "instances",
        "monitors",
        "alarms",
        "notifications",
        "EC2",
        "hosts",
        "Cloud",
        "Watch",
        "Netflix",
        "Zuul",
        "API",
        "gateway",
        "requests",
        "devices",
        "websites",
        "services",
        "Eureka",
        "Configured",
        "Kubernetes",
        "application",
        "deployment",
        "scaling",
        "management",
        "applications",
        "Configured",
        "DynaTrace",
        "performance",
        "application",
        "Environment",
        "HTML5",
        "CSS3",
        "Twitter",
        "Bootstrap",
        "Angular4",
        "Typescript",
        "Angular",
        "CLI",
        "NGRX",
        "ECMAES6ES7",
        "Babel",
        "Typescript",
        "Web",
        "Pack",
        "DOM",
        "HTTP",
        "Ajax",
        "Node",
        "JS",
        "Hapi",
        "JS",
        "REST",
        "Mongo",
        "DB",
        "Oracle",
        "Redis",
        "Swagger",
        "Karma",
        "Jasmine",
        "Mocha",
        "Chai",
        "Spock",
        "Groovy",
        "JBoss",
        "ODM",
        "Mongoose",
        "Connector",
        "Kibana",
        "Elastic",
        "Search",
        "Logstash",
        "NPM",
        "Jenkins",
        "Docker",
        "Redis",
        "AWS",
        "Netflix",
        "Zuul",
        "Eureka",
        "Kubernetes",
        "Dyna",
        "Trace",
        "Rabbit",
        "MQ",
        "Cat",
        "box",
        "AWS",
        "Java",
        "Developer",
        "JPMorgan",
        "Chase",
        "San",
        "Mateo",
        "CA",
        "US",
        "October",
        "April",
        "Responsibilities",
        "issues",
        "Fortify",
        "results",
        "subsystems",
        "web",
        "pages",
        "JSP",
        "Spring",
        "MVC",
        "Framework",
        "requirement",
        "gathering",
        "activities",
        "assignments",
        "scrum",
        "work",
        "environments",
        "development",
        "UI",
        "JSP",
        "HTML",
        "CSS",
        "XML",
        "XSL",
        "JavaScript",
        "AJAX",
        "SAX",
        "DOM",
        "Parsers",
        "Hibernate",
        "components",
        "DAO",
        "Classes",
        "business",
        "logic",
        "processing",
        "database",
        "operations",
        "UML",
        "Diagrams",
        "Class",
        "Sequence",
        "flow",
        "Design",
        "Phase",
        "Rational",
        "Rose",
        "part",
        "ULLD2",
        "removal",
        "loan",
        "data",
        "points",
        "loan",
        "application",
        "Create",
        "New",
        "Loan",
        "Loan",
        "Pipeline",
        "Evaluate",
        "Loans",
        "Contract",
        "Loan",
        "Allocation",
        "family",
        "selling",
        "system",
        "Quarterly",
        "Releases",
        "Light",
        "enhancements",
        "system",
        "enhancement",
        "requirements",
        "modules",
        "Contract",
        "Pipeline",
        "Create",
        "Contracts",
        "View",
        "Contract",
        "Pipeline",
        "Default",
        "Settlement",
        "Parameters",
        "Integrated",
        "code",
        "JSP",
        "JSON",
        "AJAX",
        "data",
        "servers",
        "serverside",
        "services",
        "Java50",
        "Spring",
        "Web",
        "Services",
        "SOAP",
        "Junit",
        "test",
        "cases",
        "application",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Maven",
        "web",
        "application",
        "Consumed",
        "Web",
        "Services",
        "usage",
        "Rules",
        "module",
        "application",
        "development",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Core",
        "Spring",
        "MVC",
        "Hibernate",
        "XML",
        "Web",
        "logic",
        "Server",
        "DB2",
        "Eclipse",
        "Maven",
        "Clear",
        "Case",
        "Clear",
        "Quest",
        "Rational",
        "Rose",
        "DB",
        "Visualizer",
        "UNIX",
        "HP",
        "Quality",
        "Center",
        "Java",
        "Developer",
        "Global",
        "Tele",
        "Systems",
        "Hyderabad",
        "ANDHRA",
        "PRADESH",
        "June",
        "September",
        "Responsibilities",
        "web",
        "pages",
        "clients",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "CSS",
        "styles",
        "web",
        "layouts",
        "error",
        "issues",
        "CSS",
        "High",
        "Level",
        "Design",
        "Document",
        "HLD",
        "preparation",
        "methodology",
        "development",
        "application",
        "web",
        "pages",
        "HTML",
        "CSS",
        "functionality",
        "JavaScript",
        "UI",
        "SelfService",
        "Application",
        "JQuery",
        "framework",
        "JavaScript",
        "programming",
        "model",
        "User",
        "Interface",
        "Web",
        "Forms",
        "Face",
        "CSS",
        "Adobe",
        "Creative",
        "Suite",
        "Developed",
        "user",
        "interface",
        "HTML",
        "JavaScript",
        "JQuery",
        "CSS",
        "J2EE",
        "design",
        "patterns",
        "Factory",
        "pattern",
        "Singleton",
        "Pattern",
        "bug",
        "issues",
        "QA",
        "production",
        "environment",
        "production",
        "support",
        "SQL",
        "Statements",
        "procedures",
        "end",
        "communication",
        "JDBC",
        "UML",
        "diagrams",
        "Class",
        "Diagram",
        "Sequence",
        "Diagram",
        "production",
        "flow",
        "Frontend",
        "validations",
        "JavaScript",
        "Developed",
        "HTML",
        "prototypes",
        "XHTML",
        "documents",
        "CSS",
        "style",
        "sheets",
        "Procedure",
        "Trigger",
        "database",
        "access",
        "events",
        "Experience",
        "configuring",
        "application",
        "Web",
        "Logic",
        "Server",
        "SQL",
        "PLSQL",
        "database",
        "operations",
        "Web",
        "Sphere",
        "ANT",
        "run",
        "JARs",
        "WAR",
        "files",
        "uses",
        "JDBC",
        "database",
        "connectivity",
        "MySQL",
        "Server",
        "Participated",
        "Java",
        "training",
        "sessions",
        "analysis",
        "framework",
        "Eclipse",
        "IDE",
        "development",
        "SVN",
        "tool",
        "version",
        "control",
        "skills",
        "application",
        "design",
        "development",
        "Application",
        "services",
        "time",
        "project",
        "environment",
        "Environment",
        "Java",
        "JavaScript",
        "JQuery",
        "Ajax",
        "UML",
        "SQL",
        "Stored",
        "Procedures",
        "UML",
        "HTML",
        "CSS",
        "JSP",
        "Servlets",
        "Web",
        "Services",
        "WSDL",
        "SOAP",
        "Education",
        "Bachelors",
        "Skills",
        "ECLIPSE",
        "J2EE",
        "HIBERNATE",
        "IDEA",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "JavaJ2EE",
        "SQL",
        "PLSQL",
        "HTML",
        "DHTML",
        "JavaScript",
        "Perl",
        "UML",
        "XML",
        "XSL",
        "XSLT",
        "JQuery",
        "Java",
        "Frameworks",
        "JDBC",
        "JSTL",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "JSF",
        "JMS",
        "JPA",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "JAVASCRIPT",
        "AngularJS",
        "AJAX",
        "Backbonejs",
        "JQuery",
        "SOAP",
        "Restful",
        "Nodejs",
        "Frameworks",
        "Struts",
        "2xx",
        "Spring",
        "3x4x",
        "Hibernate",
        "4x",
        "Apache",
        "Camel",
        "Swing",
        "Apache",
        "CXF",
        "Apache",
        "Karaf",
        "Servers",
        "Tomcat",
        "8x",
        "9x",
        "Web",
        "Logic",
        "9x",
        "Web",
        "Sphere",
        "6x",
        "Red",
        "Hat",
        "JBoss",
        "Fuse",
        "Glassfish",
        "Server",
        "4x",
        "Oracle",
        "MSSQL",
        "MySQL",
        "IBM",
        "DB2",
        "MongoDB",
        "Cassandra",
        "3x",
        "Tools",
        "Ant",
        "1x",
        "Gradle",
        "Maven",
        "Log4j",
        "Git",
        "SVN",
        "CVS",
        "Junit",
        "4x",
        "Selenium",
        "Mockito",
        "Jenkins",
        "Hudson",
        "Bamboo",
        "IDE",
        "Eclipse",
        "LunaM6",
        "MarsM7",
        "NeonRC3",
        "IntelliJ",
        "Net",
        "Beans8x",
        "RAD7x",
        "Platforms",
        "Windows",
        "Server",
        "Ubuntu",
        "Red",
        "Hat",
        "Enterprise",
        "Linux"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:13:36.761733",
    "resume_data": "Sr Full Stack Java Developer Sr Full Stack span lJavaspan span lDeveloperspan Sr Full Stack Java Developer Anthem Mason OH Around 10 years of heavy experience in all phases of Software Development Life Cycle SDLC including analysis design coding Experience in Pair Programming Test Driven Development Waterfall model and Agile methodologies like SCRUM Expertise experience in estimations analysis design development testing maintenance performance tuning and deployment of internet ecommerce and clientserver applications using Java Servlets JSP JavaBeans JDBC Spring Hibernate AJAX JavaScript Experience with different IDEs like Eclipse Net Beans IntelliJ Good knowledge and experience in Core and J2EE design patterns like Singleton Abstract Factory Builder MVC2 Business Delegate DAO etc Expertise in various open source frameworks like Angular JS Node JS Struts 2012 Spring 2530 Spring MVC IoC Web and ORM Technology like Hibernate 30 JPA EJB30 IBatis MyBatis JQuery Expertise in Distributed and Web environments focused in JAVA Technologies Java collections Threads J2SE JDBC Struts Spring Hibernate Framework Expertise in Spring Security Modules and Authentication Expertise in WebDevelopment technologies like Servlets JSP JSTL HTML5 JSON JavaScript CSS3 XML XSLXSLT AJAX JQuery Good OOAD skills and data modeling using UML Usecases Class diagrams Sequence diagrams etc Used UML tools like STARUML Extensive knowledge of XMLbased standards and protocols such as WSDL and SOAP Service Oriented Architecture SOA development of XSD schemas and implementing both SOAP and REST web services Extensively experienced in Middle Tier Development using Servlets JSPs and EJB 30 Experience in using DOM4J JAXB JAXP parsing and XML Bean to process validate parse and extract data from XML files Extensive experience with WebApplication servers likes Apache Tomcat Jetty JBoss Oracle Web Logic Servers Web Sphere AS and building the applications using ANT Maven and WEB 20 build tool Expertise in various open source frameworks and tools like Struts spring hibernate Extensive experience in using IDEs Eclipse My Eclipse Eclipse Galileo and RAD Experience in writing SQL Queries Triggers and Stored procedures for database transactions Experience in working different operations system environments with java in Windows UNIX and Linux Experience in working with the Columnar NoSQL Database like HBase Cassandra to manage extremely large data sets Experience to maintain the source using version controlling tools Visual Source safe and Rational Clear Case Good knowledge of Cloud Foundry and Spring Boot applications Expertise in SDLC that encompass with proven analytical and problem solving skills and experience working with agile methodologies Proven aptitude on learning and working on emergency technologies Extensive experience in deploying managing and developing with MongoDB clusters Effective Communication and InterPersonal skills technical design implementation deployment and support of the fixed Income Trading Platform and Fixed Income Trading suite of applications and Multi Trading Authorized to work in the US for any employer Work Experience Sr Full Stack Java Developer Anthem Mason OH US June 2016 to Present Responsibilities Involved in complete development of Agile SCRUM Development Methodology and tested the application in each iteration Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Built Spring boot based Java Microservices to support enterprise web application Implemented Micro Services using Spring Boot and AngularJS Used Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Experience with PCF and AWS cloud technologies Developed an AWS lambda function to send a request for internal service end points through API Gateway using apache Http Client Enhanced user experience by designing new web features using MVC Framework like Expressjs Requirejs Reactjs and Nodejs Backend Integration testing of Microservices thrift backend as well as API services Created a Single Page Application SPA using Angular2 as framework to bind data with specific views and to synchronize data with server Used JavaScript JQuery AngularJS Node JS and AJAX technologies for front end user input validations and Restful web service calls Wrote Python Scripts to parse XML document and load the data into Database Developed spring boot application with Microservices and deployed it into AWS using EC2 instances Designed frontend presentation logic using JSP HTML5 CSS3 and Strut tags Implemented AJAX for asynchronous communication with server providing better user experience Implemented Spring Security for authentication and authorization Implemented Business Logic using Java spring and Hibernate Implemented Representational state transfer REST Web services for distributed systems using Jersey framework to retrieve data from client side Utilize Apache Sling API in order to securely manage data in the underlying Jackrabbit JCR repository Used MongoDB as data storage and utilized aspects like replica sets sharding and clever document design to make service extensible scale and feature wise Used Accurev Git with TFS Server for version control and Gradle for deployment Created logical and physical data models putting to practice concepts of normalization and RDBMS Involved in Bug fixing of various modules that were raised by the testing teams in the application during integration testing phase Developed unit testing framework using Junit test cases for continuous integration testing and used JTest tool for performance testing Migrating oracle data model to Cassandra to achieve and reduce the SLA from 10 minutes to 2 seconds and also improve user experience by using Kafka and Cassandra Configured development environment using Web Sphere application server for developers integration testing Used Maven building tool for creating EAR file to be deployed in application servers Experience in Selenium Web Driver automation tool with TestNG using Java To keep track of issues and tasks on individuals used JIRA ticketing system Create and configured the new Jenkins slave nodes and distributed the jobs between all Jenkins minions Achieved the continuous Integration CI and continuous deployment CD in Jenkins brew master instance which reduces the time for the deployment of Microservices Environment Java J2EE Agile Kanban JSP Servlet Strut React Js Node JS JavaScript AngularJS JQuery AJAX Web Sphere Spring MVC Spring Batch Spring Boot Spring Security Microservices Hibernate Oracle MongoDB Git RESTful Web Services AWS AXIS HTML5 CSS Jenkins Maven JAXB Junit JIRA Bit bucket Beyond Compare IP Switch ORACLE SQL Developer Tool srFull Stack Java Developer Caterpillar Peoria IL US August 2014 to May 2016 Responsibilities Responsible for designing and developing Manage Purchase Order Web Service and presentation layer with Spring MVC Responsible for Requirement gathering coding testing and documentation Architected and deployed Java based web product matching framework that matches products across multiple retailers Responsible for developing and maintaining all the entity and session beans Extensively worked on Drools Rules Engine and Expectation Engine for writing Business Rules Validation Designed and developed the messaging framework for communication between workflow manager and other Enterprise Applications over Java class and MQSeries using JMS Designed and integrated the fullscale SpringHibernate persistence solution with the application architectures Worked on generating the web services classes by using Service Oriented Architecture SOA WSDL UDDI and SOAP Developed and implemented the MVC Architectural Pattern using Spring Framework including JSP Servlets and Action classes Worked on Angular JS 120 version for clientside JavaScript MVC framework for the development of dynamic web applications Worked on Nodejs v01110 version of Node JS framework for serverside JavaScript framework Downloaded data from the Amazon Cloud Database for detailed display by the app Worked with the development team to create appropriate cloud solutions for client needs Implemented database layer using EJB 30 and Java Persistence APIJPA in maintenance projects Responsible for developing Use case diagrams Class diagrams Sequence diagrams and process flow diagrams for the modules using UML and Rational Rose Involved in Preparation of the technical design documents and involved in identifying and implementation of different J2EE design patterns like Singleton and DAO etc Developed the presentation layer using JSP JSTL HTML JSON XHTML CSS and client validations using JavaScript Worked on MongoDB database concepts such as locking indexes sharing replication schema design Using Apache Camel frame work provided concrete implementations of all the widely used Enterprise Integration Patterns EIPs and connectivity to a great variety of transports and APIs Contemporary applications rely on relational databases NoSQL databases and messaging infrastructure for achieving the internet scale Cloud Foundry exposes MySQL Postgre SQL MongoDB RabbitMQ and Redis as services that offer the database and messaging capabilities Involved in designing and development of web interface using JSP Servlets JavaScript and JDBC for administering and managing users and clients Developed the application using My Eclipse 85 and used eclipse standardplugin features for editing debugging compiling and formatting and build automation Handling user requests such as code enhancements bug fixes Designed reports per the need of the user Created stored procedures triggers and functions using SQL Plus to meet user requirements Used Log4j for logging errors messages and performance l Integrated with MDM for managing user data login and registration information are retrieved from MDM and synced with E commerce database Environment Java J2ee Java beans Servlets JMS JSP Drools Angular 120 Nodejs v01110 Servlets GWT Hibernate EJB JPA Spring Java Script JDBC UNIX HTML XHTML XSLT JSON SOAP WSDL Eclipse Web Services MySQL SQL Plus LDAP Log4j srFull Stack Java Developer International Software systems Greenbelt MD US May 2012 to July 2014 Responsibilities Implemented Micro Service Architecture using Mongo DB Hapi JS Angular 4 and Node JS stack and developed Single Page Applications SPA Designed the frontend using web technologies likeHTML5 CSS3 and Twitter Bootstrap framework and Angular 4for creating grid layout responsive screen sizes and devices Developed reusable Angular 4components which are compatible with latest versions of typescript and angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Created services to consume RESTAPIs using Component based architecture provided by Angular4 Made use of AngularUI grid to display treebased grids Converted the code base to use modern ECMAScript ES6 ES7 used Babel Typescript and Web pack as a module loader and used along with Angular CLI Developed Angular views to hook up models to the DOM and synchronize data with server as a SPA Made use of Angular4 Observables to make HTTP Requests and leveraged its functions to loop around results Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Developed serverside proxy using Node JS Hapi JS for an eventdriven nonblocking IO model to make an efficient application while keeping it lightweight Used NodeJS with Hapi JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Made use of authentication and authorization techniques available with Hapi JS and used its tools like web packs to avoid boiler plate code Utilized auto configurable documentation functionality provided by Hapi JS to configure the Open API specificationSwagger using Hapiswaggered and Hapiswaggeredui Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for Angular 4 code Pushed new features live after passing tests implemented with Karma Test Runner Testing for Node JS is done using Mocha and chai Unit testing of web services is done using Spock framework by extending Groovy syntax Configured JBOSS Application server and used Oracle database to write complex PLSQL queries Designed dynamic schema through MongoDB by incorporating rich queries syntaxes and achieved data collections distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Mongoose Connector is used for implementing ODM framework for Mongo DB For dependency management used the built in NPM package manager to configure the right versions of the packages Used Jenkins CICD tool for continuous integrating and deploying application on servers Configured Docker container service and build pipe line Handled all the port mappingbinding things that happen with Dockers and Containers Used RabbitMQ for transport of data in Queue in between components of the application Configured Kibana data visualization plugin for Elasticsearch Logstash and created bar line and scatter plots pie charts and maps on top of large chunks of data Used Redis configuration with node server along with Cat box for caching the responses Implemented OAUTH20 authentication and authorization framework to provide the security to rest web services Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Implemented Netflix Zuul API gateway for all the requests from the devices and websites by registering services to Eureka Configured Kubernetes in the application for automating deployment scaling and management of applications Configured DynaTrace to measure and monitor the performance of application Environment HTML5 CSS3 Twitter Bootstrap Angular4 Typescript Angular CLI NGRX ECMAES6ES7 Babel Typescript Web Pack DOM HTTP Ajax Node JS Hapi JS REST Mongo DB Oracle Redis Swagger Karma Jasmine Mocha Chai Spock Groovy JBoss ODM Mongoose Connector Kibana Elastic Search Logstash NPM Jenkins Docker Redis AWS Netflix Zuul Eureka Kubernetes Dyna Trace Rabbit MQ Cat box AWS Java Developer JPMorgan Chase San Mateo CA US October 2010 to April 2012 Responsibilities Worked on resolving issues for the Fortify scan results on multiple subsystems Worked and developed web pages using JSP and Spring MVC Framework Actively worked in requirement gathering for all the activities and actively carried out assignments in Agile scrum work environments Involved in the development of the UI using JSP HTML CSS XML XSL JavaScript AJAX SAX and DOM Parsers Developed Hibernate components and DAO Classes for business logic processing and database operations Created UML Diagrams Class and Sequence flow during Design Phase using Rational Rose As part of ULLD2 worked on the removal of the loan data points for the loan application through Create New Loan Loan Pipeline Evaluate Loans Contract and Loan Allocation of single family selling system Involved in Quarterly Releases and Light enhancements to selling system Worked on enhancement requirements for the modules like Contract Pipeline Create Contracts View Contract Pipeline and Default Settlement Parameters Integrated with the backend code JSP using AngularJS JSON and AJAX to get and post the data to backend servers Developed serverside services using Java50 Spring 25 Web Services SOAP Provided Junit test cases for the application to support the Test Driven Development TDD Used and worked with the Maven for building the web application Consumed Web Services for the usage of Rules module in the application development Environment Java J2EE Spring Core Spring MVC Hibernate XML Web logic Server DB2 Eclipse Maven Clear Case Clear Quest Rational Rose DB Visualizer UNIX and HP Quality Center Java Developer Global Tele Systems Hyderabad ANDHRA PRADESH IN June 2008 to September 2010 Responsibilities Created web pages according to clients guidelines and standards throughout the development and maintenance of the website using HTML CSS and JavaScript Worked on CSS to change the styles to be used in future web layouts and debugging the error issues with CSS Involved in High Level Design Document HLD preparation Agile methodology is used for development of the application Designed web pages using HTML and CSS and Implemented functionality in JavaScript Involved in designing and implementing UI for SelfService Application using JQuery Ajax framework and widgetbased JavaScript programming model Designed and developed User Interface Web Forms using Face CSS and Adobe Creative Suite Developed user interface using HTML JavaScript JQuery and CSS Used J2EE design patterns like Factory pattern Singleton Pattern Involved in bug fixing and resolving issues with the QA and production environment during production support Responsible for coding SQL Statements and Stored procedures for back end communication using JDBC Worked on UML diagrams like Class Diagram Sequence Diagram required for implementing the production flow Frontend validations are done using JavaScript Developed HTML prototypes and ready XHTML documents with CSS style sheets Created Stored Procedure Trigger for database access and events Experience in installing configuring and deploying application on Web Logic Server Used SQL and PLSQL queries to perform database operations on Web Sphere Used ANT to build run and create JARs and WAR files among other uses Implemented JDBC for database connectivity with MySQL Server Participated in Java training sessions Involved in analysis for Reporting framework Used My Eclipse as an IDE for development SVN is used as a tool for version control Gained more technical skills in application design and development of Application services in real time project environment Environment Java JavaScript JQuery Ajax UML SQL Stored Procedures UML HTML CSS JSP Servlets Web Services WSDL SOAP Education Bachelors Skills ECLIPSE J2EE JAVA HIBERNATE INTELLIJ IDEA Additional Information Technical Skills Languages JavaJ2EE SQL PLSQL HTML DHTML JavaScript Perl UML XML XSL XSLT JQuery Java Frameworks Servlets 3x JDBC 4x JSTL Java Server Pages JSP 2x JSF JMS JPA Web Technologies HTML5 CSS3 JAVASCRIPT AngularJS AJAX Backbonejs JQuery SOAP and Restful Nodejs Frameworks Struts 2xx Spring 3x4x Hibernate 3x 4x Apache Camel 2x Swing Apache CXF Apache Karaf Servers Tomcat 8x 9x Web Logic 9x Web Sphere 6x Red Hat JBoss Fuse Glassfish Server 4x Databases Oracle 10g11g12c MSSQL MySQL 56 IBM DB2 MongoDB 3x Cassandra 3x Tools Ant 1x Gradle 3x Maven 3x Log4j Git 1x2x SVN 1x CVS 1xx Junit 4x Selenium 3x 4x Mockito Jenkins Hudson and Bamboo IDE Eclipse LunaM6 MarsM7 NeonRC3 IntelliJ IDEA15x Net Beans8x RAD7x Platforms Windows 7 810 Windows Server 200812 Ubuntu 1504 Red Hat Enterprise Linux",
    "unique_id": "f8f7bf0a-5e20-449c-8016-0869604182ba"
}