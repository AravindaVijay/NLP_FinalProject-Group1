{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Citi Groups Manhattan NY Overall 8 years of broad involvement in Design Development and Maintenance of Web applications with great information and working knowledge on MultiTier Architectures utilizing web centric innovations in various domains Hands on experience in all stages of Software Development Life Cycle SDLC Hands on experience in Requirement Analysis Highlevel design using Design Patterns and ObjectOriented Programming Good working experience with Agile MethodologyScrum Waterfall model and with Test Driven Development TDD Experience using J2EE Design Patterns like MVC DAO Singleton Factory pattern and service locator and Delegate Good Knowledge on developing the UI pages from scratch using HTML5 CSS3 JavaScript jQuery Bootstrap AJAX Angularjs Node JS and Reactjs Experience with Frontend JavaScript frameworks like Angular JS Node JS Having knowledge on Java 18 features like Lambda expressions and functional interfaces and Parallel Streams Expertise in the implementation of Core concepts of Java J2EE Technologies JSP Servlets JSTL JMS Struts Spring Hibernate EJB Java Beans JDBC XML Web Services JNDI MultiThreading Strong handson experience with Spring MVC Controllers Spring Annotations Inversion of Control IOC DI Dependency injection Aspect oriented programmingAOP Spring Boot Spring DAO Spring ORM Hibernate JPA Expertise in developing MVC architecture for web based applications using Spring MVC framework and Servlets JSP JDBC Web Services SOAP REST Extensive experience in development of Web services such as SOAP using WSDL JAXB SOAP JAXWS and Apache CXF and Restful using JAXRS CXF Rest easy JERSY implementation Used SOAP for Web Services by exchanging XML data between the applications Developed and consumed RESTful Web Services in multiple projects Have Experience on REST Microservices using Spring Boot for the customers to consume data Familiar with web services formats XML and JSON Having knowledge of integrating AWS Amazon Web Services with other Application Infrastructure and Deploying scripts to AWS Hands on Experience with Middleware Technology Messaging Brokers like JMS Active MQ Rabbit MQ Experience in Enterprise Integration Development using Apache Camel Framework Extensive experience in developing producers customers in Apache Kafka to build a data pipeline Having Experience to develop business logic using Scala Having Experience build applications based on SOA architecture in IBM integration Designer Experience in writing SQL PLSQL Procedures Functions Triggers and Packages on Database RDBMS packages like Oracle 11g MySQL PostgreSQL Microsoft SQL Server Good understanding of NoSQL Databases and hands on work experience in writing application on No SQL databases like Cassandra MongoDB DynamoDB Good experience in working with WebApplication servers like Apache Tomcat IBM WebSphere andor Web Logic JBOSS Worked on CICD tools for creating Jenkins jobs trigger the build and perform release cuts of the application Expertise in using Version control tools like SVN and GIT CVS Expertise in creating build files using ANT MAVEN GRADLE Experience in Logging and Tracing tool like log4j and SPLUNK Have experience to Develop scripts for build deployment maintenance and related tasks using Jenkins Docker Good Knowledge on using JUnit for Unit Testing along with Spring Mock and Mockito framework Good experience on Selenium IDE and creating scripts in seleniumRC by using Java Good working Domain Experiences on Banking HealthCare Health Insurance Communication Financial Experienced in BusinessTechnical Requirements Capturing Configuration Management Team Coordination and Software Engineering Processes Work Experience Full Stack Java Developer Citi Groups Manhattan NY August 2016 to Present Description This is a banking application which involves transmission and transaction of Information through Electronic Data Interchange under a highly secure environment This system enables account holders to perform basic banking operations like Balance Enquiry Online Bill Payments and Fund Transfer between the existing accounts etc via Internet which can be used by the account holders who has got the online access authorization The companys loan products include home equity loans mortgages construction financing personal loans car loans RV and boat loans military loans lines of credit business loans small business administration loans Responsibilities Involved in all the phases of Software Development Life Cycle including Requirement Analysis Design Implementation Testing and Maintenance Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Used Angular 20 for data binding and Node JS for backend support with APIs Experience in Clientside web development utilizing HTML 5 CSS3 Bootstrap Angular JS 20 Typescript to develop Single Page Application SPA and for the interactive user interface Used AngularCLI to generate components routes services pipes and to run tests Implemented Angular 2 Router to enable navigation from one view to the next as agent performs application tasks Created Angular 2 components implemented Interpolation input variables Bootstrapping Router Outlet binding the click event Component decorator binding to the hidden property Used Angular 2 MVC architecture and twoway data binding techniques in the development of the application Built stable React components and standalone functions to be added to any future pages Application classes are developed by Core Java 8 concepts like Lambdas Streams parallel Streams Functional Interfaces Developed Business objects using POJOs and data access layer using Hibernate framework Extensively Implemented Spring Boot dependency Injection DI and AOP Used Spring Core Annotations for Spring DI and Spring MVC for REST APIs and Spring Boot for Microservices Developed REST architecture based web services using Node JS stored dependencies using NPM and facilitated communication between client server Involved in the implementation of the RESTful web services using the Spring Boot and to perform CRUD operation from the database published the REST services parsed the data to project to client and handled the security and Authorization using Spring Security Spring security OAuth can be used for authentication and authorization purposes in application Designed and developed Spring Boot adapter applications using Rest API Implemented Microservices based Cloud Architecture utilizing Spring Boot Designed and created Microservices business segments and RESTful administration endpoints utilizing Spring Boot Developed Spring Boot applications using spring data Used Spring Boot which is radically faster in building cloud Microservices To generate reports for the batch services used the Spring Batch created test cases of Junit for testing the DAO layer Performed configuration deployment and support of cloud services including Amazon Web Services AWS Launch various AWS EC2 instance to deploy the application Practical implementation of AWS S3 RDC EBS Used AWS SDK to connect with Amazon SQS for bulk email processing Used Amazon Cloud Watch to monitor AWS services and Amazon Cloud Watch logs to monitor Hosted and tested the application in AWS servers before publishing it in an actual production environment Focused on Test Driven Development thereby creating detailed Junit tests for every single piece of functionality before the functionality Used Apache Kafka in cluster as messaging system between the APIs and Microservices Used Springdata module to communicate with Mongo DB Jira was used for project tracking and bug fixing and Jenkins for continuous Integration Involved in server configurations Data Sources Connection Pooling and deploying the apps on WebSphere Creating detailed Junit test for producing the clear and actual functionality of the application Used Log4J to capture the log that includes runtime exceptions Involved in building the code using Maven deployed on server Version controls like GIT Used for source code version controlling Used NoSQL DB like MongoDB for the proof of concept Used MongoDB as data storage and utilized aspects like replica sets and clever document design to make service extensible scale and feature wise Worked on MongoDB database concepts such as locking transactions indexes replication schema design Environment Java 1718 HTML5 CSS3 jQuery Ajax Angular JS 20 Bootstrap JSON J2EE Spring Framework Spring MVC Spring Security Spring Boot Spring Data JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology Kafka AWS Linux Maven Pivotal Cloud Git JIRA Junit Microservices TDD MongoDB Angular JS Full Stack Java Developer Cox Communications Atlanta GA February 2015 to July 2016 Description Cox Communications also known as Cox Cable and formerly Cox Broadcasting Corporation Dimension Cable Services and TimesMirror Cable is an American privatelyowned subsidiary of Cox Enterprises providing digital cable television telecommunications and Home Automation services in the United States It is the thirdlargest cable television provider in the United States Responsibilities Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Designed the complete website using HTML5 CSS3 jQuery AJAX JSON Bootstrap JavaScript Developed single page applications SPAs using Angular JS to improve page performance Used Angular JS to create reusable components like custom directives filters for data manipulations and to display data in company standard format in UI Experience in writing swagger documentation for Node JS services Used Angular JS to create reusable components like custom directives filters for data manipulations and to display data in company standard format in UI Added dynamic functionality to the application by implementing Node JS Wrote internal and external API services using Node JS modules Developed internal coding using J2EE technologies based on the MVC Architecture Used Java 8 features in developing the code like Lambda expressions Functional Programming Stream API etc Implemented Business Logic using Java Spring MVC and Hibernate Implemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth Developed Business objects using POJOs and data access layer using Hibernate framework Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP Spring Annotations Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available Removed all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot Batch processing and partitioning using SpringBatch Developed REST architecture based web services to facilitate communication between client server Involved in the implementation of the RESTful web services using the Spring Boot and to perform CRUD operation from the database published the REST services parsed the data to project to client and handled the security and Authorization using Spring Security Spring security OAuth can be used for authentication and authorization purposes in application Implemented RESTful and SOAP based web administrations utilizing for JAXRS and JAXWS individually Strategic and practical implementation of cloudspecific AWS technologies including Elastic Compute CloudEC2 Simple Storage Services S3 Cloud Formation Elastic Beanstalk Virtual Private CloudVPC RDS and Cloud Watch Handson experience in developing AWS cloud formation templates and setting up Auto scaling for EC2 instances and involved in the automated provisioning of AWS cloud environment using Jenkins Aware of troubleshooting issues on AWS and other developer IDE and Cloud environments Design develop test of SOA services using SOARESTful Web Service Involved in the deployment of REST based WebService EndPoints Developed the REST based Microservices using spring data and spring boot with JPA Refactored Microservice to make it RESTful thread safe and more configurable Created Docker images for SOA projects that are developed as Microservices Used Microservice architecture with Spring BootCloud foundry based services interacting through a combination of REST Developed the application as cloud native and deployed in Pivotal Cloud Foundry platform Configured and build Asynchronous communication with JMS services with MQ services Developed Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Deployed the application on a Web Logic server on a UNIX platform Used Maven building tool for creating EAR file to be deployed in application servers Used JIRA ticketing system to keep track of issues and tasks on individuals Developed a continuous deployment pipeline using Jenkins Chef and shell script Version controls like GIT Used for source code version controlling Worked on No SQL databases like Cassandra Used Cassandra as data storage and utilized aspects like replica sets and clever document design to make service extensible scale and feature wise Environment Java 1718 HTML5 CSS3 jQuery Ajax Angular JS Bootstrap JSON J2EE Spring MVC Spring Security Spring Boot Spring Data Spring Batch JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology AWS Maven Pivotal Cloud Git Thyme leaf DynamoDB Life ray JIRA Junit Linux Log4J TDD Cassandra Groovy Node JS Oracle Splunk My SQL Microservices Java J2EE Developer Blue Cross Blue Shield Elkridge MD June 2013 to January 2015 Description BlueCross BlueShield is one of the USAs largest Health insurance companies It provides healthcare coverage and offers variety of insurance related products at reasonable prices The company enables the clients to enhance risk and care management effectiveness by improving member identification and facilitating program design and execution Responsibilities Involved in the analysis design coding development and testing stages of the application using Software Development Life Cycle SDLC Used Multithreading concepts in the application thereby supporting concurrent alerts creations and adhered to new design patterns and frameworks used within the firm for fast and quality development Application classes are developed by Core Java collections Exception handling Generics Design patterns are used and they are for client data like created Services Business Delegate Controller and DAO Implemented MVC architecture using Spring MVC and used Java Bean Classes for the Business Logic in the application Extensively used HTML CSS JavaScript AngularJS jQuery and AJAX to provide users with interactive speedy functional and more usable user interfaces Created and maintained the configuration of the Spring IOC container with Dependency Injection Developed Business Layer DAO Classes and combined with Spring framework combination of JMS with PTP and PubSub methods with message broker Apache ActiveMQ and Apache Camel Used Spring JDBC for accessing the relational databases and Spring ORM is used for templates Used Apache MySQL which is used for horizontal scaling and maintaining huge amount of data Actively involved in OOAD design throughout the project Integrated Dependency Injection among various layers of an application using Spring Involved in creating and extracting data from database using SQL queries PLSQL Stored procedures triggers and packages on Oracle database Developed the application by using Eclipse IDE and added Drools for core development in business because of its workspace and plugins with the help of IBM WebSphere Application Server Used Spring AOP for cross cutting concerns like logging and exception handling Developed web services like RESTful SOAP For RESTful JAXRS implementation of Jersey is used and for SOAP Metro implementation is used Used Jasmine for testing JS code Incorporated design patterns like MVC Singleton Facade patterns Used ANT Scripts for automating the process of building deploying the system and used Gradle as automation tool for the tasks in the Unix Written Unix shell scripts to identify user login information Developed the test cases using JUnit for unit testing and Mockito used for testing accuracy of code Used SVN for versioning control system and Tortoise SVN as its client Environment Java 6 7 JSP Servlet Spring MVC AOP IOC JDBC Boot Batch Gradle Hibernate HTML CSS JavaScript IBM WebSphere DB2 jQuery JNDI AJAX Jasmine PostgreSQL SOAP RESTful web services JMS Tortoise SVN Camel ActiveMQ Eclipse WebLogic Thyme leaf Microsoft SQL Server SVN Oracle Tomcat Drools SVN ANT Scripts Groovy My SQL DynamoDB JUnit Log4J Unix Shell Mockito JavaJ2EE Developer Aspen dental Syracuse NY October 2012 to May 2013 Description Aspen Dental is a nationwide leader offering dental care solutions and services This is a web based enterprise application that provides services like patient demography information appointment scheduling medical records pharmacy medical history insurance and accounting information This application is used by patients doctors field managers and higher management for availing managing and providing dental services Responsibilities Designed and developed Enterprise Eligibility business objects and domain objects with Object Relational Mapping framework such as Hibernate Created applications connection pools deployment of JSPs Servlets and EJBs in Apache Tomcat Developed Presentation layer components comprising of JSP AJAX Struts Action and AJAX tag libraries Developed backend stored procedures and triggers using Oracle PLSQL involved in database objects creation performance tuning of stored procedures and query plan Developed SQL queries with JDBC API Hibernate ORM to access data Develop innovative and quality solutions by making use of latest tools and technologies like Apache CXF Spring IOC and Spring AOP Implemented Executor Framework in Multithreading Designed and implemented Multiple Process Service using Multithreading and Concurrency concepts to schedule and execute jobs Used the various error handling features of SOA Suite 11g like Fault Management Framework catchcatch all branches compensating transaction etc to achieve robust error handling Worked extensively on the SOA infrastructure and Enterprise Manager EM console to fix some critical performance memory and transaction timeout issues in the system Written Unix shell scripts to identify user login information Performed general Clear Case administration Developed JUnit test cases for all the developed modules Developed the different components of application such as JSPs Servlets EJBs using WebSphere Studio Application Developer and used CVS for version control Was involved in writing JSPs JavaScript and Servlets to generate dynamic web pages and web content Developed and build the application using ANT Prepared the REST and SOAP based service calls depending on the data passing to the web service Environment Core JAVA 56 JavaScript Servlets JSPs JDBC API EJB JPA PostgreSQL SpringCore AOP Hibernate JSF HTML CSS AJAX SOAP WS RESTFUL WS SOA Life ray Oracle 10g DAO SVN ANT Eclipse Unix HTML PLSQL Apache Tomcat Splunk Clear Case Groovy MYSQL SQL Developer DB2 JUnit CSS Apache Camel Unix Shell Microsoft SQL Server Log 4j Java Developer Lexicon Infotech Limited Hyderabad Telangana April 2009 to September 2012 Description Implemented Online Payroll Management System module which is used to manage the records of the employees working in the company Using this System Payroll can be generated based on employees job type pay rate incentives and hours worked Responsibilities Responsible for developing the application according to the requirements and designs by Software Development Life Cycle SDLC process of Waterfall Four Weeks Sprint Planning Grooming Retrospective are part of this model Implementation of Struts MVC architecture by separating the Business Logic from Presentation Logic using JSP and used JDBC for creating Data Access Layer Developed DAO classes for the data interaction and service classes for the Business Logic Implemented SOAP Web Services and testing can be done by SOAP UI Used Apache Tomcat web server for deployment and administration of the components Created Servlets for developing Control Logic and Java Beans for developing Business Logic of the application Used tiny log for logging utility in the LINUX OS Performed unit testing using TestNG for the codes Used IBM RAD as software development platform for developing the whole application Used CVS for the version control management and wrote ANT build scripts Created SQL queries and PLSQL stored procedures and deployed Tomcat server Environment Java JSP Servlet Struts MVC JDBC Apache Tomcat IBM RAD CVS SQL PLSQL SOAP Web Services TestNG Tomcat SOAP UI Oracle LINUX OS Education Bachelors Skills Java 8 years JSP 8 years Oracle 7 years SOAP 7 years web services 7 years Java 1718 HTML5 CSS3 jQuery Ajax Angular JS 20 Bootstrap JSON J2EE Spring Framework Spring MVC Spring Security Spring Boot Spring Data JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology Kafka AWS Linux Maven Pivotal Cloud Git JIRA Junit Microservices TDD MongoDB Angular JS Javascript Angular React PHP Node Additional Information SKILLS JAVA 7 years JSP 7 years ORACLE 7 years SOAP 7 years SQL 7 years Technical Skills Languages Core Java J2EE SQL and PLSQL JavaJ2EE Technologies Servlets JSP JavaBeans 30 Java Servlet API 30 Frameworks Spring Hibernate Angular JS 1X JSF Struts 1x20 ApplicationWeb servers IBM WebSphere 8x7x 6x5x BEA Web Logic 8191 Apache Tomcat 5x6x7x8x JBOSS 4x3x Web Sockets Databases Oracle SQL server MySQL 57 DB2 111 NoSQL Databases MongoDB Cassandra Web Technologies HTML 5 JavaScript 18 XML 20 CSS 3 jQuery 211 Bootstrap Angular JS 20 React JS Node JS Version Controls GIT GitHub sub version and JIRA Operating system Windows 10 Linux Unix Testing and Logging Frameworks JUnit JMeter Log4J SoapUI Test NG easy mock and power mock Reporting Tools Crystal Reports XI SSRS 50 IDQ Analyst Tool 95 Jasper Reports 60 Methodologies Agile waterfall TDD Scrum Developer IDE Platforms Eclipse Net Beans IntelliJ 20171 Spring Tool Suite STS 383 Studio GITHUB Edit plus Notepad Build Tools Ant 110 Maven 339 Gradle 341 Jenkins 2x XML Web Services SOAP REST XML XSD Apache Axis DOM SAX JAXP JAXB XML Bean Cloud Environments AWS Pivotal Cloud Foundry",
    "entities": [
        "Hosted",
        "AJAX",
        "IDE",
        "Test Driven Development TDD",
        "the Business Logic Implemented SOAP Web Services",
        "BEA",
        "Node JS Wrote",
        "UNIX",
        "MultiTier Architectures",
        "JMS",
        "Selenium IDE",
        "Jersey",
        "JSP AJAX Struts Action",
        "Java J2EE Technologies JSP Servlets",
        "Developed Microservice",
        "Design Patterns",
        "Amazon SQS",
        "Authorization using Spring Security",
        "Waterfall Four Weeks Sprint Planning Grooming Retrospective",
        "IBM",
        "CVS",
        "Integration Involved",
        "Dependency Injection Developed Business Layer DAO Classes",
        "Java Developer Lexicon Infotech Limited Hyderabad",
        "Control Logic",
        "PubSub",
        "SOAP",
        "XML",
        "EAR",
        "Atlanta",
        "Oracle Splunk My SQL Microservices",
        "JPA Refactored Microservice",
        "Java Bean Classes",
        "Multiple Process Service",
        "React",
        "JAXWS",
        "Domain Experiences on",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "Shell",
        "WebSphere Creating",
        "Jenkins Chef",
        "Amazon Web Services AWS Launch",
        "SPLUNK",
        "EM",
        "Amazon",
        "Data Access Layer Developed",
        "Apache CXF Spring IOC",
        "jQuery JNDI AJAX Jasmine PostgreSQL SOAP",
        "Reporting Tools Crystal Reports XI SSRS",
        "Fault Management Framework",
        "Developed",
        "Middleware Technology Messaging Brokers",
        "DAO",
        "Created Servlets",
        "Cox Cable",
        "Mockito",
        "JMS Active",
        "Scala Having",
        "Responsibilities Involved",
        "Integrated Dependency Injection",
        "the Business Logic from Presentation Logic",
        "Restful",
        "Servlets",
        "MQ",
        "OAuth Developed Business",
        "HTML5",
        "Develop",
        "SOA",
        "RESTful SOAP For RESTful JAXRS implementation",
        "JSP",
        "Hibernate Implemented RESTful Web",
        "Spring Data Framework",
        "Oracle PLSQL",
        "MVC Singleton",
        "Application Infrastructure",
        "Spring DI",
        "Worked",
        "Version",
        "WebService EndPoints Developed",
        "Tracing",
        "Data Sources Connection",
        "Banking HealthCare Health Insurance Communication Financial Experienced",
        "Design Development",
        "Created Docker",
        "Angular JS",
        "STS",
        "MVC",
        "Bootstrap JSON",
        "Node JS",
        "REST Microservices",
        "Rest API Implemented Microservices",
        "BusinessTechnical Requirements Capturing Configuration Management Team Coordination and Software Engineering Processes Work Experience Full Stack Java Developer Citi Groups Manhattan",
        "API",
        "HTML CSS JavaScript",
        "Mongo DB Jira",
        "Spring JDBC",
        "Drools",
        "Created",
        "Syracuse",
        "AWS",
        "WebLogic Thyme",
        "Created SQL",
        "Created Angular 2",
        "ApplicationWeb",
        "SOAP Metro",
        "JSF",
        "the Business Logic",
        "SOA Life",
        "Responsibilities Responsible",
        "Home Automation",
        "SQL",
        "Oracle SQL",
        "IDQ Analyst Tool",
        "DOM SAX JAXP",
        "Amazon Web Services",
        "Enterprise Integration Development",
        "TimesMirror Cable",
        "NPM",
        "SVN Camel",
        "JAXRS",
        "the United States",
        "CICD",
        "Description BlueCross BlueShield",
        "Cox Enterprises",
        "WebSphere Studio Application Developer",
        "Software Development Life Cycle SDLC Hands",
        "Hibernate Template",
        "Practical",
        "Information through Electronic Data Interchange",
        "SpringBatch Developed",
        "REST Developed",
        "IBM WebSphere Application",
        "WebLogic AgileScrum Methodology",
        "Singleton Factory",
        "CRUD",
        "Shell Mockito JavaJ2EE Developer Aspen",
        "Spring AOP Implemented Executor Framework",
        "JavaScript Servlets",
        "Maven",
        "Performed",
        "Balance Enquiry Online Bill Payments",
        "lJavaspan",
        "Description Cox Communications",
        "JavaScript",
        "ANT",
        "MVC AOP",
        "UI",
        "Parallel Streams Expertise",
        "OOAD",
        "Microsoft",
        "WebApplication",
        "AWS Hands on Experience",
        "GIT CVS Expertise",
        "UI Added",
        "SVN",
        "Spring BootCloud",
        "Implemented Angular 2 Router",
        "CSS",
        "Cox Broadcasting Corporation Dimension Cable Services",
        "Spring MVC Controllers",
        "Apache Camel Framework Extensive",
        "jQuery",
        "Tomcat",
        "REST",
        "Hibernate Created",
        "Authorization using Spring Security Spring",
        "ObjectOriented Programming Good",
        "PTP",
        "the United States Responsibilities Involved",
        "Implementation of Struts MVC",
        "Software Development Life Cycle",
        "Maven Pivotal",
        "Single Page Application",
        "JMS Struts Spring Hibernate"
    ],
    "experience": "Experience using J2EE Design Patterns like MVC DAO Singleton Factory pattern and service locator and Delegate Good Knowledge on developing the UI pages from scratch using HTML5 CSS3 JavaScript jQuery Bootstrap AJAX Angularjs Node JS and Reactjs Experience with Frontend JavaScript frameworks like Angular JS Node JS Having knowledge on Java 18 features like Lambda expressions and functional interfaces and Parallel Streams Expertise in the implementation of Core concepts of Java J2EE Technologies JSP Servlets JSTL JMS Struts Spring Hibernate EJB Java Beans JDBC XML Web Services JNDI MultiThreading Strong handson experience with Spring MVC Controllers Spring Annotations Inversion of Control IOC DI Dependency injection Aspect oriented programmingAOP Spring Boot Spring DAO Spring ORM Hibernate JPA Expertise in developing MVC architecture for web based applications using Spring MVC framework and Servlets JSP JDBC Web Services SOAP REST Extensive experience in development of Web services such as SOAP using WSDL JAXB SOAP JAXWS and Apache CXF and Restful using JAXRS CXF Rest easy JERSY implementation Used SOAP for Web Services by exchanging XML data between the applications Developed and consumed RESTful Web Services in multiple projects Have Experience on REST Microservices using Spring Boot for the customers to consume data Familiar with web services formats XML and JSON Having knowledge of integrating AWS Amazon Web Services with other Application Infrastructure and Deploying scripts to AWS Hands on Experience with Middleware Technology Messaging Brokers like JMS Active MQ Rabbit MQ Experience in Enterprise Integration Development using Apache Camel Framework Extensive experience in developing producers customers in Apache Kafka to build a data pipeline Having Experience to develop business logic using Scala Having Experience build applications based on SOA architecture in IBM integration Designer Experience in writing SQL PLSQL Procedures Functions Triggers and Packages on Database RDBMS packages like Oracle 11 g MySQL PostgreSQL Microsoft SQL Server Good understanding of NoSQL Databases and hands on work experience in writing application on No SQL databases like Cassandra MongoDB DynamoDB Good experience in working with WebApplication servers like Apache Tomcat IBM WebSphere andor Web Logic JBOSS Worked on CICD tools for creating Jenkins jobs trigger the build and perform release cuts of the application Expertise in using Version control tools like SVN and GIT CVS Expertise in creating build files using ANT MAVEN GRADLE Experience in Logging and Tracing tool like log4j and SPLUNK Have experience to Develop scripts for build deployment maintenance and related tasks using Jenkins Docker Good Knowledge on using JUnit for Unit Testing along with Spring Mock and Mockito framework Good experience on Selenium IDE and creating scripts in seleniumRC by using Java Good working Domain Experiences on Banking HealthCare Health Insurance Communication Financial Experienced in BusinessTechnical Requirements Capturing Configuration Management Team Coordination and Software Engineering Processes Work Experience Full Stack Java Developer Citi Groups Manhattan NY August 2016 to Present Description This is a banking application which involves transmission and transaction of Information through Electronic Data Interchange under a highly secure environment This system enables account holders to perform basic banking operations like Balance Enquiry Online Bill Payments and Fund Transfer between the existing accounts etc via Internet which can be used by the account holders who has got the online access authorization The companys loan products include home equity loans mortgages construction financing personal loans car loans RV and boat loans military loans lines of credit business loans small business administration loans Responsibilities Involved in all the phases of Software Development Life Cycle including Requirement Analysis Design Implementation Testing and Maintenance Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Used Angular 20 for data binding and Node JS for backend support with APIs Experience in Clientside web development utilizing HTML 5 CSS3 Bootstrap Angular JS 20 Typescript to develop Single Page Application SPA and for the interactive user interface Used AngularCLI to generate components routes services pipes and to run tests Implemented Angular 2 Router to enable navigation from one view to the next as agent performs application tasks Created Angular 2 components implemented Interpolation input variables Bootstrapping Router Outlet binding the click event Component decorator binding to the hidden property Used Angular 2 MVC architecture and twoway data binding techniques in the development of the application Built stable React components and standalone functions to be added to any future pages Application classes are developed by Core Java 8 concepts like Lambdas Streams parallel Streams Functional Interfaces Developed Business objects using POJOs and data access layer using Hibernate framework Extensively Implemented Spring Boot dependency Injection DI and AOP Used Spring Core Annotations for Spring DI and Spring MVC for REST APIs and Spring Boot for Microservices Developed REST architecture based web services using Node JS stored dependencies using NPM and facilitated communication between client server Involved in the implementation of the RESTful web services using the Spring Boot and to perform CRUD operation from the database published the REST services parsed the data to project to client and handled the security and Authorization using Spring Security Spring security OAuth can be used for authentication and authorization purposes in application Designed and developed Spring Boot adapter applications using Rest API Implemented Microservices based Cloud Architecture utilizing Spring Boot Designed and created Microservices business segments and RESTful administration endpoints utilizing Spring Boot Developed Spring Boot applications using spring data Used Spring Boot which is radically faster in building cloud Microservices To generate reports for the batch services used the Spring Batch created test cases of Junit for testing the DAO layer Performed configuration deployment and support of cloud services including Amazon Web Services AWS Launch various AWS EC2 instance to deploy the application Practical implementation of AWS S3 RDC EBS Used AWS SDK to connect with Amazon SQS for bulk email processing Used Amazon Cloud Watch to monitor AWS services and Amazon Cloud Watch logs to monitor Hosted and tested the application in AWS servers before publishing it in an actual production environment Focused on Test Driven Development thereby creating detailed Junit tests for every single piece of functionality before the functionality Used Apache Kafka in cluster as messaging system between the APIs and Microservices Used Springdata module to communicate with Mongo DB Jira was used for project tracking and bug fixing and Jenkins for continuous Integration Involved in server configurations Data Sources Connection Pooling and deploying the apps on WebSphere Creating detailed Junit test for producing the clear and actual functionality of the application Used Log4J to capture the log that includes runtime exceptions Involved in building the code using Maven deployed on server Version controls like GIT Used for source code version controlling Used NoSQL DB like MongoDB for the proof of concept Used MongoDB as data storage and utilized aspects like replica sets and clever document design to make service extensible scale and feature wise Worked on MongoDB database concepts such as locking transactions indexes replication schema design Environment Java 1718 HTML5 CSS3 jQuery Ajax Angular JS 20 Bootstrap JSON J2EE Spring Framework Spring MVC Spring Security Spring Boot Spring Data JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology Kafka AWS Linux Maven Pivotal Cloud Git JIRA Junit Microservices TDD MongoDB Angular JS Full Stack Java Developer Cox Communications Atlanta GA February 2015 to July 2016 Description Cox Communications also known as Cox Cable and formerly Cox Broadcasting Corporation Dimension Cable Services and TimesMirror Cable is an American privatelyowned subsidiary of Cox Enterprises providing digital cable television telecommunications and Home Automation services in the United States It is the thirdlargest cable television provider in the United States Responsibilities Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Designed the complete website using HTML5 CSS3 jQuery AJAX JSON Bootstrap JavaScript Developed single page applications SPAs using Angular JS to improve page performance Used Angular JS to create reusable components like custom directives filters for data manipulations and to display data in company standard format in UI Experience in writing swagger documentation for Node JS services Used Angular JS to create reusable components like custom directives filters for data manipulations and to display data in company standard format in UI Added dynamic functionality to the application by implementing Node JS Wrote internal and external API services using Node JS modules Developed internal coding using J2EE technologies based on the MVC Architecture Used Java 8 features in developing the code like Lambda expressions Functional Programming Stream API etc Implemented Business Logic using Java Spring MVC and Hibernate Implemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth Developed Business objects using POJOs and data access layer using Hibernate framework Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP Spring Annotations Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available Removed all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot Batch processing and partitioning using SpringBatch Developed REST architecture based web services to facilitate communication between client server Involved in the implementation of the RESTful web services using the Spring Boot and to perform CRUD operation from the database published the REST services parsed the data to project to client and handled the security and Authorization using Spring Security Spring security OAuth can be used for authentication and authorization purposes in application Implemented RESTful and SOAP based web administrations utilizing for JAXRS and JAXWS individually Strategic and practical implementation of cloudspecific AWS technologies including Elastic Compute CloudEC2 Simple Storage Services S3 Cloud Formation Elastic Beanstalk Virtual Private CloudVPC RDS and Cloud Watch Handson experience in developing AWS cloud formation templates and setting up Auto scaling for EC2 instances and involved in the automated provisioning of AWS cloud environment using Jenkins Aware of troubleshooting issues on AWS and other developer IDE and Cloud environments Design develop test of SOA services using SOARESTful Web Service Involved in the deployment of REST based WebService EndPoints Developed the REST based Microservices using spring data and spring boot with JPA Refactored Microservice to make it RESTful thread safe and more configurable Created Docker images for SOA projects that are developed as Microservices Used Microservice architecture with Spring BootCloud foundry based services interacting through a combination of REST Developed the application as cloud native and deployed in Pivotal Cloud Foundry platform Configured and build Asynchronous communication with JMS services with MQ services Developed Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Deployed the application on a Web Logic server on a UNIX platform Used Maven building tool for creating EAR file to be deployed in application servers Used JIRA ticketing system to keep track of issues and tasks on individuals Developed a continuous deployment pipeline using Jenkins Chef and shell script Version controls like GIT Used for source code version controlling Worked on No SQL databases like Cassandra Used Cassandra as data storage and utilized aspects like replica sets and clever document design to make service extensible scale and feature wise Environment Java 1718 HTML5 CSS3 jQuery Ajax Angular JS Bootstrap JSON J2EE Spring MVC Spring Security Spring Boot Spring Data Spring Batch JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology AWS Maven Pivotal Cloud Git Thyme leaf DynamoDB Life ray JIRA Junit Linux Log4J TDD Cassandra Groovy Node JS Oracle Splunk My SQL Microservices Java J2EE Developer Blue Cross Blue Shield Elkridge MD June 2013 to January 2015 Description BlueCross BlueShield is one of the USAs largest Health insurance companies It provides healthcare coverage and offers variety of insurance related products at reasonable prices The company enables the clients to enhance risk and care management effectiveness by improving member identification and facilitating program design and execution Responsibilities Involved in the analysis design coding development and testing stages of the application using Software Development Life Cycle SDLC Used Multithreading concepts in the application thereby supporting concurrent alerts creations and adhered to new design patterns and frameworks used within the firm for fast and quality development Application classes are developed by Core Java collections Exception handling Generics Design patterns are used and they are for client data like created Services Business Delegate Controller and DAO Implemented MVC architecture using Spring MVC and used Java Bean Classes for the Business Logic in the application Extensively used HTML CSS JavaScript AngularJS jQuery and AJAX to provide users with interactive speedy functional and more usable user interfaces Created and maintained the configuration of the Spring IOC container with Dependency Injection Developed Business Layer DAO Classes and combined with Spring framework combination of JMS with PTP and PubSub methods with message broker Apache ActiveMQ and Apache Camel Used Spring JDBC for accessing the relational databases and Spring ORM is used for templates Used Apache MySQL which is used for horizontal scaling and maintaining huge amount of data Actively involved in OOAD design throughout the project Integrated Dependency Injection among various layers of an application using Spring Involved in creating and extracting data from database using SQL queries PLSQL Stored procedures triggers and packages on Oracle database Developed the application by using Eclipse IDE and added Drools for core development in business because of its workspace and plugins with the help of IBM WebSphere Application Server Used Spring AOP for cross cutting concerns like logging and exception handling Developed web services like RESTful SOAP For RESTful JAXRS implementation of Jersey is used and for SOAP Metro implementation is used Used Jasmine for testing JS code Incorporated design patterns like MVC Singleton Facade patterns Used ANT Scripts for automating the process of building deploying the system and used Gradle as automation tool for the tasks in the Unix Written Unix shell scripts to identify user login information Developed the test cases using JUnit for unit testing and Mockito used for testing accuracy of code Used SVN for versioning control system and Tortoise SVN as its client Environment Java 6 7 JSP Servlet Spring MVC AOP IOC JDBC Boot Batch Gradle Hibernate HTML CSS JavaScript IBM WebSphere DB2 jQuery JNDI AJAX Jasmine PostgreSQL SOAP RESTful web services JMS Tortoise SVN Camel ActiveMQ Eclipse WebLogic Thyme leaf Microsoft SQL Server SVN Oracle Tomcat Drools SVN ANT Scripts Groovy My SQL DynamoDB JUnit Log4J Unix Shell Mockito JavaJ2EE Developer Aspen dental Syracuse NY October 2012 to May 2013 Description Aspen Dental is a nationwide leader offering dental care solutions and services This is a web based enterprise application that provides services like patient demography information appointment scheduling medical records pharmacy medical history insurance and accounting information This application is used by patients doctors field managers and higher management for availing managing and providing dental services Responsibilities Designed and developed Enterprise Eligibility business objects and domain objects with Object Relational Mapping framework such as Hibernate Created applications connection pools deployment of JSPs Servlets and EJBs in Apache Tomcat Developed Presentation layer components comprising of JSP AJAX Struts Action and AJAX tag libraries Developed backend stored procedures and triggers using Oracle PLSQL involved in database objects creation performance tuning of stored procedures and query plan Developed SQL queries with JDBC API Hibernate ORM to access data Develop innovative and quality solutions by making use of latest tools and technologies like Apache CXF Spring IOC and Spring AOP Implemented Executor Framework in Multithreading Designed and implemented Multiple Process Service using Multithreading and Concurrency concepts to schedule and execute jobs Used the various error handling features of SOA Suite 11 g like Fault Management Framework catchcatch all branches compensating transaction etc to achieve robust error handling Worked extensively on the SOA infrastructure and Enterprise Manager EM console to fix some critical performance memory and transaction timeout issues in the system Written Unix shell scripts to identify user login information Performed general Clear Case administration Developed JUnit test cases for all the developed modules Developed the different components of application such as JSPs Servlets EJBs using WebSphere Studio Application Developer and used CVS for version control Was involved in writing JSPs JavaScript and Servlets to generate dynamic web pages and web content Developed and build the application using ANT Prepared the REST and SOAP based service calls depending on the data passing to the web service Environment Core JAVA 56 JavaScript Servlets JSPs JDBC API EJB JPA PostgreSQL SpringCore AOP Hibernate JSF HTML CSS AJAX SOAP WS RESTFUL WS SOA Life ray Oracle 10 g DAO SVN ANT Eclipse Unix HTML PLSQL Apache Tomcat Splunk Clear Case Groovy MYSQL SQL Developer DB2 JUnit CSS Apache Camel Unix Shell Microsoft SQL Server Log 4j Java Developer Lexicon Infotech Limited Hyderabad Telangana April 2009 to September 2012 Description Implemented Online Payroll Management System module which is used to manage the records of the employees working in the company Using this System Payroll can be generated based on employees job type pay rate incentives and hours worked Responsibilities Responsible for developing the application according to the requirements and designs by Software Development Life Cycle SDLC process of Waterfall Four Weeks Sprint Planning Grooming Retrospective are part of this model Implementation of Struts MVC architecture by separating the Business Logic from Presentation Logic using JSP and used JDBC for creating Data Access Layer Developed DAO classes for the data interaction and service classes for the Business Logic Implemented SOAP Web Services and testing can be done by SOAP UI Used Apache Tomcat web server for deployment and administration of the components Created Servlets for developing Control Logic and Java Beans for developing Business Logic of the application Used tiny log for logging utility in the LINUX OS Performed unit testing using TestNG for the codes Used IBM RAD as software development platform for developing the whole application Used CVS for the version control management and wrote ANT build scripts Created SQL queries and PLSQL stored procedures and deployed Tomcat server Environment Java JSP Servlet Struts MVC JDBC Apache Tomcat IBM RAD CVS SQL PLSQL SOAP Web Services TestNG Tomcat SOAP UI Oracle LINUX OS Education Bachelors Skills Java 8 years JSP 8 years Oracle 7 years SOAP 7 years web services 7 years Java 1718 HTML5 CSS3 jQuery Ajax Angular JS 20 Bootstrap JSON J2EE Spring Framework Spring MVC Spring Security Spring Boot Spring Data JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology Kafka AWS Linux Maven Pivotal Cloud Git JIRA Junit Microservices TDD MongoDB Angular JS Javascript Angular React PHP Node Additional Information SKILLS JAVA 7 years JSP 7 years ORACLE 7 years SOAP 7 years SQL 7 years Technical Skills Languages Core Java J2EE SQL and PLSQL JavaJ2EE Technologies Servlets JSP JavaBeans 30 Java Servlet API 30 Frameworks Spring Hibernate Angular JS 1X JSF Struts 1x20 ApplicationWeb servers IBM WebSphere 8x7x 6x5x BEA Web Logic 8191 Apache Tomcat 5x6x7x8x JBOSS 4x3x Web Sockets Databases Oracle SQL server MySQL 57 DB2 111 NoSQL Databases MongoDB Cassandra Web Technologies HTML 5 JavaScript 18 XML 20 CSS 3 jQuery 211 Bootstrap Angular JS 20 React JS Node JS Version Controls GIT GitHub sub version and JIRA Operating system Windows 10 Linux Unix Testing and Logging Frameworks JUnit JMeter Log4J SoapUI Test NG easy mock and power mock Reporting Tools Crystal Reports XI SSRS 50 IDQ Analyst Tool 95 Jasper Reports 60 Methodologies Agile waterfall TDD Scrum Developer IDE Platforms Eclipse Net Beans IntelliJ 20171 Spring Tool Suite STS 383 Studio GITHUB Edit plus Notepad Build Tools Ant 110 Maven 339 Gradle 341 Jenkins 2x XML Web Services SOAP REST XML XSD Apache Axis DOM SAX JAXP JAXB XML Bean Cloud Environments AWS Pivotal Cloud Foundry",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Citi",
        "Groups",
        "Manhattan",
        "NY",
        "Overall",
        "years",
        "involvement",
        "Design",
        "Development",
        "Maintenance",
        "Web",
        "applications",
        "information",
        "knowledge",
        "MultiTier",
        "Architectures",
        "web",
        "innovations",
        "domains",
        "Hands",
        "experience",
        "stages",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Hands",
        "experience",
        "Requirement",
        "Analysis",
        "Highlevel",
        "design",
        "Design",
        "Patterns",
        "ObjectOriented",
        "Programming",
        "Good",
        "working",
        "experience",
        "Agile",
        "MethodologyScrum",
        "Waterfall",
        "model",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Experience",
        "J2EE",
        "Design",
        "Patterns",
        "MVC",
        "DAO",
        "Singleton",
        "Factory",
        "pattern",
        "service",
        "locator",
        "Delegate",
        "Good",
        "Knowledge",
        "UI",
        "pages",
        "scratch",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "AJAX",
        "Angularjs",
        "Node",
        "JS",
        "Reactjs",
        "Experience",
        "Frontend",
        "JavaScript",
        "frameworks",
        "JS",
        "Node",
        "JS",
        "knowledge",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "interfaces",
        "Parallel",
        "Streams",
        "Expertise",
        "implementation",
        "concepts",
        "Java",
        "J2EE",
        "Technologies",
        "JSP",
        "Servlets",
        "JSTL",
        "JMS",
        "Struts",
        "Spring",
        "Hibernate",
        "EJB",
        "Java",
        "Beans",
        "JDBC",
        "XML",
        "Web",
        "Services",
        "JNDI",
        "MultiThreading",
        "Strong",
        "handson",
        "experience",
        "Spring",
        "MVC",
        "Controllers",
        "Spring",
        "Annotations",
        "Inversion",
        "Control",
        "IOC",
        "DI",
        "Dependency",
        "injection",
        "Aspect",
        "programmingAOP",
        "Spring",
        "Boot",
        "Spring",
        "DAO",
        "Spring",
        "ORM",
        "Hibernate",
        "JPA",
        "Expertise",
        "MVC",
        "architecture",
        "web",
        "applications",
        "Spring",
        "MVC",
        "framework",
        "Servlets",
        "JSP",
        "JDBC",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "experience",
        "development",
        "Web",
        "services",
        "SOAP",
        "WSDL",
        "JAXB",
        "JAXWS",
        "Apache",
        "CXF",
        "JAXRS",
        "CXF",
        "Rest",
        "implementation",
        "SOAP",
        "Web",
        "Services",
        "XML",
        "data",
        "applications",
        "RESTful",
        "Web",
        "Services",
        "projects",
        "Experience",
        "REST",
        "Microservices",
        "Spring",
        "Boot",
        "customers",
        "data",
        "web",
        "services",
        "formats",
        "XML",
        "JSON",
        "knowledge",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "Application",
        "Infrastructure",
        "Deploying",
        "scripts",
        "AWS",
        "Hands",
        "Experience",
        "Middleware",
        "Technology",
        "Brokers",
        "JMS",
        "MQ",
        "Rabbit",
        "MQ",
        "Experience",
        "Enterprise",
        "Integration",
        "Development",
        "Apache",
        "Camel",
        "Framework",
        "experience",
        "producers",
        "customers",
        "Apache",
        "Kafka",
        "data",
        "pipeline",
        "Experience",
        "business",
        "logic",
        "Scala",
        "Experience",
        "applications",
        "SOA",
        "architecture",
        "IBM",
        "integration",
        "Designer",
        "Experience",
        "SQL",
        "PLSQL",
        "Procedures",
        "Functions",
        "Triggers",
        "Packages",
        "Database",
        "RDBMS",
        "packages",
        "Oracle",
        "g",
        "MySQL",
        "PostgreSQL",
        "Microsoft",
        "SQL",
        "Server",
        "Good",
        "understanding",
        "NoSQL",
        "Databases",
        "hands",
        "work",
        "experience",
        "writing",
        "application",
        "SQL",
        "Cassandra",
        "MongoDB",
        "experience",
        "WebApplication",
        "servers",
        "Apache",
        "Tomcat",
        "IBM",
        "WebSphere",
        "Web",
        "Logic",
        "JBOSS",
        "CICD",
        "tools",
        "Jenkins",
        "jobs",
        "build",
        "release",
        "cuts",
        "application",
        "Expertise",
        "Version",
        "control",
        "tools",
        "SVN",
        "GIT",
        "CVS",
        "Expertise",
        "files",
        "ANT",
        "MAVEN",
        "GRADLE",
        "Experience",
        "Logging",
        "Tracing",
        "tool",
        "log4j",
        "SPLUNK",
        "experience",
        "scripts",
        "build",
        "deployment",
        "maintenance",
        "tasks",
        "Jenkins",
        "Docker",
        "Good",
        "Knowledge",
        "JUnit",
        "Unit",
        "Testing",
        "Spring",
        "Mock",
        "Mockito",
        "framework",
        "experience",
        "Selenium",
        "IDE",
        "scripts",
        "seleniumRC",
        "Java",
        "Good",
        "Domain",
        "Experiences",
        "Banking",
        "HealthCare",
        "Health",
        "Insurance",
        "Communication",
        "Financial",
        "BusinessTechnical",
        "Requirements",
        "Capturing",
        "Configuration",
        "Management",
        "Team",
        "Coordination",
        "Software",
        "Engineering",
        "Processes",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Citi",
        "Groups",
        "Manhattan",
        "NY",
        "August",
        "Present",
        "Description",
        "banking",
        "application",
        "transmission",
        "transaction",
        "Information",
        "Electronic",
        "Data",
        "Interchange",
        "environment",
        "system",
        "account",
        "holders",
        "banking",
        "operations",
        "Balance",
        "Enquiry",
        "Online",
        "Bill",
        "Payments",
        "Fund",
        "Transfer",
        "accounts",
        "Internet",
        "account",
        "holders",
        "access",
        "authorization",
        "companys",
        "loan",
        "products",
        "home",
        "equity",
        "loans",
        "construction",
        "loans",
        "car",
        "loans",
        "RV",
        "boat",
        "loans",
        "loans",
        "lines",
        "credit",
        "business",
        "loans",
        "business",
        "administration",
        "loans",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Requirement",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Maintenance",
        "Daily",
        "Scrum",
        "Agile",
        "meetings",
        "Sprint",
        "planning",
        "estimation",
        "tasks",
        "user",
        "stories",
        "Demo",
        "end",
        "sprint",
        "Angular",
        "data",
        "Node",
        "JS",
        "support",
        "APIs",
        "Experience",
        "web",
        "development",
        "HTML",
        "CSS3",
        "Bootstrap",
        "Angular",
        "JS",
        "Typescript",
        "Single",
        "Page",
        "Application",
        "SPA",
        "user",
        "interface",
        "AngularCLI",
        "components",
        "routes",
        "services",
        "pipes",
        "tests",
        "Angular",
        "Router",
        "navigation",
        "view",
        "agent",
        "application",
        "tasks",
        "Angular",
        "components",
        "Interpolation",
        "input",
        "variables",
        "Bootstrapping",
        "Router",
        "Outlet",
        "event",
        "Component",
        "decorator",
        "property",
        "Angular",
        "MVC",
        "architecture",
        "twoway",
        "data",
        "techniques",
        "development",
        "application",
        "React",
        "components",
        "functions",
        "pages",
        "Application",
        "classes",
        "Core",
        "Java",
        "concepts",
        "Lambdas",
        "Streams",
        "Streams",
        "Functional",
        "Interfaces",
        "Developed",
        "Business",
        "POJOs",
        "data",
        "access",
        "layer",
        "Hibernate",
        "framework",
        "Spring",
        "Boot",
        "dependency",
        "Injection",
        "DI",
        "AOP",
        "Spring",
        "Core",
        "Annotations",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "APIs",
        "Spring",
        "Boot",
        "Microservices",
        "Developed",
        "REST",
        "architecture",
        "web",
        "services",
        "Node",
        "JS",
        "dependencies",
        "NPM",
        "communication",
        "client",
        "server",
        "implementation",
        "RESTful",
        "web",
        "services",
        "Spring",
        "Boot",
        "CRUD",
        "operation",
        "database",
        "REST",
        "services",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "Spring",
        "security",
        "OAuth",
        "authentication",
        "authorization",
        "purposes",
        "application",
        "Spring",
        "Boot",
        "adapter",
        "applications",
        "Rest",
        "API",
        "Microservices",
        "Cloud",
        "Architecture",
        "Spring",
        "Boot",
        "Microservices",
        "business",
        "segments",
        "administration",
        "endpoints",
        "Spring",
        "Boot",
        "Developed",
        "Spring",
        "Boot",
        "applications",
        "spring",
        "data",
        "Spring",
        "Boot",
        "cloud",
        "Microservices",
        "reports",
        "batch",
        "services",
        "Spring",
        "Batch",
        "test",
        "cases",
        "Junit",
        "DAO",
        "layer",
        "configuration",
        "deployment",
        "support",
        "cloud",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "EC2",
        "instance",
        "application",
        "implementation",
        "AWS",
        "S3",
        "EBS",
        "AWS",
        "SDK",
        "Amazon",
        "SQS",
        "email",
        "processing",
        "Amazon",
        "Cloud",
        "AWS",
        "services",
        "Amazon",
        "Cloud",
        "Watch",
        "Hosted",
        "application",
        "AWS",
        "servers",
        "production",
        "environment",
        "Test",
        "Driven",
        "Development",
        "Junit",
        "tests",
        "piece",
        "functionality",
        "functionality",
        "Apache",
        "Kafka",
        "cluster",
        "system",
        "APIs",
        "Microservices",
        "Springdata",
        "module",
        "Mongo",
        "DB",
        "Jira",
        "project",
        "tracking",
        "bug",
        "fixing",
        "Jenkins",
        "Integration",
        "server",
        "configurations",
        "Data",
        "Sources",
        "Connection",
        "Pooling",
        "apps",
        "WebSphere",
        "Junit",
        "test",
        "functionality",
        "application",
        "Log4J",
        "log",
        "runtime",
        "exceptions",
        "code",
        "Maven",
        "server",
        "Version",
        "controls",
        "GIT",
        "source",
        "code",
        "version",
        "NoSQL",
        "DB",
        "MongoDB",
        "proof",
        "concept",
        "MongoDB",
        "data",
        "storage",
        "aspects",
        "replica",
        "sets",
        "document",
        "design",
        "service",
        "scale",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "design",
        "Environment",
        "Java",
        "HTML5",
        "CSS3",
        "jQuery",
        "Ajax",
        "Angular",
        "JS",
        "Bootstrap",
        "JSON",
        "J2EE",
        "Spring",
        "Framework",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "JSP",
        "Hibernate",
        "Web",
        "services",
        "Stored",
        "Procedures",
        "RAD",
        "WebLogic",
        "AgileScrum",
        "Methodology",
        "Kafka",
        "Linux",
        "Maven",
        "Cloud",
        "Git",
        "JIRA",
        "Junit",
        "Microservices",
        "TDD",
        "JS",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Cox",
        "Communications",
        "Atlanta",
        "GA",
        "February",
        "July",
        "Description",
        "Cox",
        "Communications",
        "Cox",
        "Cable",
        "Cox",
        "Broadcasting",
        "Corporation",
        "Dimension",
        "Cable",
        "Services",
        "TimesMirror",
        "Cable",
        "subsidiary",
        "Cox",
        "Enterprises",
        "cable",
        "television",
        "telecommunications",
        "Home",
        "Automation",
        "services",
        "United",
        "States",
        "cable",
        "television",
        "provider",
        "United",
        "States",
        "Responsibilities",
        "Daily",
        "Scrum",
        "Agile",
        "meetings",
        "Sprint",
        "planning",
        "estimation",
        "tasks",
        "user",
        "stories",
        "Demo",
        "end",
        "sprint",
        "website",
        "HTML5",
        "CSS3",
        "jQuery",
        "AJAX",
        "JSON",
        "Bootstrap",
        "JavaScript",
        "page",
        "applications",
        "SPAs",
        "JS",
        "page",
        "performance",
        "JS",
        "components",
        "custom",
        "directives",
        "filters",
        "data",
        "manipulations",
        "data",
        "company",
        "format",
        "UI",
        "Experience",
        "documentation",
        "Node",
        "JS",
        "services",
        "JS",
        "components",
        "custom",
        "directives",
        "filters",
        "data",
        "manipulations",
        "data",
        "company",
        "format",
        "UI",
        "functionality",
        "application",
        "Node",
        "JS",
        "Wrote",
        "API",
        "services",
        "Node",
        "JS",
        "modules",
        "coding",
        "J2EE",
        "technologies",
        "MVC",
        "Architecture",
        "Java",
        "features",
        "code",
        "Lambda",
        "expressions",
        "Functional",
        "Programming",
        "Stream",
        "API",
        "Business",
        "Logic",
        "Java",
        "Spring",
        "MVC",
        "Hibernate",
        "Web",
        "services",
        "data",
        "client",
        "side",
        "REST",
        "API",
        "JS",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "OAuth",
        "Developed",
        "Business",
        "POJOs",
        "data",
        "access",
        "layer",
        "Hibernate",
        "framework",
        "business",
        "components",
        "Spring",
        "Boot",
        "Spring",
        "Dependency",
        "Injection",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "Annotations",
        "Spring",
        "Data",
        "Framework",
        "features",
        "Spring",
        "JDBC",
        "Spring",
        "ORM",
        "classes",
        "JDBC",
        "Template",
        "Hibernate",
        "Template",
        "database",
        "operations",
        "Data",
        "sources",
        "Removed",
        "XML",
        "configurations",
        "MVC",
        "application",
        "classes",
        "Spring",
        "Boot",
        "Batch",
        "processing",
        "SpringBatch",
        "Developed",
        "REST",
        "architecture",
        "web",
        "services",
        "communication",
        "client",
        "server",
        "implementation",
        "RESTful",
        "web",
        "services",
        "Spring",
        "Boot",
        "CRUD",
        "operation",
        "database",
        "REST",
        "services",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "Spring",
        "security",
        "OAuth",
        "authentication",
        "authorization",
        "purposes",
        "application",
        "SOAP",
        "web",
        "administrations",
        "JAXRS",
        "JAXWS",
        "implementation",
        "AWS",
        "technologies",
        "Elastic",
        "Compute",
        "Simple",
        "Storage",
        "Services",
        "S3",
        "Cloud",
        "Formation",
        "Elastic",
        "Beanstalk",
        "Virtual",
        "Private",
        "CloudVPC",
        "RDS",
        "Cloud",
        "Watch",
        "Handson",
        "experience",
        "AWS",
        "cloud",
        "formation",
        "templates",
        "Auto",
        "scaling",
        "EC2",
        "instances",
        "provisioning",
        "AWS",
        "cloud",
        "environment",
        "Jenkins",
        "Aware",
        "troubleshooting",
        "issues",
        "AWS",
        "developer",
        "IDE",
        "Cloud",
        "Design",
        "test",
        "SOA",
        "services",
        "Web",
        "Service",
        "deployment",
        "REST",
        "WebService",
        "EndPoints",
        "REST",
        "Microservices",
        "spring",
        "data",
        "spring",
        "boot",
        "JPA",
        "Refactored",
        "Microservice",
        "thread",
        "Created",
        "Docker",
        "images",
        "SOA",
        "projects",
        "Microservices",
        "Microservice",
        "architecture",
        "Spring",
        "BootCloud",
        "foundry",
        "services",
        "combination",
        "REST",
        "application",
        "cloud",
        "Cloud",
        "Foundry",
        "platform",
        "Configured",
        "communication",
        "JMS",
        "services",
        "MQ",
        "services",
        "Developed",
        "Microservice",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "application",
        "Web",
        "Logic",
        "server",
        "UNIX",
        "platform",
        "Maven",
        "building",
        "tool",
        "EAR",
        "file",
        "application",
        "servers",
        "JIRA",
        "system",
        "track",
        "issues",
        "tasks",
        "individuals",
        "deployment",
        "pipeline",
        "Jenkins",
        "Chef",
        "shell",
        "script",
        "Version",
        "controls",
        "GIT",
        "source",
        "code",
        "version",
        "Worked",
        "SQL",
        "Cassandra",
        "Cassandra",
        "data",
        "storage",
        "aspects",
        "replica",
        "sets",
        "document",
        "design",
        "service",
        "scale",
        "Environment",
        "Java",
        "HTML5",
        "CSS3",
        "jQuery",
        "Ajax",
        "Angular",
        "JS",
        "Bootstrap",
        "JSON",
        "J2EE",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "Spring",
        "Batch",
        "JSP",
        "Hibernate",
        "Web",
        "services",
        "Stored",
        "Procedures",
        "RAD",
        "WebLogic",
        "AgileScrum",
        "Methodology",
        "Maven",
        "Cloud",
        "Git",
        "Thyme",
        "leaf",
        "DynamoDB",
        "Life",
        "ray",
        "JIRA",
        "Junit",
        "Linux",
        "TDD",
        "Cassandra",
        "Groovy",
        "Node",
        "JS",
        "Oracle",
        "Splunk",
        "SQL",
        "Microservices",
        "Java",
        "J2EE",
        "Developer",
        "Blue",
        "Cross",
        "Blue",
        "Shield",
        "Elkridge",
        "MD",
        "June",
        "January",
        "Description",
        "BlueCross",
        "BlueShield",
        "USAs",
        "Health",
        "insurance",
        "companies",
        "healthcare",
        "coverage",
        "variety",
        "insurance",
        "products",
        "prices",
        "company",
        "clients",
        "risk",
        "care",
        "management",
        "effectiveness",
        "member",
        "identification",
        "program",
        "design",
        "execution",
        "Responsibilities",
        "analysis",
        "design",
        "development",
        "testing",
        "stages",
        "application",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Multithreading",
        "concepts",
        "application",
        "alerts",
        "creations",
        "design",
        "patterns",
        "frameworks",
        "firm",
        "quality",
        "development",
        "Application",
        "classes",
        "Core",
        "Java",
        "collections",
        "Exception",
        "Generics",
        "Design",
        "patterns",
        "client",
        "data",
        "Services",
        "Business",
        "Delegate",
        "Controller",
        "DAO",
        "MVC",
        "architecture",
        "Spring",
        "MVC",
        "Java",
        "Bean",
        "Classes",
        "Business",
        "Logic",
        "application",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "AJAX",
        "users",
        "user",
        "interfaces",
        "configuration",
        "Spring",
        "IOC",
        "container",
        "Dependency",
        "Injection",
        "Developed",
        "Business",
        "Layer",
        "DAO",
        "Classes",
        "Spring",
        "framework",
        "combination",
        "JMS",
        "PTP",
        "PubSub",
        "methods",
        "message",
        "broker",
        "Apache",
        "ActiveMQ",
        "Apache",
        "Camel",
        "Spring",
        "JDBC",
        "databases",
        "Spring",
        "ORM",
        "templates",
        "Apache",
        "MySQL",
        "scaling",
        "amount",
        "data",
        "OOAD",
        "design",
        "project",
        "Integrated",
        "Dependency",
        "Injection",
        "layers",
        "application",
        "Spring",
        "data",
        "database",
        "SQL",
        "queries",
        "PLSQL",
        "procedures",
        "triggers",
        "packages",
        "Oracle",
        "database",
        "application",
        "Eclipse",
        "IDE",
        "Drools",
        "core",
        "development",
        "business",
        "workspace",
        "plugins",
        "help",
        "IBM",
        "WebSphere",
        "Application",
        "Server",
        "Spring",
        "AOP",
        "cross",
        "concerns",
        "logging",
        "exception",
        "web",
        "services",
        "SOAP",
        "JAXRS",
        "implementation",
        "Jersey",
        "SOAP",
        "Metro",
        "implementation",
        "Used",
        "Jasmine",
        "JS",
        "code",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Facade",
        "ANT",
        "Scripts",
        "process",
        "building",
        "system",
        "Gradle",
        "automation",
        "tool",
        "tasks",
        "Unix",
        "Written",
        "Unix",
        "shell",
        "scripts",
        "user",
        "login",
        "information",
        "test",
        "cases",
        "JUnit",
        "unit",
        "testing",
        "Mockito",
        "testing",
        "accuracy",
        "code",
        "SVN",
        "control",
        "system",
        "Tortoise",
        "SVN",
        "client",
        "Environment",
        "Java",
        "JSP",
        "Servlet",
        "Spring",
        "MVC",
        "AOP",
        "IOC",
        "JDBC",
        "Boot",
        "Batch",
        "Gradle",
        "Hibernate",
        "HTML",
        "CSS",
        "JavaScript",
        "IBM",
        "WebSphere",
        "DB2",
        "jQuery",
        "JNDI",
        "AJAX",
        "Jasmine",
        "PostgreSQL",
        "SOAP",
        "web",
        "services",
        "JMS",
        "Tortoise",
        "SVN",
        "Camel",
        "ActiveMQ",
        "Eclipse",
        "WebLogic",
        "Thyme",
        "leaf",
        "Microsoft",
        "SQL",
        "Server",
        "SVN",
        "Oracle",
        "Tomcat",
        "Drools",
        "SVN",
        "ANT",
        "Scripts",
        "Groovy",
        "SQL",
        "DynamoDB",
        "JUnit",
        "Log4J",
        "Unix",
        "Shell",
        "Mockito",
        "JavaJ2EE",
        "Developer",
        "Aspen",
        "Syracuse",
        "NY",
        "October",
        "May",
        "Description",
        "Aspen",
        "Dental",
        "leader",
        "care",
        "solutions",
        "services",
        "web",
        "enterprise",
        "application",
        "services",
        "patient",
        "demography",
        "information",
        "appointment",
        "scheduling",
        "records",
        "pharmacy",
        "history",
        "insurance",
        "accounting",
        "information",
        "application",
        "patients",
        "doctors",
        "field",
        "managers",
        "management",
        "services",
        "Responsibilities",
        "Enterprise",
        "Eligibility",
        "business",
        "objects",
        "domain",
        "objects",
        "Object",
        "Relational",
        "Mapping",
        "framework",
        "Hibernate",
        "Created",
        "applications",
        "connection",
        "pools",
        "deployment",
        "JSPs",
        "Servlets",
        "EJBs",
        "Apache",
        "Tomcat",
        "Presentation",
        "layer",
        "components",
        "JSP",
        "AJAX",
        "Struts",
        "Action",
        "AJAX",
        "tag",
        "backend",
        "procedures",
        "triggers",
        "Oracle",
        "PLSQL",
        "database",
        "creation",
        "performance",
        "procedures",
        "query",
        "Developed",
        "SQL",
        "JDBC",
        "API",
        "Hibernate",
        "ORM",
        "data",
        "quality",
        "solutions",
        "use",
        "tools",
        "technologies",
        "Apache",
        "CXF",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Executor",
        "Framework",
        "Multithreading",
        "Multiple",
        "Process",
        "Service",
        "Multithreading",
        "Concurrency",
        "concepts",
        "jobs",
        "error",
        "features",
        "SOA",
        "Suite",
        "g",
        "Fault",
        "Management",
        "Framework",
        "branches",
        "transaction",
        "error",
        "SOA",
        "infrastructure",
        "Enterprise",
        "Manager",
        "EM",
        "console",
        "performance",
        "memory",
        "transaction",
        "timeout",
        "issues",
        "system",
        "Unix",
        "shell",
        "scripts",
        "user",
        "login",
        "information",
        "Clear",
        "Case",
        "administration",
        "Developed",
        "JUnit",
        "test",
        "cases",
        "modules",
        "components",
        "application",
        "JSPs",
        "Servlets",
        "EJBs",
        "WebSphere",
        "Studio",
        "Application",
        "Developer",
        "CVS",
        "version",
        "control",
        "JSPs",
        "JavaScript",
        "Servlets",
        "web",
        "pages",
        "web",
        "content",
        "application",
        "ANT",
        "Prepared",
        "REST",
        "SOAP",
        "service",
        "data",
        "web",
        "service",
        "Environment",
        "Core",
        "JAVA",
        "JavaScript",
        "Servlets",
        "JDBC",
        "API",
        "EJB",
        "JPA",
        "PostgreSQL",
        "SpringCore",
        "AOP",
        "Hibernate",
        "JSF",
        "HTML",
        "CSS",
        "AJAX",
        "SOAP",
        "WS",
        "RESTFUL",
        "WS",
        "SOA",
        "Life",
        "ray",
        "Oracle",
        "g",
        "DAO",
        "SVN",
        "ANT",
        "Eclipse",
        "Unix",
        "HTML",
        "PLSQL",
        "Apache",
        "Tomcat",
        "Splunk",
        "Clear",
        "Case",
        "Groovy",
        "MYSQL",
        "SQL",
        "Developer",
        "DB2",
        "JUnit",
        "CSS",
        "Apache",
        "Camel",
        "Unix",
        "Shell",
        "Microsoft",
        "SQL",
        "Server",
        "Log",
        "4j",
        "Java",
        "Developer",
        "Lexicon",
        "Infotech",
        "Limited",
        "Hyderabad",
        "Telangana",
        "April",
        "September",
        "Description",
        "Online",
        "Payroll",
        "Management",
        "System",
        "module",
        "records",
        "employees",
        "company",
        "System",
        "Payroll",
        "employees",
        "job",
        "type",
        "pay",
        "rate",
        "incentives",
        "hours",
        "Responsibilities",
        "application",
        "requirements",
        "designs",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "process",
        "Waterfall",
        "Four",
        "Weeks",
        "Sprint",
        "Planning",
        "Grooming",
        "Retrospective",
        "part",
        "model",
        "Implementation",
        "Struts",
        "MVC",
        "architecture",
        "Business",
        "Logic",
        "Presentation",
        "Logic",
        "JSP",
        "JDBC",
        "Data",
        "Access",
        "Layer",
        "Developed",
        "DAO",
        "classes",
        "data",
        "interaction",
        "service",
        "classes",
        "Business",
        "Logic",
        "SOAP",
        "Web",
        "Services",
        "testing",
        "SOAP",
        "UI",
        "Apache",
        "Tomcat",
        "web",
        "server",
        "deployment",
        "administration",
        "components",
        "Servlets",
        "Control",
        "Logic",
        "Java",
        "Beans",
        "Business",
        "Logic",
        "application",
        "log",
        "utility",
        "LINUX",
        "OS",
        "Performed",
        "unit",
        "testing",
        "TestNG",
        "codes",
        "IBM",
        "RAD",
        "software",
        "development",
        "platform",
        "application",
        "CVS",
        "version",
        "control",
        "management",
        "ANT",
        "scripts",
        "SQL",
        "queries",
        "procedures",
        "Tomcat",
        "server",
        "Environment",
        "Java",
        "JSP",
        "Servlet",
        "Struts",
        "MVC",
        "JDBC",
        "Apache",
        "Tomcat",
        "IBM",
        "RAD",
        "CVS",
        "SQL",
        "PLSQL",
        "SOAP",
        "Web",
        "Services",
        "TestNG",
        "Tomcat",
        "SOAP",
        "UI",
        "Oracle",
        "LINUX",
        "OS",
        "Education",
        "Bachelors",
        "Skills",
        "Java",
        "years",
        "JSP",
        "years",
        "Oracle",
        "years",
        "SOAP",
        "years",
        "web",
        "services",
        "years",
        "Java",
        "HTML5",
        "CSS3",
        "jQuery",
        "Ajax",
        "Angular",
        "JS",
        "Bootstrap",
        "JSON",
        "J2EE",
        "Spring",
        "Framework",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "JSP",
        "Hibernate",
        "Web",
        "services",
        "Stored",
        "Procedures",
        "RAD",
        "WebLogic",
        "AgileScrum",
        "Methodology",
        "Kafka",
        "Linux",
        "Maven",
        "Cloud",
        "Git",
        "JIRA",
        "Junit",
        "Microservices",
        "TDD",
        "JS",
        "Javascript",
        "Angular",
        "React",
        "PHP",
        "Node",
        "Additional",
        "Information",
        "SKILLS",
        "years",
        "JSP",
        "years",
        "ORACLE",
        "years",
        "SOAP",
        "years",
        "SQL",
        "years",
        "Technical",
        "Skills",
        "Languages",
        "Core",
        "Java",
        "J2EE",
        "SQL",
        "PLSQL",
        "JavaJ2EE",
        "Technologies",
        "Servlets",
        "JSP",
        "JavaBeans",
        "Java",
        "Servlet",
        "API",
        "Frameworks",
        "Spring",
        "Hibernate",
        "Angular",
        "JS",
        "1X",
        "JSF",
        "Struts",
        "ApplicationWeb",
        "IBM",
        "WebSphere",
        "8x7x",
        "BEA",
        "Web",
        "Logic",
        "Apache",
        "Tomcat",
        "JBOSS",
        "4x3x",
        "Web",
        "Sockets",
        "Oracle",
        "SQL",
        "server",
        "MySQL",
        "DB2",
        "NoSQL",
        "MongoDB",
        "Cassandra",
        "Web",
        "Technologies",
        "HTML",
        "JavaScript",
        "XML",
        "CSS",
        "jQuery",
        "Bootstrap",
        "Angular",
        "JS",
        "React",
        "JS",
        "Node",
        "JS",
        "Version",
        "Controls",
        "GIT",
        "GitHub",
        "sub",
        "version",
        "JIRA",
        "system",
        "Linux",
        "Unix",
        "Testing",
        "Logging",
        "Frameworks",
        "JUnit",
        "JMeter",
        "SoapUI",
        "Test",
        "NG",
        "mock",
        "power",
        "mock",
        "Reporting",
        "Tools",
        "Crystal",
        "Reports",
        "XI",
        "SSRS",
        "IDQ",
        "Analyst",
        "Tool",
        "Jasper",
        "Reports",
        "Methodologies",
        "waterfall",
        "TDD",
        "Scrum",
        "Developer",
        "IDE",
        "Platforms",
        "Eclipse",
        "Net",
        "Beans",
        "IntelliJ",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "Studio",
        "GITHUB",
        "Edit",
        "Notepad",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Gradle",
        "Jenkins",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "XML",
        "XSD",
        "Apache",
        "Axis",
        "DOM",
        "SAX",
        "JAXP",
        "JAXB",
        "XML",
        "Bean",
        "Cloud",
        "Environments",
        "Cloud",
        "Foundry"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:40:06.212708",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer Citi Groups Manhattan NY Overall 8 years of broad involvement in Design Development and Maintenance of Web applications with great information and working knowledge on MultiTier Architectures utilizing web centric innovations in various domains Hands on experience in all stages of Software Development Life Cycle SDLC Hands on experience in Requirement Analysis Highlevel design using Design Patterns and ObjectOriented Programming Good working experience with Agile MethodologyScrum Waterfall model and with Test Driven Development TDD Experience using J2EE Design Patterns like MVC DAO Singleton Factory pattern and service locator and Delegate Good Knowledge on developing the UI pages from scratch using HTML5 CSS3 JavaScript jQuery Bootstrap AJAX Angularjs Node JS and Reactjs Experience with Frontend JavaScript frameworks like Angular JS Node JS Having knowledge on Java 18 features like Lambda expressions and functional interfaces and Parallel Streams Expertise in the implementation of Core concepts of Java J2EE Technologies JSP Servlets JSTL JMS Struts Spring Hibernate EJB Java Beans JDBC XML Web Services JNDI MultiThreading Strong handson experience with Spring MVC Controllers Spring Annotations Inversion of Control IOC DI Dependency injection Aspect oriented programmingAOP Spring Boot Spring DAO Spring ORM Hibernate JPA Expertise in developing MVC architecture for web based applications using Spring MVC framework and Servlets JSP JDBC Web Services SOAP REST Extensive experience in development of Web services such as SOAP using WSDL JAXB SOAP JAXWS and Apache CXF and Restful using JAXRS CXF Rest easy JERSY implementation Used SOAP for Web Services by exchanging XML data between the applications Developed and consumed RESTful Web Services in multiple projects Have Experience on REST Microservices using Spring Boot for the customers to consume data Familiar with web services formats XML and JSON Having knowledge of integrating AWS Amazon Web Services with other Application Infrastructure and Deploying scripts to AWS Hands on Experience with Middleware Technology Messaging Brokers like JMS Active MQ Rabbit MQ Experience in Enterprise Integration Development using Apache Camel Framework Extensive experience in developing producers customers in Apache Kafka to build a data pipeline Having Experience to develop business logic using Scala Having Experience build applications based on SOA architecture in IBM integration Designer Experience in writing SQL PLSQL Procedures Functions Triggers and Packages on Database RDBMS packages like Oracle 11g MySQL PostgreSQL Microsoft SQL Server Good understanding of NoSQL Databases and hands on work experience in writing application on No SQL databases like Cassandra MongoDB DynamoDB Good experience in working with WebApplication servers like Apache Tomcat IBM WebSphere andor Web Logic JBOSS Worked on CICD tools for creating Jenkins jobs trigger the build and perform release cuts of the application Expertise in using Version control tools like SVN and GIT CVS Expertise in creating build files using ANT MAVEN GRADLE Experience in Logging and Tracing tool like log4j and SPLUNK Have experience to Develop scripts for build deployment maintenance and related tasks using Jenkins Docker Good Knowledge on using JUnit for Unit Testing along with Spring Mock and Mockito framework Good experience on Selenium IDE and creating scripts in seleniumRC by using Java Good working Domain Experiences on Banking HealthCare Health Insurance Communication Financial Experienced in BusinessTechnical Requirements Capturing Configuration Management Team Coordination and Software Engineering Processes Work Experience Full Stack Java Developer Citi Groups Manhattan NY August 2016 to Present Description This is a banking application which involves transmission and transaction of Information through Electronic Data Interchange under a highly secure environment This system enables account holders to perform basic banking operations like Balance Enquiry Online Bill Payments and Fund Transfer between the existing accounts etc via Internet which can be used by the account holders who has got the online access authorization The companys loan products include home equity loans mortgages construction financing personal loans car loans RV and boat loans military loans lines of credit business loans small business administration loans Responsibilities Involved in all the phases of Software Development Life Cycle including Requirement Analysis Design Implementation Testing and Maintenance Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Used Angular 20 for data binding and Node JS for backend support with APIs Experience in Clientside web development utilizing HTML 5 CSS3 Bootstrap Angular JS 20 Typescript to develop Single Page Application SPA and for the interactive user interface Used AngularCLI to generate components routes services pipes and to run tests Implemented Angular 2 Router to enable navigation from one view to the next as agent performs application tasks Created Angular 2 components implemented Interpolation input variables Bootstrapping Router Outlet binding the click event Component decorator binding to the hidden property Used Angular 2 MVC architecture and twoway data binding techniques in the development of the application Built stable React components and standalone functions to be added to any future pages Application classes are developed by Core Java 8 concepts like Lambdas Streams parallel Streams Functional Interfaces Developed Business objects using POJOs and data access layer using Hibernate framework Extensively Implemented Spring Boot dependency Injection DI and AOP Used Spring Core Annotations for Spring DI and Spring MVC for REST APIs and Spring Boot for Microservices Developed REST architecture based web services using Node JS stored dependencies using NPM and facilitated communication between client server Involved in the implementation of the RESTful web services using the Spring Boot and to perform CRUD operation from the database published the REST services parsed the data to project to client and handled the security and Authorization using Spring Security Spring security OAuth can be used for authentication and authorization purposes in application Designed and developed Spring Boot adapter applications using Rest API Implemented Microservices based Cloud Architecture utilizing Spring Boot Designed and created Microservices business segments and RESTful administration endpoints utilizing Spring Boot Developed Spring Boot applications using spring data Used Spring Boot which is radically faster in building cloud Microservices To generate reports for the batch services used the Spring Batch created test cases of Junit for testing the DAO layer Performed configuration deployment and support of cloud services including Amazon Web Services AWS Launch various AWS EC2 instance to deploy the application Practical implementation of AWS S3 RDC EBS Used AWS SDK to connect with Amazon SQS for bulk email processing Used Amazon Cloud Watch to monitor AWS services and Amazon Cloud Watch logs to monitor Hosted and tested the application in AWS servers before publishing it in an actual production environment Focused on Test Driven Development thereby creating detailed Junit tests for every single piece of functionality before the functionality Used Apache Kafka in cluster as messaging system between the APIs and Microservices Used Springdata module to communicate with Mongo DB Jira was used for project tracking and bug fixing and Jenkins for continuous Integration Involved in server configurations Data Sources Connection Pooling and deploying the apps on WebSphere Creating detailed Junit test for producing the clear and actual functionality of the application Used Log4J to capture the log that includes runtime exceptions Involved in building the code using Maven deployed on server Version controls like GIT Used for source code version controlling Used NoSQL DB like MongoDB for the proof of concept Used MongoDB as data storage and utilized aspects like replica sets and clever document design to make service extensible scale and feature wise Worked on MongoDB database concepts such as locking transactions indexes replication schema design Environment Java 1718 HTML5 CSS3 jQuery Ajax Angular JS 20 Bootstrap JSON J2EE Spring Framework Spring MVC Spring Security Spring Boot Spring Data JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology Kafka AWS Linux Maven Pivotal Cloud Git JIRA Junit Microservices TDD MongoDB Angular JS Full Stack Java Developer Cox Communications Atlanta GA February 2015 to July 2016 Description Cox Communications also known as Cox Cable and formerly Cox Broadcasting Corporation Dimension Cable Services and TimesMirror Cable is an American privatelyowned subsidiary of Cox Enterprises providing digital cable television telecommunications and Home Automation services in the United States It is the thirdlargest cable television provider in the United States Responsibilities Involved in Daily Scrum Agile meetings Sprint planning and estimation of the tasks for the user stories participated in retrospective and presenting Demo at end of the sprint Designed the complete website using HTML5 CSS3 jQuery AJAX JSON Bootstrap JavaScript Developed single page applications SPAs using Angular JS to improve page performance Used Angular JS to create reusable components like custom directives filters for data manipulations and to display data in company standard format in UI Experience in writing swagger documentation for Node JS services Used Angular JS to create reusable components like custom directives filters for data manipulations and to display data in company standard format in UI Added dynamic functionality to the application by implementing Node JS Wrote internal and external API services using Node JS modules Developed internal coding using J2EE technologies based on the MVC Architecture Used Java 8 features in developing the code like Lambda expressions Functional Programming Stream API etc Implemented Business Logic using Java Spring MVC and Hibernate Implemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth Developed Business objects using POJOs and data access layer using Hibernate framework Designed and developed business components using Spring Boot Spring Dependency Injection Core Spring AOP Spring Annotations Used Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available Removed all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot Batch processing and partitioning using SpringBatch Developed REST architecture based web services to facilitate communication between client server Involved in the implementation of the RESTful web services using the Spring Boot and to perform CRUD operation from the database published the REST services parsed the data to project to client and handled the security and Authorization using Spring Security Spring security OAuth can be used for authentication and authorization purposes in application Implemented RESTful and SOAP based web administrations utilizing for JAXRS and JAXWS individually Strategic and practical implementation of cloudspecific AWS technologies including Elastic Compute CloudEC2 Simple Storage Services S3 Cloud Formation Elastic Beanstalk Virtual Private CloudVPC RDS and Cloud Watch Handson experience in developing AWS cloud formation templates and setting up Auto scaling for EC2 instances and involved in the automated provisioning of AWS cloud environment using Jenkins Aware of troubleshooting issues on AWS and other developer IDE and Cloud environments Design develop test of SOA services using SOARESTful Web Service Involved in the deployment of REST based WebService EndPoints Developed the REST based Microservices using spring data and spring boot with JPA Refactored Microservice to make it RESTful thread safe and more configurable Created Docker images for SOA projects that are developed as Microservices Used Microservice architecture with Spring BootCloud foundry based services interacting through a combination of REST Developed the application as cloud native and deployed in Pivotal Cloud Foundry platform Configured and build Asynchronous communication with JMS services with MQ services Developed Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Deployed the application on a Web Logic server on a UNIX platform Used Maven building tool for creating EAR file to be deployed in application servers Used JIRA ticketing system to keep track of issues and tasks on individuals Developed a continuous deployment pipeline using Jenkins Chef and shell script Version controls like GIT Used for source code version controlling Worked on No SQL databases like Cassandra Used Cassandra as data storage and utilized aspects like replica sets and clever document design to make service extensible scale and feature wise Environment Java 1718 HTML5 CSS3 jQuery Ajax Angular JS Bootstrap JSON J2EE Spring MVC Spring Security Spring Boot Spring Data Spring Batch JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology AWS Maven Pivotal Cloud Git Thyme leaf DynamoDB Life ray JIRA Junit Linux Log4J TDD Cassandra Groovy Node JS Oracle Splunk My SQL Microservices Java J2EE Developer Blue Cross Blue Shield Elkridge MD June 2013 to January 2015 Description BlueCross BlueShield is one of the USAs largest Health insurance companies It provides healthcare coverage and offers variety of insurance related products at reasonable prices The company enables the clients to enhance risk and care management effectiveness by improving member identification and facilitating program design and execution Responsibilities Involved in the analysis design coding development and testing stages of the application using Software Development Life Cycle SDLC Used Multithreading concepts in the application thereby supporting concurrent alerts creations and adhered to new design patterns and frameworks used within the firm for fast and quality development Application classes are developed by Core Java collections Exception handling Generics Design patterns are used and they are for client data like created Services Business Delegate Controller and DAO Implemented MVC architecture using Spring MVC and used Java Bean Classes for the Business Logic in the application Extensively used HTML CSS JavaScript AngularJS jQuery and AJAX to provide users with interactive speedy functional and more usable user interfaces Created and maintained the configuration of the Spring IOC container with Dependency Injection Developed Business Layer DAO Classes and combined with Spring framework combination of JMS with PTP and PubSub methods with message broker Apache ActiveMQ and Apache Camel Used Spring JDBC for accessing the relational databases and Spring ORM is used for templates Used Apache MySQL which is used for horizontal scaling and maintaining huge amount of data Actively involved in OOAD design throughout the project Integrated Dependency Injection among various layers of an application using Spring Involved in creating and extracting data from database using SQL queries PLSQL Stored procedures triggers and packages on Oracle database Developed the application by using Eclipse IDE and added Drools for core development in business because of its workspace and plugins with the help of IBM WebSphere Application Server Used Spring AOP for cross cutting concerns like logging and exception handling Developed web services like RESTful SOAP For RESTful JAXRS implementation of Jersey is used and for SOAP Metro implementation is used Used Jasmine for testing JS code Incorporated design patterns like MVC Singleton Facade patterns Used ANT Scripts for automating the process of building deploying the system and used Gradle as automation tool for the tasks in the Unix Written Unix shell scripts to identify user login information Developed the test cases using JUnit for unit testing and Mockito used for testing accuracy of code Used SVN for versioning control system and Tortoise SVN as its client Environment Java 6 7 JSP Servlet Spring MVC AOP IOC JDBC Boot Batch Gradle Hibernate HTML CSS JavaScript IBM WebSphere DB2 jQuery JNDI AJAX Jasmine PostgreSQL SOAP RESTful web services JMS Tortoise SVN Camel ActiveMQ Eclipse WebLogic Thyme leaf Microsoft SQL Server SVN Oracle Tomcat Drools SVN ANT Scripts Groovy My SQL DynamoDB JUnit Log4J Unix Shell Mockito JavaJ2EE Developer Aspen dental Syracuse NY October 2012 to May 2013 Description Aspen Dental is a nationwide leader offering dental care solutions and services This is a web based enterprise application that provides services like patient demography information appointment scheduling medical records pharmacy medical history insurance and accounting information This application is used by patients doctors field managers and higher management for availing managing and providing dental services Responsibilities Designed and developed Enterprise Eligibility business objects and domain objects with Object Relational Mapping framework such as Hibernate Created applications connection pools deployment of JSPs Servlets and EJBs in Apache Tomcat Developed Presentation layer components comprising of JSP AJAX Struts Action and AJAX tag libraries Developed backend stored procedures and triggers using Oracle PLSQL involved in database objects creation performance tuning of stored procedures and query plan Developed SQL queries with JDBC API Hibernate ORM to access data Develop innovative and quality solutions by making use of latest tools and technologies like Apache CXF Spring IOC and Spring AOP Implemented Executor Framework in Multithreading Designed and implemented Multiple Process Service using Multithreading and Concurrency concepts to schedule and execute jobs Used the various error handling features of SOA Suite 11g like Fault Management Framework catchcatch all branches compensating transaction etc to achieve robust error handling Worked extensively on the SOA infrastructure and Enterprise Manager EM console to fix some critical performance memory and transaction timeout issues in the system Written Unix shell scripts to identify user login information Performed general Clear Case administration Developed JUnit test cases for all the developed modules Developed the different components of application such as JSPs Servlets EJBs using WebSphere Studio Application Developer and used CVS for version control Was involved in writing JSPs JavaScript and Servlets to generate dynamic web pages and web content Developed and build the application using ANT Prepared the REST and SOAP based service calls depending on the data passing to the web service Environment Core JAVA 56 JavaScript Servlets JSPs JDBC API EJB JPA PostgreSQL SpringCore AOP Hibernate JSF HTML CSS AJAX SOAP WS RESTFUL WS SOA Life ray Oracle 10g DAO SVN ANT Eclipse Unix HTML PLSQL Apache Tomcat Splunk Clear Case Groovy MYSQL SQL Developer DB2 JUnit CSS Apache Camel Unix Shell Microsoft SQL Server Log 4j Java Developer Lexicon Infotech Limited Hyderabad Telangana April 2009 to September 2012 Description Implemented Online Payroll Management System module which is used to manage the records of the employees working in the company Using this System Payroll can be generated based on employees job type pay rate incentives and hours worked Responsibilities Responsible for developing the application according to the requirements and designs by Software Development Life Cycle SDLC process of Waterfall Four Weeks Sprint Planning Grooming Retrospective are part of this model Implementation of Struts MVC architecture by separating the Business Logic from Presentation Logic using JSP and used JDBC for creating Data Access Layer Developed DAO classes for the data interaction and service classes for the Business Logic Implemented SOAP Web Services and testing can be done by SOAP UI Used Apache Tomcat web server for deployment and administration of the components Created Servlets for developing Control Logic and Java Beans for developing Business Logic of the application Used tiny log for logging utility in the LINUX OS Performed unit testing using TestNG for the codes Used IBM RAD as software development platform for developing the whole application Used CVS for the version control management and wrote ANT build scripts Created SQL queries and PLSQL stored procedures and deployed Tomcat server Environment Java JSP Servlet Struts MVC JDBC Apache Tomcat IBM RAD CVS SQL PLSQL SOAP Web Services TestNG Tomcat SOAP UI Oracle LINUX OS Education Bachelors Skills Java 8 years JSP 8 years Oracle 7 years SOAP 7 years web services 7 years Java 1718 HTML5 CSS3 jQuery Ajax Angular JS 20 Bootstrap JSON J2EE Spring Framework Spring MVC Spring Security Spring Boot Spring Data JSP Hibernate Web services RESTful Stored Procedures RAD WebLogic AgileScrum Methodology Kafka AWS Linux Maven Pivotal Cloud Git JIRA Junit Microservices TDD MongoDB Angular JS Javascript Angular React PHP Node Additional Information SKILLS JAVA 7 years JSP 7 years ORACLE 7 years SOAP 7 years SQL 7 years Technical Skills Languages Core Java J2EE SQL and PLSQL JavaJ2EE Technologies Servlets JSP JavaBeans 30 Java Servlet API 30 Frameworks Spring Hibernate Angular JS 1X JSF Struts 1x20 ApplicationWeb servers IBM WebSphere 8x7x 6x5x BEA Web Logic 8191 Apache Tomcat 5x6x7x8x JBOSS 4x3x Web Sockets Databases Oracle SQL server MySQL 57 DB2 111 NoSQL Databases MongoDB Cassandra Web Technologies HTML 5 JavaScript 18 XML 20 CSS 3 jQuery 211 Bootstrap Angular JS 20 React JS Node JS Version Controls GIT GitHub sub version and JIRA Operating system Windows 10 Linux Unix Testing and Logging Frameworks JUnit JMeter Log4J SoapUI Test NG easy mock and power mock Reporting Tools Crystal Reports XI SSRS 50 IDQ Analyst Tool 95 Jasper Reports 60 Methodologies Agile waterfall TDD Scrum Developer IDE Platforms Eclipse Net Beans IntelliJ 20171 Spring Tool Suite STS 383 Studio GITHUB Edit plus Notepad Build Tools Ant 110 Maven 339 Gradle 341 Jenkins 2x XML Web Services SOAP REST XML XSD Apache Axis DOM SAX JAXP JAXB XML Bean Cloud Environments AWS Pivotal Cloud Foundry",
    "unique_id": "b4ba307b-346c-47b5-88eb-84cedfee7585"
}