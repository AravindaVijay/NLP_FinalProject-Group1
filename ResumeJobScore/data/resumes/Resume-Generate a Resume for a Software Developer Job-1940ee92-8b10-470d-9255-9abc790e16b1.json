{
    "clean_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Wells Fargo New Milford NJ Over 3 years of IT experience in Analysis Design Development implementation and execution of test cases of software application using JavaJ2EE technologies Experienced in Java Application Development Object Oriented Concepts Object Oriented Design OOD Object Oriented Analysis OOA Object Oriented Programming OOP and its implementation Experience working with various SDLC methodologies like Agile Scrum RUP and Waterfall Model Expertise in implementing the persistence logic using JDBC JPA Spring JDBC Hibernate Strong experience in working on JavaScript environment like MEAN Mongo Express Angular Node Strong knowledge on OOPs concepts Core Java Multithreading Exception handling and Collection Framework Strong programming skills towards developing and implementing complete ntier web based application systems using JavaJ2EE technologies JDBC JSP Servlets Enterprise Java Beans JSF Spring SOA implementation XML JAXB JSON WSDL Experienced in coding using core java concepts like multithreading collections serialization synchronization exception handling and database connections Strong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework Good knowledge on the Spring Modules like Spring IOC Spring MVC Spring Batch and Spring Boot Having Handful experience in using OAuth 2 for Microservices security Experience with WebApplication servers Tomcat Web Logic and JBOSS Experience in using Restful framework like JAXRS Framework SOAP Web services using JAXWS Apache CXF Jersey Experience in using different version controllingtracking systems GIT CVS Subversion and Rational Clear Case Experience on APG Gateway Management tools like Apigee Experience using JIRA Bugzilla50x 44x and QualityCentre as issue and bug tracking tools Experienced with JUnit Framework4x Jasmine and Mockito for developing test cases using Test driven development TDD approach and log4j for logging Expertise in using databases such as Oracle DB2 and MySQL as a distributed database management system and writing Queries Stored procedures functions packages tables views and triggers Experienced in performing unit testing using JUnit Mockito integration and deployment of applications using tools such as ANT Jenkins and Maven debugging through log4j Deep knowledge of Splunk Experience in using Ant1x and Maven3x for build automation Skilled and experienced in cocoordinating efforts among multiple teams onsite and offshore and third parties Excellent verbal written communication and presentation skills problem solving and conflict resolution skills Work Experience Java Full Stack Developer Wells Fargo Charlotte NC February 2018 to Present Responsibilities The application is built Micro Service Oriented Architecture using MEAN4 MongoDB Express JS Angular 4060 and Nodejs stack and developed Single Page Applications SPA Designed and developed efficient user Interaction screens using HTML5 CSS3SASS and Twitter Bootstrap CSS framework and media queries to create responsive web pages Used Web Pack module bundler for compilation of SAAS files into CSS and for monitoring the application Developed multiple Angular 4060 components which are compatible with latest versions of typescript angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Developed angular views to hook up models to the DOM and synchronize data with server as a SPA Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Implemented Node JS as a serverside proxy for an eventdriven nonblocking IO model to make the application lightweight and efficient Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Utilized the inbuilt NPM package manager to configure the right versions of the packages and to achieve dependency management Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Implemented a robust RESTful Apache CXF web service and automated documentation to the web services in the application is provided by Swagger by configuring hapiswaggered and hapiswaggeredui Unit testing of web services is done using Spock framework by extending Groovy syntax Testing for Node JS is done using Mocha and chai and for Spring boot used Mokito junit mock mvc and thereby achieving Test Driven Development TDD Building cloud Microservices and implemented backend using Spring Boot and Authored application using Spring Cloud services spring version of Netflix OSSEureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Configured OIDC Open ID Connect on top of OAUTH 20 authentication and authorization framework to provide the security to rest web services Implemented Single Sign On and policybased authentication using Site Minder security framework Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernates second level EHCache Created dynamic schema design through NOSQL Mongo DB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Implemented Mongoose Connector as our ODM framework Configured Kibana data visualization plugin for Elasticsearch Logstash and created bar line and scatter plots or pie charts and maps on top of large volumes of data Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Configured New Relic to measure and monitor the performance of application Provided production supporton call support to fix production issues after the deployment Environment Angular 4060 Node JS Express JS Hapi JS HTML5 CSS3SASS Twitter Bootstrap40 Site Minder OAuth20 OIDC Eclipse Java EE IDE JIRA IBM MQ Jenkins Log4j Apache tomcat Mokito Junit mock mvc New Relic Swagger Maven30 Java Full stack Developer CareSource Downtown Dayton OH August 2017 to February 2018 Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Involved in Analysis design and coding on Java and J2EE Environment Implemented Spring Framework for the project Responsible for Creating custom general use modules and components which extend the elements and modules of core Angular 4 Created and maintain web pages using HTML5 CSS3 JavaScript JQUERY Java J2EE and also responsible for Designing of Web pages including Ajax controls and XML Created and managed microservices Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features All the functionality is implemented using Spring IO Spring Boot Microservices and Hibernate ORM Created and injected Spring Services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Followed agile methodology for developing the application Created continuous integration builds using Jenkins and deployed on app server Extensively used spring framework and Apache CXF for producing SOAP and REST web services as a part of the project development Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components Implementing Web services using JSON Developed various generic JavaScript functions used for validations Using GIT for Source Control and Version Management Focused on Test Driven Development TDD thereby creating detailed JUnit tests for every single piece of functionality before writing the functionality Used AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly Manipulated data to both send and fetch data from the server through GET DELETE and POST requests Handled response data from Restful web services using XML JSON and JQuery to update UI Interacted with java controllers JQuery Ajax and JSON to writeread data from back end systems Involved in writing test plans Test Cases and Test Scripts using selenium Designed and developed Test ScenarioTest CasesTest steps for various Business Servicesmethods covering both positive and negative testing Configured Selenium WebDriver TestNG and Maven created Selenium automation scripts in java using JUnit Environment Java jdk JEE Java 8 JSP HTML5 CSS3 Angular 4 polymer JS AJAX JSON Node JS React JS Microservices Multithreading XML Restful web services JQuery UI Maven Apache CXF Spring MVC JavaScript GIT SOAP Mongo DB J2EE Oracle 11g Eclipse 35 JUnit 44 Agile AWS Git JSP Apache Tomcat JavaJ2EE Developer Prodapt Solutions IN November 2013 to December 2015 Responsibilities Implemented the application using Spring Framework which is based on Model View Controller design pattern Applied design patterns and OO design concepts to improve the existing JavaJ2EE code base Used Groovy for automation testing and Spock for integration testing Used EJBs in the application and developed Session beans to house business logic at the middle tier level Involved in writing PLSQL stored procedures using PLSQL Developer Tested debugged and implemented the application using JUnit for unit testing Involved in documentation code reviews and analysis Build and deployment of the application on WebLogic Server Used Maven and ANT scripts for building and deploying application on to the server Bamboo is used for running the test cases Enterprise Tester JIRA are utilized for end to end testing of the application Agile methodology is followed for software development Github is the version tool Extensively used IntelliJ IDE for development Environment Java J2EE Spring 3 Groovy on Grails Maven ANT SQL PLSQL Unix IntelliJ Oracle VM VirtualBox DB2 Enterprise Tester JIRA Education Masters Skills JAVA HIBERNATE SPRING JBOSS JMS Javascript Angular Jquery",
    "entities": [
        "Spring Framework",
        "MEAN Mongo Express",
        "AJAX",
        "Test Driven Development TDD Building cloud Microservices",
        "OO",
        "JS Express",
        "Nodejs",
        "Test ScenarioTest CasesTest",
        "JAXWS Apache CXF Jersey",
        "HTTP",
        "Ajax",
        "node",
        "Mokito Junit",
        "Interaction",
        "SOAP",
        "POST",
        "WebLogic",
        "JUnit",
        "Present Responsibilities",
        "Configured Selenium WebDriver TestNG",
        "JavaJ2EE",
        "NC",
        "Automatic",
        "Mockito",
        "Spring",
        "Oracle VM VirtualBox",
        "java using",
        "Restful",
        "Spring Cloud",
        "UI Interacted",
        "HTML5",
        "JSP",
        "SAAS",
        "Oracle DB2",
        "ANT Jenkins",
        "IOC",
        "CXF Spring",
        "DOM",
        "QualityCentre",
        "Jenkins CICD",
        "CLI",
        "MVC",
        "Agile",
        "Node JS",
        "Test Cases and Test Scripts",
        "EHCache Created",
        "JUnit Framework4x Jasmine",
        "Created",
        "Spock",
        "JBOSS Application",
        "Implemented AWS",
        "Spring MVC Framework IOC Inversion",
        "XML Created",
        "Builtin AJAX HTTP Service",
        "Netflix",
        "GIT CVS Subversion",
        "OAuth 2 for Microservices security",
        "Mokito",
        "IDE JIRA IBM",
        "NPM",
        "Github",
        "Java Application Development Object Oriented Concepts Object Oriented Design OOD Object Oriented Analysis OOA Object Oriented Programming OOP",
        "Analysis Design Development",
        "Business Servicesmethods",
        "JavaScript GIT",
        "Maven",
        "Site Minder",
        "JavaScript",
        "ANT",
        "UI",
        "APG Gateway Management",
        "Selenium",
        "WebApplication",
        "CSS",
        "Source Control",
        "SPA",
        "REST",
        "the Spring Modules",
        "TDD",
        "NoSQL",
        "Micro Service Oriented Architecture",
        "Angular 4 Created",
        "JQuery",
        "Apigee",
        "Node"
    ],
    "experience": "Experience working with various SDLC methodologies like Agile Scrum RUP and Waterfall Model Expertise in implementing the persistence logic using JDBC JPA Spring JDBC Hibernate Strong experience in working on JavaScript environment like MEAN Mongo Express Angular Node Strong knowledge on OOPs concepts Core Java Multithreading Exception handling and Collection Framework Strong programming skills towards developing and implementing complete ntier web based application systems using JavaJ2EE technologies JDBC JSP Servlets Enterprise Java Beans JSF Spring SOA implementation XML JAXB JSON WSDL Experienced in coding using core java concepts like multithreading collections serialization synchronization exception handling and database connections Strong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework Good knowledge on the Spring Modules like Spring IOC Spring MVC Spring Batch and Spring Boot Having Handful experience in using OAuth 2 for Microservices security Experience with WebApplication servers Tomcat Web Logic and JBOSS Experience in using Restful framework like JAXRS Framework SOAP Web services using JAXWS Apache CXF Jersey Experience in using different version controllingtracking systems GIT CVS Subversion and Rational Clear Case Experience on APG Gateway Management tools like Apigee Experience using JIRA Bugzilla50x 44x and QualityCentre as issue and bug tracking tools Experienced with JUnit Framework4x Jasmine and Mockito for developing test cases using Test driven development TDD approach and log4j for logging Expertise in using databases such as Oracle DB2 and MySQL as a distributed database management system and writing Queries Stored procedures functions packages tables views and triggers Experienced in performing unit testing using JUnit Mockito integration and deployment of applications using tools such as ANT Jenkins and Maven debugging through log4j Deep knowledge of Splunk Experience in using Ant1x and Maven3x for build automation Skilled and experienced in cocoordinating efforts among multiple teams onsite and offshore and third parties Excellent verbal written communication and presentation skills problem solving and conflict resolution skills Work Experience Java Full Stack Developer Wells Fargo Charlotte NC February 2018 to Present Responsibilities The application is built Micro Service Oriented Architecture using MEAN4 MongoDB Express JS Angular 4060 and Nodejs stack and developed Single Page Applications SPA Designed and developed efficient user Interaction screens using HTML5 CSS3SASS and Twitter Bootstrap CSS framework and media queries to create responsive web pages Used Web Pack module bundler for compilation of SAAS files into CSS and for monitoring the application Developed multiple Angular 4060 components which are compatible with latest versions of typescript angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Developed angular views to hook up models to the DOM and synchronize data with server as a SPA Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Implemented Node JS as a serverside proxy for an eventdriven nonblocking IO model to make the application lightweight and efficient Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Utilized the inbuilt NPM package manager to configure the right versions of the packages and to achieve dependency management Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Implemented a robust RESTful Apache CXF web service and automated documentation to the web services in the application is provided by Swagger by configuring hapiswaggered and hapiswaggeredui Unit testing of web services is done using Spock framework by extending Groovy syntax Testing for Node JS is done using Mocha and chai and for Spring boot used Mokito junit mock mvc and thereby achieving Test Driven Development TDD Building cloud Microservices and implemented backend using Spring Boot and Authored application using Spring Cloud services spring version of Netflix OSSEureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Configured OIDC Open ID Connect on top of OAUTH 20 authentication and authorization framework to provide the security to rest web services Implemented Single Sign On and policybased authentication using Site Minder security framework Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernates second level EHCache Created dynamic schema design through NOSQL Mongo DB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Implemented Mongoose Connector as our ODM framework Configured Kibana data visualization plugin for Elasticsearch Logstash and created bar line and scatter plots or pie charts and maps on top of large volumes of data Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Configured New Relic to measure and monitor the performance of application Provided production supporton call support to fix production issues after the deployment Environment Angular 4060 Node JS Express JS Hapi JS HTML5 CSS3SASS Twitter Bootstrap40 Site Minder OAuth20 OIDC Eclipse Java EE IDE JIRA IBM MQ Jenkins Log4j Apache tomcat Mokito Junit mock mvc New Relic Swagger Maven30 Java Full stack Developer CareSource Downtown Dayton OH August 2017 to February 2018 Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Involved in Analysis design and coding on Java and J2EE Environment Implemented Spring Framework for the project Responsible for Creating custom general use modules and components which extend the elements and modules of core Angular 4 Created and maintain web pages using HTML5 CSS3 JavaScript JQUERY Java J2EE and also responsible for Designing of Web pages including Ajax controls and XML Created and managed microservices Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features All the functionality is implemented using Spring IO Spring Boot Microservices and Hibernate ORM Created and injected Spring Services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Followed agile methodology for developing the application Created continuous integration builds using Jenkins and deployed on app server Extensively used spring framework and Apache CXF for producing SOAP and REST web services as a part of the project development Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components Implementing Web services using JSON Developed various generic JavaScript functions used for validations Using GIT for Source Control and Version Management Focused on Test Driven Development TDD thereby creating detailed JUnit tests for every single piece of functionality before writing the functionality Used AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly Manipulated data to both send and fetch data from the server through GET DELETE and POST requests Handled response data from Restful web services using XML JSON and JQuery to update UI Interacted with java controllers JQuery Ajax and JSON to writeread data from back end systems Involved in writing test plans Test Cases and Test Scripts using selenium Designed and developed Test ScenarioTest CasesTest steps for various Business Servicesmethods covering both positive and negative testing Configured Selenium WebDriver TestNG and Maven created Selenium automation scripts in java using JUnit Environment Java jdk JEE Java 8 JSP HTML5 CSS3 Angular 4 polymer JS AJAX JSON Node JS React JS Microservices Multithreading XML Restful web services JQuery UI Maven Apache CXF Spring MVC JavaScript GIT SOAP Mongo DB J2EE Oracle 11 g Eclipse 35 JUnit 44 Agile AWS Git JSP Apache Tomcat JavaJ2EE Developer Prodapt Solutions IN November 2013 to December 2015 Responsibilities Implemented the application using Spring Framework which is based on Model View Controller design pattern Applied design patterns and OO design concepts to improve the existing JavaJ2EE code base Used Groovy for automation testing and Spock for integration testing Used EJBs in the application and developed Session beans to house business logic at the middle tier level Involved in writing PLSQL stored procedures using PLSQL Developer Tested debugged and implemented the application using JUnit for unit testing Involved in documentation code reviews and analysis Build and deployment of the application on WebLogic Server Used Maven and ANT scripts for building and deploying application on to the server Bamboo is used for running the test cases Enterprise Tester JIRA are utilized for end to end testing of the application Agile methodology is followed for software development Github is the version tool Extensively used IntelliJ IDE for development Environment Java J2EE Spring 3 Groovy on Grails Maven ANT SQL PLSQL Unix IntelliJ Oracle VM VirtualBox DB2 Enterprise Tester JIRA Education Masters Skills JAVA HIBERNATE SPRING JBOSS JMS Javascript Angular Jquery",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Wells",
        "Fargo",
        "New",
        "Milford",
        "NJ",
        "years",
        "IT",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "implementation",
        "execution",
        "test",
        "cases",
        "software",
        "application",
        "JavaJ2EE",
        "technologies",
        "Java",
        "Application",
        "Development",
        "Object",
        "Oriented",
        "Concepts",
        "Object",
        "Oriented",
        "Design",
        "OOD",
        "Object",
        "Oriented",
        "Analysis",
        "OOA",
        "Object",
        "Programming",
        "OOP",
        "implementation",
        "Experience",
        "SDLC",
        "methodologies",
        "Agile",
        "Scrum",
        "RUP",
        "Waterfall",
        "Model",
        "Expertise",
        "persistence",
        "logic",
        "JDBC",
        "JPA",
        "Spring",
        "JDBC",
        "Hibernate",
        "Strong",
        "experience",
        "JavaScript",
        "environment",
        "MEAN",
        "Mongo",
        "Express",
        "Angular",
        "Node",
        "Strong",
        "knowledge",
        "OOPs",
        "Core",
        "Java",
        "Multithreading",
        "Exception",
        "Collection",
        "Framework",
        "Strong",
        "programming",
        "skills",
        "ntier",
        "web",
        "application",
        "systems",
        "JavaJ2EE",
        "technologies",
        "JDBC",
        "JSP",
        "Servlets",
        "Enterprise",
        "Java",
        "Beans",
        "JSF",
        "Spring",
        "SOA",
        "implementation",
        "XML",
        "JAXB",
        "JSON",
        "WSDL",
        "core",
        "concepts",
        "collections",
        "serialization",
        "synchronization",
        "exception",
        "handling",
        "database",
        "connections",
        "knowledge",
        "IOC",
        "Dependency",
        "Injection",
        "features",
        "aspects",
        "Spring",
        "Framework",
        "knowledge",
        "Spring",
        "Modules",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "Boot",
        "experience",
        "OAuth",
        "Microservices",
        "security",
        "Experience",
        "WebApplication",
        "servers",
        "Tomcat",
        "Web",
        "Logic",
        "JBOSS",
        "Experience",
        "framework",
        "JAXRS",
        "Framework",
        "SOAP",
        "Web",
        "services",
        "JAXWS",
        "Apache",
        "CXF",
        "Jersey",
        "Experience",
        "version",
        "systems",
        "GIT",
        "CVS",
        "Subversion",
        "Rational",
        "Clear",
        "Case",
        "Experience",
        "APG",
        "Gateway",
        "Management",
        "tools",
        "Apigee",
        "Experience",
        "JIRA",
        "Bugzilla50x",
        "44x",
        "QualityCentre",
        "issue",
        "bug",
        "tracking",
        "tools",
        "JUnit",
        "Framework4x",
        "Jasmine",
        "Mockito",
        "test",
        "cases",
        "Test",
        "development",
        "TDD",
        "approach",
        "log4j",
        "Expertise",
        "databases",
        "Oracle",
        "DB2",
        "MySQL",
        "database",
        "management",
        "system",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "unit",
        "testing",
        "JUnit",
        "Mockito",
        "integration",
        "deployment",
        "applications",
        "tools",
        "ANT",
        "Jenkins",
        "Maven",
        "log4j",
        "knowledge",
        "Splunk",
        "Experience",
        "Ant1x",
        "Maven3x",
        "build",
        "automation",
        "efforts",
        "teams",
        "parties",
        "communication",
        "presentation",
        "skills",
        "problem",
        "conflict",
        "resolution",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Wells",
        "Fargo",
        "Charlotte",
        "NC",
        "February",
        "Present",
        "Responsibilities",
        "application",
        "Micro",
        "Service",
        "Oriented",
        "Architecture",
        "MEAN4",
        "Express",
        "JS",
        "Angular",
        "Nodejs",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "user",
        "Interaction",
        "screens",
        "HTML5",
        "CSS3SASS",
        "Twitter",
        "Bootstrap",
        "CSS",
        "framework",
        "media",
        "queries",
        "web",
        "pages",
        "Web",
        "Pack",
        "module",
        "bundler",
        "compilation",
        "files",
        "CSS",
        "application",
        "components",
        "versions",
        "typescript",
        "CLI",
        "Configured",
        "routes",
        "directives",
        "grid",
        "pagination",
        "validations",
        "loading",
        "loading",
        "Shadow",
        "DOM",
        "ngrx",
        "store",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "SPA",
        "Builtin",
        "AJAX",
        "HTTP",
        "Service",
        "observables",
        "updates",
        "UI",
        "application",
        "Node",
        "JS",
        "serverside",
        "proxy",
        "IO",
        "model",
        "application",
        "web",
        "services",
        "Node",
        "JS",
        "Express",
        "JS",
        "Node",
        "JS",
        "server",
        "Rest",
        "services",
        "database",
        "load",
        "cloud",
        "instances",
        "NPM",
        "package",
        "manager",
        "versions",
        "packages",
        "dependency",
        "management",
        "Configured",
        "Express",
        "JS",
        "node",
        "http",
        "framework",
        "middlewares",
        "HTTP",
        "requests",
        "frontend",
        "web",
        "packs",
        "starter",
        "boiler",
        "plates",
        "Apache",
        "CXF",
        "web",
        "service",
        "documentation",
        "web",
        "services",
        "application",
        "Swagger",
        "Unit",
        "testing",
        "web",
        "services",
        "Spock",
        "framework",
        "syntax",
        "Testing",
        "Node",
        "JS",
        "Mocha",
        "chai",
        "Spring",
        "boot",
        "Mokito",
        "junit",
        "mvc",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Building",
        "cloud",
        "Microservices",
        "backend",
        "Spring",
        "Boot",
        "Authored",
        "application",
        "Spring",
        "Cloud",
        "services",
        "spring",
        "version",
        "Netflix",
        "OSSEureka",
        "Circuit",
        "Breaker",
        "Ribbon",
        "load",
        "Configured",
        "OIDC",
        "ID",
        "Connect",
        "top",
        "authentication",
        "authorization",
        "framework",
        "security",
        "rest",
        "web",
        "services",
        "Sign",
        "authentication",
        "Site",
        "Minder",
        "security",
        "framework",
        "Configured",
        "JBOSS",
        "Application",
        "server",
        "Oracle",
        "database",
        "Hibernate",
        "ORM",
        "framework",
        "functionalities",
        "Hibernates",
        "level",
        "EHCache",
        "schema",
        "NOSQL",
        "Mongo",
        "DB",
        "queries",
        "data",
        "collection",
        "systems",
        "scalability",
        "data",
        "volumes",
        "Automatic",
        "Sharding",
        "Mongoose",
        "Connector",
        "ODM",
        "framework",
        "Configured",
        "Kibana",
        "data",
        "visualization",
        "plugin",
        "Elasticsearch",
        "Logstash",
        "bar",
        "line",
        "scatter",
        "plots",
        "pie",
        "charts",
        "maps",
        "top",
        "volumes",
        "data",
        "Configured",
        "Docker",
        "container",
        "service",
        "pipe",
        "line",
        "Jenkins",
        "CICD",
        "tool",
        "integrating",
        "application",
        "servers",
        "Installed",
        "NoSQL",
        "database",
        "clusters",
        "AWS",
        "Virtual",
        "Cloud",
        "Network",
        "data",
        "cloud",
        "AWS",
        "solutions",
        "E2C",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "volumes",
        "EC2",
        "instances",
        "monitors",
        "alarms",
        "notifications",
        "EC2",
        "hosts",
        "Cloud",
        "Watch",
        "New",
        "Relic",
        "performance",
        "application",
        "production",
        "supporton",
        "support",
        "production",
        "issues",
        "Environment",
        "Angular",
        "Node",
        "JS",
        "Express",
        "JS",
        "Hapi",
        "JS",
        "HTML5",
        "CSS3SASS",
        "Twitter",
        "Bootstrap40",
        "Site",
        "Minder",
        "OIDC",
        "Eclipse",
        "Java",
        "EE",
        "IDE",
        "JIRA",
        "IBM",
        "MQ",
        "Jenkins",
        "Log4j",
        "Apache",
        "tomcat",
        "Mokito",
        "Junit",
        "New",
        "Relic",
        "Swagger",
        "Maven30",
        "Java",
        "stack",
        "Developer",
        "CareSource",
        "Downtown",
        "Dayton",
        "OH",
        "August",
        "February",
        "Responsibilities",
        "SDLC",
        "software",
        "development",
        "life",
        "cycle",
        "application",
        "requirement",
        "analysis",
        "testing",
        "Analysis",
        "design",
        "Java",
        "J2EE",
        "Environment",
        "Spring",
        "Framework",
        "project",
        "custom",
        "general",
        "use",
        "modules",
        "components",
        "elements",
        "modules",
        "core",
        "Angular",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQUERY",
        "Java",
        "J2EE",
        "Designing",
        "Web",
        "pages",
        "controls",
        "XML",
        "microservices",
        "Microservices",
        "strategy",
        "application",
        "business",
        "functionality",
        "Spring",
        "IO",
        "Spring",
        "Boot",
        "Microservices",
        "Hibernate",
        "ORM",
        "Spring",
        "Services",
        "Spring",
        "controllers",
        "DAOs",
        "dependency",
        "injection",
        "wire",
        "objects",
        "business",
        "classes",
        "methodology",
        "application",
        "integration",
        "Jenkins",
        "app",
        "server",
        "spring",
        "framework",
        "Apache",
        "CXF",
        "SOAP",
        "REST",
        "web",
        "services",
        "part",
        "project",
        "development",
        "Spring",
        "MVC",
        "Framework",
        "IOC",
        "Inversion",
        "Control",
        "design",
        "pattern",
        "relationships",
        "application",
        "components",
        "Web",
        "services",
        "JSON",
        "JavaScript",
        "functions",
        "validations",
        "GIT",
        "Source",
        "Control",
        "Version",
        "Management",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "JUnit",
        "tests",
        "piece",
        "functionality",
        "functionality",
        "AJAX",
        "JSON",
        "calls",
        "project",
        "server",
        "data",
        "fly",
        "data",
        "data",
        "server",
        "GET",
        "DELETE",
        "POST",
        "requests",
        "response",
        "data",
        "Restful",
        "web",
        "services",
        "XML",
        "JSON",
        "JQuery",
        "UI",
        "controllers",
        "JQuery",
        "Ajax",
        "JSON",
        "data",
        "end",
        "systems",
        "test",
        "plans",
        "Test",
        "Cases",
        "Test",
        "Scripts",
        "selenium",
        "Test",
        "CasesTest",
        "steps",
        "Business",
        "Servicesmethods",
        "testing",
        "Configured",
        "Selenium",
        "WebDriver",
        "TestNG",
        "Maven",
        "Selenium",
        "automation",
        "scripts",
        "JUnit",
        "Environment",
        "Java",
        "jdk",
        "JEE",
        "Java",
        "JSP",
        "HTML5",
        "CSS3",
        "Angular",
        "polymer",
        "JS",
        "AJAX",
        "JSON",
        "Node",
        "JS",
        "React",
        "JS",
        "Microservices",
        "Multithreading",
        "XML",
        "web",
        "services",
        "JQuery",
        "UI",
        "Maven",
        "Apache",
        "CXF",
        "Spring",
        "MVC",
        "JavaScript",
        "GIT",
        "SOAP",
        "Mongo",
        "DB",
        "J2EE",
        "Oracle",
        "g",
        "Eclipse",
        "JUnit",
        "AWS",
        "Git",
        "JSP",
        "Apache",
        "Tomcat",
        "JavaJ2EE",
        "Developer",
        "Prodapt",
        "Solutions",
        "November",
        "December",
        "Responsibilities",
        "application",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Controller",
        "design",
        "pattern",
        "design",
        "patterns",
        "OO",
        "design",
        "concepts",
        "JavaJ2EE",
        "code",
        "base",
        "Groovy",
        "automation",
        "testing",
        "Spock",
        "integration",
        "testing",
        "EJBs",
        "application",
        "Session",
        "beans",
        "business",
        "logic",
        "tier",
        "level",
        "procedures",
        "PLSQL",
        "Developer",
        "application",
        "JUnit",
        "unit",
        "testing",
        "documentation",
        "code",
        "reviews",
        "analysis",
        "Build",
        "deployment",
        "application",
        "WebLogic",
        "Server",
        "Used",
        "Maven",
        "ANT",
        "scripts",
        "application",
        "server",
        "Bamboo",
        "test",
        "cases",
        "Enterprise",
        "Tester",
        "JIRA",
        "end",
        "testing",
        "application",
        "methodology",
        "software",
        "development",
        "Github",
        "version",
        "tool",
        "IntelliJ",
        "IDE",
        "development",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "Groovy",
        "Grails",
        "Maven",
        "ANT",
        "SQL",
        "PLSQL",
        "Unix",
        "IntelliJ",
        "Oracle",
        "VM",
        "VirtualBox",
        "DB2",
        "Enterprise",
        "Tester",
        "JIRA",
        "Education",
        "Masters",
        "Skills",
        "HIBERNATE",
        "SPRING",
        "JBOSS",
        "JMS",
        "Javascript",
        "Angular",
        "Jquery"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:14:21.790436",
    "resume_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Wells Fargo New Milford NJ Over 3 years of IT experience in Analysis Design Development implementation and execution of test cases of software application using JavaJ2EE technologies Experienced in Java Application Development Object Oriented Concepts Object Oriented Design OOD Object Oriented Analysis OOA Object Oriented Programming OOP and its implementation Experience working with various SDLC methodologies like Agile Scrum RUP and Waterfall Model Expertise in implementing the persistence logic using JDBC JPA Spring JDBC Hibernate Strong experience in working on JavaScript environment like MEAN Mongo Express Angular Node Strong knowledge on OOPs concepts Core Java Multithreading Exception handling and Collection Framework Strong programming skills towards developing and implementing complete ntier web based application systems using JavaJ2EE technologies JDBC JSP Servlets Enterprise Java Beans JSF Spring SOA implementation XML JAXB JSON WSDL Experienced in coding using core java concepts like multithreading collections serialization synchronization exception handling and database connections Strong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework Good knowledge on the Spring Modules like Spring IOC Spring MVC Spring Batch and Spring Boot Having Handful experience in using OAuth 2 for Microservices security Experience with WebApplication servers Tomcat Web Logic and JBOSS Experience in using Restful framework like JAXRS Framework SOAP Web services using JAXWS Apache CXF Jersey Experience in using different version controllingtracking systems GIT CVS Subversion and Rational Clear Case Experience on APG Gateway Management tools like Apigee Experience using JIRA Bugzilla50x 44x and QualityCentre as issue and bug tracking tools Experienced with JUnit Framework4x Jasmine and Mockito for developing test cases using Test driven development TDD approach and log4j for logging Expertise in using databases such as Oracle DB2 and MySQL as a distributed database management system and writing Queries Stored procedures functions packages tables views and triggers Experienced in performing unit testing using JUnit Mockito integration and deployment of applications using tools such as ANT Jenkins and Maven debugging through log4j Deep knowledge of Splunk Experience in using Ant1x and Maven3x for build automation Skilled and experienced in cocoordinating efforts among multiple teams onsite and offshore and third parties Excellent verbal written communication and presentation skills problem solving and conflict resolution skills Work Experience Java Full Stack Developer Wells Fargo Charlotte NC February 2018 to Present Responsibilities The application is built Micro Service Oriented Architecture using MEAN4 MongoDB Express JS Angular 4060 and Nodejs stack and developed Single Page Applications SPA Designed and developed efficient user Interaction screens using HTML5 CSS3SASS and Twitter Bootstrap CSS framework and media queries to create responsive web pages Used Web Pack module bundler for compilation of SAAS files into CSS and for monitoring the application Developed multiple Angular 4060 components which are compatible with latest versions of typescript angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Developed angular views to hook up models to the DOM and synchronize data with server as a SPA Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Implemented Node JS as a serverside proxy for an eventdriven nonblocking IO model to make the application lightweight and efficient Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Utilized the inbuilt NPM package manager to configure the right versions of the packages and to achieve dependency management Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Implemented a robust RESTful Apache CXF web service and automated documentation to the web services in the application is provided by Swagger by configuring hapiswaggered and hapiswaggeredui Unit testing of web services is done using Spock framework by extending Groovy syntax Testing for Node JS is done using Mocha and chai and for Spring boot used Mokito junit mock mvc and thereby achieving Test Driven Development TDD Building cloud Microservices and implemented backend using Spring Boot and Authored application using Spring Cloud services spring version of Netflix OSSEureka that helps in routing Circuit Breaker and Ribbon for clientside load balancing Configured OIDC Open ID Connect on top of OAUTH 20 authentication and authorization framework to provide the security to rest web services Implemented Single Sign On and policybased authentication using Site Minder security framework Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernates second level EHCache Created dynamic schema design through NOSQL Mongo DB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Implemented Mongoose Connector as our ODM framework Configured Kibana data visualization plugin for Elasticsearch Logstash and created bar line and scatter plots or pie charts and maps on top of large volumes of data Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Configured New Relic to measure and monitor the performance of application Provided production supporton call support to fix production issues after the deployment Environment Angular 4060 Node JS Express JS Hapi JS HTML5 CSS3SASS Twitter Bootstrap40 Site Minder OAuth20 OIDC Eclipse Java EE IDE JIRA IBM MQ Jenkins Log4j Apache tomcat Mokito Junit mock mvc New Relic Swagger Maven30 Java Full stack Developer CareSource Downtown Dayton OH August 2017 to February 2018 Responsibilities Involved in the complete SDLC software development life cycle of the application from requirement analysis to testing Involved in Analysis design and coding on Java and J2EE Environment Implemented Spring Framework for the project Responsible for Creating custom general use modules and components which extend the elements and modules of core Angular 4 Created and maintain web pages using HTML5 CSS3 JavaScript JQUERY Java J2EE and also responsible for Designing of Web pages including Ajax controls and XML Created and managed microservices Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features All the functionality is implemented using Spring IO Spring Boot Microservices and Hibernate ORM Created and injected Spring Services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Followed agile methodology for developing the application Created continuous integration builds using Jenkins and deployed on app server Extensively used spring framework and Apache CXF for producing SOAP and REST web services as a part of the project development Spring MVC Framework IOC Inversion of Control design pattern is used to have relationships between application components Implementing Web services using JSON Developed various generic JavaScript functions used for validations Using GIT for Source Control and Version Management Focused on Test Driven Development TDD thereby creating detailed JUnit tests for every single piece of functionality before writing the functionality Used AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly Manipulated data to both send and fetch data from the server through GET DELETE and POST requests Handled response data from Restful web services using XML JSON and JQuery to update UI Interacted with java controllers JQuery Ajax and JSON to writeread data from back end systems Involved in writing test plans Test Cases and Test Scripts using selenium Designed and developed Test ScenarioTest CasesTest steps for various Business Servicesmethods covering both positive and negative testing Configured Selenium WebDriver TestNG and Maven created Selenium automation scripts in java using JUnit Environment Java jdk JEE Java 8 JSP HTML5 CSS3 Angular 4 polymer JS AJAX JSON Node JS React JS Microservices Multithreading XML Restful web services JQuery UI Maven Apache CXF Spring MVC JavaScript GIT SOAP Mongo DB J2EE Oracle 11g Eclipse 35 JUnit 44 Agile AWS Git JSP Apache Tomcat JavaJ2EE Developer Prodapt Solutions IN November 2013 to December 2015 Responsibilities Implemented the application using Spring Framework which is based on Model View Controller design pattern Applied design patterns and OO design concepts to improve the existing JavaJ2EE code base Used Groovy for automation testing and Spock for integration testing Used EJBs in the application and developed Session beans to house business logic at the middle tier level Involved in writing PLSQL stored procedures using PLSQL Developer Tested debugged and implemented the application using JUnit for unit testing Involved in documentation code reviews and analysis Build and deployment of the application on WebLogic Server Used Maven and ANT scripts for building and deploying application on to the server Bamboo is used for running the test cases Enterprise Tester JIRA are utilized for end to end testing of the application Agile methodology is followed for software development Github is the version tool Extensively used IntelliJ IDE for development Environment Java J2EE Spring 3 Groovy on Grails Maven ANT SQL PLSQL Unix IntelliJ Oracle VM VirtualBox DB2 Enterprise Tester JIRA Education Masters Skills JAVA HIBERNATE SPRING JBOSS JMS Javascript Angular Jquery",
    "unique_id": "1940ee92-8b10-470d-9255-9abc790e16b1"
}