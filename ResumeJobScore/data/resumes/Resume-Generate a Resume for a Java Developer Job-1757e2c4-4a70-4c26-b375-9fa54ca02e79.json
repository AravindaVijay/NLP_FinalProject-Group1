{
    "clean_data": "Python developer span lPythonspan span ldeveloperspan Python developer Dominion Energy Richmond VA Around 7 years of IT experience as a PYTHON SoftwareEngineer designing developing analysing and testing software along with enhancing performance and dealing with problems in hightraffic multitier architectures dealing with both clientside and serverside applications Expert knowledge and experience in Object oriented Design and Programming concepts dealing with algorithms data structures and operating systems Expertise in development using Python libraries used libraries Beautiful Soup numpy scipy Matplotlib pythontwitter Pandas network urllib2 MySQL dB psycopg2 for postgres and pymongo for mongo DB connections and IDEs sublime text Spyder pycharm emacs vim codeinsiders pydev eclipse atomeditor Experience in python Django Pyramid and Flask Framework Good knowledge in GUI frameworks Tkinter WxPython PyQt Experienced in developing webbased applications using Python Django XML JSON BSON CSS HTML DHTML XHTML JavaScript and JQuery RESTful MVT architecture AJAX Working experience in implementing SOAPRESTful web services in JSON XML format Experience programming in HTML CSS and JavaScript GoLang Python for web applications Experience in analyzing and handling large datasets using Oracle Relational Database 9g 10g 11g Postgres MySQL Have good knowledge on NoSql databases like Cassandra Mongo dBand Redis for caching Good knowledge in maintaining various version controls systems such as SVN and GIT Have good Knowledge of Agile Methodologies Scrum Experienced in Shell Scripting BASH SH UNIX and Linux Open stack Experienced in writing SQL Queries Stored procedures functions packages tables views triggers in RDMS databases Developed Machine Learning algorithms with Spark Mlib standalone and R Python Handson experience in NoSQL database Cassandra installation knowledgeablein serving through Apache Tomcat Web logic servers and using NGINX and Apache server for loadbalancing and reverseproxy Understanding of Python best Practices PEP8 PEP232 Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Understand the Basic Concepts of BIG DATA technologies and processing using SPARK processing Pyspark Have Experience in working with Data Sciences using python and Common Networking Protocols and Architecture like HTTP SSL Good idea about testing tools like Bugzilla and JIRA Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Skilled in Debuggingtroubleshooting issues in complex large codebase applications Experienced in Unit testing Integration testing User acceptance testing Functional testing using Pyunit the defacto python unit test framework for web based applications Active Participation in Full Development Life Cycle Requirements Design Architecture Development Testing Experience with continuous integration and automation using Jenkins Expert knowledge over J2EE Design Patterns like MVC Architecture Singleton Factory Pattern Front Controller and Data Access Object Work Experience Python developer Dominion Energy Richmond VA January 2018 to Present Responsibilities Developed full stack applications using pythons Django framework as the backend and jinja templating system Developed Merge jobs in Python to extract and load data into MySQL database Developed python web applications connected to MongoDB using pymongo and Redis for caching Used Test driven approach for developing the application and Implemented the unit testsusing Python Unit test framework Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and baddata patterns and fixing them Developed Python scripts to monitor health of Mongo databases and perform adhocbackups using Mongo dump and Mongo restore Developed Dynamic SQL queries in Oracle database using DBMS_SQL package to bypass manual effort required for the tasks involved Implemented Microservices in GoLang Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using Pyspark library and python Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop theapplication Ensured high quality data collection and maintaining the integrity of the data Designed a workflow for data passing from AWS gateway server to AWS S3 for both encrypted and decrypted formats and then to custom developed delta process module Assist with building processes to insure continuity in the task that we complete as a team To include the Windows Server Build Guide used by the Cloud services team Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Wrote and executed several complex SQL queries in AWS glue for ETL operations in Spark data frame using sparksql Implemented the frontend and backend using JavaScript PythonFramework and Neo4j Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Familiar with key data science concepts statistics data visualization machine learning etc Experienced in Python R MATLAB SAS PySpark programming for statistic and quantitative analysis Worked on Cassandra denormalized data modeling for multinode cluster Gained excellent knowledge of Cassandra internal architecture gossiping protocols and ring topology Working experience in creating REST webservice protocols in python to access AWS and Reltio Contributed in migrating data from Oracle database to Apache Cassandra a NoSQL database using SSTable loader Assisted the business analyst team in the capacity of a Data Science specialist for modeling unstructured data extraction and visualization using Python Designed and developed data management system using MySQL Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Developed a mapping process for delta file to JSON format for AWS glue consumption and created and call the glue Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Developed tools to automate some base tasks using Python Shell scripting and XML Developed existing network mapping microservices using python nmap and deployed it on kubernetes Used Pyats to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Responsible for debugging and troubleshooting the web application Environment Python 27 GoLang Django scipy Pandas Spark API Bugzilla SVN Apache HTTP Java JQuery MySQL Linux Eclipse Shell Scripting HTML5CSS Red hat Linux RUBY Cassandra MongoDB Redis Python Developer Vanguard Malvern PA February 2017 to December 2017 Responsibilities Analysis and Design of application Created UI using JavaScript and HTML5CSS Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango with jinja templating system Worked with millions of database records daily finding common errors and bad data patterns and fixing them ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Thorough knowledge in various frontend tools like HTML DHTML CSS JavaScript XML JQuery Angular JS and AJAX Implementing the microservices using JavaJ2EE Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis audits and generating technical documentation for the project BuildingMaintaining Docker container clusters managed by Kubernetes Linux Bash GIT Docker on AWS Utilized Kubernetes and Docker for the runtime environment of the CICD system to build test deploy Extensively involved in all phases of data acquisition data collection data cleaning model development model validation and visualization to deliver data science solutions Familiarity with Java and Python Client drivers for building clientside applications interacting with Cassandra database Assign Job to AWS Data pipeline service to access log data in AWS S3 Experience in provisioning and managing multidata center Cassandra cluster on Amazon Web Services Experience with Cassandra Performance tuning in improving the writeread throughput and latency Built various graphs for business decisionmaking using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library and used it for sentimental analysis Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Used Python library Beautiful Soup for webscrapping Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created most important Business Rules which are useful for the scope of project and needs of customers Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used SQL Alchemy to generate ORM model for the project to connect python backend code to postgres database Work with team of developers on python applications for RISK management Took part in various lifecycle phases such as Design Development and Deployment Testing and Implementation and support Used Pandas and Scikitlearn libraries for statistics Analysis Created most important Business Rules which are useful for the scope of project and needs of customers Used python flask framework to develop Restful APIs service Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties For sending and receiving the data between multiple systems RESTful WebServices were implemented Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed the architecture of the hardware environments and methodology of the code Created AWS S3 buckets configuring buckets with permissions logging versioning and tagging Used BOTO3 software development kit for AWS S3 services Participated in Performance tuning and query optimization in AWS Redshift Managed Amazon redshift clusters such as launching the cluster by specifying the nodes and performing the data analysis queries Applied NLP techniques and increased accuracy Used NLP to rank the documents and data Performed tokenization in NLP Experienced in Agile Methodologies and SCRUM Process Worked in development of applications especially in UNIX environment and familiar with all of its commands Refactored existing project to make it more Restful and threadsafe Added unit tests and improved existing ones using assert and pyunit Designed RESTful XML web service for handling AJAX requests Environment Python 27 Django HTML5CSS UNIX MS SQL Server 2013 Jasper Reports JavaScript Eclipse Red Hat Linux Shell Scripting RESTful MVC3 Python Developer Webster Bank Bristol CT July 2016 to January 2017 Responsibilities Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed single page application using Backbonejs along with JQuery Responsible for setting up Python REST API framework using DJANGO Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python modules like math glob random itertools functools Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Responsible for search engine optimization to improve the visibility of the website Used D3js library for visualizations like transitions line charts and bar graphs Developed Merge jobs in Python to extract and load data into MySQL database Designed and developed the presentation layerclient end and handled all the client sidevalidation using JavaScript Wrote validation scripts in SQL to validate data loading Use GIT for version control Performed Unit and system testing Environment Python Django MySQL XHTML CSS AJAX JavaScript Apache Web Server Git Red hat Linux Python Developer Samhitha It October 2013 to November 2015 Responsibilities Write Python scripts to parse JSON documents and load the data in database Use Python and Django to interface with the JQuery UI and manage the storage and deletion of content Experience in writing branching and merging python code using git Created projects and portal sites in Web portal using python Django Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Created the front end of the app using Angular JS Responsible for writingmodifying scripts using sh ksh and Bash for dayto day administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Create database using MySQL wrote several queries to extract data from database Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Dynamic implementation of SQL server work on website using SQL developer tool Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Follow AGILE development methodology to develop the application Designed developed and maintained PostgreSQL database architecture Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Write multithread scripts to obtain optimal performance Used AJAX to reduce page reloads Used the Model View controller MVC framework to build modular and maintainable applications This project also used other technologies like JQuery for java script manipulations bootstrap for the frontend html layout Created tables stored procedures triggers and views for data access and manipulation Environment Python 27 Django 16 HTML5 CSS XML MySQL MongoDB JavaScript Angular JS JQuery CSS Bootstrap JavaScript Eclipse Git GitHub Linux Redis Shell Scripting Python Developer NSG February 2012 to October 2013 Responsibilities Used Python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python with jinja templating for fullstack web development Developed tools using Python Shell scripting XML to automate some of the menial tasks Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery JSON and JavaScript Used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing PythonDjango module to deliver certain format of data Used Django Database API to access database objects Wrote python scripts to parse XML documents and load the data in database Responsible for debugging and troubleshooting the web application Environment MySQL HTML Python 20 Django 14 CSS XML MySQL JavaScript Linux Shell Scripting PHP AJAX Education Masters Skills CSS 6 years DJANGO 6 years HTML 6 years jQuery 6 years LINUX 6 years Additional Information Technical Skills Programming Languages Python35 27 UML design Java SQL PLSQL kubernets and Ansible Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy matPlotLib PySide Scipy wxPython PyTables Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB Kafka CloudTechnologies AWS Rackspace Cloud Amazon S3 BugTrackingTools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Methodologies Agile Scrum and Waterfall OperatingSystems Linux Unix Windows",
    "entities": [
        "AJAX",
        "ExportedImported",
        "GUI",
        "AJAX Implementing",
        "SPARK",
        "HTML AJAX CSS",
        "Amazon Web Services AWS Wrote",
        "SQL Server Management Studio Maintained",
        "UNIX",
        "JavaJ2EE Handson",
        "JavaScript PythonFramework",
        "Working",
        "Data Science",
        "Backbonejs",
        "JSON",
        "Ansible Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2",
        "Dominion Energy Richmond VA",
        "Panda",
        "JavaScript Wrote",
        "Design Development and Deployment Testing and Implementation",
        "Bristol CT",
        "XML",
        "JavaScript Implemented",
        "SOAP",
        "Use Python",
        "Functional",
        "GitHub Responsible",
        "Shell",
        "Amazon",
        "Python",
        "Assisted",
        "Pyunit",
        "Amazon AWS S3",
        "Mongo",
        "Developed",
        "AWS S3",
        "WebServices",
        "RDMS",
        "Data Access Object Work Experience Python",
        "Utilized",
        "Python Unit",
        "UML",
        "Created Git",
        "Restful",
        "Complete Software",
        "Oracle Relational Database",
        "Cleaned",
        "Cassandra Mongo dBand Redis",
        "JavaScript Involved",
        "the Basic Concepts of BIG DATA",
        "AWS Utilized Kubernetes",
        "Flask",
        "Built",
        "AJAX Working",
        "Shell Scripting BASH SH",
        "RDS",
        "Implemented Microservices",
        "Refactored",
        "MVC",
        "Created AWS",
        "PythonDjango",
        "Spark",
        "Developed Machine Learning",
        "HTML CSS",
        "the Windows Server Build Guide",
        "NGINX",
        "BuildingMaintaining Docker",
        "Pyspark Have",
        "NoSql",
        "Created",
        "Oracle MySQL PostgreSQL",
        "AWS",
        "Oracle",
        "Pyspark",
        "INSERTS UPDATES",
        "SAS",
        "Performed Unit",
        "GoLang Designed",
        "AWS Data",
        "SQL",
        "SSTable",
        "Tkinter WxPython PyQt Experienced",
        "Amazon Web Services",
        "NLP",
        "lPythonspan",
        "Kubernetes",
        "Angular JS Responsible",
        "Jenkins Ansible",
        "Applied NLP",
        "JS Angular JS CSS",
        "Developed Wrapper",
        "Developed Python",
        "CICD",
        "Created Restful",
        "Wrote",
        "Took",
        "NLP Experienced",
        "Pandas",
        "SQLite",
        "ETL",
        "JQuery Responsible",
        "Created UI",
        "Djangos",
        "JavaScript",
        "MVC Architecture Singleton Factory",
        "CDC",
        "UI",
        "Python Bootstrap CSS",
        "Spark Mlib",
        "SVN",
        "SQL Queries Stored",
        "JQuery RESTful MVT",
        "CSS",
        "Implemented Integration",
        "Additional Information Technical Skills Programming Languages",
        "TDD",
        "NoSQL",
        "Analysis Created",
        "EBS",
        "Data Sciences",
        "JSON XML"
    ],
    "experience": "Experience in python Django Pyramid and Flask Framework Good knowledge in GUI frameworks Tkinter WxPython PyQt Experienced in developing webbased applications using Python Django XML JSON BSON CSS HTML DHTML XHTML JavaScript and JQuery RESTful MVT architecture AJAX Working experience in implementing SOAPRESTful web services in JSON XML format Experience programming in HTML CSS and JavaScript GoLang Python for web applications Experience in analyzing and handling large datasets using Oracle Relational Database 9 g 10 g 11 g Postgres MySQL Have good knowledge on NoSql databases like Cassandra Mongo dBand Redis for caching Good knowledge in maintaining various version controls systems such as SVN and GIT Have good Knowledge of Agile Methodologies Scrum Experienced in Shell Scripting BASH SH UNIX and Linux Open stack Experienced in writing SQL Queries Stored procedures functions packages tables views triggers in RDMS databases Developed Machine Learning algorithms with Spark Mlib standalone and R Python Handson experience in NoSQL database Cassandra installation knowledgeablein serving through Apache Tomcat Web logic servers and using NGINX and Apache server for loadbalancing and reverseproxy Understanding of Python best Practices PEP8 PEP232 Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Understand the Basic Concepts of BIG DATA technologies and processing using SPARK processing Pyspark Have Experience in working with Data Sciences using python and Common Networking Protocols and Architecture like HTTP SSL Good idea about testing tools like Bugzilla and JIRA Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Skilled in Debuggingtroubleshooting issues in complex large codebase applications Experienced in Unit testing Integration testing User acceptance testing Functional testing using Pyunit the defacto python unit test framework for web based applications Active Participation in Full Development Life Cycle Requirements Design Architecture Development Testing Experience with continuous integration and automation using Jenkins Expert knowledge over J2EE Design Patterns like MVC Architecture Singleton Factory Pattern Front Controller and Data Access Object Work Experience Python developer Dominion Energy Richmond VA January 2018 to Present Responsibilities Developed full stack applications using pythons Django framework as the backend and jinja templating system Developed Merge jobs in Python to extract and load data into MySQL database Developed python web applications connected to MongoDB using pymongo and Redis for caching Used Test driven approach for developing the application and Implemented the unit testsusing Python Unit test framework Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and baddata patterns and fixing them Developed Python scripts to monitor health of Mongo databases and perform adhocbackups using Mongo dump and Mongo restore Developed Dynamic SQL queries in Oracle database using DBMS_SQL package to bypass manual effort required for the tasks involved Implemented Microservices in GoLang Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using Pyspark library and python Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop theapplication Ensured high quality data collection and maintaining the integrity of the data Designed a workflow for data passing from AWS gateway server to AWS S3 for both encrypted and decrypted formats and then to custom developed delta process module Assist with building processes to insure continuity in the task that we complete as a team To include the Windows Server Build Guide used by the Cloud services team Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Wrote and executed several complex SQL queries in AWS glue for ETL operations in Spark data frame using sparksql Implemented the frontend and backend using JavaScript PythonFramework and Neo4j Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Familiar with key data science concepts statistics data visualization machine learning etc Experienced in Python R MATLAB SAS PySpark programming for statistic and quantitative analysis Worked on Cassandra denormalized data modeling for multinode cluster Gained excellent knowledge of Cassandra internal architecture gossiping protocols and ring topology Working experience in creating REST webservice protocols in python to access AWS and Reltio Contributed in migrating data from Oracle database to Apache Cassandra a NoSQL database using SSTable loader Assisted the business analyst team in the capacity of a Data Science specialist for modeling unstructured data extraction and visualization using Python Designed and developed data management system using MySQL Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Developed a mapping process for delta file to JSON format for AWS glue consumption and created and call the glue Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Developed tools to automate some base tasks using Python Shell scripting and XML Developed existing network mapping microservices using python nmap and deployed it on kubernetes Used Pyats to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Responsible for debugging and troubleshooting the web application Environment Python 27 GoLang Django scipy Pandas Spark API Bugzilla SVN Apache HTTP Java JQuery MySQL Linux Eclipse Shell Scripting HTML5CSS Red hat Linux RUBY Cassandra MongoDB Redis Python Developer Vanguard Malvern PA February 2017 to December 2017 Responsibilities Analysis and Design of application Created UI using JavaScript and HTML5CSS Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango with jinja templating system Worked with millions of database records daily finding common errors and bad data patterns and fixing them ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Thorough knowledge in various frontend tools like HTML DHTML CSS JavaScript XML JQuery Angular JS and AJAX Implementing the microservices using JavaJ2EE Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis audits and generating technical documentation for the project BuildingMaintaining Docker container clusters managed by Kubernetes Linux Bash GIT Docker on AWS Utilized Kubernetes and Docker for the runtime environment of the CICD system to build test deploy Extensively involved in all phases of data acquisition data collection data cleaning model development model validation and visualization to deliver data science solutions Familiarity with Java and Python Client drivers for building clientside applications interacting with Cassandra database Assign Job to AWS Data pipeline service to access log data in AWS S3 Experience in provisioning and managing multidata center Cassandra cluster on Amazon Web Services Experience with Cassandra Performance tuning in improving the writeread throughput and latency Built various graphs for business decisionmaking using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library and used it for sentimental analysis Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Used Python library Beautiful Soup for webscrapping Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created most important Business Rules which are useful for the scope of project and needs of customers Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used SQL Alchemy to generate ORM model for the project to connect python backend code to postgres database Work with team of developers on python applications for RISK management Took part in various lifecycle phases such as Design Development and Deployment Testing and Implementation and support Used Pandas and Scikitlearn libraries for statistics Analysis Created most important Business Rules which are useful for the scope of project and needs of customers Used python flask framework to develop Restful APIs service Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties For sending and receiving the data between multiple systems RESTful WebServices were implemented Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed the architecture of the hardware environments and methodology of the code Created AWS S3 buckets configuring buckets with permissions logging versioning and tagging Used BOTO3 software development kit for AWS S3 services Participated in Performance tuning and query optimization in AWS Redshift Managed Amazon redshift clusters such as launching the cluster by specifying the nodes and performing the data analysis queries Applied NLP techniques and increased accuracy Used NLP to rank the documents and data Performed tokenization in NLP Experienced in Agile Methodologies and SCRUM Process Worked in development of applications especially in UNIX environment and familiar with all of its commands Refactored existing project to make it more Restful and threadsafe Added unit tests and improved existing ones using assert and pyunit Designed RESTful XML web service for handling AJAX requests Environment Python 27 Django HTML5CSS UNIX MS SQL Server 2013 Jasper Reports JavaScript Eclipse Red Hat Linux Shell Scripting RESTful MVC3 Python Developer Webster Bank Bristol CT July 2016 to January 2017 Responsibilities Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed single page application using Backbonejs along with JQuery Responsible for setting up Python REST API framework using DJANGO Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python modules like math glob random itertools functools Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Responsible for search engine optimization to improve the visibility of the website Used D3js library for visualizations like transitions line charts and bar graphs Developed Merge jobs in Python to extract and load data into MySQL database Designed and developed the presentation layerclient end and handled all the client sidevalidation using JavaScript Wrote validation scripts in SQL to validate data loading Use GIT for version control Performed Unit and system testing Environment Python Django MySQL XHTML CSS AJAX JavaScript Apache Web Server Git Red hat Linux Python Developer Samhitha It October 2013 to November 2015 Responsibilities Write Python scripts to parse JSON documents and load the data in database Use Python and Django to interface with the JQuery UI and manage the storage and deletion of content Experience in writing branching and merging python code using git Created projects and portal sites in Web portal using python Django Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Created the front end of the app using Angular JS Responsible for writingmodifying scripts using sh ksh and Bash for dayto day administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Create database using MySQL wrote several queries to extract data from database Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Dynamic implementation of SQL server work on website using SQL developer tool Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Follow AGILE development methodology to develop the application Designed developed and maintained PostgreSQL database architecture Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Write multithread scripts to obtain optimal performance Used AJAX to reduce page reloads Used the Model View controller MVC framework to build modular and maintainable applications This project also used other technologies like JQuery for java script manipulations bootstrap for the frontend html layout Created tables stored procedures triggers and views for data access and manipulation Environment Python 27 Django 16 HTML5 CSS XML MySQL MongoDB JavaScript Angular JS JQuery CSS Bootstrap JavaScript Eclipse Git GitHub Linux Redis Shell Scripting Python Developer NSG February 2012 to October 2013 Responsibilities Used Python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python with jinja templating for fullstack web development Developed tools using Python Shell scripting XML to automate some of the menial tasks Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery JSON and JavaScript Used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing PythonDjango module to deliver certain format of data Used Django Database API to access database objects Wrote python scripts to parse XML documents and load the data in database Responsible for debugging and troubleshooting the web application Environment MySQL HTML Python 20 Django 14 CSS XML MySQL JavaScript Linux Shell Scripting PHP AJAX Education Masters Skills CSS 6 years DJANGO 6 years HTML 6 years jQuery 6 years LINUX 6 years Additional Information Technical Skills Programming Languages Python35 27 UML design Java SQL PLSQL kubernets and Ansible Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy matPlotLib PySide Scipy wxPython PyTables Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB Kafka CloudTechnologies AWS Rackspace Cloud Amazon S3 BugTrackingTools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Methodologies Agile Scrum and Waterfall OperatingSystems Linux Unix Windows",
    "extracted_keywords": [
        "developer",
        "span",
        "lPythonspan",
        "span",
        "ldeveloperspan",
        "Python",
        "developer",
        "Dominion",
        "Energy",
        "Richmond",
        "VA",
        "years",
        "IT",
        "experience",
        "PYTHON",
        "SoftwareEngineer",
        "testing",
        "software",
        "performance",
        "problems",
        "architectures",
        "serverside",
        "applications",
        "Expert",
        "knowledge",
        "experience",
        "Object",
        "Design",
        "Programming",
        "concepts",
        "algorithms",
        "data",
        "structures",
        "operating",
        "systems",
        "Expertise",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "scipy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "network",
        "urllib2",
        "MySQL",
        "postgres",
        "pymongo",
        "mongo",
        "DB",
        "connections",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "emacs",
        "codeinsiders",
        "eclipse",
        "atomeditor",
        "Experience",
        "python",
        "Django",
        "Pyramid",
        "Flask",
        "Framework",
        "knowledge",
        "GUI",
        "frameworks",
        "Tkinter",
        "WxPython",
        "PyQt",
        "applications",
        "Python",
        "Django",
        "XML",
        "JSON",
        "BSON",
        "CSS",
        "HTML",
        "DHTML",
        "XHTML",
        "JavaScript",
        "JQuery",
        "RESTful",
        "MVT",
        "architecture",
        "AJAX",
        "Working",
        "experience",
        "web",
        "services",
        "XML",
        "format",
        "Experience",
        "programming",
        "HTML",
        "CSS",
        "JavaScript",
        "GoLang",
        "Python",
        "web",
        "applications",
        "Experience",
        "datasets",
        "Oracle",
        "Relational",
        "Database",
        "g",
        "g",
        "g",
        "Postgres",
        "MySQL",
        "knowledge",
        "NoSql",
        "Cassandra",
        "Mongo",
        "dBand",
        "Redis",
        "knowledge",
        "version",
        "controls",
        "systems",
        "SVN",
        "GIT",
        "Knowledge",
        "Agile",
        "Methodologies",
        "Scrum",
        "Shell",
        "Scripting",
        "BASH",
        "SH",
        "UNIX",
        "Linux",
        "Open",
        "stack",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "RDMS",
        "Developed",
        "Machine",
        "Learning",
        "Spark",
        "Mlib",
        "R",
        "Python",
        "Handson",
        "experience",
        "NoSQL",
        "database",
        "Cassandra",
        "installation",
        "knowledgeablein",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "servers",
        "NGINX",
        "Apache",
        "server",
        "Understanding",
        "Python",
        "Practices",
        "PEP8",
        "PEP232",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "Experience",
        "knowledge",
        "AWS",
        "data",
        "lake",
        "storing",
        "data",
        "analytics",
        "spark",
        "data",
        "frames",
        "processing",
        "data",
        "files",
        "Basic",
        "Concepts",
        "BIG",
        "DATA",
        "technologies",
        "processing",
        "SPARK",
        "processing",
        "Pyspark",
        "Experience",
        "Data",
        "Sciences",
        "python",
        "Common",
        "Networking",
        "Protocols",
        "Architecture",
        "HTTP",
        "SSL",
        "idea",
        "testing",
        "tools",
        "Bugzilla",
        "JIRA",
        "documentation",
        "solutions",
        "IT",
        "infrastructure",
        "sales",
        "systems",
        "Debuggingtroubleshooting",
        "issues",
        "codebase",
        "applications",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "Pyunit",
        "python",
        "unit",
        "test",
        "framework",
        "web",
        "applications",
        "Active",
        "Participation",
        "Full",
        "Development",
        "Life",
        "Cycle",
        "Requirements",
        "Design",
        "Architecture",
        "Development",
        "Testing",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Expert",
        "knowledge",
        "J2EE",
        "Design",
        "Patterns",
        "MVC",
        "Architecture",
        "Singleton",
        "Factory",
        "Pattern",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Work",
        "Experience",
        "Python",
        "developer",
        "Dominion",
        "Energy",
        "Richmond",
        "VA",
        "January",
        "Present",
        "Responsibilities",
        "stack",
        "applications",
        "pythons",
        "Django",
        "framework",
        "templating",
        "system",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "python",
        "web",
        "applications",
        "MongoDB",
        "pymongo",
        "Redis",
        "Test",
        "approach",
        "application",
        "unit",
        "Python",
        "Unit",
        "test",
        "framework",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "millions",
        "database",
        "records",
        "basis",
        "errors",
        "baddata",
        "patterns",
        "Python",
        "scripts",
        "health",
        "Mongo",
        "adhocbackups",
        "Mongo",
        "dump",
        "Mongo",
        "Developed",
        "SQL",
        "Oracle",
        "database",
        "DBMS_SQL",
        "package",
        "effort",
        "tasks",
        "Implemented",
        "Microservices",
        "GoLang",
        "module",
        "CDC",
        "change",
        "data",
        "capture",
        "python",
        "AWS",
        "GLUE",
        "Pyspark",
        "library",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "theapplication",
        "quality",
        "data",
        "collection",
        "integrity",
        "data",
        "workflow",
        "data",
        "AWS",
        "gateway",
        "server",
        "AWS",
        "S3",
        "formats",
        "delta",
        "process",
        "module",
        "Assist",
        "building",
        "processes",
        "continuity",
        "task",
        "team",
        "Windows",
        "Server",
        "Build",
        "Guide",
        "Cloud",
        "services",
        "team",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "libraries",
        "Wrote",
        "SQL",
        "queries",
        "AWS",
        "glue",
        "ETL",
        "operations",
        "Spark",
        "data",
        "frame",
        "sparksql",
        "frontend",
        "backend",
        "JavaScript",
        "PythonFramework",
        "Neo4j",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "delta",
        "file",
        "file",
        "UPDATES",
        "DELETES",
        "python",
        "pyspark",
        "modules",
        "S3",
        "Familiar",
        "data",
        "science",
        "concepts",
        "statistics",
        "data",
        "visualization",
        "machine",
        "Python",
        "R",
        "MATLAB",
        "SAS",
        "PySpark",
        "programming",
        "analysis",
        "Cassandra",
        "data",
        "multinode",
        "cluster",
        "knowledge",
        "Cassandra",
        "architecture",
        "protocols",
        "ring",
        "topology",
        "Working",
        "experience",
        "REST",
        "webservice",
        "protocols",
        "python",
        "access",
        "AWS",
        "Reltio",
        "Contributed",
        "data",
        "Oracle",
        "database",
        "Apache",
        "Cassandra",
        "NoSQL",
        "database",
        "SSTable",
        "loader",
        "business",
        "analyst",
        "team",
        "capacity",
        "Data",
        "Science",
        "specialist",
        "data",
        "extraction",
        "visualization",
        "Python",
        "data",
        "management",
        "system",
        "MySQL",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Developed",
        "web",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "mapping",
        "process",
        "delta",
        "file",
        "format",
        "AWS",
        "glue",
        "consumption",
        "glue",
        "Django",
        "APIs",
        "database",
        "Python",
        "OOD",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "tools",
        "base",
        "tasks",
        "Python",
        "Shell",
        "scripting",
        "XML",
        "network",
        "mapping",
        "microservices",
        "python",
        "nmap",
        "kubernetes",
        "Pyats",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Angularjs",
        "client",
        "web",
        "application",
        "testing",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "databases",
        "Pandas",
        "data",
        "frames",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "services",
        "format",
        "Git",
        "repository",
        "project",
        "web",
        "application",
        "Environment",
        "Python",
        "GoLang",
        "Django",
        "Pandas",
        "Spark",
        "API",
        "Bugzilla",
        "SVN",
        "Apache",
        "HTTP",
        "Java",
        "JQuery",
        "MySQL",
        "Linux",
        "Eclipse",
        "Shell",
        "Scripting",
        "HTML5CSS",
        "hat",
        "Linux",
        "RUBY",
        "Cassandra",
        "MongoDB",
        "Redis",
        "Python",
        "Developer",
        "Vanguard",
        "Malvern",
        "PA",
        "February",
        "December",
        "Responsibilities",
        "Analysis",
        "Design",
        "application",
        "UI",
        "JavaScript",
        "HTML5CSS",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "business",
        "logic",
        "PythonDjango",
        "templating",
        "system",
        "millions",
        "database",
        "records",
        "errors",
        "data",
        "patterns",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "program",
        "users",
        "manuals",
        "documentation",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "serverside",
        "software",
        "modules",
        "user",
        "interface",
        "components",
        "Compute",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "knowledge",
        "frontend",
        "tools",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "Angular",
        "JS",
        "AJAX",
        "microservices",
        "JavaJ2EE",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "documentation",
        "project",
        "BuildingMaintaining",
        "Docker",
        "container",
        "clusters",
        "Kubernetes",
        "Linux",
        "Bash",
        "GIT",
        "Docker",
        "AWS",
        "Kubernetes",
        "Docker",
        "runtime",
        "environment",
        "CICD",
        "system",
        "test",
        "phases",
        "data",
        "acquisition",
        "data",
        "collection",
        "data",
        "cleaning",
        "model",
        "development",
        "model",
        "validation",
        "visualization",
        "data",
        "science",
        "solutions",
        "Familiarity",
        "Java",
        "Python",
        "Client",
        "drivers",
        "applications",
        "Cassandra",
        "database",
        "Assign",
        "Job",
        "AWS",
        "Data",
        "pipeline",
        "service",
        "access",
        "log",
        "data",
        "AWS",
        "S3",
        "Experience",
        "provisioning",
        "center",
        "Cassandra",
        "cluster",
        "Amazon",
        "Web",
        "Services",
        "Experience",
        "Cassandra",
        "Performance",
        "writeread",
        "throughput",
        "latency",
        "graphs",
        "business",
        "Python",
        "matplotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "analysis",
        "microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Used",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Business",
        "Rules",
        "scope",
        "project",
        "needs",
        "customers",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "SQL",
        "Alchemy",
        "ORM",
        "model",
        "project",
        "python",
        "code",
        "postgres",
        "database",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "part",
        "lifecycle",
        "phases",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Pandas",
        "Scikitlearn",
        "libraries",
        "statistics",
        "Analysis",
        "Business",
        "Rules",
        "scope",
        "project",
        "needs",
        "customers",
        "python",
        "flask",
        "framework",
        "APIs",
        "service",
        "APIs",
        "functionalities",
        "application",
        "API",
        "parties",
        "data",
        "systems",
        "RESTful",
        "WebServices",
        "Used",
        "Docker",
        "Ansible",
        "deployment",
        "execution",
        "benchmark",
        "suite",
        "cluster",
        "machines",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "architecture",
        "hardware",
        "environments",
        "methodology",
        "code",
        "AWS",
        "S3",
        "buckets",
        "permissions",
        "BOTO3",
        "software",
        "development",
        "kit",
        "AWS",
        "S3",
        "services",
        "Performance",
        "tuning",
        "query",
        "optimization",
        "AWS",
        "Redshift",
        "Managed",
        "Amazon",
        "redshift",
        "clusters",
        "cluster",
        "nodes",
        "data",
        "analysis",
        "NLP",
        "techniques",
        "accuracy",
        "NLP",
        "documents",
        "data",
        "Performed",
        "tokenization",
        "NLP",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "project",
        "threadsafe",
        "unit",
        "tests",
        "ones",
        "assert",
        "pyunit",
        "XML",
        "web",
        "service",
        "AJAX",
        "requests",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "UNIX",
        "MS",
        "SQL",
        "Server",
        "Jasper",
        "Reports",
        "JavaScript",
        "Eclipse",
        "Red",
        "Hat",
        "Linux",
        "Shell",
        "Scripting",
        "RESTful",
        "MVC3",
        "Python",
        "Developer",
        "Webster",
        "Bank",
        "Bristol",
        "CT",
        "July",
        "January",
        "Responsibilities",
        "Design",
        "development",
        "test",
        "deploy",
        "maintenance",
        "website",
        "UI",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "page",
        "application",
        "Backbonejs",
        "JQuery",
        "Responsible",
        "Python",
        "REST",
        "API",
        "framework",
        "DJANGO",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "property",
        "list",
        "application",
        "Python",
        "modules",
        "math",
        "glob",
        "itertools",
        "Developed",
        "Wrapper",
        "Python",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "Used",
        "D3js",
        "library",
        "visualizations",
        "transitions",
        "line",
        "charts",
        "bar",
        "graphs",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "presentation",
        "layerclient",
        "end",
        "client",
        "sidevalidation",
        "JavaScript",
        "Wrote",
        "validation",
        "scripts",
        "SQL",
        "data",
        "Use",
        "GIT",
        "version",
        "control",
        "Performed",
        "Unit",
        "system",
        "testing",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Git",
        "Red",
        "hat",
        "Linux",
        "Python",
        "Developer",
        "Samhitha",
        "October",
        "November",
        "Responsibilities",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "Use",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Experience",
        "python",
        "code",
        "git",
        "Created",
        "projects",
        "sites",
        "Web",
        "portal",
        "python",
        "Django",
        "Experience",
        "App",
        "pools",
        "web",
        "sites",
        "Python",
        "Features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "end",
        "app",
        "JS",
        "Responsible",
        "scripts",
        "sh",
        "ksh",
        "Bash",
        "day",
        "administration",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tastypie",
        "Web",
        "Framework",
        "Git",
        "Create",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "Follow",
        "AGILE",
        "development",
        "methodology",
        "application",
        "PostgreSQL",
        "database",
        "architecture",
        "apache",
        "server",
        "project",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Integration",
        "test",
        "cases",
        "multithread",
        "scripts",
        "performance",
        "AJAX",
        "page",
        "reloads",
        "Model",
        "View",
        "controller",
        "MVC",
        "framework",
        "applications",
        "project",
        "technologies",
        "JQuery",
        "java",
        "script",
        "manipulations",
        "bootstrap",
        "frontend",
        "html",
        "layout",
        "Created",
        "tables",
        "procedures",
        "triggers",
        "views",
        "data",
        "access",
        "manipulation",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "MongoDB",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Redis",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "NSG",
        "February",
        "October",
        "Responsibilities",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "jinja",
        "templating",
        "fullstack",
        "web",
        "development",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JQuery",
        "JSON",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "module",
        "format",
        "data",
        "Django",
        "Database",
        "API",
        "access",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "web",
        "application",
        "Environment",
        "MySQL",
        "HTML",
        "Python",
        "Django",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Linux",
        "Shell",
        "Scripting",
        "PHP",
        "AJAX",
        "Education",
        "Masters",
        "Skills",
        "CSS",
        "years",
        "DJANGO",
        "years",
        "HTML",
        "years",
        "jQuery",
        "years",
        "LINUX",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Programming",
        "Languages",
        "Python35",
        "UML",
        "design",
        "Java",
        "SQL",
        "PLSQL",
        "kubernets",
        "Ansible",
        "Python",
        "Python",
        "Django",
        "Flask",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Numpy",
        "matPlotLib",
        "PySide",
        "Scipy",
        "wxPython",
        "PyTables",
        "Frameworks",
        "Django",
        "web2py",
        "pyramid",
        "Flask",
        "Databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "MongoDB",
        "Kafka",
        "CloudTechnologies",
        "Rackspace",
        "Cloud",
        "Amazon",
        "S3",
        "Jira",
        "Bugzilla",
        "Rational",
        "Protocols",
        "HTTPHTTPS",
        "SOAP",
        "SNMP",
        "SMTP",
        "REST",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "OperatingSystems",
        "Linux",
        "Unix"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:11:17.275615",
    "resume_data": "Python developer span lPythonspan span ldeveloperspan Python developer Dominion Energy Richmond VA Around 7 years of IT experience as a PYTHON SoftwareEngineer designing developing analysing and testing software along with enhancing performance and dealing with problems in hightraffic multitier architectures dealing with both clientside and serverside applications Expert knowledge and experience in Object oriented Design and Programming concepts dealing with algorithms data structures and operating systems Expertise in development using Python libraries used libraries Beautiful Soup numpy scipy Matplotlib pythontwitter Pandas network urllib2 MySQL dB psycopg2 for postgres and pymongo for mongo DB connections and IDEs sublime text Spyder pycharm emacs vim codeinsiders pydev eclipse atomeditor Experience in python Django Pyramid and Flask Framework Good knowledge in GUI frameworks Tkinter WxPython PyQt Experienced in developing webbased applications using Python Django XML JSON BSON CSS HTML DHTML XHTML JavaScript and JQuery RESTful MVT architecture AJAX Working experience in implementing SOAPRESTful web services in JSON XML format Experience programming in HTML CSS and JavaScript GoLang Python for web applications Experience in analyzing and handling large datasets using Oracle Relational Database 9g 10g 11g Postgres MySQL Have good knowledge on NoSql databases like Cassandra Mongo dBand Redis for caching Good knowledge in maintaining various version controls systems such as SVN and GIT Have good Knowledge of Agile Methodologies Scrum Experienced in Shell Scripting BASH SH UNIX and Linux Open stack Experienced in writing SQL Queries Stored procedures functions packages tables views triggers in RDMS databases Developed Machine Learning algorithms with Spark Mlib standalone and R Python Handson experience in NoSQL database Cassandra installation knowledgeablein serving through Apache Tomcat Web logic servers and using NGINX and Apache server for loadbalancing and reverseproxy Understanding of Python best Practices PEP8 PEP232 Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experience and knowledge in AWS data lake storing and data analytics and spark data frames for processing and manipulating very large data files Understand the Basic Concepts of BIG DATA technologies and processing using SPARK processing Pyspark Have Experience in working with Data Sciences using python and Common Networking Protocols and Architecture like HTTP SSL Good idea about testing tools like Bugzilla and JIRA Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Skilled in Debuggingtroubleshooting issues in complex large codebase applications Experienced in Unit testing Integration testing User acceptance testing Functional testing using Pyunit the defacto python unit test framework for web based applications Active Participation in Full Development Life Cycle Requirements Design Architecture Development Testing Experience with continuous integration and automation using Jenkins Expert knowledge over J2EE Design Patterns like MVC Architecture Singleton Factory Pattern Front Controller and Data Access Object Work Experience Python developer Dominion Energy Richmond VA January 2018 to Present Responsibilities Developed full stack applications using pythons Django framework as the backend and jinja templating system Developed Merge jobs in Python to extract and load data into MySQL database Developed python web applications connected to MongoDB using pymongo and Redis for caching Used Test driven approach for developing the application and Implemented the unit testsusing Python Unit test framework Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and baddata patterns and fixing them Developed Python scripts to monitor health of Mongo databases and perform adhocbackups using Mongo dump and Mongo restore Developed Dynamic SQL queries in Oracle database using DBMS_SQL package to bypass manual effort required for the tasks involved Implemented Microservices in GoLang Designed and developed an entire module called CDC change data capture in python and deployed in AWS GLUE using Pyspark library and python Designed front end using UI HTML Bootstrap Node JS Angular JS CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop theapplication Ensured high quality data collection and maintaining the integrity of the data Designed a workflow for data passing from AWS gateway server to AWS S3 for both encrypted and decrypted formats and then to custom developed delta process module Assist with building processes to insure continuity in the task that we complete as a team To include the Windows Server Build Guide used by the Cloud services team Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Wrote and executed several complex SQL queries in AWS glue for ETL operations in Spark data frame using sparksql Implemented the frontend and backend using JavaScript PythonFramework and Neo4j Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Familiar with key data science concepts statistics data visualization machine learning etc Experienced in Python R MATLAB SAS PySpark programming for statistic and quantitative analysis Worked on Cassandra denormalized data modeling for multinode cluster Gained excellent knowledge of Cassandra internal architecture gossiping protocols and ring topology Working experience in creating REST webservice protocols in python to access AWS and Reltio Contributed in migrating data from Oracle database to Apache Cassandra a NoSQL database using SSTable loader Assisted the business analyst team in the capacity of a Data Science specialist for modeling unstructured data extraction and visualization using Python Designed and developed data management system using MySQL Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed web based application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Developed a mapping process for delta file to JSON format for AWS glue consumption and created and call the glue Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Developed tools to automate some base tasks using Python Shell scripting and XML Developed existing network mapping microservices using python nmap and deployed it on kubernetes Used Pyats to implement GUI for the user to create modify and view reports based on client data Developed efficient Angularjs for client web based application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Responsible for managing large databases using Pandas data frames and MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Responsible for debugging and troubleshooting the web application Environment Python 27 GoLang Django scipy Pandas Spark API Bugzilla SVN Apache HTTP Java JQuery MySQL Linux Eclipse Shell Scripting HTML5CSS Red hat Linux RUBY Cassandra MongoDB Redis Python Developer Vanguard Malvern PA February 2017 to December 2017 Responsibilities Analysis and Design of application Created UI using JavaScript and HTML5CSS Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Implemented business logic using PythonDjango with jinja templating system Worked with millions of database records daily finding common errors and bad data patterns and fixing them ExportedImported data between different data sources using SQL Server Management Studio Maintained program libraries users manuals and technical documentation Managed large datasets using Panda data frames and MySQL Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Thorough knowledge in various frontend tools like HTML DHTML CSS JavaScript XML JQuery Angular JS and AJAX Implementing the microservices using JavaJ2EE Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis audits and generating technical documentation for the project BuildingMaintaining Docker container clusters managed by Kubernetes Linux Bash GIT Docker on AWS Utilized Kubernetes and Docker for the runtime environment of the CICD system to build test deploy Extensively involved in all phases of data acquisition data collection data cleaning model development model validation and visualization to deliver data science solutions Familiarity with Java and Python Client drivers for building clientside applications interacting with Cassandra database Assign Job to AWS Data pipeline service to access log data in AWS S3 Experience in provisioning and managing multidata center Cassandra cluster on Amazon Web Services Experience with Cassandra Performance tuning in improving the writeread throughput and latency Built various graphs for business decisionmaking using Python matplotlib library Fetched twitter feeds for certain important keyword using pythontwitter library and used it for sentimental analysis Developed Restful microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Used Python library Beautiful Soup for webscrapping Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created most important Business Rules which are useful for the scope of project and needs of customers Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used SQL Alchemy to generate ORM model for the project to connect python backend code to postgres database Work with team of developers on python applications for RISK management Took part in various lifecycle phases such as Design Development and Deployment Testing and Implementation and support Used Pandas and Scikitlearn libraries for statistics Analysis Created most important Business Rules which are useful for the scope of project and needs of customers Used python flask framework to develop Restful APIs service Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties For sending and receiving the data between multiple systems RESTful WebServices were implemented Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed the architecture of the hardware environments and methodology of the code Created AWS S3 buckets configuring buckets with permissions logging versioning and tagging Used BOTO3 software development kit for AWS S3 services Participated in Performance tuning and query optimization in AWS Redshift Managed Amazon redshift clusters such as launching the cluster by specifying the nodes and performing the data analysis queries Applied NLP techniques and increased accuracy Used NLP to rank the documents and data Performed tokenization in NLP Experienced in Agile Methodologies and SCRUM Process Worked in development of applications especially in UNIX environment and familiar with all of its commands Refactored existing project to make it more Restful and threadsafe Added unit tests and improved existing ones using assert and pyunit Designed RESTful XML web service for handling AJAX requests Environment Python 27 Django HTML5CSS UNIX MS SQL Server 2013 Jasper Reports JavaScript Eclipse Red Hat Linux Shell Scripting RESTful MVC3 Python Developer Webster Bank Bristol CT July 2016 to January 2017 Responsibilities Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed single page application using Backbonejs along with JQuery Responsible for setting up Python REST API framework using DJANGO Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python modules like math glob random itertools functools Developed Wrapper in Python for instantiating multithreaded application Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Responsible for search engine optimization to improve the visibility of the website Used D3js library for visualizations like transitions line charts and bar graphs Developed Merge jobs in Python to extract and load data into MySQL database Designed and developed the presentation layerclient end and handled all the client sidevalidation using JavaScript Wrote validation scripts in SQL to validate data loading Use GIT for version control Performed Unit and system testing Environment Python Django MySQL XHTML CSS AJAX JavaScript Apache Web Server Git Red hat Linux Python Developer Samhitha It October 2013 to November 2015 Responsibilities Write Python scripts to parse JSON documents and load the data in database Use Python and Django to interface with the JQuery UI and manage the storage and deletion of content Experience in writing branching and merging python code using git Created projects and portal sites in Web portal using python Django Experience in setting up App pools and web sites in Python Features for dashboard were developed and tested using CSS JavaScript Django Bootstrap Created the front end of the app using Angular JS Responsible for writingmodifying scripts using sh ksh and Bash for dayto day administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Create database using MySQL wrote several queries to extract data from database Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Dynamic implementation of SQL server work on website using SQL developer tool Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Follow AGILE development methodology to develop the application Designed developed and maintained PostgreSQL database architecture Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Write multithread scripts to obtain optimal performance Used AJAX to reduce page reloads Used the Model View controller MVC framework to build modular and maintainable applications This project also used other technologies like JQuery for java script manipulations bootstrap for the frontend html layout Created tables stored procedures triggers and views for data access and manipulation Environment Python 27 Django 16 HTML5 CSS XML MySQL MongoDB JavaScript Angular JS JQuery CSS Bootstrap JavaScript Eclipse Git GitHub Linux Redis Shell Scripting Python Developer NSG February 2012 to October 2013 Responsibilities Used Python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python with jinja templating for fullstack web development Developed tools using Python Shell scripting XML to automate some of the menial tasks Designed and developed the UI of the website using HTML XHTML AJAX CSS JQuery JSON and JavaScript Used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL db package Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing PythonDjango module to deliver certain format of data Used Django Database API to access database objects Wrote python scripts to parse XML documents and load the data in database Responsible for debugging and troubleshooting the web application Environment MySQL HTML Python 20 Django 14 CSS XML MySQL JavaScript Linux Shell Scripting PHP AJAX Education Masters Skills CSS 6 years DJANGO 6 years HTML 6 years jQuery 6 years LINUX 6 years Additional Information Technical Skills Programming Languages Python35 27 UML design Java SQL PLSQL kubernets and Ansible Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Numpy matPlotLib PySide Scipy wxPython PyTables Frameworks Django web2py pyramid Flask Databases Oracle MySQL PostgreSQL MongoDB Kafka CloudTechnologies AWS Rackspace Cloud Amazon S3 BugTrackingTools Jira Bugzilla Rational Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Methodologies Agile Scrum and Waterfall OperatingSystems Linux Unix Windows",
    "unique_id": "1757e2c4-4a70-4c26-b375-9fa54ca02e79"
}