{
    "clean_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer ChickfilA Atlanta GA Authorized to work in the US for any employer Work Experience Sr Java Full Stack Developer ChickfilA Atlanta GA November 2015 to Present Roles Responsibilities Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Developed Restful web services using Apache Camel Spring Boot and configured Kibana as a visualization dashboard Participated in code review and mentoring sessions and used GIT as version control and GIT Bash for GIT interactions Worked on Active MQ Messaging Service for Integration Worked on migration Microsoft azure service to AWS service for a project Moved the project to Java 8 to extensively use Lambda expressions and have better connectivity to Cloud in addition adding Spring Boot Libraries and UI Enhancement Used AWS to deploy the project on EC2 instance Implementation of the Business logic layer for MongoDB Services End to End Integration development from JIRA to Service Now using Restful calls using C JAVA Groovy Developed a shell script which picks up and changes the server commands for various other scripts to identify the java 18 version Recommended and developed strategy for integrating internal security model into new projects with Spring Security and Spring Boot Created RFP Request for Proposal Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Implemented RESTful web services using spring framework on backend and Hibernate framework for ORM Microsoft Azure for authentication and authorization Involved in converting HiveSQL queries into Spark transformations using Spark SQL Python and Scala Instructed teams on best practices around PCF and Spring Boot Developed different swings component for user interfaces Developed Reporting Dashboard which will generate reports and reduce manual intervention for support activities Developed with Spring MVC Core Java and Sybase Configured Docker containers and Kubernetes to manage dozens of micro services Implemented client side interface using Reactjs flux pattern and Redux framework for SPA Worked in configuration of APACHE CAMEL and executing routes integrating applications using Red Hat JBoss Fuse Developed RESTful services or API in IIB using Java JCN to integrate with LDAP for user registration login and resetchange password functionalities Worked on various Application Servers and Web Servers IBM WebSphere Application Server WebLogic JBoss and Tomcat8 Wrote effective JavaScript code for ReactJS and NodeJS applications for interacting with server and network applications Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate spring framework Worked with Apache Storm to create and modified Storms Topologies to consume messages from the active MQ and persist data into the database HBase and HDFS Loading data into Spark RDD and do in memory data Computation to generate the Output response Developed a MEAN Stack Application Using Mongo DB Express JS Angular JS and Node JS as well as created web applications prototype using Angular JS Node JS Used BackboneJS for the functionality and structure Developed core component of Analytics with Nodejs Backbonejs and Requirejs Design investigation and implementation of public facing websites on Amazon Web Services AWS Utilized IBM WebSphereRAD for development of messaging and web services Developed and deployed the code in server JBOSS 6x of Red Hat IDE Used GitHub extensively as versioning tool and used Maven for automated building of project Worked with web designers to develop user interfaces and prototypes for a webbased internal system Developed the application as Single Page Application SPA using Angular2 MVC Used Java 8 features in developing the code like Lambda expressions creating resource classes fetching documents from database Built application logic using Python Performed advanced procedures like text analytics and processing using the inmemory computing capabilities of Spark using Scala Implementing responsive ReactJS components for different solutions and performing the server side validations using NodeJS framework Used the following tools everyday BashZsh GIT Docker Postgres SQL Server JQ Jira VIM and JetBrains Used Microsoft Azure for role based access for authentication and authorization purpose Perform data analytics and load data to Amazon s3data lakeSpark cluster Developed application integration components using Apache camel components Installed configured and updated Linux machines with Red Hat Used Nodejs for the management on interchange of the data between the servers Used NodeJS and ExpressJS to create serverside MVC framework with MongoDB Used session handlers from Expressjs and Nodejs to handle user login and cookies to provide authentication Deployed containers and Micro services in AWS using EC2 Container Services Extensively worked on Hadoop Development Tool such as HDFS MapReduce PIG HBASE etc Created Maven archetypes for generating fully functional Rest webservices supporting JSON message transformation Worked with NoSQL and BigData technologies such as MongoDB Cassandra and Hadoop Worked on the backend using Groovy and Grails Value Object and DAO Used different design strategies like Faade pattern proxy command pattern to efficiently use resources Fixing the batch logs using Shell Script and retrieving the data from database Used Java 18 Lambda expressions and functional interfaces wherever possible Implemented EJBs session bean to maintain mobile session Developed REST services to talk with adapter classes and exposed them to the AngularJs frontend Involved in back end testing where the forms were loaded into the database and also experienced in building and deploying J2EE Application Archives Jar War and Ear on Tomcat 5X Database is built using Sybase and Oracle and also used Tortoise SVN as Source Control Tool Developed new userfacing features using Reactjs Replaced existed Angular JS code with Angular2 code which decreased number of lines of code for a web application which increased performance Used AWS Lambda to manage the servers and run the code in the AWS Implemented application level persistence using Hibernate and Spring Configured Struts Hibernate framework with Spring MVC Deployed Spring Boot based Micro Services Docker container using Amazon EC2 container services and using AWS admin console Developed the application using Struts Framework which is based on the MVC design pattern Creation of REST Web Services for the management of data using Apache CXF Configure and monitor numerous MongoDB instances and replica sets Development of AJAX toolkit based applications using JSON Wrote server side request handling and automated functional test cases to validate UI functionality using Nodejs JavaScript Wrote Restful Web Services to communicate with Mongo DB and performed CRUD operations on Mongo DB using restful web services Implementation of the Business logic layer for Mongo DB Services Worked on Databases Cassandra Java API to interact with the Cassandra Cluster Involved in adding AJAX JavaScript components to some of the JSP pages wherever needed Developed user interface using JSP AJAX JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Used MAVEN to build the project into WAR and EAR files and SVN for version controlling Worked on realtime data processing using Apache Spark Apache Kafka Zookeeper and Scala Involved in JUnit Testing of various modules by generating the Test Cases Configured Maven dependencies for application building processes Environment Java 8 J2EE JSTL JSF XML CSS Spring Hibernate Struts WebLogic APACHE CXF and REST JQuery AJAX ExtJS JavaScript JSP Junit Windows JMS Ant Maven GitHub Sr JavaFull Stack Developer Fidelity Investments September 2013 to October 2015 Roles Responsibilities Used Java HTML JDBC JSP Ant JUnit XML JavaScript and a proprietary Strutslike system Worked extensively with writing SQL and PLSQL using Sybase Setting up JavaJ2EE development environment using Eclipse Maven and WebLogic Developed on Tomcat for a WebLogic deployment tools included Ant JUnit DB Unit Http Unit Visual Source Safe and Scarab Built micro services using Docker AWS Lambda and Elastic Beanstalk Involved to work with another developer to migrate an existing MS Access application to ColdFusion Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with UNIX Shell scripts to automate routine jobs Used Rabbit MQ as Java Messaging Service for producing and consuming data between applications Wrote SQL commands and Stored Procedures to retrieve data from SQL server database Involved in migrating Hive queries into Spark transformations using Data frames Spark SQL SQL Context and Scala Wrote Groovy scripts to automate request chaining security tests and load tests Involved into Code development and testing using JBOSS ESB Enterprise Service Bus Maven Java 17 Restful Web Services Implement the JavaScriptjQuery frameworks such as Reactjs Nodejs for MVWMVC framework Very capable at using AWS utilities such as EMR S3 and Cloud watch to run and monitor HadoopSpark jobs on AWS Implemented NOSQL DB Mango DBCassandra to store poisoned messages Configuring implementing and supporting High Availability Replication with Load balancing sharing cluster of MongoDB having TBs of data Imported the data into Spark from Kafka Consumer group using Spark Streaming APIs Followed MVC Structure and used AngularJS to develop Single page Application Migrated the server using the AWS services to a cloud environment Used Maven project management tool for build and deployment of the application Implemented business logic at Server side in Core Java and Java EE Architecture Worked on Spark and Scala and used the concept of RDD PRDD and Data Frames in different Spark context Utilized Camel to integrate micro services with other micro services and Rabbit MQ messaging exchanges Used Docker to containerize the Services and APIs to run on EC2 instances Designed Selenium IDE test routines for User Interface Testing of webframework and applications Implemented Spark using Scala and Spark SQL for faster testing and processing of data responsible to manage data from different sources Used NoSQL database Cassandra for having high efficiency and good response for the request Involved in developing the UI pages using HTML CSS JavaScript jQuery Bootstrap and Angular JS Optimizing MongoDB CRUD Operations Using OOP Principles SOLID to satisfy the different application needs within a centralized and manageable architecture Used MAVEN to define the dependencies plugins and build the application Built enterprise Java applications using POJOs and lightweight frameworks such as Spring and Hibernate Developed API to Integrate with Amazon EC2 cloud based architecture in AWS including creating machine Images Used Rabbit MQ for reliable and asynchronous exchange of important information between multiple business applications Created RFP Request for Proposal Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Utilized Web sockets and Nodejs to provide real time support for the Matrix Portal Designed table architecture and developed DAO layer using Cassandra NoSQL database Developed user interface using JSP JSP Tag libraries JSTL HTML CSS JavaScript to simplify the complexities of the application Developed multiple POCs to create an interface between Backend to Frontend by using MONGODB Express JS AngularJs and Nodejs Experience in Agile Test Driven Development TDD and Waterfall methodologies Development of frontend Client side using JSP CSS JQuery JavaScript Development of backend Server side using Core Java and Java EE Persisted data from database leveraging Hibernate and SQL Server 2008 Implemented Apache Kafka to provide a unified highthroughput lowlatency platform for handling realtime data feeds Used the most popular streaming tool Kafka to load the data on Hadoop File system and move the same data to Cassandra NoSQL database Implemented unified data platform to gather data from different sources using Kafka Java Producers and consumers Designed Developed intranet applications for catalog maintenance using EJB3 JPA Servlet AJAX JSF Prime Faces 3x technologies hosted on JBoss Application server Created custom user defined functions in Python language for Pig Worked on installation configuration supporting and managing Hadoop Clusters using Apache and Cloudera Used Maven and Jenkins to automate the build and deploy process Built AngularJs framework including MVC architectures different modules specific controllers templates custom directives and custom filters Wrote services to store and retrieve user data from the MongoDB for the application on device Designed and created SQL Server Database Stored Procedures Implemented Kafka Simple consumers to get data from specific partitions Communicating with a Nodejs backend under MONGODB Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Scala Involved in SPA Single Page Web Applications using RESTFUL web services plus Ajax and Angular JS Used MVC pattern for GUI development in JSF and worked closely with JSF lifecycle Servlets and JSPs are used for realtime reporting which is too complex to be handled by the Business Objects Environment Java Java 2EETomcat Oracle SQL server JSP JSF HTML CSS JavaScript JSON JQuery Ajax Spring Hibernate WebLogic JBoss SVN NetBeans Subversion MS Visio Wamp Sr Java Developer Cigna East Hanover NJ February 2012 to August 2013 Roles Responsibilities Involved in writing JSP and JSF components Used JSTL Tag library Core Logic Nested Beans and Html TagLibs to create standard dynamic web pages Used WebLogic to build and deploy the application Created stubs to consume Web services Implemented with Angular using its advantage including two way data binding and templates Identified the defects through Selenium and ensured that business processes deliver the expected results and remain reliable throughout the production release Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis Designed and developed the session module using J2EE for existing cold fusion application Implemented build scripts using Maven and GIT technology for version control Used CQL Cassandra Query Language to read from and write data into Cassandra database Worked on NoSQL databases including HBase Mongo DB and Cassandra Worked on creating and consuming Restful Web Services Designed and developed backend application servers using Python Created custom user defined functions in Python language for Pig Managed application deployment using Python Used Perl as a Scripting language for serverside scripting of web pages Upgraded Python 23 to Python 25 this required recompiling mod_python to use Python 25 Enhanced user experience by designing new web features using MVC Framework like Backbonejs and nodejs Used Solr queries on top of Cassandra to fetch the results Automated tests were coded in Java Script with Froglogics Squish or Smart Bears Test Complete for client applications and coded in Java with Selenium for web application testing Extensively implemented AngularJS components ngclick ngrepeat ngmodel ngshow ngclude etc Involved in building EJB SessionEntity beans to maintain Transaction Management across the application Developed client GUI modules using Swing Java script and Flash Used JUnit for testing the application and Maven for building Projects Creation of a Tastypie like module for Nodejs REST APIs design Built Web pages that are more userinteractive using JavaScript and AngularJs Developed JSP Views Actions and delegating the tasks to corresponding session beans Working on Struts Framework for developing the frontend application and extensively Spring as middle tier for entire application Involved in working with Struts Tiles for the common look and feel for a web application Working on Web Services using Java API for XML Services JAXWS and supporting building deploying Web APIs Services Connected server and database to update data information with Nodejs and MONGODB Wrote PLSQL statements according to the need using Oracle 10g database Working on an internal webbased client server application built with Struts 2 Framework using Oracle backend Database working on establishing the relation for the different beans using the Hibernate Involved in writing various components using Spring AOP and IOC framework Environment Java Struts Framework Oracle HTML PLSQL JDBC Stored procedures Web Logic Application Server Hibernate Ant JAX WS Web Services WSDL EJB Java Developer Syntel IN July 2008 to January 2012 Roles Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Developed a prototype of the application and demonstrated to business users to verify the application functionality Developing front end of application using HTML CSS backbonejs JavaScript jQuery Used AngularJs framework where data from backend is stored in model and populated it to UI Prepared user documentation with screenshots for UAT User Acceptance testing Worked on producingconsuming Rest based web services using JAXRS Jersey providers Developed the administrative UI using Angularjs and Nodejs Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets EJB Form Bean and Action classes Worked on MVC JavaScript frameworks such as Backbonejs Angularjs and Nodejs Developed and designed Interfaces using Swing Developed the web layer using Spring MVC framework Worked on a code generation framework that generated Java Swing code from XML Developed Web Services in Java also designed and developed REST interfaces in Java Developed Action Forms and Action Classes in Struts frame work Developed Web API using NodeJS and hosted on multiple load balanced API instances Implemented Struts Action classes using Struts controller component Developed Web services SOAP through WSDL in Apache Axis to interact with other components Integrated Spring DAO for data access using Hibernate used HQL and SQL for querying databases Implemented EJBs Session beans for business logic Used parsers like SAX and DOM for parsing xml documents and used XML transformations using XSLT Wrote stored procedures triggers and cursors using Oracle PLSQL Created and deployed web pages using HTML JSP JavaScript and CSS Wrote JUnit Test cases for performing unit testing Used ANT automated build scripts to compile and package the application Used Jira for bug tracking and project management Environment Java JSP JDBC Struts Hibernate Design Patterns XML PLSQL Developer WebLogic Apache Axis ANT ClearCase JUnit Web services SOAP XSLT Jira Education Bachelors Skills Api 10 years Java 10 years Javascript 10 years Jsp 10 years Model view controller 10 years Node React Angular Jquery Nodejs",
    "entities": [
        "Python Performed",
        "Recommended",
        "BashZsh",
        "Implemented Spark",
        "Hadoop Clusters",
        "Red Hat",
        "Nodejs JavaScript Wrote Restful Web Services",
        "GUI",
        "Java Messaging Service",
        "Agile Test Driven Development TDD",
        "Nodejs",
        "Working on Web Services",
        "SPA Single Page Web Applications",
        "Node React Angular Jquery Nodejs",
        "NetBeans Subversion",
        "Reactjs Nodejs for MVWMVC",
        "Apache CXF Configure",
        "AngularJs Developed JSP Views Actions",
        "MS Access",
        "Backbonejs",
        "Form Bean",
        "EJB SessionEntity",
        "Implementation of the Business logic layer for MongoDB Services End to End Integration",
        "HadoopSpark",
        "RDD",
        "Expressjs",
        "JAXRS Jersey",
        "XML",
        "EAR",
        "SPA Worked",
        "Atlanta",
        "Spring IoC",
        "UI Prepared",
        "WebLogic",
        "JAXWS",
        "AWS Implemented",
        "Software Development Life Cycle SDLC",
        "J2EE Application Archives Jar War and Ear on Tomcat 5X Database",
        "Transaction Management",
        "HBase",
        "Spring Boot based",
        "Proposal Microservice",
        "JavaJ2EE",
        "Amazon",
        "Hadoop File",
        "Tortoise",
        "Implementation of the Business logic layer for",
        "WebLogic Developed on Tomcat for a",
        "Amazon Web Services AWS Utilized IBM",
        "Developed",
        "Ant JUnit DB",
        "Installed",
        "Spring MVC",
        "REST JQuery AJAX ExtJS",
        "Nodejs Experience",
        "Restful",
        "JSON Wrote",
        "Projects Creation",
        "MQ",
        "Requirejs Design",
        "the Business Objects",
        "CSS Wrote",
        "JBoss Application",
        "Spring Security",
        "Oracle PLSQL Created",
        "SQL Server Database Stored Procedures Implemented",
        "Apache Camel",
        "JSP",
        "Micro",
        "Built",
        "IOC",
        "DOM",
        "AJAX JavaScript",
        "Worked on Active MQ Messaging Service for Integration Worked",
        "JBOSS ESB Enterprise Service",
        "the Cassandra Cluster Involved",
        "HTML JSP JavaScript",
        "BigData",
        "Spark Streaming APIs Followed MVC Structure",
        "Shell Script",
        "MVC",
        "Web Logic Application Server Hibernate Ant JAX WS Web Services",
        "Spark",
        "Spark SQL Python",
        "Redux",
        "EJB",
        "GIT",
        "Node JS",
        "the Hibernate Involved",
        "Hadoop Development Tool",
        "Rabbit MQ",
        "HTML CSS",
        "Tomcat8 Wrote",
        "Utilized Camel",
        "API",
        "UAT User Acceptance",
        "XSLT Wrote",
        "US",
        "Perform",
        "Sybase",
        "JSP JSP Tag",
        "HBase Mongo DB",
        "Created",
        "AWS",
        "Server",
        "Implemented",
        "Oracle",
        "Strutslike",
        "JSF",
        "Hibernate and Spring Configured",
        "MVC Framework",
        "JSP AJAX JSP Tag",
        "Docker AWS Lambda and Elastic Beanstalk Involved",
        "SAX",
        "CXF",
        "AWS Implemented NOSQL",
        "Created Maven",
        "the Test Cases Configured",
        "HTML CSS JavaScript jQuery Bootstrap",
        "RESTFUL",
        "SQL",
        "Oracle SQL",
        "Spark RDD",
        "GitHub",
        "Creation of REST Web Services",
        "Application Migrated",
        "MAVEN",
        "Kubernetes",
        "Cigna East Hanover",
        "Scala Implementing",
        "Hive",
        "PCF",
        "CRUD",
        "UNIX Shell",
        "Backend",
        "UI Enhancement Used AWS",
        "ColdFusion Responsible for Continuous Integration CI",
        "Spring AOP",
        "Integrated Spring",
        "Maven",
        "Data Frames",
        "ANT",
        "UI",
        "Html TagLibs",
        "Selenium",
        "Microsoft",
        "JSP Servlets",
        "Data frames Spark",
        "JetBrains",
        "Java with Selenium",
        "SVN",
        "HDFS MapReduce PIG",
        "Source Control Tool Developed",
        "CSS",
        "Waterfall methodologies Development of frontend Client",
        "Images Used Rabbit MQ",
        "IIB",
        "Groovy and Grails Value Object",
        "Developed Ruby on Rails",
        "NoSQL",
        "Nodejs Developed",
        "Micro Services Docker",
        "Single Page Application",
        "Mongo DB",
        "Mongo DB Services Worked",
        "Restful Web Services Designed",
        "Python Created",
        "Java Developed Action Forms and Action Classes",
        "Used CQL Cassandra Query Language"
    ],
    "experience": "Experience Sr Java Full Stack Developer ChickfilA Atlanta GA November 2015 to Present Roles Responsibilities Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Developed Restful web services using Apache Camel Spring Boot and configured Kibana as a visualization dashboard Participated in code review and mentoring sessions and used GIT as version control and GIT Bash for GIT interactions Worked on Active MQ Messaging Service for Integration Worked on migration Microsoft azure service to AWS service for a project Moved the project to Java 8 to extensively use Lambda expressions and have better connectivity to Cloud in addition adding Spring Boot Libraries and UI Enhancement Used AWS to deploy the project on EC2 instance Implementation of the Business logic layer for MongoDB Services End to End Integration development from JIRA to Service Now using Restful calls using C JAVA Groovy Developed a shell script which picks up and changes the server commands for various other scripts to identify the java 18 version Recommended and developed strategy for integrating internal security model into new projects with Spring Security and Spring Boot Created RFP Request for Proposal Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Implemented RESTful web services using spring framework on backend and Hibernate framework for ORM Microsoft Azure for authentication and authorization Involved in converting HiveSQL queries into Spark transformations using Spark SQL Python and Scala Instructed teams on best practices around PCF and Spring Boot Developed different swings component for user interfaces Developed Reporting Dashboard which will generate reports and reduce manual intervention for support activities Developed with Spring MVC Core Java and Sybase Configured Docker containers and Kubernetes to manage dozens of micro services Implemented client side interface using Reactjs flux pattern and Redux framework for SPA Worked in configuration of APACHE CAMEL and executing routes integrating applications using Red Hat JBoss Fuse Developed RESTful services or API in IIB using Java JCN to integrate with LDAP for user registration login and resetchange password functionalities Worked on various Application Servers and Web Servers IBM WebSphere Application Server WebLogic JBoss and Tomcat8 Wrote effective JavaScript code for ReactJS and NodeJS applications for interacting with server and network applications Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate spring framework Worked with Apache Storm to create and modified Storms Topologies to consume messages from the active MQ and persist data into the database HBase and HDFS Loading data into Spark RDD and do in memory data Computation to generate the Output response Developed a MEAN Stack Application Using Mongo DB Express JS Angular JS and Node JS as well as created web applications prototype using Angular JS Node JS Used BackboneJS for the functionality and structure Developed core component of Analytics with Nodejs Backbonejs and Requirejs Design investigation and implementation of public facing websites on Amazon Web Services AWS Utilized IBM WebSphereRAD for development of messaging and web services Developed and deployed the code in server JBOSS 6x of Red Hat IDE Used GitHub extensively as versioning tool and used Maven for automated building of project Worked with web designers to develop user interfaces and prototypes for a webbased internal system Developed the application as Single Page Application SPA using Angular2 MVC Used Java 8 features in developing the code like Lambda expressions creating resource classes fetching documents from database Built application logic using Python Performed advanced procedures like text analytics and processing using the inmemory computing capabilities of Spark using Scala Implementing responsive ReactJS components for different solutions and performing the server side validations using NodeJS framework Used the following tools everyday BashZsh GIT Docker Postgres SQL Server JQ Jira VIM and JetBrains Used Microsoft Azure for role based access for authentication and authorization purpose Perform data analytics and load data to Amazon s3data lakeSpark cluster Developed application integration components using Apache camel components Installed configured and updated Linux machines with Red Hat Used Nodejs for the management on interchange of the data between the servers Used NodeJS and ExpressJS to create serverside MVC framework with MongoDB Used session handlers from Expressjs and Nodejs to handle user login and cookies to provide authentication Deployed containers and Micro services in AWS using EC2 Container Services Extensively worked on Hadoop Development Tool such as HDFS MapReduce PIG HBASE etc Created Maven archetypes for generating fully functional Rest webservices supporting JSON message transformation Worked with NoSQL and BigData technologies such as MongoDB Cassandra and Hadoop Worked on the backend using Groovy and Grails Value Object and DAO Used different design strategies like Faade pattern proxy command pattern to efficiently use resources Fixing the batch logs using Shell Script and retrieving the data from database Used Java 18 Lambda expressions and functional interfaces wherever possible Implemented EJBs session bean to maintain mobile session Developed REST services to talk with adapter classes and exposed them to the AngularJs frontend Involved in back end testing where the forms were loaded into the database and also experienced in building and deploying J2EE Application Archives Jar War and Ear on Tomcat 5X Database is built using Sybase and Oracle and also used Tortoise SVN as Source Control Tool Developed new userfacing features using Reactjs Replaced existed Angular JS code with Angular2 code which decreased number of lines of code for a web application which increased performance Used AWS Lambda to manage the servers and run the code in the AWS Implemented application level persistence using Hibernate and Spring Configured Struts Hibernate framework with Spring MVC Deployed Spring Boot based Micro Services Docker container using Amazon EC2 container services and using AWS admin console Developed the application using Struts Framework which is based on the MVC design pattern Creation of REST Web Services for the management of data using Apache CXF Configure and monitor numerous MongoDB instances and replica sets Development of AJAX toolkit based applications using JSON Wrote server side request handling and automated functional test cases to validate UI functionality using Nodejs JavaScript Wrote Restful Web Services to communicate with Mongo DB and performed CRUD operations on Mongo DB using restful web services Implementation of the Business logic layer for Mongo DB Services Worked on Databases Cassandra Java API to interact with the Cassandra Cluster Involved in adding AJAX JavaScript components to some of the JSP pages wherever needed Developed user interface using JSP AJAX JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Used MAVEN to build the project into WAR and EAR files and SVN for version controlling Worked on realtime data processing using Apache Spark Apache Kafka Zookeeper and Scala Involved in JUnit Testing of various modules by generating the Test Cases Configured Maven dependencies for application building processes Environment Java 8 J2EE JSTL JSF XML CSS Spring Hibernate Struts WebLogic APACHE CXF and REST JQuery AJAX ExtJS JavaScript JSP Junit Windows JMS Ant Maven GitHub Sr JavaFull Stack Developer Fidelity Investments September 2013 to October 2015 Roles Responsibilities Used Java HTML JDBC JSP Ant JUnit XML JavaScript and a proprietary Strutslike system Worked extensively with writing SQL and PLSQL using Sybase Setting up JavaJ2EE development environment using Eclipse Maven and WebLogic Developed on Tomcat for a WebLogic deployment tools included Ant JUnit DB Unit Http Unit Visual Source Safe and Scarab Built micro services using Docker AWS Lambda and Elastic Beanstalk Involved to work with another developer to migrate an existing MS Access application to ColdFusion Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with UNIX Shell scripts to automate routine jobs Used Rabbit MQ as Java Messaging Service for producing and consuming data between applications Wrote SQL commands and Stored Procedures to retrieve data from SQL server database Involved in migrating Hive queries into Spark transformations using Data frames Spark SQL SQL Context and Scala Wrote Groovy scripts to automate request chaining security tests and load tests Involved into Code development and testing using JBOSS ESB Enterprise Service Bus Maven Java 17 Restful Web Services Implement the JavaScriptjQuery frameworks such as Reactjs Nodejs for MVWMVC framework Very capable at using AWS utilities such as EMR S3 and Cloud watch to run and monitor HadoopSpark jobs on AWS Implemented NOSQL DB Mango DBCassandra to store poisoned messages Configuring implementing and supporting High Availability Replication with Load balancing sharing cluster of MongoDB having TBs of data Imported the data into Spark from Kafka Consumer group using Spark Streaming APIs Followed MVC Structure and used AngularJS to develop Single page Application Migrated the server using the AWS services to a cloud environment Used Maven project management tool for build and deployment of the application Implemented business logic at Server side in Core Java and Java EE Architecture Worked on Spark and Scala and used the concept of RDD PRDD and Data Frames in different Spark context Utilized Camel to integrate micro services with other micro services and Rabbit MQ messaging exchanges Used Docker to containerize the Services and APIs to run on EC2 instances Designed Selenium IDE test routines for User Interface Testing of webframework and applications Implemented Spark using Scala and Spark SQL for faster testing and processing of data responsible to manage data from different sources Used NoSQL database Cassandra for having high efficiency and good response for the request Involved in developing the UI pages using HTML CSS JavaScript jQuery Bootstrap and Angular JS Optimizing MongoDB CRUD Operations Using OOP Principles SOLID to satisfy the different application needs within a centralized and manageable architecture Used MAVEN to define the dependencies plugins and build the application Built enterprise Java applications using POJOs and lightweight frameworks such as Spring and Hibernate Developed API to Integrate with Amazon EC2 cloud based architecture in AWS including creating machine Images Used Rabbit MQ for reliable and asynchronous exchange of important information between multiple business applications Created RFP Request for Proposal Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Utilized Web sockets and Nodejs to provide real time support for the Matrix Portal Designed table architecture and developed DAO layer using Cassandra NoSQL database Developed user interface using JSP JSP Tag libraries JSTL HTML CSS JavaScript to simplify the complexities of the application Developed multiple POCs to create an interface between Backend to Frontend by using MONGODB Express JS AngularJs and Nodejs Experience in Agile Test Driven Development TDD and Waterfall methodologies Development of frontend Client side using JSP CSS JQuery JavaScript Development of backend Server side using Core Java and Java EE Persisted data from database leveraging Hibernate and SQL Server 2008 Implemented Apache Kafka to provide a unified highthroughput lowlatency platform for handling realtime data feeds Used the most popular streaming tool Kafka to load the data on Hadoop File system and move the same data to Cassandra NoSQL database Implemented unified data platform to gather data from different sources using Kafka Java Producers and consumers Designed Developed intranet applications for catalog maintenance using EJB3 JPA Servlet AJAX JSF Prime Faces 3x technologies hosted on JBoss Application server Created custom user defined functions in Python language for Pig Worked on installation configuration supporting and managing Hadoop Clusters using Apache and Cloudera Used Maven and Jenkins to automate the build and deploy process Built AngularJs framework including MVC architectures different modules specific controllers templates custom directives and custom filters Wrote services to store and retrieve user data from the MongoDB for the application on device Designed and created SQL Server Database Stored Procedures Implemented Kafka Simple consumers to get data from specific partitions Communicating with a Nodejs backend under MONGODB Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Scala Involved in SPA Single Page Web Applications using RESTFUL web services plus Ajax and Angular JS Used MVC pattern for GUI development in JSF and worked closely with JSF lifecycle Servlets and JSPs are used for realtime reporting which is too complex to be handled by the Business Objects Environment Java Java 2EETomcat Oracle SQL server JSP JSF HTML CSS JavaScript JSON JQuery Ajax Spring Hibernate WebLogic JBoss SVN NetBeans Subversion MS Visio Wamp Sr Java Developer Cigna East Hanover NJ February 2012 to August 2013 Roles Responsibilities Involved in writing JSP and JSF components Used JSTL Tag library Core Logic Nested Beans and Html TagLibs to create standard dynamic web pages Used WebLogic to build and deploy the application Created stubs to consume Web services Implemented with Angular using its advantage including two way data binding and templates Identified the defects through Selenium and ensured that business processes deliver the expected results and remain reliable throughout the production release Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis Designed and developed the session module using J2EE for existing cold fusion application Implemented build scripts using Maven and GIT technology for version control Used CQL Cassandra Query Language to read from and write data into Cassandra database Worked on NoSQL databases including HBase Mongo DB and Cassandra Worked on creating and consuming Restful Web Services Designed and developed backend application servers using Python Created custom user defined functions in Python language for Pig Managed application deployment using Python Used Perl as a Scripting language for serverside scripting of web pages Upgraded Python 23 to Python 25 this required recompiling mod_python to use Python 25 Enhanced user experience by designing new web features using MVC Framework like Backbonejs and nodejs Used Solr queries on top of Cassandra to fetch the results Automated tests were coded in Java Script with Froglogics Squish or Smart Bears Test Complete for client applications and coded in Java with Selenium for web application testing Extensively implemented AngularJS components ngclick ngrepeat ngmodel ngshow ngclude etc Involved in building EJB SessionEntity beans to maintain Transaction Management across the application Developed client GUI modules using Swing Java script and Flash Used JUnit for testing the application and Maven for building Projects Creation of a Tastypie like module for Nodejs REST APIs design Built Web pages that are more userinteractive using JavaScript and AngularJs Developed JSP Views Actions and delegating the tasks to corresponding session beans Working on Struts Framework for developing the frontend application and extensively Spring as middle tier for entire application Involved in working with Struts Tiles for the common look and feel for a web application Working on Web Services using Java API for XML Services JAXWS and supporting building deploying Web APIs Services Connected server and database to update data information with Nodejs and MONGODB Wrote PLSQL statements according to the need using Oracle 10 g database Working on an internal webbased client server application built with Struts 2 Framework using Oracle backend Database working on establishing the relation for the different beans using the Hibernate Involved in writing various components using Spring AOP and IOC framework Environment Java Struts Framework Oracle HTML PLSQL JDBC Stored procedures Web Logic Application Server Hibernate Ant JAX WS Web Services WSDL EJB Java Developer Syntel IN July 2008 to January 2012 Roles Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Developed a prototype of the application and demonstrated to business users to verify the application functionality Developing front end of application using HTML CSS backbonejs JavaScript jQuery Used AngularJs framework where data from backend is stored in model and populated it to UI Prepared user documentation with screenshots for UAT User Acceptance testing Worked on producingconsuming Rest based web services using JAXRS Jersey providers Developed the administrative UI using Angularjs and Nodejs Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets EJB Form Bean and Action classes Worked on MVC JavaScript frameworks such as Backbonejs Angularjs and Nodejs Developed and designed Interfaces using Swing Developed the web layer using Spring MVC framework Worked on a code generation framework that generated Java Swing code from XML Developed Web Services in Java also designed and developed REST interfaces in Java Developed Action Forms and Action Classes in Struts frame work Developed Web API using NodeJS and hosted on multiple load balanced API instances Implemented Struts Action classes using Struts controller component Developed Web services SOAP through WSDL in Apache Axis to interact with other components Integrated Spring DAO for data access using Hibernate used HQL and SQL for querying databases Implemented EJBs Session beans for business logic Used parsers like SAX and DOM for parsing xml documents and used XML transformations using XSLT Wrote stored procedures triggers and cursors using Oracle PLSQL Created and deployed web pages using HTML JSP JavaScript and CSS Wrote JUnit Test cases for performing unit testing Used ANT automated build scripts to compile and package the application Used Jira for bug tracking and project management Environment Java JSP JDBC Struts Hibernate Design Patterns XML PLSQL Developer WebLogic Apache Axis ANT ClearCase JUnit Web services SOAP XSLT Jira Education Bachelors Skills Api 10 years Java 10 years Javascript 10 years Jsp 10 years Model view controller 10 years Node React Angular Jquery Nodejs",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Sr",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "ChickfilA",
        "Atlanta",
        "GA",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "ChickfilA",
        "Atlanta",
        "GA",
        "November",
        "Present",
        "Roles",
        "Responsibilities",
        "application",
        "service",
        "components",
        "beans",
        "Spring",
        "IoC",
        "creation",
        "Hibernate",
        "mapping",
        "files",
        "generation",
        "database",
        "schema",
        "Developed",
        "web",
        "services",
        "Apache",
        "Camel",
        "Spring",
        "Boot",
        "Kibana",
        "visualization",
        "dashboard",
        "code",
        "review",
        "sessions",
        "GIT",
        "version",
        "control",
        "GIT",
        "Bash",
        "GIT",
        "interactions",
        "MQ",
        "Messaging",
        "Service",
        "Integration",
        "migration",
        "Microsoft",
        "azure",
        "service",
        "AWS",
        "service",
        "project",
        "project",
        "Java",
        "Lambda",
        "expressions",
        "connectivity",
        "Cloud",
        "addition",
        "Spring",
        "Boot",
        "Libraries",
        "UI",
        "Enhancement",
        "AWS",
        "project",
        "EC2",
        "instance",
        "Implementation",
        "Business",
        "logic",
        "layer",
        "MongoDB",
        "Services",
        "End",
        "End",
        "Integration",
        "development",
        "JIRA",
        "Service",
        "calls",
        "C",
        "JAVA",
        "Groovy",
        "shell",
        "script",
        "server",
        "commands",
        "scripts",
        "version",
        "strategy",
        "security",
        "model",
        "projects",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "RFP",
        "Request",
        "Proposal",
        "Microservice",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "web",
        "services",
        "spring",
        "framework",
        "Hibernate",
        "framework",
        "ORM",
        "Microsoft",
        "Azure",
        "authentication",
        "authorization",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "SQL",
        "Python",
        "Scala",
        "teams",
        "practices",
        "PCF",
        "Spring",
        "Boot",
        "swings",
        "component",
        "user",
        "interfaces",
        "Reporting",
        "Dashboard",
        "reports",
        "intervention",
        "support",
        "activities",
        "Spring",
        "MVC",
        "Core",
        "Java",
        "Sybase",
        "Configured",
        "Docker",
        "containers",
        "Kubernetes",
        "dozens",
        "micro",
        "services",
        "client",
        "side",
        "interface",
        "Reactjs",
        "flux",
        "pattern",
        "Redux",
        "framework",
        "SPA",
        "configuration",
        "APACHE",
        "CAMEL",
        "routes",
        "applications",
        "Red",
        "Hat",
        "JBoss",
        "Fuse",
        "services",
        "API",
        "IIB",
        "Java",
        "JCN",
        "LDAP",
        "user",
        "registration",
        "login",
        "password",
        "functionalities",
        "Application",
        "Servers",
        "Web",
        "Servers",
        "IBM",
        "WebSphere",
        "Application",
        "Server",
        "WebLogic",
        "JBoss",
        "Tomcat8",
        "JavaScript",
        "code",
        "ReactJS",
        "NodeJS",
        "applications",
        "server",
        "network",
        "applications",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Apache",
        "Camel",
        "spring",
        "framework",
        "Apache",
        "Storm",
        "Storms",
        "Topologies",
        "messages",
        "MQ",
        "data",
        "database",
        "HBase",
        "HDFS",
        "Loading",
        "data",
        "Spark",
        "RDD",
        "memory",
        "data",
        "Computation",
        "Output",
        "response",
        "MEAN",
        "Stack",
        "Application",
        "Mongo",
        "DB",
        "Express",
        "JS",
        "Angular",
        "JS",
        "Node",
        "JS",
        "web",
        "applications",
        "prototype",
        "Angular",
        "JS",
        "Node",
        "JS",
        "BackboneJS",
        "functionality",
        "structure",
        "core",
        "component",
        "Analytics",
        "Nodejs",
        "Backbonejs",
        "Requirejs",
        "Design",
        "investigation",
        "implementation",
        "websites",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "IBM",
        "WebSphereRAD",
        "development",
        "web",
        "services",
        "code",
        "server",
        "JBOSS",
        "6x",
        "Red",
        "Hat",
        "IDE",
        "GitHub",
        "tool",
        "Maven",
        "building",
        "project",
        "web",
        "designers",
        "user",
        "interfaces",
        "prototypes",
        "system",
        "application",
        "Single",
        "Page",
        "Application",
        "SPA",
        "Angular2",
        "MVC",
        "Java",
        "features",
        "code",
        "Lambda",
        "expressions",
        "resource",
        "classes",
        "documents",
        "database",
        "application",
        "logic",
        "Python",
        "Performed",
        "procedures",
        "text",
        "analytics",
        "processing",
        "inmemory",
        "computing",
        "capabilities",
        "Spark",
        "Scala",
        "ReactJS",
        "components",
        "solutions",
        "server",
        "side",
        "validations",
        "NodeJS",
        "framework",
        "tools",
        "everyday",
        "BashZsh",
        "GIT",
        "Docker",
        "Postgres",
        "SQL",
        "Server",
        "JQ",
        "Jira",
        "VIM",
        "JetBrains",
        "Microsoft",
        "Azure",
        "role",
        "access",
        "authentication",
        "authorization",
        "purpose",
        "Perform",
        "data",
        "analytics",
        "data",
        "Amazon",
        "s3data",
        "lakeSpark",
        "cluster",
        "application",
        "integration",
        "components",
        "Apache",
        "camel",
        "components",
        "Installed",
        "Linux",
        "machines",
        "Red",
        "Hat",
        "Nodejs",
        "management",
        "interchange",
        "data",
        "servers",
        "NodeJS",
        "ExpressJS",
        "serverside",
        "MVC",
        "framework",
        "session",
        "handlers",
        "Expressjs",
        "Nodejs",
        "user",
        "login",
        "cookies",
        "authentication",
        "containers",
        "Micro",
        "services",
        "AWS",
        "EC2",
        "Container",
        "Services",
        "Hadoop",
        "Development",
        "Tool",
        "HDFS",
        "MapReduce",
        "PIG",
        "HBASE",
        "Maven",
        "archetypes",
        "Rest",
        "webservices",
        "message",
        "transformation",
        "NoSQL",
        "BigData",
        "technologies",
        "MongoDB",
        "Cassandra",
        "Hadoop",
        "backend",
        "Groovy",
        "Grails",
        "Value",
        "Object",
        "DAO",
        "design",
        "strategies",
        "Faade",
        "pattern",
        "proxy",
        "command",
        "pattern",
        "resources",
        "batch",
        "logs",
        "Shell",
        "Script",
        "data",
        "database",
        "Java",
        "Lambda",
        "expressions",
        "interfaces",
        "EJBs",
        "session",
        "bean",
        "session",
        "REST",
        "services",
        "adapter",
        "classes",
        "frontend",
        "end",
        "testing",
        "forms",
        "database",
        "J2EE",
        "Application",
        "Archives",
        "Jar",
        "War",
        "Ear",
        "Tomcat",
        "5X",
        "Database",
        "Sybase",
        "Oracle",
        "Tortoise",
        "SVN",
        "Source",
        "Control",
        "Tool",
        "userfacing",
        "features",
        "Reactjs",
        "Replaced",
        "Angular",
        "JS",
        "code",
        "Angular2",
        "code",
        "number",
        "lines",
        "code",
        "web",
        "application",
        "performance",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "application",
        "level",
        "persistence",
        "Hibernate",
        "Spring",
        "Configured",
        "Struts",
        "Hibernate",
        "framework",
        "Spring",
        "MVC",
        "Deployed",
        "Spring",
        "Boot",
        "Micro",
        "Services",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "AWS",
        "admin",
        "console",
        "application",
        "Struts",
        "Framework",
        "MVC",
        "design",
        "pattern",
        "Creation",
        "REST",
        "Web",
        "Services",
        "management",
        "data",
        "Apache",
        "CXF",
        "Configure",
        "MongoDB",
        "instances",
        "replica",
        "Development",
        "AJAX",
        "toolkit",
        "applications",
        "JSON",
        "Wrote",
        "server",
        "side",
        "request",
        "handling",
        "test",
        "cases",
        "UI",
        "functionality",
        "Nodejs",
        "JavaScript",
        "Wrote",
        "Restful",
        "Web",
        "Services",
        "Mongo",
        "DB",
        "CRUD",
        "operations",
        "Mongo",
        "DB",
        "web",
        "services",
        "Implementation",
        "Business",
        "logic",
        "layer",
        "Mongo",
        "DB",
        "Services",
        "Databases",
        "Cassandra",
        "Java",
        "API",
        "Cassandra",
        "Cluster",
        "AJAX",
        "JavaScript",
        "components",
        "JSP",
        "pages",
        "user",
        "interface",
        "JSP",
        "AJAX",
        "JSP",
        "Tag",
        "libraries",
        "Struts",
        "Tag",
        "complexities",
        "application",
        "MAVEN",
        "project",
        "WAR",
        "EAR",
        "files",
        "SVN",
        "version",
        "data",
        "processing",
        "Apache",
        "Spark",
        "Apache",
        "Kafka",
        "Zookeeper",
        "Scala",
        "JUnit",
        "Testing",
        "modules",
        "Test",
        "Cases",
        "Configured",
        "Maven",
        "dependencies",
        "application",
        "building",
        "Environment",
        "Java",
        "J2EE",
        "JSTL",
        "JSF",
        "XML",
        "CSS",
        "Spring",
        "Hibernate",
        "Struts",
        "WebLogic",
        "APACHE",
        "CXF",
        "REST",
        "JQuery",
        "AJAX",
        "ExtJS",
        "JavaScript",
        "JSP",
        "Junit",
        "Windows",
        "JMS",
        "Ant",
        "Maven",
        "GitHub",
        "Sr",
        "JavaFull",
        "Stack",
        "Developer",
        "Fidelity",
        "Investments",
        "September",
        "October",
        "Roles",
        "Responsibilities",
        "Java",
        "HTML",
        "JDBC",
        "JSP",
        "Ant",
        "JUnit",
        "XML",
        "JavaScript",
        "Strutslike",
        "system",
        "SQL",
        "PLSQL",
        "Sybase",
        "Setting",
        "JavaJ2EE",
        "development",
        "environment",
        "Eclipse",
        "Maven",
        "WebLogic",
        "Developed",
        "Tomcat",
        "WebLogic",
        "deployment",
        "tools",
        "Ant",
        "JUnit",
        "DB",
        "Unit",
        "Http",
        "Unit",
        "Visual",
        "Source",
        "Safe",
        "Scarab",
        "Built",
        "services",
        "Docker",
        "AWS",
        "Lambda",
        "Elastic",
        "Beanstalk",
        "developer",
        "MS",
        "Access",
        "application",
        "ColdFusion",
        "Responsible",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Delivery",
        "CD",
        "process",
        "implementation",
        "Jenkins",
        "UNIX",
        "Shell",
        "scripts",
        "jobs",
        "Rabbit",
        "MQ",
        "Java",
        "Messaging",
        "Service",
        "data",
        "applications",
        "Wrote",
        "SQL",
        "commands",
        "Procedures",
        "data",
        "SQL",
        "server",
        "database",
        "Hive",
        "queries",
        "Spark",
        "transformations",
        "Data",
        "frames",
        "Spark",
        "SQL",
        "SQL",
        "Context",
        "Scala",
        "Wrote",
        "Groovy",
        "scripts",
        "request",
        "security",
        "tests",
        "load",
        "tests",
        "Code",
        "development",
        "testing",
        "JBOSS",
        "ESB",
        "Enterprise",
        "Service",
        "Bus",
        "Maven",
        "Java",
        "Restful",
        "Web",
        "Services",
        "Implement",
        "JavaScriptjQuery",
        "frameworks",
        "Reactjs",
        "Nodejs",
        "MVWMVC",
        "framework",
        "AWS",
        "utilities",
        "EMR",
        "S3",
        "Cloud",
        "HadoopSpark",
        "jobs",
        "AWS",
        "NOSQL",
        "DB",
        "Mango",
        "DBCassandra",
        "messages",
        "High",
        "Availability",
        "Replication",
        "Load",
        "cluster",
        "MongoDB",
        "TBs",
        "data",
        "data",
        "Spark",
        "Kafka",
        "Consumer",
        "group",
        "Spark",
        "Streaming",
        "APIs",
        "MVC",
        "Structure",
        "page",
        "Application",
        "server",
        "AWS",
        "services",
        "environment",
        "Maven",
        "project",
        "management",
        "tool",
        "build",
        "deployment",
        "application",
        "business",
        "logic",
        "Server",
        "side",
        "Core",
        "Java",
        "Java",
        "EE",
        "Architecture",
        "Spark",
        "Scala",
        "concept",
        "RDD",
        "PRDD",
        "Data",
        "Frames",
        "Spark",
        "context",
        "Camel",
        "services",
        "micro",
        "services",
        "Rabbit",
        "MQ",
        "exchanges",
        "Docker",
        "Services",
        "APIs",
        "EC2",
        "instances",
        "Selenium",
        "IDE",
        "test",
        "routines",
        "User",
        "Interface",
        "Testing",
        "webframework",
        "applications",
        "Spark",
        "Scala",
        "Spark",
        "SQL",
        "testing",
        "processing",
        "data",
        "data",
        "sources",
        "NoSQL",
        "database",
        "Cassandra",
        "efficiency",
        "response",
        "request",
        "UI",
        "pages",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Angular",
        "JS",
        "MongoDB",
        "CRUD",
        "Operations",
        "OOP",
        "Principles",
        "application",
        "architecture",
        "MAVEN",
        "dependencies",
        "plugins",
        "application",
        "enterprise",
        "Java",
        "applications",
        "POJOs",
        "frameworks",
        "Spring",
        "Hibernate",
        "API",
        "Amazon",
        "EC2",
        "cloud",
        "architecture",
        "AWS",
        "machine",
        "Images",
        "Rabbit",
        "MQ",
        "exchange",
        "information",
        "business",
        "applications",
        "RFP",
        "Request",
        "Proposal",
        "Microservice",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Web",
        "sockets",
        "Nodejs",
        "time",
        "support",
        "Matrix",
        "Portal",
        "table",
        "architecture",
        "DAO",
        "layer",
        "Cassandra",
        "NoSQL",
        "database",
        "user",
        "interface",
        "JSP",
        "JSP",
        "Tag",
        "JSTL",
        "HTML",
        "CSS",
        "JavaScript",
        "complexities",
        "application",
        "POCs",
        "interface",
        "Backend",
        "Frontend",
        "MONGODB",
        "Express",
        "JS",
        "AngularJs",
        "Nodejs",
        "Experience",
        "Agile",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Waterfall",
        "methodologies",
        "Development",
        "frontend",
        "Client",
        "side",
        "JSP",
        "CSS",
        "JQuery",
        "JavaScript",
        "Development",
        "Server",
        "side",
        "Core",
        "Java",
        "Java",
        "EE",
        "Persisted",
        "data",
        "database",
        "Hibernate",
        "SQL",
        "Server",
        "Apache",
        "Kafka",
        "lowlatency",
        "platform",
        "data",
        "streaming",
        "tool",
        "Kafka",
        "data",
        "Hadoop",
        "File",
        "system",
        "data",
        "Cassandra",
        "NoSQL",
        "database",
        "data",
        "platform",
        "data",
        "sources",
        "Kafka",
        "Java",
        "Producers",
        "consumers",
        "intranet",
        "applications",
        "catalog",
        "maintenance",
        "EJB3",
        "JPA",
        "Servlet",
        "AJAX",
        "JSF",
        "Prime",
        "technologies",
        "JBoss",
        "Application",
        "server",
        "custom",
        "user",
        "functions",
        "Python",
        "language",
        "Pig",
        "Worked",
        "installation",
        "configuration",
        "Hadoop",
        "Clusters",
        "Apache",
        "Cloudera",
        "Maven",
        "Jenkins",
        "build",
        "process",
        "framework",
        "MVC",
        "modules",
        "controllers",
        "custom",
        "directives",
        "custom",
        "filters",
        "Wrote",
        "services",
        "user",
        "data",
        "MongoDB",
        "application",
        "device",
        "SQL",
        "Server",
        "Database",
        "Stored",
        "Procedures",
        "Kafka",
        "consumers",
        "data",
        "partitions",
        "Nodejs",
        "backend",
        "MONGODB",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Scala",
        "SPA",
        "Single",
        "Page",
        "Web",
        "Applications",
        "RESTFUL",
        "web",
        "services",
        "Ajax",
        "Angular",
        "JS",
        "MVC",
        "pattern",
        "GUI",
        "development",
        "JSF",
        "JSF",
        "lifecycle",
        "Servlets",
        "JSPs",
        "reporting",
        "Business",
        "Objects",
        "Environment",
        "Java",
        "Java",
        "2EETomcat",
        "Oracle",
        "SQL",
        "server",
        "JSP",
        "JSF",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "JQuery",
        "Ajax",
        "Spring",
        "Hibernate",
        "WebLogic",
        "JBoss",
        "SVN",
        "NetBeans",
        "Subversion",
        "MS",
        "Visio",
        "Wamp",
        "Sr",
        "Java",
        "Developer",
        "Cigna",
        "East",
        "Hanover",
        "NJ",
        "February",
        "August",
        "Roles",
        "Responsibilities",
        "JSP",
        "JSF",
        "components",
        "JSTL",
        "Tag",
        "library",
        "Core",
        "Logic",
        "Nested",
        "Beans",
        "Html",
        "TagLibs",
        "web",
        "pages",
        "WebLogic",
        "application",
        "stubs",
        "Web",
        "services",
        "Angular",
        "advantage",
        "way",
        "data",
        "templates",
        "defects",
        "Selenium",
        "business",
        "processes",
        "results",
        "production",
        "release",
        "Developed",
        "Ruby",
        "Rails",
        "web",
        "applications",
        "MongoDB",
        "background",
        "processes",
        "Resque",
        "Redis",
        "Designed",
        "session",
        "module",
        "J2EE",
        "fusion",
        "application",
        "build",
        "scripts",
        "Maven",
        "GIT",
        "technology",
        "version",
        "control",
        "CQL",
        "Cassandra",
        "Query",
        "Language",
        "data",
        "Cassandra",
        "database",
        "NoSQL",
        "databases",
        "HBase",
        "Mongo",
        "DB",
        "Cassandra",
        "Restful",
        "Web",
        "Services",
        "application",
        "servers",
        "Python",
        "custom",
        "user",
        "functions",
        "Python",
        "language",
        "Pig",
        "Managed",
        "application",
        "deployment",
        "Python",
        "Used",
        "Perl",
        "Scripting",
        "language",
        "serverside",
        "scripting",
        "web",
        "pages",
        "Python",
        "Python",
        "mod_python",
        "Python",
        "user",
        "experience",
        "web",
        "features",
        "MVC",
        "Framework",
        "Backbonejs",
        "Solr",
        "top",
        "Cassandra",
        "results",
        "tests",
        "Java",
        "Script",
        "Froglogics",
        "Squish",
        "Smart",
        "Bears",
        "Test",
        "Complete",
        "client",
        "applications",
        "Java",
        "Selenium",
        "web",
        "application",
        "testing",
        "components",
        "ngclick",
        "ngrepeat",
        "ngmodel",
        "EJB",
        "SessionEntity",
        "Transaction",
        "Management",
        "application",
        "client",
        "GUI",
        "modules",
        "Swing",
        "Java",
        "script",
        "Flash",
        "JUnit",
        "application",
        "Maven",
        "Projects",
        "Creation",
        "Tastypie",
        "module",
        "Nodejs",
        "REST",
        "APIs",
        "Web",
        "pages",
        "JavaScript",
        "AngularJs",
        "JSP",
        "Views",
        "Actions",
        "tasks",
        "session",
        "beans",
        "Struts",
        "Framework",
        "frontend",
        "application",
        "Spring",
        "tier",
        "application",
        "Struts",
        "Tiles",
        "look",
        "web",
        "application",
        "Web",
        "Services",
        "Java",
        "API",
        "XML",
        "Services",
        "JAXWS",
        "building",
        "Web",
        "APIs",
        "Services",
        "server",
        "database",
        "data",
        "information",
        "Nodejs",
        "MONGODB",
        "Wrote",
        "PLSQL",
        "statements",
        "need",
        "Oracle",
        "g",
        "database",
        "client",
        "server",
        "application",
        "Struts",
        "Framework",
        "Oracle",
        "backend",
        "Database",
        "relation",
        "beans",
        "Hibernate",
        "components",
        "Spring",
        "AOP",
        "IOC",
        "framework",
        "Environment",
        "Java",
        "Struts",
        "Framework",
        "Oracle",
        "HTML",
        "PLSQL",
        "JDBC",
        "procedures",
        "Web",
        "Logic",
        "Application",
        "Server",
        "Hibernate",
        "Ant",
        "JAX",
        "WS",
        "Web",
        "Services",
        "WSDL",
        "EJB",
        "Java",
        "Developer",
        "Syntel",
        "July",
        "January",
        "Roles",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "prototype",
        "application",
        "business",
        "users",
        "application",
        "functionality",
        "end",
        "application",
        "HTML",
        "CSS",
        "backbonejs",
        "JavaScript",
        "jQuery",
        "framework",
        "data",
        "backend",
        "model",
        "UI",
        "user",
        "documentation",
        "screenshots",
        "UAT",
        "User",
        "Acceptance",
        "testing",
        "Rest",
        "web",
        "services",
        "JAXRS",
        "Jersey",
        "providers",
        "UI",
        "Angularjs",
        "Nodejs",
        "Developed",
        "MVC",
        "Architectural",
        "Pattern",
        "Struts",
        "Framework",
        "JSP",
        "Servlets",
        "EJB",
        "Form",
        "Bean",
        "Action",
        "classes",
        "MVC",
        "JavaScript",
        "frameworks",
        "Backbonejs",
        "Angularjs",
        "Nodejs",
        "Developed",
        "Interfaces",
        "Swing",
        "web",
        "layer",
        "Spring",
        "MVC",
        "framework",
        "code",
        "generation",
        "framework",
        "Java",
        "Swing",
        "code",
        "XML",
        "Developed",
        "Web",
        "Services",
        "Java",
        "REST",
        "interfaces",
        "Java",
        "Developed",
        "Action",
        "Forms",
        "Action",
        "Classes",
        "Struts",
        "frame",
        "Developed",
        "Web",
        "API",
        "NodeJS",
        "load",
        "API",
        "instances",
        "Struts",
        "Action",
        "classes",
        "Struts",
        "controller",
        "component",
        "Developed",
        "Web",
        "services",
        "SOAP",
        "WSDL",
        "Apache",
        "Axis",
        "components",
        "Integrated",
        "Spring",
        "DAO",
        "data",
        "access",
        "Hibernate",
        "HQL",
        "SQL",
        "databases",
        "EJBs",
        "Session",
        "beans",
        "business",
        "logic",
        "parsers",
        "SAX",
        "DOM",
        "xml",
        "documents",
        "XML",
        "transformations",
        "XSLT",
        "Wrote",
        "procedures",
        "triggers",
        "cursors",
        "Oracle",
        "PLSQL",
        "web",
        "pages",
        "HTML",
        "JSP",
        "JavaScript",
        "CSS",
        "Wrote",
        "JUnit",
        "Test",
        "cases",
        "unit",
        "testing",
        "ANT",
        "build",
        "scripts",
        "compile",
        "application",
        "Jira",
        "bug",
        "tracking",
        "project",
        "management",
        "Environment",
        "Java",
        "JSP",
        "JDBC",
        "Struts",
        "Hibernate",
        "Design",
        "Patterns",
        "XML",
        "PLSQL",
        "Developer",
        "WebLogic",
        "Apache",
        "Axis",
        "ANT",
        "ClearCase",
        "JUnit",
        "Web",
        "services",
        "SOAP",
        "XSLT",
        "Jira",
        "Education",
        "Bachelors",
        "Skills",
        "Api",
        "years",
        "Java",
        "years",
        "Javascript",
        "years",
        "Jsp",
        "years",
        "Model",
        "view",
        "controller",
        "years",
        "Node",
        "React",
        "Angular",
        "Jquery",
        "Nodejs"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:11:10.448479",
    "resume_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer ChickfilA Atlanta GA Authorized to work in the US for any employer Work Experience Sr Java Full Stack Developer ChickfilA Atlanta GA November 2015 to Present Roles Responsibilities Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Developed Restful web services using Apache Camel Spring Boot and configured Kibana as a visualization dashboard Participated in code review and mentoring sessions and used GIT as version control and GIT Bash for GIT interactions Worked on Active MQ Messaging Service for Integration Worked on migration Microsoft azure service to AWS service for a project Moved the project to Java 8 to extensively use Lambda expressions and have better connectivity to Cloud in addition adding Spring Boot Libraries and UI Enhancement Used AWS to deploy the project on EC2 instance Implementation of the Business logic layer for MongoDB Services End to End Integration development from JIRA to Service Now using Restful calls using C JAVA Groovy Developed a shell script which picks up and changes the server commands for various other scripts to identify the java 18 version Recommended and developed strategy for integrating internal security model into new projects with Spring Security and Spring Boot Created RFP Request for Proposal Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Implemented RESTful web services using spring framework on backend and Hibernate framework for ORM Microsoft Azure for authentication and authorization Involved in converting HiveSQL queries into Spark transformations using Spark SQL Python and Scala Instructed teams on best practices around PCF and Spring Boot Developed different swings component for user interfaces Developed Reporting Dashboard which will generate reports and reduce manual intervention for support activities Developed with Spring MVC Core Java and Sybase Configured Docker containers and Kubernetes to manage dozens of micro services Implemented client side interface using Reactjs flux pattern and Redux framework for SPA Worked in configuration of APACHE CAMEL and executing routes integrating applications using Red Hat JBoss Fuse Developed RESTful services or API in IIB using Java JCN to integrate with LDAP for user registration login and resetchange password functionalities Worked on various Application Servers and Web Servers IBM WebSphere Application Server WebLogic JBoss and Tomcat8 Wrote effective JavaScript code for ReactJS and NodeJS applications for interacting with server and network applications Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate spring framework Worked with Apache Storm to create and modified Storms Topologies to consume messages from the active MQ and persist data into the database HBase and HDFS Loading data into Spark RDD and do in memory data Computation to generate the Output response Developed a MEAN Stack Application Using Mongo DB Express JS Angular JS and Node JS as well as created web applications prototype using Angular JS Node JS Used BackboneJS for the functionality and structure Developed core component of Analytics with Nodejs Backbonejs and Requirejs Design investigation and implementation of public facing websites on Amazon Web Services AWS Utilized IBM WebSphereRAD for development of messaging and web services Developed and deployed the code in server JBOSS 6x of Red Hat IDE Used GitHub extensively as versioning tool and used Maven for automated building of project Worked with web designers to develop user interfaces and prototypes for a webbased internal system Developed the application as Single Page Application SPA using Angular2 MVC Used Java 8 features in developing the code like Lambda expressions creating resource classes fetching documents from database Built application logic using Python Performed advanced procedures like text analytics and processing using the inmemory computing capabilities of Spark using Scala Implementing responsive ReactJS components for different solutions and performing the server side validations using NodeJS framework Used the following tools everyday BashZsh GIT Docker Postgres SQL Server JQ Jira VIM and JetBrains Used Microsoft Azure for role based access for authentication and authorization purpose Perform data analytics and load data to Amazon s3data lakeSpark cluster Developed application integration components using Apache camel components Installed configured and updated Linux machines with Red Hat Used Nodejs for the management on interchange of the data between the servers Used NodeJS and ExpressJS to create serverside MVC framework with MongoDB Used session handlers from Expressjs and Nodejs to handle user login and cookies to provide authentication Deployed containers and Micro services in AWS using EC2 Container Services Extensively worked on Hadoop Development Tool such as HDFS MapReduce PIG HBASE etc Created Maven archetypes for generating fully functional Rest webservices supporting JSON message transformation Worked with NoSQL and BigData technologies such as MongoDB Cassandra and Hadoop Worked on the backend using Groovy and Grails Value Object and DAO Used different design strategies like Faade pattern proxy command pattern to efficiently use resources Fixing the batch logs using Shell Script and retrieving the data from database Used Java 18 Lambda expressions and functional interfaces wherever possible Implemented EJBs session bean to maintain mobile session Developed REST services to talk with adapter classes and exposed them to the AngularJs frontend Involved in back end testing where the forms were loaded into the database and also experienced in building and deploying J2EE Application Archives Jar War and Ear on Tomcat 5X Database is built using Sybase and Oracle and also used Tortoise SVN as Source Control Tool Developed new userfacing features using Reactjs Replaced existed Angular JS code with Angular2 code which decreased number of lines of code for a web application which increased performance Used AWS Lambda to manage the servers and run the code in the AWS Implemented application level persistence using Hibernate and Spring Configured Struts Hibernate framework with Spring MVC Deployed Spring Boot based Micro Services Docker container using Amazon EC2 container services and using AWS admin console Developed the application using Struts Framework which is based on the MVC design pattern Creation of REST Web Services for the management of data using Apache CXF Configure and monitor numerous MongoDB instances and replica sets Development of AJAX toolkit based applications using JSON Wrote server side request handling and automated functional test cases to validate UI functionality using Nodejs JavaScript Wrote Restful Web Services to communicate with Mongo DB and performed CRUD operations on Mongo DB using restful web services Implementation of the Business logic layer for Mongo DB Services Worked on Databases Cassandra Java API to interact with the Cassandra Cluster Involved in adding AJAX JavaScript components to some of the JSP pages wherever needed Developed user interface using JSP AJAX JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Used MAVEN to build the project into WAR and EAR files and SVN for version controlling Worked on realtime data processing using Apache Spark Apache Kafka Zookeeper and Scala Involved in JUnit Testing of various modules by generating the Test Cases Configured Maven dependencies for application building processes Environment Java 8 J2EE JSTL JSF XML CSS Spring Hibernate Struts WebLogic APACHE CXF and REST JQuery AJAX ExtJS JavaScript JSP Junit Windows JMS Ant Maven GitHub Sr JavaFull Stack Developer Fidelity Investments September 2013 to October 2015 Roles Responsibilities Used Java HTML JDBC JSP Ant JUnit XML JavaScript and a proprietary Strutslike system Worked extensively with writing SQL and PLSQL using Sybase Setting up JavaJ2EE development environment using Eclipse Maven and WebLogic Developed on Tomcat for a WebLogic deployment tools included Ant JUnit DB Unit Http Unit Visual Source Safe and Scarab Built micro services using Docker AWS Lambda and Elastic Beanstalk Involved to work with another developer to migrate an existing MS Access application to ColdFusion Responsible for Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with UNIX Shell scripts to automate routine jobs Used Rabbit MQ as Java Messaging Service for producing and consuming data between applications Wrote SQL commands and Stored Procedures to retrieve data from SQL server database Involved in migrating Hive queries into Spark transformations using Data frames Spark SQL SQL Context and Scala Wrote Groovy scripts to automate request chaining security tests and load tests Involved into Code development and testing using JBOSS ESB Enterprise Service Bus Maven Java 17 Restful Web Services Implement the JavaScriptjQuery frameworks such as Reactjs Nodejs for MVWMVC framework Very capable at using AWS utilities such as EMR S3 and Cloud watch to run and monitor HadoopSpark jobs on AWS Implemented NOSQL DB Mango DBCassandra to store poisoned messages Configuring implementing and supporting High Availability Replication with Load balancing sharing cluster of MongoDB having TBs of data Imported the data into Spark from Kafka Consumer group using Spark Streaming APIs Followed MVC Structure and used AngularJS to develop Single page Application Migrated the server using the AWS services to a cloud environment Used Maven project management tool for build and deployment of the application Implemented business logic at Server side in Core Java and Java EE Architecture Worked on Spark and Scala and used the concept of RDD PRDD and Data Frames in different Spark context Utilized Camel to integrate micro services with other micro services and Rabbit MQ messaging exchanges Used Docker to containerize the Services and APIs to run on EC2 instances Designed Selenium IDE test routines for User Interface Testing of webframework and applications Implemented Spark using Scala and Spark SQL for faster testing and processing of data responsible to manage data from different sources Used NoSQL database Cassandra for having high efficiency and good response for the request Involved in developing the UI pages using HTML CSS JavaScript jQuery Bootstrap and Angular JS Optimizing MongoDB CRUD Operations Using OOP Principles SOLID to satisfy the different application needs within a centralized and manageable architecture Used MAVEN to define the dependencies plugins and build the application Built enterprise Java applications using POJOs and lightweight frameworks such as Spring and Hibernate Developed API to Integrate with Amazon EC2 cloud based architecture in AWS including creating machine Images Used Rabbit MQ for reliable and asynchronous exchange of important information between multiple business applications Created RFP Request for Proposal Microservice to provide RESTful API utilizing Spring Boot with Spring MVC Utilized Web sockets and Nodejs to provide real time support for the Matrix Portal Designed table architecture and developed DAO layer using Cassandra NoSQL database Developed user interface using JSP JSP Tag libraries JSTL HTML CSS JavaScript to simplify the complexities of the application Developed multiple POCs to create an interface between Backend to Frontend by using MONGODB Express JS AngularJs and Nodejs Experience in Agile Test Driven Development TDD and Waterfall methodologies Development of frontend Client side using JSP CSS JQuery JavaScript Development of backend Server side using Core Java and Java EE Persisted data from database leveraging Hibernate and SQL Server 2008 Implemented Apache Kafka to provide a unified highthroughput lowlatency platform for handling realtime data feeds Used the most popular streaming tool Kafka to load the data on Hadoop File system and move the same data to Cassandra NoSQL database Implemented unified data platform to gather data from different sources using Kafka Java Producers and consumers Designed Developed intranet applications for catalog maintenance using EJB3 JPA Servlet AJAX JSF Prime Faces 3x technologies hosted on JBoss Application server Created custom user defined functions in Python language for Pig Worked on installation configuration supporting and managing Hadoop Clusters using Apache and Cloudera Used Maven and Jenkins to automate the build and deploy process Built AngularJs framework including MVC architectures different modules specific controllers templates custom directives and custom filters Wrote services to store and retrieve user data from the MongoDB for the application on device Designed and created SQL Server Database Stored Procedures Implemented Kafka Simple consumers to get data from specific partitions Communicating with a Nodejs backend under MONGODB Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Scala Involved in SPA Single Page Web Applications using RESTFUL web services plus Ajax and Angular JS Used MVC pattern for GUI development in JSF and worked closely with JSF lifecycle Servlets and JSPs are used for realtime reporting which is too complex to be handled by the Business Objects Environment Java Java 2EETomcat Oracle SQL server JSP JSF HTML CSS JavaScript JSON JQuery Ajax Spring Hibernate WebLogic JBoss SVN NetBeans Subversion MS Visio Wamp Sr Java Developer Cigna East Hanover NJ February 2012 to August 2013 Roles Responsibilities Involved in writing JSP and JSF components Used JSTL Tag library Core Logic Nested Beans and Html TagLibs to create standard dynamic web pages Used WebLogic to build and deploy the application Created stubs to consume Web services Implemented with Angular using its advantage including two way data binding and templates Identified the defects through Selenium and ensured that business processes deliver the expected results and remain reliable throughout the production release Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis Designed and developed the session module using J2EE for existing cold fusion application Implemented build scripts using Maven and GIT technology for version control Used CQL Cassandra Query Language to read from and write data into Cassandra database Worked on NoSQL databases including HBase Mongo DB and Cassandra Worked on creating and consuming Restful Web Services Designed and developed backend application servers using Python Created custom user defined functions in Python language for Pig Managed application deployment using Python Used Perl as a Scripting language for serverside scripting of web pages Upgraded Python 23 to Python 25 this required recompiling mod_python to use Python 25 Enhanced user experience by designing new web features using MVC Framework like Backbonejs and nodejs Used Solr queries on top of Cassandra to fetch the results Automated tests were coded in Java Script with Froglogics Squish or Smart Bears Test Complete for client applications and coded in Java with Selenium for web application testing Extensively implemented AngularJS components ngclick ngrepeat ngmodel ngshow ngclude etc Involved in building EJB SessionEntity beans to maintain Transaction Management across the application Developed client GUI modules using Swing Java script and Flash Used JUnit for testing the application and Maven for building Projects Creation of a Tastypie like module for Nodejs REST APIs design Built Web pages that are more userinteractive using JavaScript and AngularJs Developed JSP Views Actions and delegating the tasks to corresponding session beans Working on Struts Framework for developing the frontend application and extensively Spring as middle tier for entire application Involved in working with Struts Tiles for the common look and feel for a web application Working on Web Services using Java API for XML Services JAXWS and supporting building deploying Web APIs Services Connected server and database to update data information with Nodejs and MONGODB Wrote PLSQL statements according to the need using Oracle 10g database Working on an internal webbased client server application built with Struts 2 Framework using Oracle backend Database working on establishing the relation for the different beans using the Hibernate Involved in writing various components using Spring AOP and IOC framework Environment Java Struts Framework Oracle HTML PLSQL JDBC Stored procedures Web Logic Application Server Hibernate Ant JAX WS Web Services WSDL EJB Java Developer Syntel IN July 2008 to January 2012 Roles Responsibilities Involved in various phases of Software Development Life Cycle SDLC of the application like Requirement gathering Design Analysis and Code development Developed a prototype of the application and demonstrated to business users to verify the application functionality Developing front end of application using HTML CSS backbonejs JavaScript jQuery Used AngularJs framework where data from backend is stored in model and populated it to UI Prepared user documentation with screenshots for UAT User Acceptance testing Worked on producingconsuming Rest based web services using JAXRS Jersey providers Developed the administrative UI using Angularjs and Nodejs Developed and implemented the MVC Architectural Pattern using Struts Framework including JSP Servlets EJB Form Bean and Action classes Worked on MVC JavaScript frameworks such as Backbonejs Angularjs and Nodejs Developed and designed Interfaces using Swing Developed the web layer using Spring MVC framework Worked on a code generation framework that generated Java Swing code from XML Developed Web Services in Java also designed and developed REST interfaces in Java Developed Action Forms and Action Classes in Struts frame work Developed Web API using NodeJS and hosted on multiple load balanced API instances Implemented Struts Action classes using Struts controller component Developed Web services SOAP through WSDL in Apache Axis to interact with other components Integrated Spring DAO for data access using Hibernate used HQL and SQL for querying databases Implemented EJBs Session beans for business logic Used parsers like SAX and DOM for parsing xml documents and used XML transformations using XSLT Wrote stored procedures triggers and cursors using Oracle PLSQL Created and deployed web pages using HTML JSP JavaScript and CSS Wrote JUnit Test cases for performing unit testing Used ANT automated build scripts to compile and package the application Used Jira for bug tracking and project management Environment Java JSP JDBC Struts Hibernate Design Patterns XML PLSQL Developer WebLogic Apache Axis ANT ClearCase JUnit Web services SOAP XSLT Jira Education Bachelors Skills Api 10 years Java 10 years Javascript 10 years Jsp 10 years Model view controller 10 years Node React Angular Jquery Nodejs",
    "unique_id": "f338b7d0-cf85-4f34-8fb7-04027a6413a7"
}