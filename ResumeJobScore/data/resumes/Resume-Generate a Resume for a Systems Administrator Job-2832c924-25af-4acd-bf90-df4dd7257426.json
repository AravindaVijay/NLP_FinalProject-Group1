{
    "clean_data": "Senior JavaJ2EE Developer Senior span lJavaspanJ2EE span lDeveloperspan Senior JavaJ2EE Developer Express Scripts Bloomington MN Work Experience Senior JavaJ2EE Developer Express Scripts Bloomington MN June 2018 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology SCRUM for developing application Application is implemented using agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Used tools including Web Storm Code Collaborator for code review Rally Agile software and GIT for version control Designed and developed application using various spring framework modules like Spring Core Spring AOP Spring IOC Spring MVC Spring Batch Spring JPA Spring Security and Spring Boot and did integration to Micro services into existing system architecture Utilized Java 18 features like Lambda expressions for collection evaluation and comparing the data Stream API for Bulk data operations on collection for effective sorting mechanisms and to change the sequential steam flow of thread while session establishment Installing and configuring MongoDB server on AWS E2 cluster Implemented multiple high performance Mongo DB replica test Design and implemented Nodejs APIs at peak Involved in developing various UI templates and controller using AngularJS with backend Express and Mongoose Involved in developing various UI templates and was extensively involved in developing the business logic layer Used AngularJS built in directives Controllers and Services and filter functionality to develop UI Proficient knowledge of AngularJS practices and commonly used modules based on extensive work experience Worked with geographically dispersed online team converting usersubmitted designs into AngularJS Identified usability and develop functional and smooth easytooperate and eyecatching web applications using AngularJS and ReactJS Developed new userfacing feature using ReactJS Used various validations that are provided as part of AngularJS application Developed JavaScript performance testing toolkit for web and AngularJS Application Used Amazon Cloud Watch to monitor AWS services and Amazon Cloud Watch logs to monitor applications Build the responsive UI screen for create a new customer process created bill to and ship to screens customer search results page and customer dashboard page using Bootstrap Involved in writing application level code to interact with APIS Web Services using AJAX JSON and building a head feature for zip code city and country and country look up using J Query Ajax and JQuery UI Successfully performed RESTFUL APIs integrating using XML and JSON Developed REST architecture based web services to facilitate communication between client and servers Build the UI part of the address verification service where users can select or ignore recommended address using JQuery Ajax and Bootstrap model Used Spring Security validation and wrote validation rules Implemented the authentication authorization and accesscontrol features by using Spring Security and OAuth Experienced in Standard authentication protocol OAuth 20 Used Spring AOP framework module to implement logging in the application to know the application status Involved in the integration of spring for implementing Dependency Injection DIIOC Developed code for obtaining bean references in Spring IOC framework Implemented SpringHibernates Data Access Layer Used Hibernate for accessing data from Oracle 10g database configured him access files for accessing Database Developed Hibernate and Springbased application configuration framework for simulating database configuration Used Maven for building and managing dependencies of the application Used SVN Subversion for version control Used Jenkins to automate builds and deployment Built and enhanced the deployment of production ready Kubernetes clusters into AWS Worked with automation deployment tool such as service Kubernetes which is used to deploy quickly and predictably Environment J2EE JSP JDK 16 Angular JS AGILE Methodology JavaScript Bootstrap JDK SVN Spring Boot Spring AOP Spring Batch Spring Security Spring OAuth REST Apache Camel Hibernate Kubernetes TDD Web Sphere Application Server Jenkins SVN Log4jGitJIRA BlueCross BlueShield Charlotte NC Jan 2016 May 2018 Role Senior Java Developer Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using AGILE methodology and used JIRA for tracking the Project Stories in AGILE Methodology Designed dynamic user interface pages using HTML5 bootstrap CSS3 JQuery Bootstrap SASS Typescript and AngularJS Developed various AJAX and JSON calls for the communication between the server and the UI Experience in writing Serverside coding using AngularJS and connected to Fire Developed various Angular directives such as Attribute and Structured Directives Query Params Pipes Filters and Services for building the functionality Integrated the dynamic pages with Angular and JQuery and created reusable components directives filters Developed Angular application using both template driven and data driven forms Implemented Spring Boot Dependency Injection DI Inversion of Control IOC and Aspect Oriented Programming AOP features along with hibernate for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Created Restful Web services using Jersey API JAXRS while data exchange was carried out between application and services using JSON Developed restful web service APIs using Spring Framework such as Spring Core Spring MVC Spring AOP and Java Persistence API Implemented persistence framework using Hibernate and handled Transaction Management using the provided data source Implemented Microservices using Pivotal Cloud foundry PCF platform build upon Spring Boot Services Consumed Web Services to interact with other external interfaces to exchange the data in the form of XML and by using SOAP Used Java Mailing Service JMS API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related issues Extensively used HQL and SQL for querying databases Developed the Mapping Resource Files for the database entities Packaged and deployed the application in IBM Web sphere Established Database Connectivity using Hibernate OR mapping with Spring ORM for MySQL Server Used IntelliJ as IDE to develop the application and followed the standard features for debugging and running Used log4J for application logging and notification tracing mechanisms Analysis and Bug fixing of the production problems and defects along with enhancements Used Maven as the build tool and JUnit for Testing and Ant Scripts Environment Agile Java J2EE HTML5 Java Script jQuery Ajax AngularJS Spring Micro services Spring MVC Hibernate Maven Rational Clear Case IBM Web Sphere Log4J MySQL Server Google cloud platform JIRA RMI IntelliJ IDE LINUX JavaJ2EE Developer JPMorgan Chase Columbus OH March 2014 to December 2015 Responsibilities Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC using agile development methodology Designed and developed GUI Screens for user interfaces using JSP JavaScript AJAX XML HTML and CSS Involved in implementation of clientside validations using JavaScript Developed in MVC through Struts and hibernate technologies Implemented different Design patterns like DAO Singleton Pattern and MVC architectural design pattern of spring Involved in writing Spring Configuration XML files that contains declarations and another dependent object declaration Developed and consumed REST Web services Used Postman and Advanced rest client to test web services Developed both XML and JSON request and responses using REST Extensively used XSD for validations of XML transfer to the different Web Services Writing SQL queries functions and procedures on Oracle database Implemented Unit Testing using JUnit and Integration Testing during the projects Implemented the business logic using JSP JSTL and Java Beans and service classes Developed JSP pages and Servlets for customer maintenance and use Angular JS Worked on JavaScript Libraries like JQuery and JSON Used Spring ORM module to integrate with Hibernate Environment Java 16 J2EE EJB JDBC JUnit XHTML ANT Oracle 10g SQL IBM RAD PLSQL Agile methodology SQL Server AJAX XML XSD JavaScript AngularJS BackboneJS CSS Struts Hibernate 30 Spring Java Developer HSBC Arlington Heights IL June 2012 to March 2014 Responsibilities Following Agile Methodology and Scrum Process for the Project Implementation Participating in Backlog grooming and Sprint Planning meetings to get requirements from the client and performing Technical Design Designed and developed Restful API utilizing spring framework Core Data Security AOP and MVC Used Lombok library to simplify the coding Used Liquibase for tracking managing and applying database schema changes Used Spring Data Hibernate with JPA for object relational mapping Used Spring Batch Processing for Batch Process Used spring boot to develop onetime migrations standalone projects Used JAXP and JAXWS for XML Parsing Used Rally for Sprint Planning and Bugs Tracking Used JQuery for front end Design Used AJAX JavaScript validations for clientside validation Used JBOSS Application Server 7 as Application Server Writing Stored Procedures Functions Packages Views Sequences and Triggers using PLSQLSQL Used SonarQube integrated with Jenkins and subversion for tracking Code violations and Code coverage Used DEVOPS tools Subversion Jenkins Nexus puppet cloud forms SonarQube and Splunk for continuous integration and deployments on to JBOSS EAP Servers Implemented Dynamic logging by using log4j Performed Unit testing using JUnit Mockito and Power mock Environment Java 18 J2EE Restful Web services Spring Boot AOP Core Data MVC Modules Hibernate REST Easy Eclipse XML XSD XSLT HTML DOJO 19 JSON SoapUI Pro50 JavaScript CSS jQuery JUnit AJAX SQL MySQL 57 H2 DB Liquibase Maven 40 Oracle11g Oracle JBOSS 7 JBOSS fuse with AMQs SVN and Jenkins Java Developer MOTIVE Austin TX December 2010 to May 2012 Responsibilities Designed and developed the application based on MVC framework Created HTML and CSS for Presentation Layer Developed in MVC through Struts and hibernate technologies Implemented different Design patterns like DAO Singleton Pattern and MVC architectural design pattern of spring Involved in writing Spring Configuration XML files that contains declarations and another dependent object declaration Involved in analyzing business requirements and compose them into a technical use cases Used JSON Object to interact between frontend and Business login Parsed the JSON Object To retrieve the Values Design and development of DB design and hierarchy Developed the logging framework based on Log4j Used Eclipse as IDE for development and unit testing Used SVN as repository to control versioning of projects Prepared documentation and participated in preparing users manual for the application Encryption and decryption scripts to protect Employee financial details in DB Environment Java 15 J2EE JDBC MySQL DB2 SQL Developer XML Log4j Tomcat 60 Eclipse Windows 7 Junior Java Developer Unilever IN March 2009 to November 2010 Responsibilities Analyzed and overviewed the database design for better understanding the relations associations and dependencies within the database Data modeling for client specific requirements Developed UNIX shell scripts that help as a scheduler for data load Created SQLLoader scripts to load data into the temporary staging tables Developed complex queries on Data Warehousing and developed PLSQL procedures to give in nice strategic plans to higher level of management Tuned complex Stored Procedures for faster execution and Developed database structures according to the requirements in Oracle data warehousing Used Dynamic SQL programming technique to build and process SQL statements on the fly at run time Developed PLSQL scripts for Data cleansing Made timely changes and fixes to all the modules on reported problems from the database administrator Used TOAD PLSQL developer tools for faster application development Performed SQL tuning using Explain Plan Hints and indexes Environment Oracle 9i PLSQL TOAD Windows 2005 server Education Bachelors in Information Technology in Information Technology National Institute of Technology Bachelors in Information Technology in Information Technology National Institute of Technology Skills Enterprise java beans Java Hibernate Spring Jboss Java message service Jsf Java server faces Java server pages Servlets Struts Database Sql server Mysql Oracle Sql Api Gradle Javascript Bootstrap JSP Java J2Ee J2Ee Additional Information TECHNICAL SKILLS Java EE components Java Server Pages Servlets Enterprise Java Beans Java Message Service Java Web frameworks Spring MVC Struts Hibernate Java Server Faces JSF Java Build Tools Maven Gradle Ant Java Application Containers Tomcat JBoss Jetty WebLogic WebSphere Java Testing Tools JUnit TestNG Spock Mockito Database Oracle SQL Server MySQL MongoDB Frontend Technologies HTML5 CSS3 XML JavaScript BOOTSTRAP JSON PHP and AJAX ORM Hibernate Java Persistence API JPA OpenJPA Version Control SVN GitHub CVS BitBucket JIRA Jenkins",
    "entities": [
        "Hibernate Environment Java 16 J2EE EJB JDBC JUnit",
        "Explain Plan Hints",
        "IDE",
        "MN",
        "Spring Micro",
        "JBOSS Application Server 7 as",
        "JQuery UI Successfully",
        "Rally Agile",
        "Controllers and Services",
        "AJAX JSON",
        "the Values Design",
        "Spring IOC",
        "CSS Struts Hibernate",
        "Present Responsibilities Involved",
        "IBM",
        "IDE LINUX JavaJ2EE Developer",
        "Attribute and Structured Directives Query Params Pipes Filters and Services",
        "Spring IOC framework",
        "Express",
        "XML",
        "SOAP",
        "Bootstrap Involved",
        "OAuth",
        "Encryption",
        "Jersey API JAXRS",
        "JAXWS",
        "Software Development Life Cycle SDLC",
        "JUnit",
        "JavaScript Libraries",
        "Stream API for Bulk",
        "Transaction Management",
        "MVC Spring AOP",
        "Amazon",
        "Standard",
        "Java Mailing Service JMS API",
        "Java Developer Responsibilities Involved",
        "Developed",
        "Created HTML",
        "NC",
        "Utilized",
        "Core Data Security AOP",
        "Servlets",
        "Triggers",
        "Technical Design Designed",
        "HTML5",
        "Java Server Pages Servlets",
        "AGILE",
        "Spring Security",
        "JSP",
        "Software Development Lifecycle",
        "Micro",
        "Built",
        "SonarQube",
        "Implemented Microservices",
        "Fire Developed",
        "Information Technology in Information Technology National Institute of Technology Skills",
        "Created SQLLoader",
        "Oracle 10",
        "MVC",
        "JavaJ2EE Developer Express",
        "GIT",
        "Hibernate Maven Rational Clear Case",
        "Oracle",
        "Spring AOP Created",
        "JUnit for Testing and Ant Scripts Environment Agile Java J2EE HTML5 Java Script jQuery Ajax",
        "GitHub CVS BitBucket JIRA Jenkins",
        "OAuth Experienced",
        "Established Database Connectivity using Hibernate",
        "Performed Unit",
        "RESTFUL",
        "Sprint Planning",
        "SQL",
        "UI Proficient",
        "AGILE Methodology",
        "Kubernetes",
        "Spring Boot Services Consumed Web Services",
        "DAO Singleton Pattern",
        "JPA Spring Security",
        "AWS E2",
        "Postman",
        "Serverside",
        "PCF",
        "Implemented SpringHibernates Data Access Layer Used Hibernate",
        "Build",
        "Maven",
        "APIS Web Services",
        "Developed the Mapping Resource Files",
        "Mongoose Involved",
        "UI",
        "Responsibilities Analyzed",
        "XSD",
        "Information Technology in Information Technology National Institute of Technology Bachelors",
        "SVN",
        "CSS",
        "Database Developed Hibernate",
        "BlueCross BlueShield Charlotte",
        "REST",
        "the Project Stories",
        "CSS Involved",
        "Data Warehousing",
        "SQL IBM",
        "Application",
        "TOAD",
        "JQuery",
        "Aspect Oriented Programming AOP"
    ],
    "experience": "Experience Senior JavaJ2EE Developer Express Scripts Bloomington MN June 2018 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology SCRUM for developing application Application is implemented using agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Used tools including Web Storm Code Collaborator for code review Rally Agile software and GIT for version control Designed and developed application using various spring framework modules like Spring Core Spring AOP Spring IOC Spring MVC Spring Batch Spring JPA Spring Security and Spring Boot and did integration to Micro services into existing system architecture Utilized Java 18 features like Lambda expressions for collection evaluation and comparing the data Stream API for Bulk data operations on collection for effective sorting mechanisms and to change the sequential steam flow of thread while session establishment Installing and configuring MongoDB server on AWS E2 cluster Implemented multiple high performance Mongo DB replica test Design and implemented Nodejs APIs at peak Involved in developing various UI templates and controller using AngularJS with backend Express and Mongoose Involved in developing various UI templates and was extensively involved in developing the business logic layer Used AngularJS built in directives Controllers and Services and filter functionality to develop UI Proficient knowledge of AngularJS practices and commonly used modules based on extensive work experience Worked with geographically dispersed online team converting usersubmitted designs into AngularJS Identified usability and develop functional and smooth easytooperate and eyecatching web applications using AngularJS and ReactJS Developed new userfacing feature using ReactJS Used various validations that are provided as part of AngularJS application Developed JavaScript performance testing toolkit for web and AngularJS Application Used Amazon Cloud Watch to monitor AWS services and Amazon Cloud Watch logs to monitor applications Build the responsive UI screen for create a new customer process created bill to and ship to screens customer search results page and customer dashboard page using Bootstrap Involved in writing application level code to interact with APIS Web Services using AJAX JSON and building a head feature for zip code city and country and country look up using J Query Ajax and JQuery UI Successfully performed RESTFUL APIs integrating using XML and JSON Developed REST architecture based web services to facilitate communication between client and servers Build the UI part of the address verification service where users can select or ignore recommended address using JQuery Ajax and Bootstrap model Used Spring Security validation and wrote validation rules Implemented the authentication authorization and accesscontrol features by using Spring Security and OAuth Experienced in Standard authentication protocol OAuth 20 Used Spring AOP framework module to implement logging in the application to know the application status Involved in the integration of spring for implementing Dependency Injection DIIOC Developed code for obtaining bean references in Spring IOC framework Implemented SpringHibernates Data Access Layer Used Hibernate for accessing data from Oracle 10 g database configured him access files for accessing Database Developed Hibernate and Springbased application configuration framework for simulating database configuration Used Maven for building and managing dependencies of the application Used SVN Subversion for version control Used Jenkins to automate builds and deployment Built and enhanced the deployment of production ready Kubernetes clusters into AWS Worked with automation deployment tool such as service Kubernetes which is used to deploy quickly and predictably Environment J2EE JSP JDK 16 Angular JS AGILE Methodology JavaScript Bootstrap JDK SVN Spring Boot Spring AOP Spring Batch Spring Security Spring OAuth REST Apache Camel Hibernate Kubernetes TDD Web Sphere Application Server Jenkins SVN Log4jGitJIRA BlueCross BlueShield Charlotte NC Jan 2016 May 2018 Role Senior Java Developer Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using AGILE methodology and used JIRA for tracking the Project Stories in AGILE Methodology Designed dynamic user interface pages using HTML5 bootstrap CSS3 JQuery Bootstrap SASS Typescript and AngularJS Developed various AJAX and JSON calls for the communication between the server and the UI Experience in writing Serverside coding using AngularJS and connected to Fire Developed various Angular directives such as Attribute and Structured Directives Query Params Pipes Filters and Services for building the functionality Integrated the dynamic pages with Angular and JQuery and created reusable components directives filters Developed Angular application using both template driven and data driven forms Implemented Spring Boot Dependency Injection DI Inversion of Control IOC and Aspect Oriented Programming AOP features along with hibernate for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Created Restful Web services using Jersey API JAXRS while data exchange was carried out between application and services using JSON Developed restful web service APIs using Spring Framework such as Spring Core Spring MVC Spring AOP and Java Persistence API Implemented persistence framework using Hibernate and handled Transaction Management using the provided data source Implemented Microservices using Pivotal Cloud foundry PCF platform build upon Spring Boot Services Consumed Web Services to interact with other external interfaces to exchange the data in the form of XML and by using SOAP Used Java Mailing Service JMS API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related issues Extensively used HQL and SQL for querying databases Developed the Mapping Resource Files for the database entities Packaged and deployed the application in IBM Web sphere Established Database Connectivity using Hibernate OR mapping with Spring ORM for MySQL Server Used IntelliJ as IDE to develop the application and followed the standard features for debugging and running Used log4J for application logging and notification tracing mechanisms Analysis and Bug fixing of the production problems and defects along with enhancements Used Maven as the build tool and JUnit for Testing and Ant Scripts Environment Agile Java J2EE HTML5 Java Script jQuery Ajax AngularJS Spring Micro services Spring MVC Hibernate Maven Rational Clear Case IBM Web Sphere Log4J MySQL Server Google cloud platform JIRA RMI IntelliJ IDE LINUX JavaJ2EE Developer JPMorgan Chase Columbus OH March 2014 to December 2015 Responsibilities Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC using agile development methodology Designed and developed GUI Screens for user interfaces using JSP JavaScript AJAX XML HTML and CSS Involved in implementation of clientside validations using JavaScript Developed in MVC through Struts and hibernate technologies Implemented different Design patterns like DAO Singleton Pattern and MVC architectural design pattern of spring Involved in writing Spring Configuration XML files that contains declarations and another dependent object declaration Developed and consumed REST Web services Used Postman and Advanced rest client to test web services Developed both XML and JSON request and responses using REST Extensively used XSD for validations of XML transfer to the different Web Services Writing SQL queries functions and procedures on Oracle database Implemented Unit Testing using JUnit and Integration Testing during the projects Implemented the business logic using JSP JSTL and Java Beans and service classes Developed JSP pages and Servlets for customer maintenance and use Angular JS Worked on JavaScript Libraries like JQuery and JSON Used Spring ORM module to integrate with Hibernate Environment Java 16 J2EE EJB JDBC JUnit XHTML ANT Oracle 10 g SQL IBM RAD PLSQL Agile methodology SQL Server AJAX XML XSD JavaScript AngularJS BackboneJS CSS Struts Hibernate 30 Spring Java Developer HSBC Arlington Heights IL June 2012 to March 2014 Responsibilities Following Agile Methodology and Scrum Process for the Project Implementation Participating in Backlog grooming and Sprint Planning meetings to get requirements from the client and performing Technical Design Designed and developed Restful API utilizing spring framework Core Data Security AOP and MVC Used Lombok library to simplify the coding Used Liquibase for tracking managing and applying database schema changes Used Spring Data Hibernate with JPA for object relational mapping Used Spring Batch Processing for Batch Process Used spring boot to develop onetime migrations standalone projects Used JAXP and JAXWS for XML Parsing Used Rally for Sprint Planning and Bugs Tracking Used JQuery for front end Design Used AJAX JavaScript validations for clientside validation Used JBOSS Application Server 7 as Application Server Writing Stored Procedures Functions Packages Views Sequences and Triggers using PLSQLSQL Used SonarQube integrated with Jenkins and subversion for tracking Code violations and Code coverage Used DEVOPS tools Subversion Jenkins Nexus puppet cloud forms SonarQube and Splunk for continuous integration and deployments on to JBOSS EAP Servers Implemented Dynamic logging by using log4j Performed Unit testing using JUnit Mockito and Power mock Environment Java 18 J2EE Restful Web services Spring Boot AOP Core Data MVC Modules Hibernate REST Easy Eclipse XML XSD XSLT HTML DOJO 19 JSON SoapUI Pro50 JavaScript CSS jQuery JUnit AJAX SQL MySQL 57 H2 DB Liquibase Maven 40 Oracle11 g Oracle JBOSS 7 JBOSS fuse with AMQs SVN and Jenkins Java Developer MOTIVE Austin TX December 2010 to May 2012 Responsibilities Designed and developed the application based on MVC framework Created HTML and CSS for Presentation Layer Developed in MVC through Struts and hibernate technologies Implemented different Design patterns like DAO Singleton Pattern and MVC architectural design pattern of spring Involved in writing Spring Configuration XML files that contains declarations and another dependent object declaration Involved in analyzing business requirements and compose them into a technical use cases Used JSON Object to interact between frontend and Business login Parsed the JSON Object To retrieve the Values Design and development of DB design and hierarchy Developed the logging framework based on Log4j Used Eclipse as IDE for development and unit testing Used SVN as repository to control versioning of projects Prepared documentation and participated in preparing users manual for the application Encryption and decryption scripts to protect Employee financial details in DB Environment Java 15 J2EE JDBC MySQL DB2 SQL Developer XML Log4j Tomcat 60 Eclipse Windows 7 Junior Java Developer Unilever IN March 2009 to November 2010 Responsibilities Analyzed and overviewed the database design for better understanding the relations associations and dependencies within the database Data modeling for client specific requirements Developed UNIX shell scripts that help as a scheduler for data load Created SQLLoader scripts to load data into the temporary staging tables Developed complex queries on Data Warehousing and developed PLSQL procedures to give in nice strategic plans to higher level of management Tuned complex Stored Procedures for faster execution and Developed database structures according to the requirements in Oracle data warehousing Used Dynamic SQL programming technique to build and process SQL statements on the fly at run time Developed PLSQL scripts for Data cleansing Made timely changes and fixes to all the modules on reported problems from the database administrator Used TOAD PLSQL developer tools for faster application development Performed SQL tuning using Explain Plan Hints and indexes Environment Oracle 9i PLSQL TOAD Windows 2005 server Education Bachelors in Information Technology in Information Technology National Institute of Technology Bachelors in Information Technology in Information Technology National Institute of Technology Skills Enterprise java beans Java Hibernate Spring Jboss Java message service Jsf Java server faces Java server pages Servlets Struts Database Sql server Mysql Oracle Sql Api Gradle Javascript Bootstrap JSP Java J2Ee J2Ee Additional Information TECHNICAL SKILLS Java EE components Java Server Pages Servlets Enterprise Java Beans Java Message Service Java Web frameworks Spring MVC Struts Hibernate Java Server Faces JSF Java Build Tools Maven Gradle Ant Java Application Containers Tomcat JBoss Jetty WebLogic WebSphere Java Testing Tools JUnit TestNG Spock Mockito Database Oracle SQL Server MySQL MongoDB Frontend Technologies HTML5 CSS3 XML JavaScript BOOTSTRAP JSON PHP and AJAX ORM Hibernate Java Persistence API JPA OpenJPA Version Control SVN GitHub CVS BitBucket JIRA Jenkins",
    "extracted_keywords": [
        "JavaJ2EE",
        "Developer",
        "Senior",
        "span",
        "lJavaspanJ2EE",
        "span",
        "lDeveloperspan",
        "Senior",
        "JavaJ2EE",
        "Developer",
        "Express",
        "Scripts",
        "Bloomington",
        "MN",
        "Work",
        "Experience",
        "Senior",
        "JavaJ2EE",
        "Developer",
        "Express",
        "Scripts",
        "Bloomington",
        "MN",
        "June",
        "Present",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "Application",
        "methodology",
        "SCRUM",
        "meeting",
        "status",
        "issues",
        "tools",
        "Web",
        "Storm",
        "Code",
        "Collaborator",
        "code",
        "review",
        "Rally",
        "Agile",
        "software",
        "GIT",
        "version",
        "control",
        "application",
        "spring",
        "framework",
        "modules",
        "Spring",
        "Core",
        "Spring",
        "AOP",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "JPA",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "integration",
        "Micro",
        "services",
        "system",
        "architecture",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "collection",
        "evaluation",
        "data",
        "Stream",
        "API",
        "Bulk",
        "data",
        "operations",
        "collection",
        "mechanisms",
        "steam",
        "flow",
        "thread",
        "session",
        "establishment",
        "server",
        "AWS",
        "E2",
        "cluster",
        "performance",
        "Mongo",
        "DB",
        "replica",
        "test",
        "Design",
        "Nodejs",
        "APIs",
        "peak",
        "UI",
        "templates",
        "controller",
        "Express",
        "Mongoose",
        "UI",
        "templates",
        "business",
        "logic",
        "layer",
        "directives",
        "Controllers",
        "Services",
        "filter",
        "functionality",
        "UI",
        "knowledge",
        "practices",
        "modules",
        "work",
        "experience",
        "team",
        "designs",
        "usability",
        "easytooperate",
        "web",
        "applications",
        "AngularJS",
        "feature",
        "ReactJS",
        "validations",
        "part",
        "application",
        "Developed",
        "JavaScript",
        "performance",
        "testing",
        "toolkit",
        "web",
        "Application",
        "Amazon",
        "Cloud",
        "AWS",
        "services",
        "Amazon",
        "Cloud",
        "Watch",
        "applications",
        "UI",
        "screen",
        "customer",
        "process",
        "bill",
        "ship",
        "screens",
        "customer",
        "search",
        "results",
        "page",
        "customer",
        "dashboard",
        "page",
        "Bootstrap",
        "application",
        "level",
        "code",
        "APIS",
        "Web",
        "Services",
        "AJAX",
        "JSON",
        "head",
        "feature",
        "zip",
        "code",
        "city",
        "country",
        "country",
        "J",
        "Query",
        "Ajax",
        "JQuery",
        "UI",
        "RESTFUL",
        "APIs",
        "XML",
        "Developed",
        "REST",
        "architecture",
        "web",
        "services",
        "communication",
        "client",
        "servers",
        "UI",
        "part",
        "address",
        "verification",
        "service",
        "users",
        "address",
        "JQuery",
        "Ajax",
        "Bootstrap",
        "model",
        "Spring",
        "Security",
        "validation",
        "validation",
        "rules",
        "authentication",
        "authorization",
        "features",
        "Spring",
        "Security",
        "OAuth",
        "authentication",
        "protocol",
        "OAuth",
        "Spring",
        "AOP",
        "framework",
        "module",
        "application",
        "application",
        "status",
        "integration",
        "spring",
        "Dependency",
        "Injection",
        "DIIOC",
        "Developed",
        "code",
        "bean",
        "references",
        "Spring",
        "IOC",
        "framework",
        "SpringHibernates",
        "Data",
        "Access",
        "Layer",
        "Hibernate",
        "data",
        "Oracle",
        "g",
        "database",
        "files",
        "Database",
        "Developed",
        "Hibernate",
        "application",
        "configuration",
        "framework",
        "database",
        "configuration",
        "Maven",
        "dependencies",
        "application",
        "SVN",
        "Subversion",
        "version",
        "control",
        "Jenkins",
        "builds",
        "deployment",
        "deployment",
        "production",
        "Kubernetes",
        "clusters",
        "AWS",
        "automation",
        "deployment",
        "tool",
        "service",
        "Kubernetes",
        "Environment",
        "J2EE",
        "JSP",
        "JDK",
        "Angular",
        "JS",
        "AGILE",
        "Methodology",
        "JavaScript",
        "Bootstrap",
        "JDK",
        "SVN",
        "Spring",
        "Boot",
        "Spring",
        "AOP",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "OAuth",
        "REST",
        "Apache",
        "Camel",
        "Hibernate",
        "Kubernetes",
        "TDD",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Jenkins",
        "SVN",
        "Log4jGitJIRA",
        "BlueCross",
        "BlueShield",
        "Charlotte",
        "NC",
        "Jan",
        "May",
        "Role",
        "Senior",
        "Java",
        "Developer",
        "Responsibilities",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "application",
        "methodology",
        "JIRA",
        "Project",
        "Stories",
        "AGILE",
        "Methodology",
        "user",
        "interface",
        "pages",
        "HTML5",
        "bootstrap",
        "CSS3",
        "JQuery",
        "Bootstrap",
        "SASS",
        "Typescript",
        "AngularJS",
        "AJAX",
        "JSON",
        "communication",
        "server",
        "UI",
        "Experience",
        "Serverside",
        "Fire",
        "directives",
        "Attribute",
        "Structured",
        "Directives",
        "Query",
        "Params",
        "Pipes",
        "Filters",
        "Services",
        "functionality",
        "pages",
        "Angular",
        "JQuery",
        "components",
        "directives",
        "filters",
        "application",
        "template",
        "data",
        "forms",
        "Spring",
        "Boot",
        "Dependency",
        "Injection",
        "DI",
        "Inversion",
        "Control",
        "IOC",
        "Aspect",
        "Oriented",
        "Programming",
        "AOP",
        "hibernate",
        "presentation",
        "business",
        "logic",
        "coupling",
        "layers",
        "business",
        "layer",
        "services",
        "components",
        "Spring",
        "IOC",
        "cross",
        "concerns",
        "Logging",
        "User",
        "Interface",
        "exceptions",
        "Transactions",
        "Spring",
        "AOP",
        "Restful",
        "Web",
        "services",
        "Jersey",
        "API",
        "JAXRS",
        "data",
        "exchange",
        "application",
        "services",
        "JSON",
        "web",
        "service",
        "APIs",
        "Spring",
        "Framework",
        "Spring",
        "Core",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "Java",
        "Persistence",
        "API",
        "persistence",
        "framework",
        "Hibernate",
        "Transaction",
        "Management",
        "data",
        "source",
        "Microservices",
        "Cloud",
        "foundry",
        "PCF",
        "platform",
        "Spring",
        "Boot",
        "Services",
        "Consumed",
        "Web",
        "Services",
        "interfaces",
        "data",
        "form",
        "XML",
        "SOAP",
        "Used",
        "Java",
        "Mailing",
        "Service",
        "JMS",
        "API",
        "notifications",
        "success",
        "failure",
        "processes",
        "mail",
        "notifications",
        "system",
        "issues",
        "HQL",
        "SQL",
        "databases",
        "Mapping",
        "Resource",
        "Files",
        "database",
        "entities",
        "application",
        "IBM",
        "Web",
        "sphere",
        "Established",
        "Database",
        "Connectivity",
        "Hibernate",
        "mapping",
        "Spring",
        "ORM",
        "MySQL",
        "Server",
        "IntelliJ",
        "IDE",
        "application",
        "features",
        "log4J",
        "application",
        "logging",
        "notification",
        "tracing",
        "mechanisms",
        "Analysis",
        "Bug",
        "fixing",
        "production",
        "problems",
        "defects",
        "enhancements",
        "Maven",
        "build",
        "tool",
        "JUnit",
        "Testing",
        "Ant",
        "Scripts",
        "Environment",
        "Agile",
        "Java",
        "J2EE",
        "HTML5",
        "Java",
        "Script",
        "jQuery",
        "Ajax",
        "Spring",
        "Micro",
        "services",
        "Spring",
        "MVC",
        "Hibernate",
        "Maven",
        "Rational",
        "Clear",
        "Case",
        "IBM",
        "Web",
        "Sphere",
        "Log4J",
        "MySQL",
        "Server",
        "Google",
        "cloud",
        "platform",
        "JIRA",
        "RMI",
        "IntelliJ",
        "IDE",
        "LINUX",
        "JavaJ2EE",
        "Developer",
        "JPMorgan",
        "Chase",
        "Columbus",
        "OH",
        "March",
        "December",
        "Responsibilities",
        "analysis",
        "design",
        "development",
        "testing",
        "phases",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "development",
        "methodology",
        "GUI",
        "Screens",
        "user",
        "interfaces",
        "JSP",
        "JavaScript",
        "AJAX",
        "XML",
        "HTML",
        "CSS",
        "implementation",
        "validations",
        "JavaScript",
        "Developed",
        "MVC",
        "Struts",
        "hibernate",
        "technologies",
        "Design",
        "patterns",
        "DAO",
        "Singleton",
        "Pattern",
        "MVC",
        "design",
        "pattern",
        "spring",
        "Spring",
        "Configuration",
        "XML",
        "files",
        "declarations",
        "object",
        "declaration",
        "REST",
        "Web",
        "services",
        "Postman",
        "rest",
        "client",
        "web",
        "services",
        "XML",
        "request",
        "responses",
        "REST",
        "XSD",
        "validations",
        "XML",
        "transfer",
        "Web",
        "Services",
        "SQL",
        "functions",
        "procedures",
        "Oracle",
        "database",
        "Unit",
        "Testing",
        "JUnit",
        "Integration",
        "Testing",
        "projects",
        "business",
        "logic",
        "JSP",
        "JSTL",
        "Java",
        "Beans",
        "service",
        "classes",
        "JSP",
        "pages",
        "Servlets",
        "customer",
        "maintenance",
        "JS",
        "Worked",
        "JavaScript",
        "Libraries",
        "JQuery",
        "JSON",
        "Spring",
        "ORM",
        "module",
        "Hibernate",
        "Environment",
        "Java",
        "J2EE",
        "EJB",
        "JDBC",
        "JUnit",
        "XHTML",
        "ANT",
        "Oracle",
        "g",
        "SQL",
        "IBM",
        "RAD",
        "PLSQL",
        "methodology",
        "SQL",
        "Server",
        "AJAX",
        "XML",
        "XSD",
        "JavaScript",
        "CSS",
        "Struts",
        "Hibernate",
        "Spring",
        "Java",
        "Developer",
        "HSBC",
        "Arlington",
        "Heights",
        "IL",
        "June",
        "March",
        "Responsibilities",
        "Agile",
        "Methodology",
        "Scrum",
        "Process",
        "Project",
        "Implementation",
        "Backlog",
        "grooming",
        "Sprint",
        "Planning",
        "meetings",
        "requirements",
        "client",
        "Technical",
        "Design",
        "API",
        "spring",
        "framework",
        "Core",
        "Data",
        "Security",
        "AOP",
        "MVC",
        "Lombok",
        "library",
        "Liquibase",
        "database",
        "schema",
        "Spring",
        "Data",
        "Hibernate",
        "JPA",
        "mapping",
        "Spring",
        "Batch",
        "Processing",
        "Batch",
        "Process",
        "spring",
        "boot",
        "migrations",
        "standalone",
        "projects",
        "JAXP",
        "JAXWS",
        "XML",
        "Rally",
        "Sprint",
        "Planning",
        "Bugs",
        "Tracking",
        "JQuery",
        "end",
        "Design",
        "AJAX",
        "JavaScript",
        "validation",
        "JBOSS",
        "Application",
        "Server",
        "Application",
        "Server",
        "Writing",
        "Stored",
        "Procedures",
        "Functions",
        "Packages",
        "Views",
        "Sequences",
        "Triggers",
        "PLSQLSQL",
        "SonarQube",
        "Jenkins",
        "subversion",
        "Code",
        "violations",
        "Code",
        "coverage",
        "DEVOPS",
        "tools",
        "Subversion",
        "Jenkins",
        "Nexus",
        "puppet",
        "cloud",
        "SonarQube",
        "Splunk",
        "integration",
        "deployments",
        "JBOSS",
        "EAP",
        "Servers",
        "Dynamic",
        "logging",
        "log4j",
        "Performed",
        "Unit",
        "testing",
        "JUnit",
        "Mockito",
        "Power",
        "Environment",
        "Java",
        "J2EE",
        "Restful",
        "Web",
        "services",
        "Spring",
        "Boot",
        "AOP",
        "Core",
        "Data",
        "MVC",
        "Modules",
        "Hibernate",
        "REST",
        "Easy",
        "Eclipse",
        "XML",
        "XSD",
        "XSLT",
        "HTML",
        "DOJO",
        "JSON",
        "SoapUI",
        "Pro50",
        "JavaScript",
        "CSS",
        "jQuery",
        "JUnit",
        "AJAX",
        "SQL",
        "MySQL",
        "H2",
        "DB",
        "Liquibase",
        "Maven",
        "Oracle11",
        "g",
        "Oracle",
        "JBOSS",
        "JBOSS",
        "fuse",
        "AMQs",
        "SVN",
        "Jenkins",
        "Java",
        "Developer",
        "Austin",
        "TX",
        "December",
        "May",
        "Responsibilities",
        "application",
        "MVC",
        "framework",
        "Created",
        "HTML",
        "CSS",
        "Presentation",
        "Layer",
        "Developed",
        "MVC",
        "Struts",
        "hibernate",
        "technologies",
        "Design",
        "patterns",
        "DAO",
        "Singleton",
        "Pattern",
        "MVC",
        "design",
        "pattern",
        "spring",
        "Spring",
        "Configuration",
        "XML",
        "files",
        "declarations",
        "object",
        "declaration",
        "business",
        "requirements",
        "use",
        "cases",
        "JSON",
        "Object",
        "frontend",
        "Business",
        "login",
        "JSON",
        "Object",
        "Values",
        "Design",
        "development",
        "DB",
        "design",
        "hierarchy",
        "framework",
        "Log4j",
        "Eclipse",
        "IDE",
        "development",
        "unit",
        "testing",
        "SVN",
        "repository",
        "control",
        "versioning",
        "projects",
        "documentation",
        "users",
        "manual",
        "application",
        "Encryption",
        "decryption",
        "scripts",
        "Employee",
        "details",
        "DB",
        "Environment",
        "Java",
        "J2EE",
        "JDBC",
        "MySQL",
        "DB2",
        "SQL",
        "Developer",
        "XML",
        "Log4j",
        "Tomcat",
        "Eclipse",
        "Windows",
        "Junior",
        "Java",
        "Developer",
        "Unilever",
        "March",
        "November",
        "Responsibilities",
        "database",
        "design",
        "relations",
        "associations",
        "dependencies",
        "database",
        "Data",
        "client",
        "requirements",
        "UNIX",
        "shell",
        "scripts",
        "scheduler",
        "data",
        "load",
        "SQLLoader",
        "scripts",
        "data",
        "staging",
        "tables",
        "queries",
        "Data",
        "Warehousing",
        "PLSQL",
        "procedures",
        "plans",
        "level",
        "management",
        "Stored",
        "Procedures",
        "execution",
        "database",
        "structures",
        "requirements",
        "Oracle",
        "data",
        "SQL",
        "programming",
        "technique",
        "SQL",
        "statements",
        "fly",
        "time",
        "PLSQL",
        "scripts",
        "Data",
        "cleansing",
        "changes",
        "fixes",
        "modules",
        "problems",
        "database",
        "administrator",
        "TOAD",
        "PLSQL",
        "developer",
        "tools",
        "application",
        "development",
        "Performed",
        "SQL",
        "Explain",
        "Plan",
        "Hints",
        "indexes",
        "Environment",
        "Oracle",
        "9i",
        "PLSQL",
        "TOAD",
        "Windows",
        "server",
        "Education",
        "Bachelors",
        "Information",
        "Technology",
        "Information",
        "Technology",
        "National",
        "Institute",
        "Technology",
        "Bachelors",
        "Information",
        "Technology",
        "Information",
        "Technology",
        "National",
        "Institute",
        "Technology",
        "Skills",
        "Enterprise",
        "Java",
        "Hibernate",
        "Spring",
        "Jboss",
        "Java",
        "message",
        "service",
        "Jsf",
        "Java",
        "server",
        "server",
        "pages",
        "Servlets",
        "Struts",
        "Database",
        "Sql",
        "server",
        "Mysql",
        "Oracle",
        "Sql",
        "Api",
        "Gradle",
        "Javascript",
        "Bootstrap",
        "JSP",
        "Java",
        "J2Ee",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Java",
        "EE",
        "components",
        "Java",
        "Server",
        "Pages",
        "Servlets",
        "Enterprise",
        "Java",
        "Beans",
        "Java",
        "Message",
        "Service",
        "Java",
        "Web",
        "frameworks",
        "Spring",
        "MVC",
        "Struts",
        "Hibernate",
        "Java",
        "Server",
        "JSF",
        "Java",
        "Build",
        "Tools",
        "Maven",
        "Gradle",
        "Ant",
        "Java",
        "Application",
        "Containers",
        "Tomcat",
        "JBoss",
        "Jetty",
        "WebLogic",
        "WebSphere",
        "Java",
        "Testing",
        "Tools",
        "JUnit",
        "TestNG",
        "Spock",
        "Mockito",
        "Database",
        "Oracle",
        "SQL",
        "Server",
        "MySQL",
        "MongoDB",
        "Frontend",
        "Technologies",
        "HTML5",
        "CSS3",
        "XML",
        "JavaScript",
        "BOOTSTRAP",
        "JSON",
        "PHP",
        "AJAX",
        "ORM",
        "Hibernate",
        "Java",
        "Persistence",
        "API",
        "JPA",
        "OpenJPA",
        "Version",
        "Control",
        "SVN",
        "GitHub",
        "CVS",
        "BitBucket",
        "JIRA",
        "Jenkins"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:34:59.742224",
    "resume_data": "Senior JavaJ2EE Developer Senior span lJavaspanJ2EE span lDeveloperspan Senior JavaJ2EE Developer Express Scripts Bloomington MN Work Experience Senior JavaJ2EE Developer Express Scripts Bloomington MN June 2018 to Present Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology SCRUM for developing application Application is implemented using agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues Used tools including Web Storm Code Collaborator for code review Rally Agile software and GIT for version control Designed and developed application using various spring framework modules like Spring Core Spring AOP Spring IOC Spring MVC Spring Batch Spring JPA Spring Security and Spring Boot and did integration to Micro services into existing system architecture Utilized Java 18 features like Lambda expressions for collection evaluation and comparing the data Stream API for Bulk data operations on collection for effective sorting mechanisms and to change the sequential steam flow of thread while session establishment Installing and configuring MongoDB server on AWS E2 cluster Implemented multiple high performance Mongo DB replica test Design and implemented Nodejs APIs at peak Involved in developing various UI templates and controller using AngularJS with backend Express and Mongoose Involved in developing various UI templates and was extensively involved in developing the business logic layer Used AngularJS built in directives Controllers and Services and filter functionality to develop UI Proficient knowledge of AngularJS practices and commonly used modules based on extensive work experience Worked with geographically dispersed online team converting usersubmitted designs into AngularJS Identified usability and develop functional and smooth easytooperate and eyecatching web applications using AngularJS and ReactJS Developed new userfacing feature using ReactJS Used various validations that are provided as part of AngularJS application Developed JavaScript performance testing toolkit for web and AngularJS Application Used Amazon Cloud Watch to monitor AWS services and Amazon Cloud Watch logs to monitor applications Build the responsive UI screen for create a new customer process created bill to and ship to screens customer search results page and customer dashboard page using Bootstrap Involved in writing application level code to interact with APIS Web Services using AJAX JSON and building a head feature for zip code city and country and country look up using J Query Ajax and JQuery UI Successfully performed RESTFUL APIs integrating using XML and JSON Developed REST architecture based web services to facilitate communication between client and servers Build the UI part of the address verification service where users can select or ignore recommended address using JQuery Ajax and Bootstrap model Used Spring Security validation and wrote validation rules Implemented the authentication authorization and accesscontrol features by using Spring Security and OAuth Experienced in Standard authentication protocol OAuth 20 Used Spring AOP framework module to implement logging in the application to know the application status Involved in the integration of spring for implementing Dependency Injection DIIOC Developed code for obtaining bean references in Spring IOC framework Implemented SpringHibernates Data Access Layer Used Hibernate for accessing data from Oracle 10g database configured him access files for accessing Database Developed Hibernate and Springbased application configuration framework for simulating database configuration Used Maven for building and managing dependencies of the application Used SVN Subversion for version control Used Jenkins to automate builds and deployment Built and enhanced the deployment of production ready Kubernetes clusters into AWS Worked with automation deployment tool such as service Kubernetes which is used to deploy quickly and predictably Environment J2EE JSP JDK 16 Angular JS AGILE Methodology JavaScript Bootstrap JDK SVN Spring Boot Spring AOP Spring Batch Spring Security Spring OAuth REST Apache Camel Hibernate Kubernetes TDD Web Sphere Application Server Jenkins SVN Log4jGitJIRA BlueCross BlueShield Charlotte NC Jan 2016 May 2018 Role Senior Java Developer Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using AGILE methodology and used JIRA for tracking the Project Stories in AGILE Methodology Designed dynamic user interface pages using HTML5 bootstrap CSS3 JQuery Bootstrap SASS Typescript and AngularJS Developed various AJAX and JSON calls for the communication between the server and the UI Experience in writing Serverside coding using AngularJS and connected to Fire Developed various Angular directives such as Attribute and Structured Directives Query Params Pipes Filters and Services for building the functionality Integrated the dynamic pages with Angular and JQuery and created reusable components directives filters Developed Angular application using both template driven and data driven forms Implemented Spring Boot Dependency Injection DI Inversion of Control IOC and Aspect Oriented Programming AOP features along with hibernate for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Created Restful Web services using Jersey API JAXRS while data exchange was carried out between application and services using JSON Developed restful web service APIs using Spring Framework such as Spring Core Spring MVC Spring AOP and Java Persistence API Implemented persistence framework using Hibernate and handled Transaction Management using the provided data source Implemented Microservices using Pivotal Cloud foundry PCF platform build upon Spring Boot Services Consumed Web Services to interact with other external interfaces to exchange the data in the form of XML and by using SOAP Used Java Mailing Service JMS API to mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related issues Extensively used HQL and SQL for querying databases Developed the Mapping Resource Files for the database entities Packaged and deployed the application in IBM Web sphere Established Database Connectivity using Hibernate OR mapping with Spring ORM for MySQL Server Used IntelliJ as IDE to develop the application and followed the standard features for debugging and running Used log4J for application logging and notification tracing mechanisms Analysis and Bug fixing of the production problems and defects along with enhancements Used Maven as the build tool and JUnit for Testing and Ant Scripts Environment Agile Java J2EE HTML5 Java Script jQuery Ajax AngularJS Spring Micro services Spring MVC Hibernate Maven Rational Clear Case IBM Web Sphere Log4J MySQL Server Google cloud platform JIRA RMI IntelliJ IDE LINUX JavaJ2EE Developer JPMorgan Chase Columbus OH March 2014 to December 2015 Responsibilities Involved in the analysis design and development and testing phases of Software Development Lifecycle SDLC using agile development methodology Designed and developed GUI Screens for user interfaces using JSP JavaScript AJAX XML HTML and CSS Involved in implementation of clientside validations using JavaScript Developed in MVC through Struts and hibernate technologies Implemented different Design patterns like DAO Singleton Pattern and MVC architectural design pattern of spring Involved in writing Spring Configuration XML files that contains declarations and another dependent object declaration Developed and consumed REST Web services Used Postman and Advanced rest client to test web services Developed both XML and JSON request and responses using REST Extensively used XSD for validations of XML transfer to the different Web Services Writing SQL queries functions and procedures on Oracle database Implemented Unit Testing using JUnit and Integration Testing during the projects Implemented the business logic using JSP JSTL and Java Beans and service classes Developed JSP pages and Servlets for customer maintenance and use Angular JS Worked on JavaScript Libraries like JQuery and JSON Used Spring ORM module to integrate with Hibernate Environment Java 16 J2EE EJB JDBC JUnit XHTML ANT Oracle 10g SQL IBM RAD PLSQL Agile methodology SQL Server AJAX XML XSD JavaScript AngularJS BackboneJS CSS Struts Hibernate 30 Spring Java Developer HSBC Arlington Heights IL June 2012 to March 2014 Responsibilities Following Agile Methodology and Scrum Process for the Project Implementation Participating in Backlog grooming and Sprint Planning meetings to get requirements from the client and performing Technical Design Designed and developed Restful API utilizing spring framework Core Data Security AOP and MVC Used Lombok library to simplify the coding Used Liquibase for tracking managing and applying database schema changes Used Spring Data Hibernate with JPA for object relational mapping Used Spring Batch Processing for Batch Process Used spring boot to develop onetime migrations standalone projects Used JAXP and JAXWS for XML Parsing Used Rally for Sprint Planning and Bugs Tracking Used JQuery for front end Design Used AJAX JavaScript validations for clientside validation Used JBOSS Application Server 7 as Application Server Writing Stored Procedures Functions Packages Views Sequences and Triggers using PLSQLSQL Used SonarQube integrated with Jenkins and subversion for tracking Code violations and Code coverage Used DEVOPS tools Subversion Jenkins Nexus puppet cloud forms SonarQube and Splunk for continuous integration and deployments on to JBOSS EAP Servers Implemented Dynamic logging by using log4j Performed Unit testing using JUnit Mockito and Power mock Environment Java 18 J2EE Restful Web services Spring Boot AOP Core Data MVC Modules Hibernate REST Easy Eclipse XML XSD XSLT HTML DOJO 19 JSON SoapUI Pro50 JavaScript CSS jQuery JUnit AJAX SQL MySQL 57 H2 DB Liquibase Maven 40 Oracle11g Oracle JBOSS 7 JBOSS fuse with AMQs SVN and Jenkins Java Developer MOTIVE Austin TX December 2010 to May 2012 Responsibilities Designed and developed the application based on MVC framework Created HTML and CSS for Presentation Layer Developed in MVC through Struts and hibernate technologies Implemented different Design patterns like DAO Singleton Pattern and MVC architectural design pattern of spring Involved in writing Spring Configuration XML files that contains declarations and another dependent object declaration Involved in analyzing business requirements and compose them into a technical use cases Used JSON Object to interact between frontend and Business login Parsed the JSON Object To retrieve the Values Design and development of DB design and hierarchy Developed the logging framework based on Log4j Used Eclipse as IDE for development and unit testing Used SVN as repository to control versioning of projects Prepared documentation and participated in preparing users manual for the application Encryption and decryption scripts to protect Employee financial details in DB Environment Java 15 J2EE JDBC MySQL DB2 SQL Developer XML Log4j Tomcat 60 Eclipse Windows 7 Junior Java Developer Unilever IN March 2009 to November 2010 Responsibilities Analyzed and overviewed the database design for better understanding the relations associations and dependencies within the database Data modeling for client specific requirements Developed UNIX shell scripts that help as a scheduler for data load Created SQLLoader scripts to load data into the temporary staging tables Developed complex queries on Data Warehousing and developed PLSQL procedures to give in nice strategic plans to higher level of management Tuned complex Stored Procedures for faster execution and Developed database structures according to the requirements in Oracle data warehousing Used Dynamic SQL programming technique to build and process SQL statements on the fly at run time Developed PLSQL scripts for Data cleansing Made timely changes and fixes to all the modules on reported problems from the database administrator Used TOAD PLSQL developer tools for faster application development Performed SQL tuning using Explain Plan Hints and indexes Environment Oracle 9i PLSQL TOAD Windows 2005 server Education Bachelors in Information Technology in Information Technology National Institute of Technology Bachelors in Information Technology in Information Technology National Institute of Technology Skills Enterprise java beans Java Hibernate Spring Jboss Java message service Jsf Java server faces Java server pages Servlets Struts Database Sql server Mysql Oracle Sql Api Gradle Javascript Bootstrap JSP Java J2Ee J2Ee Additional Information TECHNICAL SKILLS Java EE components Java Server Pages Servlets Enterprise Java Beans Java Message Service Java Web frameworks Spring MVC Struts Hibernate Java Server Faces JSF Java Build Tools Maven Gradle Ant Java Application Containers Tomcat JBoss Jetty WebLogic WebSphere Java Testing Tools JUnit TestNG Spock Mockito Database Oracle SQL Server MySQL MongoDB Frontend Technologies HTML5 CSS3 XML JavaScript BOOTSTRAP JSON PHP and AJAX ORM Hibernate Java Persistence API JPA OpenJPA Version Control SVN GitHub CVS BitBucket JIRA Jenkins",
    "unique_id": "2832c924-25af-4acd-bf90-df4dd7257426"
}