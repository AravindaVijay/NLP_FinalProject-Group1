{
    "clean_data": "Sr Mule Soft ESB Integration Developer Sr Mule Soft ESB Integration span lDeveloperspan Sr Mule Soft ESB Integration Developer Mutual of Omaha Bank 7 years of experience in Software design and development activities including requirement analysis design and implementations and testing of various client server based applications using Java and J2EE and Mule Soft technologies Worked on Deploying the Mule application to Cloud Hub Experience with Mule Soft MMC and enterprise release Experience with Mule administration configuration and tuning Created HTTP inbound and outbound flows for transformation and security of Mule application Implementation of custom transformations in Mule and used Data Mapper and Data Weave in Data transformations for in Mule Flow Experience with MUnit for mocking and unit testing mule flows Recovery of lost or failure records Created services to integrate with XML based applications Worked on messaging using Active MQ Used Git hub and SVN for version and source control Extensive usage of Maven build scripts for automated the build process Involved in creating use cases diagrams activity diagrams sequence diagrams and class diagrams Worked on SpringDAO based declarative transaction management Handson experience in implementation of Hibernate and Spring framework Developed Struts based presentation layer Hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed functions and store procedures using SQL and PLSQL for the application Wrote database queries using SQL and PLSQL for accessing manipulating and updating Oracle database Worked on Clear Case to merge code and deploy them in to a central depository location Involved in fixing defects tracked them using QC Provided support and maintenance and customization Quick learner with ability to meet deadlines and work under pressure Excellent analytical and problem solving skills along with good oral and written communication skills Work Experience Sr Mule Soft ESB Integration Developer Mutual of Omaha Bank Phoenix AZ March 2018 to Present Project Mobile digital paymentsHoa Data Integration Project Description Mobile digital paymentsHoa Data Integration is an enterprise application that is used to integrate Mulesoft with Salesforce Back end Java Microservice layers and Net applications This project integrates with various backend Apis to send the data through Mulsoft which acts as an integration layer where the business logic comes into picture Mulesoft Apis are used by HOA partners and their vendors for various operations like making payments and check their daily reconsilation reports do wire transfer check processing stop checks etc Also developed AMUI based application which consists of WMQ as source where any updates to mutual of Omaha users personal information updates triggers the call and updates the database Responsibilities Involved in the development phase developing validations and business logic implementation Developed the application using MuleSoft ESB build deployed the services Integrated the existing systems to newly developing systems and thirdParty Systems which acts as a middleware between the thirdparty system and the customer side system Created the MULE ESB artifacts created flows and configured the MULE configuration files and deployed the application Created and consumed SOAP and REST services and used MULE ESB to route various calls to do validation of service input and to handle exceptions Created Flows Sub Flows Exception strategy and DataWeave transformation in Mule configuration Used Mule Batch processing to handle the large data and used the batch processing capabilities of DataWeave to transform large payloads Worked on Mule flow variables record variables various connectors like File FILE SFTP IMAP HTTP Oracle database Salesforce CXF Imported RAML file in to AnyPoint Studio to generating the flows to implanting the business logic Used various Atlassian products like JIRA and confluence Developed Mule flows to integrate Data from various sources into Database from  topics and WMQ queues some transformations were also done at the integration layer Utilized CloudHub connector in the mule flows for triggered alerts during exceptions and to capture the failed records for further recovery Involved in creating http inbound outbound flows custom Java and XSLT transformers and security of Mule endpoint through WSSecurity Used different transformers exception handling testing Security of Mulesoft ESB endpoint through OAuth Used Salesforce connector to connect to a salesforce application to send bulk data using bactch processing Used Jenkins for CICD deployment strategy Created Request Response transformers Custom Components configured them in Muleconfigxml Integrated Mule ESB system by utilizing Active MQ Http File system and SFTP transports Extensively used mule components that include File Transport SMTP Transport FTPSFTP Transport JDBC Connector and Transaction Manager Used MUnit for unit testing Environment RAML JDBC Connector Files FTP SFTP Active MQ DataWeave Selector Expressions XPath DataMapper Postman Exception Handling Salesforce MUnit CloudHub Agile OAuth SOAP REST Jenkins Maven salesforce Git Sr Mule Soft ESB Integration Developer PetSmart Phoenix AZ January 2017 to February 2018 Project Customer Data Foundation Project Description Customer Data Foundation is an enterprise application that is used to integrate between MDM ODS to POS SMS and OKTA This Integration involves with various design structures of Mule ESB along with Real time and Batch Processing Involved in developing RESTFUL APIs using MULE ESB 380 and also involved in Mule administration configuration Responsibilities Responsible for the analysis design implementation and deployment of full SDLC of Mulesoft project using AGILE Process Experience in using Mulesoft AnyPoint API Platform on designing and implementing Mule APIs by documenting and designing REST APIs using RAML 10 and followed 3 layer API Architecture Migrated deprecated Data Mapper Mapping to DataWeave in MULE ESB Implemented Custom transformation Involved in the endtoend full development of the Project by understanding the existing application functionality and enhancing it with respect to the client requirement Developed RESTFUL and SOAP Web Services in Mule ESB based on SOA Architecture Designed and Implemented RESTFUL Web services using various data format JSON XML to provide an interface to the various third party applications Involved in creating http inbound outbound flows and orchestration using XPath using Mule ESB Experience in using various connectors in Mule such as SAP HL7 HTTP FILE Database and Sales Force etc Used SVN as version and Source control Developed XML Schemas and IS Schemas for validation Worked on Deploying the Mule application to Cloud Hub Experience in MUnit for mocking and unit testing mule flows Involved in trouble shooting and problem solving of the Integrations Review to the extent possible changes in code and the environment that will affect system performance Environment Mule Anypoint Studio SVN Java 18 RAML 10 MMC Cloud Hub Web Services Web Methods Developer JDBC Broker HTTPHTTPS XML JSON Mulesoft Developer US Foods Chicago IL February 2016 to December 2016 Project Description Digital Platform is an initiative aimed at replacing the companys current ecommerce platform with a new Digital Platform consisting of a cloud based web front Demandware on premises Order Management System and a cloud based fulfillment center 3PL GENCO Digital Integration project is a derivative of Digital Platform program which is aimed at developing the required interfaces between various systems such as Inventory SAP Order Management System Manhattan and Fulfillment System GENCO Payment Services Payeezy SVS Sales Tax Services Avalara and various other systems services Responsibilities Part of the team responsible for creating Microservices based architecture Design and build services based on the defined architecture Develop APIs using Contract first approach define RAML Open API Interface and implement the interface using Mule ESB Working as CloudHub Admin for managing APIs API Manager Runtime Manager applying policies and configuring alerts Integrated logs with Splunk and New Relic Define and implement devops best practices of CICD for Mule applications using Maven CricleCI Kibana Docker AWS Worked with teams that are geographically distributed across countries Experience working in agile project management Extensively developed applications using Salesforce OKTA LDAP Responsible for the analysis design implementation and deployment of full SDLC of Mulesoft project using AGILE Process As a Lead Developer working on enterprise development by API Enablement and integration using Mule ESB and API Extensive usage of Data weave Transformer Developed flows using message integration techniques likewise JMS  Manage the deliverables per sprint Implementation follows agile methodology Lead for architecture and planning of a MULESOFT system that was integrated with multiple systems on Digital Platform Developed flows using message enricher filters and various flow controls like scatter gather Document standards guideline and strategic plans to develop APIs using MuleSoft Define and setup the platform and perform POT to prove the Mule ESB Integration capabilities Implement CICD for all Mule Integrations using Maven SVNGit Define the common framework Routing Logging Exception handling Deliver the solution design document that includes all the design coding and the operation standards Provide Technical Guideline to Design and Development teams Define and create test cases and conduct manual testing for implemented solution Provide ongoing assessments of deployed solutions Developed RESTFUL and SOAP Web Services in Mule ESB based on SOA Architecture Environment Mule Anypoint Studio SVN Java 18 RAML 10 MMC Cloud Hub Web Services Web Methods Developer JDBC Broker HTTPHTTPS XML JSON Java Developer Wells Fargo Minneapolis MN April 2015 to January 2016 Responsibilities All the modules of the application are based on Spring MVC architecture and J2EE technologies Implemented of Struts 2x Framework for the Proof of Concept POC Integrated Spring Dependency Injection IOC among different layers of an application Involved in various Software Development Life Cycle SDLC phases of the project which was modeled using Rational Unified Process RUP Implemented Agile SCRUM methodology involved in sprint planning Generated use case diagrams class diagrams and sequence diagrams using Rational Rose Implemented the application using Struts MVC Framework Maintained the code repository using Clear case for keeping codebase in sync with other phases of projects running simultaneously Used Struts validation and tiles framework in the presentation layer Developed user interface using JSP JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Created action classes and session beans to process the requests from the user Developed and used JSP custom tags in the web tier to dynamically generate web pages Worked with Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean Designed and implemented Servlets module to capture the XML as request and parse XML Extensively worked with JDBC programs using Oracle and MySQL databases and developed SQL and PLSQL for Oracle to process the data Enhanced the web services Client and Server codes Environment Core Java J2EE Windows server EJB MDB Web Services Servlets Spring Framework JSP JDBC JUnit Struts Oracle Eclipse XML JavaScript HTML RESTful Log4J WebLogic PLSQL Java Developer Cisco Raleigh NC September 2014 to March 2015 Responsibilities Worked on project using Agile SCRUM methodology And involved in daily stand up meetings Experienced in the development of UI using HTML JSP JSP Custom Tag and AJAX Developed International Error Correction Screens using custom front end forms using XML XSLT Angular JS and JQuery Created RESTful web services interface to Javabased runtime engine WebSphere used as IDE Worked on core Java Multi threading and Collections framework Object oriented analysis design OOAD and implementation using Java J2EE Technologies Worked on J2EE design patterns like DAO and Business Delegate to handle the business flow Angular JS Bootstrap and Web Services used for random dash board monitoring Persistence layer developed using Hibernate and implemented DAO to handle the data base interaction Experienced in using XML Technologies and client side designing and validation using HTML DHTML JavaScript and JSP Experienced in using ANT for generating system builds Used JUnit test cases to test the application Worked on Log4J for tracking errors and also debugging the code Performed database operations and queries using Oracle 10g Worked on using SVN for version control Environment Java16 Struts EJB 20 JavaJ2EE coding J2EE patterns Bootstrap Angular JS Web service JDBC Spring WSDL JQuery Hibernate Log4J XML JUnit Oracle 10g WebSphere UML Design HTML 5 JavaScript SVN JavaJ2EE Developer Mobiware Inc Irving TX March 2014 to August 2014 Responsibilities Actively participated in requirements gathering analysis design and testing phases Designed use case diagrams class diagrams and sequence diagrams as a part of Design Phase using Rational Rose Experience in working with Agile Methodologies Designed the Use Cases and Sequence Diagrams using MSVisio Application built on Java Financial platform which is an integration of several technologies like Struts and Spring Web Flow Used the Inversion of Control module of spring framework Developed the entire application implementing MVC Architecture integrating Hibernate and spring frameworks Designed User Interface using Java Server Pages JSP Cascading Style Sheets CSS and XML Developed the Enterprise Java Beans Stateless Session beans to handle different transactions of the service providers Implemented Service Oriented Architecture SOA using JMS for sending and receiving messages while creating web services Developed Web Services for data transfer from client to server and vice versa using Apache Axis SOAP WSDL and UDDI Extensively worked on MQSeries using pointpoint publishersubscriber messaging Domains for implementing Exchange of information through Messages Developed XML documents and generated XSL files for Payment Transaction and Reserve Transaction systems Implemented various J2EE Design patterns like Singleton Service Locator Business Delegate DAO Transfer Object and SOA Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Used Subversion to implement version control System Build ANT Script for the application and used Log4J for debugging Used JUnit Framework for the unit testing of all the java classes Environment Java 16 Struts 13 Spring 25 EJB 20 Hibernate 36 Oracle10g WSDL Web Services XML NetBeans 701 IDE HTML CSS JavaScript Ajax JQuery 131 Apache Tomcat 5x Log4j JUnit framework Mock Objects RSS Apache Ant 17 Java Developer ConocoPhillips Bartlesville OK September 2013 to March 2014 Responsibilities Actively participated in the daily SCRUM meetings to produce quality deliverables within time Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Hibernate System was built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Facade Business Delegate Singleton Data Access Object Designed the front end using JSP AJAX JQuery JSF Designed and implemented the application using JSP Spring MVC Spring IOC Spring Annotations Spring AOP Spring Transactions Hibernate JDBC ANT Oracle and WebSphere app server Used Spring Framework for Dependency injection Developed Web Services to allow communication between application through SOAP over HTTP Used SVN version control tool Automated the build process by writing ANT build scripts Wrote SQL queries stored procedures modifications to existing database structure as required for addition of new features using Oracle database Involved in installing and configuring Eclipse and Maven for development Developed various UML diagrams Configured and customized logs using Log4J and used JUnit for unit testing Environment Java JavaScript Hibernate Spring AGILE Methodology SCRUM JSP Servlet XML Java Beans Design Patterns SOAP Web services Log4J JUnit SVN Oracle Eclipse Maven Java Developer Divine Limited Hyderabad Telangana January 2012 to July 2013 Responsibilities Worked on the development and testing of the infotainment module using Agile SCRUM methodologies Developed Struts based presentation layer Hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Designed and developed persistence layer designed on ORM framework principles and developed it using HibernateJPA and DAO design pattern Developed Server side components using spring framework Used JBoss Drools as the business rules engine to create and maintain the Business rules and Drools Guvnor as the Business Rules manager Developed the user interfaces using Angular JS Java Script HTML5 DHTML CSS3 and AJAX Created Unit test cases using Junit and used Log4J for logging Used SOAP UI for testing the SOAP web services Developed PLSQL scripts functions triggers and stored procedures for the Oracle 10g database Developed a test report using Karma Environment AgileSCRUM Java 16 struts 20 Hibernate 30 JBoss Drools Drools Guvnor Business Rules Education Bachelors in Electronics and Communication Engineering in Electronics and Communication Engineering Vignans Lara Institute of Technology and Science in India Skills Eclipse Java Java technologies Jax Jaxb Jaxp Jaxws Jboss Jms jquery Jsp Rmi Servlets C Dtd Git Php Scripting Svn Xml Additional Information Technical Skills Programming Languages Java C C PLSQL Core Java Concepts Collections Generics Multithreading Serialization Exception Handling RMI File IO Java Technologies Java JEE JDBC Servlets JSP IDEs Eclipse Web Services SOAP WSDL JAXWS UDDI JAXRS REST Jersey Web Application Servers Apache Tomcat Web Logic Web Sphere and JBOSS Operating Systems Windows 2000XP7 UNIXLINUX Databases Oracle SQL Server MySQL Messaging Systems JMS IBMMQ Series Active MQ Scripting languages Java Script AJAX Java script libraries JQuery DOJO PHP XML technologies XML DTD XSD XSLT XPATH JAXP JAXB Protocols SOAP HTTP HTTPS FTP RMI SMTP SVN Tools CVS GIT SVN Tools Log4j JUnit MUnit ESB MULE ESB",
    "entities": [
        "Created HTTP",
        "OAuth Used Salesforce",
        "AJAX",
        "MUnit",
        "Inventory SAP Order Management System Manhattan",
        "API Enablement",
        "Used SOAP UI",
        "SVS Sales",
        "Struts MVC Framework",
        "JSP Experienced",
        "CVS",
        "Quick",
        "Drools Guvnor Business Rules Education Bachelors",
        "Mock Objects",
        "SOA Architecture Environment",
        "MULE",
        "XML",
        "SOAP",
        "POT",
        "Digital Platform Developed",
        "J2EE Design",
        "SVN Tools",
        "WebLogic",
        "JUnit",
        "Mule ESB Experience",
        "DataWeave",
        "Custom Components",
        "Automated",
        "AJAX Developed International Error Correction",
        "JQuery DOJO PHP XML",
        "WebSphere",
        "Used Spring Framework for Dependency",
        "API Extensive",
        "SOA Architecture Designed",
        "Developed",
        "DAO",
        "Data Weave",
        "Order Management System",
        "Created Request Response transformers",
        "Mulesoft Developer",
        "NC",
        "Created Flows Sub Flows Exception",
        "Spring MVC",
        "Java J2EE Technologies Worked",
        "UML",
        "Git",
        "Servlets",
        "AJAX Created Unit",
        "Payment Transaction and Reserve Transaction",
        "Splunk and New Relic Define",
        "Develop",
        "File Transport SMTP Transport FTPSFTP Transport",
        "MMC",
        "Developed Web Services",
        "MQSeries",
        "JSP",
        "Developed Server",
        "Minneapolis",
        "Karma Environment",
        "API Architecture Migrated",
        "Utilized CloudHub",
        "Facade Business Delegate Singleton",
        "JBoss Drools",
        "Action Mapping Action",
        "Jax Jaxb Jaxp Jaxws Jboss Jms",
        "Messages Developed XML",
        "MVC",
        "Eclipse Web Services SOAP WSDL",
        "Agile",
        "EJB",
        "Oracle SQL Server MySQL Messaging Systems",
        "SOAP Web Services",
        "JS",
        "Agile Methodologies Designed the Use Cases",
        "Implementation",
        "Java Server Pages JSP Cascading Style Sheets CSS",
        "HOA",
        "US",
        "Database",
        "JSP JSP Tag",
        "Business Delegate",
        "Created",
        "IDE Worked",
        "Omaha",
        "Server",
        "Domains",
        "Oracle",
        "AGILE Process",
        "WMQ",
        "XSD XSLT XPATH JAXP JAXB Protocols SOAP",
        "Hibernate System",
        "Mulesoft",
        "Responsibilities Responsible",
        "Digital Integration",
        "XPath",
        "RESTFUL",
        "SQL",
        "Spring Inversion of Control IOC",
        "Java Developer Divine Limited Hyderabad",
        "MVC Architecture",
        "Rational Rose Implemented",
        "QC Provided",
        "XML Developed",
        "Chicago",
        "Salesforce OKTA LDAP Responsible",
        "HibernateJPA",
        "thirdParty Systems",
        "Schemas",
        "CICD",
        "MDM ODS",
        "Handson",
        "AnyPoint Studio",
        "CloudHub",
        "UDDI",
        "WebSphere UML Design",
        "JQuery Created",
        "JSP Spring",
        "Used JUnit Framework",
        "Maven",
        "Performed",
        "Implemented Service Oriented Architecture SOA",
        "XSLT",
        "Hibernate",
        "Sequence Diagrams",
        "MSVisio Application",
        "Mule",
        "ANT",
        "Communication Engineering in Electronics and",
        "UI",
        "Singleton Service Locator Business Delegate",
        "WSSecurity",
        "XML Technologies",
        "Project Customer Data Foundation Project Description Customer Data Foundation",
        "the Integrations Review",
        "SVN",
        "Data Mapper",
        "SAP",
        "Data",
        "REST",
        "Present Project Mobile",
        "Mulsoft",
        "NetBeans",
        "Digital",
        "MQ DataWeave",
        "HTML JSP JSP Custom Tag",
        "Digital Platform",
        "Software Development Life Cycle",
        "JavaScript SVN JavaJ2EE Developer Mobiware Inc",
        "Mule ESB Working",
        "Action Form"
    ],
    "experience": "Experience with Mule Soft MMC and enterprise release Experience with Mule administration configuration and tuning Created HTTP inbound and outbound flows for transformation and security of Mule application Implementation of custom transformations in Mule and used Data Mapper and Data Weave in Data transformations for in Mule Flow Experience with MUnit for mocking and unit testing mule flows Recovery of lost or failure records Created services to integrate with XML based applications Worked on messaging using Active MQ Used Git hub and SVN for version and source control Extensive usage of Maven build scripts for automated the build process Involved in creating use cases diagrams activity diagrams sequence diagrams and class diagrams Worked on SpringDAO based declarative transaction management Handson experience in implementation of Hibernate and Spring framework Developed Struts based presentation layer Hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed functions and store procedures using SQL and PLSQL for the application Wrote database queries using SQL and PLSQL for accessing manipulating and updating Oracle database Worked on Clear Case to merge code and deploy them in to a central depository location Involved in fixing defects tracked them using QC Provided support and maintenance and customization Quick learner with ability to meet deadlines and work under pressure Excellent analytical and problem solving skills along with good oral and written communication skills Work Experience Sr Mule Soft ESB Integration Developer Mutual of Omaha Bank Phoenix AZ March 2018 to Present Project Mobile digital paymentsHoa Data Integration Project Description Mobile digital paymentsHoa Data Integration is an enterprise application that is used to integrate Mulesoft with Salesforce Back end Java Microservice layers and Net applications This project integrates with various backend Apis to send the data through Mulsoft which acts as an integration layer where the business logic comes into picture Mulesoft Apis are used by HOA partners and their vendors for various operations like making payments and check their daily reconsilation reports do wire transfer check processing stop checks etc Also developed AMUI based application which consists of WMQ as source where any updates to mutual of Omaha users personal information updates triggers the call and updates the database Responsibilities Involved in the development phase developing validations and business logic implementation Developed the application using MuleSoft ESB build deployed the services Integrated the existing systems to newly developing systems and thirdParty Systems which acts as a middleware between the thirdparty system and the customer side system Created the MULE ESB artifacts created flows and configured the MULE configuration files and deployed the application Created and consumed SOAP and REST services and used MULE ESB to route various calls to do validation of service input and to handle exceptions Created Flows Sub Flows Exception strategy and DataWeave transformation in Mule configuration Used Mule Batch processing to handle the large data and used the batch processing capabilities of DataWeave to transform large payloads Worked on Mule flow variables record variables various connectors like File FILE SFTP IMAP HTTP Oracle database Salesforce CXF Imported RAML file in to AnyPoint Studio to generating the flows to implanting the business logic Used various Atlassian products like JIRA and confluence Developed Mule flows to integrate Data from various sources into Database from   topics and WMQ queues some transformations were also done at the integration layer Utilized CloudHub connector in the mule flows for triggered alerts during exceptions and to capture the failed records for further recovery Involved in creating http inbound outbound flows custom Java and XSLT transformers and security of Mule endpoint through WSSecurity Used different transformers exception handling testing Security of Mulesoft ESB endpoint through OAuth Used Salesforce connector to connect to a salesforce application to send bulk data using bactch processing Used Jenkins for CICD deployment strategy Created Request Response transformers Custom Components configured them in Muleconfigxml Integrated Mule ESB system by utilizing Active MQ Http File system and SFTP transports Extensively used mule components that include File Transport SMTP Transport FTPSFTP Transport JDBC Connector and Transaction Manager Used MUnit for unit testing Environment RAML JDBC Connector Files FTP SFTP Active MQ DataWeave Selector Expressions XPath DataMapper Postman Exception Handling Salesforce MUnit CloudHub Agile OAuth SOAP REST Jenkins Maven salesforce Git Sr Mule Soft ESB Integration Developer PetSmart Phoenix AZ January 2017 to February 2018 Project Customer Data Foundation Project Description Customer Data Foundation is an enterprise application that is used to integrate between MDM ODS to POS SMS and OKTA This Integration involves with various design structures of Mule ESB along with Real time and Batch Processing Involved in developing RESTFUL APIs using MULE ESB 380 and also involved in Mule administration configuration Responsibilities Responsible for the analysis design implementation and deployment of full SDLC of Mulesoft project using AGILE Process Experience in using Mulesoft AnyPoint API Platform on designing and implementing Mule APIs by documenting and designing REST APIs using RAML 10 and followed 3 layer API Architecture Migrated deprecated Data Mapper Mapping to DataWeave in MULE ESB Implemented Custom transformation Involved in the endtoend full development of the Project by understanding the existing application functionality and enhancing it with respect to the client requirement Developed RESTFUL and SOAP Web Services in Mule ESB based on SOA Architecture Designed and Implemented RESTFUL Web services using various data format JSON XML to provide an interface to the various third party applications Involved in creating http inbound outbound flows and orchestration using XPath using Mule ESB Experience in using various connectors in Mule such as SAP HL7 HTTP FILE Database and Sales Force etc Used SVN as version and Source control Developed XML Schemas and IS Schemas for validation Worked on Deploying the Mule application to Cloud Hub Experience in MUnit for mocking and unit testing mule flows Involved in trouble shooting and problem solving of the Integrations Review to the extent possible changes in code and the environment that will affect system performance Environment Mule Anypoint Studio SVN Java 18 RAML 10 MMC Cloud Hub Web Services Web Methods Developer JDBC Broker HTTPHTTPS XML JSON Mulesoft Developer US Foods Chicago IL February 2016 to December 2016 Project Description Digital Platform is an initiative aimed at replacing the companys current ecommerce platform with a new Digital Platform consisting of a cloud based web front Demandware on premises Order Management System and a cloud based fulfillment center 3PL GENCO Digital Integration project is a derivative of Digital Platform program which is aimed at developing the required interfaces between various systems such as Inventory SAP Order Management System Manhattan and Fulfillment System GENCO Payment Services Payeezy SVS Sales Tax Services Avalara and various other systems services Responsibilities Part of the team responsible for creating Microservices based architecture Design and build services based on the defined architecture Develop APIs using Contract first approach define RAML Open API Interface and implement the interface using Mule ESB Working as CloudHub Admin for managing APIs API Manager Runtime Manager applying policies and configuring alerts Integrated logs with Splunk and New Relic Define and implement devops best practices of CICD for Mule applications using Maven CricleCI Kibana Docker AWS Worked with teams that are geographically distributed across countries Experience working in agile project management Extensively developed applications using Salesforce OKTA LDAP Responsible for the analysis design implementation and deployment of full SDLC of Mulesoft project using AGILE Process As a Lead Developer working on enterprise development by API Enablement and integration using Mule ESB and API Extensive usage of Data weave Transformer Developed flows using message integration techniques likewise JMS   Manage the deliverables per sprint Implementation follows agile methodology Lead for architecture and planning of a MULESOFT system that was integrated with multiple systems on Digital Platform Developed flows using message enricher filters and various flow controls like scatter gather Document standards guideline and strategic plans to develop APIs using MuleSoft Define and setup the platform and perform POT to prove the Mule ESB Integration capabilities Implement CICD for all Mule Integrations using Maven SVNGit Define the common framework Routing Logging Exception handling Deliver the solution design document that includes all the design coding and the operation standards Provide Technical Guideline to Design and Development teams Define and create test cases and conduct manual testing for implemented solution Provide ongoing assessments of deployed solutions Developed RESTFUL and SOAP Web Services in Mule ESB based on SOA Architecture Environment Mule Anypoint Studio SVN Java 18 RAML 10 MMC Cloud Hub Web Services Web Methods Developer JDBC Broker HTTPHTTPS XML JSON Java Developer Wells Fargo Minneapolis MN April 2015 to January 2016 Responsibilities All the modules of the application are based on Spring MVC architecture and J2EE technologies Implemented of Struts 2x Framework for the Proof of Concept POC Integrated Spring Dependency Injection IOC among different layers of an application Involved in various Software Development Life Cycle SDLC phases of the project which was modeled using Rational Unified Process RUP Implemented Agile SCRUM methodology involved in sprint planning Generated use case diagrams class diagrams and sequence diagrams using Rational Rose Implemented the application using Struts MVC Framework Maintained the code repository using Clear case for keeping codebase in sync with other phases of projects running simultaneously Used Struts validation and tiles framework in the presentation layer Developed user interface using JSP JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Created action classes and session beans to process the requests from the user Developed and used JSP custom tags in the web tier to dynamically generate web pages Worked with Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean Designed and implemented Servlets module to capture the XML as request and parse XML Extensively worked with JDBC programs using Oracle and MySQL databases and developed SQL and PLSQL for Oracle to process the data Enhanced the web services Client and Server codes Environment Core Java J2EE Windows server EJB MDB Web Services Servlets Spring Framework JSP JDBC JUnit Struts Oracle Eclipse XML JavaScript HTML RESTful Log4J WebLogic PLSQL Java Developer Cisco Raleigh NC September 2014 to March 2015 Responsibilities Worked on project using Agile SCRUM methodology And involved in daily stand up meetings Experienced in the development of UI using HTML JSP JSP Custom Tag and AJAX Developed International Error Correction Screens using custom front end forms using XML XSLT Angular JS and JQuery Created RESTful web services interface to Javabased runtime engine WebSphere used as IDE Worked on core Java Multi threading and Collections framework Object oriented analysis design OOAD and implementation using Java J2EE Technologies Worked on J2EE design patterns like DAO and Business Delegate to handle the business flow Angular JS Bootstrap and Web Services used for random dash board monitoring Persistence layer developed using Hibernate and implemented DAO to handle the data base interaction Experienced in using XML Technologies and client side designing and validation using HTML DHTML JavaScript and JSP Experienced in using ANT for generating system builds Used JUnit test cases to test the application Worked on Log4J for tracking errors and also debugging the code Performed database operations and queries using Oracle 10 g Worked on using SVN for version control Environment Java16 Struts EJB 20 JavaJ2EE coding J2EE patterns Bootstrap Angular JS Web service JDBC Spring WSDL JQuery Hibernate Log4J XML JUnit Oracle 10 g WebSphere UML Design HTML 5 JavaScript SVN JavaJ2EE Developer Mobiware Inc Irving TX March 2014 to August 2014 Responsibilities Actively participated in requirements gathering analysis design and testing phases Designed use case diagrams class diagrams and sequence diagrams as a part of Design Phase using Rational Rose Experience in working with Agile Methodologies Designed the Use Cases and Sequence Diagrams using MSVisio Application built on Java Financial platform which is an integration of several technologies like Struts and Spring Web Flow Used the Inversion of Control module of spring framework Developed the entire application implementing MVC Architecture integrating Hibernate and spring frameworks Designed User Interface using Java Server Pages JSP Cascading Style Sheets CSS and XML Developed the Enterprise Java Beans Stateless Session beans to handle different transactions of the service providers Implemented Service Oriented Architecture SOA using JMS for sending and receiving messages while creating web services Developed Web Services for data transfer from client to server and vice versa using Apache Axis SOAP WSDL and UDDI Extensively worked on MQSeries using pointpoint publishersubscriber messaging Domains for implementing Exchange of information through Messages Developed XML documents and generated XSL files for Payment Transaction and Reserve Transaction systems Implemented various J2EE Design patterns like Singleton Service Locator Business Delegate DAO Transfer Object and SOA Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Used Subversion to implement version control System Build ANT Script for the application and used Log4J for debugging Used JUnit Framework for the unit testing of all the java classes Environment Java 16 Struts 13 Spring 25 EJB 20 Hibernate 36 Oracle10 g WSDL Web Services XML NetBeans 701 IDE HTML CSS JavaScript Ajax JQuery 131 Apache Tomcat 5x Log4j JUnit framework Mock Objects RSS Apache Ant 17 Java Developer ConocoPhillips Bartlesville OK September 2013 to March 2014 Responsibilities Actively participated in the daily SCRUM meetings to produce quality deliverables within time Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Hibernate System was built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Facade Business Delegate Singleton Data Access Object Designed the front end using JSP AJAX JQuery JSF Designed and implemented the application using JSP Spring MVC Spring IOC Spring Annotations Spring AOP Spring Transactions Hibernate JDBC ANT Oracle and WebSphere app server Used Spring Framework for Dependency injection Developed Web Services to allow communication between application through SOAP over HTTP Used SVN version control tool Automated the build process by writing ANT build scripts Wrote SQL queries stored procedures modifications to existing database structure as required for addition of new features using Oracle database Involved in installing and configuring Eclipse and Maven for development Developed various UML diagrams Configured and customized logs using Log4J and used JUnit for unit testing Environment Java JavaScript Hibernate Spring AGILE Methodology SCRUM JSP Servlet XML Java Beans Design Patterns SOAP Web services Log4J JUnit SVN Oracle Eclipse Maven Java Developer Divine Limited Hyderabad Telangana January 2012 to July 2013 Responsibilities Worked on the development and testing of the infotainment module using Agile SCRUM methodologies Developed Struts based presentation layer Hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Designed and developed persistence layer designed on ORM framework principles and developed it using HibernateJPA and DAO design pattern Developed Server side components using spring framework Used JBoss Drools as the business rules engine to create and maintain the Business rules and Drools Guvnor as the Business Rules manager Developed the user interfaces using Angular JS Java Script HTML5 DHTML CSS3 and AJAX Created Unit test cases using Junit and used Log4J for logging Used SOAP UI for testing the SOAP web services Developed PLSQL scripts functions triggers and stored procedures for the Oracle 10 g database Developed a test report using Karma Environment AgileSCRUM Java 16 struts 20 Hibernate 30 JBoss Drools Drools Guvnor Business Rules Education Bachelors in Electronics and Communication Engineering in Electronics and Communication Engineering Vignans Lara Institute of Technology and Science in India Skills Eclipse Java Java technologies Jax Jaxb Jaxp Jaxws Jboss Jms jquery Jsp Rmi Servlets C Dtd Git Php Scripting Svn Xml Additional Information Technical Skills Programming Languages Java C C PLSQL Core Java Concepts Collections Generics Multithreading Serialization Exception Handling RMI File IO Java Technologies Java JEE JDBC Servlets JSP IDEs Eclipse Web Services SOAP WSDL JAXWS UDDI JAXRS REST Jersey Web Application Servers Apache Tomcat Web Logic Web Sphere and JBOSS Operating Systems Windows 2000XP7 UNIXLINUX Databases Oracle SQL Server MySQL Messaging Systems JMS IBMMQ Series Active MQ Scripting languages Java Script AJAX Java script libraries JQuery DOJO PHP XML technologies XML DTD XSD XSLT XPATH JAXP JAXB Protocols SOAP HTTP HTTPS FTP RMI SMTP SVN Tools CVS GIT SVN Tools Log4j JUnit MUnit ESB MULE ESB",
    "extracted_keywords": [
        "Sr",
        "Mule",
        "Soft",
        "ESB",
        "Integration",
        "Developer",
        "Sr",
        "Mule",
        "Soft",
        "ESB",
        "Integration",
        "span",
        "lDeveloperspan",
        "Sr",
        "Mule",
        "Soft",
        "ESB",
        "Integration",
        "Developer",
        "Mutual",
        "Omaha",
        "Bank",
        "years",
        "experience",
        "Software",
        "design",
        "development",
        "activities",
        "requirement",
        "analysis",
        "design",
        "implementations",
        "testing",
        "client",
        "server",
        "applications",
        "Java",
        "J2EE",
        "Mule",
        "Soft",
        "technologies",
        "application",
        "Cloud",
        "Hub",
        "Experience",
        "Mule",
        "Soft",
        "MMC",
        "enterprise",
        "release",
        "Experience",
        "Mule",
        "administration",
        "configuration",
        "Created",
        "HTTP",
        "outbound",
        "flows",
        "transformation",
        "security",
        "application",
        "Implementation",
        "custom",
        "transformations",
        "Mule",
        "Data",
        "Mapper",
        "Data",
        "Weave",
        "Data",
        "transformations",
        "Mule",
        "Flow",
        "Experience",
        "MUnit",
        "unit",
        "testing",
        "mule",
        "Recovery",
        "failure",
        "records",
        "services",
        "XML",
        "applications",
        "MQ",
        "Git",
        "hub",
        "SVN",
        "version",
        "source",
        "usage",
        "Maven",
        "scripts",
        "build",
        "process",
        "use",
        "cases",
        "diagrams",
        "activity",
        "diagrams",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "SpringDAO",
        "transaction",
        "management",
        "Handson",
        "experience",
        "implementation",
        "Hibernate",
        "Spring",
        "framework",
        "Developed",
        "Struts",
        "presentation",
        "layer",
        "Hibernate",
        "DAO",
        "layer",
        "Spring",
        "Dependency",
        "injection",
        "ORM",
        "Web",
        "modules",
        "functions",
        "store",
        "procedures",
        "SQL",
        "PLSQL",
        "application",
        "Wrote",
        "database",
        "SQL",
        "PLSQL",
        "Oracle",
        "database",
        "Clear",
        "Case",
        "code",
        "depository",
        "location",
        "defects",
        "QC",
        "support",
        "maintenance",
        "customization",
        "Quick",
        "learner",
        "ability",
        "deadlines",
        "work",
        "pressure",
        "analytical",
        "problem",
        "skills",
        "communication",
        "skills",
        "Work",
        "Experience",
        "Sr",
        "Mule",
        "Soft",
        "ESB",
        "Integration",
        "Developer",
        "Mutual",
        "Omaha",
        "Bank",
        "Phoenix",
        "AZ",
        "March",
        "Present",
        "Project",
        "Mobile",
        "digital",
        "paymentsHoa",
        "Data",
        "Integration",
        "Project",
        "Description",
        "Mobile",
        "digital",
        "paymentsHoa",
        "Data",
        "Integration",
        "enterprise",
        "application",
        "Mulesoft",
        "Salesforce",
        "end",
        "Java",
        "Microservice",
        "layers",
        "applications",
        "project",
        "Apis",
        "data",
        "Mulsoft",
        "integration",
        "layer",
        "business",
        "logic",
        "picture",
        "Mulesoft",
        "Apis",
        "HOA",
        "partners",
        "vendors",
        "operations",
        "payments",
        "reconsilation",
        "reports",
        "wire",
        "transfer",
        "check",
        "processing",
        "stop",
        "checks",
        "AMUI",
        "application",
        "WMQ",
        "source",
        "updates",
        "Omaha",
        "users",
        "information",
        "updates",
        "call",
        "database",
        "Responsibilities",
        "development",
        "phase",
        "validations",
        "business",
        "logic",
        "implementation",
        "application",
        "MuleSoft",
        "ESB",
        "build",
        "services",
        "systems",
        "systems",
        "Systems",
        "middleware",
        "thirdparty",
        "system",
        "customer",
        "side",
        "system",
        "MULE",
        "ESB",
        "artifacts",
        "flows",
        "MULE",
        "configuration",
        "files",
        "application",
        "SOAP",
        "REST",
        "services",
        "MULE",
        "ESB",
        "calls",
        "validation",
        "service",
        "input",
        "exceptions",
        "Flows",
        "Sub",
        "Exception",
        "strategy",
        "DataWeave",
        "transformation",
        "Mule",
        "configuration",
        "Mule",
        "Batch",
        "processing",
        "data",
        "batch",
        "processing",
        "capabilities",
        "DataWeave",
        "payloads",
        "Mule",
        "flow",
        "variables",
        "record",
        "variables",
        "connectors",
        "File",
        "FILE",
        "SFTP",
        "IMAP",
        "HTTP",
        "Oracle",
        "database",
        "Salesforce",
        "CXF",
        "RAML",
        "file",
        "AnyPoint",
        "Studio",
        "flows",
        "business",
        "logic",
        "products",
        "JIRA",
        "confluence",
        "Mule",
        "Data",
        "sources",
        "Database",
        "topics",
        "WMQ",
        "transformations",
        "integration",
        "layer",
        "CloudHub",
        "connector",
        "flows",
        "alerts",
        "exceptions",
        "records",
        "recovery",
        "http",
        "outbound",
        "custom",
        "Java",
        "XSLT",
        "transformers",
        "security",
        "Mule",
        "WSSecurity",
        "transformers",
        "Security",
        "Mulesoft",
        "ESB",
        "endpoint",
        "OAuth",
        "Used",
        "Salesforce",
        "connector",
        "application",
        "data",
        "bactch",
        "processing",
        "Jenkins",
        "CICD",
        "deployment",
        "strategy",
        "Request",
        "Response",
        "transformers",
        "Custom",
        "Components",
        "Muleconfigxml",
        "Integrated",
        "Mule",
        "ESB",
        "system",
        "MQ",
        "Http",
        "File",
        "system",
        "SFTP",
        "components",
        "File",
        "Transport",
        "SMTP",
        "Transport",
        "FTPSFTP",
        "Transport",
        "JDBC",
        "Connector",
        "Transaction",
        "Manager",
        "MUnit",
        "unit",
        "testing",
        "Environment",
        "RAML",
        "JDBC",
        "Connector",
        "Files",
        "FTP",
        "SFTP",
        "MQ",
        "DataWeave",
        "Selector",
        "Expressions",
        "XPath",
        "DataMapper",
        "Postman",
        "Exception",
        "Handling",
        "Salesforce",
        "MUnit",
        "CloudHub",
        "Agile",
        "OAuth",
        "SOAP",
        "REST",
        "Jenkins",
        "Maven",
        "salesforce",
        "Git",
        "Sr",
        "Mule",
        "Soft",
        "ESB",
        "Integration",
        "Developer",
        "PetSmart",
        "Phoenix",
        "AZ",
        "January",
        "February",
        "Project",
        "Customer",
        "Data",
        "Foundation",
        "Project",
        "Description",
        "Customer",
        "Data",
        "Foundation",
        "enterprise",
        "application",
        "MDM",
        "ODS",
        "SMS",
        "OKTA",
        "Integration",
        "design",
        "structures",
        "Mule",
        "ESB",
        "time",
        "Batch",
        "Processing",
        "RESTFUL",
        "APIs",
        "MULE",
        "ESB",
        "Mule",
        "administration",
        "configuration",
        "Responsibilities",
        "analysis",
        "design",
        "implementation",
        "deployment",
        "SDLC",
        "Mulesoft",
        "project",
        "AGILE",
        "Process",
        "Experience",
        "Mulesoft",
        "AnyPoint",
        "API",
        "Platform",
        "APIs",
        "REST",
        "APIs",
        "RAML",
        "layer",
        "API",
        "Architecture",
        "Data",
        "Mapper",
        "Mapping",
        "DataWeave",
        "MULE",
        "ESB",
        "Custom",
        "transformation",
        "endtoend",
        "development",
        "Project",
        "application",
        "functionality",
        "respect",
        "client",
        "requirement",
        "Developed",
        "RESTFUL",
        "SOAP",
        "Web",
        "Services",
        "Mule",
        "ESB",
        "SOA",
        "Architecture",
        "RESTFUL",
        "Web",
        "services",
        "data",
        "format",
        "JSON",
        "XML",
        "interface",
        "party",
        "applications",
        "http",
        "outbound",
        "flows",
        "orchestration",
        "XPath",
        "Mule",
        "ESB",
        "Experience",
        "connectors",
        "Mule",
        "SAP",
        "HL7",
        "HTTP",
        "FILE",
        "Database",
        "Sales",
        "Force",
        "SVN",
        "version",
        "Source",
        "Developed",
        "XML",
        "Schemas",
        "Schemas",
        "validation",
        "application",
        "Cloud",
        "Hub",
        "Experience",
        "MUnit",
        "unit",
        "testing",
        "flows",
        "trouble",
        "problem",
        "Integrations",
        "Review",
        "extent",
        "changes",
        "code",
        "environment",
        "system",
        "performance",
        "Environment",
        "Mule",
        "Anypoint",
        "Studio",
        "SVN",
        "Java",
        "RAML",
        "MMC",
        "Cloud",
        "Hub",
        "Web",
        "Services",
        "Web",
        "Methods",
        "Developer",
        "JDBC",
        "Broker",
        "HTTPHTTPS",
        "XML",
        "JSON",
        "Mulesoft",
        "Developer",
        "US",
        "Foods",
        "Chicago",
        "IL",
        "February",
        "December",
        "Project",
        "Description",
        "Digital",
        "Platform",
        "initiative",
        "companys",
        "ecommerce",
        "platform",
        "Digital",
        "Platform",
        "cloud",
        "web",
        "front",
        "Demandware",
        "Order",
        "Management",
        "System",
        "cloud",
        "fulfillment",
        "center",
        "GENCO",
        "Digital",
        "Integration",
        "project",
        "derivative",
        "Digital",
        "Platform",
        "program",
        "interfaces",
        "systems",
        "Inventory",
        "SAP",
        "Order",
        "Management",
        "System",
        "Manhattan",
        "Fulfillment",
        "System",
        "GENCO",
        "Payment",
        "Services",
        "Payeezy",
        "SVS",
        "Sales",
        "Tax",
        "Services",
        "Avalara",
        "systems",
        "services",
        "Responsibilities",
        "Part",
        "team",
        "Microservices",
        "architecture",
        "Design",
        "services",
        "architecture",
        "Develop",
        "APIs",
        "Contract",
        "approach",
        "define",
        "RAML",
        "API",
        "Interface",
        "interface",
        "Mule",
        "ESB",
        "Working",
        "CloudHub",
        "Admin",
        "APIs",
        "API",
        "Manager",
        "Runtime",
        "Manager",
        "policies",
        "Integrated",
        "logs",
        "Splunk",
        "New",
        "Relic",
        "Define",
        "devops",
        "practices",
        "CICD",
        "applications",
        "Maven",
        "CricleCI",
        "Kibana",
        "Docker",
        "AWS",
        "teams",
        "countries",
        "Experience",
        "project",
        "management",
        "applications",
        "Salesforce",
        "OKTA",
        "analysis",
        "design",
        "implementation",
        "deployment",
        "SDLC",
        "Mulesoft",
        "project",
        "AGILE",
        "Process",
        "Lead",
        "Developer",
        "enterprise",
        "development",
        "API",
        "Enablement",
        "integration",
        "Mule",
        "ESB",
        "API",
        "usage",
        "Data",
        "weave",
        "Transformer",
        "flows",
        "message",
        "integration",
        "techniques",
        "JMS",
        "deliverables",
        "sprint",
        "Implementation",
        "methodology",
        "Lead",
        "architecture",
        "planning",
        "MULESOFT",
        "system",
        "systems",
        "Digital",
        "Platform",
        "message",
        "enricher",
        "filters",
        "flow",
        "controls",
        "scatter",
        "Document",
        "standards",
        "guideline",
        "plans",
        "APIs",
        "MuleSoft",
        "Define",
        "platform",
        "POT",
        "Mule",
        "ESB",
        "Integration",
        "capabilities",
        "CICD",
        "Mule",
        "Integrations",
        "Maven",
        "SVNGit",
        "framework",
        "Routing",
        "Logging",
        "Exception",
        "solution",
        "design",
        "document",
        "design",
        "coding",
        "operation",
        "standards",
        "Technical",
        "Guideline",
        "Design",
        "Development",
        "teams",
        "test",
        "cases",
        "testing",
        "solution",
        "assessments",
        "solutions",
        "RESTFUL",
        "SOAP",
        "Web",
        "Services",
        "Mule",
        "ESB",
        "SOA",
        "Architecture",
        "Environment",
        "Mule",
        "Anypoint",
        "Studio",
        "SVN",
        "Java",
        "RAML",
        "MMC",
        "Cloud",
        "Hub",
        "Web",
        "Services",
        "Web",
        "Methods",
        "Developer",
        "JDBC",
        "Broker",
        "HTTPHTTPS",
        "JSON",
        "Java",
        "Developer",
        "Wells",
        "Fargo",
        "Minneapolis",
        "MN",
        "April",
        "January",
        "Responsibilities",
        "modules",
        "application",
        "Spring",
        "MVC",
        "architecture",
        "J2EE",
        "technologies",
        "Struts",
        "Framework",
        "Proof",
        "Concept",
        "POC",
        "Integrated",
        "Spring",
        "Dependency",
        "Injection",
        "IOC",
        "layers",
        "application",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "phases",
        "project",
        "Rational",
        "Unified",
        "Process",
        "RUP",
        "Agile",
        "SCRUM",
        "methodology",
        "sprint",
        "planning",
        "use",
        "case",
        "diagrams",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "Rational",
        "Rose",
        "application",
        "Struts",
        "MVC",
        "Framework",
        "code",
        "repository",
        "Clear",
        "case",
        "codebase",
        "sync",
        "phases",
        "projects",
        "Struts",
        "validation",
        "tiles",
        "framework",
        "presentation",
        "layer",
        "user",
        "interface",
        "JSP",
        "JSP",
        "Tag",
        "libraries",
        "Struts",
        "Tag",
        "complexities",
        "application",
        "action",
        "classes",
        "session",
        "beans",
        "requests",
        "user",
        "Developed",
        "JSP",
        "custom",
        "tags",
        "web",
        "tier",
        "web",
        "pages",
        "Struts",
        "MVC",
        "Paradigm",
        "components",
        "Action",
        "Mapping",
        "Action",
        "class",
        "Dispatch",
        "action",
        "class",
        "Action",
        "Form",
        "bean",
        "Servlets",
        "module",
        "XML",
        "request",
        "parse",
        "XML",
        "JDBC",
        "programs",
        "Oracle",
        "MySQL",
        "databases",
        "SQL",
        "PLSQL",
        "Oracle",
        "data",
        "web",
        "services",
        "Client",
        "Server",
        "codes",
        "Environment",
        "Core",
        "Java",
        "J2EE",
        "Windows",
        "server",
        "EJB",
        "MDB",
        "Web",
        "Services",
        "Servlets",
        "Spring",
        "Framework",
        "JSP",
        "JDBC",
        "JUnit",
        "Struts",
        "Oracle",
        "Eclipse",
        "XML",
        "JavaScript",
        "HTML",
        "WebLogic",
        "PLSQL",
        "Java",
        "Developer",
        "Cisco",
        "Raleigh",
        "NC",
        "September",
        "March",
        "Responsibilities",
        "project",
        "Agile",
        "SCRUM",
        "methodology",
        "meetings",
        "development",
        "UI",
        "HTML",
        "JSP",
        "JSP",
        "Custom",
        "Tag",
        "AJAX",
        "Developed",
        "International",
        "Error",
        "Correction",
        "Screens",
        "custom",
        "end",
        "forms",
        "XML",
        "XSLT",
        "Angular",
        "JS",
        "JQuery",
        "Created",
        "web",
        "services",
        "interface",
        "runtime",
        "engine",
        "WebSphere",
        "IDE",
        "core",
        "Java",
        "Multi",
        "threading",
        "Collections",
        "framework",
        "Object",
        "analysis",
        "design",
        "OOAD",
        "implementation",
        "Java",
        "J2EE",
        "Technologies",
        "J2EE",
        "design",
        "patterns",
        "DAO",
        "Business",
        "Delegate",
        "business",
        "flow",
        "Angular",
        "JS",
        "Bootstrap",
        "Web",
        "Services",
        "dash",
        "board",
        "Persistence",
        "layer",
        "Hibernate",
        "DAO",
        "data",
        "base",
        "interaction",
        "XML",
        "Technologies",
        "client",
        "side",
        "designing",
        "validation",
        "HTML",
        "DHTML",
        "JavaScript",
        "JSP",
        "ANT",
        "generating",
        "system",
        "JUnit",
        "test",
        "cases",
        "application",
        "Log4J",
        "errors",
        "code",
        "database",
        "operations",
        "queries",
        "Oracle",
        "g",
        "SVN",
        "version",
        "control",
        "Environment",
        "Java16",
        "Struts",
        "EJB",
        "JavaJ2EE",
        "J2EE",
        "patterns",
        "Bootstrap",
        "Angular",
        "JS",
        "Web",
        "service",
        "JDBC",
        "Spring",
        "WSDL",
        "JQuery",
        "Hibernate",
        "Log4J",
        "XML",
        "JUnit",
        "Oracle",
        "g",
        "WebSphere",
        "UML",
        "Design",
        "HTML",
        "JavaScript",
        "SVN",
        "JavaJ2EE",
        "Developer",
        "Mobiware",
        "Inc",
        "Irving",
        "TX",
        "March",
        "August",
        "Responsibilities",
        "requirements",
        "analysis",
        "design",
        "testing",
        "phases",
        "use",
        "case",
        "diagrams",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "part",
        "Design",
        "Phase",
        "Rational",
        "Rose",
        "Experience",
        "Agile",
        "Methodologies",
        "Use",
        "Cases",
        "Sequence",
        "Diagrams",
        "MSVisio",
        "Application",
        "Java",
        "Financial",
        "platform",
        "integration",
        "technologies",
        "Struts",
        "Spring",
        "Web",
        "Flow",
        "Inversion",
        "Control",
        "module",
        "spring",
        "framework",
        "application",
        "MVC",
        "Architecture",
        "Hibernate",
        "spring",
        "frameworks",
        "User",
        "Interface",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "Cascading",
        "Style",
        "Sheets",
        "CSS",
        "XML",
        "Enterprise",
        "Java",
        "Beans",
        "Stateless",
        "Session",
        "transactions",
        "service",
        "providers",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "JMS",
        "messages",
        "web",
        "services",
        "Developed",
        "Web",
        "Services",
        "data",
        "transfer",
        "client",
        "Apache",
        "Axis",
        "SOAP",
        "WSDL",
        "UDDI",
        "MQSeries",
        "pointpoint",
        "publishersubscriber",
        "Domains",
        "Exchange",
        "information",
        "Messages",
        "XML",
        "documents",
        "XSL",
        "files",
        "Payment",
        "Transaction",
        "Reserve",
        "Transaction",
        "systems",
        "J2EE",
        "Design",
        "patterns",
        "Singleton",
        "Service",
        "Locator",
        "Business",
        "Delegate",
        "DAO",
        "Transfer",
        "Object",
        "SOA",
        "AJAX",
        "Web",
        "Application",
        "JavaScript",
        "Data",
        "Validations",
        "Subversion",
        "version",
        "control",
        "System",
        "Build",
        "ANT",
        "Script",
        "application",
        "Log4J",
        "JUnit",
        "Framework",
        "unit",
        "testing",
        "java",
        "classes",
        "Environment",
        "Java",
        "Struts",
        "Spring",
        "EJB",
        "Hibernate",
        "Oracle10",
        "g",
        "WSDL",
        "Web",
        "Services",
        "XML",
        "NetBeans",
        "IDE",
        "HTML",
        "CSS",
        "JavaScript",
        "Ajax",
        "JQuery",
        "Apache",
        "Tomcat",
        "Log4j",
        "JUnit",
        "framework",
        "Mock",
        "RSS",
        "Apache",
        "Ant",
        "Java",
        "Developer",
        "ConocoPhillips",
        "Bartlesville",
        "September",
        "March",
        "Responsibilities",
        "SCRUM",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "J2EE",
        "design",
        "Spring",
        "Inversion",
        "Control",
        "IOC",
        "architecture",
        "Hibernate",
        "System",
        "ModelViewController",
        "MVC",
        "architecture",
        "application",
        "principles",
        "design",
        "patterns",
        "Facade",
        "Business",
        "Delegate",
        "Singleton",
        "Data",
        "Access",
        "Object",
        "end",
        "JSP",
        "AJAX",
        "JQuery",
        "JSF",
        "application",
        "JSP",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "Annotations",
        "Spring",
        "AOP",
        "Spring",
        "Transactions",
        "Hibernate",
        "JDBC",
        "ANT",
        "Oracle",
        "WebSphere",
        "app",
        "server",
        "Spring",
        "Framework",
        "Dependency",
        "injection",
        "Developed",
        "Web",
        "Services",
        "communication",
        "application",
        "SOAP",
        "HTTP",
        "SVN",
        "version",
        "control",
        "tool",
        "build",
        "process",
        "ANT",
        "scripts",
        "Wrote",
        "SQL",
        "procedures",
        "modifications",
        "database",
        "structure",
        "addition",
        "features",
        "Oracle",
        "database",
        "Eclipse",
        "Maven",
        "development",
        "UML",
        "diagrams",
        "Configured",
        "logs",
        "Log4J",
        "JUnit",
        "unit",
        "testing",
        "Environment",
        "Java",
        "JavaScript",
        "Hibernate",
        "Spring",
        "AGILE",
        "Methodology",
        "JSP",
        "Servlet",
        "XML",
        "Java",
        "Beans",
        "Design",
        "Patterns",
        "SOAP",
        "Web",
        "services",
        "Log4J",
        "JUnit",
        "SVN",
        "Oracle",
        "Eclipse",
        "Maven",
        "Java",
        "Developer",
        "Divine",
        "Limited",
        "Hyderabad",
        "Telangana",
        "January",
        "July",
        "Responsibilities",
        "development",
        "testing",
        "module",
        "Agile",
        "SCRUM",
        "methodologies",
        "Developed",
        "Struts",
        "presentation",
        "layer",
        "Hibernate",
        "DAO",
        "layer",
        "Spring",
        "Dependency",
        "injection",
        "ORM",
        "Web",
        "modules",
        "persistence",
        "layer",
        "ORM",
        "framework",
        "principles",
        "HibernateJPA",
        "DAO",
        "design",
        "pattern",
        "Server",
        "side",
        "components",
        "spring",
        "framework",
        "JBoss",
        "Drools",
        "business",
        "engine",
        "Business",
        "rules",
        "Drools",
        "Guvnor",
        "Business",
        "Rules",
        "manager",
        "user",
        "interfaces",
        "JS",
        "Java",
        "Script",
        "HTML5",
        "DHTML",
        "CSS3",
        "AJAX",
        "Created",
        "Unit",
        "test",
        "cases",
        "Junit",
        "Log4J",
        "SOAP",
        "UI",
        "SOAP",
        "web",
        "services",
        "PLSQL",
        "scripts",
        "functions",
        "triggers",
        "procedures",
        "Oracle",
        "g",
        "database",
        "test",
        "report",
        "Karma",
        "Environment",
        "AgileSCRUM",
        "Java",
        "struts",
        "Hibernate",
        "JBoss",
        "Drools",
        "Drools",
        "Guvnor",
        "Business",
        "Rules",
        "Education",
        "Bachelors",
        "Electronics",
        "Communication",
        "Engineering",
        "Electronics",
        "Communication",
        "Engineering",
        "Vignans",
        "Lara",
        "Institute",
        "Technology",
        "Science",
        "India",
        "Skills",
        "Eclipse",
        "Java",
        "Java",
        "Jax",
        "Jaxb",
        "Jaxp",
        "Jaxws",
        "Jboss",
        "Jms",
        "jquery",
        "Jsp",
        "Rmi",
        "Servlets",
        "C",
        "Git",
        "Php",
        "Scripting",
        "Svn",
        "Xml",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Programming",
        "Languages",
        "Java",
        "C",
        "C",
        "PLSQL",
        "Core",
        "Java",
        "Concepts",
        "Collections",
        "Generics",
        "Multithreading",
        "Serialization",
        "Exception",
        "Handling",
        "RMI",
        "File",
        "IO",
        "Java",
        "Technologies",
        "Java",
        "JEE",
        "JDBC",
        "Servlets",
        "JSP",
        "IDEs",
        "Eclipse",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "JAXWS",
        "UDDI",
        "JAXRS",
        "REST",
        "Jersey",
        "Web",
        "Application",
        "Servers",
        "Apache",
        "Tomcat",
        "Web",
        "Logic",
        "Web",
        "Sphere",
        "JBOSS",
        "Operating",
        "Systems",
        "Windows",
        "2000XP7",
        "UNIXLINUX",
        "Oracle",
        "SQL",
        "Server",
        "MySQL",
        "Messaging",
        "Systems",
        "JMS",
        "IBMMQ",
        "Series",
        "Active",
        "MQ",
        "Scripting",
        "languages",
        "Java",
        "Script",
        "AJAX",
        "Java",
        "script",
        "JQuery",
        "DOJO",
        "PHP",
        "XML",
        "technologies",
        "XML",
        "DTD",
        "XSD",
        "XSLT",
        "XPATH",
        "JAXP",
        "JAXB",
        "Protocols",
        "SOAP",
        "HTTP",
        "HTTPS",
        "FTP",
        "RMI",
        "SMTP",
        "SVN",
        "Tools",
        "CVS",
        "GIT",
        "SVN",
        "Tools",
        "Log4j",
        "JUnit",
        "MUnit",
        "ESB",
        "MULE",
        "ESB"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:52:43.773763",
    "resume_data": "Sr Mule Soft ESB Integration Developer Sr Mule Soft ESB Integration span lDeveloperspan Sr Mule Soft ESB Integration Developer Mutual of Omaha Bank 7 years of experience in Software design and development activities including requirement analysis design and implementations and testing of various client server based applications using Java and J2EE and Mule Soft technologies Worked on Deploying the Mule application to Cloud Hub Experience with Mule Soft MMC and enterprise release Experience with Mule administration configuration and tuning Created HTTP inbound and outbound flows for transformation and security of Mule application Implementation of custom transformations in Mule and used Data Mapper and Data Weave in Data transformations for in Mule Flow Experience with MUnit for mocking and unit testing mule flows Recovery of lost or failure records Created services to integrate with XML based applications Worked on messaging using Active MQ Used Git hub and SVN for version and source control Extensive usage of Maven build scripts for automated the build process Involved in creating use cases diagrams activity diagrams sequence diagrams and class diagrams Worked on SpringDAO based declarative transaction management Handson experience in implementation of Hibernate and Spring framework Developed Struts based presentation layer Hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed functions and store procedures using SQL and PLSQL for the application Wrote database queries using SQL and PLSQL for accessing manipulating and updating Oracle database Worked on Clear Case to merge code and deploy them in to a central depository location Involved in fixing defects tracked them using QC Provided support and maintenance and customization Quick learner with ability to meet deadlines and work under pressure Excellent analytical and problem solving skills along with good oral and written communication skills Work Experience Sr Mule Soft ESB Integration Developer Mutual of Omaha Bank Phoenix AZ March 2018 to Present Project Mobile digital paymentsHoa Data Integration Project Description Mobile digital paymentsHoa Data Integration is an enterprise application that is used to integrate Mulesoft with Salesforce Back end Java Microservice layers and Net applications This project integrates with various backend Apis to send the data through Mulsoft which acts as an integration layer where the business logic comes into picture Mulesoft Apis are used by HOA partners and their vendors for various operations like making payments and check their daily reconsilation reports do wire transfer check processing stop checks etc Also developed AMUI based application which consists of WMQ as source where any updates to mutual of Omaha users personal information updates triggers the call and updates the database Responsibilities Involved in the development phase developing validations and business logic implementation Developed the application using MuleSoft ESB build deployed the services Integrated the existing systems to newly developing systems and thirdParty Systems which acts as a middleware between the thirdparty system and the customer side system Created the MULE ESB artifacts created flows and configured the MULE configuration files and deployed the application Created and consumed SOAP and REST services and used MULE ESB to route various calls to do validation of service input and to handle exceptions Created Flows Sub Flows Exception strategy and DataWeave transformation in Mule configuration Used Mule Batch processing to handle the large data and used the batch processing capabilities of DataWeave to transform large payloads Worked on Mule flow variables record variables various connectors like File FILE SFTP IMAP HTTP Oracle database Salesforce CXF Imported RAML file in to AnyPoint Studio to generating the flows to implanting the business logic Used various Atlassian products like JIRA and confluence Developed Mule flows to integrate Data from various sources into Database from ActiveMQ topics and WMQ queues some transformations were also done at the integration layer Utilized CloudHub connector in the mule flows for triggered alerts during exceptions and to capture the failed records for further recovery Involved in creating http inbound outbound flows custom Java and XSLT transformers and security of Mule endpoint through WSSecurity Used different transformers exception handling testing Security of Mulesoft ESB endpoint through OAuth Used Salesforce connector to connect to a salesforce application to send bulk data using bactch processing Used Jenkins for CICD deployment strategy Created Request Response transformers Custom Components configured them in Muleconfigxml Integrated Mule ESB system by utilizing Active MQ Http File system and SFTP transports Extensively used mule components that include File Transport SMTP Transport FTPSFTP Transport JDBC Connector and Transaction Manager Used MUnit for unit testing Environment RAML JDBC Connector Files FTP SFTP Active MQ DataWeave Selector Expressions XPath DataMapper Postman Exception Handling Salesforce MUnit CloudHub Agile OAuth SOAP REST Jenkins Maven salesforce Git Sr Mule Soft ESB Integration Developer PetSmart Phoenix AZ January 2017 to February 2018 Project Customer Data Foundation Project Description Customer Data Foundation is an enterprise application that is used to integrate between MDM ODS to POS SMS and OKTA This Integration involves with various design structures of Mule ESB along with Real time and Batch Processing Involved in developing RESTFUL APIs using MULE ESB 380 and also involved in Mule administration configuration Responsibilities Responsible for the analysis design implementation and deployment of full SDLC of Mulesoft project using AGILE Process Experience in using Mulesoft AnyPoint API Platform on designing and implementing Mule APIs by documenting and designing REST APIs using RAML 10 and followed 3 layer API Architecture Migrated deprecated Data Mapper Mapping to DataWeave in MULE ESB Implemented Custom transformation Involved in the endtoend full development of the Project by understanding the existing application functionality and enhancing it with respect to the client requirement Developed RESTFUL and SOAP Web Services in Mule ESB based on SOA Architecture Designed and Implemented RESTFUL Web services using various data format JSON XML to provide an interface to the various third party applications Involved in creating http inbound outbound flows and orchestration using XPath using Mule ESB Experience in using various connectors in Mule such as SAP HL7 HTTP FILE Database and Sales Force etc Used SVN as version and Source control Developed XML Schemas and IS Schemas for validation Worked on Deploying the Mule application to Cloud Hub Experience in MUnit for mocking and unit testing mule flows Involved in trouble shooting and problem solving of the Integrations Review to the extent possible changes in code and the environment that will affect system performance Environment Mule Anypoint Studio SVN Java 18 RAML 10 MMC Cloud Hub Web Services Web Methods Developer JDBC Broker HTTPHTTPS XML JSON Mulesoft Developer US Foods Chicago IL February 2016 to December 2016 Project Description Digital Platform is an initiative aimed at replacing the companys current ecommerce platform with a new Digital Platform consisting of a cloud based web front Demandware on premises Order Management System and a cloud based fulfillment center 3PL GENCO Digital Integration project is a derivative of Digital Platform program which is aimed at developing the required interfaces between various systems such as Inventory SAP Order Management System Manhattan and Fulfillment System GENCO Payment Services Payeezy SVS Sales Tax Services Avalara and various other systems services Responsibilities Part of the team responsible for creating Microservices based architecture Design and build services based on the defined architecture Develop APIs using Contract first approach define RAML Open API Interface and implement the interface using Mule ESB Working as CloudHub Admin for managing APIs API Manager Runtime Manager applying policies and configuring alerts Integrated logs with Splunk and New Relic Define and implement devops best practices of CICD for Mule applications using Maven CricleCI Kibana Docker AWS Worked with teams that are geographically distributed across countries Experience working in agile project management Extensively developed applications using Salesforce OKTA LDAP Responsible for the analysis design implementation and deployment of full SDLC of Mulesoft project using AGILE Process As a Lead Developer working on enterprise development by API Enablement and integration using Mule ESB and API Extensive usage of Data weave Transformer Developed flows using message integration techniques likewise JMS ActiveMQ Manage the deliverables per sprint Implementation follows agile methodology Lead for architecture and planning of a MULESOFT system that was integrated with multiple systems on Digital Platform Developed flows using message enricher filters and various flow controls like scatter gather Document standards guideline and strategic plans to develop APIs using MuleSoft Define and setup the platform and perform POT to prove the Mule ESB Integration capabilities Implement CICD for all Mule Integrations using Maven SVNGit Define the common framework Routing Logging Exception handling Deliver the solution design document that includes all the design coding and the operation standards Provide Technical Guideline to Design and Development teams Define and create test cases and conduct manual testing for implemented solution Provide ongoing assessments of deployed solutions Developed RESTFUL and SOAP Web Services in Mule ESB based on SOA Architecture Environment Mule Anypoint Studio SVN Java 18 RAML 10 MMC Cloud Hub Web Services Web Methods Developer JDBC Broker HTTPHTTPS XML JSON Java Developer Wells Fargo Minneapolis MN April 2015 to January 2016 Responsibilities All the modules of the application are based on Spring MVC architecture and J2EE technologies Implemented of Struts 2x Framework for the Proof of Concept POC Integrated Spring Dependency Injection IOC among different layers of an application Involved in various Software Development Life Cycle SDLC phases of the project which was modeled using Rational Unified Process RUP Implemented Agile SCRUM methodology involved in sprint planning Generated use case diagrams class diagrams and sequence diagrams using Rational Rose Implemented the application using Struts MVC Framework Maintained the code repository using Clear case for keeping codebase in sync with other phases of projects running simultaneously Used Struts validation and tiles framework in the presentation layer Developed user interface using JSP JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Created action classes and session beans to process the requests from the user Developed and used JSP custom tags in the web tier to dynamically generate web pages Worked with Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean Designed and implemented Servlets module to capture the XML as request and parse XML Extensively worked with JDBC programs using Oracle and MySQL databases and developed SQL and PLSQL for Oracle to process the data Enhanced the web services Client and Server codes Environment Core Java J2EE Windows server EJB MDB Web Services Servlets Spring Framework JSP JDBC JUnit Struts Oracle Eclipse XML JavaScript HTML RESTful Log4J WebLogic PLSQL Java Developer Cisco Raleigh NC September 2014 to March 2015 Responsibilities Worked on project using Agile SCRUM methodology And involved in daily stand up meetings Experienced in the development of UI using HTML JSP JSP Custom Tag and AJAX Developed International Error Correction Screens using custom front end forms using XML XSLT Angular JS and JQuery Created RESTful web services interface to Javabased runtime engine WebSphere used as IDE Worked on core Java Multi threading and Collections framework Object oriented analysis design OOAD and implementation using Java J2EE Technologies Worked on J2EE design patterns like DAO and Business Delegate to handle the business flow Angular JS Bootstrap and Web Services used for random dash board monitoring Persistence layer developed using Hibernate and implemented DAO to handle the data base interaction Experienced in using XML Technologies and client side designing and validation using HTML DHTML JavaScript and JSP Experienced in using ANT for generating system builds Used JUnit test cases to test the application Worked on Log4J for tracking errors and also debugging the code Performed database operations and queries using Oracle 10g Worked on using SVN for version control Environment Java16 Struts EJB 20 JavaJ2EE coding J2EE patterns Bootstrap Angular JS Web service JDBC Spring WSDL JQuery Hibernate Log4J XML JUnit Oracle 10g WebSphere UML Design HTML 5 JavaScript SVN JavaJ2EE Developer Mobiware Inc Irving TX March 2014 to August 2014 Responsibilities Actively participated in requirements gathering analysis design and testing phases Designed use case diagrams class diagrams and sequence diagrams as a part of Design Phase using Rational Rose Experience in working with Agile Methodologies Designed the Use Cases and Sequence Diagrams using MSVisio Application built on Java Financial platform which is an integration of several technologies like Struts and Spring Web Flow Used the Inversion of Control module of spring framework Developed the entire application implementing MVC Architecture integrating Hibernate and spring frameworks Designed User Interface using Java Server Pages JSP Cascading Style Sheets CSS and XML Developed the Enterprise Java Beans Stateless Session beans to handle different transactions of the service providers Implemented Service Oriented Architecture SOA using JMS for sending and receiving messages while creating web services Developed Web Services for data transfer from client to server and vice versa using Apache Axis SOAP WSDL and UDDI Extensively worked on MQSeries using pointpoint publishersubscriber messaging Domains for implementing Exchange of information through Messages Developed XML documents and generated XSL files for Payment Transaction and Reserve Transaction systems Implemented various J2EE Design patterns like Singleton Service Locator Business Delegate DAO Transfer Object and SOA Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Used Subversion to implement version control System Build ANT Script for the application and used Log4J for debugging Used JUnit Framework for the unit testing of all the java classes Environment Java 16 Struts 13 Spring 25 EJB 20 Hibernate 36 Oracle10g WSDL Web Services XML NetBeans 701 IDE HTML CSS JavaScript Ajax JQuery 131 Apache Tomcat 5x Log4j JUnit framework Mock Objects RSS Apache Ant 17 Java Developer ConocoPhillips Bartlesville OK September 2013 to March 2014 Responsibilities Actively participated in the daily SCRUM meetings to produce quality deliverables within time Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Hibernate System was built using ModelViewController MVC architecture Implemented the application using the concrete principles laid down by several design patterns such as Facade Business Delegate Singleton Data Access Object Designed the front end using JSP AJAX JQuery JSF Designed and implemented the application using JSP Spring MVC Spring IOC Spring Annotations Spring AOP Spring Transactions Hibernate JDBC ANT Oracle and WebSphere app server Used Spring Framework for Dependency injection Developed Web Services to allow communication between application through SOAP over HTTP Used SVN version control tool Automated the build process by writing ANT build scripts Wrote SQL queries stored procedures modifications to existing database structure as required for addition of new features using Oracle database Involved in installing and configuring Eclipse and Maven for development Developed various UML diagrams Configured and customized logs using Log4J and used JUnit for unit testing Environment Java JavaScript Hibernate Spring AGILE Methodology SCRUM JSP Servlet XML Java Beans Design Patterns SOAP Web services Log4J JUnit SVN Oracle Eclipse Maven Java Developer Divine Limited Hyderabad Telangana January 2012 to July 2013 Responsibilities Worked on the development and testing of the infotainment module using Agile SCRUM methodologies Developed Struts based presentation layer Hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Designed and developed persistence layer designed on ORM framework principles and developed it using HibernateJPA and DAO design pattern Developed Server side components using spring framework Used JBoss Drools as the business rules engine to create and maintain the Business rules and Drools Guvnor as the Business Rules manager Developed the user interfaces using Angular JS Java Script HTML5 DHTML CSS3 and AJAX Created Unit test cases using Junit and used Log4J for logging Used SOAP UI for testing the SOAP web services Developed PLSQL scripts functions triggers and stored procedures for the Oracle 10g database Developed a test report using Karma Environment AgileSCRUM Java 16 struts 20 Hibernate 30 JBoss Drools Drools Guvnor Business Rules Education Bachelors in Electronics and Communication Engineering in Electronics and Communication Engineering Vignans Lara Institute of Technology and Science in India Skills Eclipse Java Java technologies Jax Jaxb Jaxp Jaxws Jboss Jms jquery Jsp Rmi Servlets C Dtd Git Php Scripting Svn Xml Additional Information Technical Skills Programming Languages Java C C PLSQL Core Java Concepts Collections Generics Multithreading Serialization Exception Handling RMI File IO Java Technologies Java JEE JDBC Servlets JSP IDEs Eclipse Web Services SOAP WSDL JAXWS UDDI JAXRS REST Jersey Web Application Servers Apache Tomcat Web Logic Web Sphere and JBOSS Operating Systems Windows 2000XP7 UNIXLINUX Databases Oracle SQL Server MySQL Messaging Systems JMS IBMMQ Series Active MQ Scripting languages Java Script AJAX Java script libraries JQuery DOJO PHP XML technologies XML DTD XSD XSLT XPATH JAXP JAXB Protocols SOAP HTTP HTTPS FTP RMI SMTP SVN Tools CVS GIT SVN Tools Log4j JUnit MUnit ESB MULE ESB",
    "unique_id": "556f1357-64d7-4f57-a1c6-7774c5c8b1bf"
}