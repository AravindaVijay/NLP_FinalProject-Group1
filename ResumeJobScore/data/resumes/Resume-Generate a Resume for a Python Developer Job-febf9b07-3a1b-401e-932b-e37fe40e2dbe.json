{
    "clean_data": "Senior JavaRESTful Developer Senior span lJavaspanRESTful span lDeveloperspan Senior JavaRESTful Developer Capital One McLean VA More than 14 years of professional experience in enterprise application design development and integration using J2EE technology in various domains including financial healthcare and mortgages Solid experience in the analysis design development implementation and testing of clientserver Internet Intranet systems and web based applications Two years of experience in Forgerock OpenAM and OpenDJ solutions implemented in AWS EC2 instances and using DevOps tools such as Jenkins 2 Nexus Artifactory Implementing scripts in Java and Shell Scripts Experience using LDAP for searches adds modify delete Experience in Amazon Web Services AWS using various tools such as EC2 S3 Route53 ElastiCache CloudWatch Deployment Tools such as MAVEN Experience with RESTful services based on Jersey Framework handling various HTTP responses and using both JSON and XML Interacting with UI code in AngularJS or NodeJS through an Ajax based component to call orchectration layer the APIs are called handling request and responses Java EE for web application development using various frameworks and various design patterns Front End development using Java Server Pages JSP for data display and dynamic web pages using various jsp tags and basic java coding to keep the front layer light Javascript JS for data field manipulation and simple data formatting on fields labels and messaging App servers Tomcat Weblogic JBoss and Websphere Application Server to create access to file repositories databases through JNDI to various types of Command design pattern RDBM Databases such as DB2 and Oracle required JDBC specific drivers to create connections IBM solutions such as Websphere Portal Server to develop portlets to display portal content Portlets are extensions of Java Servlets and customized to perform a specific display purpose by acquiring data using jdbc without any business layer or data layer Portal Server connected through jdbc to DB2 by executing specific queries to get data from the tables Additional tables were created to obtain the data Deployment Process through the ant shell script that uses a buildxml configuration file to define the way JAR file and class components should be stored in the app server Indistinctively for Weblogic Websphere Tomcat or JBoss the ant tool servers to create WAR files to decouple front end files and EAR to encapsulate all components into one single deployment component that can later be decoupled between the web server and the app server Sponsorship required to work in the US Work Experience Senior JavaRESTful Developer Capital One McLean VA September 2015 to Present Project Forgerock Infra Set Up Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Participated on the migration from Multi Factor Authentication infrastructure implementation to the Single Sign On SSO OpenDJ infrastructure implementation Responsibilities Migrate Shell Scripts to install and configure OpenDJ on a separate AWS environment for SSO users Implement AWS EC2 instances on a 5 instance architecture for directory servers and replication servers Implement the Jenkins Jobs to build and deploy the tar into Artifactory and run the shell scripts to install and configure OpenDJ Project FORGOT MY PASSWORD Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java The goal of this project is to implement the FORGOT MY PASSWORD functionality for the Online Banking System I implemented various functionality for the FORGOTS APIs primarily working at the backend Responsibilities Code Unit Testing RESTful services using Chassis Framework based on Jersey Interacting with UI made of AngularJS and NodeJS Build using Maven and Deploy into Development Environment To implement a RESTful service to retrieve forgot username and password flow This was implemented using Jersey Framework under a standard framework called Chassis Project Enrollment Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Participated in the Enrollment Process for the Consumer Identity Online Banking App to enroll customers accounts into the mobile app Responsibilities Code Unit Testing RESTful services using Chassis Framework based on Jersey Interacting with UI made of AngularJS and NodeJS Build using Maven and Deploy into Development Environment To implement a RESTful service to retrieve forgot username and password flow This was implemented using Jersey Framework under a standard framework called Chassis Project Access Management Transition Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Migration from RSA to Forgerock Participated in the initial implementation of OpenAM and OpenDJ settings for Forgerock Responsibilities Code Unit Testing Build using Maven and and Deploy into Nexus a Custom Auth Module embedded in OpenAM 1200 Configure OpenIG 4 to route and redirect URLs to hide internal URLs Set up json files to establish the handlers and filters for the urls Configure OpenDJ to authenticate users through LDAP To implement a RESTful service to retrieve all unenrolled products a cardholder and a retail customer has This was implemented using Jersey Framework under a standard framework called Chassis Environment OpenAM OpenIG OpenDJ OpenIDConnect SAML OAuth2 RESTful eAPI Chassis Agile Lead JavaJ2EE eCommerce Developer Indra Sistemas Chicago IL February 2014 to November 2015 The goal of this project was to reduce one third of the operational costs by implementing a Websphere Commerce 7 solution and customize the Aurora Starter Store to include all Coppels eCommerce procedures Commerce 7 is a very customizable dynamic tool that involves the usage of REST and SOAP web services that interface with the store to validate user information obtain products and categories browse through products compare products add items to cart purchase process invoicing Additionally it can add various types of payment methods such as credit card barcode purchase cash deposit and others For credit card payments we used eGlobal service for credit validation and payment transactions That way we were able to work with Credit Card Payment with various credit card institutions such as Banamex Bancomer Banorte among other financial institutions in Mexico For geolocation we used Digital Element services For caching we used Softlayer to store static content and bring it from cache once the pages were called All Javabased components ran from Websphere Application Server WAS For defining part of the Solution Outline of this project we had to build UML diagrams to represent the Java Classes that would be used or extended from the Websphere Commerce In turn some sequence diagrams were written to represent the execution of the web services and to define which entities needed to be accessed This helped to work with some externa teams such as the SONIC team to know which web services to publish which ones would be accesses synchronously which ones asynchronously and which ones would need to be RESTful based Also we develo The web services were developed using SPRING framework using the STS IDE which enabled us to easily build the WDSL the XML and the stubs to interface with the web services within COPPEL To publish the web services we used SONIC message broker to asynchronously submit the requests to the web services and receive the response accordingly Both SOAP and RESTful services were published on under SONIC Before publishing the web services we used SOAPPUI to test the web services for all possible scenarios If XML fields were empty with the wrong data type or even implementing the scenarios defined in test case documents Aurora Starter store included a responsive front end based on JSPs CSS HTML5 javascript JSON to customize the front end On the middle tier we worked with JavaJ2EE to customize the data being sent from the front to the back end Commerce has a tight architecture so additional functionality needed to extend Command design patterns All product searches were performed using SOLR so it needs a dynamic table structure to store product categories products attributes product images etc These tables were stored on DB2 dababase implemented in a two clustered server environment for backup Also we accessed some Oracle databases for temporary storage of data which was in turn retrieved from the web services For this additional functionality was added outside the Websphere Commerce solution and access through an MVC approach using the same Websphere Application Server Queries were developed as SELECT INSERT and UPDATE statements to use the temporary data and so several STORED PROCEDURES were developed to retrieve this information every day and get it stored in the DB2 database COPPELs DBA would maintain these stored procedures after developed Responsibilities Define the Solution Outline including the functional design detailed level design store structure diagram product and category structure component diagram Resolve critical issues by installing new patches and open PMRs with IBM to get support Work with IBM in Chicago IL for configuring dynacache and execute performance testing Configure Websphere Commerce for internationalization patches Functional testing based on Software Requirement Specs and Functional Design Develop Testing Plan and defect control Environment Websphere Commerce 7 REST SOAP eGlobal Softlayer WAS JSP CSS HTML5 JS JSON DB2 Design Patterns Employer Indra Sistemas Address Av Ejercito Nacional 843 PH Java Senior Developer Col Granada Del Miguel Hidalgo CP June 2013 to November 2013 11520 Customer ISBAN Project Senior Software Developer Methodology Iterative Incremental max 3 cycles per iteration Location Queretaro Mexico Role Java Senior Developer Duration Jun 2013 to Nov 2013 This project intended to provide minor and major enhancement support in Java technology Resolving work orders for include additional functionality for various banking applications related to credit card fraud collections Responsibilities Receive work order and review the requirement documentation Visit customer to resolve queries regarding requirements Document a detailed design for the functionality to be included Code and Unit Test the functionality Prepare test cases in Junit Assist the customer in installing the new release when moving to QA Assist QA team on user acceptance testing Assist in moving to Production Environment JavaJ2EE Design Patterns Oracle Database Progress Database Clearquest Tool Clearcase Tool Customer Telefonica Project AMS Transition Mexico City Mexico Methodology AGILE 1 SPRINT per release 510 features per release under an Application Management Service approach Java Developer January 2013 to June 2013 The goal of this project was to transition 40 applications previously maintained by a company called Everis from which 16 applications were codewritten in JavaJ2EE including Java Design Patterns Initially a functional transition took place so I worked with the Everis consultant in understanding the application functionality Since no documentation was available we had formal meetings and minutes were documented to set proof that knowledge was being transitioned The majority of the java applications were related to managing internal assets such as mobile phones The code Everis wrote had no multilayer architecture and in some cases code was accessing from the JSP right directly to the Oracle database So we had to perform a code assessment to establish a measure of quality of the receiving code in order to justify in some cases the amount of time that would take to rewrite the code For all 16 applications I worked with other 6 people in implementing struts framework to decouple the JSPs from the code being executed in the Websphere web server container A standard base Action class was defined to be extended on each application transaction This way it was easier to keep track of the transactions being implemented We counted the number of transactions to the database to be executed and based on function point estimation we came to the amount of effort on each application to transition Once each application was ready with the proper coding standards and struts framework it had to be tested The tool used for tracking the enhancements on each application was Jira the MIND suite for handling requirements using Requirement Management RM and TestLink for defect registering Responsibilities Transition meetings with Everis consultants Elaborating minutes of meetings Code assessment for 4 Java applications Implement Struts framework for all 4 applications Test the applications register defects and resolve them Environment JavaJ2EE Design Patterns MVC Oracle 10i PLSQL Websphere Application Server J2EE Design Patterns Jira RM TestLink Employer PCS Computer System Mexico SA de CV Address Av Epigmenio Gonzalez 500 Fracc San Pablo CP 76130 Parque Tecnologico 6to Piso Queretaro Qro Mexico Customer General Electric Multinational Company Program Application Enhancement for Mexico Methodology Iterative Minor enhancements less than 1 month each Senior Java Developer GE Money Cincinnati OH April 2010 to December 2012 For this program I participate in various major and minor enhancements in JavaJ2EE for various applications Projects involved GE Aviation I traveled to Cincinnati OH to implement a Project Management workflow using SupportCentral tool GE Money for implementing a POC using Java Glassfish framework GE Fleet for implementing a java interface for Salesforcecom and implementing a foreign national exchange application to assist foreign people when getting transferred to another country CNBC on a project to fulfill the TV shows calendar for various TV channels The intention was to proof a small team in Mexico could resolve tickets with the same performance that in India Initially I went to Airoli India to get some training around all the processes and procedures related to software development For GE consumer finance I participate in the initial stages of ServiceNow implementation for ITIL asset management Responsibilities Elaborate detailed level design for all functionalities to be implemented Code and unit test the functionality Build the EAR file for deployment in QA and Production environment Elaborate test cases for the code to me implemented Build and deploy the application Manage the SVN tool for configuration management in code Environment SupportCentral Java Glassfish Salesforcecom ServiceNow JavaJ2EE Oracle 10i PLSQL SVN Employer TCS Address Insurgentes Sur 664 Piso 2 Col Del Valle Mxico DF 03100 Mexico DF Mexico Customer ISBAN Banking Project Supernet Empresas Methodology Iterative Incremental Location Queretaro Mexico Java Senior Developer February 2008 to April 2010 The goal of this project was to handle the 90 of the online banking transaction for Santander ISBAN center through the Supernet Empresas application to be available to all banking customers reducing costs of attending customers physically With this project many procedures were totally moved to online application which reduced the effort and amount of people bank affiliates needed to hire and train to perform all procedures This was a 300 people project handling various technologies In my case I worked in JavaJ2EE piece for user register transactions wired transfers and credit card payments IDE used was Eclipse using Tomcat server for coding and deploying the components in JBoss The application server used was Websphere Application Server Responsibilities To participate in the requirements meetings to define the online transaction for credit card requests Elaborate functional and detailed level design documents Participate in meetings with customer to approve detailed level design Code and Unit Test the functionality Elaborate test cases in JUnit Environment JavaJ2EE Design Patterns Struts EJB JPA Tomcat JBoss Junit Websphere Application Server Oracle 10i PLSQL Eclipse Customer Profuturo GNP Insurance Company Project Annuities System Afore System Java Senior Analyst Developer Iterative Incremental Mxico DF MX May 2006 to February 2008 Methodology TCS Unified Process Iterative Incremental 2 iterations for each phase Location Mexico City Mexico Role Java Senior Analyst Developer Duration May 2006 Feb 2008 The goal of this project was to migrate the existing MainframeCOBOL functions and CICS framework components to a web development application based on IBM Websphere Application Server DB2 and JavaJ2EE customized application in order to reduce costs in costly COBOL people and hire web developers and increase the speed of maintenance cycles This project involved a thorough understanding of the Annuities Model for Pensions and Afore similar to 301K A vision document was elaborated to understand the project goal which in turn centered the focus on reducing costs however initial estimations through 80K men hours to develop the entire application from scratch We had to count all the components to be developed and come to an estimate using UML Use Case Diagram and using Use Case Point estimation In addition to this we had to perform Data Modeling and develop the ETLs for migrating the mainframe database to an Oracle Database Responsibilities To participate in the initial stages of the project in the Vision document elaboration Elaborate Use Case Diagram Estimate the project using Use Case Points Elaborate uses case documents for 40 use cases Elaborate Functional Design documents using UML Activity Diagrams Component Diagrams High Level Sequence Diagrams Elaborate Detailed Level Design Documents using UML Class Diagrams UML Sequence Diagrams Elaborate Test Case Documents Environment JavaJ2EE Struts Websphere Application Server Oracle EJB JPA Junit Websphere Application Server Oracle 10i Eclipse Employer Vision Consulting Address Calle Kepler 11 Anzures 11590 Ciudad de Mxico DF Mexico Customer SAGARPA Secretary of Agriculture Project Budgeting System Methodology Waterfall code migration Java Senior Developer Mexico City MX September 2005 to May 2006 The goal of this project was to migrate the existing Visual Basic 6 application to a web development application in JavaJ2EE The customer initially provided documentation with screens and user Manual for the application which assisted in the estimation process A NET expert assisted in the code assessment and identified the code modules in Visual Basic that could be migrated to Java using VB Converter Java Edition Tool As part of the coding reuse policy standard we implemented the JavaJ2EE code framework using base classes that would be extended for each transaction The struts framework was incorporated to keep the view layer separated from the front end This strategy helped us to keep the screen coding and the business layer in parallel and since the screen coding involved a different coding process as Visual Basic code was read and analyzed and immediately after a Java component was written to follow the same algorithm Whenever applicable 30 of the times the VB Converter generated the Java code automatically based on Visual Basic code The business layer was developed using extreme programming XP based on the functional design document implementing Command Design patterns and access to the existing Oracle Database by using PLSQL queries Responsibilities Software Evaluation for VB Converter Java Edition tool Identify modules that was possible to translate into Java code Elaborate the functional design documents for business layer Establish the base classes for J2EE business layer Elaborate queries using PLSQL Environment Visual Basic 6 JavaJ2EE VB Converter Java Edition extreme programming Oracle  PLSQL Customer INMEGEN Government Health Ministry Project IBM Portlets Java Senior Developer Iterative Incremental Mxico DF MX April 2005 to September 2005 Duration Apr 2005 Sept 2005 The goal of this project was to implement a 28 cluster supercomputer to compute genomes of various organisms for scientific research The search engine would be accessed from all over the world and would include the scientific research performed at INMEGEN This was a Government investment that would contribute to DNA research of human genome and other organisms that genetically would be compatible for curing cancer and other terminal deceases The 28 cluster running under Linux SUSE would receive all requests from a Websphere Portal Server which included a search engine where scientists would enter the DNA chain to be searched in all scientific databases in the world eg Affymetrix The genome is represented as a string of letters A B X Y that can potentially be constructed of billions of patterns The search engine takes a small piece of that genome and compares it across the billions of DNA genomes on 12 databases and this is the reason of having a 28 cluster to perform the searches Despite of this we had to understand some aspects of the Java Virtual Machine since major stack overflows were coming out when trying to search So we had to override the indexOf method to perform partial searches in sizeable pieces of substrings so once the indexOf approached to the final letters we concatenated the next set of letters to perform the search This proved to be a better performed comparison which reduced the performance in an average of 5 seconds on each query We worked with the IBM Life Sciences Team coming from Boston MA that helped in the implementation of the IBM Portlets for genome search Portlets are basically Java Servlets with a specific architecture that can be assemble as content that can be replaced in the Portal using the IBM tool They do not follow a MVC approach so portlets access directly to a DB2 database using simple JDBC driver for DB2 In some cases information was zipped as zip files with plain text files in it so we used the Java ZIP package to read the ZIP file extract the text files parse them and insert the data in the DB2 database Responsibilities Configure the Portal Server for portal content based on INMEGEN requirements To develop 12 portlets to access 12 different databases requesting files through FTP reading them and insert the information in DB2 database Define the Database tables to insert plain files Write the code to identify the most common queries and set them in the DB2 tables Code and Unit test the genome search engine tool Assisted IBM in configuring the Java Virtual Machine for each websphere application server on each node Environment Websphere Portal Server Websphere Application Server Affymetrix javautil Java Portlets IBM Portlets Servlets DB2 JDBC FTP CORBA text parsing Employer Certum Address Rodolfo Gaona 86 Lomas de Sotelo 11200 Ciudad de Mxico DF Mexico Customer Cinepolis Movie Theatre Project Kiosk Senior Java Developer Waterfall Mexico City MX December 2004 to April 2005 The goal of this project was marketing the launch of a kiosk for consulting movie charts and purchase movie tickets using credit card payment An NCR Kiosk is just a PC running under Linux SUSE which had a LAN connection The front end part was developed using Adobe Flash and using Javascript it executed a Java application that connected to a MySQL database through JDBC driver There was no need of a webapplication server since the development was meant only for one kiosk The Kiosk only stored the front end piece and another PC stored the Java application which was executed whenever pressing the Submit button in the front end Communication between the kiosk and the PC was done through Remote Method Invocation RMI To design the database we used TOAD Responsibilities Implement the Java Core application RMI Interfaces RMI Server Design the database for movie charts and movie details Implement the shell scripts in LINUX SUSE Extract the images and plain text to update the database Environment NCR Kiosk Linux SUSE Adobe Flash Javascript MySQL JDBC Java Remote Method Invocation TOAD Employer eSiglo Address Culiacn No 123 esq Bajo Hipodromo Condesa Cuauhtemoc Mexico City Customer Inbursa Insurance Company Project SII Java Senior Developer FeatureDriven Development Mexico City MX August 2004 to December 2004 The goal of this project was to migrate the existing Mainframe set of applications into a single integrated web application for handling the insurance policy requests reducing costs in terms of manpower The application followed a Service Oriented Architecture SOA Web Services were to be developed in any technology which would be called through Websphere Process Server to interact with the Business Workflow that would receive the insurance requests review the insurance requests and approve the insurance policies Web Service would invoke the business rules to calculate the score to approve or deny an instrument to the end customer Web Services would come from various areas in INBURSA and would pass through a multithreaded dispatcher developed in Java The dispatcher would be contained on various web servers distributed across 8 websphere application servers We used SPRING framework for simplicity in the creation and instantiation of EJBs in the Websphere Application Server A Factory was developed in order to call SPRING API to instantiate the proper EJBs The Websphere Process Server would also be clustered across servers to dispatch the requests The dispatcher was a MVC based component which used JNDI to direct the requests based on the type of class the web service sent as first parameter It used ClassforNameclassName to identify the class and then reading an XML file and using JNDI we redirected the requests to execute Command components based on the web services For code versioning we used SVN and we used Eclipse as IDE Responsibilities To develop a proof of concept for the Service Dispatcher To implement the service dispatcher To code and unit test the insurance approval module To configure the business workflow in Process Server To define the coding standards checkstyle on Eclipse Environment SOA Web Services Design Patterns Websphere Process Server Websphere Application Server Java MVC JNDI XML SVN Eclipse Customer IFE Government Elections Institution Project SIIRFE Java Senior Developer Waterfall Mexico City MX January 2004 to August 2004 The goal for this project was to reduce costs by migrating the existing applications that handle the voters database and preliminary list of voting stands to keep the information updated The implementation used a JavaJ2EE application that in turn implemented each transaction using a MVC and J2EE design pattern application in a front end middle end and back end approach The front end was developed using JSPs which struts framework to define the proper action classes Action classes in turn called delegate classes to decouple front end from middle end All business layer was implemented using EJB with the form of stateless session beans Session functionality was implemented as HttpSession classes to store user information until sign out An Oracle database stored all tables and data was migrated through digitalization for image compressors A Feature Driven Development was established to handle scope management in terms of new functions The code versioning was done using SVN and requirement documentation was elaborated on a use case approach Responsibilities To code and unit test the voters list maintenance functionality Worked as configuration manager for the code maintenance main and branch creation code merging Work with the technical specialists from IFE to assist them in implementing the websphere application server and oracle database in their own environment Environment JavaJ2EE MVC Design Patterns JSPs Design Patterns Websphere Application Server struts framework EJB stateless session beans Oracle  SVN Eclipse Netbeans Java Senior Developer Softtek Mexico City MX August 2003 to December 2003 The goal of this project was to develop a CRUD application for specific catalogs within the Institution The application was developed following J2EE design patterns and implemented using Tomcat server as the Institution was not sure about which server to purchase Database used was Oracle  which had the catalog tables defined by IFE Responsibilities Define the J2EE base classes to be extended for application development Code and unit test some of the transactions for 10 catalogs Environment JavaJ2EE J2EE Design Patterns Oracle  Tomcat Employer Softtek Address Av Eugenio Garza Sada Parque Industrial Tecnopolo 20328 Ags Mexico Customer Fidelity Investments Project Outbound Extract Process Java Developer Waterfall Merrimack NH November 2002 to August 2003 The goal for this project was to develop various reports required by Fidelity Investments in order to shape the information received from various companies into a single plain text file that would be uploaded into an existing web application Plain Text files were placed on Unix servers under a specific route Each file maintained a naming convention so the report processing jobs would recognize the source company and the destination company the report would be generated to The report structure varied based on the destination company so the need of creating various java applications to create various reports was inevitable An analyst would design the report and define the source files and destination files as more than one report could be created based on the configuration parameters Each Java application required extensive algorithm design as many configuration parameters created various conditions for which data to include in the report The Java files were java applications run by a crontab tool as Unix Shell scripts Responsibilities Work with analyst to define the algorithm to be executed in Java application Code and unit test the java application locally Define the package classes to obtain the plain text from various servers Environment Plain Text files Unix Servers Java applications Crontab Unix Shell Scripts Customer General Electric Capital Card Services Project Apollo Workstation Java Developer FeatureDriven Development Mason OH September 2001 to November 2002 The goal for this project was to build a Collections and Customer Service modules for credit card requests A web layer to the existing mainframe infrastructure that would encapsulate all the business functionality and reduce costs of maintenance This web layer followed a Multilayered approach and evolved through various technological tools and approaches Initially a JSP front end development was defined for all screens based on the existing mainframe cobol screens On the JSP screen we inserted a javascript component that interfaced with a Telephony box operated by a call center This javascript component extracted from the caller all its information such as name address credit conditions and so on based on the options dialed through the phone The struts 20 framework was established to decouple the controller pattern from the whole front end development and set the view layer We configured the pomxml for the Mavenbased build to include the libraries and configured the webxml to apply the filter and filter mappings for the struts packages Then we configured using strutsxml all the actions for struts 20 to be used defining the appropriate methods and expected result ulrs for each one of them A team of 20 developers on which I worked dedicated to code and unit test each feature The IDE used was TogetherJ Initially the Kana Application Server was introduced as webapp server so we needed to interact with specific Kanacomponent called Adapter which worked as a stateless session bean in the server Later on we removed the Kana Application Server and used Weblogic Changing the webapp server required to incorporate a new architecture so an Architecture Team dedicated to set the proper base classes for coding the application was created Also the Architecture Team decided about the server infrastructure and inbound equipment to be used Challenge was that outbound calls would be required for the Customer Service module so all information was sent in Java through the webapp server and in turn the call to the outbound call equipment was done through the server A Business Team was put together to create functional and detailed level design documents which were used by software developers to code and unit test the code Test cases were derived from Use Cases and unit test cases were developed using Junit Regarding the back end there were various components the J2EE piece would interact A Data Caching component was set to manually send any information the developer wanted to cache If developer wanted to cache at the back end level then temporary database in Oracle  would be created to store the information and once the session was timed out or user logged out then those tables were removed If the developer wanted to cache user related information through the web and app server For code versioning we used MKS and as IDE we used TogetherJ This project followed a Feature Driven Development approach In order to retrieve the data from mainframe a Packet Mapping Layer was created in order to interface with the mainframe responses parse the text sent by mainframe and build Value Objects with the information requested This project was moved from various vendors and final vendor required knowledge transfer to Hyderabad and Ahmedabad India Responsibilities To elaborate functional and detailed level design documents To elaborate use case documents To elaborate class diagrams and sequence diagrams To code and unit test features To produce packet mapping Value Objects To perform functional test on Collections Module To do code assessment on the existing code To assist a new vendor to transition the code to India To conduct the knowledge transition for Collections module to people in India Environment JSP Javascript Telephony JavaJ2EE J2EE Design Patterns UML Use Cases Functional design Detailed Level Design Feature Driven Development TogetherJ MKS Weblogic Kana Application Server Oracle  Customer General Electric Aircraft Engines Project Key Characteristic System Java Developer Waterfall Cincinnati OH April 2000 to September 2001 The goal for this project was to improve the aircraft part assembly process A Six Sigma approach was handled to arrive to a Problem Statement to justify the need of the KC System The KC System implemented in Java Swings using the Netbeans IDE would automatically create the swings based on the editor The Java Swings would be invoked from a simple java Applet in the web browser Java Swings would interface directly to an Oracle 8i database with all the information set Database was consulted and updated through PLSQL queries through a JDBC driver for Oracle The application handled various aircraft parts and handled as a CRUD of the upper spec and lower spec limits So all auditors would measure in the manufacturing area and would capture for each piece the tolerance resistance and performance of the aircraft parts and enter the information in the KC System Responsibilities Understand the requirement from the functional manager Code and Unit Test the screens in Java Swings Code the sql statements for Oracle access Environment Six Sigma Java Swings Applets Oracle 8i PLSQL JDBC Employer Consiss Address Ro Volga 301 Del Valle 66220 San Pedro Garza Garca NL Mexico Customer CYDSA Corporativo Project To Place an Order Java Developer Waterfall Monterrey MX January 1999 to April 2000 The goal for this project was to implement a web application to enter the shipping information of all chemicals arrived to the seaport A JSP application was developed to access a Progress Database using a JDBCODBC bridge since Progress database was not compatible with Java JSP would have the input information and being sent directly to the database JDBC driver for ODBC data source was purchased with the bridge which give the liberty to move the interaction to any other database Responsibilities Code and unit test the JSPs Configure the JDBCODBC driver Implement the 4GL queries required for inserting and updating the information Code the triggers that would replicate the main catalogs into temporary tables Environment JSP JDBCODBC driver Progress Education Bachelor of Science in Computer Systems Engineering Monterrey Institute of Technology and Higher Education Monterrey MX 1994 to 1998 Skills Application Server 8 years database 10 years Java 10 years Oracle 10 years SQL 7 years Java J2Ee Spring Additional Information Technical Skills Languages Web Technologies Java 17 JSP Servlets Struts 12 Spring 312 Spring MVC Spring JDBC Hibernate 32 EJB SPRING JDBC Java Webservices SOAPREST AJAX Javascript JQuery JSON HTML XML Technologies SQL PLSQL Log4J Junit UNIX Shell scripts Visual Basic 60 Adobe Flash CS4 Java Servlets Model View Controller MVC BEA Weblogic Server RESTful OpenIG OpenAM OpenDJ Encryption AES RSA Base64 encoding Servers Tomcat 80 Weblogic Server 100 JBOSS IBM Websphere Application Server v61 Database Oracle 11g12c MS SQL Server 2000 MS Access MySQL IBM Websphere Portal Server 51 Websphere Application Server 51 Informix Microsoft SQL Server 2005 Access IBM DB2 91 Oracle 8i Application Server Mainframe Operating Systems Windows Sun OS HPUX Linux Modeling Tools MS Visio Argo UML Toad Enterprise Architect Other Tools Eclipse 37 STS Ant Maven CVS VSS Test Director Rational Application Developer Bugzilla IBM Clearcase IBM Git Hub Jersey ClearQuest HP Quality Center 100 DB Visualizer 707 Capability Maturity Model Integrated CMMi COCOMO II SDLC Methodologies Waterfall Methodology Agile Methodology Extreme Programming",
    "entities": [
        "Use Case Points Elaborate",
        "Oracle access Environment Six Sigma",
        "Present Project Forgerock Infra Set Up Methodology AGILE",
        "Chassis Project Access Management Transition Methodology AGILE",
        "Elaborate",
        "IDE",
        "Banamex Bancomer Banorte",
        "Implement",
        "JBOSS IBM",
        "the IBM Portlets",
        "XP",
        "Challenge",
        "the Customer Service",
        "CSS HTML5",
        "Software Requirement Specs and Functional Design Develop Testing Plan",
        "Websphere Portal Server",
        "Forgerock Responsibilities Code Unit Testing Build",
        "INBURSA",
        "the Enrollment Process",
        "SOLR",
        "HTTP",
        "Oracle  PLSQL Customer INMEGEN Government Health Ministry Project IBM Portlets",
        "IDE Responsibilities",
        "Java Server Pages",
        "Elaborate Functional Design",
        "Airoli",
        "MVC Spring",
        "IBM",
        "eGlobal",
        "Amazon Web Services AWS",
        "Oracle The",
        "SIIRFE",
        "Websphere Application Server WAS For",
        "JAR",
        "Database Oracle",
        "Responsibilities Define",
        "XML",
        "SOAP",
        "EAR",
        "SSO",
        "Requirement Management RM",
        "the Annuities Model for Pensions",
        "Capability",
        "Telephony",
        "Functional",
        "Cincinnati",
        "Ags Mexico Customer Fidelity Investments Project Outbound Extract",
        "Multi Factor Authentication",
        "DevOps",
        "Santander ISBAN",
        "Shell",
        "Digital Element",
        "IBM Websphere Application Server DB2",
        "the Single Sign On SSO",
        "JavaJ2EE",
        "Monterrey Institute of Technology",
        "Qro Mexico Customer General Electric Multinational Company Program Application Enhancement",
        "SupportCentral",
        "Environment JavaJ2EE MVC Design Patterns",
        "Jersey Framework",
        "Customer ISBAN Project",
        "Project FORGOT MY PASSWORD Methodology",
        "Chassis Framework",
        "Deployment Process",
        "LDAP",
        "Kiosk",
        "Custom Auth Module",
        "Websphere Process Server",
        "Electric Capital Card Services",
        "Agriculture Project Budgeting System Methodology Waterfall",
        "Java Portlets IBM Portlets",
        "Websphere Application Server",
        "Responsibilities Transition",
        "Process Server",
        "Boston MA",
        "UML",
        "Websphere Application",
        "the Business Workflow",
        "IFE Responsibilities Define",
        "Everis",
        "Mexico",
        "Location McLean VA Role Senior",
        "JNDI",
        "JSP",
        "Vision",
        "Java code Elaborate",
        "jsp",
        "LAN",
        "Websphere Commerce",
        "Environment JavaJ2EE J2EE Design Patterns Oracle  Tomcat Employer Softtek Address Av",
        "Hyderabad",
        "the Architecture Team",
        "CNBC",
        "UML Use Case Diagram",
        "A Feature Driven Development",
        "FORGOTS",
        "the KC System Responsibilities Understand",
        "Nexus",
        "Credit Card Payment",
        "Collections",
        "Supernet Empresas",
        "Remote Method Invocation RMI",
        "Configure Websphere Commerce",
        "STS",
        "MVC",
        "Jersey Interacting",
        "Websphere Application Server Responsibilities",
        "Projects",
        "EJB",
        "the IBM Life Sciences Team",
        "NET",
        "Java Design Patterns",
        "Project Supernet Empresas",
        "US",
        "Database",
        "QA",
        "Institution",
        "JS JSON DB2 Design Patterns Employer",
        "AWS",
        "Websphere",
        "Jenkins 2 Nexus Artifactory Implementing",
        "XML Interacting",
        "SVN Employer TCS Address Insurgentes",
        "the Solution Outline",
        "Data Caching",
        "Assisted IBM",
        "Project Management",
        "GE Money",
        "Developer Capital One McLean VA",
        "Websphere Application Server Queries",
        "UML Activity Diagrams Component Diagrams",
        "java",
        "NCR",
        "the Websphere Commerce",
        "ODBC",
        "Use Cases",
        "Visual Basic",
        "Command",
        "Employer Certum Address",
        "NodeJS Build",
        "The Websphere Process Server",
        "the KC System The KC System",
        "SQL",
        "Access IBM",
        "MAVEN",
        "MKS",
        "4GL",
        "Portal Server",
        "Websphere Application Server J2EE Design Patterns",
        "GE Fleet",
        "Oracle 8i Application",
        "Salesforcecom",
        "Chicago",
        "CICS",
        "QA Assist",
        "Responsibilities Receive",
        "SPRING",
        "JDBC",
        "FTP",
        "the Online Banking System",
        "Application Management Service",
        "Skills Application",
        "Deploy",
        "CRUD",
        "GE Aviation",
        "India",
        "Maven",
        "Build",
        "the Java Virtual Machine",
        "the Kana Application Server",
        "Java Swings Code",
        "Front End",
        "Responsibilities Code Unit Testing",
        "Employer PCS Computer System",
        "HttpSession",
        "SVN",
        "ServiceNow",
        "Commerce",
        "Chassis Project Enrollment Methodology",
        "Value Objects",
        "Data Modeling",
        "the Websphere Application Server A Factory",
        "Weblogic",
        "Bajo Hipodromo Condesa Cuauhtemoc Mexico City Customer Inbursa Insurance Company Project",
        "Tomcat",
        "REST",
        "Production Environment JavaJ2EE Design Patterns Oracle Database Progress Database Clearquest Tool Clearcase Tool Customer Telefonica Project AMS Transition",
        "A Business Team",
        "Developer Capital",
        "RSA",
        "Implement AWS",
        "SPRINTS",
        "GE",
        "Fidelity Investments",
        "Responsibilities Elaborate",
        "JUnit Environment JavaJ2EE Design Patterns Struts",
        "JDBCODBC",
        "Informix",
        "SONIC",
        "the Java Classes"
    ],
    "experience": "Experience using LDAP for searches adds modify delete Experience in Amazon Web Services AWS using various tools such as EC2 S3 Route53 ElastiCache CloudWatch Deployment Tools such as MAVEN Experience with RESTful services based on Jersey Framework handling various HTTP responses and using both JSON and XML Interacting with UI code in AngularJS or NodeJS through an Ajax based component to call orchectration layer the APIs are called handling request and responses Java EE for web application development using various frameworks and various design patterns Front End development using Java Server Pages JSP for data display and dynamic web pages using various jsp tags and basic java coding to keep the front layer light Javascript JS for data field manipulation and simple data formatting on fields labels and messaging App servers Tomcat Weblogic JBoss and Websphere Application Server to create access to file repositories databases through JNDI to various types of Command design pattern RDBM Databases such as DB2 and Oracle required JDBC specific drivers to create connections IBM solutions such as Websphere Portal Server to develop portlets to display portal content Portlets are extensions of Java Servlets and customized to perform a specific display purpose by acquiring data using jdbc without any business layer or data layer Portal Server connected through jdbc to DB2 by executing specific queries to get data from the tables Additional tables were created to obtain the data Deployment Process through the ant shell script that uses a buildxml configuration file to define the way JAR file and class components should be stored in the app server Indistinctively for Weblogic Websphere Tomcat or JBoss the ant tool servers to create WAR files to decouple front end files and EAR to encapsulate all components into one single deployment component that can later be decoupled between the web server and the app server Sponsorship required to work in the US Work Experience Senior JavaRESTful Developer Capital One McLean VA September 2015 to Present Project Forgerock Infra Set Up Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Participated on the migration from Multi Factor Authentication infrastructure implementation to the Single Sign On SSO OpenDJ infrastructure implementation Responsibilities Migrate Shell Scripts to install and configure OpenDJ on a separate AWS environment for SSO users Implement AWS EC2 instances on a 5 instance architecture for directory servers and replication servers Implement the Jenkins Jobs to build and deploy the tar into Artifactory and run the shell scripts to install and configure OpenDJ Project FORGOT MY PASSWORD Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java The goal of this project is to implement the FORGOT MY PASSWORD functionality for the Online Banking System I implemented various functionality for the FORGOTS APIs primarily working at the backend Responsibilities Code Unit Testing RESTful services using Chassis Framework based on Jersey Interacting with UI made of AngularJS and NodeJS Build using Maven and Deploy into Development Environment To implement a RESTful service to retrieve forgot username and password flow This was implemented using Jersey Framework under a standard framework called Chassis Project Enrollment Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Participated in the Enrollment Process for the Consumer Identity Online Banking App to enroll customers accounts into the mobile app Responsibilities Code Unit Testing RESTful services using Chassis Framework based on Jersey Interacting with UI made of AngularJS and NodeJS Build using Maven and Deploy into Development Environment To implement a RESTful service to retrieve forgot username and password flow This was implemented using Jersey Framework under a standard framework called Chassis Project Access Management Transition Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Migration from RSA to Forgerock Participated in the initial implementation of OpenAM and OpenDJ settings for Forgerock Responsibilities Code Unit Testing Build using Maven and and Deploy into Nexus a Custom Auth Module embedded in OpenAM 1200 Configure OpenIG 4 to route and redirect URLs to hide internal URLs Set up json files to establish the handlers and filters for the urls Configure OpenDJ to authenticate users through LDAP To implement a RESTful service to retrieve all unenrolled products a cardholder and a retail customer has This was implemented using Jersey Framework under a standard framework called Chassis Environment OpenAM OpenIG OpenDJ OpenIDConnect SAML OAuth2 RESTful eAPI Chassis Agile Lead JavaJ2EE eCommerce Developer Indra Sistemas Chicago IL February 2014 to November 2015 The goal of this project was to reduce one third of the operational costs by implementing a Websphere Commerce 7 solution and customize the Aurora Starter Store to include all Coppels eCommerce procedures Commerce 7 is a very customizable dynamic tool that involves the usage of REST and SOAP web services that interface with the store to validate user information obtain products and categories browse through products compare products add items to cart purchase process invoicing Additionally it can add various types of payment methods such as credit card barcode purchase cash deposit and others For credit card payments we used eGlobal service for credit validation and payment transactions That way we were able to work with Credit Card Payment with various credit card institutions such as Banamex Bancomer Banorte among other financial institutions in Mexico For geolocation we used Digital Element services For caching we used Softlayer to store static content and bring it from cache once the pages were called All Javabased components ran from Websphere Application Server WAS For defining part of the Solution Outline of this project we had to build UML diagrams to represent the Java Classes that would be used or extended from the Websphere Commerce In turn some sequence diagrams were written to represent the execution of the web services and to define which entities needed to be accessed This helped to work with some externa teams such as the SONIC team to know which web services to publish which ones would be accesses synchronously which ones asynchronously and which ones would need to be RESTful based Also we develo The web services were developed using SPRING framework using the STS IDE which enabled us to easily build the WDSL the XML and the stubs to interface with the web services within COPPEL To publish the web services we used SONIC message broker to asynchronously submit the requests to the web services and receive the response accordingly Both SOAP and RESTful services were published on under SONIC Before publishing the web services we used SOAPPUI to test the web services for all possible scenarios If XML fields were empty with the wrong data type or even implementing the scenarios defined in test case documents Aurora Starter store included a responsive front end based on JSPs CSS HTML5 javascript JSON to customize the front end On the middle tier we worked with JavaJ2EE to customize the data being sent from the front to the back end Commerce has a tight architecture so additional functionality needed to extend Command design patterns All product searches were performed using SOLR so it needs a dynamic table structure to store product categories products attributes product images etc These tables were stored on DB2 dababase implemented in a two clustered server environment for backup Also we accessed some Oracle databases for temporary storage of data which was in turn retrieved from the web services For this additional functionality was added outside the Websphere Commerce solution and access through an MVC approach using the same Websphere Application Server Queries were developed as SELECT INSERT and UPDATE statements to use the temporary data and so several STORED PROCEDURES were developed to retrieve this information every day and get it stored in the DB2 database COPPELs DBA would maintain these stored procedures after developed Responsibilities Define the Solution Outline including the functional design detailed level design store structure diagram product and category structure component diagram Resolve critical issues by installing new patches and open PMRs with IBM to get support Work with IBM in Chicago IL for configuring dynacache and execute performance testing Configure Websphere Commerce for internationalization patches Functional testing based on Software Requirement Specs and Functional Design Develop Testing Plan and defect control Environment Websphere Commerce 7 REST SOAP eGlobal Softlayer WAS JSP CSS HTML5 JS JSON DB2 Design Patterns Employer Indra Sistemas Address Av Ejercito Nacional 843 PH Java Senior Developer Col Granada Del Miguel Hidalgo CP June 2013 to November 2013 11520 Customer ISBAN Project Senior Software Developer Methodology Iterative Incremental max 3 cycles per iteration Location Queretaro Mexico Role Java Senior Developer Duration Jun 2013 to Nov 2013 This project intended to provide minor and major enhancement support in Java technology Resolving work orders for include additional functionality for various banking applications related to credit card fraud collections Responsibilities Receive work order and review the requirement documentation Visit customer to resolve queries regarding requirements Document a detailed design for the functionality to be included Code and Unit Test the functionality Prepare test cases in Junit Assist the customer in installing the new release when moving to QA Assist QA team on user acceptance testing Assist in moving to Production Environment JavaJ2EE Design Patterns Oracle Database Progress Database Clearquest Tool Clearcase Tool Customer Telefonica Project AMS Transition Mexico City Mexico Methodology AGILE 1 SPRINT per release 510 features per release under an Application Management Service approach Java Developer January 2013 to June 2013 The goal of this project was to transition 40 applications previously maintained by a company called Everis from which 16 applications were codewritten in JavaJ2EE including Java Design Patterns Initially a functional transition took place so I worked with the Everis consultant in understanding the application functionality Since no documentation was available we had formal meetings and minutes were documented to set proof that knowledge was being transitioned The majority of the java applications were related to managing internal assets such as mobile phones The code Everis wrote had no multilayer architecture and in some cases code was accessing from the JSP right directly to the Oracle database So we had to perform a code assessment to establish a measure of quality of the receiving code in order to justify in some cases the amount of time that would take to rewrite the code For all 16 applications I worked with other 6 people in implementing struts framework to decouple the JSPs from the code being executed in the Websphere web server container A standard base Action class was defined to be extended on each application transaction This way it was easier to keep track of the transactions being implemented We counted the number of transactions to the database to be executed and based on function point estimation we came to the amount of effort on each application to transition Once each application was ready with the proper coding standards and struts framework it had to be tested The tool used for tracking the enhancements on each application was Jira the MIND suite for handling requirements using Requirement Management RM and TestLink for defect registering Responsibilities Transition meetings with Everis consultants Elaborating minutes of meetings Code assessment for 4 Java applications Implement Struts framework for all 4 applications Test the applications register defects and resolve them Environment JavaJ2EE Design Patterns MVC Oracle 10i PLSQL Websphere Application Server J2EE Design Patterns Jira RM TestLink Employer PCS Computer System Mexico SA de CV Address Av Epigmenio Gonzalez 500 Fracc San Pablo CP 76130 Parque Tecnologico 6to Piso Queretaro Qro Mexico Customer General Electric Multinational Company Program Application Enhancement for Mexico Methodology Iterative Minor enhancements less than 1 month each Senior Java Developer GE Money Cincinnati OH April 2010 to December 2012 For this program I participate in various major and minor enhancements in JavaJ2EE for various applications Projects involved GE Aviation I traveled to Cincinnati OH to implement a Project Management workflow using SupportCentral tool GE Money for implementing a POC using Java Glassfish framework GE Fleet for implementing a java interface for Salesforcecom and implementing a foreign national exchange application to assist foreign people when getting transferred to another country CNBC on a project to fulfill the TV shows calendar for various TV channels The intention was to proof a small team in Mexico could resolve tickets with the same performance that in India Initially I went to Airoli India to get some training around all the processes and procedures related to software development For GE consumer finance I participate in the initial stages of ServiceNow implementation for ITIL asset management Responsibilities Elaborate detailed level design for all functionalities to be implemented Code and unit test the functionality Build the EAR file for deployment in QA and Production environment Elaborate test cases for the code to me implemented Build and deploy the application Manage the SVN tool for configuration management in code Environment SupportCentral Java Glassfish Salesforcecom ServiceNow JavaJ2EE Oracle 10i PLSQL SVN Employer TCS Address Insurgentes Sur 664 Piso 2 Col Del Valle Mxico DF 03100 Mexico DF Mexico Customer ISBAN Banking Project Supernet Empresas Methodology Iterative Incremental Location Queretaro Mexico Java Senior Developer February 2008 to April 2010 The goal of this project was to handle the 90 of the online banking transaction for Santander ISBAN center through the Supernet Empresas application to be available to all banking customers reducing costs of attending customers physically With this project many procedures were totally moved to online application which reduced the effort and amount of people bank affiliates needed to hire and train to perform all procedures This was a 300 people project handling various technologies In my case I worked in JavaJ2EE piece for user register transactions wired transfers and credit card payments IDE used was Eclipse using Tomcat server for coding and deploying the components in JBoss The application server used was Websphere Application Server Responsibilities To participate in the requirements meetings to define the online transaction for credit card requests Elaborate functional and detailed level design documents Participate in meetings with customer to approve detailed level design Code and Unit Test the functionality Elaborate test cases in JUnit Environment JavaJ2EE Design Patterns Struts EJB JPA Tomcat JBoss Junit Websphere Application Server Oracle 10i PLSQL Eclipse Customer Profuturo GNP Insurance Company Project Annuities System Afore System Java Senior Analyst Developer Iterative Incremental Mxico DF MX May 2006 to February 2008 Methodology TCS Unified Process Iterative Incremental 2 iterations for each phase Location Mexico City Mexico Role Java Senior Analyst Developer Duration May 2006 Feb 2008 The goal of this project was to migrate the existing MainframeCOBOL functions and CICS framework components to a web development application based on IBM Websphere Application Server DB2 and JavaJ2EE customized application in order to reduce costs in costly COBOL people and hire web developers and increase the speed of maintenance cycles This project involved a thorough understanding of the Annuities Model for Pensions and Afore similar to 301 K A vision document was elaborated to understand the project goal which in turn centered the focus on reducing costs however initial estimations through 80 K men hours to develop the entire application from scratch We had to count all the components to be developed and come to an estimate using UML Use Case Diagram and using Use Case Point estimation In addition to this we had to perform Data Modeling and develop the ETLs for migrating the mainframe database to an Oracle Database Responsibilities To participate in the initial stages of the project in the Vision document elaboration Elaborate Use Case Diagram Estimate the project using Use Case Points Elaborate uses case documents for 40 use cases Elaborate Functional Design documents using UML Activity Diagrams Component Diagrams High Level Sequence Diagrams Elaborate Detailed Level Design Documents using UML Class Diagrams UML Sequence Diagrams Elaborate Test Case Documents Environment JavaJ2EE Struts Websphere Application Server Oracle EJB JPA Junit Websphere Application Server Oracle 10i Eclipse Employer Vision Consulting Address Calle Kepler 11 Anzures 11590 Ciudad de Mxico DF Mexico Customer SAGARPA Secretary of Agriculture Project Budgeting System Methodology Waterfall code migration Java Senior Developer Mexico City MX September 2005 to May 2006 The goal of this project was to migrate the existing Visual Basic 6 application to a web development application in JavaJ2EE The customer initially provided documentation with screens and user Manual for the application which assisted in the estimation process A NET expert assisted in the code assessment and identified the code modules in Visual Basic that could be migrated to Java using VB Converter Java Edition Tool As part of the coding reuse policy standard we implemented the JavaJ2EE code framework using base classes that would be extended for each transaction The struts framework was incorporated to keep the view layer separated from the front end This strategy helped us to keep the screen coding and the business layer in parallel and since the screen coding involved a different coding process as Visual Basic code was read and analyzed and immediately after a Java component was written to follow the same algorithm Whenever applicable 30 of the times the VB Converter generated the Java code automatically based on Visual Basic code The business layer was developed using extreme programming XP based on the functional design document implementing Command Design patterns and access to the existing Oracle Database by using PLSQL queries Responsibilities Software Evaluation for VB Converter Java Edition tool Identify modules that was possible to translate into Java code Elaborate the functional design documents for business layer Establish the base classes for J2EE business layer Elaborate queries using PLSQL Environment Visual Basic 6 JavaJ2EE VB Converter Java Edition extreme programming Oracle   PLSQL Customer INMEGEN Government Health Ministry Project IBM Portlets Java Senior Developer Iterative Incremental Mxico DF MX April 2005 to September 2005 Duration Apr 2005 Sept 2005 The goal of this project was to implement a 28 cluster supercomputer to compute genomes of various organisms for scientific research The search engine would be accessed from all over the world and would include the scientific research performed at INMEGEN This was a Government investment that would contribute to DNA research of human genome and other organisms that genetically would be compatible for curing cancer and other terminal deceases The 28 cluster running under Linux SUSE would receive all requests from a Websphere Portal Server which included a search engine where scientists would enter the DNA chain to be searched in all scientific databases in the world eg Affymetrix The genome is represented as a string of letters A B X Y that can potentially be constructed of billions of patterns The search engine takes a small piece of that genome and compares it across the billions of DNA genomes on 12 databases and this is the reason of having a 28 cluster to perform the searches Despite of this we had to understand some aspects of the Java Virtual Machine since major stack overflows were coming out when trying to search So we had to override the indexOf method to perform partial searches in sizeable pieces of substrings so once the indexOf approached to the final letters we concatenated the next set of letters to perform the search This proved to be a better performed comparison which reduced the performance in an average of 5 seconds on each query We worked with the IBM Life Sciences Team coming from Boston MA that helped in the implementation of the IBM Portlets for genome search Portlets are basically Java Servlets with a specific architecture that can be assemble as content that can be replaced in the Portal using the IBM tool They do not follow a MVC approach so portlets access directly to a DB2 database using simple JDBC driver for DB2 In some cases information was zipped as zip files with plain text files in it so we used the Java ZIP package to read the ZIP file extract the text files parse them and insert the data in the DB2 database Responsibilities Configure the Portal Server for portal content based on INMEGEN requirements To develop 12 portlets to access 12 different databases requesting files through FTP reading them and insert the information in DB2 database Define the Database tables to insert plain files Write the code to identify the most common queries and set them in the DB2 tables Code and Unit test the genome search engine tool Assisted IBM in configuring the Java Virtual Machine for each websphere application server on each node Environment Websphere Portal Server Websphere Application Server Affymetrix javautil Java Portlets IBM Portlets Servlets DB2 JDBC FTP CORBA text parsing Employer Certum Address Rodolfo Gaona 86 Lomas de Sotelo 11200 Ciudad de Mxico DF Mexico Customer Cinepolis Movie Theatre Project Kiosk Senior Java Developer Waterfall Mexico City MX December 2004 to April 2005 The goal of this project was marketing the launch of a kiosk for consulting movie charts and purchase movie tickets using credit card payment An NCR Kiosk is just a PC running under Linux SUSE which had a LAN connection The front end part was developed using Adobe Flash and using Javascript it executed a Java application that connected to a MySQL database through JDBC driver There was no need of a webapplication server since the development was meant only for one kiosk The Kiosk only stored the front end piece and another PC stored the Java application which was executed whenever pressing the Submit button in the front end Communication between the kiosk and the PC was done through Remote Method Invocation RMI To design the database we used TOAD Responsibilities Implement the Java Core application RMI Interfaces RMI Server Design the database for movie charts and movie details Implement the shell scripts in LINUX SUSE Extract the images and plain text to update the database Environment NCR Kiosk Linux SUSE Adobe Flash Javascript MySQL JDBC Java Remote Method Invocation TOAD Employer eSiglo Address Culiacn No 123 esq Bajo Hipodromo Condesa Cuauhtemoc Mexico City Customer Inbursa Insurance Company Project SII Java Senior Developer FeatureDriven Development Mexico City MX August 2004 to December 2004 The goal of this project was to migrate the existing Mainframe set of applications into a single integrated web application for handling the insurance policy requests reducing costs in terms of manpower The application followed a Service Oriented Architecture SOA Web Services were to be developed in any technology which would be called through Websphere Process Server to interact with the Business Workflow that would receive the insurance requests review the insurance requests and approve the insurance policies Web Service would invoke the business rules to calculate the score to approve or deny an instrument to the end customer Web Services would come from various areas in INBURSA and would pass through a multithreaded dispatcher developed in Java The dispatcher would be contained on various web servers distributed across 8 websphere application servers We used SPRING framework for simplicity in the creation and instantiation of EJBs in the Websphere Application Server A Factory was developed in order to call SPRING API to instantiate the proper EJBs The Websphere Process Server would also be clustered across servers to dispatch the requests The dispatcher was a MVC based component which used JNDI to direct the requests based on the type of class the web service sent as first parameter It used ClassforNameclassName to identify the class and then reading an XML file and using JNDI we redirected the requests to execute Command components based on the web services For code versioning we used SVN and we used Eclipse as IDE Responsibilities To develop a proof of concept for the Service Dispatcher To implement the service dispatcher To code and unit test the insurance approval module To configure the business workflow in Process Server To define the coding standards checkstyle on Eclipse Environment SOA Web Services Design Patterns Websphere Process Server Websphere Application Server Java MVC JNDI XML SVN Eclipse Customer IFE Government Elections Institution Project SIIRFE Java Senior Developer Waterfall Mexico City MX January 2004 to August 2004 The goal for this project was to reduce costs by migrating the existing applications that handle the voters database and preliminary list of voting stands to keep the information updated The implementation used a JavaJ2EE application that in turn implemented each transaction using a MVC and J2EE design pattern application in a front end middle end and back end approach The front end was developed using JSPs which struts framework to define the proper action classes Action classes in turn called delegate classes to decouple front end from middle end All business layer was implemented using EJB with the form of stateless session beans Session functionality was implemented as HttpSession classes to store user information until sign out An Oracle database stored all tables and data was migrated through digitalization for image compressors A Feature Driven Development was established to handle scope management in terms of new functions The code versioning was done using SVN and requirement documentation was elaborated on a use case approach Responsibilities To code and unit test the voters list maintenance functionality Worked as configuration manager for the code maintenance main and branch creation code merging Work with the technical specialists from IFE to assist them in implementing the websphere application server and oracle database in their own environment Environment JavaJ2EE MVC Design Patterns JSPs Design Patterns Websphere Application Server struts framework EJB stateless session beans Oracle   SVN Eclipse Netbeans Java Senior Developer Softtek Mexico City MX August 2003 to December 2003 The goal of this project was to develop a CRUD application for specific catalogs within the Institution The application was developed following J2EE design patterns and implemented using Tomcat server as the Institution was not sure about which server to purchase Database used was Oracle   which had the catalog tables defined by IFE Responsibilities Define the J2EE base classes to be extended for application development Code and unit test some of the transactions for 10 catalogs Environment JavaJ2EE J2EE Design Patterns Oracle   Tomcat Employer Softtek Address Av Eugenio Garza Sada Parque Industrial Tecnopolo 20328 Ags Mexico Customer Fidelity Investments Project Outbound Extract Process Java Developer Waterfall Merrimack NH November 2002 to August 2003 The goal for this project was to develop various reports required by Fidelity Investments in order to shape the information received from various companies into a single plain text file that would be uploaded into an existing web application Plain Text files were placed on Unix servers under a specific route Each file maintained a naming convention so the report processing jobs would recognize the source company and the destination company the report would be generated to The report structure varied based on the destination company so the need of creating various java applications to create various reports was inevitable An analyst would design the report and define the source files and destination files as more than one report could be created based on the configuration parameters Each Java application required extensive algorithm design as many configuration parameters created various conditions for which data to include in the report The Java files were java applications run by a crontab tool as Unix Shell scripts Responsibilities Work with analyst to define the algorithm to be executed in Java application Code and unit test the java application locally Define the package classes to obtain the plain text from various servers Environment Plain Text files Unix Servers Java applications Crontab Unix Shell Scripts Customer General Electric Capital Card Services Project Apollo Workstation Java Developer FeatureDriven Development Mason OH September 2001 to November 2002 The goal for this project was to build a Collections and Customer Service modules for credit card requests A web layer to the existing mainframe infrastructure that would encapsulate all the business functionality and reduce costs of maintenance This web layer followed a Multilayered approach and evolved through various technological tools and approaches Initially a JSP front end development was defined for all screens based on the existing mainframe cobol screens On the JSP screen we inserted a javascript component that interfaced with a Telephony box operated by a call center This javascript component extracted from the caller all its information such as name address credit conditions and so on based on the options dialed through the phone The struts 20 framework was established to decouple the controller pattern from the whole front end development and set the view layer We configured the pomxml for the Mavenbased build to include the libraries and configured the webxml to apply the filter and filter mappings for the struts packages Then we configured using strutsxml all the actions for struts 20 to be used defining the appropriate methods and expected result ulrs for each one of them A team of 20 developers on which I worked dedicated to code and unit test each feature The IDE used was TogetherJ Initially the Kana Application Server was introduced as webapp server so we needed to interact with specific Kanacomponent called Adapter which worked as a stateless session bean in the server Later on we removed the Kana Application Server and used Weblogic Changing the webapp server required to incorporate a new architecture so an Architecture Team dedicated to set the proper base classes for coding the application was created Also the Architecture Team decided about the server infrastructure and inbound equipment to be used Challenge was that outbound calls would be required for the Customer Service module so all information was sent in Java through the webapp server and in turn the call to the outbound call equipment was done through the server A Business Team was put together to create functional and detailed level design documents which were used by software developers to code and unit test the code Test cases were derived from Use Cases and unit test cases were developed using Junit Regarding the back end there were various components the J2EE piece would interact A Data Caching component was set to manually send any information the developer wanted to cache If developer wanted to cache at the back end level then temporary database in Oracle   would be created to store the information and once the session was timed out or user logged out then those tables were removed If the developer wanted to cache user related information through the web and app server For code versioning we used MKS and as IDE we used TogetherJ This project followed a Feature Driven Development approach In order to retrieve the data from mainframe a Packet Mapping Layer was created in order to interface with the mainframe responses parse the text sent by mainframe and build Value Objects with the information requested This project was moved from various vendors and final vendor required knowledge transfer to Hyderabad and Ahmedabad India Responsibilities To elaborate functional and detailed level design documents To elaborate use case documents To elaborate class diagrams and sequence diagrams To code and unit test features To produce packet mapping Value Objects To perform functional test on Collections Module To do code assessment on the existing code To assist a new vendor to transition the code to India To conduct the knowledge transition for Collections module to people in India Environment JSP Javascript Telephony JavaJ2EE J2EE Design Patterns UML Use Cases Functional design Detailed Level Design Feature Driven Development TogetherJ MKS Weblogic Kana Application Server Oracle   Customer General Electric Aircraft Engines Project Key Characteristic System Java Developer Waterfall Cincinnati OH April 2000 to September 2001 The goal for this project was to improve the aircraft part assembly process A Six Sigma approach was handled to arrive to a Problem Statement to justify the need of the KC System The KC System implemented in Java Swings using the Netbeans IDE would automatically create the swings based on the editor The Java Swings would be invoked from a simple java Applet in the web browser Java Swings would interface directly to an Oracle 8i database with all the information set Database was consulted and updated through PLSQL queries through a JDBC driver for Oracle The application handled various aircraft parts and handled as a CRUD of the upper spec and lower spec limits So all auditors would measure in the manufacturing area and would capture for each piece the tolerance resistance and performance of the aircraft parts and enter the information in the KC System Responsibilities Understand the requirement from the functional manager Code and Unit Test the screens in Java Swings Code the sql statements for Oracle access Environment Six Sigma Java Swings Applets Oracle 8i PLSQL JDBC Employer Consiss Address Ro Volga 301 Del Valle 66220 San Pedro Garza Garca NL Mexico Customer CYDSA Corporativo Project To Place an Order Java Developer Waterfall Monterrey MX January 1999 to April 2000 The goal for this project was to implement a web application to enter the shipping information of all chemicals arrived to the seaport A JSP application was developed to access a Progress Database using a JDBCODBC bridge since Progress database was not compatible with Java JSP would have the input information and being sent directly to the database JDBC driver for ODBC data source was purchased with the bridge which give the liberty to move the interaction to any other database Responsibilities Code and unit test the JSPs Configure the JDBCODBC driver Implement the 4GL queries required for inserting and updating the information Code the triggers that would replicate the main catalogs into temporary tables Environment JSP JDBCODBC driver Progress Education Bachelor of Science in Computer Systems Engineering Monterrey Institute of Technology and Higher Education Monterrey MX 1994 to 1998 Skills Application Server 8 years database 10 years Java 10 years Oracle 10 years SQL 7 years Java J2Ee Spring Additional Information Technical Skills Languages Web Technologies Java 17 JSP Servlets Struts 12 Spring 312 Spring MVC Spring JDBC Hibernate 32 EJB SPRING JDBC Java Webservices SOAPREST AJAX Javascript JQuery JSON HTML XML Technologies SQL PLSQL Log4J Junit UNIX Shell scripts Visual Basic 60 Adobe Flash CS4 Java Servlets Model View Controller MVC BEA Weblogic Server RESTful OpenIG OpenAM OpenDJ Encryption AES RSA Base64 encoding Servers Tomcat 80 Weblogic Server 100 JBOSS IBM Websphere Application Server v61 Database Oracle 11g12c MS SQL Server 2000 MS Access MySQL IBM Websphere Portal Server 51 Websphere Application Server 51 Informix Microsoft SQL Server 2005 Access IBM DB2 91 Oracle 8i Application Server Mainframe Operating Systems Windows Sun OS HPUX Linux Modeling Tools MS Visio Argo UML Toad Enterprise Architect Other Tools Eclipse 37 STS Ant Maven CVS VSS Test Director Rational Application Developer Bugzilla IBM Clearcase IBM Git Hub Jersey ClearQuest HP Quality Center 100 DB Visualizer 707 Capability Maturity Model Integrated CMMi COCOMO II SDLC Methodologies Waterfall Methodology Agile Methodology Extreme Programming",
    "extracted_keywords": [
        "Developer",
        "Senior",
        "span",
        "span",
        "lDeveloperspan",
        "Developer",
        "Capital",
        "McLean",
        "VA",
        "years",
        "experience",
        "enterprise",
        "application",
        "design",
        "development",
        "integration",
        "J2EE",
        "technology",
        "domains",
        "healthcare",
        "experience",
        "analysis",
        "design",
        "development",
        "implementation",
        "testing",
        "clientserver",
        "Internet",
        "Intranet",
        "systems",
        "web",
        "applications",
        "years",
        "experience",
        "Forgerock",
        "OpenAM",
        "OpenDJ",
        "solutions",
        "AWS",
        "EC2",
        "instances",
        "DevOps",
        "tools",
        "Jenkins",
        "Nexus",
        "Artifactory",
        "scripts",
        "Java",
        "Shell",
        "Scripts",
        "Experience",
        "LDAP",
        "searches",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "tools",
        "EC2",
        "S3",
        "Route53",
        "ElastiCache",
        "CloudWatch",
        "Deployment",
        "Tools",
        "MAVEN",
        "Experience",
        "services",
        "Jersey",
        "Framework",
        "HTTP",
        "responses",
        "JSON",
        "XML",
        "Interacting",
        "UI",
        "code",
        "AngularJS",
        "NodeJS",
        "component",
        "orchectration",
        "layer",
        "APIs",
        "request",
        "Java",
        "EE",
        "web",
        "application",
        "development",
        "frameworks",
        "design",
        "patterns",
        "End",
        "development",
        "Java",
        "Server",
        "Pages",
        "JSP",
        "data",
        "display",
        "web",
        "pages",
        "tags",
        "layer",
        "Javascript",
        "JS",
        "data",
        "field",
        "manipulation",
        "data",
        "fields",
        "labels",
        "App",
        "servers",
        "Tomcat",
        "Weblogic",
        "JBoss",
        "Websphere",
        "Application",
        "Server",
        "access",
        "file",
        "repositories",
        "JNDI",
        "types",
        "Command",
        "design",
        "pattern",
        "RDBM",
        "Databases",
        "DB2",
        "Oracle",
        "JDBC",
        "drivers",
        "connections",
        "IBM",
        "solutions",
        "Websphere",
        "Portal",
        "Server",
        "portlets",
        "content",
        "Portlets",
        "extensions",
        "Java",
        "Servlets",
        "display",
        "purpose",
        "data",
        "jdbc",
        "business",
        "layer",
        "data",
        "layer",
        "Portal",
        "Server",
        "jdbc",
        "DB2",
        "queries",
        "data",
        "tables",
        "tables",
        "data",
        "Deployment",
        "Process",
        "ant",
        "shell",
        "script",
        "buildxml",
        "configuration",
        "file",
        "way",
        "JAR",
        "file",
        "class",
        "components",
        "app",
        "server",
        "Weblogic",
        "Websphere",
        "Tomcat",
        "JBoss",
        "tool",
        "servers",
        "WAR",
        "files",
        "end",
        "files",
        "EAR",
        "components",
        "deployment",
        "component",
        "web",
        "server",
        "app",
        "server",
        "Sponsorship",
        "US",
        "Work",
        "Experience",
        "Senior",
        "Developer",
        "Capital",
        "McLean",
        "VA",
        "September",
        "Present",
        "Project",
        "Forgerock",
        "Infra",
        "Set",
        "Methodology",
        "AGILE",
        "SPRINTS",
        "sprints",
        "month",
        "Location",
        "McLean",
        "VA",
        "Role",
        "Senior",
        "Developer",
        "Environment",
        "Chassis",
        "Jersey",
        "Agile",
        "STS",
        "Maven",
        "Java",
        "migration",
        "Multi",
        "Factor",
        "Authentication",
        "infrastructure",
        "implementation",
        "Sign",
        "SSO",
        "OpenDJ",
        "infrastructure",
        "implementation",
        "Responsibilities",
        "Migrate",
        "Shell",
        "Scripts",
        "OpenDJ",
        "AWS",
        "environment",
        "SSO",
        "users",
        "AWS",
        "EC2",
        "instances",
        "instance",
        "architecture",
        "directory",
        "servers",
        "replication",
        "servers",
        "Jenkins",
        "Jobs",
        "tar",
        "Artifactory",
        "shell",
        "scripts",
        "OpenDJ",
        "Project",
        "FORGOT",
        "MY",
        "PASSWORD",
        "Methodology",
        "AGILE",
        "SPRINTS",
        "sprints",
        "month",
        "Location",
        "McLean",
        "VA",
        "Role",
        "Senior",
        "Developer",
        "Environment",
        "Chassis",
        "Jersey",
        "Agile",
        "STS",
        "Maven",
        "Java",
        "goal",
        "project",
        "FORGOT",
        "MY",
        "PASSWORD",
        "functionality",
        "Online",
        "Banking",
        "System",
        "functionality",
        "FORGOTS",
        "APIs",
        "Responsibilities",
        "Code",
        "Unit",
        "services",
        "Chassis",
        "Framework",
        "Jersey",
        "Interacting",
        "UI",
        "AngularJS",
        "NodeJS",
        "Build",
        "Maven",
        "Development",
        "Environment",
        "service",
        "forgot",
        "password",
        "flow",
        "Jersey",
        "Framework",
        "framework",
        "Chassis",
        "Project",
        "Enrollment",
        "Methodology",
        "AGILE",
        "SPRINTS",
        "sprints",
        "month",
        "Location",
        "McLean",
        "VA",
        "Role",
        "Senior",
        "Developer",
        "Environment",
        "Chassis",
        "Jersey",
        "Agile",
        "STS",
        "Maven",
        "Java",
        "Enrollment",
        "Process",
        "Consumer",
        "Identity",
        "Online",
        "Banking",
        "App",
        "customers",
        "app",
        "Responsibilities",
        "Code",
        "Unit",
        "services",
        "Chassis",
        "Framework",
        "Jersey",
        "Interacting",
        "UI",
        "AngularJS",
        "NodeJS",
        "Build",
        "Maven",
        "Development",
        "Environment",
        "service",
        "forgot",
        "password",
        "flow",
        "Jersey",
        "Framework",
        "framework",
        "Chassis",
        "Project",
        "Access",
        "Management",
        "Transition",
        "Methodology",
        "AGILE",
        "SPRINTS",
        "sprints",
        "month",
        "Location",
        "McLean",
        "VA",
        "Role",
        "Senior",
        "Developer",
        "Environment",
        "Chassis",
        "Jersey",
        "Agile",
        "STS",
        "Maven",
        "Java",
        "Migration",
        "RSA",
        "Forgerock",
        "Participated",
        "implementation",
        "OpenAM",
        "OpenDJ",
        "settings",
        "Forgerock",
        "Responsibilities",
        "Code",
        "Unit",
        "Testing",
        "Build",
        "Maven",
        "Nexus",
        "Custom",
        "Auth",
        "Module",
        "OpenAM",
        "Configure",
        "OpenIG",
        "URLs",
        "URLs",
        "Set",
        "json",
        "files",
        "handlers",
        "filters",
        "urls",
        "Configure",
        "OpenDJ",
        "users",
        "LDAP",
        "service",
        "products",
        "cardholder",
        "customer",
        "Jersey",
        "Framework",
        "framework",
        "Chassis",
        "Environment",
        "OpenAM",
        "OpenIG",
        "OpenDJ",
        "OpenIDConnect",
        "Chassis",
        "Agile",
        "Lead",
        "JavaJ2EE",
        "eCommerce",
        "Developer",
        "Indra",
        "Sistemas",
        "Chicago",
        "IL",
        "February",
        "November",
        "goal",
        "project",
        "third",
        "costs",
        "Websphere",
        "Commerce",
        "solution",
        "Aurora",
        "Starter",
        "Store",
        "Coppels",
        "eCommerce",
        "procedures",
        "Commerce",
        "tool",
        "usage",
        "REST",
        "SOAP",
        "web",
        "services",
        "store",
        "user",
        "information",
        "products",
        "categories",
        "products",
        "products",
        "items",
        "purchase",
        "process",
        "types",
        "payment",
        "methods",
        "credit",
        "card",
        "barcode",
        "purchase",
        "cash",
        "deposit",
        "others",
        "credit",
        "card",
        "payments",
        "eGlobal",
        "service",
        "credit",
        "validation",
        "payment",
        "transactions",
        "way",
        "Credit",
        "Card",
        "Payment",
        "credit",
        "card",
        "institutions",
        "Banamex",
        "Bancomer",
        "Banorte",
        "institutions",
        "Mexico",
        "geolocation",
        "Digital",
        "Element",
        "services",
        "Softlayer",
        "content",
        "cache",
        "pages",
        "components",
        "Websphere",
        "Application",
        "Server",
        "part",
        "Solution",
        "Outline",
        "project",
        "UML",
        "diagrams",
        "Java",
        "Classes",
        "Websphere",
        "Commerce",
        "sequence",
        "diagrams",
        "execution",
        "web",
        "services",
        "entities",
        "externa",
        "teams",
        "SONIC",
        "team",
        "web",
        "services",
        "ones",
        "accesses",
        "ones",
        "web",
        "services",
        "SPRING",
        "framework",
        "STS",
        "IDE",
        "XML",
        "stubs",
        "interface",
        "web",
        "services",
        "COPPEL",
        "web",
        "services",
        "SONIC",
        "message",
        "broker",
        "requests",
        "web",
        "services",
        "response",
        "SOAP",
        "services",
        "SONIC",
        "web",
        "services",
        "SOAPPUI",
        "web",
        "services",
        "scenarios",
        "XML",
        "fields",
        "data",
        "type",
        "scenarios",
        "test",
        "case",
        "Aurora",
        "Starter",
        "store",
        "end",
        "JSPs",
        "CSS",
        "HTML5",
        "javascript",
        "JSON",
        "end",
        "tier",
        "JavaJ2EE",
        "data",
        "front",
        "end",
        "Commerce",
        "architecture",
        "functionality",
        "Command",
        "design",
        "patterns",
        "product",
        "searches",
        "SOLR",
        "table",
        "structure",
        "product",
        "categories",
        "products",
        "product",
        "images",
        "tables",
        "DB2",
        "dababase",
        "server",
        "environment",
        "backup",
        "Oracle",
        "databases",
        "storage",
        "data",
        "turn",
        "web",
        "services",
        "functionality",
        "Websphere",
        "Commerce",
        "solution",
        "access",
        "MVC",
        "approach",
        "Websphere",
        "Application",
        "Server",
        "Queries",
        "SELECT",
        "INSERT",
        "UPDATE",
        "statements",
        "data",
        "PROCEDURES",
        "information",
        "day",
        "DB2",
        "database",
        "COPPELs",
        "DBA",
        "procedures",
        "Responsibilities",
        "Solution",
        "Outline",
        "design",
        "level",
        "design",
        "store",
        "structure",
        "diagram",
        "product",
        "category",
        "structure",
        "component",
        "diagram",
        "issues",
        "patches",
        "PMRs",
        "IBM",
        "support",
        "Work",
        "IBM",
        "Chicago",
        "IL",
        "dynacache",
        "performance",
        "testing",
        "Configure",
        "Websphere",
        "Commerce",
        "internationalization",
        "testing",
        "Software",
        "Requirement",
        "Specs",
        "Functional",
        "Design",
        "Develop",
        "Testing",
        "Plan",
        "control",
        "Environment",
        "Websphere",
        "Commerce",
        "REST",
        "SOAP",
        "eGlobal",
        "Softlayer",
        "JSP",
        "CSS",
        "HTML5",
        "JS",
        "JSON",
        "DB2",
        "Design",
        "Patterns",
        "Employer",
        "Indra",
        "Sistemas",
        "Address",
        "Av",
        "Ejercito",
        "Nacional",
        "PH",
        "Java",
        "Senior",
        "Developer",
        "Col",
        "Granada",
        "Del",
        "Miguel",
        "Hidalgo",
        "CP",
        "June",
        "November",
        "Customer",
        "ISBAN",
        "Project",
        "Senior",
        "Software",
        "Developer",
        "Methodology",
        "Iterative",
        "Incremental",
        "cycles",
        "iteration",
        "Location",
        "Queretaro",
        "Mexico",
        "Role",
        "Java",
        "Senior",
        "Developer",
        "Duration",
        "Jun",
        "Nov",
        "project",
        "enhancement",
        "support",
        "Java",
        "technology",
        "work",
        "orders",
        "functionality",
        "banking",
        "applications",
        "credit",
        "card",
        "fraud",
        "collections",
        "Responsibilities",
        "work",
        "order",
        "requirement",
        "documentation",
        "Visit",
        "customer",
        "queries",
        "requirements",
        "design",
        "functionality",
        "Code",
        "Unit",
        "Test",
        "functionality",
        "Prepare",
        "test",
        "cases",
        "Junit",
        "customer",
        "release",
        "Assist",
        "QA",
        "team",
        "user",
        "acceptance",
        "testing",
        "Assist",
        "Production",
        "Environment",
        "JavaJ2EE",
        "Design",
        "Patterns",
        "Oracle",
        "Database",
        "Progress",
        "Database",
        "Clearquest",
        "Tool",
        "Clearcase",
        "Tool",
        "Customer",
        "Telefonica",
        "Project",
        "AMS",
        "Transition",
        "Mexico",
        "City",
        "Mexico",
        "Methodology",
        "AGILE",
        "SPRINT",
        "release",
        "features",
        "release",
        "Application",
        "Management",
        "Service",
        "approach",
        "Java",
        "Developer",
        "January",
        "June",
        "goal",
        "project",
        "applications",
        "company",
        "Everis",
        "applications",
        "JavaJ2EE",
        "Java",
        "Design",
        "Patterns",
        "transition",
        "place",
        "Everis",
        "consultant",
        "application",
        "functionality",
        "documentation",
        "meetings",
        "minutes",
        "proof",
        "knowledge",
        "majority",
        "applications",
        "assets",
        "phones",
        "code",
        "Everis",
        "architecture",
        "cases",
        "code",
        "JSP",
        "Oracle",
        "database",
        "code",
        "assessment",
        "measure",
        "quality",
        "code",
        "order",
        "cases",
        "amount",
        "time",
        "code",
        "applications",
        "people",
        "struts",
        "framework",
        "JSPs",
        "code",
        "Websphere",
        "web",
        "server",
        "container",
        "base",
        "Action",
        "class",
        "application",
        "transaction",
        "way",
        "track",
        "transactions",
        "number",
        "transactions",
        "database",
        "function",
        "point",
        "estimation",
        "amount",
        "effort",
        "application",
        "transition",
        "application",
        "standards",
        "struts",
        "framework",
        "tool",
        "enhancements",
        "application",
        "Jira",
        "MIND",
        "suite",
        "requirements",
        "Requirement",
        "Management",
        "RM",
        "TestLink",
        "defect",
        "Responsibilities",
        "Transition",
        "meetings",
        "Everis",
        "consultants",
        "minutes",
        "meetings",
        "Code",
        "assessment",
        "Java",
        "applications",
        "Implement",
        "Struts",
        "framework",
        "applications",
        "applications",
        "defects",
        "Environment",
        "JavaJ2EE",
        "Design",
        "Patterns",
        "MVC",
        "Oracle",
        "10i",
        "PLSQL",
        "Websphere",
        "Application",
        "Server",
        "J2EE",
        "Design",
        "Patterns",
        "Jira",
        "RM",
        "TestLink",
        "Employer",
        "PCS",
        "Computer",
        "System",
        "Mexico",
        "SA",
        "de",
        "CV",
        "Address",
        "Av",
        "Epigmenio",
        "Gonzalez",
        "Fracc",
        "San",
        "Pablo",
        "CP",
        "Parque",
        "Tecnologico",
        "6to",
        "Piso",
        "Queretaro",
        "Qro",
        "Mexico",
        "Customer",
        "General",
        "Electric",
        "Multinational",
        "Company",
        "Program",
        "Application",
        "Enhancement",
        "Mexico",
        "Methodology",
        "Iterative",
        "Minor",
        "enhancements",
        "month",
        "Senior",
        "Java",
        "Developer",
        "GE",
        "Money",
        "Cincinnati",
        "OH",
        "April",
        "December",
        "program",
        "enhancements",
        "JavaJ2EE",
        "applications",
        "Projects",
        "GE",
        "Aviation",
        "Cincinnati",
        "OH",
        "Project",
        "Management",
        "workflow",
        "SupportCentral",
        "tool",
        "GE",
        "Money",
        "POC",
        "Java",
        "Glassfish",
        "framework",
        "GE",
        "Fleet",
        "interface",
        "Salesforcecom",
        "exchange",
        "application",
        "people",
        "country",
        "CNBC",
        "project",
        "TV",
        "calendar",
        "TV",
        "channels",
        "intention",
        "team",
        "Mexico",
        "tickets",
        "performance",
        "India",
        "Airoli",
        "India",
        "training",
        "processes",
        "procedures",
        "software",
        "development",
        "GE",
        "consumer",
        "finance",
        "stages",
        "implementation",
        "asset",
        "management",
        "Responsibilities",
        "level",
        "design",
        "functionalities",
        "Code",
        "unit",
        "functionality",
        "Build",
        "EAR",
        "file",
        "deployment",
        "QA",
        "Production",
        "environment",
        "Elaborate",
        "test",
        "cases",
        "code",
        "Build",
        "application",
        "SVN",
        "tool",
        "configuration",
        "management",
        "code",
        "Environment",
        "SupportCentral",
        "Java",
        "Glassfish",
        "Salesforcecom",
        "ServiceNow",
        "JavaJ2EE",
        "Oracle",
        "10i",
        "PLSQL",
        "SVN",
        "Employer",
        "TCS",
        "Address",
        "Insurgentes",
        "Piso",
        "Col",
        "Del",
        "Valle",
        "Mxico",
        "DF",
        "Mexico",
        "DF",
        "Mexico",
        "Customer",
        "ISBAN",
        "Banking",
        "Project",
        "Supernet",
        "Empresas",
        "Methodology",
        "Iterative",
        "Incremental",
        "Location",
        "Queretaro",
        "Mexico",
        "Java",
        "Senior",
        "Developer",
        "February",
        "April",
        "goal",
        "project",
        "banking",
        "transaction",
        "Santander",
        "ISBAN",
        "center",
        "Supernet",
        "Empresas",
        "application",
        "banking",
        "customers",
        "costs",
        "customers",
        "project",
        "procedures",
        "application",
        "effort",
        "amount",
        "people",
        "bank",
        "affiliates",
        "procedures",
        "people",
        "project",
        "technologies",
        "case",
        "JavaJ2EE",
        "piece",
        "user",
        "register",
        "transactions",
        "transfers",
        "credit",
        "card",
        "payments",
        "IDE",
        "Eclipse",
        "Tomcat",
        "server",
        "components",
        "JBoss",
        "application",
        "server",
        "Websphere",
        "Application",
        "Server",
        "Responsibilities",
        "requirements",
        "meetings",
        "transaction",
        "credit",
        "card",
        "Elaborate",
        "level",
        "design",
        "documents",
        "meetings",
        "customer",
        "level",
        "design",
        "Code",
        "Unit",
        "functionality",
        "Elaborate",
        "test",
        "cases",
        "JUnit",
        "Environment",
        "JavaJ2EE",
        "Design",
        "Patterns",
        "Struts",
        "EJB",
        "JPA",
        "Tomcat",
        "JBoss",
        "Junit",
        "Websphere",
        "Application",
        "Server",
        "Oracle",
        "10i",
        "PLSQL",
        "Eclipse",
        "Customer",
        "Profuturo",
        "GNP",
        "Insurance",
        "Company",
        "Project",
        "Annuities",
        "System",
        "Afore",
        "System",
        "Java",
        "Senior",
        "Analyst",
        "Developer",
        "Iterative",
        "Incremental",
        "Mxico",
        "DF",
        "MX",
        "May",
        "February",
        "Methodology",
        "TCS",
        "Unified",
        "Process",
        "Iterative",
        "Incremental",
        "iterations",
        "phase",
        "Location",
        "Mexico",
        "City",
        "Mexico",
        "Role",
        "Java",
        "Senior",
        "Analyst",
        "Developer",
        "Duration",
        "May",
        "Feb",
        "goal",
        "project",
        "functions",
        "CICS",
        "framework",
        "components",
        "web",
        "development",
        "application",
        "IBM",
        "Websphere",
        "Application",
        "Server",
        "DB2",
        "JavaJ2EE",
        "application",
        "order",
        "costs",
        "COBOL",
        "people",
        "hire",
        "web",
        "developers",
        "speed",
        "maintenance",
        "cycles",
        "project",
        "understanding",
        "Annuities",
        "Model",
        "Pensions",
        "K",
        "vision",
        "document",
        "project",
        "goal",
        "turn",
        "focus",
        "costs",
        "estimations",
        "K",
        "men",
        "hours",
        "application",
        "scratch",
        "components",
        "estimate",
        "UML",
        "Use",
        "Case",
        "Diagram",
        "Use",
        "Case",
        "Point",
        "estimation",
        "addition",
        "Data",
        "Modeling",
        "ETLs",
        "mainframe",
        "database",
        "Oracle",
        "Database",
        "Responsibilities",
        "stages",
        "project",
        "Vision",
        "document",
        "elaboration",
        "Elaborate",
        "Use",
        "Case",
        "Diagram",
        "Estimate",
        "project",
        "Use",
        "Case",
        "Points",
        "Elaborate",
        "case",
        "documents",
        "use",
        "cases",
        "Elaborate",
        "Functional",
        "Design",
        "documents",
        "UML",
        "Activity",
        "Diagrams",
        "Component",
        "Diagrams",
        "High",
        "Level",
        "Sequence",
        "Diagrams",
        "Elaborate",
        "Detailed",
        "Level",
        "Design",
        "Documents",
        "UML",
        "Class",
        "Diagrams",
        "UML",
        "Sequence",
        "Diagrams",
        "Elaborate",
        "Test",
        "Case",
        "Documents",
        "Environment",
        "JavaJ2EE",
        "Struts",
        "Websphere",
        "Application",
        "Server",
        "Oracle",
        "EJB",
        "JPA",
        "Junit",
        "Websphere",
        "Application",
        "Server",
        "Oracle",
        "10i",
        "Eclipse",
        "Employer",
        "Vision",
        "Consulting",
        "Address",
        "Calle",
        "Kepler",
        "Anzures",
        "Ciudad",
        "de",
        "Mxico",
        "DF",
        "Mexico",
        "Customer",
        "SAGARPA",
        "Secretary",
        "Agriculture",
        "Project",
        "Budgeting",
        "System",
        "Methodology",
        "Waterfall",
        "code",
        "migration",
        "Java",
        "Senior",
        "Developer",
        "Mexico",
        "City",
        "MX",
        "September",
        "May",
        "goal",
        "project",
        "Visual",
        "Basic",
        "application",
        "web",
        "development",
        "application",
        "JavaJ2EE",
        "customer",
        "documentation",
        "screens",
        "user",
        "Manual",
        "application",
        "estimation",
        "process",
        "NET",
        "expert",
        "code",
        "assessment",
        "code",
        "modules",
        "Visual",
        "Basic",
        "Java",
        "VB",
        "Converter",
        "Java",
        "Edition",
        "Tool",
        "part",
        "reuse",
        "policy",
        "standard",
        "JavaJ2EE",
        "code",
        "framework",
        "base",
        "classes",
        "transaction",
        "struts",
        "framework",
        "view",
        "layer",
        "end",
        "strategy",
        "screen",
        "business",
        "layer",
        "parallel",
        "screen",
        "process",
        "Visual",
        "Basic",
        "code",
        "Java",
        "component",
        "algorithm",
        "times",
        "VB",
        "Converter",
        "Java",
        "code",
        "Visual",
        "Basic",
        "code",
        "business",
        "layer",
        "programming",
        "XP",
        "design",
        "document",
        "Command",
        "Design",
        "patterns",
        "access",
        "Oracle",
        "Database",
        "PLSQL",
        "queries",
        "Responsibilities",
        "Software",
        "Evaluation",
        "VB",
        "Converter",
        "Java",
        "Edition",
        "tool",
        "modules",
        "Java",
        "code",
        "Elaborate",
        "design",
        "documents",
        "business",
        "layer",
        "base",
        "classes",
        "J2EE",
        "business",
        "layer",
        "Elaborate",
        "queries",
        "PLSQL",
        "Environment",
        "Visual",
        "Basic",
        "JavaJ2EE",
        "VB",
        "Converter",
        "Java",
        "Edition",
        "programming",
        "Oracle",
        "PLSQL",
        "Customer",
        "INMEGEN",
        "Government",
        "Health",
        "Ministry",
        "Project",
        "IBM",
        "Portlets",
        "Java",
        "Senior",
        "Developer",
        "Iterative",
        "Incremental",
        "Mxico",
        "DF",
        "MX",
        "April",
        "September",
        "Duration",
        "Apr",
        "Sept",
        "goal",
        "project",
        "cluster",
        "supercomputer",
        "genomes",
        "organisms",
        "research",
        "search",
        "engine",
        "world",
        "research",
        "INMEGEN",
        "Government",
        "investment",
        "DNA",
        "research",
        "genome",
        "organisms",
        "cancer",
        "deceases",
        "cluster",
        "Linux",
        "SUSE",
        "requests",
        "Websphere",
        "Portal",
        "Server",
        "search",
        "engine",
        "scientists",
        "DNA",
        "chain",
        "databases",
        "world",
        "eg",
        "genome",
        "string",
        "letters",
        "A",
        "B",
        "X",
        "Y",
        "billions",
        "patterns",
        "search",
        "engine",
        "piece",
        "genome",
        "billions",
        "DNA",
        "databases",
        "reason",
        "cluster",
        "searches",
        "aspects",
        "Java",
        "Virtual",
        "Machine",
        "stack",
        "indexOf",
        "method",
        "searches",
        "pieces",
        "substrings",
        "indexOf",
        "letters",
        "set",
        "letters",
        "search",
        "comparison",
        "performance",
        "average",
        "seconds",
        "query",
        "IBM",
        "Life",
        "Sciences",
        "Team",
        "Boston",
        "MA",
        "implementation",
        "IBM",
        "Portlets",
        "search",
        "Portlets",
        "Java",
        "Servlets",
        "architecture",
        "content",
        "Portal",
        "IBM",
        "tool",
        "MVC",
        "approach",
        "portlets",
        "DB2",
        "database",
        "JDBC",
        "driver",
        "DB2",
        "cases",
        "information",
        "zip",
        "files",
        "text",
        "files",
        "Java",
        "ZIP",
        "package",
        "ZIP",
        "file",
        "text",
        "files",
        "data",
        "DB2",
        "database",
        "Responsibilities",
        "Configure",
        "Portal",
        "Server",
        "content",
        "INMEGEN",
        "requirements",
        "portlets",
        "databases",
        "files",
        "FTP",
        "information",
        "DB2",
        "database",
        "Database",
        "files",
        "code",
        "queries",
        "DB2",
        "Code",
        "Unit",
        "search",
        "engine",
        "tool",
        "Assisted",
        "IBM",
        "Java",
        "Virtual",
        "Machine",
        "websphere",
        "application",
        "server",
        "node",
        "Environment",
        "Websphere",
        "Portal",
        "Server",
        "Websphere",
        "Application",
        "Server",
        "Affymetrix",
        "javautil",
        "Java",
        "Portlets",
        "IBM",
        "Portlets",
        "Servlets",
        "DB2",
        "JDBC",
        "FTP",
        "text",
        "Employer",
        "Certum",
        "Address",
        "Rodolfo",
        "Gaona",
        "Lomas",
        "Sotelo",
        "Ciudad",
        "de",
        "Mxico",
        "DF",
        "Mexico",
        "Customer",
        "Cinepolis",
        "Movie",
        "Theatre",
        "Project",
        "Kiosk",
        "Senior",
        "Java",
        "Developer",
        "Waterfall",
        "Mexico",
        "City",
        "MX",
        "December",
        "April",
        "goal",
        "project",
        "launch",
        "kiosk",
        "movie",
        "charts",
        "purchase",
        "movie",
        "tickets",
        "credit",
        "card",
        "payment",
        "NCR",
        "Kiosk",
        "PC",
        "Linux",
        "SUSE",
        "LAN",
        "connection",
        "end",
        "part",
        "Adobe",
        "Flash",
        "Javascript",
        "Java",
        "application",
        "MySQL",
        "database",
        "JDBC",
        "driver",
        "need",
        "webapplication",
        "server",
        "development",
        "kiosk",
        "Kiosk",
        "end",
        "piece",
        "PC",
        "Java",
        "application",
        "Submit",
        "button",
        "end",
        "Communication",
        "kiosk",
        "PC",
        "Remote",
        "Method",
        "Invocation",
        "RMI",
        "database",
        "TOAD",
        "Responsibilities",
        "Java",
        "Core",
        "application",
        "RMI",
        "Interfaces",
        "RMI",
        "Server",
        "Design",
        "database",
        "movie",
        "charts",
        "movie",
        "details",
        "shell",
        "scripts",
        "LINUX",
        "SUSE",
        "Extract",
        "images",
        "text",
        "database",
        "Environment",
        "NCR",
        "Kiosk",
        "Linux",
        "Adobe",
        "Flash",
        "Javascript",
        "MySQL",
        "JDBC",
        "Java",
        "Remote",
        "Method",
        "Invocation",
        "TOAD",
        "Employer",
        "eSiglo",
        "Address",
        "Culiacn",
        "esq",
        "Bajo",
        "Hipodromo",
        "Condesa",
        "Cuauhtemoc",
        "Mexico",
        "City",
        "Customer",
        "Inbursa",
        "Insurance",
        "Company",
        "Project",
        "SII",
        "Java",
        "Senior",
        "Developer",
        "FeatureDriven",
        "Development",
        "Mexico",
        "City",
        "MX",
        "August",
        "December",
        "goal",
        "project",
        "Mainframe",
        "set",
        "applications",
        "web",
        "application",
        "insurance",
        "policy",
        "requests",
        "costs",
        "terms",
        "manpower",
        "application",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Web",
        "Services",
        "technology",
        "Websphere",
        "Process",
        "Server",
        "Business",
        "Workflow",
        "insurance",
        "requests",
        "insurance",
        "requests",
        "insurance",
        "policies",
        "Web",
        "Service",
        "business",
        "rules",
        "score",
        "instrument",
        "end",
        "customer",
        "Web",
        "Services",
        "areas",
        "INBURSA",
        "dispatcher",
        "Java",
        "dispatcher",
        "web",
        "servers",
        "websphere",
        "application",
        "servers",
        "SPRING",
        "framework",
        "simplicity",
        "creation",
        "instantiation",
        "EJBs",
        "Websphere",
        "Application",
        "Server",
        "A",
        "Factory",
        "order",
        "SPRING",
        "API",
        "EJBs",
        "Websphere",
        "Process",
        "Server",
        "servers",
        "requests",
        "dispatcher",
        "MVC",
        "component",
        "JNDI",
        "requests",
        "type",
        "class",
        "web",
        "service",
        "parameter",
        "class",
        "XML",
        "file",
        "JNDI",
        "requests",
        "Command",
        "components",
        "web",
        "services",
        "code",
        "SVN",
        "Eclipse",
        "IDE",
        "Responsibilities",
        "proof",
        "concept",
        "Service",
        "Dispatcher",
        "service",
        "dispatcher",
        "code",
        "unit",
        "insurance",
        "approval",
        "module",
        "business",
        "workflow",
        "Process",
        "Server",
        "standards",
        "checkstyle",
        "Eclipse",
        "Environment",
        "SOA",
        "Web",
        "Services",
        "Design",
        "Patterns",
        "Websphere",
        "Process",
        "Server",
        "Websphere",
        "Application",
        "Server",
        "Java",
        "MVC",
        "JNDI",
        "XML",
        "SVN",
        "Eclipse",
        "Customer",
        "IFE",
        "Government",
        "Elections",
        "Institution",
        "Project",
        "SIIRFE",
        "Java",
        "Senior",
        "Developer",
        "Waterfall",
        "Mexico",
        "City",
        "MX",
        "January",
        "August",
        "goal",
        "project",
        "costs",
        "applications",
        "voters",
        "database",
        "list",
        "voting",
        "information",
        "implementation",
        "JavaJ2EE",
        "application",
        "turn",
        "transaction",
        "MVC",
        "J2EE",
        "design",
        "pattern",
        "application",
        "end",
        "end",
        "end",
        "approach",
        "end",
        "JSPs",
        "action",
        "classes",
        "Action",
        "classes",
        "turn",
        "delegate",
        "classes",
        "end",
        "end",
        "business",
        "layer",
        "EJB",
        "form",
        "session",
        "beans",
        "Session",
        "functionality",
        "HttpSession",
        "classes",
        "user",
        "information",
        "Oracle",
        "database",
        "tables",
        "data",
        "digitalization",
        "image",
        "compressors",
        "Feature",
        "Driven",
        "Development",
        "scope",
        "management",
        "terms",
        "functions",
        "code",
        "versioning",
        "SVN",
        "requirement",
        "documentation",
        "use",
        "case",
        "approach",
        "Responsibilities",
        "unit",
        "voters",
        "maintenance",
        "functionality",
        "configuration",
        "manager",
        "code",
        "maintenance",
        "main",
        "branch",
        "creation",
        "code",
        "Work",
        "specialists",
        "IFE",
        "websphere",
        "application",
        "server",
        "oracle",
        "database",
        "environment",
        "Environment",
        "JavaJ2EE",
        "MVC",
        "Design",
        "Patterns",
        "JSPs",
        "Design",
        "Patterns",
        "Websphere",
        "Application",
        "Server",
        "struts",
        "framework",
        "EJB",
        "session",
        "Oracle",
        "SVN",
        "Eclipse",
        "Netbeans",
        "Java",
        "Senior",
        "Developer",
        "Softtek",
        "Mexico",
        "City",
        "MX",
        "August",
        "December",
        "goal",
        "project",
        "CRUD",
        "application",
        "catalogs",
        "Institution",
        "application",
        "J2EE",
        "design",
        "patterns",
        "Tomcat",
        "server",
        "Institution",
        "server",
        "Database",
        "Oracle",
        "catalog",
        "tables",
        "IFE",
        "Responsibilities",
        "J2EE",
        "base",
        "classes",
        "application",
        "development",
        "Code",
        "unit",
        "transactions",
        "catalogs",
        "Environment",
        "JavaJ2EE",
        "J2EE",
        "Design",
        "Patterns",
        "Oracle",
        "Tomcat",
        "Employer",
        "Softtek",
        "Address",
        "Av",
        "Eugenio",
        "Garza",
        "Sada",
        "Parque",
        "Industrial",
        "Tecnopolo",
        "Ags",
        "Mexico",
        "Customer",
        "Fidelity",
        "Investments",
        "Project",
        "Outbound",
        "Extract",
        "Process",
        "Java",
        "Developer",
        "Waterfall",
        "Merrimack",
        "NH",
        "November",
        "August",
        "goal",
        "project",
        "reports",
        "Fidelity",
        "Investments",
        "order",
        "information",
        "companies",
        "text",
        "file",
        "web",
        "application",
        "Plain",
        "Text",
        "files",
        "Unix",
        "servers",
        "route",
        "file",
        "convention",
        "report",
        "processing",
        "jobs",
        "source",
        "company",
        "destination",
        "company",
        "report",
        "report",
        "structure",
        "destination",
        "company",
        "need",
        "applications",
        "reports",
        "analyst",
        "report",
        "source",
        "files",
        "destination",
        "files",
        "report",
        "configuration",
        "parameters",
        "Java",
        "application",
        "algorithm",
        "design",
        "configuration",
        "parameters",
        "conditions",
        "data",
        "report",
        "Java",
        "files",
        "applications",
        "crontab",
        "tool",
        "Unix",
        "Shell",
        "Responsibilities",
        "analyst",
        "algorithm",
        "Java",
        "application",
        "Code",
        "unit",
        "application",
        "package",
        "classes",
        "text",
        "servers",
        "Environment",
        "Plain",
        "Text",
        "Unix",
        "Servers",
        "Java",
        "Crontab",
        "Unix",
        "Shell",
        "Scripts",
        "Customer",
        "General",
        "Electric",
        "Capital",
        "Card",
        "Services",
        "Project",
        "Apollo",
        "Workstation",
        "Java",
        "Developer",
        "FeatureDriven",
        "Development",
        "Mason",
        "OH",
        "September",
        "November",
        "goal",
        "project",
        "Collections",
        "Customer",
        "Service",
        "modules",
        "credit",
        "card",
        "web",
        "layer",
        "mainframe",
        "infrastructure",
        "business",
        "functionality",
        "costs",
        "maintenance",
        "web",
        "layer",
        "approach",
        "tools",
        "JSP",
        "front",
        "end",
        "development",
        "screens",
        "mainframe",
        "cobol",
        "screens",
        "JSP",
        "screen",
        "component",
        "Telephony",
        "box",
        "call",
        "center",
        "javascript",
        "component",
        "caller",
        "information",
        "name",
        "address",
        "credit",
        "conditions",
        "options",
        "phone",
        "struts",
        "framework",
        "controller",
        "pattern",
        "end",
        "development",
        "view",
        "layer",
        "pomxml",
        "Mavenbased",
        "build",
        "libraries",
        "webxml",
        "filter",
        "filter",
        "mappings",
        "struts",
        "packages",
        "strutsxml",
        "actions",
        "struts",
        "methods",
        "result",
        "team",
        "developers",
        "code",
        "unit",
        "test",
        "feature",
        "IDE",
        "TogetherJ",
        "Kana",
        "Application",
        "Server",
        "webapp",
        "server",
        "Kanacomponent",
        "Adapter",
        "session",
        "bean",
        "server",
        "Kana",
        "Application",
        "Server",
        "Weblogic",
        "webapp",
        "server",
        "architecture",
        "Architecture",
        "Team",
        "base",
        "classes",
        "application",
        "Architecture",
        "Team",
        "server",
        "infrastructure",
        "equipment",
        "Challenge",
        "calls",
        "Customer",
        "Service",
        "module",
        "information",
        "Java",
        "webapp",
        "server",
        "turn",
        "call",
        "call",
        "equipment",
        "server",
        "A",
        "Business",
        "Team",
        "level",
        "design",
        "documents",
        "software",
        "developers",
        "code",
        "unit",
        "code",
        "Test",
        "cases",
        "Use",
        "Cases",
        "unit",
        "test",
        "cases",
        "Junit",
        "end",
        "components",
        "J2EE",
        "piece",
        "Data",
        "Caching",
        "component",
        "information",
        "developer",
        "developer",
        "end",
        "level",
        "database",
        "Oracle",
        "information",
        "session",
        "user",
        "tables",
        "developer",
        "user",
        "information",
        "web",
        "app",
        "server",
        "code",
        "MKS",
        "IDE",
        "TogetherJ",
        "project",
        "Feature",
        "Driven",
        "Development",
        "approach",
        "order",
        "data",
        "mainframe",
        "Packet",
        "Mapping",
        "Layer",
        "order",
        "mainframe",
        "responses",
        "text",
        "mainframe",
        "Value",
        "Objects",
        "information",
        "project",
        "vendors",
        "vendor",
        "knowledge",
        "transfer",
        "Hyderabad",
        "Ahmedabad",
        "India",
        "Responsibilities",
        "level",
        "design",
        "documents",
        "use",
        "case",
        "documents",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "code",
        "unit",
        "test",
        "packet",
        "mapping",
        "Value",
        "Objects",
        "test",
        "Collections",
        "Module",
        "code",
        "assessment",
        "code",
        "vendor",
        "code",
        "India",
        "knowledge",
        "transition",
        "Collections",
        "module",
        "people",
        "India",
        "Environment",
        "JSP",
        "Javascript",
        "Telephony",
        "JavaJ2EE",
        "J2EE",
        "Design",
        "Patterns",
        "UML",
        "Use",
        "Cases",
        "Functional",
        "design",
        "Detailed",
        "Level",
        "Design",
        "Feature",
        "Driven",
        "Development",
        "TogetherJ",
        "MKS",
        "Weblogic",
        "Kana",
        "Application",
        "Server",
        "Oracle",
        "Customer",
        "General",
        "Electric",
        "Aircraft",
        "Engines",
        "Project",
        "Key",
        "Characteristic",
        "System",
        "Java",
        "Developer",
        "Waterfall",
        "Cincinnati",
        "OH",
        "April",
        "September",
        "goal",
        "project",
        "aircraft",
        "part",
        "assembly",
        "process",
        "Sigma",
        "approach",
        "Problem",
        "Statement",
        "need",
        "KC",
        "System",
        "KC",
        "System",
        "Java",
        "Swings",
        "Netbeans",
        "IDE",
        "swings",
        "editor",
        "Java",
        "Swings",
        "java",
        "Applet",
        "web",
        "browser",
        "Java",
        "Swings",
        "Oracle",
        "database",
        "information",
        "Database",
        "PLSQL",
        "JDBC",
        "driver",
        "Oracle",
        "application",
        "aircraft",
        "parts",
        "CRUD",
        "spec",
        "limits",
        "auditors",
        "manufacturing",
        "area",
        "piece",
        "tolerance",
        "resistance",
        "performance",
        "aircraft",
        "parts",
        "information",
        "KC",
        "System",
        "Responsibilities",
        "requirement",
        "manager",
        "Code",
        "Unit",
        "screens",
        "Java",
        "Swings",
        "Code",
        "statements",
        "Oracle",
        "access",
        "Environment",
        "Sigma",
        "Java",
        "Swings",
        "Applets",
        "Oracle",
        "8i",
        "PLSQL",
        "JDBC",
        "Employer",
        "Consiss",
        "Address",
        "Ro",
        "Volga",
        "Del",
        "Valle",
        "San",
        "Pedro",
        "Garza",
        "Garca",
        "NL",
        "Mexico",
        "Customer",
        "CYDSA",
        "Corporativo",
        "Project",
        "Order",
        "Java",
        "Developer",
        "Waterfall",
        "Monterrey",
        "MX",
        "January",
        "April",
        "goal",
        "project",
        "web",
        "application",
        "shipping",
        "information",
        "chemicals",
        "seaport",
        "JSP",
        "application",
        "Progress",
        "Database",
        "JDBCODBC",
        "bridge",
        "Progress",
        "database",
        "Java",
        "JSP",
        "input",
        "information",
        "database",
        "JDBC",
        "driver",
        "ODBC",
        "data",
        "source",
        "bridge",
        "liberty",
        "interaction",
        "database",
        "Responsibilities",
        "Code",
        "unit",
        "JSPs",
        "JDBCODBC",
        "driver",
        "Implement",
        "queries",
        "information",
        "Code",
        "triggers",
        "catalogs",
        "tables",
        "Environment",
        "JSP",
        "JDBCODBC",
        "driver",
        "Progress",
        "Education",
        "Bachelor",
        "Science",
        "Computer",
        "Systems",
        "Engineering",
        "Monterrey",
        "Institute",
        "Technology",
        "Education",
        "Monterrey",
        "MX",
        "Skills",
        "Application",
        "Server",
        "years",
        "database",
        "years",
        "Java",
        "years",
        "Oracle",
        "years",
        "SQL",
        "years",
        "Java",
        "J2Ee",
        "Spring",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Web",
        "Technologies",
        "Java",
        "JSP",
        "Servlets",
        "Struts",
        "Spring",
        "Spring",
        "MVC",
        "Spring",
        "JDBC",
        "Hibernate",
        "EJB",
        "SPRING",
        "JDBC",
        "Java",
        "Webservices",
        "SOAPREST",
        "AJAX",
        "Javascript",
        "JQuery",
        "JSON",
        "HTML",
        "XML",
        "Technologies",
        "SQL",
        "PLSQL",
        "Log4J",
        "Junit",
        "UNIX",
        "Shell",
        "scripts",
        "Visual",
        "Basic",
        "Adobe",
        "Flash",
        "CS4",
        "Java",
        "Servlets",
        "Model",
        "View",
        "Controller",
        "MVC",
        "BEA",
        "Weblogic",
        "Server",
        "OpenIG",
        "OpenAM",
        "OpenDJ",
        "Encryption",
        "AES",
        "RSA",
        "Base64",
        "Servers",
        "Tomcat",
        "Weblogic",
        "Server",
        "JBOSS",
        "IBM",
        "Websphere",
        "Application",
        "Server",
        "v61",
        "Database",
        "Oracle",
        "MS",
        "SQL",
        "Server",
        "MS",
        "Access",
        "MySQL",
        "IBM",
        "Websphere",
        "Portal",
        "Server",
        "Websphere",
        "Application",
        "Server",
        "Informix",
        "Microsoft",
        "SQL",
        "Server",
        "Access",
        "IBM",
        "DB2",
        "Oracle",
        "Application",
        "Server",
        "Mainframe",
        "Operating",
        "Systems",
        "Windows",
        "Sun",
        "HPUX",
        "Linux",
        "Modeling",
        "Tools",
        "MS",
        "Visio",
        "Argo",
        "UML",
        "Toad",
        "Enterprise",
        "Architect",
        "Tools",
        "Eclipse",
        "STS",
        "Ant",
        "Maven",
        "CVS",
        "VSS",
        "Test",
        "Director",
        "Rational",
        "Application",
        "Developer",
        "Bugzilla",
        "IBM",
        "Clearcase",
        "IBM",
        "Git",
        "Hub",
        "Jersey",
        "ClearQuest",
        "HP",
        "Quality",
        "Center",
        "DB",
        "Visualizer",
        "Capability",
        "Maturity",
        "Model",
        "Integrated",
        "CMMi",
        "SDLC",
        "Methodologies",
        "Waterfall",
        "Methodology",
        "Agile",
        "Methodology",
        "Extreme",
        "Programming"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:19:37.186348",
    "resume_data": "Senior JavaRESTful Developer Senior span lJavaspanRESTful span lDeveloperspan Senior JavaRESTful Developer Capital One McLean VA More than 14 years of professional experience in enterprise application design development and integration using J2EE technology in various domains including financial healthcare and mortgages Solid experience in the analysis design development implementation and testing of clientserver Internet Intranet systems and web based applications Two years of experience in Forgerock OpenAM and OpenDJ solutions implemented in AWS EC2 instances and using DevOps tools such as Jenkins 2 Nexus Artifactory Implementing scripts in Java and Shell Scripts Experience using LDAP for searches adds modify delete Experience in Amazon Web Services AWS using various tools such as EC2 S3 Route53 ElastiCache CloudWatch Deployment Tools such as MAVEN Experience with RESTful services based on Jersey Framework handling various HTTP responses and using both JSON and XML Interacting with UI code in AngularJS or NodeJS through an Ajax based component to call orchectration layer the APIs are called handling request and responses Java EE for web application development using various frameworks and various design patterns Front End development using Java Server Pages JSP for data display and dynamic web pages using various jsp tags and basic java coding to keep the front layer light Javascript JS for data field manipulation and simple data formatting on fields labels and messaging App servers Tomcat Weblogic JBoss and Websphere Application Server to create access to file repositories databases through JNDI to various types of Command design pattern RDBM Databases such as DB2 and Oracle required JDBC specific drivers to create connections IBM solutions such as Websphere Portal Server to develop portlets to display portal content Portlets are extensions of Java Servlets and customized to perform a specific display purpose by acquiring data using jdbc without any business layer or data layer Portal Server connected through jdbc to DB2 by executing specific queries to get data from the tables Additional tables were created to obtain the data Deployment Process through the ant shell script that uses a buildxml configuration file to define the way JAR file and class components should be stored in the app server Indistinctively for Weblogic Websphere Tomcat or JBoss the ant tool servers to create WAR files to decouple front end files and EAR to encapsulate all components into one single deployment component that can later be decoupled between the web server and the app server Sponsorship required to work in the US Work Experience Senior JavaRESTful Developer Capital One McLean VA September 2015 to Present Project Forgerock Infra Set Up Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Participated on the migration from Multi Factor Authentication infrastructure implementation to the Single Sign On SSO OpenDJ infrastructure implementation Responsibilities Migrate Shell Scripts to install and configure OpenDJ on a separate AWS environment for SSO users Implement AWS EC2 instances on a 5 instance architecture for directory servers and replication servers Implement the Jenkins Jobs to build and deploy the tar into Artifactory and run the shell scripts to install and configure OpenDJ Project FORGOT MY PASSWORD Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java The goal of this project is to implement the FORGOT MY PASSWORD functionality for the Online Banking System I implemented various functionality for the FORGOTS APIs primarily working at the backend Responsibilities Code Unit Testing RESTful services using Chassis Framework based on Jersey Interacting with UI made of AngularJS and NodeJS Build using Maven and Deploy into Development Environment To implement a RESTful service to retrieve forgot username and password flow This was implemented using Jersey Framework under a standard framework called Chassis Project Enrollment Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Participated in the Enrollment Process for the Consumer Identity Online Banking App to enroll customers accounts into the mobile app Responsibilities Code Unit Testing RESTful services using Chassis Framework based on Jersey Interacting with UI made of AngularJS and NodeJS Build using Maven and Deploy into Development Environment To implement a RESTful service to retrieve forgot username and password flow This was implemented using Jersey Framework under a standard framework called Chassis Project Access Management Transition Methodology AGILE 6 SPRINTS 2 sprints per month Location McLean VA Role Senior JavaRESTful Developer Environment Chassis Jersey Agile STS Maven Java Migration from RSA to Forgerock Participated in the initial implementation of OpenAM and OpenDJ settings for Forgerock Responsibilities Code Unit Testing Build using Maven and and Deploy into Nexus a Custom Auth Module embedded in OpenAM 1200 Configure OpenIG 4 to route and redirect URLs to hide internal URLs Set up json files to establish the handlers and filters for the urls Configure OpenDJ to authenticate users through LDAP To implement a RESTful service to retrieve all unenrolled products a cardholder and a retail customer has This was implemented using Jersey Framework under a standard framework called Chassis Environment OpenAM OpenIG OpenDJ OpenIDConnect SAML OAuth2 RESTful eAPI Chassis Agile Lead JavaJ2EE eCommerce Developer Indra Sistemas Chicago IL February 2014 to November 2015 The goal of this project was to reduce one third of the operational costs by implementing a Websphere Commerce 7 solution and customize the Aurora Starter Store to include all Coppels eCommerce procedures Commerce 7 is a very customizable dynamic tool that involves the usage of REST and SOAP web services that interface with the store to validate user information obtain products and categories browse through products compare products add items to cart purchase process invoicing Additionally it can add various types of payment methods such as credit card barcode purchase cash deposit and others For credit card payments we used eGlobal service for credit validation and payment transactions That way we were able to work with Credit Card Payment with various credit card institutions such as Banamex Bancomer Banorte among other financial institutions in Mexico For geolocation we used Digital Element services For caching we used Softlayer to store static content and bring it from cache once the pages were called All Javabased components ran from Websphere Application Server WAS For defining part of the Solution Outline of this project we had to build UML diagrams to represent the Java Classes that would be used or extended from the Websphere Commerce In turn some sequence diagrams were written to represent the execution of the web services and to define which entities needed to be accessed This helped to work with some externa teams such as the SONIC team to know which web services to publish which ones would be accesses synchronously which ones asynchronously and which ones would need to be RESTful based Also we develo The web services were developed using SPRING framework using the STS IDE which enabled us to easily build the WDSL the XML and the stubs to interface with the web services within COPPEL To publish the web services we used SONIC message broker to asynchronously submit the requests to the web services and receive the response accordingly Both SOAP and RESTful services were published on under SONIC Before publishing the web services we used SOAPPUI to test the web services for all possible scenarios If XML fields were empty with the wrong data type or even implementing the scenarios defined in test case documents Aurora Starter store included a responsive front end based on JSPs CSS HTML5 javascript JSON to customize the front end On the middle tier we worked with JavaJ2EE to customize the data being sent from the front to the back end Commerce has a tight architecture so additional functionality needed to extend Command design patterns All product searches were performed using SOLR so it needs a dynamic table structure to store product categories products attributes product images etc These tables were stored on DB2 dababase implemented in a two clustered server environment for backup Also we accessed some Oracle databases for temporary storage of data which was in turn retrieved from the web services For this additional functionality was added outside the Websphere Commerce solution and access through an MVC approach using the same Websphere Application Server Queries were developed as SELECT INSERT and UPDATE statements to use the temporary data and so several STORED PROCEDURES were developed to retrieve this information every day and get it stored in the DB2 database COPPELs DBA would maintain these stored procedures after developed Responsibilities Define the Solution Outline including the functional design detailed level design store structure diagram product and category structure component diagram Resolve critical issues by installing new patches and open PMRs with IBM to get support Work with IBM in Chicago IL for configuring dynacache and execute performance testing Configure Websphere Commerce for internationalization patches Functional testing based on Software Requirement Specs and Functional Design Develop Testing Plan and defect control Environment Websphere Commerce 7 REST SOAP eGlobal Softlayer WAS JSP CSS HTML5 JS JSON DB2 Design Patterns Employer Indra Sistemas Address Av Ejercito Nacional 843 PH Java Senior Developer Col Granada Del Miguel Hidalgo CP June 2013 to November 2013 11520 Customer ISBAN Project Senior Software Developer Methodology Iterative Incremental max 3 cycles per iteration Location Queretaro Mexico Role Java Senior Developer Duration Jun 2013 to Nov 2013 This project intended to provide minor and major enhancement support in Java technology Resolving work orders for include additional functionality for various banking applications related to credit card fraud collections Responsibilities Receive work order and review the requirement documentation Visit customer to resolve queries regarding requirements Document a detailed design for the functionality to be included Code and Unit Test the functionality Prepare test cases in Junit Assist the customer in installing the new release when moving to QA Assist QA team on user acceptance testing Assist in moving to Production Environment JavaJ2EE Design Patterns Oracle Database Progress Database Clearquest Tool Clearcase Tool Customer Telefonica Project AMS Transition Mexico City Mexico Methodology AGILE 1 SPRINT per release 510 features per release under an Application Management Service approach Java Developer January 2013 to June 2013 The goal of this project was to transition 40 applications previously maintained by a company called Everis from which 16 applications were codewritten in JavaJ2EE including Java Design Patterns Initially a functional transition took place so I worked with the Everis consultant in understanding the application functionality Since no documentation was available we had formal meetings and minutes were documented to set proof that knowledge was being transitioned The majority of the java applications were related to managing internal assets such as mobile phones The code Everis wrote had no multilayer architecture and in some cases code was accessing from the JSP right directly to the Oracle database So we had to perform a code assessment to establish a measure of quality of the receiving code in order to justify in some cases the amount of time that would take to rewrite the code For all 16 applications I worked with other 6 people in implementing struts framework to decouple the JSPs from the code being executed in the Websphere web server container A standard base Action class was defined to be extended on each application transaction This way it was easier to keep track of the transactions being implemented We counted the number of transactions to the database to be executed and based on function point estimation we came to the amount of effort on each application to transition Once each application was ready with the proper coding standards and struts framework it had to be tested The tool used for tracking the enhancements on each application was Jira the MIND suite for handling requirements using Requirement Management RM and TestLink for defect registering Responsibilities Transition meetings with Everis consultants Elaborating minutes of meetings Code assessment for 4 Java applications Implement Struts framework for all 4 applications Test the applications register defects and resolve them Environment JavaJ2EE Design Patterns MVC Oracle 10i PLSQL Websphere Application Server J2EE Design Patterns Jira RM TestLink Employer PCS Computer System Mexico SA de CV Address Av Epigmenio Gonzalez 500 Fracc San Pablo CP 76130 Parque Tecnologico 6to Piso Queretaro Qro Mexico Customer General Electric Multinational Company Program Application Enhancement for Mexico Methodology Iterative Minor enhancements less than 1 month each Senior Java Developer GE Money Cincinnati OH April 2010 to December 2012 For this program I participate in various major and minor enhancements in JavaJ2EE for various applications Projects involved GE Aviation I traveled to Cincinnati OH to implement a Project Management workflow using SupportCentral tool GE Money for implementing a POC using Java Glassfish framework GE Fleet for implementing a java interface for Salesforcecom and implementing a foreign national exchange application to assist foreign people when getting transferred to another country CNBC on a project to fulfill the TV shows calendar for various TV channels The intention was to proof a small team in Mexico could resolve tickets with the same performance that in India Initially I went to Airoli India to get some training around all the processes and procedures related to software development For GE consumer finance I participate in the initial stages of ServiceNow implementation for ITIL asset management Responsibilities Elaborate detailed level design for all functionalities to be implemented Code and unit test the functionality Build the EAR file for deployment in QA and Production environment Elaborate test cases for the code to me implemented Build and deploy the application Manage the SVN tool for configuration management in code Environment SupportCentral Java Glassfish Salesforcecom ServiceNow JavaJ2EE Oracle 10i PLSQL SVN Employer TCS Address Insurgentes Sur 664 Piso 2 Col Del Valle Mxico DF 03100 Mexico DF Mexico Customer ISBAN Banking Project Supernet Empresas Methodology Iterative Incremental Location Queretaro Mexico Java Senior Developer February 2008 to April 2010 The goal of this project was to handle the 90 of the online banking transaction for Santander ISBAN center through the Supernet Empresas application to be available to all banking customers reducing costs of attending customers physically With this project many procedures were totally moved to online application which reduced the effort and amount of people bank affiliates needed to hire and train to perform all procedures This was a 300 people project handling various technologies In my case I worked in JavaJ2EE piece for user register transactions wired transfers and credit card payments IDE used was Eclipse using Tomcat server for coding and deploying the components in JBoss The application server used was Websphere Application Server Responsibilities To participate in the requirements meetings to define the online transaction for credit card requests Elaborate functional and detailed level design documents Participate in meetings with customer to approve detailed level design Code and Unit Test the functionality Elaborate test cases in JUnit Environment JavaJ2EE Design Patterns Struts EJB JPA Tomcat JBoss Junit Websphere Application Server Oracle 10i PLSQL Eclipse Customer Profuturo GNP Insurance Company Project Annuities System Afore System Java Senior Analyst Developer Iterative Incremental Mxico DF MX May 2006 to February 2008 Methodology TCS Unified Process Iterative Incremental 2 iterations for each phase Location Mexico City Mexico Role Java Senior Analyst Developer Duration May 2006 Feb 2008 The goal of this project was to migrate the existing MainframeCOBOL functions and CICS framework components to a web development application based on IBM Websphere Application Server DB2 and JavaJ2EE customized application in order to reduce costs in costly COBOL people and hire web developers and increase the speed of maintenance cycles This project involved a thorough understanding of the Annuities Model for Pensions and Afore similar to 301K A vision document was elaborated to understand the project goal which in turn centered the focus on reducing costs however initial estimations through 80K men hours to develop the entire application from scratch We had to count all the components to be developed and come to an estimate using UML Use Case Diagram and using Use Case Point estimation In addition to this we had to perform Data Modeling and develop the ETLs for migrating the mainframe database to an Oracle Database Responsibilities To participate in the initial stages of the project in the Vision document elaboration Elaborate Use Case Diagram Estimate the project using Use Case Points Elaborate uses case documents for 40 use cases Elaborate Functional Design documents using UML Activity Diagrams Component Diagrams High Level Sequence Diagrams Elaborate Detailed Level Design Documents using UML Class Diagrams UML Sequence Diagrams Elaborate Test Case Documents Environment JavaJ2EE Struts Websphere Application Server Oracle EJB JPA Junit Websphere Application Server Oracle 10i Eclipse Employer Vision Consulting Address Calle Kepler 11 Anzures 11590 Ciudad de Mxico DF Mexico Customer SAGARPA Secretary of Agriculture Project Budgeting System Methodology Waterfall code migration Java Senior Developer Mexico City MX September 2005 to May 2006 The goal of this project was to migrate the existing Visual Basic 6 application to a web development application in JavaJ2EE The customer initially provided documentation with screens and user Manual for the application which assisted in the estimation process A NET expert assisted in the code assessment and identified the code modules in Visual Basic that could be migrated to Java using VB Converter Java Edition Tool As part of the coding reuse policy standard we implemented the JavaJ2EE code framework using base classes that would be extended for each transaction The struts framework was incorporated to keep the view layer separated from the front end This strategy helped us to keep the screen coding and the business layer in parallel and since the screen coding involved a different coding process as Visual Basic code was read and analyzed and immediately after a Java component was written to follow the same algorithm Whenever applicable 30 of the times the VB Converter generated the Java code automatically based on Visual Basic code The business layer was developed using extreme programming XP based on the functional design document implementing Command Design patterns and access to the existing Oracle Database by using PLSQL queries Responsibilities Software Evaluation for VB Converter Java Edition tool Identify modules that was possible to translate into Java code Elaborate the functional design documents for business layer Establish the base classes for J2EE business layer Elaborate queries using PLSQL Environment Visual Basic 6 JavaJ2EE VB Converter Java Edition extreme programming Oracle 9i PLSQL Customer INMEGEN Government Health Ministry Project IBM Portlets Java Senior Developer Iterative Incremental Mxico DF MX April 2005 to September 2005 Duration Apr 2005 Sept 2005 The goal of this project was to implement a 28 cluster supercomputer to compute genomes of various organisms for scientific research The search engine would be accessed from all over the world and would include the scientific research performed at INMEGEN This was a Government investment that would contribute to DNA research of human genome and other organisms that genetically would be compatible for curing cancer and other terminal deceases The 28 cluster running under Linux SUSE would receive all requests from a Websphere Portal Server which included a search engine where scientists would enter the DNA chain to be searched in all scientific databases in the world eg Affymetrix The genome is represented as a string of letters A B X Y that can potentially be constructed of billions of patterns The search engine takes a small piece of that genome and compares it across the billions of DNA genomes on 12 databases and this is the reason of having a 28 cluster to perform the searches Despite of this we had to understand some aspects of the Java Virtual Machine since major stack overflows were coming out when trying to search So we had to override the indexOf method to perform partial searches in sizeable pieces of substrings so once the indexOf approached to the final letters we concatenated the next set of letters to perform the search This proved to be a better performed comparison which reduced the performance in an average of 5 seconds on each query We worked with the IBM Life Sciences Team coming from Boston MA that helped in the implementation of the IBM Portlets for genome search Portlets are basically Java Servlets with a specific architecture that can be assemble as content that can be replaced in the Portal using the IBM tool They do not follow a MVC approach so portlets access directly to a DB2 database using simple JDBC driver for DB2 In some cases information was zipped as zip files with plain text files in it so we used the Java ZIP package to read the ZIP file extract the text files parse them and insert the data in the DB2 database Responsibilities Configure the Portal Server for portal content based on INMEGEN requirements To develop 12 portlets to access 12 different databases requesting files through FTP reading them and insert the information in DB2 database Define the Database tables to insert plain files Write the code to identify the most common queries and set them in the DB2 tables Code and Unit test the genome search engine tool Assisted IBM in configuring the Java Virtual Machine for each websphere application server on each node Environment Websphere Portal Server Websphere Application Server Affymetrix javautil Java Portlets IBM Portlets Servlets DB2 JDBC FTP CORBA text parsing Employer Certum Address Rodolfo Gaona 86 Lomas de Sotelo 11200 Ciudad de Mxico DF Mexico Customer Cinepolis Movie Theatre Project Kiosk Senior Java Developer Waterfall Mexico City MX December 2004 to April 2005 The goal of this project was marketing the launch of a kiosk for consulting movie charts and purchase movie tickets using credit card payment An NCR Kiosk is just a PC running under Linux SUSE which had a LAN connection The front end part was developed using Adobe Flash and using Javascript it executed a Java application that connected to a MySQL database through JDBC driver There was no need of a webapplication server since the development was meant only for one kiosk The Kiosk only stored the front end piece and another PC stored the Java application which was executed whenever pressing the Submit button in the front end Communication between the kiosk and the PC was done through Remote Method Invocation RMI To design the database we used TOAD Responsibilities Implement the Java Core application RMI Interfaces RMI Server Design the database for movie charts and movie details Implement the shell scripts in LINUX SUSE Extract the images and plain text to update the database Environment NCR Kiosk Linux SUSE Adobe Flash Javascript MySQL JDBC Java Remote Method Invocation TOAD Employer eSiglo Address Culiacn No 123 esq Bajo Hipodromo Condesa Cuauhtemoc Mexico City Customer Inbursa Insurance Company Project SII Java Senior Developer FeatureDriven Development Mexico City MX August 2004 to December 2004 The goal of this project was to migrate the existing Mainframe set of applications into a single integrated web application for handling the insurance policy requests reducing costs in terms of manpower The application followed a Service Oriented Architecture SOA Web Services were to be developed in any technology which would be called through Websphere Process Server to interact with the Business Workflow that would receive the insurance requests review the insurance requests and approve the insurance policies Web Service would invoke the business rules to calculate the score to approve or deny an instrument to the end customer Web Services would come from various areas in INBURSA and would pass through a multithreaded dispatcher developed in Java The dispatcher would be contained on various web servers distributed across 8 websphere application servers We used SPRING framework for simplicity in the creation and instantiation of EJBs in the Websphere Application Server A Factory was developed in order to call SPRING API to instantiate the proper EJBs The Websphere Process Server would also be clustered across servers to dispatch the requests The dispatcher was a MVC based component which used JNDI to direct the requests based on the type of class the web service sent as first parameter It used ClassforNameclassName to identify the class and then reading an XML file and using JNDI we redirected the requests to execute Command components based on the web services For code versioning we used SVN and we used Eclipse as IDE Responsibilities To develop a proof of concept for the Service Dispatcher To implement the service dispatcher To code and unit test the insurance approval module To configure the business workflow in Process Server To define the coding standards checkstyle on Eclipse Environment SOA Web Services Design Patterns Websphere Process Server Websphere Application Server Java MVC JNDI XML SVN Eclipse Customer IFE Government Elections Institution Project SIIRFE Java Senior Developer Waterfall Mexico City MX January 2004 to August 2004 The goal for this project was to reduce costs by migrating the existing applications that handle the voters database and preliminary list of voting stands to keep the information updated The implementation used a JavaJ2EE application that in turn implemented each transaction using a MVC and J2EE design pattern application in a front end middle end and back end approach The front end was developed using JSPs which struts framework to define the proper action classes Action classes in turn called delegate classes to decouple front end from middle end All business layer was implemented using EJB with the form of stateless session beans Session functionality was implemented as HttpSession classes to store user information until sign out An Oracle database stored all tables and data was migrated through digitalization for image compressors A Feature Driven Development was established to handle scope management in terms of new functions The code versioning was done using SVN and requirement documentation was elaborated on a use case approach Responsibilities To code and unit test the voters list maintenance functionality Worked as configuration manager for the code maintenance main and branch creation code merging Work with the technical specialists from IFE to assist them in implementing the websphere application server and oracle database in their own environment Environment JavaJ2EE MVC Design Patterns JSPs Design Patterns Websphere Application Server struts framework EJB stateless session beans Oracle 9i SVN Eclipse Netbeans Java Senior Developer Softtek Mexico City MX August 2003 to December 2003 The goal of this project was to develop a CRUD application for specific catalogs within the Institution The application was developed following J2EE design patterns and implemented using Tomcat server as the Institution was not sure about which server to purchase Database used was Oracle 9i which had the catalog tables defined by IFE Responsibilities Define the J2EE base classes to be extended for application development Code and unit test some of the transactions for 10 catalogs Environment JavaJ2EE J2EE Design Patterns Oracle 9i Tomcat Employer Softtek Address Av Eugenio Garza Sada Parque Industrial Tecnopolo 20328 Ags Mexico Customer Fidelity Investments Project Outbound Extract Process Java Developer Waterfall Merrimack NH November 2002 to August 2003 The goal for this project was to develop various reports required by Fidelity Investments in order to shape the information received from various companies into a single plain text file that would be uploaded into an existing web application Plain Text files were placed on Unix servers under a specific route Each file maintained a naming convention so the report processing jobs would recognize the source company and the destination company the report would be generated to The report structure varied based on the destination company so the need of creating various java applications to create various reports was inevitable An analyst would design the report and define the source files and destination files as more than one report could be created based on the configuration parameters Each Java application required extensive algorithm design as many configuration parameters created various conditions for which data to include in the report The Java files were java applications run by a crontab tool as Unix Shell scripts Responsibilities Work with analyst to define the algorithm to be executed in Java application Code and unit test the java application locally Define the package classes to obtain the plain text from various servers Environment Plain Text files Unix Servers Java applications Crontab Unix Shell Scripts Customer General Electric Capital Card Services Project Apollo Workstation Java Developer FeatureDriven Development Mason OH September 2001 to November 2002 The goal for this project was to build a Collections and Customer Service modules for credit card requests A web layer to the existing mainframe infrastructure that would encapsulate all the business functionality and reduce costs of maintenance This web layer followed a Multilayered approach and evolved through various technological tools and approaches Initially a JSP front end development was defined for all screens based on the existing mainframe cobol screens On the JSP screen we inserted a javascript component that interfaced with a Telephony box operated by a call center This javascript component extracted from the caller all its information such as name address credit conditions and so on based on the options dialed through the phone The struts 20 framework was established to decouple the controller pattern from the whole front end development and set the view layer We configured the pomxml for the Mavenbased build to include the libraries and configured the webxml to apply the filter and filter mappings for the struts packages Then we configured using strutsxml all the actions for struts 20 to be used defining the appropriate methods and expected result ulrs for each one of them A team of 20 developers on which I worked dedicated to code and unit test each feature The IDE used was TogetherJ Initially the Kana Application Server was introduced as webapp server so we needed to interact with specific Kanacomponent called Adapter which worked as a stateless session bean in the server Later on we removed the Kana Application Server and used Weblogic Changing the webapp server required to incorporate a new architecture so an Architecture Team dedicated to set the proper base classes for coding the application was created Also the Architecture Team decided about the server infrastructure and inbound equipment to be used Challenge was that outbound calls would be required for the Customer Service module so all information was sent in Java through the webapp server and in turn the call to the outbound call equipment was done through the server A Business Team was put together to create functional and detailed level design documents which were used by software developers to code and unit test the code Test cases were derived from Use Cases and unit test cases were developed using Junit Regarding the back end there were various components the J2EE piece would interact A Data Caching component was set to manually send any information the developer wanted to cache If developer wanted to cache at the back end level then temporary database in Oracle 9i would be created to store the information and once the session was timed out or user logged out then those tables were removed If the developer wanted to cache user related information through the web and app server For code versioning we used MKS and as IDE we used TogetherJ This project followed a Feature Driven Development approach In order to retrieve the data from mainframe a Packet Mapping Layer was created in order to interface with the mainframe responses parse the text sent by mainframe and build Value Objects with the information requested This project was moved from various vendors and final vendor required knowledge transfer to Hyderabad and Ahmedabad India Responsibilities To elaborate functional and detailed level design documents To elaborate use case documents To elaborate class diagrams and sequence diagrams To code and unit test features To produce packet mapping Value Objects To perform functional test on Collections Module To do code assessment on the existing code To assist a new vendor to transition the code to India To conduct the knowledge transition for Collections module to people in India Environment JSP Javascript Telephony JavaJ2EE J2EE Design Patterns UML Use Cases Functional design Detailed Level Design Feature Driven Development TogetherJ MKS Weblogic Kana Application Server Oracle 9i Customer General Electric Aircraft Engines Project Key Characteristic System Java Developer Waterfall Cincinnati OH April 2000 to September 2001 The goal for this project was to improve the aircraft part assembly process A Six Sigma approach was handled to arrive to a Problem Statement to justify the need of the KC System The KC System implemented in Java Swings using the Netbeans IDE would automatically create the swings based on the editor The Java Swings would be invoked from a simple java Applet in the web browser Java Swings would interface directly to an Oracle 8i database with all the information set Database was consulted and updated through PLSQL queries through a JDBC driver for Oracle The application handled various aircraft parts and handled as a CRUD of the upper spec and lower spec limits So all auditors would measure in the manufacturing area and would capture for each piece the tolerance resistance and performance of the aircraft parts and enter the information in the KC System Responsibilities Understand the requirement from the functional manager Code and Unit Test the screens in Java Swings Code the sql statements for Oracle access Environment Six Sigma Java Swings Applets Oracle 8i PLSQL JDBC Employer Consiss Address Ro Volga 301 Del Valle 66220 San Pedro Garza Garca NL Mexico Customer CYDSA Corporativo Project To Place an Order Java Developer Waterfall Monterrey MX January 1999 to April 2000 The goal for this project was to implement a web application to enter the shipping information of all chemicals arrived to the seaport A JSP application was developed to access a Progress Database using a JDBCODBC bridge since Progress database was not compatible with Java JSP would have the input information and being sent directly to the database JDBC driver for ODBC data source was purchased with the bridge which give the liberty to move the interaction to any other database Responsibilities Code and unit test the JSPs Configure the JDBCODBC driver Implement the 4GL queries required for inserting and updating the information Code the triggers that would replicate the main catalogs into temporary tables Environment JSP JDBCODBC driver Progress Education Bachelor of Science in Computer Systems Engineering Monterrey Institute of Technology and Higher Education Monterrey MX 1994 to 1998 Skills Application Server 8 years database 10 years Java 10 years Oracle 10 years SQL 7 years Java J2Ee Spring Additional Information Technical Skills Languages Web Technologies Java 17 JSP Servlets Struts 12 Spring 312 Spring MVC Spring JDBC Hibernate 32 EJB SPRING JDBC Java Webservices SOAPREST AJAX Javascript JQuery JSON HTML XML Technologies SQL PLSQL Log4J Junit UNIX Shell scripts Visual Basic 60 Adobe Flash CS4 Java Servlets Model View Controller MVC BEA Weblogic Server RESTful OpenIG OpenAM OpenDJ Encryption AES RSA Base64 encoding Servers Tomcat 80 Weblogic Server 100 JBOSS IBM Websphere Application Server v61 Database Oracle 11g12c MS SQL Server 2000 MS Access MySQL IBM Websphere Portal Server 51 Websphere Application Server 51 Informix Microsoft SQL Server 2005 Access IBM DB2 91 Oracle 8i Application Server Mainframe Operating Systems Windows Sun OS HPUX Linux Modeling Tools MS Visio Argo UML Toad Enterprise Architect Other Tools Eclipse 37 STS Ant Maven CVS VSS Test Director Rational Application Developer Bugzilla IBM Clearcase IBM Git Hub Jersey ClearQuest HP Quality Center 100 DB Visualizer 707 Capability Maturity Model Integrated CMMi COCOMO II SDLC Methodologies Waterfall Methodology Agile Methodology Extreme Programming",
    "unique_id": "febf9b07-3a1b-401e-932b-e37fe40e2dbe"
}