{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Vertex Inc Over 6 years of experience in developing web based applications software development and design using Python R Django XML CSS HTML C DHTML Java JavaScript JQuery and AngularJS Expertise in developing web applications using Django framework Sound knowledge of Python and Python Web Framework Django Expertise in working with development tools IDEs like PyCharm Intellij Editors Visual studio code Notepad Sublime text Atom SQL workbench and Jupyter Notebook Expertise in working in configurations management tools like Git bitbucketStash Gitlab and SVN Strong in Python Object Oriented Programming and worked in modules NumPy Pandas and Matplotlib Advanced topics like iterators generators dynamic code execution and regular expressions in Python Involved with problem definition data exploration data acquisition and visualization evaluating and comparing metrics Experience with writing optimized queries and stored procedures in MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience in developing applications using socket programming TCPIP and UDP Understanding of how to use network protocol analysis using a tool like Wireshark Win dump Developed internal auxiliary web apps using HTML5 framework Exposure to Agile methodology SCRUM Strong analytical and problem solving skills always striving for new knowledge A person with multitasking and organizational skills and high ethical standards Excellent communication and interpersonal skills ability to work independently as well as part of an integrated team Effective communication and business analyst skills worked with end users architects and DBAs across the enterprise and worked in RD team which helped with sequencing the project activities by conducting the feasibility analysis and brain storming sessions Experienced in developing Web Services with python programming language Very strong full life cycle application development experience Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture and developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance and recorded the online users data using Python Django forms and implemented test case using Pytest Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Written Chef Cookbooks recipes using ruby to automate installation of Middleware Infrastructure like Apache Tomcat JDK and configuration tasks for new environments Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Expertise in React JS and working with React Flux architecture Integrated Apache Kafka for data ingestion Successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL and without Kerberos Further with more grainfines Security I set up Kerberos to have users and groups this will enable more advanced security features Used NumPy for Numerical analysis and several python libraries like SymPy wxPython and matPlotLib Successfully Generated consumer group lags from Kafka using their API Kafka Used for building realtime data pipelines between clusters Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Experience in setting up CICD pipeline integrating various tools with Jenkins to build and run Terraform jobs to create infrastructure in AWS Work Experience Python Developer Vertex Inc King of Prussia PA September 2017 to Present Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Designed the front end of the application using HTML5 CSS3 AJAX JSON and jQuery Developed RESTful services using Django Worked on backend of the application mainly using Active Records Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions in order to match the pattern with the existing one Developed web applications in Django Frameworks model view control MVC architecture Worked on MultiThreading factory to distribute learning process backtesting and into various worker processes Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Extensively worked on various Python IDEs using PyCharm and Sublime Text Developed designed automation framework using Python and Shell scripting Managed large datasets using Panda data frames and MySQL Extensively used Python modules such as requests Urllib Urllib 2 for web crawling Developed GUI using Webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Developed PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Environment Python 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS jQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo Script Eclipse Linux Shell Python Developer Discover Financial Services August 2015 to September 2017 Responsibilities Developed webbased applications using Python Django XML CSS HTML JavaScript and jQuery Experience with JSON based REST Web services and Amazon Web Services AWS Worked on Amazon services like Amazon Cloud EC2 Added support for Amazon AWS to host staticmedia files and the database into Amazon Cloud Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on PostgreSQL database Used Django Database APIs to access database objects Also involved in validating and processing of files Worked in Agile and SCRUM methodologies with high quality deliverables delivered ontime Experience with continuous integration and automation using Jenkins Involved in Unit testing using Python Unit test framework Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Designed Interface using Bootstrap framework Tracking defects and resolving bugs using JIRA Worked in development of applications especially in UNIX environment and familiar with all of its commands Generated Python R Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Gathered and analyzed the requirements and converted them into User Requirement Specifications and Functional Requirement Specifications for the designers and developers to understand them as per their perspective Experience with working on multiple environments like development testing production Excellent analytical and problemsolving skills and ability to work on own besides being valuable and contributing team player Environment Python Django PostgreSQL Amazon EC2 HTML5CSS3 AJAX jQuery JavaScript JIRA Python Developer Medplus Hyderabad Telangana January 2014 to March 2015 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Worked on designing coding and developing the application in Python using Django MVC Experience in implementing and working on the python code using shell scripting Performed troubleshooting fixed and deployed many python bug fixes Worked on integrating Python with Web development tools for developing Web Services in python using XML JSON Worked on serverside applications with Django using python programming Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Working on pythons UNITTEST and PYTEST frameworks Strong Experience with python automation in automating Rest API and UI automation using Selenium web driver using Python Analyzing business requirements responsible for manually testing functionality and then automation using python Experience using nodejs for serverside scripting to create web pages Worked on front end part using Reactjs to design the web pages Testing Restful web services with JSON payload using POSTMAN and automating them using python framework Created dynamic web pages using nodejs before the page is sent to users web browser Knowledge on SAS regarding transfer of data between client systems and SSDs As we have vast number of libraries in React it made us easy to work and make reuse of components that are created only once We used RBAC and ACL to define the business roles for the users to provide them with the access by maintaining the security with their application Stored the data in an Apache Cassandra Cluster Used Impala to query the Hadoop data stored in HDFS Used third party web service APIs like google for User registration App engine for search and Custom search Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Used Python HTML CSS to help the team implement dozens of new features in a massively scaled Google App Engine web application Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in python and Bash Performed job functions using Spark APIs in Scala for real time analysis and for fast querying purposes Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Designed and developed scalable Azure APIs using Flask web framework in Python and Integrated with Azure API Management Logical Apps and other Azure services Environment Python Django Framework Azure APIs Shell Scripting Spark ReactJS Google APIs SOAP REST Hadoop RBAC ACL Pandas NVMe Docker Postman nodejs MySQL Selenium Scala Flash AWS Windows Unix Python Developer Kroger CSC Hyderabad Hyderabad Telangana July 2013 to January 2014 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database system Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased scheme Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services Skills DJANGO 5 years INTEGRATION 5 years INTEGRATOR 5 years PYTHON 5 years JAVA 3 years Additional Information TECHNICAL SKILLS Languages Python 3x2724 Java R Framework DjangoDRF Web frameworks Versioning Tools Git SVN CVS Databases MySQL DB2 Teradata Operating Systems Windows Mac Linux ZOS IDEDevelopment Tools PyCharm Intellij Python IDLE PyDev Pyscripter spyder jupyter Bug Tracking Tools Jira and Bugzilla Integration Tools Jenkins and webbuilder MS Office Tools Microsoft Word Microsoft Excel Microsoft PowerPoint Query Languages SQL PLSQL PostgreSQL",
    "entities": [
        "Node",
        "Hadoop Clusters",
        "AJAX",
        "Test Driven Development TDD",
        "GUI",
        "Nodejs",
        "SVN Strong",
        "UDP Understanding",
        "UNIX",
        "Agile Software Methodology",
        "REST JSON",
        "Working",
        "Utilize PyUnit",
        "Google APIs SOAP REST Hadoop RBAC",
        "Node Package",
        "Panda",
        "Google App Engine",
        "Python REST API Framework Implemented",
        "Hadoop",
        "XML",
        "Bug Tracking Tools Jira and Bugzilla Integration",
        "React",
        "Software Development Life Cycle SDLC",
        "Shell",
        "the Performance of Stored Procedures and Queries Installed",
        "Amazon",
        "Python",
        "Mongo",
        "Developed",
        "Oracle Relational",
        "Bash",
        "Kerberos",
        "Sublime Text Developed",
        "Created Python",
        "Django",
        "Utilized",
        "Bash Performed",
        "Jenkins Involved",
        "Python Unit",
        "MultiThreading",
        "Git",
        "Pytest Developed Ruby Python",
        "Custom",
        "Firebug Web Services",
        "RD",
        "Additional Information TECHNICAL SKILLS Languages Python",
        "Develop",
        "Developed Serverside",
        "jQuery Developed",
        "Middleware Infrastructure like",
        "Amazon Cloud",
        "PyCharm Intellij Editors Visual",
        "AWS Work Experience Python Developer Vertex Inc King of Prussia",
        "Collaborated",
        "Flask",
        "Built",
        "VMWare API",
        "Views",
        "SSL",
        "PyQt",
        "MVC",
        "Interface",
        "API Management",
        "Spark",
        "Redux",
        "GIT",
        "Node JS",
        "Python on Django",
        "API",
        "Python Analyzing business requirements",
        "RBAC",
        "Terraform",
        "Web Services",
        "Python R Django Forms",
        "Created",
        "Gitlab",
        "AWS",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Bash Designed",
        "PyCharm",
        "Generated Python Django Forms",
        "Secured Web services",
        "SAS",
        "Shell Scripting Spark",
        "Python Spring IOC Inversion",
        "Python R Django XML CSS",
        "SQL",
        "Development of Isomorphic",
        "React Flux",
        "Django Oracle DB PostgreSQL",
        "Bootstrap framework Tracking",
        "User Requirement Specifications and Functional Requirement Specifications",
        "lPythonspan",
        "Python Django",
        "Git Collect",
        "Jenkins Ansible",
        "Administrators",
        "API Integration Responsible for Configuring Kafka Consumer",
        "Python Spring Security",
        "Written Chef Cookbooks",
        "Kerberos Implemented Kafka Security Features",
        "ACL",
        "Hive",
        "API Integration Involved",
        "CICD",
        "Amazon AWS",
        "Wrote",
        "CICD Pipeline",
        "BOOTSTRAP UI",
        "Bash Managed",
        "Pandas",
        "Python Involved",
        "CRUD",
        "Python Object Oriented Programming",
        "Microsoft PowerPoint Query Languages SQL PLSQL PostgreSQL",
        "Performed",
        "Present Responsibilities Created Python",
        "Firebug Used JIRA",
        "UI",
        "Selenium",
        "Amazon Web Services AWS Worked",
        "Microsoft",
        "Kafka System",
        "jQuery",
        "AMAZON EMR",
        "REST",
        "NoSQL",
        "JIRA Worked",
        "Python Developer Vertex Inc",
        "Integration",
        "Developed GUI",
        "TCPIP"
    ],
    "experience": "Experience with writing optimized queries and stored procedures in MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience in developing applications using socket programming TCPIP and UDP Understanding of how to use network protocol analysis using a tool like Wireshark Win dump Developed internal auxiliary web apps using HTML5 framework Exposure to Agile methodology SCRUM Strong analytical and problem solving skills always striving for new knowledge A person with multitasking and organizational skills and high ethical standards Excellent communication and interpersonal skills ability to work independently as well as part of an integrated team Effective communication and business analyst skills worked with end users architects and DBAs across the enterprise and worked in RD team which helped with sequencing the project activities by conducting the feasibility analysis and brain storming sessions Experienced in developing Web Services with python programming language Very strong full life cycle application development experience Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture and developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance and recorded the online users data using Python Django forms and implemented test case using Pytest Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Written Chef Cookbooks recipes using ruby to automate installation of Middleware Infrastructure like Apache Tomcat JDK and configuration tasks for new environments Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Expertise in React JS and working with React Flux architecture Integrated Apache Kafka for data ingestion Successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL and without Kerberos Further with more grainfines Security I set up Kerberos to have users and groups this will enable more advanced security features Used NumPy for Numerical analysis and several python libraries like SymPy wxPython and matPlotLib Successfully Generated consumer group lags from Kafka using their API Kafka Used for building realtime data pipelines between clusters Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Experience in setting up CICD pipeline integrating various tools with Jenkins to build and run Terraform jobs to create infrastructure in AWS Work Experience Python Developer Vertex Inc King of Prussia PA September 2017 to Present Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Designed the front end of the application using HTML5 CSS3 AJAX JSON and jQuery Developed RESTful services using Django Worked on backend of the application mainly using Active Records Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions in order to match the pattern with the existing one Developed web applications in Django Frameworks model view control MVC architecture Worked on MultiThreading factory to distribute learning process backtesting and into various worker processes Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Extensively worked on various Python IDEs using PyCharm and Sublime Text Developed designed automation framework using Python and Shell scripting Managed large datasets using Panda data frames and MySQL Extensively used Python modules such as requests Urllib Urllib 2 for web crawling Developed GUI using Webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Developed PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Environment Python 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS jQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo Script Eclipse Linux Shell Python Developer Discover Financial Services August 2015 to September 2017 Responsibilities Developed webbased applications using Python Django XML CSS HTML JavaScript and jQuery Experience with JSON based REST Web services and Amazon Web Services AWS Worked on Amazon services like Amazon Cloud EC2 Added support for Amazon AWS to host staticmedia files and the database into Amazon Cloud Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on PostgreSQL database Used Django Database APIs to access database objects Also involved in validating and processing of files Worked in Agile and SCRUM methodologies with high quality deliverables delivered ontime Experience with continuous integration and automation using Jenkins Involved in Unit testing using Python Unit test framework Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Designed Interface using Bootstrap framework Tracking defects and resolving bugs using JIRA Worked in development of applications especially in UNIX environment and familiar with all of its commands Generated Python R Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Gathered and analyzed the requirements and converted them into User Requirement Specifications and Functional Requirement Specifications for the designers and developers to understand them as per their perspective Experience with working on multiple environments like development testing production Excellent analytical and problemsolving skills and ability to work on own besides being valuable and contributing team player Environment Python Django PostgreSQL Amazon EC2 HTML5CSS3 AJAX jQuery JavaScript JIRA Python Developer Medplus Hyderabad Telangana January 2014 to March 2015 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Worked on designing coding and developing the application in Python using Django MVC Experience in implementing and working on the python code using shell scripting Performed troubleshooting fixed and deployed many python bug fixes Worked on integrating Python with Web development tools for developing Web Services in python using XML JSON Worked on serverside applications with Django using python programming Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Working on pythons UNITTEST and PYTEST frameworks Strong Experience with python automation in automating Rest API and UI automation using Selenium web driver using Python Analyzing business requirements responsible for manually testing functionality and then automation using python Experience using nodejs for serverside scripting to create web pages Worked on front end part using Reactjs to design the web pages Testing Restful web services with JSON payload using POSTMAN and automating them using python framework Created dynamic web pages using nodejs before the page is sent to users web browser Knowledge on SAS regarding transfer of data between client systems and SSDs As we have vast number of libraries in React it made us easy to work and make reuse of components that are created only once We used RBAC and ACL to define the business roles for the users to provide them with the access by maintaining the security with their application Stored the data in an Apache Cassandra Cluster Used Impala to query the Hadoop data stored in HDFS Used third party web service APIs like google for User registration App engine for search and Custom search Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Used Python HTML CSS to help the team implement dozens of new features in a massively scaled Google App Engine web application Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in python and Bash Performed job functions using Spark APIs in Scala for real time analysis and for fast querying purposes Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Designed and developed scalable Azure APIs using Flask web framework in Python and Integrated with Azure API Management Logical Apps and other Azure services Environment Python Django Framework Azure APIs Shell Scripting Spark ReactJS Google APIs SOAP REST Hadoop RBAC ACL Pandas NVMe Docker Postman nodejs MySQL Selenium Scala Flash AWS Windows Unix Python Developer Kroger CSC Hyderabad Hyderabad Telangana July 2013 to January 2014 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database system Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased scheme Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services Skills DJANGO 5 years INTEGRATION 5 years INTEGRATOR 5 years PYTHON 5 years JAVA 3 years Additional Information TECHNICAL SKILLS Languages Python 3x2724 Java R Framework DjangoDRF Web frameworks Versioning Tools Git SVN CVS Databases MySQL DB2 Teradata Operating Systems Windows Mac Linux ZOS IDEDevelopment Tools PyCharm Intellij Python IDLE PyDev Pyscripter spyder jupyter Bug Tracking Tools Jira and Bugzilla Integration Tools Jenkins and webbuilder MS Office Tools Microsoft Word Microsoft Excel Microsoft PowerPoint Query Languages SQL PLSQL PostgreSQL",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Vertex",
        "Inc",
        "years",
        "experience",
        "web",
        "applications",
        "software",
        "development",
        "design",
        "Python",
        "R",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "C",
        "DHTML",
        "Java",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "Expertise",
        "web",
        "applications",
        "Django",
        "framework",
        "knowledge",
        "Python",
        "Python",
        "Web",
        "Framework",
        "Django",
        "Expertise",
        "development",
        "tools",
        "IDEs",
        "PyCharm",
        "Intellij",
        "Editors",
        "Visual",
        "studio",
        "code",
        "Notepad",
        "Sublime",
        "text",
        "Atom",
        "SQL",
        "workbench",
        "Jupyter",
        "Notebook",
        "Expertise",
        "configurations",
        "management",
        "tools",
        "Git",
        "Gitlab",
        "SVN",
        "Strong",
        "Python",
        "Object",
        "Oriented",
        "Programming",
        "modules",
        "NumPy",
        "Pandas",
        "Matplotlib",
        "topics",
        "iterators",
        "code",
        "execution",
        "expressions",
        "Python",
        "problem",
        "definition",
        "data",
        "exploration",
        "data",
        "acquisition",
        "visualization",
        "metrics",
        "Experience",
        "queries",
        "procedures",
        "MYSQL",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "SQL",
        "PostgreSQL",
        "database",
        "Experience",
        "applications",
        "socket",
        "programming",
        "TCPIP",
        "UDP",
        "Understanding",
        "network",
        "protocol",
        "analysis",
        "tool",
        "Wireshark",
        "Win",
        "web",
        "apps",
        "HTML5",
        "framework",
        "Exposure",
        "methodology",
        "Strong",
        "analytical",
        "problem",
        "skills",
        "knowledge",
        "person",
        "skills",
        "standards",
        "communication",
        "skills",
        "ability",
        "part",
        "team",
        "communication",
        "business",
        "analyst",
        "skills",
        "end",
        "users",
        "architects",
        "DBAs",
        "enterprise",
        "RD",
        "team",
        "project",
        "activities",
        "feasibility",
        "analysis",
        "brain",
        "storming",
        "sessions",
        "Web",
        "Services",
        "python",
        "programming",
        "language",
        "life",
        "cycle",
        "application",
        "development",
        "experience",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "application",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "Collect",
        "data",
        "performance",
        "query",
        "operations",
        "instance",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "Pytest",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Launched",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "Written",
        "Chef",
        "Cookbooks",
        "recipes",
        "ruby",
        "installation",
        "Middleware",
        "Infrastructure",
        "Apache",
        "Tomcat",
        "JDK",
        "configuration",
        "tasks",
        "environments",
        "expression",
        "search",
        "results",
        "combination",
        "Angular2",
        "builtin",
        "custom",
        "pipes",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "web",
        "services",
        "Nodejs",
        "dependencies",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "Expertise",
        "React",
        "JS",
        "React",
        "Flux",
        "architecture",
        "Integrated",
        "Apache",
        "Kafka",
        "data",
        "ingestion",
        "Kafka",
        "cluster",
        "Kerberos",
        "Kafka",
        "Security",
        "Features",
        "SSL",
        "Kerberos",
        "Further",
        "grainfines",
        "Security",
        "Kerberos",
        "users",
        "groups",
        "security",
        "features",
        "NumPy",
        "Numerical",
        "analysis",
        "python",
        "libraries",
        "SymPy",
        "wxPython",
        "matPlotLib",
        "consumer",
        "group",
        "lags",
        "Kafka",
        "API",
        "Kafka",
        "data",
        "pipelines",
        "clusters",
        "serverside",
        "applications",
        "Django",
        "Python",
        "programming",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "matplotlib",
        "SciPy",
        "NumPy",
        "Nodejs",
        "backend",
        "client",
        "web",
        "application",
        "Experience",
        "CICD",
        "Pipeline",
        "code",
        "release",
        "process",
        "Integration",
        "tools",
        "GitSVN",
        "GitHub",
        "Jenkins",
        "tools",
        "base",
        "tasks",
        "Python",
        "Shell",
        "scripting",
        "XML",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Experience",
        "CICD",
        "pipeline",
        "tools",
        "Jenkins",
        "Terraform",
        "jobs",
        "infrastructure",
        "AWS",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Vertex",
        "Inc",
        "King",
        "Prussia",
        "PA",
        "September",
        "Present",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Responsible",
        "Configuring",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "user",
        "interface",
        "BOOTSTRAP",
        "UI",
        "Angular",
        "JavaScript",
        "complexities",
        "application",
        "Wrote",
        "Lambda",
        "functions",
        "python",
        "AWSs",
        "Lambda",
        "Kinesis",
        "Elastic",
        "Search",
        "scripts",
        "transformations",
        "analytics",
        "data",
        "sets",
        "AMAZON",
        "EMR",
        "clusters",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "testing",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "end",
        "application",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "jQuery",
        "services",
        "Django",
        "backend",
        "application",
        "Active",
        "Records",
        "communication",
        "client",
        "server",
        "Secured",
        "Web",
        "services",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "clip",
        "board",
        "features",
        "client",
        "requirements",
        "expressions",
        "order",
        "pattern",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Python",
        "IDEs",
        "PyCharm",
        "Sublime",
        "Text",
        "Developed",
        "automation",
        "framework",
        "Python",
        "Shell",
        "scripting",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Python",
        "modules",
        "requests",
        "Urllib",
        "Urllib",
        "web",
        "Developed",
        "GUI",
        "Webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "Python",
        "code",
        "web",
        "browser",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "Developed",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQL",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "Environment",
        "Python",
        "Java",
        "Django",
        "HTML5",
        "CSS3",
        "XML",
        "JSON",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "jQuery",
        "CSS",
        "Bootstrap",
        "Puppet",
        "Postgre",
        "SQL",
        "Amazon",
        "s3",
        "Jenkins",
        "Mongo",
        "Script",
        "Eclipse",
        "Linux",
        "Shell",
        "Python",
        "Developer",
        "Discover",
        "Financial",
        "Services",
        "August",
        "September",
        "Responsibilities",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "Experience",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Amazon",
        "services",
        "Amazon",
        "Cloud",
        "EC2",
        "support",
        "Amazon",
        "AWS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "PostgreSQL",
        "database",
        "Django",
        "Database",
        "APIs",
        "database",
        "objects",
        "processing",
        "files",
        "Agile",
        "methodologies",
        "quality",
        "deliverables",
        "ontime",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Unit",
        "testing",
        "Python",
        "Unit",
        "test",
        "framework",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "Interface",
        "Bootstrap",
        "framework",
        "Tracking",
        "defects",
        "bugs",
        "JIRA",
        "Worked",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Python",
        "R",
        "Django",
        "data",
        "users",
        "Utilize",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Python",
        "batch",
        "processors",
        "feeds",
        "testing",
        "tools",
        "Python",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Generated",
        "Python",
        "Django",
        "data",
        "users",
        "Utilize",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Python",
        "batch",
        "processors",
        "feeds",
        "testing",
        "tools",
        "Python",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "requirements",
        "User",
        "Requirement",
        "Specifications",
        "Functional",
        "Requirement",
        "Specifications",
        "designers",
        "developers",
        "perspective",
        "Experience",
        "environments",
        "development",
        "testing",
        "production",
        "Excellent",
        "skills",
        "ability",
        "team",
        "player",
        "Environment",
        "Python",
        "Django",
        "PostgreSQL",
        "Amazon",
        "EC2",
        "HTML5CSS3",
        "AJAX",
        "jQuery",
        "JavaScript",
        "JIRA",
        "Python",
        "Developer",
        "Medplus",
        "Hyderabad",
        "Telangana",
        "January",
        "March",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "application",
        "Python",
        "Django",
        "MVC",
        "Experience",
        "python",
        "code",
        "shell",
        "Performed",
        "troubleshooting",
        "python",
        "bug",
        "fixes",
        "Python",
        "Web",
        "development",
        "tools",
        "Web",
        "Services",
        "python",
        "XML",
        "JSON",
        "serverside",
        "applications",
        "Django",
        "python",
        "programming",
        "Collaborated",
        "team",
        "development",
        "workflow",
        "collaboration",
        "practices",
        "Git",
        "Working",
        "pythons",
        "UNITTEST",
        "PYTEST",
        "Strong",
        "Experience",
        "python",
        "automation",
        "Rest",
        "API",
        "UI",
        "automation",
        "Selenium",
        "web",
        "driver",
        "Python",
        "business",
        "requirements",
        "functionality",
        "automation",
        "python",
        "Experience",
        "serverside",
        "web",
        "pages",
        "end",
        "part",
        "Reactjs",
        "web",
        "pages",
        "Restful",
        "web",
        "services",
        "payload",
        "POSTMAN",
        "framework",
        "web",
        "pages",
        "page",
        "users",
        "web",
        "browser",
        "Knowledge",
        "SAS",
        "transfer",
        "data",
        "client",
        "systems",
        "SSDs",
        "number",
        "libraries",
        "React",
        "reuse",
        "components",
        "RBAC",
        "ACL",
        "business",
        "roles",
        "users",
        "access",
        "security",
        "application",
        "data",
        "Apache",
        "Cassandra",
        "Cluster",
        "Impala",
        "Hadoop",
        "data",
        "HDFS",
        "party",
        "web",
        "service",
        "APIs",
        "google",
        "User",
        "registration",
        "App",
        "engine",
        "search",
        "Custom",
        "search",
        "documentation",
        "Hadoop",
        "Clusters",
        "Hive",
        "queries",
        "Pig",
        "Scripts",
        "Python",
        "HTML",
        "CSS",
        "team",
        "dozens",
        "features",
        "Google",
        "App",
        "Engine",
        "web",
        "application",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "python",
        "Bash",
        "Performed",
        "job",
        "functions",
        "Spark",
        "APIs",
        "Scala",
        "time",
        "analysis",
        "purposes",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Python",
        "Scala",
        "APIs",
        "Flask",
        "web",
        "framework",
        "Python",
        "Integrated",
        "API",
        "Management",
        "Logical",
        "Apps",
        "Azure",
        "services",
        "Environment",
        "Python",
        "Django",
        "Framework",
        "Azure",
        "APIs",
        "Shell",
        "Scripting",
        "Spark",
        "ReactJS",
        "Google",
        "APIs",
        "SOAP",
        "REST",
        "Hadoop",
        "RBAC",
        "ACL",
        "Pandas",
        "NVMe",
        "Docker",
        "Postman",
        "nodejs",
        "MySQL",
        "Selenium",
        "Scala",
        "Flash",
        "AWS",
        "Unix",
        "Python",
        "Developer",
        "Kroger",
        "CSC",
        "Hyderabad",
        "Hyderabad",
        "Telangana",
        "July",
        "January",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "Salt",
        "Stack",
        "infrastructure",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "integration",
        "database",
        "system",
        "Serverside",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "scheme",
        "Performance",
        "tuning",
        "Performance",
        "Stored",
        "Procedures",
        "Queries",
        "Installed",
        "py",
        "Builder",
        "application",
        "builds",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "Deployed",
        "SOAP",
        "Web",
        "Services",
        "Tomcat",
        "Server",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "IDE",
        "tool",
        "application",
        "JIRA",
        "bug",
        "issue",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "GIT",
        "team",
        "development",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML",
        "CSS",
        "NoSQL",
        "JavaScript",
        "JQuery",
        "Sublime",
        "Text",
        "Jira",
        "GIT",
        "py",
        "Builder",
        "unit",
        "test",
        "Firebug",
        "Web",
        "Services",
        "Skills",
        "DJANGO",
        "years",
        "INTEGRATION",
        "years",
        "INTEGRATOR",
        "years",
        "PYTHON",
        "years",
        "years",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Python",
        "3x2724",
        "Java",
        "R",
        "Framework",
        "DjangoDRF",
        "Web",
        "frameworks",
        "Versioning",
        "Tools",
        "Git",
        "SVN",
        "CVS",
        "MySQL",
        "DB2",
        "Teradata",
        "Operating",
        "Systems",
        "Windows",
        "Mac",
        "Linux",
        "ZOS",
        "IDEDevelopment",
        "Tools",
        "PyCharm",
        "Intellij",
        "Python",
        "IDLE",
        "PyDev",
        "Pyscripter",
        "spyder",
        "jupyter",
        "Bug",
        "Tracking",
        "Tools",
        "Jira",
        "Bugzilla",
        "Integration",
        "Tools",
        "Jenkins",
        "MS",
        "Office",
        "Tools",
        "Microsoft",
        "Word",
        "Microsoft",
        "Excel",
        "Microsoft",
        "PowerPoint",
        "Query",
        "Languages",
        "SQL",
        "PLSQL",
        "PostgreSQL"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:32:01.604700",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Vertex Inc Over 6 years of experience in developing web based applications software development and design using Python R Django XML CSS HTML C DHTML Java JavaScript JQuery and AngularJS Expertise in developing web applications using Django framework Sound knowledge of Python and Python Web Framework Django Expertise in working with development tools IDEs like PyCharm Intellij Editors Visual studio code Notepad Sublime text Atom SQL workbench and Jupyter Notebook Expertise in working in configurations management tools like Git bitbucketStash Gitlab and SVN Strong in Python Object Oriented Programming and worked in modules NumPy Pandas and Matplotlib Advanced topics like iterators generators dynamic code execution and regular expressions in Python Involved with problem definition data exploration data acquisition and visualization evaluating and comparing metrics Experience with writing optimized queries and stored procedures in MYSQL Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Experience in developing applications using socket programming TCPIP and UDP Understanding of how to use network protocol analysis using a tool like Wireshark Win dump Developed internal auxiliary web apps using HTML5 framework Exposure to Agile methodology SCRUM Strong analytical and problem solving skills always striving for new knowledge A person with multitasking and organizational skills and high ethical standards Excellent communication and interpersonal skills ability to work independently as well as part of an integrated team Effective communication and business analyst skills worked with end users architects and DBAs across the enterprise and worked in RD team which helped with sequencing the project activities by conducting the feasibility analysis and brain storming sessions Experienced in developing Web Services with python programming language Very strong full life cycle application development experience Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture and developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance and recorded the online users data using Python Django forms and implemented test case using Pytest Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Written Chef Cookbooks recipes using ruby to automate installation of Middleware Infrastructure like Apache Tomcat JDK and configuration tasks for new environments Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Expertise in React JS and working with React Flux architecture Integrated Apache Kafka for data ingestion Successfully secured the Kafka cluster with Kerberos Implemented Kafka Security Features using SSL and without Kerberos Further with more grainfines Security I set up Kerberos to have users and groups this will enable more advanced security features Used NumPy for Numerical analysis and several python libraries like SymPy wxPython and matPlotLib Successfully Generated consumer group lags from Kafka using their API Kafka Used for building realtime data pipelines between clusters Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Experience in setting up CICD pipeline integrating various tools with Jenkins to build and run Terraform jobs to create infrastructure in AWS Work Experience Python Developer Vertex Inc King of Prussia PA September 2017 to Present Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Designed the front end of the application using HTML5 CSS3 AJAX JSON and jQuery Developed RESTful services using Django Worked on backend of the application mainly using Active Records Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions in order to match the pattern with the existing one Developed web applications in Django Frameworks model view control MVC architecture Worked on MultiThreading factory to distribute learning process backtesting and into various worker processes Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Extensively worked on various Python IDEs using PyCharm and Sublime Text Developed designed automation framework using Python and Shell scripting Managed large datasets using Panda data frames and MySQL Extensively used Python modules such as requests Urllib Urllib 2 for web crawling Developed GUI using Webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Developed PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Environment Python 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS jQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo Script Eclipse Linux Shell Python Developer Discover Financial Services August 2015 to September 2017 Responsibilities Developed webbased applications using Python Django XML CSS HTML JavaScript and jQuery Experience with JSON based REST Web services and Amazon Web Services AWS Worked on Amazon services like Amazon Cloud EC2 Added support for Amazon AWS to host staticmedia files and the database into Amazon Cloud Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on PostgreSQL database Used Django Database APIs to access database objects Also involved in validating and processing of files Worked in Agile and SCRUM methodologies with high quality deliverables delivered ontime Experience with continuous integration and automation using Jenkins Involved in Unit testing using Python Unit test framework Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Designed Interface using Bootstrap framework Tracking defects and resolving bugs using JIRA Worked in development of applications especially in UNIX environment and familiar with all of its commands Generated Python R Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Responsible for gathering requirements system analysis design development testing and deployment Generated Python Django Forms to Record data of users Utilize PyUnit the Python unit test framework for all Python applications Rewrite existing Java application in Python module to deliver certain format of data Developed Python batch processors to consume and produce various feeds Worked on developing internal testing tools which were written in Python Generated Python Django Forms to record data of online users Gathered and analyzed the requirements and converted them into User Requirement Specifications and Functional Requirement Specifications for the designers and developers to understand them as per their perspective Experience with working on multiple environments like development testing production Excellent analytical and problemsolving skills and ability to work on own besides being valuable and contributing team player Environment Python Django PostgreSQL Amazon EC2 HTML5CSS3 AJAX jQuery JavaScript JIRA Python Developer Medplus Hyderabad Telangana January 2014 to March 2015 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Worked on designing coding and developing the application in Python using Django MVC Experience in implementing and working on the python code using shell scripting Performed troubleshooting fixed and deployed many python bug fixes Worked on integrating Python with Web development tools for developing Web Services in python using XML JSON Worked on serverside applications with Django using python programming Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Working on pythons UNITTEST and PYTEST frameworks Strong Experience with python automation in automating Rest API and UI automation using Selenium web driver using Python Analyzing business requirements responsible for manually testing functionality and then automation using python Experience using nodejs for serverside scripting to create web pages Worked on front end part using Reactjs to design the web pages Testing Restful web services with JSON payload using POSTMAN and automating them using python framework Created dynamic web pages using nodejs before the page is sent to users web browser Knowledge on SAS regarding transfer of data between client systems and SSDs As we have vast number of libraries in React it made us easy to work and make reuse of components that are created only once We used RBAC and ACL to define the business roles for the users to provide them with the access by maintaining the security with their application Stored the data in an Apache Cassandra Cluster Used Impala to query the Hadoop data stored in HDFS Used third party web service APIs like google for User registration App engine for search and Custom search Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Used Python HTML CSS to help the team implement dozens of new features in a massively scaled Google App Engine web application Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in python and Bash Performed job functions using Spark APIs in Scala for real time analysis and for fast querying purposes Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Designed and developed scalable Azure APIs using Flask web framework in Python and Integrated with Azure API Management Logical Apps and other Azure services Environment Python Django Framework Azure APIs Shell Scripting Spark ReactJS Google APIs SOAP REST Hadoop RBAC ACL Pandas NVMe Docker Postman nodejs MySQL Selenium Scala Flash AWS Windows Unix Python Developer Kroger CSC Hyderabad Hyderabad Telangana July 2013 to January 2014 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database system Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased scheme Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services Skills DJANGO 5 years INTEGRATION 5 years INTEGRATOR 5 years PYTHON 5 years JAVA 3 years Additional Information TECHNICAL SKILLS Languages Python 3x2724 Java R Framework DjangoDRF Web frameworks Versioning Tools Git SVN CVS Databases MySQL DB2 Teradata Operating Systems Windows Mac Linux ZOS IDEDevelopment Tools PyCharm Intellij Python IDLE PyDev Pyscripter spyder jupyter Bug Tracking Tools Jira and Bugzilla Integration Tools Jenkins and webbuilder MS Office Tools Microsoft Word Microsoft Excel Microsoft PowerPoint Query Languages SQL PLSQL PostgreSQL",
    "unique_id": "cfd72a44-858e-4af6-a63e-d6523dab9dbe"
}