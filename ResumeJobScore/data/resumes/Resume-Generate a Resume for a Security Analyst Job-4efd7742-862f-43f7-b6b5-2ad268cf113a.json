{
    "clean_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Raymond James Financial Des Moines IA Authorized to work in the US for any employer Work Experience Java Full Stack Developer Raymond James Financial Saint Petersburg FL October 2018 to Present Roles Responsibilities Involved in the Agile standup meetings and Scrum Used RESTful Webservice to re write the existing legacy application Testing the existing legacy application response and designing new RESTFUL APIs to achieve new response with same functionality Created restful endpoint using Jersey and JAXRS Implemented core java concepts like OOPS multithreading Collections and exception handling All the API end points follow a spring MVC architecture and I have applied concepts of Spring Framework like dependency injection etc Various modules of spring such as Spring Boot Spring MVC Spring core and Spring AOP etc Used Lombok Project in Spring to avoid boiler plate code Since this is a TDD and CICD I have written Junit tests using Junit and Mockito frameworks Worked with version control system Git to manage the code repository Used postman to test the endpoints and test the API response along with the functionality testing Implemented Git merging and branching strategies to do user isolation and as well as feature isolation at branch level for easy rollbacks Worked on solving SonarQube issues in order to maintain proper code quality Used sonar lint plugin for this Conduct Code reviews for other developers code every day whenever theres a Merge Request and suggested changes Migrated monolithic application to microservice architecture in order to increase the performance of the application Used Java 8 streams lambdas and other functional programming concepts in order to implement good coding standards Used slack for communication purpose across the teams Environment Java 18 J2EE REST Spring40 JSP JBoss Eclipse OxygenIntelliJSTS Angular 6 Junit Jenkins SonarQube Slack Windows 7 Git Postman Java Developer Capital One Richmond VA July 2017 to September 2018 Roles Responsibilities Implemented the Application using Agile methodology where there are daily SCRUM meetings to understand the status and resolve any issues Created and configured the continuous delivery pipelines for deploying Micro Services using JENKINS CI server Successfully built a Single Page Application from scratch utilizing Angular 2 JSON objects have been created to store them in Database in OFFLINE mode Developed Micro Services using Spring Boot Used Kafka as a Messaging Service Created Docker images and deployed it on AWS cloud Worked on JUnit test cases for the Micro Services Developed ATDD for the Micro Services Used Maven Deployment Descriptor in setting up build environment by writing Maven buildxml taking build configuring and deploying of the application in all the servers Configured pomxml to manage project dependencies plugins and goals Used Maven for running unit tests and create reports Responsible for development of Business logic in Core Java Used SonarQube for automated code review and to find bugs Designed multiple enhancements to BATCH subsystems that reduced online response time Worked with the team in improving and debugging various production issues Used Apache Tomcat to deploy and configure Java APIs and Frontend modules Created Collections and documents and performed CRUD operations with Mongo repositories Environment JDK 18 JSON MongoDB Spring Boot AWS Agile Methodology JUnit ATDD Mockito Cucumber XML Angular 2 Tomcat 8x Jenkins Maven and GitHub Java Developer Nielsen Tampa FL July 2016 to June 2017 Roles Responsibilities Developed better faster and interactive FrontEnd using JSP AJAX JavaScript HTML and CSS Service oriented architecture SOA has been implemented using Restful web services which can accept a JSON object coming from the user Used Spring IOC for Dependency injection and Spring Hibernate for Data access layer Used Spring AOP to capture performance statistics of business logic and DAO layer methods Implemented Spring Security to make more robust application Created JSON objects to store them in Database in OFFLINE mode Developed portal screens using JSP and Spring MVC framework Developed Restful Controllers using Spring MVC Used Selenium IDE and JUnit to test UI and backend respectively Used Maven Deployment Descriptor in setting up build environment by writing Maven buildxml taking build configuring and deploying of the application in all the servers Configured pomxml to manage project dependencies plugins and goals Used Maven for running unit tests and create reports Responsible for development of Business logic in Core Java Implemented the module using Multithreading to make the transactions asynchronous Hibernate Framework was used to develop persistence layer created the POJO objects and mapped using Hibernate annotations and Transaction Management Application is implemented using agile methodology where there are daily SCRUM meetings to understand the status and resolve any issues Designed multiple enhancements to OLTP and BATCH subsystems that reduced online response time Worked with client testing team in improving and debugging various production issues Apache Tomcat servers to deploy and configure Java APIs and Frontend modules Created Collections and documents and performed CRUD operations with Mongo repositories Wrote variety of filter queries in MongoDB to retrieve JSON data and passed to service layer Environment JDK 18 JSP JSON Servlets Hibernate MongoDB Spring Agile Methodology JUnit Selenium Testing JavaMail Javascript AJAX XML XSLT CSS Tomcat7x WebLogic 31 REST Web services SQL Server Jenkins integrated with Maven GitHub JavaJ2EE Developer Supervalu Boise ID February 2015 to April 2016 Roles Responsibilities Involved in gathering business requirements analyzing the project and creating UML diagrams used Cases Class Diagrams Sequence Diagrams and flowcharts for the optimization Module using Microsoft Visio Used Spring framework for building the application based on MVC design paradigm Provided Integration for Spring MVC module Performed data loading using spring framework Used Spring Boot and developed Spring based applications with very less configuration Developed the user Interface Presentation screens using HTML and JSP format the HTML forms using CSS Developed Action Classes for the MVC framework Produced and delivered the images and other types of mime files as per client requirement using Restful web service Extensively worked on the backend of the application with the database Involved with various modules of Hibernate ORM Implemented OR mappings and HQL Work on HibernateSprings ORM module Integration In SpringsHibernatexml defined Data Source session factory hibernatetemplate as bean and used Spring in reference to Hibernate Template object where it will see Session Factory Bean object which gives access to the data source including database tables and POJO classes Deployed the application on WebLogic Application Server and perform other administrative activities on WebLogic application server via Linux Used buildxml for Apache ANT for automating build processes for the application Created connections to database using Hibernate Session Factory Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Used Java Messaging Services JMS for reliable and asynchronous exchange of important information Involved in the development of Page Flows Business Objects Hibernate database mappings and POJOs Used xml style syntax for defining object relational metadata Worked on JavaScript AngularJS and CSS for design of the UI Used J2EE design patterns JPA JSP jQuery JSF EJB REST web services struts and Hibernate Application developed in MVC architecture using spring framework Hibernate EJB Developed Servlets JSP pages JavaScript and worked on integration Used Hibernate Query language and the Hibernate Criteria Queries to do the database operations Wrote JUnit test cases to test the Optimization Module and created functions sub queries and stored procedures used PLSQL Environment Java 18 J2EE Microsoft Visio EJB30 JSP JSF Web services Spring JMS JavaScript HTML ANT Agile JUnit ECLIPSE Struts Oracle XML RESTful Web Services WebLogic JUnit UNIXWindows Design Patterns Java Developer Comcast Bengaluru Karnataka October 2013 to December 2014 Roles Responsibilities Responsible to build and run largescale web production systems and applications environment control and manage of all source code repositories Involved in analysis evaluation testing and debugging documents and implement moderately complex software applications Modified procedures to solve complex problems considering computer equipment capacity and limitations operating time and form of desired results Implemented Agile development process Implemented integrated and maintained the client server and web related applications Implemented the project using Ajax Java Script HTML5 and JSP as UI components Designed implemented and test networking application using J2EE Spring Hibernate Maven Tomcat and MongoDB Implemented the project by using Spring MVC framework for the business layer using Spring Core DAO Spring ORM and Spring Web MVC Spring MVC based web application followed agile methodology to work in Team Code application components as per TDD using hibernate To communicate with database we used Hibernate framework Performed unit testing using JUnit and writing build scripts using Maven Implemented the project using SOAP Web Services WSDL UDDI and JPASOAP is also used to communicate with other systems by using Apache Axis Worked on Oracle database with JDBC drivers in developing applications using SQL and Stored Procedures PLSQL database techniques Implemented Singleton factory design pattern DAO design Patterns based on the application requirements Used GIT as Version Control System for the application Designed and developed base framework classes common reusable components Used protocols such as SNMP TR069 etc Environment JDK 17 PLSQL Agile Maven JMS Servlets JAXWS Maven Multithreading WebLogic JDBC Hibernate MongoDB XML DOM SAX JAXB HTML HTTP Ajax JNDI Web Services JPA Spring MVC Soap UI WSDL SOAP JUNIT JavaScript Oracle11g SVN Education Masters Degree in Computer Information Systems in Computer Information Systems Florida Institute of Technology Melbourne FL May 2016 Bachelors Degree in Information Technology in Information Technology Bapuji Institute of Engineering Technology 2000 Skills Java Hibernate Spring Jax Jaxp Jaxws Jboss Jms Jsp Jstl Servlet Struts C Html Javascript Jenkins Middleware Orm Scripting Visio",
    "entities": [
        "Micro Services",
        "Spring Framework",
        "Team Code",
        "Karnataka",
        "Maven GitHub JavaJ2EE Developer Supervalu Boise",
        "Jersey",
        "SVN Education Masters Degree",
        "Developed Restful Controllers",
        "MVC Spring",
        "Information Technology in Information Technology Bapuji Institute of Engineering Technology 2000",
        "Maven Implemented",
        "Hibernate Application",
        "Spring Core",
        "Used Spring IOC for Dependency",
        "WebLogic",
        "JUnit",
        "Module",
        "Transaction Management Application",
        "Data Source",
        "Implemented Singleton",
        "Mockito",
        "Mongo repositories Wrote",
        "UML",
        "JSP JSON Servlets Hibernate",
        "Restful",
        "the Hibernate Criteria Queries",
        "SOA",
        "Integration In SpringsHibernatexml",
        "Implemented Git",
        "JSP",
        "SonarQube",
        "FrontEnd",
        "Computer Information Systems",
        "the Optimization Module",
        "Created Collections",
        "Hibernate EJB Developed Servlets",
        "MVC",
        "Interface",
        "Agile",
        "GIT",
        "CSS Developed Action Classes",
        "API",
        "US",
        "Database",
        "POJO",
        "Mongo repositories Environment JDK",
        "Created",
        "Maven Deployment Descriptor",
        "AWS",
        "Session Factory Bean",
        "J2EE Spring Hibernate Maven Tomcat",
        "Page Flows Business Objects Hibernate",
        "HTML",
        "RESTFUL",
        "SQL",
        "JENKINS CI",
        "OLTP",
        "Developed Micro Services",
        "the Micro Services Developed ATDD for",
        "CICD",
        "Hibernate Template",
        "CRUD",
        "Maven",
        "Performed",
        "JavaScript",
        "UI",
        "Spring Hibernate for Data",
        "Microsoft",
        "JAXRS Implemented",
        "Version Control System",
        "CSS",
        "XML DOM SAX",
        "TDD",
        "CSS Service",
        "the Micro Services",
        "WebLogic Application Server",
        "Used Lombok Project",
        "Single Page Application",
        "Hibernate Session Factory Hibernate",
        "Microsoft Visio EJB30",
        "JPASOAP",
        "Computer Information Systems Florida Institute of Technology Melbourne"
    ],
    "experience": "Experience Java Full Stack Developer Raymond James Financial Saint Petersburg FL October 2018 to Present Roles Responsibilities Involved in the Agile standup meetings and Scrum Used RESTful Webservice to re write the existing legacy application Testing the existing legacy application response and designing new RESTFUL APIs to achieve new response with same functionality Created restful endpoint using Jersey and JAXRS Implemented core java concepts like OOPS multithreading Collections and exception handling All the API end points follow a spring MVC architecture and I have applied concepts of Spring Framework like dependency injection etc Various modules of spring such as Spring Boot Spring MVC Spring core and Spring AOP etc Used Lombok Project in Spring to avoid boiler plate code Since this is a TDD and CICD I have written Junit tests using Junit and Mockito frameworks Worked with version control system Git to manage the code repository Used postman to test the endpoints and test the API response along with the functionality testing Implemented Git merging and branching strategies to do user isolation and as well as feature isolation at branch level for easy rollbacks Worked on solving SonarQube issues in order to maintain proper code quality Used sonar lint plugin for this Conduct Code reviews for other developers code every day whenever there s a Merge Request and suggested changes Migrated monolithic application to microservice architecture in order to increase the performance of the application Used Java 8 streams lambdas and other functional programming concepts in order to implement good coding standards Used slack for communication purpose across the teams Environment Java 18 J2EE REST Spring40 JSP JBoss Eclipse OxygenIntelliJSTS Angular 6 Junit Jenkins SonarQube Slack Windows 7 Git Postman Java Developer Capital One Richmond VA July 2017 to September 2018 Roles Responsibilities Implemented the Application using Agile methodology where there are daily SCRUM meetings to understand the status and resolve any issues Created and configured the continuous delivery pipelines for deploying Micro Services using JENKINS CI server Successfully built a Single Page Application from scratch utilizing Angular 2 JSON objects have been created to store them in Database in OFFLINE mode Developed Micro Services using Spring Boot Used Kafka as a Messaging Service Created Docker images and deployed it on AWS cloud Worked on JUnit test cases for the Micro Services Developed ATDD for the Micro Services Used Maven Deployment Descriptor in setting up build environment by writing Maven buildxml taking build configuring and deploying of the application in all the servers Configured pomxml to manage project dependencies plugins and goals Used Maven for running unit tests and create reports Responsible for development of Business logic in Core Java Used SonarQube for automated code review and to find bugs Designed multiple enhancements to BATCH subsystems that reduced online response time Worked with the team in improving and debugging various production issues Used Apache Tomcat to deploy and configure Java APIs and Frontend modules Created Collections and documents and performed CRUD operations with Mongo repositories Environment JDK 18 JSON MongoDB Spring Boot AWS Agile Methodology JUnit ATDD Mockito Cucumber XML Angular 2 Tomcat 8x Jenkins Maven and GitHub Java Developer Nielsen Tampa FL July 2016 to June 2017 Roles Responsibilities Developed better faster and interactive FrontEnd using JSP AJAX JavaScript HTML and CSS Service oriented architecture SOA has been implemented using Restful web services which can accept a JSON object coming from the user Used Spring IOC for Dependency injection and Spring Hibernate for Data access layer Used Spring AOP to capture performance statistics of business logic and DAO layer methods Implemented Spring Security to make more robust application Created JSON objects to store them in Database in OFFLINE mode Developed portal screens using JSP and Spring MVC framework Developed Restful Controllers using Spring MVC Used Selenium IDE and JUnit to test UI and backend respectively Used Maven Deployment Descriptor in setting up build environment by writing Maven buildxml taking build configuring and deploying of the application in all the servers Configured pomxml to manage project dependencies plugins and goals Used Maven for running unit tests and create reports Responsible for development of Business logic in Core Java Implemented the module using Multithreading to make the transactions asynchronous Hibernate Framework was used to develop persistence layer created the POJO objects and mapped using Hibernate annotations and Transaction Management Application is implemented using agile methodology where there are daily SCRUM meetings to understand the status and resolve any issues Designed multiple enhancements to OLTP and BATCH subsystems that reduced online response time Worked with client testing team in improving and debugging various production issues Apache Tomcat servers to deploy and configure Java APIs and Frontend modules Created Collections and documents and performed CRUD operations with Mongo repositories Wrote variety of filter queries in MongoDB to retrieve JSON data and passed to service layer Environment JDK 18 JSP JSON Servlets Hibernate MongoDB Spring Agile Methodology JUnit Selenium Testing JavaMail Javascript AJAX XML XSLT CSS Tomcat7x WebLogic 31 REST Web services SQL Server Jenkins integrated with Maven GitHub JavaJ2EE Developer Supervalu Boise ID February 2015 to April 2016 Roles Responsibilities Involved in gathering business requirements analyzing the project and creating UML diagrams used Cases Class Diagrams Sequence Diagrams and flowcharts for the optimization Module using Microsoft Visio Used Spring framework for building the application based on MVC design paradigm Provided Integration for Spring MVC module Performed data loading using spring framework Used Spring Boot and developed Spring based applications with very less configuration Developed the user Interface Presentation screens using HTML and JSP format the HTML forms using CSS Developed Action Classes for the MVC framework Produced and delivered the images and other types of mime files as per client requirement using Restful web service Extensively worked on the backend of the application with the database Involved with various modules of Hibernate ORM Implemented OR mappings and HQL Work on HibernateSprings ORM module Integration In SpringsHibernatexml defined Data Source session factory hibernatetemplate as bean and used Spring in reference to Hibernate Template object where it will see Session Factory Bean object which gives access to the data source including database tables and POJO classes Deployed the application on WebLogic Application Server and perform other administrative activities on WebLogic application server via Linux Used buildxml for Apache ANT for automating build processes for the application Created connections to database using Hibernate Session Factory Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Used Java Messaging Services JMS for reliable and asynchronous exchange of important information Involved in the development of Page Flows Business Objects Hibernate database mappings and POJOs Used xml style syntax for defining object relational metadata Worked on JavaScript AngularJS and CSS for design of the UI Used J2EE design patterns JPA JSP jQuery JSF EJB REST web services struts and Hibernate Application developed in MVC architecture using spring framework Hibernate EJB Developed Servlets JSP pages JavaScript and worked on integration Used Hibernate Query language and the Hibernate Criteria Queries to do the database operations Wrote JUnit test cases to test the Optimization Module and created functions sub queries and stored procedures used PLSQL Environment Java 18 J2EE Microsoft Visio EJB30 JSP JSF Web services Spring JMS JavaScript HTML ANT Agile JUnit ECLIPSE Struts Oracle XML RESTful Web Services WebLogic JUnit UNIXWindows Design Patterns Java Developer Comcast Bengaluru Karnataka October 2013 to December 2014 Roles Responsibilities Responsible to build and run largescale web production systems and applications environment control and manage of all source code repositories Involved in analysis evaluation testing and debugging documents and implement moderately complex software applications Modified procedures to solve complex problems considering computer equipment capacity and limitations operating time and form of desired results Implemented Agile development process Implemented integrated and maintained the client server and web related applications Implemented the project using Ajax Java Script HTML5 and JSP as UI components Designed implemented and test networking application using J2EE Spring Hibernate Maven Tomcat and MongoDB Implemented the project by using Spring MVC framework for the business layer using Spring Core DAO Spring ORM and Spring Web MVC Spring MVC based web application followed agile methodology to work in Team Code application components as per TDD using hibernate To communicate with database we used Hibernate framework Performed unit testing using JUnit and writing build scripts using Maven Implemented the project using SOAP Web Services WSDL UDDI and JPASOAP is also used to communicate with other systems by using Apache Axis Worked on Oracle database with JDBC drivers in developing applications using SQL and Stored Procedures PLSQL database techniques Implemented Singleton factory design pattern DAO design Patterns based on the application requirements Used GIT as Version Control System for the application Designed and developed base framework classes common reusable components Used protocols such as SNMP TR069 etc Environment JDK 17 PLSQL Agile Maven JMS Servlets JAXWS Maven Multithreading WebLogic JDBC Hibernate MongoDB XML DOM SAX JAXB HTML HTTP Ajax JNDI Web Services JPA Spring MVC Soap UI WSDL SOAP JUNIT JavaScript Oracle11 g SVN Education Masters Degree in Computer Information Systems in Computer Information Systems Florida Institute of Technology Melbourne FL May 2016 Bachelors Degree in Information Technology in Information Technology Bapuji Institute of Engineering Technology 2000 Skills Java Hibernate Spring Jax Jaxp Jaxws Jboss Jms Jsp Jstl Servlet Struts C Html Javascript Jenkins Middleware Orm Scripting Visio",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Raymond",
        "James",
        "Financial",
        "Des",
        "Moines",
        "IA",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Raymond",
        "James",
        "Financial",
        "Saint",
        "Petersburg",
        "FL",
        "October",
        "Present",
        "Roles",
        "Responsibilities",
        "Agile",
        "standup",
        "meetings",
        "Scrum",
        "RESTful",
        "Webservice",
        "legacy",
        "application",
        "legacy",
        "application",
        "response",
        "RESTFUL",
        "APIs",
        "response",
        "functionality",
        "endpoint",
        "Jersey",
        "JAXRS",
        "core",
        "concepts",
        "Collections",
        "exception",
        "API",
        "end",
        "points",
        "spring",
        "MVC",
        "architecture",
        "concepts",
        "Spring",
        "Framework",
        "dependency",
        "injection",
        "modules",
        "spring",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "core",
        "Spring",
        "AOP",
        "Lombok",
        "Project",
        "Spring",
        "boiler",
        "plate",
        "code",
        "TDD",
        "CICD",
        "Junit",
        "tests",
        "Junit",
        "Mockito",
        "frameworks",
        "version",
        "control",
        "system",
        "Git",
        "code",
        "repository",
        "postman",
        "endpoints",
        "API",
        "response",
        "functionality",
        "testing",
        "Git",
        "strategies",
        "user",
        "isolation",
        "feature",
        "isolation",
        "branch",
        "level",
        "rollbacks",
        "SonarQube",
        "issues",
        "order",
        "code",
        "quality",
        "lint",
        "plugin",
        "Conduct",
        "Code",
        "reviews",
        "developers",
        "day",
        "Merge",
        "Request",
        "changes",
        "application",
        "architecture",
        "order",
        "performance",
        "application",
        "Java",
        "streams",
        "lambdas",
        "programming",
        "concepts",
        "order",
        "standards",
        "slack",
        "communication",
        "purpose",
        "teams",
        "Environment",
        "Java",
        "J2EE",
        "REST",
        "Spring40",
        "JSP",
        "JBoss",
        "Eclipse",
        "OxygenIntelliJSTS",
        "Angular",
        "Junit",
        "Jenkins",
        "SonarQube",
        "Slack",
        "Windows",
        "Git",
        "Postman",
        "Java",
        "Developer",
        "Capital",
        "Richmond",
        "VA",
        "July",
        "September",
        "Roles",
        "Responsibilities",
        "Application",
        "methodology",
        "SCRUM",
        "meetings",
        "status",
        "issues",
        "delivery",
        "pipelines",
        "Micro",
        "Services",
        "JENKINS",
        "CI",
        "server",
        "Single",
        "Page",
        "Application",
        "scratch",
        "Angular",
        "objects",
        "Database",
        "OFFLINE",
        "mode",
        "Developed",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "Kafka",
        "Messaging",
        "Service",
        "Created",
        "Docker",
        "images",
        "AWS",
        "cloud",
        "JUnit",
        "test",
        "cases",
        "Micro",
        "Services",
        "ATDD",
        "Micro",
        "Services",
        "Maven",
        "Deployment",
        "Descriptor",
        "build",
        "environment",
        "Maven",
        "buildxml",
        "configuring",
        "deploying",
        "application",
        "servers",
        "Configured",
        "pomxml",
        "project",
        "dependencies",
        "plugins",
        "goals",
        "Maven",
        "unit",
        "tests",
        "reports",
        "development",
        "Business",
        "logic",
        "Core",
        "Java",
        "SonarQube",
        "code",
        "review",
        "bugs",
        "enhancements",
        "BATCH",
        "subsystems",
        "response",
        "time",
        "team",
        "production",
        "issues",
        "Apache",
        "Tomcat",
        "Java",
        "APIs",
        "Frontend",
        "modules",
        "Collections",
        "documents",
        "CRUD",
        "operations",
        "Mongo",
        "repositories",
        "Environment",
        "JDK",
        "JSON",
        "MongoDB",
        "Spring",
        "Boot",
        "AWS",
        "Agile",
        "Methodology",
        "JUnit",
        "ATDD",
        "Mockito",
        "Cucumber",
        "XML",
        "Angular",
        "Tomcat",
        "8x",
        "Jenkins",
        "Maven",
        "GitHub",
        "Java",
        "Developer",
        "Nielsen",
        "Tampa",
        "FL",
        "July",
        "June",
        "Roles",
        "Responsibilities",
        "FrontEnd",
        "JSP",
        "AJAX",
        "JavaScript",
        "HTML",
        "CSS",
        "Service",
        "architecture",
        "SOA",
        "web",
        "services",
        "object",
        "user",
        "Spring",
        "IOC",
        "Dependency",
        "injection",
        "Spring",
        "Hibernate",
        "Data",
        "access",
        "layer",
        "Spring",
        "AOP",
        "performance",
        "statistics",
        "business",
        "logic",
        "DAO",
        "layer",
        "methods",
        "Spring",
        "Security",
        "application",
        "JSON",
        "Database",
        "OFFLINE",
        "screens",
        "JSP",
        "Spring",
        "MVC",
        "framework",
        "Developed",
        "Restful",
        "Controllers",
        "Spring",
        "MVC",
        "Selenium",
        "IDE",
        "JUnit",
        "UI",
        "Maven",
        "Deployment",
        "Descriptor",
        "build",
        "environment",
        "Maven",
        "buildxml",
        "configuring",
        "deploying",
        "application",
        "servers",
        "Configured",
        "pomxml",
        "project",
        "dependencies",
        "plugins",
        "goals",
        "Maven",
        "unit",
        "tests",
        "reports",
        "development",
        "Business",
        "logic",
        "Core",
        "Java",
        "module",
        "Multithreading",
        "transactions",
        "Hibernate",
        "Framework",
        "persistence",
        "layer",
        "POJO",
        "objects",
        "Hibernate",
        "annotations",
        "Transaction",
        "Management",
        "Application",
        "methodology",
        "SCRUM",
        "meetings",
        "status",
        "issues",
        "enhancements",
        "OLTP",
        "BATCH",
        "subsystems",
        "response",
        "time",
        "client",
        "testing",
        "team",
        "production",
        "issues",
        "Apache",
        "Tomcat",
        "servers",
        "Java",
        "APIs",
        "Frontend",
        "modules",
        "Collections",
        "documents",
        "CRUD",
        "operations",
        "Mongo",
        "repositories",
        "Wrote",
        "variety",
        "filter",
        "queries",
        "data",
        "service",
        "layer",
        "Environment",
        "JDK",
        "JSP",
        "JSON",
        "Servlets",
        "Hibernate",
        "MongoDB",
        "Spring",
        "Agile",
        "Methodology",
        "JUnit",
        "Selenium",
        "Testing",
        "JavaMail",
        "Javascript",
        "AJAX",
        "XML",
        "XSLT",
        "CSS",
        "Tomcat7x",
        "WebLogic",
        "REST",
        "Web",
        "services",
        "SQL",
        "Server",
        "Jenkins",
        "Maven",
        "GitHub",
        "JavaJ2EE",
        "Developer",
        "Supervalu",
        "Boise",
        "ID",
        "February",
        "April",
        "Roles",
        "Responsibilities",
        "business",
        "requirements",
        "project",
        "UML",
        "diagrams",
        "Cases",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "flowcharts",
        "optimization",
        "Module",
        "Microsoft",
        "Visio",
        "Spring",
        "framework",
        "application",
        "MVC",
        "design",
        "paradigm",
        "Integration",
        "Spring",
        "MVC",
        "module",
        "Performed",
        "data",
        "loading",
        "spring",
        "framework",
        "Spring",
        "Boot",
        "Spring",
        "applications",
        "configuration",
        "user",
        "Interface",
        "Presentation",
        "screens",
        "HTML",
        "JSP",
        "format",
        "HTML",
        "forms",
        "CSS",
        "Developed",
        "Action",
        "Classes",
        "MVC",
        "framework",
        "images",
        "types",
        "files",
        "client",
        "requirement",
        "Restful",
        "web",
        "service",
        "backend",
        "application",
        "database",
        "modules",
        "Hibernate",
        "ORM",
        "mappings",
        "HQL",
        "Work",
        "HibernateSprings",
        "ORM",
        "module",
        "Integration",
        "SpringsHibernatexml",
        "Data",
        "Source",
        "session",
        "factory",
        "hibernatetemplate",
        "bean",
        "Spring",
        "reference",
        "Hibernate",
        "Template",
        "object",
        "Session",
        "Factory",
        "Bean",
        "object",
        "access",
        "data",
        "source",
        "database",
        "tables",
        "POJO",
        "classes",
        "application",
        "WebLogic",
        "Application",
        "Server",
        "activities",
        "WebLogic",
        "application",
        "server",
        "Linux",
        "buildxml",
        "Apache",
        "ANT",
        "build",
        "processes",
        "application",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "data",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "exchange",
        "information",
        "development",
        "Page",
        "Business",
        "Hibernate",
        "database",
        "mappings",
        "POJOs",
        "xml",
        "style",
        "syntax",
        "metadata",
        "JavaScript",
        "AngularJS",
        "CSS",
        "design",
        "UI",
        "J2EE",
        "design",
        "patterns",
        "JPA",
        "JSP",
        "jQuery",
        "JSF",
        "EJB",
        "REST",
        "web",
        "services",
        "struts",
        "Hibernate",
        "Application",
        "MVC",
        "architecture",
        "spring",
        "framework",
        "Hibernate",
        "EJB",
        "Developed",
        "Servlets",
        "JSP",
        "pages",
        "JavaScript",
        "integration",
        "Hibernate",
        "Query",
        "language",
        "Hibernate",
        "Criteria",
        "Queries",
        "database",
        "operations",
        "Wrote",
        "JUnit",
        "test",
        "cases",
        "Optimization",
        "Module",
        "functions",
        "sub",
        "queries",
        "procedures",
        "PLSQL",
        "Environment",
        "Java",
        "J2EE",
        "Microsoft",
        "Visio",
        "EJB30",
        "JSP",
        "JSF",
        "Web",
        "services",
        "Spring",
        "JMS",
        "JavaScript",
        "HTML",
        "ANT",
        "Agile",
        "JUnit",
        "ECLIPSE",
        "Struts",
        "Oracle",
        "XML",
        "Web",
        "Services",
        "WebLogic",
        "JUnit",
        "Design",
        "Patterns",
        "Java",
        "Developer",
        "Comcast",
        "Bengaluru",
        "Karnataka",
        "October",
        "December",
        "Roles",
        "Responsibilities",
        "largescale",
        "web",
        "production",
        "systems",
        "applications",
        "environment",
        "source",
        "code",
        "repositories",
        "analysis",
        "evaluation",
        "testing",
        "documents",
        "software",
        "applications",
        "procedures",
        "problems",
        "computer",
        "equipment",
        "capacity",
        "limitations",
        "time",
        "form",
        "results",
        "development",
        "process",
        "client",
        "server",
        "web",
        "applications",
        "project",
        "Ajax",
        "Java",
        "Script",
        "HTML5",
        "JSP",
        "UI",
        "components",
        "networking",
        "application",
        "J2EE",
        "Spring",
        "Hibernate",
        "Maven",
        "Tomcat",
        "MongoDB",
        "project",
        "Spring",
        "MVC",
        "framework",
        "business",
        "layer",
        "Spring",
        "Core",
        "DAO",
        "Spring",
        "ORM",
        "Spring",
        "Web",
        "MVC",
        "Spring",
        "MVC",
        "web",
        "application",
        "methodology",
        "Team",
        "Code",
        "application",
        "components",
        "TDD",
        "hibernate",
        "database",
        "Hibernate",
        "framework",
        "Performed",
        "unit",
        "testing",
        "JUnit",
        "build",
        "scripts",
        "Maven",
        "project",
        "SOAP",
        "Web",
        "Services",
        "WSDL",
        "UDDI",
        "JPASOAP",
        "systems",
        "Apache",
        "Axis",
        "Oracle",
        "database",
        "JDBC",
        "drivers",
        "applications",
        "SQL",
        "Stored",
        "Procedures",
        "PLSQL",
        "database",
        "techniques",
        "Singleton",
        "factory",
        "design",
        "pattern",
        "DAO",
        "design",
        "Patterns",
        "application",
        "requirements",
        "GIT",
        "Version",
        "Control",
        "System",
        "application",
        "base",
        "framework",
        "classes",
        "components",
        "protocols",
        "SNMP",
        "TR069",
        "Environment",
        "JDK",
        "PLSQL",
        "Agile",
        "Maven",
        "JMS",
        "Servlets",
        "JAXWS",
        "Maven",
        "Multithreading",
        "WebLogic",
        "JDBC",
        "Hibernate",
        "MongoDB",
        "XML",
        "DOM",
        "SAX",
        "HTML",
        "HTTP",
        "Ajax",
        "JNDI",
        "Web",
        "Services",
        "JPA",
        "Spring",
        "MVC",
        "Soap",
        "UI",
        "WSDL",
        "SOAP",
        "JUNIT",
        "JavaScript",
        "Oracle11",
        "g",
        "SVN",
        "Education",
        "Masters",
        "Degree",
        "Computer",
        "Information",
        "Systems",
        "Computer",
        "Information",
        "Systems",
        "Florida",
        "Institute",
        "Technology",
        "Melbourne",
        "FL",
        "May",
        "Bachelors",
        "Degree",
        "Information",
        "Technology",
        "Information",
        "Technology",
        "Bapuji",
        "Institute",
        "Engineering",
        "Technology",
        "Skills",
        "Java",
        "Hibernate",
        "Spring",
        "Jax",
        "Jaxp",
        "Jaxws",
        "Jboss",
        "Jms",
        "Jsp",
        "Jstl",
        "Servlet",
        "Struts",
        "C",
        "Html",
        "Javascript",
        "Jenkins",
        "Middleware",
        "Orm",
        "Scripting",
        "Visio"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:25:28.925853",
    "resume_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Raymond James Financial Des Moines IA Authorized to work in the US for any employer Work Experience Java Full Stack Developer Raymond James Financial Saint Petersburg FL October 2018 to Present Roles Responsibilities Involved in the Agile standup meetings and Scrum Used RESTful Webservice to re write the existing legacy application Testing the existing legacy application response and designing new RESTFUL APIs to achieve new response with same functionality Created restful endpoint using Jersey and JAXRS Implemented core java concepts like OOPS multithreading Collections and exception handling All the API end points follow a spring MVC architecture and I have applied concepts of Spring Framework like dependency injection etc Various modules of spring such as Spring Boot Spring MVC Spring core and Spring AOP etc Used Lombok Project in Spring to avoid boiler plate code Since this is a TDD and CICD I have written Junit tests using Junit and Mockito frameworks Worked with version control system Git to manage the code repository Used postman to test the endpoints and test the API response along with the functionality testing Implemented Git merging and branching strategies to do user isolation and as well as feature isolation at branch level for easy rollbacks Worked on solving SonarQube issues in order to maintain proper code quality Used sonar lint plugin for this Conduct Code reviews for other developers code every day whenever theres a Merge Request and suggested changes Migrated monolithic application to microservice architecture in order to increase the performance of the application Used Java 8 streams lambdas and other functional programming concepts in order to implement good coding standards Used slack for communication purpose across the teams Environment Java 18 J2EE REST Spring40 JSP JBoss Eclipse OxygenIntelliJSTS Angular 6 Junit Jenkins SonarQube Slack Windows 7 Git Postman Java Developer Capital One Richmond VA July 2017 to September 2018 Roles Responsibilities Implemented the Application using Agile methodology where there are daily SCRUM meetings to understand the status and resolve any issues Created and configured the continuous delivery pipelines for deploying Micro Services using JENKINS CI server Successfully built a Single Page Application from scratch utilizing Angular 2 JSON objects have been created to store them in Database in OFFLINE mode Developed Micro Services using Spring Boot Used Kafka as a Messaging Service Created Docker images and deployed it on AWS cloud Worked on JUnit test cases for the Micro Services Developed ATDD for the Micro Services Used Maven Deployment Descriptor in setting up build environment by writing Maven buildxml taking build configuring and deploying of the application in all the servers Configured pomxml to manage project dependencies plugins and goals Used Maven for running unit tests and create reports Responsible for development of Business logic in Core Java Used SonarQube for automated code review and to find bugs Designed multiple enhancements to BATCH subsystems that reduced online response time Worked with the team in improving and debugging various production issues Used Apache Tomcat to deploy and configure Java APIs and Frontend modules Created Collections and documents and performed CRUD operations with Mongo repositories Environment JDK 18 JSON MongoDB Spring Boot AWS Agile Methodology JUnit ATDD Mockito Cucumber XML Angular 2 Tomcat 8x Jenkins Maven and GitHub Java Developer Nielsen Tampa FL July 2016 to June 2017 Roles Responsibilities Developed better faster and interactive FrontEnd using JSP AJAX JavaScript HTML and CSS Service oriented architecture SOA has been implemented using Restful web services which can accept a JSON object coming from the user Used Spring IOC for Dependency injection and Spring Hibernate for Data access layer Used Spring AOP to capture performance statistics of business logic and DAO layer methods Implemented Spring Security to make more robust application Created JSON objects to store them in Database in OFFLINE mode Developed portal screens using JSP and Spring MVC framework Developed Restful Controllers using Spring MVC Used Selenium IDE and JUnit to test UI and backend respectively Used Maven Deployment Descriptor in setting up build environment by writing Maven buildxml taking build configuring and deploying of the application in all the servers Configured pomxml to manage project dependencies plugins and goals Used Maven for running unit tests and create reports Responsible for development of Business logic in Core Java Implemented the module using Multithreading to make the transactions asynchronous Hibernate Framework was used to develop persistence layer created the POJO objects and mapped using Hibernate annotations and Transaction Management Application is implemented using agile methodology where there are daily SCRUM meetings to understand the status and resolve any issues Designed multiple enhancements to OLTP and BATCH subsystems that reduced online response time Worked with client testing team in improving and debugging various production issues Apache Tomcat servers to deploy and configure Java APIs and Frontend modules Created Collections and documents and performed CRUD operations with Mongo repositories Wrote variety of filter queries in MongoDB to retrieve JSON data and passed to service layer Environment JDK 18 JSP JSON Servlets Hibernate MongoDB Spring Agile Methodology JUnit Selenium Testing JavaMail Javascript AJAX XML XSLT CSS Tomcat7x WebLogic 31 REST Web services SQL Server Jenkins integrated with Maven GitHub JavaJ2EE Developer Supervalu Boise ID February 2015 to April 2016 Roles Responsibilities Involved in gathering business requirements analyzing the project and creating UML diagrams used Cases Class Diagrams Sequence Diagrams and flowcharts for the optimization Module using Microsoft Visio Used Spring framework for building the application based on MVC design paradigm Provided Integration for Spring MVC module Performed data loading using spring framework Used Spring Boot and developed Spring based applications with very less configuration Developed the user Interface Presentation screens using HTML and JSP format the HTML forms using CSS Developed Action Classes for the MVC framework Produced and delivered the images and other types of mime files as per client requirement using Restful web service Extensively worked on the backend of the application with the database Involved with various modules of Hibernate ORM Implemented OR mappings and HQL Work on HibernateSprings ORM module Integration In SpringsHibernatexml defined Data Source session factory hibernatetemplate as bean and used Spring in reference to Hibernate Template object where it will see Session Factory Bean object which gives access to the data source including database tables and POJO classes Deployed the application on WebLogic Application Server and perform other administrative activities on WebLogic application server via Linux Used buildxml for Apache ANT for automating build processes for the application Created connections to database using Hibernate Session Factory Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Used Java Messaging Services JMS for reliable and asynchronous exchange of important information Involved in the development of Page Flows Business Objects Hibernate database mappings and POJOs Used xml style syntax for defining object relational metadata Worked on JavaScript AngularJS and CSS for design of the UI Used J2EE design patterns JPA JSP jQuery JSF EJB REST web services struts and Hibernate Application developed in MVC architecture using spring framework Hibernate EJB Developed Servlets JSP pages JavaScript and worked on integration Used Hibernate Query language and the Hibernate Criteria Queries to do the database operations Wrote JUnit test cases to test the Optimization Module and created functions sub queries and stored procedures used PLSQL Environment Java 18 J2EE Microsoft Visio EJB30 JSP JSF Web services Spring JMS JavaScript HTML ANT Agile JUnit ECLIPSE Struts Oracle XML RESTful Web Services WebLogic JUnit UNIXWindows Design Patterns Java Developer Comcast Bengaluru Karnataka October 2013 to December 2014 Roles Responsibilities Responsible to build and run largescale web production systems and applications environment control and manage of all source code repositories Involved in analysis evaluation testing and debugging documents and implement moderately complex software applications Modified procedures to solve complex problems considering computer equipment capacity and limitations operating time and form of desired results Implemented Agile development process Implemented integrated and maintained the client server and web related applications Implemented the project using Ajax Java Script HTML5 and JSP as UI components Designed implemented and test networking application using J2EE Spring Hibernate Maven Tomcat and MongoDB Implemented the project by using Spring MVC framework for the business layer using Spring Core DAO Spring ORM and Spring Web MVC Spring MVC based web application followed agile methodology to work in Team Code application components as per TDD using hibernate To communicate with database we used Hibernate framework Performed unit testing using JUnit and writing build scripts using Maven Implemented the project using SOAP Web Services WSDL UDDI and JPASOAP is also used to communicate with other systems by using Apache Axis Worked on Oracle database with JDBC drivers in developing applications using SQL and Stored Procedures PLSQL database techniques Implemented Singleton factory design pattern DAO design Patterns based on the application requirements Used GIT as Version Control System for the application Designed and developed base framework classes common reusable components Used protocols such as SNMP TR069 etc Environment JDK 17 PLSQL Agile Maven JMS Servlets JAXWS Maven Multithreading WebLogic JDBC Hibernate MongoDB XML DOM SAX JAXB HTML HTTP Ajax JNDI Web Services JPA Spring MVC Soap UI WSDL SOAP JUNIT JavaScript Oracle11g SVN Education Masters Degree in Computer Information Systems in Computer Information Systems Florida Institute of Technology Melbourne FL May 2016 Bachelors Degree in Information Technology in Information Technology Bapuji Institute of Engineering Technology 2000 Skills Java Hibernate Spring Jax Jaxp Jaxws Jboss Jms Jsp Jstl Servlet Struts C Html Javascript Jenkins Middleware Orm Scripting Visio",
    "unique_id": "4efd7742-862f-43f7-b6b5-2ad268cf113a"
}