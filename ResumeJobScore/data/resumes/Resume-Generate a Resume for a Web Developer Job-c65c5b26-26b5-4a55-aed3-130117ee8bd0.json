{
    "clean_data": "Lead Architect SeniorNet Developer Lead Architect amp SeniorNet span lDeveloperspan Lead Architect SeniorNet Developer Windstream Communications Frisco TX Experienced architect providing enterprise scale solutions with focus on process improvement team building and nurture of team members Over ten years of experiences working with various business domains introducing and implementing solutions to enhance operations and achieve their goals Accountable teamoriented leader and perpetual learner with love for automation and blend of sarcasm Work Experience Lead Architect SeniorNet Developer Windstream Communications May 2013 to Present Project Synopsis Customer Resource Management CRM Portal used by Customer Service technicians and field technicians to manage customer accounts and data of various subplatforms of Windstream Communications Responsibilities Architected application tier and presentation tier of web application using MVVM and lead a team of developers for initial phase Designed application using Razor Engine HTML 5 ASPNET MVC Bootstrap 3 CSS3 JavaScript JQuery Data Tables and Knockout for a rich UI designs faster development process Code consistency and cross browser support Introduced new discipline of development like Code review Object oriented flow adhering to Agile development Introduced Microservices architecture to further enhance service layer and standardize as an API Implemented Net Core microservices deployment management using Docker Kubernetes and Rancher Automated Azure DevOps pipelines for microservice and regular Net applications Developed and encouraged habits of enterprise level development across team members for effective team work and efficient product Created customized JavaScript plugins to meet the specific requirement of the client Guided team and resolved roadblocks assigning reviewing and connecting bridges with different teams to deliver and resolve key functionalities in the application Lead project through Agile development and expertise using JIRA and FISHEYE for delivery Managed 6 lower environments and Production environment with on shoreoff shore team Implemented documentation comprehensively across team for all modules and conducted knowledge share sessions to learn various developments happening across team Improved performance of an application by optimizing code reducing TTFB time decreasing the size of render load and implementing AJAX Improved productive time of developer by implementing Admin tool to let business users manage user privileges role level visibility Created WCF Services and set standards of process for reaching different data sources Optimized code and implemented fast and consistency by creating wrappers around ODPNET AJAX and field mapping processes Reduced lines of code LOC by refactoring common functionality reusability by using partial views and scripts centralization load reduction by minifyingbundling files Optimized deployment process by 80 for Production by automation using Batch Shell Groovy Jenkins Pipeline Implemented CICD process for lower environments using Jenkins nightly builds automation scripts Created Web APIs OData Standard APIs for external Object integration to Salesforce system Introduced VueJS removed unnecessary tiers and implemented single page applications using Vue Js for faster development Environment Net Framework 40 MVC 40 C 40 Knockout 22 Data TablesNET Bootstrap JavaScript JQuery VueJS WCF RIA Services CSS ODPNET Oracle 11g GIT Source tree Jenkins Batch Shell Groovy Docker Kubernetes Rancher Azure DevOps Lead Architect Senior Net Developer IProspect December 2011 to May 2013 Project Synopsis This project is about developing and maintaining multiple applications that process search and tracking data received from various sources like Google Bing etc consolidate and analyze data use Strategic Results System SRS to adjust and improve campaign performance for iProspect clients Responsibilities Migrating current SRS web application to new portal using ASPNET MVC framework Manage deployment and implement enhancements for new portal In MVC 30 RAZOR and ASPNET Dependency Injection DI is implemented using Microsoft Unity IoC Container to reduce coupling between components Manage offshore team and handle escalated issues relevant to existing applications Test existing applications and deploy releases to production Improved project development and deployment process for efficient code management Develop reports and dashboards using MicroStrategy for client Generate packages using SSIS for moving or processing data to database from different sources Added enhancements to Billing Manager for easy transactions and transformations of invoices Implemented daily weekly reports for each client in Micro strategy and added enhancements to client dashboards to show KPIs for variable date ranges Implemented Double Click data connector to download and process data into company databases using SSIS Monitor Search and Tracking data loads and fix issues process and QA data downloaded Environment C ASPNET 40 MVC 30 Entity Framework 40 RAZOR JQuery JavaScript LINQ SQL Server 2008 R2 Visual Studio 2010 SSIS MicroStrategy Telerik Controls Tortoise SVN Lead Web Developer EX Squared Solutions Inc October 2010 to December 2011 Project 1 Teledynamics TDTDisanecommerce application used to consume electronics and telecommunication products It has two modules Admin for writeCMS operations Dealer for product search payment batch order tracking e commerce operations Estimated the requirements and designed the core structure of the N tier application Lead a team of 3 developers in developing the Dealer module customer facing part of the project Developed the application using ASPNET MVC 30 RAZOR and C 40 Implemented the complete purchase process Add to Cart to Purchase Order Implemented HTML5 feature to drag and drop doc and upload orders from excel Integrated application with Third party APIs like Paypal Payflowpro for processing credit card payments with Shipping Integrator for estimating shipping and tracking shipment Used Repository pattern for loose coupling between the different layers and ease in testing Dependency Injection DI is implemented using Microsoft Unity to reduce coupling between components JQuery templates JQuery UI effects are widely used to improve speed in rendering data loaded using Ajax Entity Framework 40 and POCO templates are used in the Data layer to interact with the SQL Server Programmer Analyst Dell Inc May 2010 to October 2010 Project Synopsis Global Catalog services Global Catalog Services part of eDell project is a collection of data maintenance applications and web services The application maintains organizational structure data that is consumed by downstream applications to display information in different ways on the Dellcom website Responsibilities Gathered all requirements and participated in client meets throughout the project Project is implemented using agile software development methodology C ASPNET Dynamic Data is used to make AJAX calls on the maintenance UI pages Domain services Create Insert Update and Delete are implemented over ADONET Entity Framework 40 as Data layer for maintenance UI Test Driven Development TDD is used to improve efficiency in code development for Batch Upload System ADONET is used as Data layer for improve the performance of the maintenance application Service Oriented Architecture SOA is incorporated by using WCF Web services that sends data to the frontend UI Windows Authentication is used to authorize team members and to access data from database Interfaces Event handlers are used for Batch Upload system to implement PublisherSubscriber system and upload different kind of batches using the same process Stored Procedures Triggers Functions are used in the backend to interact with the SQL Server database Performed Unit testing and Integration testing on all methods using Microsoft testing following business requirements Followed up with the testing team to modify components and fix bugs issues Environment C ASPNET 40 Dynamic Data Entity Framework 40 JQuery LINQ ADONET WCF SQL Server 2008 Visual Studio 2010 Test Driven Development Microsoft Testing Net Developer Sally Beauty Supply TX October 2009 to April 2010 Project Synopsis POS Support Tracking Tool Sally Beauty Supply is the leading retailer of professional beauty supplies POS Support tracking tool is a web application developed to assist Support team help and trouble shoot over 3000 stores around the world It contains modules that display latest information from the corporate server controls that let you look edit and synchronize data from the corporate server with the corresponding stores Employee section displays updated information of the employees and let the support team EditEmail based on role hierarchy Responsibilities Analyzed the business requirements and participated in meetings throughout the project Used SCRUM development methodology for the project Developed application using ASPNET MVC framework VBNET in Visual Studio 2010 Designed Background images icons and CSS pages using Adobe Photoshop Illustrator ADONET Entity Framework LINQ is used at the Data layer to work against a Conceptual Application Model DomainDriven Design DDD is implemented in the application by using POCO Plain Old CLR Objects to make application unaware of persistence concerns Created stored procedures and triggers to enhance security and efficiency of the application Unity Application Block Unity IOC Container is used to implement dependency injection and to make application decoupled or loosely coupled Windows Authentication is used to authorize and provide access support team staff as the application is used on companys domain Object oriented OOPS concepts like Inheritance Polymorphism are used throughout the application for ease of maintenance Repository Pattern is used to interact with the Object Interfaces in order to apply consistent rules and logic in the application ASPNET MVC features like Action Filter Attributes Custom HTML Controls and Model Binders are used to display data and encourage code reusability Enterprise Library 41 is used to facilitate best practices in exception handling logging security and data access Used JQuery for HTML Validation and to make AJAX calls to make asynchronous calls to database and display in customized menus Performed Unit Testing on the modules by using NUnit according to the requirements and development standards Regularly followed up with the testing team to discuss the bugssuggestions identified during testing Environment ASPNET 40 NET MVC Framework RTM JQuery LINQ VBNET SQL Server 2008 Visual Studio 2010 Windows XP Pro IIS 70 N Unit Net Developer TACC August 2008 to August 2009 Project Synopsis UrbanDive is an online community for people and for businesses The site will specialize in bringing communities both businesses and individuals closer together The web application contains Registration module Auto EmailText module to remind events Calendar that shows all events Businesses search module to search all businesses in the country Also developed a Win forms application developed for a client to search sort import and send customers details from fox pro dbf files to administrator Tech Support Customer Tracking System is companys internal tracking web application used to search customers create case numbers editdeleteupdate case status reviews and feedbacks Responsibilities Project 1 Urban Dive Analyzed the business requirements and participated in meetings throughout the project Developed UrbanDive website using ASPNET MVC framework in Visual Studio 2008 Implemented HTML and CSS GUIs to test backend solutions Integrated Facebook with the webpage using Facebook Connect API to let users gain access to their Facebook account and edit the feeds in real time LINQ to SQL classes like Data context are used to update user information obtained from Facebook Designed tables in Microsoft Visio and created them in SQL Server 2008 Created stored procedures and triggers to enhance security and efficiency of the application Imported list of businesses into the database using Bulk Import and created a platform to search a business in the country Programmed Data Access layer ADONET Classes for dynamic editing sorting and displaying results Used Custom HTML Controls to display data and encourage code reusability Created complete EmailText application that can import contacts from Excel Access files Developed Windows and Web services to schedule and automate sending emails to customers OleDb Interface is used to interact with Excel and Access Databases and import information Used SMTP protocol for sending Emails and FTP protocol for sending text messages through an external client The application uses OleDb Interface to interact with different databases and download email files in Excel CSV formats Performed Unit Testing Integration Testing and Load testing on the modules by using N Unit according to the requirements and development standards Regularly followed up with the development team to discuss the defects identified during testing Project 2 Tech Support Customer Tracking System Designed and developed WebPages using ASPNET MVC and SQL Server 2008 Customer SearchEditDelete module is developed using AJAX JavaScript and JQuery Developed Charts and Tabular reports in Excel and Web format using SQL Server Reporting services SSRS Environment ASPNET 35 NET MVC Framework 10 JQuery LINQ C SQL Server 2008 Visual Studio 20082010 Windows XP IIS 70 N Unit net MS Unit 2008 to 2008 database Supported the application by doing performance tuning fixing bugs using FogBugz and testing using MS Unit testing Project 2 NCI Projects The Real Estate Book TREB TREB is a real estate web application used to browse available homesforeclosuressearch brokers all over the world Project involves migration of domain and backend services to new hosts Gathered requirements and updated Business rule document BSD after discussing with the Client Developed application using ASP NET MVC 20 and C 40 Implemented authentication of users by using C 40 Forms Authentication and Membership Services Designed various routes for the web app so that all the specific pages are routed according to Business rule and the rest are handled Search bar is implemented to handle multiple search types like city state zip and neighborhood using JavaScript and Jquery AJAX Implemented logging and error handling to log errors thrown in production Fixed various bugs across the app and tested browser compatibility Deployed TREB into production and tuned pages for performance optimization Supported testing in the Development Test and Production environments Project 3 NCI Projects Unique Homes UH UH is a real estate web application used to search unique home properties developments specialists all over the world Project involves migration of domain and backend services to new hosts Gathered requirements and updated Business rule document BSD after discussing with the Client Designed and developed the application using ASPNET MVC 20 and C 40 Created stored procedures and inline query calls using LINQ to Entities to improve efficiency Used JQuery to implement a generic search system for all kinds of searches made on the web page Fixed various bugs across the app and tested browser compatibility Deployed UH into production and improved performance of pages loaded to more requests per sec Supported testing in the Development Test and Production environments Environment C ASPNET 40 MVC 30 HTML 5 Entity Framework 40 RAZOR JQuery LINQ SQL Server 2008 Visual Studio 2010 Microsoft Testing Sourcegear Vault Jquery Templates POCO Objects FogBugz Education Masters Masters in computer engineering Skills AJAX ASP CSS INTERNET INFORMATION SERVER IIS ASPNET WEB SERVICES jQuery NET VISUAL STUDIO VISUAL STUDIO NET VISUAL STUDIO NET 2012 API C DOCKER Git HTML JAVASCRIPT BOOTSTRAP JENKINS TECHNICAL EXPERTISE Development Technologies ASPNET MVC 34 Web Forms ADONET ODPNET WPF AJAX HTML 5 XHTML XML CSS 3 WSDL XAML CSHTML Telerik Rad Controls Frameworks NET Framework 30354045 Containerization Net Core 22 Docker Kubernetes Rancher JavaScript Frameworks JavaScript JQuery Bootstrap Vue JS Knockout JS Programming Languages C C Visual Basic ORM Frameworks Entity Framework 45 LINQ NHibernate Dapper API WCF Web Services Web API Rest DBMS Oracle11g MS SQL Server 2008 MS Access SQL Developer Development Tools Visual Studio Net 17 Microsoft Testing Tools Source Control TFS GIT Bitbucket Source Tree Source gear Vault Application Deployment Internet Information Server IIS 607075 Operating System Windows 7810Server Linux Web Protocols HTTP SMTP SSL SOAP FTP Code Comparison Beyond Compare Win Merge Tortoise SVN Automation Jenkins Azure DevOps Batch Shell Code Review Fish Eye Agile Development Tools JIRA FogBugz TicketChange Management Tools Spira Remedy Bitbucket APM Tools Dynatrace App Dynamics Project Documentation Ghost Doc Sandcastle Reporting Tools Microstrategy SSIS SSRS Code Analysis Resharper VS 2017 UML Tools MS Visio MagicDraw Atlassian Wiki Unit Testing MS Test NUnit 10 years",
    "entities": [
        "LOC",
        "UI Windows Authentication",
        "AJAX",
        "Performed Unit Testing",
        "Responsibilities Project 1 Urban Dive Analyzed",
        "MicroStrategy",
        "MS Access SQL Developer",
        "Project Synopsis POS Support Tracking Tool Sally Beauty Supply",
        "Dell Inc",
        "Used Custom HTML Controls",
        "Used Repository",
        "Unity Application Block Unity IOC Container",
        "Project",
        "sec",
        "LINQ NHibernate Dapper API WCF Web Services",
        "C 40 Forms Authentication",
        "Performed Unit Testing Integration Testing and Load",
        "JIRA",
        "Project Synopsis UrbanDive",
        "Vault Application Deployment Internet Information Server IIS",
        "Bulk Import",
        "TX",
        "Present Project Synopsis Customer Resource Management CRM Portal",
        "SSIS",
        "OData Standard",
        "SQL Server",
        "ASPNET MVC Bootstrap 3",
        "RAZOR",
        "Entity Framework 40 RAZOR",
        "Repository Pattern",
        "Developed",
        "Action Filter Attributes Custom HTML Controls",
        "Programmed Data Access layer ADONET Classes",
        "Skills AJAX ASP CSS",
        "NUnit",
        "ASPNET WEB SERVICES jQuery NET VISUAL STUDIO VISUAL STUDIO NET VISUAL STUDIO",
        "JQuery Developed Charts",
        "Project Synopsis",
        "Win",
        "Membership Services",
        "SQL Server Reporting",
        "Develop",
        "Created WCF Services",
        "XHTML XML",
        "Dealer",
        "Visual",
        "Micro",
        "AJAX JavaScript",
        "MS",
        "the Development Test and Production",
        "R2 Visual Studio",
        "FogBugz",
        "MVC",
        "FISHEYE",
        "GIT",
        "CSV",
        "LINQ",
        "QA",
        "N",
        "SRS",
        "Created",
        "API Implemented Net Core",
        "Developed UrbanDive",
        "Microsoft Visio",
        "BSD",
        "Customer Service",
        "Windows Authentication",
        "N Unit",
        "Performed Unit",
        "SQL",
        "WebPages",
        "Windstream Communications Responsibilities Architected",
        "UI Test Driven Development TDD",
        "iProspect",
        "VBNET",
        "FTP",
        "EditEmail",
        "Visual Studio",
        "Google Bing",
        "SSIS Monitor Search and Tracking",
        "Microsoft Unity",
        "Responsibilities Gathered",
        "Project 2 NCI Projects",
        "ASPNET Dependency Injection DI",
        "SeniorNet",
        "the Object Interfaces",
        "Dependency Injection DI",
        "JavaScript",
        "Responsibilities Analyzed",
        "Adobe Photoshop Illustrator ADONET Entity Framework",
        "UI",
        "Microsoft",
        "Paypal Payflowpro",
        "Delete",
        "Facebook Designed",
        "SMTP",
        "C 40 Created",
        "Responsibilities Migrating",
        "ASP",
        "Project 3 NCI Projects",
        "Shipping Integrator",
        "CSS",
        "UML Tools",
        "MS Unit",
        "the SQL Server Programmer",
        "Project 1 Teledynamics TDTDisanecommerce",
        "Microsoft Unity IoC Container",
        "Data",
        "ASPNET",
        "eDell",
        "Agile development Introduced Microservices",
        "TTFB",
        "ASPNET MVC",
        "Project 2 Tech Support Customer Tracking System Designed",
        "Inheritance Polymorphism",
        "Integration",
        "Global Catalog Services"
    ],
    "experience": "Experience Lead Architect SeniorNet Developer Windstream Communications May 2013 to Present Project Synopsis Customer Resource Management CRM Portal used by Customer Service technicians and field technicians to manage customer accounts and data of various subplatforms of Windstream Communications Responsibilities Architected application tier and presentation tier of web application using MVVM and lead a team of developers for initial phase Designed application using Razor Engine HTML 5 ASPNET MVC Bootstrap 3 CSS3 JavaScript JQuery Data Tables and Knockout for a rich UI designs faster development process Code consistency and cross browser support Introduced new discipline of development like Code review Object oriented flow adhering to Agile development Introduced Microservices architecture to further enhance service layer and standardize as an API Implemented Net Core microservices deployment management using Docker Kubernetes and Rancher Automated Azure DevOps pipelines for microservice and regular Net applications Developed and encouraged habits of enterprise level development across team members for effective team work and efficient product Created customized JavaScript plugins to meet the specific requirement of the client Guided team and resolved roadblocks assigning reviewing and connecting bridges with different teams to deliver and resolve key functionalities in the application Lead project through Agile development and expertise using JIRA and FISHEYE for delivery Managed 6 lower environments and Production environment with on shoreoff shore team Implemented documentation comprehensively across team for all modules and conducted knowledge share sessions to learn various developments happening across team Improved performance of an application by optimizing code reducing TTFB time decreasing the size of render load and implementing AJAX Improved productive time of developer by implementing Admin tool to let business users manage user privileges role level visibility Created WCF Services and set standards of process for reaching different data sources Optimized code and implemented fast and consistency by creating wrappers around ODPNET AJAX and field mapping processes Reduced lines of code LOC by refactoring common functionality reusability by using partial views and scripts centralization load reduction by minifyingbundling files Optimized deployment process by 80 for Production by automation using Batch Shell Groovy Jenkins Pipeline Implemented CICD process for lower environments using Jenkins nightly builds automation scripts Created Web APIs OData Standard APIs for external Object integration to Salesforce system Introduced VueJS removed unnecessary tiers and implemented single page applications using Vue Js for faster development Environment Net Framework 40 MVC 40 C 40 Knockout 22 Data TablesNET Bootstrap JavaScript JQuery VueJS WCF RIA Services CSS ODPNET Oracle 11 g GIT Source tree Jenkins Batch Shell Groovy Docker Kubernetes Rancher Azure DevOps Lead Architect Senior Net Developer IProspect December 2011 to May 2013 Project Synopsis This project is about developing and maintaining multiple applications that process search and tracking data received from various sources like Google Bing etc consolidate and analyze data use Strategic Results System SRS to adjust and improve campaign performance for iProspect clients Responsibilities Migrating current SRS web application to new portal using ASPNET MVC framework Manage deployment and implement enhancements for new portal In MVC 30 RAZOR and ASPNET Dependency Injection DI is implemented using Microsoft Unity IoC Container to reduce coupling between components Manage offshore team and handle escalated issues relevant to existing applications Test existing applications and deploy releases to production Improved project development and deployment process for efficient code management Develop reports and dashboards using MicroStrategy for client Generate packages using SSIS for moving or processing data to database from different sources Added enhancements to Billing Manager for easy transactions and transformations of invoices Implemented daily weekly reports for each client in Micro strategy and added enhancements to client dashboards to show KPIs for variable date ranges Implemented Double Click data connector to download and process data into company databases using SSIS Monitor Search and Tracking data loads and fix issues process and QA data downloaded Environment C ASPNET 40 MVC 30 Entity Framework 40 RAZOR JQuery JavaScript LINQ SQL Server 2008 R2 Visual Studio 2010 SSIS MicroStrategy Telerik Controls Tortoise SVN Lead Web Developer EX Squared Solutions Inc October 2010 to December 2011 Project 1 Teledynamics TDTDisanecommerce application used to consume electronics and telecommunication products It has two modules Admin for writeCMS operations Dealer for product search payment batch order tracking e commerce operations Estimated the requirements and designed the core structure of the N tier application Lead a team of 3 developers in developing the Dealer module customer facing part of the project Developed the application using ASPNET MVC 30 RAZOR and C 40 Implemented the complete purchase process Add to Cart to Purchase Order Implemented HTML5 feature to drag and drop doc and upload orders from excel Integrated application with Third party APIs like Paypal Payflowpro for processing credit card payments with Shipping Integrator for estimating shipping and tracking shipment Used Repository pattern for loose coupling between the different layers and ease in testing Dependency Injection DI is implemented using Microsoft Unity to reduce coupling between components JQuery templates JQuery UI effects are widely used to improve speed in rendering data loaded using Ajax Entity Framework 40 and POCO templates are used in the Data layer to interact with the SQL Server Programmer Analyst Dell Inc May 2010 to October 2010 Project Synopsis Global Catalog services Global Catalog Services part of eDell project is a collection of data maintenance applications and web services The application maintains organizational structure data that is consumed by downstream applications to display information in different ways on the Dellcom website Responsibilities Gathered all requirements and participated in client meets throughout the project Project is implemented using agile software development methodology C ASPNET Dynamic Data is used to make AJAX calls on the maintenance UI pages Domain services Create Insert Update and Delete are implemented over ADONET Entity Framework 40 as Data layer for maintenance UI Test Driven Development TDD is used to improve efficiency in code development for Batch Upload System ADONET is used as Data layer for improve the performance of the maintenance application Service Oriented Architecture SOA is incorporated by using WCF Web services that sends data to the frontend UI Windows Authentication is used to authorize team members and to access data from database Interfaces Event handlers are used for Batch Upload system to implement PublisherSubscriber system and upload different kind of batches using the same process Stored Procedures Triggers Functions are used in the backend to interact with the SQL Server database Performed Unit testing and Integration testing on all methods using Microsoft testing following business requirements Followed up with the testing team to modify components and fix bugs issues Environment C ASPNET 40 Dynamic Data Entity Framework 40 JQuery LINQ ADONET WCF SQL Server 2008 Visual Studio 2010 Test Driven Development Microsoft Testing Net Developer Sally Beauty Supply TX October 2009 to April 2010 Project Synopsis POS Support Tracking Tool Sally Beauty Supply is the leading retailer of professional beauty supplies POS Support tracking tool is a web application developed to assist Support team help and trouble shoot over 3000 stores around the world It contains modules that display latest information from the corporate server controls that let you look edit and synchronize data from the corporate server with the corresponding stores Employee section displays updated information of the employees and let the support team EditEmail based on role hierarchy Responsibilities Analyzed the business requirements and participated in meetings throughout the project Used SCRUM development methodology for the project Developed application using ASPNET MVC framework VBNET in Visual Studio 2010 Designed Background images icons and CSS pages using Adobe Photoshop Illustrator ADONET Entity Framework LINQ is used at the Data layer to work against a Conceptual Application Model DomainDriven Design DDD is implemented in the application by using POCO Plain Old CLR Objects to make application unaware of persistence concerns Created stored procedures and triggers to enhance security and efficiency of the application Unity Application Block Unity IOC Container is used to implement dependency injection and to make application decoupled or loosely coupled Windows Authentication is used to authorize and provide access support team staff as the application is used on companys domain Object oriented OOPS concepts like Inheritance Polymorphism are used throughout the application for ease of maintenance Repository Pattern is used to interact with the Object Interfaces in order to apply consistent rules and logic in the application ASPNET MVC features like Action Filter Attributes Custom HTML Controls and Model Binders are used to display data and encourage code reusability Enterprise Library 41 is used to facilitate best practices in exception handling logging security and data access Used JQuery for HTML Validation and to make AJAX calls to make asynchronous calls to database and display in customized menus Performed Unit Testing on the modules by using NUnit according to the requirements and development standards Regularly followed up with the testing team to discuss the bugssuggestions identified during testing Environment ASPNET 40 NET MVC Framework RTM JQuery LINQ VBNET SQL Server 2008 Visual Studio 2010 Windows XP Pro IIS 70 N Unit Net Developer TACC August 2008 to August 2009 Project Synopsis UrbanDive is an online community for people and for businesses The site will specialize in bringing communities both businesses and individuals closer together The web application contains Registration module Auto EmailText module to remind events Calendar that shows all events Businesses search module to search all businesses in the country Also developed a Win forms application developed for a client to search sort import and send customers details from fox pro dbf files to administrator Tech Support Customer Tracking System is companys internal tracking web application used to search customers create case numbers editdeleteupdate case status reviews and feedbacks Responsibilities Project 1 Urban Dive Analyzed the business requirements and participated in meetings throughout the project Developed UrbanDive website using ASPNET MVC framework in Visual Studio 2008 Implemented HTML and CSS GUIs to test backend solutions Integrated Facebook with the webpage using Facebook Connect API to let users gain access to their Facebook account and edit the feeds in real time LINQ to SQL classes like Data context are used to update user information obtained from Facebook Designed tables in Microsoft Visio and created them in SQL Server 2008 Created stored procedures and triggers to enhance security and efficiency of the application Imported list of businesses into the database using Bulk Import and created a platform to search a business in the country Programmed Data Access layer ADONET Classes for dynamic editing sorting and displaying results Used Custom HTML Controls to display data and encourage code reusability Created complete EmailText application that can import contacts from Excel Access files Developed Windows and Web services to schedule and automate sending emails to customers OleDb Interface is used to interact with Excel and Access Databases and import information Used SMTP protocol for sending Emails and FTP protocol for sending text messages through an external client The application uses OleDb Interface to interact with different databases and download email files in Excel CSV formats Performed Unit Testing Integration Testing and Load testing on the modules by using N Unit according to the requirements and development standards Regularly followed up with the development team to discuss the defects identified during testing Project 2 Tech Support Customer Tracking System Designed and developed WebPages using ASPNET MVC and SQL Server 2008 Customer SearchEditDelete module is developed using AJAX JavaScript and JQuery Developed Charts and Tabular reports in Excel and Web format using SQL Server Reporting services SSRS Environment ASPNET 35 NET MVC Framework 10 JQuery LINQ C SQL Server 2008 Visual Studio 20082010 Windows XP IIS 70 N Unit net MS Unit 2008 to 2008 database Supported the application by doing performance tuning fixing bugs using FogBugz and testing using MS Unit testing Project 2 NCI Projects The Real Estate Book TREB TREB is a real estate web application used to browse available homesforeclosuressearch brokers all over the world Project involves migration of domain and backend services to new hosts Gathered requirements and updated Business rule document BSD after discussing with the Client Developed application using ASP NET MVC 20 and C 40 Implemented authentication of users by using C 40 Forms Authentication and Membership Services Designed various routes for the web app so that all the specific pages are routed according to Business rule and the rest are handled Search bar is implemented to handle multiple search types like city state zip and neighborhood using JavaScript and Jquery AJAX Implemented logging and error handling to log errors thrown in production Fixed various bugs across the app and tested browser compatibility Deployed TREB into production and tuned pages for performance optimization Supported testing in the Development Test and Production environments Project 3 NCI Projects Unique Homes UH UH is a real estate web application used to search unique home properties developments specialists all over the world Project involves migration of domain and backend services to new hosts Gathered requirements and updated Business rule document BSD after discussing with the Client Designed and developed the application using ASPNET MVC 20 and C 40 Created stored procedures and inline query calls using LINQ to Entities to improve efficiency Used JQuery to implement a generic search system for all kinds of searches made on the web page Fixed various bugs across the app and tested browser compatibility Deployed UH into production and improved performance of pages loaded to more requests per sec Supported testing in the Development Test and Production environments Environment C ASPNET 40 MVC 30 HTML 5 Entity Framework 40 RAZOR JQuery LINQ SQL Server 2008 Visual Studio 2010 Microsoft Testing Sourcegear Vault Jquery Templates POCO Objects FogBugz Education Masters Masters in computer engineering Skills AJAX ASP CSS INTERNET INFORMATION SERVER IIS ASPNET WEB SERVICES jQuery NET VISUAL STUDIO VISUAL STUDIO NET VISUAL STUDIO NET 2012 API C DOCKER Git HTML JAVASCRIPT BOOTSTRAP JENKINS TECHNICAL EXPERTISE Development Technologies ASPNET MVC 34 Web Forms ADONET ODPNET WPF AJAX HTML 5 XHTML XML CSS 3 WSDL XAML CSHTML Telerik Rad Controls Frameworks NET Framework 30354045 Containerization Net Core 22 Docker Kubernetes Rancher JavaScript Frameworks JavaScript JQuery Bootstrap Vue JS Knockout JS Programming Languages C C Visual Basic ORM Frameworks Entity Framework 45 LINQ NHibernate Dapper API WCF Web Services Web API Rest DBMS Oracle11 g MS SQL Server 2008 MS Access SQL Developer Development Tools Visual Studio Net 17 Microsoft Testing Tools Source Control TFS GIT Bitbucket Source Tree Source gear Vault Application Deployment Internet Information Server IIS 607075 Operating System Windows 7810Server Linux Web Protocols HTTP SMTP SSL SOAP FTP Code Comparison Beyond Compare Win Merge Tortoise SVN Automation Jenkins Azure DevOps Batch Shell Code Review Fish Eye Agile Development Tools JIRA FogBugz TicketChange Management Tools Spira Remedy Bitbucket APM Tools Dynatrace App Dynamics Project Documentation Ghost Doc Sandcastle Reporting Tools Microstrategy SSIS SSRS Code Analysis Resharper VS 2017 UML Tools MS Visio MagicDraw Atlassian Wiki Unit Testing MS Test NUnit 10 years",
    "extracted_keywords": [
        "Architect",
        "SeniorNet",
        "Developer",
        "Lead",
        "Architect",
        "amp",
        "SeniorNet",
        "span",
        "lDeveloperspan",
        "Lead",
        "Architect",
        "SeniorNet",
        "Developer",
        "Windstream",
        "Communications",
        "Frisco",
        "TX",
        "architect",
        "enterprise",
        "scale",
        "solutions",
        "focus",
        "process",
        "improvement",
        "team",
        "building",
        "nurture",
        "team",
        "members",
        "years",
        "experiences",
        "business",
        "domains",
        "solutions",
        "operations",
        "goals",
        "Accountable",
        "teamoriented",
        "leader",
        "learner",
        "love",
        "automation",
        "blend",
        "sarcasm",
        "Work",
        "Experience",
        "Lead",
        "Architect",
        "SeniorNet",
        "Developer",
        "Windstream",
        "Communications",
        "May",
        "Present",
        "Project",
        "Synopsis",
        "Customer",
        "Resource",
        "Management",
        "CRM",
        "Portal",
        "Customer",
        "Service",
        "technicians",
        "field",
        "technicians",
        "customer",
        "accounts",
        "data",
        "subplatforms",
        "Windstream",
        "Communications",
        "Responsibilities",
        "application",
        "tier",
        "presentation",
        "tier",
        "web",
        "application",
        "MVVM",
        "team",
        "developers",
        "phase",
        "application",
        "Razor",
        "Engine",
        "HTML",
        "ASPNET",
        "MVC",
        "Bootstrap",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Data",
        "Tables",
        "Knockout",
        "UI",
        "development",
        "process",
        "Code",
        "consistency",
        "browser",
        "support",
        "discipline",
        "development",
        "Code",
        "review",
        "flow",
        "development",
        "Introduced",
        "Microservices",
        "architecture",
        "service",
        "layer",
        "API",
        "Net",
        "Core",
        "microservices",
        "deployment",
        "management",
        "Docker",
        "Kubernetes",
        "Rancher",
        "Automated",
        "Azure",
        "DevOps",
        "pipelines",
        "microservice",
        "applications",
        "habits",
        "enterprise",
        "level",
        "development",
        "team",
        "members",
        "team",
        "work",
        "product",
        "JavaScript",
        "requirement",
        "client",
        "Guided",
        "team",
        "roadblocks",
        "bridges",
        "teams",
        "functionalities",
        "application",
        "Lead",
        "project",
        "development",
        "expertise",
        "JIRA",
        "FISHEYE",
        "delivery",
        "environments",
        "Production",
        "environment",
        "shoreoff",
        "shore",
        "team",
        "documentation",
        "team",
        "modules",
        "knowledge",
        "share",
        "sessions",
        "developments",
        "team",
        "performance",
        "application",
        "code",
        "time",
        "size",
        "render",
        "load",
        "AJAX",
        "time",
        "developer",
        "Admin",
        "tool",
        "business",
        "users",
        "user",
        "privileges",
        "role",
        "level",
        "visibility",
        "WCF",
        "Services",
        "standards",
        "process",
        "data",
        "sources",
        "code",
        "consistency",
        "wrappers",
        "ODPNET",
        "AJAX",
        "field",
        "mapping",
        "lines",
        "code",
        "LOC",
        "functionality",
        "reusability",
        "views",
        "scripts",
        "centralization",
        "load",
        "reduction",
        "files",
        "deployment",
        "process",
        "Production",
        "automation",
        "Batch",
        "Shell",
        "Groovy",
        "Jenkins",
        "Pipeline",
        "CICD",
        "process",
        "environments",
        "Jenkins",
        "automation",
        "Web",
        "APIs",
        "OData",
        "Standard",
        "APIs",
        "Object",
        "integration",
        "Salesforce",
        "system",
        "VueJS",
        "tiers",
        "page",
        "applications",
        "Vue",
        "Js",
        "development",
        "Environment",
        "Net",
        "Framework",
        "MVC",
        "C",
        "Knockout",
        "Data",
        "TablesNET",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "VueJS",
        "WCF",
        "RIA",
        "Services",
        "CSS",
        "ODPNET",
        "Oracle",
        "g",
        "GIT",
        "Source",
        "tree",
        "Jenkins",
        "Batch",
        "Shell",
        "Groovy",
        "Docker",
        "Kubernetes",
        "Rancher",
        "Azure",
        "DevOps",
        "Lead",
        "Architect",
        "Senior",
        "Net",
        "Developer",
        "IProspect",
        "December",
        "May",
        "Project",
        "Synopsis",
        "project",
        "applications",
        "search",
        "tracking",
        "data",
        "sources",
        "Google",
        "Bing",
        "data",
        "Strategic",
        "Results",
        "System",
        "SRS",
        "campaign",
        "performance",
        "iProspect",
        "clients",
        "Responsibilities",
        "SRS",
        "web",
        "application",
        "ASPNET",
        "MVC",
        "framework",
        "Manage",
        "deployment",
        "enhancements",
        "portal",
        "MVC",
        "RAZOR",
        "ASPNET",
        "Dependency",
        "Injection",
        "DI",
        "Microsoft",
        "Unity",
        "IoC",
        "Container",
        "coupling",
        "components",
        "Manage",
        "team",
        "issues",
        "applications",
        "applications",
        "releases",
        "project",
        "development",
        "deployment",
        "process",
        "code",
        "management",
        "Develop",
        "reports",
        "dashboards",
        "MicroStrategy",
        "client",
        "Generate",
        "packages",
        "SSIS",
        "processing",
        "data",
        "database",
        "sources",
        "enhancements",
        "Billing",
        "Manager",
        "transactions",
        "transformations",
        "invoices",
        "reports",
        "client",
        "Micro",
        "strategy",
        "enhancements",
        "client",
        "dashboards",
        "KPIs",
        "date",
        "Double",
        "Click",
        "data",
        "connector",
        "process",
        "data",
        "company",
        "databases",
        "SSIS",
        "Monitor",
        "Search",
        "Tracking",
        "data",
        "loads",
        "issues",
        "process",
        "QA",
        "data",
        "Environment",
        "C",
        "ASPNET",
        "MVC",
        "Entity",
        "Framework",
        "RAZOR",
        "JQuery",
        "JavaScript",
        "SQL",
        "Server",
        "R2",
        "Visual",
        "Studio",
        "SSIS",
        "MicroStrategy",
        "Telerik",
        "Controls",
        "Tortoise",
        "SVN",
        "Lead",
        "Web",
        "Developer",
        "EX",
        "Squared",
        "Solutions",
        "Inc",
        "October",
        "December",
        "Project",
        "Teledynamics",
        "TDTDisanecommerce",
        "application",
        "electronics",
        "telecommunication",
        "products",
        "modules",
        "Admin",
        "writeCMS",
        "operations",
        "Dealer",
        "product",
        "search",
        "payment",
        "batch",
        "order",
        "e",
        "commerce",
        "operations",
        "requirements",
        "core",
        "structure",
        "N",
        "tier",
        "application",
        "Lead",
        "team",
        "developers",
        "Dealer",
        "module",
        "customer",
        "part",
        "project",
        "application",
        "ASPNET",
        "MVC",
        "RAZOR",
        "C",
        "purchase",
        "process",
        "Cart",
        "Purchase",
        "Order",
        "HTML5",
        "orders",
        "Integrated",
        "application",
        "Third",
        "party",
        "APIs",
        "Paypal",
        "Payflowpro",
        "credit",
        "card",
        "payments",
        "Shipping",
        "Integrator",
        "shipping",
        "shipment",
        "Repository",
        "pattern",
        "coupling",
        "layers",
        "ease",
        "Dependency",
        "Injection",
        "DI",
        "Microsoft",
        "Unity",
        "coupling",
        "components",
        "JQuery",
        "JQuery",
        "UI",
        "effects",
        "speed",
        "data",
        "Ajax",
        "Entity",
        "Framework",
        "POCO",
        "templates",
        "Data",
        "layer",
        "SQL",
        "Server",
        "Programmer",
        "Analyst",
        "Dell",
        "Inc",
        "May",
        "October",
        "Project",
        "Synopsis",
        "Global",
        "Catalog",
        "services",
        "Global",
        "Catalog",
        "Services",
        "part",
        "eDell",
        "project",
        "collection",
        "data",
        "maintenance",
        "applications",
        "web",
        "services",
        "application",
        "structure",
        "data",
        "applications",
        "information",
        "ways",
        "Dellcom",
        "website",
        "Responsibilities",
        "requirements",
        "client",
        "project",
        "Project",
        "software",
        "development",
        "methodology",
        "C",
        "ASPNET",
        "Dynamic",
        "Data",
        "AJAX",
        "calls",
        "maintenance",
        "UI",
        "pages",
        "Domain",
        "services",
        "Insert",
        "Update",
        "Delete",
        "ADONET",
        "Entity",
        "Framework",
        "Data",
        "layer",
        "maintenance",
        "UI",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "efficiency",
        "code",
        "development",
        "Batch",
        "Upload",
        "System",
        "ADONET",
        "Data",
        "layer",
        "performance",
        "maintenance",
        "application",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "WCF",
        "Web",
        "services",
        "data",
        "frontend",
        "UI",
        "Windows",
        "Authentication",
        "team",
        "members",
        "data",
        "database",
        "Interfaces",
        "Event",
        "handlers",
        "Batch",
        "Upload",
        "system",
        "PublisherSubscriber",
        "system",
        "kind",
        "batches",
        "process",
        "Stored",
        "Procedures",
        "Triggers",
        "Functions",
        "backend",
        "SQL",
        "Server",
        "database",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "methods",
        "Microsoft",
        "testing",
        "business",
        "requirements",
        "testing",
        "team",
        "components",
        "bugs",
        "issues",
        "Environment",
        "C",
        "ASPNET",
        "Dynamic",
        "Data",
        "Entity",
        "Framework",
        "JQuery",
        "ADONET",
        "WCF",
        "SQL",
        "Server",
        "Visual",
        "Studio",
        "Test",
        "Driven",
        "Development",
        "Microsoft",
        "Testing",
        "Net",
        "Developer",
        "Sally",
        "Beauty",
        "Supply",
        "TX",
        "October",
        "April",
        "Project",
        "Synopsis",
        "POS",
        "Support",
        "Tracking",
        "Tool",
        "Sally",
        "Beauty",
        "Supply",
        "retailer",
        "beauty",
        "supplies",
        "Support",
        "tracking",
        "tool",
        "web",
        "application",
        "Support",
        "team",
        "help",
        "trouble",
        "stores",
        "world",
        "modules",
        "information",
        "server",
        "controls",
        "edit",
        "data",
        "server",
        "stores",
        "Employee",
        "section",
        "displays",
        "information",
        "employees",
        "support",
        "team",
        "EditEmail",
        "role",
        "hierarchy",
        "Responsibilities",
        "business",
        "requirements",
        "meetings",
        "project",
        "SCRUM",
        "development",
        "methodology",
        "project",
        "application",
        "ASPNET",
        "MVC",
        "framework",
        "VBNET",
        "Visual",
        "Studio",
        "Background",
        "icons",
        "CSS",
        "pages",
        "Adobe",
        "Photoshop",
        "Illustrator",
        "ADONET",
        "Entity",
        "Framework",
        "LINQ",
        "Data",
        "layer",
        "Conceptual",
        "Application",
        "Model",
        "DomainDriven",
        "Design",
        "DDD",
        "application",
        "POCO",
        "Plain",
        "Old",
        "CLR",
        "application",
        "persistence",
        "concerns",
        "procedures",
        "security",
        "efficiency",
        "application",
        "Unity",
        "Application",
        "Block",
        "Unity",
        "IOC",
        "Container",
        "dependency",
        "injection",
        "application",
        "Windows",
        "Authentication",
        "access",
        "support",
        "team",
        "staff",
        "application",
        "companys",
        "domain",
        "Object",
        "concepts",
        "Inheritance",
        "Polymorphism",
        "application",
        "ease",
        "maintenance",
        "Repository",
        "Pattern",
        "Object",
        "Interfaces",
        "order",
        "rules",
        "logic",
        "application",
        "ASPNET",
        "MVC",
        "Action",
        "Filter",
        "Custom",
        "HTML",
        "Controls",
        "Model",
        "Binders",
        "data",
        "code",
        "reusability",
        "Enterprise",
        "Library",
        "practices",
        "exception",
        "security",
        "data",
        "access",
        "JQuery",
        "HTML",
        "Validation",
        "AJAX",
        "calls",
        "calls",
        "database",
        "display",
        "menus",
        "Performed",
        "Unit",
        "Testing",
        "modules",
        "NUnit",
        "requirements",
        "development",
        "standards",
        "testing",
        "team",
        "bugssuggestions",
        "Environment",
        "ASPNET",
        "NET",
        "MVC",
        "Framework",
        "RTM",
        "JQuery",
        "VBNET",
        "SQL",
        "Server",
        "Visual",
        "Studio",
        "Windows",
        "XP",
        "Pro",
        "IIS",
        "N",
        "Unit",
        "Net",
        "Developer",
        "TACC",
        "August",
        "August",
        "Project",
        "Synopsis",
        "UrbanDive",
        "community",
        "people",
        "businesses",
        "site",
        "communities",
        "businesses",
        "individuals",
        "web",
        "application",
        "Registration",
        "module",
        "Auto",
        "EmailText",
        "module",
        "events",
        "Calendar",
        "events",
        "Businesses",
        "search",
        "module",
        "businesses",
        "country",
        "Win",
        "forms",
        "application",
        "client",
        "import",
        "customers",
        "details",
        "fox",
        "dbf",
        "files",
        "Tech",
        "Support",
        "Customer",
        "Tracking",
        "System",
        "tracking",
        "web",
        "application",
        "customers",
        "case",
        "numbers",
        "case",
        "status",
        "reviews",
        "feedbacks",
        "Responsibilities",
        "Project",
        "Urban",
        "Dive",
        "business",
        "requirements",
        "meetings",
        "project",
        "UrbanDive",
        "website",
        "ASPNET",
        "MVC",
        "framework",
        "Visual",
        "Studio",
        "HTML",
        "CSS",
        "GUIs",
        "solutions",
        "Integrated",
        "Facebook",
        "webpage",
        "Facebook",
        "Connect",
        "API",
        "users",
        "access",
        "Facebook",
        "account",
        "feeds",
        "time",
        "SQL",
        "classes",
        "Data",
        "context",
        "user",
        "information",
        "Facebook",
        "tables",
        "Microsoft",
        "Visio",
        "SQL",
        "Server",
        "Created",
        "procedures",
        "security",
        "efficiency",
        "application",
        "list",
        "businesses",
        "database",
        "Bulk",
        "Import",
        "platform",
        "business",
        "country",
        "Programmed",
        "Data",
        "Access",
        "layer",
        "ADONET",
        "Classes",
        "editing",
        "results",
        "Custom",
        "HTML",
        "Controls",
        "data",
        "code",
        "reusability",
        "EmailText",
        "application",
        "contacts",
        "Excel",
        "Access",
        "Windows",
        "Web",
        "services",
        "sending",
        "emails",
        "customers",
        "OleDb",
        "Interface",
        "Excel",
        "Access",
        "Databases",
        "import",
        "information",
        "SMTP",
        "protocol",
        "Emails",
        "FTP",
        "protocol",
        "text",
        "messages",
        "client",
        "application",
        "OleDb",
        "Interface",
        "databases",
        "email",
        "files",
        "Excel",
        "CSV",
        "formats",
        "Performed",
        "Unit",
        "Testing",
        "Integration",
        "Testing",
        "Load",
        "testing",
        "modules",
        "N",
        "Unit",
        "requirements",
        "development",
        "standards",
        "development",
        "team",
        "defects",
        "Project",
        "Tech",
        "Support",
        "Customer",
        "Tracking",
        "System",
        "WebPages",
        "ASPNET",
        "MVC",
        "SQL",
        "Server",
        "Customer",
        "module",
        "AJAX",
        "JavaScript",
        "JQuery",
        "Developed",
        "Charts",
        "Tabular",
        "reports",
        "Excel",
        "Web",
        "format",
        "SQL",
        "Server",
        "Reporting",
        "services",
        "SSRS",
        "Environment",
        "ASPNET",
        "NET",
        "MVC",
        "Framework",
        "JQuery",
        "C",
        "SQL",
        "Server",
        "Visual",
        "Studio",
        "Windows",
        "XP",
        "IIS",
        "N",
        "Unit",
        "MS",
        "Unit",
        "database",
        "application",
        "performance",
        "bugs",
        "FogBugz",
        "testing",
        "MS",
        "Unit",
        "testing",
        "Project",
        "NCI",
        "Projects",
        "Real",
        "Estate",
        "Book",
        "TREB",
        "TREB",
        "estate",
        "web",
        "application",
        "homesforeclosuressearch",
        "brokers",
        "world",
        "Project",
        "migration",
        "domain",
        "services",
        "hosts",
        "requirements",
        "Business",
        "rule",
        "document",
        "BSD",
        "Client",
        "application",
        "ASP",
        "NET",
        "MVC",
        "C",
        "authentication",
        "users",
        "C",
        "Forms",
        "Authentication",
        "Membership",
        "Services",
        "routes",
        "web",
        "app",
        "pages",
        "Business",
        "rule",
        "rest",
        "Search",
        "bar",
        "search",
        "types",
        "city",
        "state",
        "zip",
        "neighborhood",
        "JavaScript",
        "Jquery",
        "AJAX",
        "error",
        "handling",
        "errors",
        "production",
        "bugs",
        "app",
        "browser",
        "compatibility",
        "Deployed",
        "production",
        "pages",
        "performance",
        "optimization",
        "testing",
        "Development",
        "Test",
        "Production",
        "Project",
        "NCI",
        "Projects",
        "Unique",
        "Homes",
        "UH",
        "UH",
        "estate",
        "web",
        "application",
        "home",
        "properties",
        "developments",
        "specialists",
        "world",
        "Project",
        "migration",
        "domain",
        "services",
        "hosts",
        "requirements",
        "Business",
        "rule",
        "document",
        "BSD",
        "Client",
        "application",
        "ASPNET",
        "MVC",
        "C",
        "procedures",
        "inline",
        "query",
        "calls",
        "LINQ",
        "Entities",
        "efficiency",
        "JQuery",
        "search",
        "system",
        "kinds",
        "searches",
        "web",
        "page",
        "bugs",
        "app",
        "browser",
        "compatibility",
        "UH",
        "production",
        "performance",
        "pages",
        "requests",
        "sec",
        "testing",
        "Development",
        "Test",
        "Production",
        "environments",
        "Environment",
        "C",
        "ASPNET",
        "MVC",
        "HTML",
        "Entity",
        "Framework",
        "RAZOR",
        "JQuery",
        "SQL",
        "Server",
        "Visual",
        "Studio",
        "Microsoft",
        "Testing",
        "Sourcegear",
        "Vault",
        "Jquery",
        "Templates",
        "POCO",
        "FogBugz",
        "Education",
        "Masters",
        "Masters",
        "computer",
        "engineering",
        "Skills",
        "AJAX",
        "ASP",
        "CSS",
        "INTERNET",
        "INFORMATION",
        "SERVER",
        "IIS",
        "ASPNET",
        "WEB",
        "SERVICES",
        "jQuery",
        "NET",
        "VISUAL",
        "STUDIO",
        "VISUAL",
        "STUDIO",
        "NET",
        "VISUAL",
        "STUDIO",
        "NET",
        "API",
        "C",
        "DOCKER",
        "Git",
        "HTML",
        "JAVASCRIPT",
        "BOOTSTRAP",
        "JENKINS",
        "TECHNICAL",
        "EXPERTISE",
        "Development",
        "Technologies",
        "ASPNET",
        "MVC",
        "Web",
        "Forms",
        "ADONET",
        "ODPNET",
        "WPF",
        "AJAX",
        "HTML",
        "XHTML",
        "XML",
        "CSS",
        "WSDL",
        "XAML",
        "CSHTML",
        "Telerik",
        "Rad",
        "Controls",
        "Frameworks",
        "NET",
        "Framework",
        "Containerization",
        "Net",
        "Core",
        "Docker",
        "Kubernetes",
        "Rancher",
        "JavaScript",
        "Frameworks",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "Vue",
        "JS",
        "Knockout",
        "JS",
        "Programming",
        "Languages",
        "C",
        "C",
        "Visual",
        "Basic",
        "ORM",
        "Frameworks",
        "Entity",
        "Framework",
        "NHibernate",
        "API",
        "WCF",
        "Web",
        "Services",
        "Web",
        "API",
        "Rest",
        "DBMS",
        "Oracle11",
        "g",
        "MS",
        "SQL",
        "Server",
        "MS",
        "Access",
        "SQL",
        "Developer",
        "Development",
        "Tools",
        "Visual",
        "Studio",
        "Net",
        "Microsoft",
        "Testing",
        "Tools",
        "Source",
        "Control",
        "TFS",
        "GIT",
        "Bitbucket",
        "Source",
        "Tree",
        "Source",
        "Vault",
        "Application",
        "Deployment",
        "Internet",
        "Information",
        "Server",
        "IIS",
        "Operating",
        "System",
        "Linux",
        "Web",
        "Protocols",
        "HTTP",
        "SMTP",
        "SSL",
        "SOAP",
        "FTP",
        "Code",
        "Comparison",
        "Compare",
        "Win",
        "Merge",
        "Tortoise",
        "SVN",
        "Automation",
        "Jenkins",
        "Azure",
        "DevOps",
        "Batch",
        "Shell",
        "Code",
        "Review",
        "Fish",
        "Eye",
        "Agile",
        "Development",
        "Tools",
        "JIRA",
        "FogBugz",
        "TicketChange",
        "Management",
        "Tools",
        "Spira",
        "Remedy",
        "Bitbucket",
        "APM",
        "Tools",
        "Dynatrace",
        "App",
        "Dynamics",
        "Project",
        "Documentation",
        "Ghost",
        "Doc",
        "Sandcastle",
        "Reporting",
        "Tools",
        "Microstrategy",
        "SSIS",
        "SSRS",
        "Code",
        "Analysis",
        "Resharper",
        "VS",
        "UML",
        "Tools",
        "MS",
        "Visio",
        "MagicDraw",
        "Atlassian",
        "Wiki",
        "Unit",
        "Testing",
        "MS",
        "Test",
        "NUnit",
        "years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:54:34.318978",
    "resume_data": "Lead Architect SeniorNet Developer Lead Architect amp SeniorNet span lDeveloperspan Lead Architect SeniorNet Developer Windstream Communications Frisco TX Experienced architect providing enterprise scale solutions with focus on process improvement team building and nurture of team members Over ten years of experiences working with various business domains introducing and implementing solutions to enhance operations and achieve their goals Accountable teamoriented leader and perpetual learner with love for automation and blend of sarcasm Work Experience Lead Architect SeniorNet Developer Windstream Communications May 2013 to Present Project Synopsis Customer Resource Management CRM Portal used by Customer Service technicians and field technicians to manage customer accounts and data of various subplatforms of Windstream Communications Responsibilities Architected application tier and presentation tier of web application using MVVM and lead a team of developers for initial phase Designed application using Razor Engine HTML 5 ASPNET MVC Bootstrap 3 CSS3 JavaScript JQuery Data Tables and Knockout for a rich UI designs faster development process Code consistency and cross browser support Introduced new discipline of development like Code review Object oriented flow adhering to Agile development Introduced Microservices architecture to further enhance service layer and standardize as an API Implemented Net Core microservices deployment management using Docker Kubernetes and Rancher Automated Azure DevOps pipelines for microservice and regular Net applications Developed and encouraged habits of enterprise level development across team members for effective team work and efficient product Created customized JavaScript plugins to meet the specific requirement of the client Guided team and resolved roadblocks assigning reviewing and connecting bridges with different teams to deliver and resolve key functionalities in the application Lead project through Agile development and expertise using JIRA and FISHEYE for delivery Managed 6 lower environments and Production environment with on shoreoff shore team Implemented documentation comprehensively across team for all modules and conducted knowledge share sessions to learn various developments happening across team Improved performance of an application by optimizing code reducing TTFB time decreasing the size of render load and implementing AJAX Improved productive time of developer by implementing Admin tool to let business users manage user privileges role level visibility Created WCF Services and set standards of process for reaching different data sources Optimized code and implemented fast and consistency by creating wrappers around ODPNET AJAX and field mapping processes Reduced lines of code LOC by refactoring common functionality reusability by using partial views and scripts centralization load reduction by minifyingbundling files Optimized deployment process by 80 for Production by automation using Batch Shell Groovy Jenkins Pipeline Implemented CICD process for lower environments using Jenkins nightly builds automation scripts Created Web APIs OData Standard APIs for external Object integration to Salesforce system Introduced VueJS removed unnecessary tiers and implemented single page applications using Vue Js for faster development Environment Net Framework 40 MVC 40 C 40 Knockout 22 Data TablesNET Bootstrap JavaScript JQuery VueJS WCF RIA Services CSS ODPNET Oracle 11g GIT Source tree Jenkins Batch Shell Groovy Docker Kubernetes Rancher Azure DevOps Lead Architect Senior Net Developer IProspect December 2011 to May 2013 Project Synopsis This project is about developing and maintaining multiple applications that process search and tracking data received from various sources like Google Bing etc consolidate and analyze data use Strategic Results System SRS to adjust and improve campaign performance for iProspect clients Responsibilities Migrating current SRS web application to new portal using ASPNET MVC framework Manage deployment and implement enhancements for new portal In MVC 30 RAZOR and ASPNET Dependency Injection DI is implemented using Microsoft Unity IoC Container to reduce coupling between components Manage offshore team and handle escalated issues relevant to existing applications Test existing applications and deploy releases to production Improved project development and deployment process for efficient code management Develop reports and dashboards using MicroStrategy for client Generate packages using SSIS for moving or processing data to database from different sources Added enhancements to Billing Manager for easy transactions and transformations of invoices Implemented daily weekly reports for each client in Micro strategy and added enhancements to client dashboards to show KPIs for variable date ranges Implemented Double Click data connector to download and process data into company databases using SSIS Monitor Search and Tracking data loads and fix issues process and QA data downloaded Environment C ASPNET 40 MVC 30 Entity Framework 40 RAZOR JQuery JavaScript LINQ SQL Server 2008 R2 Visual Studio 2010 SSIS MicroStrategy Telerik Controls Tortoise SVN Lead Web Developer EX Squared Solutions Inc October 2010 to December 2011 Project 1 Teledynamics TDTDisanecommerce application used to consume electronics and telecommunication products It has two modules Admin for writeCMS operations Dealer for product search payment batch order tracking e commerce operations Estimated the requirements and designed the core structure of the N tier application Lead a team of 3 developers in developing the Dealer module customer facing part of the project Developed the application using ASPNET MVC 30 RAZOR and C 40 Implemented the complete purchase process Add to Cart to Purchase Order Implemented HTML5 feature to drag and drop doc and upload orders from excel Integrated application with Third party APIs like Paypal Payflowpro for processing credit card payments with Shipping Integrator for estimating shipping and tracking shipment Used Repository pattern for loose coupling between the different layers and ease in testing Dependency Injection DI is implemented using Microsoft Unity to reduce coupling between components JQuery templates JQuery UI effects are widely used to improve speed in rendering data loaded using Ajax Entity Framework 40 and POCO templates are used in the Data layer to interact with the SQL Server Programmer Analyst Dell Inc May 2010 to October 2010 Project Synopsis Global Catalog services Global Catalog Services part of eDell project is a collection of data maintenance applications and web services The application maintains organizational structure data that is consumed by downstream applications to display information in different ways on the Dellcom website Responsibilities Gathered all requirements and participated in client meets throughout the project Project is implemented using agile software development methodology C ASPNET Dynamic Data is used to make AJAX calls on the maintenance UI pages Domain services Create Insert Update and Delete are implemented over ADONET Entity Framework 40 as Data layer for maintenance UI Test Driven Development TDD is used to improve efficiency in code development for Batch Upload System ADONET is used as Data layer for improve the performance of the maintenance application Service Oriented Architecture SOA is incorporated by using WCF Web services that sends data to the frontend UI Windows Authentication is used to authorize team members and to access data from database Interfaces Event handlers are used for Batch Upload system to implement PublisherSubscriber system and upload different kind of batches using the same process Stored Procedures Triggers Functions are used in the backend to interact with the SQL Server database Performed Unit testing and Integration testing on all methods using Microsoft testing following business requirements Followed up with the testing team to modify components and fix bugs issues Environment C ASPNET 40 Dynamic Data Entity Framework 40 JQuery LINQ ADONET WCF SQL Server 2008 Visual Studio 2010 Test Driven Development Microsoft Testing Net Developer Sally Beauty Supply TX October 2009 to April 2010 Project Synopsis POS Support Tracking Tool Sally Beauty Supply is the leading retailer of professional beauty supplies POS Support tracking tool is a web application developed to assist Support team help and trouble shoot over 3000 stores around the world It contains modules that display latest information from the corporate server controls that let you look edit and synchronize data from the corporate server with the corresponding stores Employee section displays updated information of the employees and let the support team EditEmail based on role hierarchy Responsibilities Analyzed the business requirements and participated in meetings throughout the project Used SCRUM development methodology for the project Developed application using ASPNET MVC framework VBNET in Visual Studio 2010 Designed Background images icons and CSS pages using Adobe Photoshop Illustrator ADONET Entity Framework LINQ is used at the Data layer to work against a Conceptual Application Model DomainDriven Design DDD is implemented in the application by using POCO Plain Old CLR Objects to make application unaware of persistence concerns Created stored procedures and triggers to enhance security and efficiency of the application Unity Application Block Unity IOC Container is used to implement dependency injection and to make application decoupled or loosely coupled Windows Authentication is used to authorize and provide access support team staff as the application is used on companys domain Object oriented OOPS concepts like Inheritance Polymorphism are used throughout the application for ease of maintenance Repository Pattern is used to interact with the Object Interfaces in order to apply consistent rules and logic in the application ASPNET MVC features like Action Filter Attributes Custom HTML Controls and Model Binders are used to display data and encourage code reusability Enterprise Library 41 is used to facilitate best practices in exception handling logging security and data access Used JQuery for HTML Validation and to make AJAX calls to make asynchronous calls to database and display in customized menus Performed Unit Testing on the modules by using NUnit according to the requirements and development standards Regularly followed up with the testing team to discuss the bugssuggestions identified during testing Environment ASPNET 40 NET MVC Framework RTM JQuery LINQ VBNET SQL Server 2008 Visual Studio 2010 Windows XP Pro IIS 70 N Unit Net Developer TACC August 2008 to August 2009 Project Synopsis UrbanDive is an online community for people and for businesses The site will specialize in bringing communities both businesses and individuals closer together The web application contains Registration module Auto EmailText module to remind events Calendar that shows all events Businesses search module to search all businesses in the country Also developed a Win forms application developed for a client to search sort import and send customers details from fox pro dbf files to administrator Tech Support Customer Tracking System is companys internal tracking web application used to search customers create case numbers editdeleteupdate case status reviews and feedbacks Responsibilities Project 1 Urban Dive Analyzed the business requirements and participated in meetings throughout the project Developed UrbanDive website using ASPNET MVC framework in Visual Studio 2008 Implemented HTML and CSS GUIs to test backend solutions Integrated Facebook with the webpage using Facebook Connect API to let users gain access to their Facebook account and edit the feeds in real time LINQ to SQL classes like Data context are used to update user information obtained from Facebook Designed tables in Microsoft Visio and created them in SQL Server 2008 Created stored procedures and triggers to enhance security and efficiency of the application Imported list of businesses into the database using Bulk Import and created a platform to search a business in the country Programmed Data Access layer ADONET Classes for dynamic editing sorting and displaying results Used Custom HTML Controls to display data and encourage code reusability Created complete EmailText application that can import contacts from Excel Access files Developed Windows and Web services to schedule and automate sending emails to customers OleDb Interface is used to interact with Excel and Access Databases and import information Used SMTP protocol for sending Emails and FTP protocol for sending text messages through an external client The application uses OleDb Interface to interact with different databases and download email files in Excel CSV formats Performed Unit Testing Integration Testing and Load testing on the modules by using N Unit according to the requirements and development standards Regularly followed up with the development team to discuss the defects identified during testing Project 2 Tech Support Customer Tracking System Designed and developed WebPages using ASPNET MVC and SQL Server 2008 Customer SearchEditDelete module is developed using AJAX JavaScript and JQuery Developed Charts and Tabular reports in Excel and Web format using SQL Server Reporting services SSRS Environment ASPNET 35 NET MVC Framework 10 JQuery LINQ C SQL Server 2008 Visual Studio 20082010 Windows XP IIS 70 N Unit net MS Unit 2008 to 2008 database Supported the application by doing performance tuning fixing bugs using FogBugz and testing using MS Unit testing Project 2 NCI Projects The Real Estate Book TREB TREB is a real estate web application used to browse available homesforeclosuressearch brokers all over the world Project involves migration of domain and backend services to new hosts Gathered requirements and updated Business rule document BSD after discussing with the Client Developed application using ASP NET MVC 20 and C 40 Implemented authentication of users by using C 40 Forms Authentication and Membership Services Designed various routes for the web app so that all the specific pages are routed according to Business rule and the rest are handled Search bar is implemented to handle multiple search types like city state zip and neighborhood using JavaScript and Jquery AJAX Implemented logging and error handling to log errors thrown in production Fixed various bugs across the app and tested browser compatibility Deployed TREB into production and tuned pages for performance optimization Supported testing in the Development Test and Production environments Project 3 NCI Projects Unique Homes UH UH is a real estate web application used to search unique home properties developments specialists all over the world Project involves migration of domain and backend services to new hosts Gathered requirements and updated Business rule document BSD after discussing with the Client Designed and developed the application using ASPNET MVC 20 and C 40 Created stored procedures and inline query calls using LINQ to Entities to improve efficiency Used JQuery to implement a generic search system for all kinds of searches made on the web page Fixed various bugs across the app and tested browser compatibility Deployed UH into production and improved performance of pages loaded to more requests per sec Supported testing in the Development Test and Production environments Environment C ASPNET 40 MVC 30 HTML 5 Entity Framework 40 RAZOR JQuery LINQ SQL Server 2008 Visual Studio 2010 Microsoft Testing Sourcegear Vault Jquery Templates POCO Objects FogBugz Education Masters Masters in computer engineering Skills AJAX ASP CSS INTERNET INFORMATION SERVER IIS ASPNET WEB SERVICES jQuery NET VISUAL STUDIO VISUAL STUDIO NET VISUAL STUDIO NET 2012 API C DOCKER Git HTML JAVASCRIPT BOOTSTRAP JENKINS TECHNICAL EXPERTISE Development Technologies ASPNET MVC 34 Web Forms ADONET ODPNET WPF AJAX HTML 5 XHTML XML CSS 3 WSDL XAML CSHTML Telerik Rad Controls Frameworks NET Framework 30354045 Containerization Net Core 22 Docker Kubernetes Rancher JavaScript Frameworks JavaScript JQuery Bootstrap Vue JS Knockout JS Programming Languages C C Visual Basic ORM Frameworks Entity Framework 45 LINQ NHibernate Dapper API WCF Web Services Web API Rest DBMS Oracle11g MS SQL Server 2008 MS Access SQL Developer Development Tools Visual Studio Net 201220152017 Microsoft Testing Tools Source Control TFS GIT Bitbucket Source Tree Source gear Vault Application Deployment Internet Information Server IIS 607075 Operating System Windows 7810Server Linux Web Protocols HTTP SMTP SSL SOAP FTP Code Comparison Beyond Compare Win Merge Tortoise SVN Automation Jenkins Azure DevOps Batch Shell Code Review Fish Eye Agile Development Tools JIRA FogBugz TicketChange Management Tools Spira Remedy Bitbucket APM Tools Dynatrace App Dynamics Project Documentation Ghost Doc Sandcastle Reporting Tools Microstrategy SSIS SSRS Code Analysis Resharper VS 2017 UML Tools MS Visio MagicDraw Atlassian Wiki Unit Testing MS Test NUnit 10 years",
    "unique_id": "c65c5b26-26b5-4a55-aed3-130117ee8bd0"
}