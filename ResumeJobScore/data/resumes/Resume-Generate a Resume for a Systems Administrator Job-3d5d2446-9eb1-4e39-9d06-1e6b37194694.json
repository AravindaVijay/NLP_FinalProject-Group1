{
    "clean_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer American Express Phoenix AZ 8 years of IT experience in analysis design development testing maintenance and applications using various technologies Hands on experience in developing web applications implementing Model View Control architecture using Django Flask web application frameworks Developed web applications RESTful web services and APIs using Python Flask Django good knowledge of web services with protocols SOAP REST Solid background in ObjectOriented analysis in developing front end and back end framework using various Design Patterns Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Strong expertise in development of web based applications using Python Java HTML XML KML CSS DHTML JavaScript JSON Angular JS and jQuery Working knowledge of Python ORM libraries including Django ORM SQL Alchemy Experience in developing applications using Amazon Web Services like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load balancer ELBs Strong development experience on Linux based operating systems Debain CentOS RedHat Ubuntu Proficiency in writing SQL queries TSQL PLSQL programming tables view functions triggers stored procedures using relational databases like MySQL MSSQL Oracle Experienced in NoSQL technologies like Cassandra Mongo DB Experienced in working with various Python Integrated Development Environments IDE like NetBeans PyCharm Eclipse Visual Studio Experience in using various version control systems like SVN CVS Git Knowledge in working with continuous deployment using Heroku and Jenkins Authorized to work in the US for any employer Work Experience Senior Python Developer American Express Phoenix AZ January 2018 to Present The main goal of the project was to create web based application that lets you electronically tests and view the saving results Also application supports customer information and provides quick access to the Transaction for easier and efficient manner Responsibilities Participated in all stages of Software Development Life Cycle like Planning Analysis Design Implementation and Testing Model View Control architecture is implemented using Django Framework to develop web applications Implemented Business logic worked on data exchange processed XML and HTML using Python 34 and its familiar framework Django Worked on Django APIs for accessing the database Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Used SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Python Unit test library was used for the purpose of testing many programs on Python and other codes For the manipulation of data from the database various queries using SQL were written and created a database using MySQL Used AJAX for Better interactivity for the end user and easier navigation and AJAX is compact Implemented RESTful Web Services for the data transportation between multiple systems Used Python Library Beautiful Soup for web Scrapping Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Created Git repository and added to Git Hub project An application was developed in Linux environment and dealt with all of its commands Environment Python 34 Django Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins Git GitHub Linux PyCharm Senior Python Developer Caterpillar Inc Peoria IL January 2015 to December 2017 The main goal of the project was to support the finance organization for budget forecast and reporting using Python based web apps Responsibilities Full Stack developer created a custom web application using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components Created database Model APIs and Views utilizing Python in order to build an interactive web based application Used Python to place data into JSON files for testing Django Websites Updated and manipulated content and files by using python scripts Used the Django Framework to develop the application Wrote scripts in Python for automation of testing jobs Modified multithreaded C programs to process data used STL containers algorithms various data structures and design patterns in software design Involved in Developing a RESTful service using Python Flask framework Deployment and Build on various environments including Linux and UNIX Created complex dynamic HTML UI using jQuery Developed an analytics system using Memcached Cassandra Performed Python scripting using the pyodbc module to select daily xlsx files and then to read and connect those files onto Access From there data would be filtered and manipulated to be appended onto a master inventory table Compared leases using innerouter joins that are active to our total lease database to ensure data integrity and validity Developed several Python administrative scripts to automate project deployment process Implemented the unit test cases and mentored junior developers Participated in code reviews and implemented Pythonic best practices Acted as a scrum master and conducted the retrospectives planning meetings resolved the impediments planned the releases with the team with the product owners Experience in using Git GitHub and Amazon EC2 and deployment using Heroku Environment Python Django Flask UML Rational Rose C Design Patterns SVN HTML CSS AJAX Angularjs JSON Restful XML JavaScript OOAOOD Shell Scripting Git GitHub MYSQL Python Developer Progressive Insurance Mayfield Village OH October 2013 to December 2014 Progressive Auto Insurance portal provides ability for end customersusers to request a quote provide quote details purchase auto insurance and payment of insurance amount This platform is built using a Struts framework in the presentation layer The back end functionality is built using Oracle as data persistence layer and Hibernate as data access layer Responsibilities Worked on the project from gather requirement developing the entire application with help from other analyst Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Use of Python Frameworks for data analysis including Sqlalchemy Designed and created backend data access modules using PLSQL stored procedures and Oracle 9i Created database access layer using JDBC and PLSQL stored procedures Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Used HTML CSS JQuery JSON and JavaScript for front end applications Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Worked in an agile development environment Environment Python Django JSON HTML CSS AJAX JQuery Bootstrap AWS XML SOAP GitHub Jira Agile SQL PLSQL MYSQL Oracle and Windows Software Engineer Bank of America Charlotte NC July 2011 to September 2013 BOA is one of the leading companies in the US which deals in a range of financial services ie Housing Loan Mortgage and Credit Cards etc Accounts Receivable System holds the demographic financial and historical information for each account Other modules needing that information obtain it from AR System eliminating record duplication The project Involves the development of the Automatic Clearing House system Electronic fund Transfer to facilitate faster and better recovery of Accounts Receivable Responsibilities Designed and developed usecase diagrams class diagrams and object diagrams using UML Rational Rose for OOAOOD techniques Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Performed testing using Djangos Test Module Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Involved in writing application level code to interact with APIs Web Services using JSON Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python Django Java MySQL HTML XHTML CSS AJAX JSON JavaScript Apache Web Server Linux Education Bachelors Skills Python 34 Django Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins Git GitHub Linux PyCharm 8 years Additional Information Technical Skills Languages Python CC ASPNET Shell Scripts Java SQL TSQL PLSQL HTML CSS JavaScript jQuery Web Technologies HTML CSS DOM JavaScript XML KML AJAX JQuery JSON Web Frameworks Django Pyramid Flask Webapp2 AngularJS Databases MySQL MSSQL Oracle 8i 9i 10g 11g MongoDB Operating Systems Servers UNIXLinux Ubuntu Windows Apache Tomcat Utilities Git SVN MS Visio MS Office Methodologies Waterfall Spiral Agile",
    "entities": [
        "GIT",
        "Design Patterns Working",
        "Oracle Database Used HTML CSS JQuery JSON",
        "Python Integrated Development Environments",
        "AJAX",
        "Amazon AWS S3",
        "UML Rational Rose for OOAOOD",
        "Visio MS Office Methodologies Waterfall Spiral Agile",
        "GUI",
        "HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Used",
        "Jenkins",
        "US",
        "Housing Loan Mortgage",
        "Oracle 9i Created",
        "Created Django",
        "Python Responsible",
        "UNIX",
        "Djangos",
        "Created",
        "JavaScript",
        "Automatic Clearing",
        "Mayfield Village",
        "Created Git",
        "Oracle",
        "OOAD",
        "UNIX Created",
        "Developed Views",
        "jQuery Working",
        "Python Developer Progressive Insurance",
        "Progressive Auto Insurance",
        "Django AWS Amazon",
        "Python Developer Caterpillar Inc",
        "Pythonic",
        "SVN",
        "HTML",
        "CSS",
        "Amazon",
        "jQuery Developed",
        "Linux",
        "Heroku",
        "Software Development Life Cycle like Planning Analysis Design Implementation and Testing Model View Control",
        "Memcached Cassandra Performed Python",
        "Additional Information Technical Skills Languages Python CC ASPNET Shell",
        "Python Flask framework Deployment and Build",
        "Transaction",
        "SQL",
        "ObjectOriented",
        "Software Development Lifecycle",
        "Amazon Web Services",
        "XML",
        "Data",
        "Bootstrap Restful Web Services",
        "Acted",
        "NetBeans",
        "SOAP",
        "Involves",
        "lPythonspan",
        "SVN CVS Git Knowledge",
        "JSON Creating",
        "NoSQL",
        "AR System",
        "RDS",
        "Implemented RESTful Web Services",
        "Views",
        "Windows Software Engineer Bank of America Charlotte",
        "HTML UI",
        "Model View Control",
        "Cassandra Mongo DB Experienced",
        "STL",
        "Djangos Test Module Involved",
        "BOA"
    ],
    "experience": "Experience in developing applications using Amazon Web Services like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load balancer ELBs Strong development experience on Linux based operating systems Debain CentOS RedHat Ubuntu Proficiency in writing SQL queries TSQL PLSQL programming tables view functions triggers stored procedures using relational databases like MySQL MSSQL Oracle Experienced in NoSQL technologies like Cassandra Mongo DB Experienced in working with various Python Integrated Development Environments IDE like NetBeans PyCharm Eclipse Visual Studio Experience in using various version control systems like SVN CVS Git Knowledge in working with continuous deployment using Heroku and Jenkins Authorized to work in the US for any employer Work Experience Senior Python Developer American Express Phoenix AZ January 2018 to Present The main goal of the project was to create web based application that lets you electronically tests and view the saving results Also application supports customer information and provides quick access to the Transaction for easier and efficient manner Responsibilities Participated in all stages of Software Development Life Cycle like Planning Analysis Design Implementation and Testing Model View Control architecture is implemented using Django Framework to develop web applications Implemented Business logic worked on data exchange processed XML and HTML using Python 34 and its familiar framework Django Worked on Django APIs for accessing the database Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Used SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Python Unit test library was used for the purpose of testing many programs on Python and other codes For the manipulation of data from the database various queries using SQL were written and created a database using MySQL Used AJAX for Better interactivity for the end user and easier navigation and AJAX is compact Implemented RESTful Web Services for the data transportation between multiple systems Used Python Library Beautiful Soup for web Scrapping Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Created Git repository and added to Git Hub project An application was developed in Linux environment and dealt with all of its commands Environment Python 34 Django Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins Git GitHub Linux PyCharm Senior Python Developer Caterpillar Inc Peoria IL January 2015 to December 2017 The main goal of the project was to support the finance organization for budget forecast and reporting using Python based web apps Responsibilities Full Stack developer created a custom web application using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components Created database Model APIs and Views utilizing Python in order to build an interactive web based application Used Python to place data into JSON files for testing Django Websites Updated and manipulated content and files by using python scripts Used the Django Framework to develop the application Wrote scripts in Python for automation of testing jobs Modified multithreaded C programs to process data used STL containers algorithms various data structures and design patterns in software design Involved in Developing a RESTful service using Python Flask framework Deployment and Build on various environments including Linux and UNIX Created complex dynamic HTML UI using jQuery Developed an analytics system using Memcached Cassandra Performed Python scripting using the pyodbc module to select daily xlsx files and then to read and connect those files onto Access From there data would be filtered and manipulated to be appended onto a master inventory table Compared leases using innerouter joins that are active to our total lease database to ensure data integrity and validity Developed several Python administrative scripts to automate project deployment process Implemented the unit test cases and mentored junior developers Participated in code reviews and implemented Pythonic best practices Acted as a scrum master and conducted the retrospectives planning meetings resolved the impediments planned the releases with the team with the product owners Experience in using Git GitHub and Amazon EC2 and deployment using Heroku Environment Python Django Flask UML Rational Rose C Design Patterns SVN HTML CSS AJAX Angularjs JSON Restful XML JavaScript OOAOOD Shell Scripting Git GitHub MYSQL Python Developer Progressive Insurance Mayfield Village OH October 2013 to December 2014 Progressive Auto Insurance portal provides ability for end customersusers to request a quote provide quote details purchase auto insurance and payment of insurance amount This platform is built using a Struts framework in the presentation layer The back end functionality is built using Oracle as data persistence layer and Hibernate as data access layer Responsibilities Worked on the project from gather requirement developing the entire application with help from other analyst Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Use of Python Frameworks for data analysis including Sqlalchemy Designed and created backend data access modules using PLSQL stored procedures and Oracle 9i Created database access layer using JDBC and PLSQL stored procedures Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Used HTML CSS JQuery JSON and JavaScript for front end applications Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Worked in an agile development environment Environment Python Django JSON HTML CSS AJAX JQuery Bootstrap AWS XML SOAP GitHub Jira Agile SQL PLSQL MYSQL Oracle and Windows Software Engineer Bank of America Charlotte NC July 2011 to September 2013 BOA is one of the leading companies in the US which deals in a range of financial services ie Housing Loan Mortgage and Credit Cards etc Accounts Receivable System holds the demographic financial and historical information for each account Other modules needing that information obtain it from AR System eliminating record duplication The project Involves the development of the Automatic Clearing House system Electronic fund Transfer to facilitate faster and better recovery of Accounts Receivable Responsibilities Designed and developed usecase diagrams class diagrams and object diagrams using UML Rational Rose for OOAOOD techniques Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Performed testing using Djangos Test Module Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Involved in writing application level code to interact with APIs Web Services using JSON Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python Django Java MySQL HTML XHTML CSS AJAX JSON JavaScript Apache Web Server Linux Education Bachelors Skills Python 34 Django Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins Git GitHub Linux PyCharm 8 years Additional Information Technical Skills Languages Python CC ASPNET Shell Scripts Java SQL TSQL PLSQL HTML CSS JavaScript jQuery Web Technologies HTML CSS DOM JavaScript XML KML AJAX JQuery JSON Web Frameworks Django Pyramid Flask Webapp2 AngularJS Databases MySQL MSSQL Oracle 8i 9i 10 g 11 g MongoDB Operating Systems Servers UNIXLinux Ubuntu Windows Apache Tomcat Utilities Git SVN MS Visio MS Office Methodologies Waterfall Spiral Agile",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Senior",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Senior",
        "Python",
        "Developer",
        "American",
        "Express",
        "Phoenix",
        "AZ",
        "years",
        "IT",
        "experience",
        "analysis",
        "design",
        "development",
        "testing",
        "maintenance",
        "applications",
        "technologies",
        "Hands",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "web",
        "application",
        "frameworks",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "background",
        "ObjectOriented",
        "analysis",
        "end",
        "end",
        "framework",
        "Design",
        "Patterns",
        "Working",
        "knowledge",
        "environment",
        "OOAD",
        "concepts",
        "understanding",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "expertise",
        "development",
        "web",
        "applications",
        "Python",
        "Java",
        "HTML",
        "XML",
        "KML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "Angular",
        "JS",
        "jQuery",
        "Working",
        "knowledge",
        "Python",
        "ORM",
        "libraries",
        "Django",
        "ORM",
        "SQL",
        "Alchemy",
        "Experience",
        "applications",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "clouds",
        "VPCs",
        "Storage",
        "models",
        "EBS",
        "S3",
        "instance",
        "storage",
        "Elastic",
        "Load",
        "balancer",
        "Strong",
        "development",
        "experience",
        "Linux",
        "operating",
        "systems",
        "Debain",
        "CentOS",
        "RedHat",
        "Ubuntu",
        "Proficiency",
        "SQL",
        "TSQL",
        "PLSQL",
        "programming",
        "tables",
        "view",
        "functions",
        "procedures",
        "databases",
        "MySQL",
        "MSSQL",
        "Oracle",
        "NoSQL",
        "technologies",
        "Cassandra",
        "Mongo",
        "DB",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "IDE",
        "NetBeans",
        "PyCharm",
        "Eclipse",
        "Visual",
        "Studio",
        "Experience",
        "version",
        "control",
        "systems",
        "SVN",
        "CVS",
        "Git",
        "Knowledge",
        "deployment",
        "Heroku",
        "Jenkins",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Senior",
        "Python",
        "Developer",
        "American",
        "Express",
        "Phoenix",
        "AZ",
        "January",
        "goal",
        "project",
        "web",
        "application",
        "saving",
        "results",
        "application",
        "customer",
        "information",
        "access",
        "Transaction",
        "manner",
        "Responsibilities",
        "stages",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Planning",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Framework",
        "web",
        "applications",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "HTML",
        "Python",
        "framework",
        "Django",
        "Django",
        "APIs",
        "database",
        "Developed",
        "Views",
        "Templates",
        "Python",
        "Website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "Bootstrap",
        "JSON",
        "SQL",
        "procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "Conversions",
        "Created",
        "Django",
        "dashboard",
        "custom",
        "look",
        "end",
        "user",
        "study",
        "Django",
        "admin",
        "site",
        "dashboard",
        "Python",
        "Unit",
        "test",
        "library",
        "purpose",
        "programs",
        "Python",
        "codes",
        "manipulation",
        "data",
        "database",
        "queries",
        "SQL",
        "database",
        "MySQL",
        "AJAX",
        "interactivity",
        "end",
        "user",
        "navigation",
        "AJAX",
        "Web",
        "Services",
        "data",
        "transportation",
        "systems",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "Scrapping",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "Git",
        "repository",
        "Git",
        "Hub",
        "application",
        "Linux",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "Java",
        "Script",
        "HTML",
        "JS",
        "JQuery",
        "JSON",
        "AJAX",
        "XML",
        "CSS",
        "SQL",
        "MySQL",
        "Bootstrap",
        "Restful",
        "Web",
        "Services",
        "Beautiful",
        "Soup",
        "Jenkins",
        "Git",
        "GitHub",
        "Linux",
        "PyCharm",
        "Senior",
        "Python",
        "Developer",
        "Caterpillar",
        "Inc",
        "Peoria",
        "IL",
        "January",
        "December",
        "goal",
        "project",
        "finance",
        "organization",
        "budget",
        "forecast",
        "reporting",
        "Python",
        "web",
        "apps",
        "Stack",
        "developer",
        "custom",
        "web",
        "application",
        "Django",
        "Amazon",
        "web",
        "service",
        "REST",
        "Json",
        "JavaScript",
        "JQuery",
        "AJAX",
        "components",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "application",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "content",
        "files",
        "scripts",
        "Django",
        "Framework",
        "application",
        "scripts",
        "Python",
        "automation",
        "testing",
        "jobs",
        "Modified",
        "C",
        "programs",
        "data",
        "STL",
        "containers",
        "data",
        "structures",
        "design",
        "patterns",
        "software",
        "design",
        "service",
        "Python",
        "Flask",
        "framework",
        "Deployment",
        "Build",
        "environments",
        "Linux",
        "UNIX",
        "HTML",
        "UI",
        "jQuery",
        "analytics",
        "system",
        "Memcached",
        "Cassandra",
        "Performed",
        "Python",
        "scripting",
        "pyodbc",
        "module",
        "xlsx",
        "files",
        "files",
        "Access",
        "data",
        "master",
        "inventory",
        "table",
        "leases",
        "joins",
        "lease",
        "database",
        "data",
        "integrity",
        "validity",
        "Python",
        "scripts",
        "project",
        "deployment",
        "process",
        "unit",
        "test",
        "cases",
        "developers",
        "code",
        "reviews",
        "practices",
        "scrum",
        "master",
        "retrospectives",
        "planning",
        "meetings",
        "impediments",
        "releases",
        "team",
        "product",
        "owners",
        "Experience",
        "Git",
        "GitHub",
        "Amazon",
        "EC2",
        "deployment",
        "Heroku",
        "Environment",
        "Python",
        "Django",
        "Flask",
        "UML",
        "Rational",
        "Rose",
        "C",
        "Design",
        "Patterns",
        "SVN",
        "HTML",
        "CSS",
        "AJAX",
        "Angularjs",
        "JSON",
        "Restful",
        "XML",
        "JavaScript",
        "Shell",
        "Scripting",
        "Git",
        "GitHub",
        "MYSQL",
        "Python",
        "Developer",
        "Progressive",
        "Insurance",
        "Mayfield",
        "Village",
        "OH",
        "October",
        "December",
        "Progressive",
        "Auto",
        "Insurance",
        "portal",
        "ability",
        "end",
        "customersusers",
        "quote",
        "details",
        "auto",
        "insurance",
        "payment",
        "insurance",
        "amount",
        "platform",
        "Struts",
        "framework",
        "presentation",
        "layer",
        "end",
        "functionality",
        "Oracle",
        "data",
        "persistence",
        "layer",
        "Hibernate",
        "data",
        "access",
        "layer",
        "Responsibilities",
        "project",
        "gather",
        "requirement",
        "application",
        "help",
        "analyst",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Use",
        "Python",
        "Frameworks",
        "data",
        "analysis",
        "Sqlalchemy",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "9i",
        "database",
        "access",
        "layer",
        "JDBC",
        "procedures",
        "object",
        "model",
        "data",
        "model",
        "tables",
        "constraints",
        "procedures",
        "functions",
        "triggers",
        "packages",
        "Oracle",
        "Database",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "JavaScript",
        "end",
        "applications",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "development",
        "environment",
        "Environment",
        "Python",
        "Django",
        "JSON",
        "HTML",
        "CSS",
        "AJAX",
        "JQuery",
        "Bootstrap",
        "AWS",
        "XML",
        "SOAP",
        "GitHub",
        "Jira",
        "Agile",
        "SQL",
        "PLSQL",
        "MYSQL",
        "Oracle",
        "Windows",
        "Software",
        "Engineer",
        "Bank",
        "America",
        "Charlotte",
        "NC",
        "July",
        "September",
        "BOA",
        "companies",
        "US",
        "range",
        "services",
        "Housing",
        "Loan",
        "Mortgage",
        "Credit",
        "Cards",
        "Accounts",
        "Receivable",
        "System",
        "information",
        "account",
        "modules",
        "information",
        "AR",
        "System",
        "record",
        "duplication",
        "project",
        "development",
        "Automatic",
        "Clearing",
        "House",
        "system",
        "fund",
        "Transfer",
        "recovery",
        "Accounts",
        "Receivable",
        "Responsibilities",
        "diagrams",
        "class",
        "diagrams",
        "object",
        "diagrams",
        "UML",
        "Rational",
        "Rose",
        "techniques",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "Python",
        "Responsible",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "client",
        "side",
        "validation",
        "JavaScript",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "AJAX",
        "application",
        "web",
        "servicesAPI",
        "response",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "Environment",
        "Python",
        "Django",
        "Java",
        "MySQL",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JSON",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Linux",
        "Education",
        "Bachelors",
        "Skills",
        "Python",
        "Django",
        "Java",
        "Script",
        "HTML",
        "JS",
        "JQuery",
        "JSON",
        "AJAX",
        "XML",
        "CSS",
        "SQL",
        "MySQL",
        "Bootstrap",
        "Restful",
        "Web",
        "Services",
        "Beautiful",
        "Soup",
        "Jenkins",
        "Git",
        "GitHub",
        "Linux",
        "PyCharm",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Languages",
        "Python",
        "CC",
        "ASPNET",
        "Shell",
        "Scripts",
        "Java",
        "SQL",
        "TSQL",
        "PLSQL",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "DOM",
        "JavaScript",
        "XML",
        "KML",
        "JQuery",
        "JSON",
        "Web",
        "Frameworks",
        "Django",
        "Pyramid",
        "Flask",
        "Webapp2",
        "AngularJS",
        "MySQL",
        "MSSQL",
        "Oracle",
        "9i",
        "g",
        "g",
        "MongoDB",
        "Operating",
        "Systems",
        "Servers",
        "UNIXLinux",
        "Ubuntu",
        "Apache",
        "Tomcat",
        "Utilities",
        "Git",
        "SVN",
        "MS",
        "Visio",
        "MS",
        "Office",
        "Methodologies",
        "Waterfall",
        "Spiral",
        "Agile"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:51:41.347597",
    "resume_data": "Senior Python Developer Senior span lPythonspan span lDeveloperspan Senior Python Developer American Express Phoenix AZ 8 years of IT experience in analysis design development testing maintenance and applications using various technologies Hands on experience in developing web applications implementing Model View Control architecture using Django Flask web application frameworks Developed web applications RESTful web services and APIs using Python Flask Django good knowledge of web services with protocols SOAP REST Solid background in ObjectOriented analysis in developing front end and back end framework using various Design Patterns Working knowledge in multitiered distributed environment OOAD concepts good understanding of Software Development Lifecycle SDLC Strong expertise in development of web based applications using Python Java HTML XML KML CSS DHTML JavaScript JSON Angular JS and jQuery Working knowledge of Python ORM libraries including Django ORM SQL Alchemy Experience in developing applications using Amazon Web Services like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load balancer ELBs Strong development experience on Linux based operating systems Debain CentOS RedHat Ubuntu Proficiency in writing SQL queries TSQL PLSQL programming tables view functions triggers stored procedures using relational databases like MySQL MSSQL Oracle Experienced in NoSQL technologies like Cassandra Mongo DB Experienced in working with various Python Integrated Development Environments IDE like NetBeans PyCharm Eclipse Visual Studio Experience in using various version control systems like SVN CVS Git Knowledge in working with continuous deployment using Heroku and Jenkins Authorized to work in the US for any employer Work Experience Senior Python Developer American Express Phoenix AZ January 2018 to Present The main goal of the project was to create web based application that lets you electronically tests and view the saving results Also application supports customer information and provides quick access to the Transaction for easier and efficient manner Responsibilities Participated in all stages of Software Development Life Cycle like Planning Analysis Design Implementation and Testing Model View Control architecture is implemented using Django Framework to develop web applications Implemented Business logic worked on data exchange processed XML and HTML using Python 34 and its familiar framework Django Worked on Django APIs for accessing the database Developed Views and Templates with Python and Website interface is created using Djangos view controller and template Designed and Developed User Interface using frontend technologies like HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Used SQL stored procedures and UNIX Shell Scripts for importingexporting Data and Conversions Created Django dashboard with custom look and feel for end user after a careful study of Django admin site and dashboard Python Unit test library was used for the purpose of testing many programs on Python and other codes For the manipulation of data from the database various queries using SQL were written and created a database using MySQL Used AJAX for Better interactivity for the end user and easier navigation and AJAX is compact Implemented RESTful Web Services for the data transportation between multiple systems Used Python Library Beautiful Soup for web Scrapping Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Created Git repository and added to Git Hub project An application was developed in Linux environment and dealt with all of its commands Environment Python 34 Django Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins Git GitHub Linux PyCharm Senior Python Developer Caterpillar Inc Peoria IL January 2015 to December 2017 The main goal of the project was to support the finance organization for budget forecast and reporting using Python based web apps Responsibilities Full Stack developer created a custom web application using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components Created database Model APIs and Views utilizing Python in order to build an interactive web based application Used Python to place data into JSON files for testing Django Websites Updated and manipulated content and files by using python scripts Used the Django Framework to develop the application Wrote scripts in Python for automation of testing jobs Modified multithreaded C programs to process data used STL containers algorithms various data structures and design patterns in software design Involved in Developing a RESTful service using Python Flask framework Deployment and Build on various environments including Linux and UNIX Created complex dynamic HTML UI using jQuery Developed an analytics system using Memcached Cassandra Performed Python scripting using the pyodbc module to select daily xlsx files and then to read and connect those files onto Access From there data would be filtered and manipulated to be appended onto a master inventory table Compared leases using innerouter joins that are active to our total lease database to ensure data integrity and validity Developed several Python administrative scripts to automate project deployment process Implemented the unit test cases and mentored junior developers Participated in code reviews and implemented Pythonic best practices Acted as a scrum master and conducted the retrospectives planning meetings resolved the impediments planned the releases with the team with the product owners Experience in using Git GitHub and Amazon EC2 and deployment using Heroku Environment Python Django Flask UML Rational Rose C Design Patterns SVN HTML CSS AJAX Angularjs JSON Restful XML JavaScript OOAOOD Shell Scripting Git GitHub MYSQL Python Developer Progressive Insurance Mayfield Village OH October 2013 to December 2014 Progressive Auto Insurance portal provides ability for end customersusers to request a quote provide quote details purchase auto insurance and payment of insurance amount This platform is built using a Struts framework in the presentation layer The back end functionality is built using Oracle as data persistence layer and Hibernate as data access layer Responsibilities Worked on the project from gather requirement developing the entire application with help from other analyst Used Django configuration to manage URLs and application parameters Generated Python Django Forms to record data of online users Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Used Django configuration to manage URLs and application parameters Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Use of Python Frameworks for data analysis including Sqlalchemy Designed and created backend data access modules using PLSQL stored procedures and Oracle 9i Created database access layer using JDBC and PLSQL stored procedures Designed object model data model tables constraints necessary stored procedures functions triggers and packages for Oracle Database Used HTML CSS JQuery JSON and JavaScript for front end applications Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Worked in an agile development environment Environment Python Django JSON HTML CSS AJAX JQuery Bootstrap AWS XML SOAP GitHub Jira Agile SQL PLSQL MYSQL Oracle and Windows Software Engineer Bank of America Charlotte NC July 2011 to September 2013 BOA is one of the leading companies in the US which deals in a range of financial services ie Housing Loan Mortgage and Credit Cards etc Accounts Receivable System holds the demographic financial and historical information for each account Other modules needing that information obtain it from AR System eliminating record duplication The project Involves the development of the Automatic Clearing House system Electronic fund Transfer to facilitate faster and better recovery of Accounts Receivable Responsibilities Designed and developed usecase diagrams class diagrams and object diagrams using UML Rational Rose for OOAOOD techniques Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using Python Responsible for search engine optimization to improve the visibility of the website Handled all the client side validation using JavaScript Performed testing using Djangos Test Module Involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Involved in writing application level code to interact with APIs Web Services using JSON Creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Environment Python Django Java MySQL HTML XHTML CSS AJAX JSON JavaScript Apache Web Server Linux Education Bachelors Skills Python 34 Django Java Script HTML Angular JS JQuery JSON AJAX XML CSS SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins Git GitHub Linux PyCharm 8 years Additional Information Technical Skills Languages Python CC ASPNET Shell Scripts Java SQL TSQL PLSQL HTML CSS JavaScript jQuery Web Technologies HTML CSS DOM JavaScript XML KML AJAX JQuery JSON Web Frameworks Django Pyramid Flask Webapp2 AngularJS Databases MySQL MSSQL Oracle 8i 9i 10g 11g MongoDB Operating Systems Servers UNIXLinux Ubuntu Windows Apache Tomcat Utilities Git SVN MS Visio MS Office Methodologies Waterfall Spiral Agile",
    "unique_id": "3d5d2446-9eb1-4e39-9d06-1e6b37194694"
}