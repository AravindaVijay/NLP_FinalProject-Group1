{
    "clean_data": "Angular2 Python Django Developer Angular2 span lPythonspan Django span lDeveloperspan Angular2 Python Django Developer New York City Environmental Protection DEP Upper Marlboro MD 5 years of experience as Python Developer with proficiency in Analysis Design and Testing Enterprise applications using Python Django framework Flask Django Rest Framework Nodejs and Expressjs and frontend technologies like HTML5 CSS3 XML JavaScript Bootstrap jQuery AJAX Angular 2 AngularJS Experience with Angular JS to create responsive web applications with reusable and readable code Extensive experience using and creating REST APIs using Django Rest Framework and NodeJS with Express Handson experience on Bootstrap to create userfriendly web pages with visual impact Experience in track tasks progress and bugs using workflow management tools like Jira and Rally Experience with the AGILE software development process as well as participating in scrum calls and developing in sprints Extensive knowledge of building single page applications SPA using HTML CSS JavaScript Angular Bootstrap with Python development Experience in developing WebApplications implementing Model Template View architecture using Python and Django web application framework Strong experience setting up and working with operations inside Oracle SQL Microsoft SQL PostgreSQL mySQL and MongoDB Experienced in using Versioning tools like Git and GitHub to maintain current and historical versions of files such as source code web pages and documentation Hands on experience in developing and implementing REST and SOAP Web Services Experience in gathering data from websites using python web scraping packages such as Beautiful Soup Scrapy and Request Experience in using OpenCV and googles Tesseract OCR to implement an image recognition feature to web or mobile applications Experienced in Object Oriented Design Programming concepts and unit testing using Pythons unittest library Jasmine and Karma Experience in deployment of web application using AWS Elastic Beanstalk Understanding of machine learning libraries such as SciKitlearn TensorFlow Numpy Scipy and Pandas Authorized to work in the US for any employer Work Experience Angular2 Python Django Developer New York City Environmental Protection DEP New York NY January 2018 to Present The New York City Department of Environmental Protection DEP protects public health and the environment by supplying clean drinking water collecting and treating wastewater and reducing air noise and hazardous materials pollution The goal of the project was to deliver a web application that allows the different DEP bureaus to interact with their data and general environmental public consumer data with a simple but effective UI The application consumes a Bulk Data Extract API that is connected to a database containing meter readings from a citywide fixednetwork type Automated Meter Infrastructure AMI system My role was to implement the water module of the web application The module consisted of keeping track of the average water usage of all DEP customers and visualize that data with graphs and charts on a user interface by consuming the Bulk Data Extract API that DEP makes available to the public Responsibilities Involved in all phases of SDLC Software Development Life Cycle including Gathering Data UI Design Analysis of DEPs customer water usage Development and Deployment of the Application Developed and consumed RESTful Web Services using Django and Angular Developed validations using Validation Form and Reactive Form from Angular 2 to achieve client side validation Used Pipes from Angular 2 for filtering the data from server before displaying it in the UI Visualized data using python libraries such as matplotlib numpy and pandas Extracted data by consuming the Bulk Data Extract API with the Angular2 client side application Managed the Web API using django models views and admin interface Used HTML5 CSS3 and Bootstrap to create a comfortable interface Implemented Routing in Single Page Application using Angular Router Module Designed and Developed SQL database structure with Django Framework using agile methodology Utilized JIRA to track bugs and interact with Quality Assurance Excel and VBA to automate the gathering of data available only on excel format Django Rest Framework for the creation of data endpoints not available on DEPs API Tested API integrity to ensure proper functionality using Postman Used Git source control to manage project Environment Django REST Framework DRF MongoDB HTML5 CSS3 Bootstrap Atom Postman Python Unittest Excel VBA Pycharm Django Angular2 Express Git Postman Angular JS Full Stack Developer Amtrak Washington DC October 2016 to December 2017 The National Railroad Passenger Corporation doing business as Amtrak is a passenger railroad service that provides medium and longdistance intercity service in the contiguous United States and to three Canadian cities The goal of the project was to extend the functionality of the web application provided by Amtrak to allow users to plan ahead of time their schedules based on transit status The application consumes the Amtrak RealTime Data Feeds to be able to present to customers with bus schedules and railroad schedules The application presents this data on a map with different alert warnings based on the status of the given train line or bus line My role on this project was to maintain and add new features to this application such as creating new API endpoints using NodeJS and adding new client side features by consuming the API with AngularJS Examples of the functionality of this web application are ability to search bus and train stations to get details of delays in an interactive UI that follows User Experience principles to allow Amtraks transit customers to get the information they need without much hassle Responsibilities Involved in the various phases of the SDLC such as Requirements gathering Analysis Design and implementation of the project Designed and implemented application using AngularJS HTML5 Bootstrap CSS3 Node JS Express JS and MongoDB Responsible for creating interactive user interface with Bootstrap and HTML5 Utilized the AngularJS directives factory service and filters Created custom directives to reuse them across the controller Developed client side validation using Angular JS form validation Used Angular JS ngRoute and routeProvider to create single page applications Responsible in creating APIs using Node JS Express JS and consumed in the front end using Angular JS built in service http Used Mongoose as Object relational mapping for developing Model Schema and Database design Used Git source control to manage project Involved in debugging the applications monitored on JIRA using agile methodology Environment AngularJS HTML5 Bootstrap CSS3 Node JS Express JS MongoDB Bootstrap Mongoose JIRA Git Python Django Developer Comcast Philadelphia PA May 2014 to September 2016 Comcast Corporation is an American global telecommunications conglomerate headquartered in Philadelphia and Pennsylvania The project was to create and manage an internal content management and file sharing service for the different comcast branches to upload their data in order for that data to be cleaned and presented in an interface The main purpose of the interface was to display data for upper management to see during the last phase in their DSS Decision Support System My role in this project was to maintain and add new features to the interface UI which was already built using Django Some of the data shared by the different Comcast branches was only available by their API so I was also responsible of consuming that API to present the data accordingly on the UI Some available features and functionality on this application are drag and drop files ability to edit delete and create new files on the application Ability to share between internal Comcast branches and the ability to display clean presentable data on graphs tables and charts Responsibilities Responsible for creating welldesigned UI screens with Django templates using HTML5 CSS3 JavaScript Used JavaScript for client side validation using Regular Expressions Created entire application using Python Django Framework and MySQL Database Used Python and Django to interface with the JavaScript UI and manage the storage and deletion of content Developed a RESTful web services using Python and Django to retrieve and save data Used interaction and data presentation pages developed with HTML CSS and JavaScript Developed and tested features for UI dashboard using Python HTML Bootstrap and JavaScript Managed relational database applications with UI designing services and Django Framework Worked with various team members for necessary performance upgrades to client and server software Worked with other developers and project team during design and development phase to ensure built for testability Worked on JIRA tools for issue tracking reporting versions epics sprints etc Used GitHub version control system to collaborate with team members Worked on Deployment of web application using AWS server Environment Python Django MySQL REST HTML5 CSS3 Bootstrap JavaScript JQuery JSON Eclipse GitHub git jira postman JavaScript Python Django Developer MetroHealth Cleveland OH February 2013 to April 2014 The MetroHealth System is one of the biggest most complete social insurance suppliers in Northeast Ohio serving the medicinal needs of the Greater Cleveland community for about 170 years A webbased interface is displayed which permits the doctors to give proficient successful care to patients influenced with incessant illnesses Furthermore gives a health data administration programming which computerized basic capacities including report imaging and administration doctor inquiry diagram examination and finishing discharge data electronic medical record and so forth I worked on doctor inquiry module which provides a schedule and appointment reminder that helps doctors to schedule appointments with their patients and send appointment reminders to reduce noshows There is also a builtin messaging feature which allows doctors to communicate with their billers patients and employees Responsibilities Created and designed responsive web pages with Django framework and Django Templates Developed user interface using CSS HTML JavaScript and JQuery Used Git source control to track project development Assisted in the Advisor Portal application development using Django Web Framework and JavaScript Designed and wrote serverside web application logic developed back end templates and components to connect with third party applications using Django web framework Connected the database and the application server by using the Django Web Framework ORM Created a RESTful API server with Django REST API framework Developed Advisor Portal front end using ReactJS HTML5 and Bootstrap Managed SQL database with Django Framework ORM Environment Django REST Framework DRF PyMongo MongoDB Python Pandas HTML5 CSS3 BootStrap Atom Postman Python Unittest Pycharm Education Bachelor of Technology in Technology New York City College of Technology Skills HTML5 5 years DJANGO 4 years PYTHON 4 years REST 4 years JAVASCRIPT 3 years Additional Information SKILLS INTERESTS Programming Languages Python JavaScript VBA CSS3 HTML5 Java C Rust Golang Databases MySQL MongoDB Oracle PostgreSQL SQLite Web Developments NodeJS ExpressJS Django REST Framework Frameworks Django Flask AngularJS Angular 2 ExpressJS Django REST Framework Libraries jQuery Beautiful Soup Numpy OpenCV scikitlearn MongooseJS sqlalchemy Request Scrapy Tkinter Twisted matplotlib  threading unittest Tools Pycharm Atom MySQL WorkBench MongoDB Compass Postman Github Desktop CLI Eclipse IDE Sublime Text Microsoft Visual Studio Webstorm Servers Apache HTTP Amazon Web Services Microsoft Azure Microsoft Windows Server",
    "entities": [
        "Jasmine and Karma",
        "CSS HTML JavaScript",
        "Requirements gathering Analysis Design",
        "DSS",
        "Python Django Developer New York City Environmental Protection",
        "UI Visualized",
        "United States",
        "Bulk Data Extract API",
        "Philadelphia",
        "HTML CSS",
        "API",
        "Oracle SQL Microsoft",
        "US",
        "The MetroHealth System",
        "New York",
        "Present The New York City Department of Environmental Protection",
        "Environment Django REST Framework DRF MongoDB HTML5",
        "Amtraks",
        "Analysis Design and Testing Enterprise",
        "Node JS Express",
        "Comcast",
        "Advisor Portal",
        "the Django Web Framework ORM Created",
        "Created",
        "Python Django Framework",
        "Python HTML Bootstrap",
        "JavaScript",
        "Responsibilities Involved",
        "DEP Upper Marlboro",
        "AWS",
        "Automated Meter Infrastructure",
        "UI",
        "Express Handson",
        "HTML CSS JavaScript Angular Bootstrap",
        "Django Framework",
        "Python Developer",
        "Additional Information SKILLS INTERESTS Programming Languages Python",
        "Postman Used Git",
        "Worked on Deployment",
        "WebApplications",
        "Microsoft",
        "JQuery Used Git",
        "AWS Elastic Beanstalk Understanding",
        "Model Template View",
        "HTML5",
        "Pandas HTML5",
        "AGILE",
        "Quality Assurance Excel",
        "Responsibilities Responsible",
        "VBA",
        "SPA",
        "REST",
        "GitHub",
        "Amazon Web Services",
        "Validation Form and Reactive Form",
        "Pandas Authorized",
        "Bootstrap",
        "Used HTML5 CSS3",
        "SDLC",
        "Regular Expressions Created",
        "SciKitlearn",
        "Oracle PostgreSQL",
        "Amtrak",
        "Comcast Corporation",
        "Python Django Developer",
        "Responsibilities Created",
        "Compass Postman Github Desktop CLI",
        "The National Railroad Passenger Corporation",
        "Bootstrap Mongoose JIRA Git Python Django Developer Comcast Philadelphia",
        "IDE Sublime Text Microsoft Visual Studio Webstorm Servers Apache",
        "SDLC Software Development Life Cycle",
        "Greater Cleveland",
        "Angular JS",
        "Pennsylvania"
    ],
    "experience": "Experience with Angular JS to create responsive web applications with reusable and readable code Extensive experience using and creating REST APIs using Django Rest Framework and NodeJS with Express Handson experience on Bootstrap to create userfriendly web pages with visual impact Experience in track tasks progress and bugs using workflow management tools like Jira and Rally Experience with the AGILE software development process as well as participating in scrum calls and developing in sprints Extensive knowledge of building single page applications SPA using HTML CSS JavaScript Angular Bootstrap with Python development Experience in developing WebApplications implementing Model Template View architecture using Python and Django web application framework Strong experience setting up and working with operations inside Oracle SQL Microsoft SQL PostgreSQL mySQL and MongoDB Experienced in using Versioning tools like Git and GitHub to maintain current and historical versions of files such as source code web pages and documentation Hands on experience in developing and implementing REST and SOAP Web Services Experience in gathering data from websites using python web scraping packages such as Beautiful Soup Scrapy and Request Experience in using OpenCV and googles Tesseract OCR to implement an image recognition feature to web or mobile applications Experienced in Object Oriented Design Programming concepts and unit testing using Pythons unittest library Jasmine and Karma Experience in deployment of web application using AWS Elastic Beanstalk Understanding of machine learning libraries such as SciKitlearn TensorFlow Numpy Scipy and Pandas Authorized to work in the US for any employer Work Experience Angular2 Python Django Developer New York City Environmental Protection DEP New York NY January 2018 to Present The New York City Department of Environmental Protection DEP protects public health and the environment by supplying clean drinking water collecting and treating wastewater and reducing air noise and hazardous materials pollution The goal of the project was to deliver a web application that allows the different DEP bureaus to interact with their data and general environmental public consumer data with a simple but effective UI The application consumes a Bulk Data Extract API that is connected to a database containing meter readings from a citywide fixednetwork type Automated Meter Infrastructure AMI system My role was to implement the water module of the web application The module consisted of keeping track of the average water usage of all DEP customers and visualize that data with graphs and charts on a user interface by consuming the Bulk Data Extract API that DEP makes available to the public Responsibilities Involved in all phases of SDLC Software Development Life Cycle including Gathering Data UI Design Analysis of DEPs customer water usage Development and Deployment of the Application Developed and consumed RESTful Web Services using Django and Angular Developed validations using Validation Form and Reactive Form from Angular 2 to achieve client side validation Used Pipes from Angular 2 for filtering the data from server before displaying it in the UI Visualized data using python libraries such as matplotlib numpy and pandas Extracted data by consuming the Bulk Data Extract API with the Angular2 client side application Managed the Web API using django models views and admin interface Used HTML5 CSS3 and Bootstrap to create a comfortable interface Implemented Routing in Single Page Application using Angular Router Module Designed and Developed SQL database structure with Django Framework using agile methodology Utilized JIRA to track bugs and interact with Quality Assurance Excel and VBA to automate the gathering of data available only on excel format Django Rest Framework for the creation of data endpoints not available on DEPs API Tested API integrity to ensure proper functionality using Postman Used Git source control to manage project Environment Django REST Framework DRF MongoDB HTML5 CSS3 Bootstrap Atom Postman Python Unittest Excel VBA Pycharm Django Angular2 Express Git Postman Angular JS Full Stack Developer Amtrak Washington DC October 2016 to December 2017 The National Railroad Passenger Corporation doing business as Amtrak is a passenger railroad service that provides medium and longdistance intercity service in the contiguous United States and to three Canadian cities The goal of the project was to extend the functionality of the web application provided by Amtrak to allow users to plan ahead of time their schedules based on transit status The application consumes the Amtrak RealTime Data Feeds to be able to present to customers with bus schedules and railroad schedules The application presents this data on a map with different alert warnings based on the status of the given train line or bus line My role on this project was to maintain and add new features to this application such as creating new API endpoints using NodeJS and adding new client side features by consuming the API with AngularJS Examples of the functionality of this web application are ability to search bus and train stations to get details of delays in an interactive UI that follows User Experience principles to allow Amtraks transit customers to get the information they need without much hassle Responsibilities Involved in the various phases of the SDLC such as Requirements gathering Analysis Design and implementation of the project Designed and implemented application using AngularJS HTML5 Bootstrap CSS3 Node JS Express JS and MongoDB Responsible for creating interactive user interface with Bootstrap and HTML5 Utilized the AngularJS directives factory service and filters Created custom directives to reuse them across the controller Developed client side validation using Angular JS form validation Used Angular JS ngRoute and routeProvider to create single page applications Responsible in creating APIs using Node JS Express JS and consumed in the front end using Angular JS built in service http Used Mongoose as Object relational mapping for developing Model Schema and Database design Used Git source control to manage project Involved in debugging the applications monitored on JIRA using agile methodology Environment AngularJS HTML5 Bootstrap CSS3 Node JS Express JS MongoDB Bootstrap Mongoose JIRA Git Python Django Developer Comcast Philadelphia PA May 2014 to September 2016 Comcast Corporation is an American global telecommunications conglomerate headquartered in Philadelphia and Pennsylvania The project was to create and manage an internal content management and file sharing service for the different comcast branches to upload their data in order for that data to be cleaned and presented in an interface The main purpose of the interface was to display data for upper management to see during the last phase in their DSS Decision Support System My role in this project was to maintain and add new features to the interface UI which was already built using Django Some of the data shared by the different Comcast branches was only available by their API so I was also responsible of consuming that API to present the data accordingly on the UI Some available features and functionality on this application are drag and drop files ability to edit delete and create new files on the application Ability to share between internal Comcast branches and the ability to display clean presentable data on graphs tables and charts Responsibilities Responsible for creating welldesigned UI screens with Django templates using HTML5 CSS3 JavaScript Used JavaScript for client side validation using Regular Expressions Created entire application using Python Django Framework and MySQL Database Used Python and Django to interface with the JavaScript UI and manage the storage and deletion of content Developed a RESTful web services using Python and Django to retrieve and save data Used interaction and data presentation pages developed with HTML CSS and JavaScript Developed and tested features for UI dashboard using Python HTML Bootstrap and JavaScript Managed relational database applications with UI designing services and Django Framework Worked with various team members for necessary performance upgrades to client and server software Worked with other developers and project team during design and development phase to ensure built for testability Worked on JIRA tools for issue tracking reporting versions epics sprints etc Used GitHub version control system to collaborate with team members Worked on Deployment of web application using AWS server Environment Python Django MySQL REST HTML5 CSS3 Bootstrap JavaScript JQuery JSON Eclipse GitHub git jira postman JavaScript Python Django Developer MetroHealth Cleveland OH February 2013 to April 2014 The MetroHealth System is one of the biggest most complete social insurance suppliers in Northeast Ohio serving the medicinal needs of the Greater Cleveland community for about 170 years A webbased interface is displayed which permits the doctors to give proficient successful care to patients influenced with incessant illnesses Furthermore gives a health data administration programming which computerized basic capacities including report imaging and administration doctor inquiry diagram examination and finishing discharge data electronic medical record and so forth I worked on doctor inquiry module which provides a schedule and appointment reminder that helps doctors to schedule appointments with their patients and send appointment reminders to reduce noshows There is also a builtin messaging feature which allows doctors to communicate with their billers patients and employees Responsibilities Created and designed responsive web pages with Django framework and Django Templates Developed user interface using CSS HTML JavaScript and JQuery Used Git source control to track project development Assisted in the Advisor Portal application development using Django Web Framework and JavaScript Designed and wrote serverside web application logic developed back end templates and components to connect with third party applications using Django web framework Connected the database and the application server by using the Django Web Framework ORM Created a RESTful API server with Django REST API framework Developed Advisor Portal front end using ReactJS HTML5 and Bootstrap Managed SQL database with Django Framework ORM Environment Django REST Framework DRF PyMongo MongoDB Python Pandas HTML5 CSS3 BootStrap Atom Postman Python Unittest Pycharm Education Bachelor of Technology in Technology New York City College of Technology Skills HTML5 5 years DJANGO 4 years PYTHON 4 years REST 4 years JAVASCRIPT 3 years Additional Information SKILLS INTERESTS Programming Languages Python JavaScript VBA CSS3 HTML5 Java C Rust Golang Databases MySQL MongoDB Oracle PostgreSQL SQLite Web Developments NodeJS ExpressJS Django REST Framework Frameworks Django Flask AngularJS Angular 2 ExpressJS Django REST Framework Libraries jQuery Beautiful Soup Numpy OpenCV scikitlearn MongooseJS sqlalchemy Request Scrapy Tkinter Twisted matplotlib   threading unittest Tools Pycharm Atom MySQL WorkBench MongoDB Compass Postman Github Desktop CLI Eclipse IDE Sublime Text Microsoft Visual Studio Webstorm Servers Apache HTTP Amazon Web Services Microsoft Azure Microsoft Windows Server",
    "extracted_keywords": [
        "Angular2",
        "Python",
        "Django",
        "Developer",
        "Angular2",
        "lPythonspan",
        "Django",
        "span",
        "lDeveloperspan",
        "Python",
        "Django",
        "Developer",
        "New",
        "York",
        "City",
        "Environmental",
        "Protection",
        "DEP",
        "Upper",
        "Marlboro",
        "MD",
        "years",
        "experience",
        "Python",
        "Developer",
        "proficiency",
        "Analysis",
        "Design",
        "Testing",
        "Enterprise",
        "applications",
        "Python",
        "Django",
        "framework",
        "Flask",
        "Django",
        "Rest",
        "Framework",
        "Nodejs",
        "Expressjs",
        "technologies",
        "HTML5",
        "CSS3",
        "XML",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "AJAX",
        "Angular",
        "Experience",
        "JS",
        "web",
        "applications",
        "code",
        "experience",
        "REST",
        "APIs",
        "Django",
        "Rest",
        "Framework",
        "NodeJS",
        "Express",
        "Handson",
        "experience",
        "Bootstrap",
        "web",
        "pages",
        "impact",
        "Experience",
        "track",
        "tasks",
        "progress",
        "bugs",
        "workflow",
        "management",
        "tools",
        "Jira",
        "Rally",
        "Experience",
        "AGILE",
        "software",
        "development",
        "process",
        "scrum",
        "calls",
        "sprints",
        "knowledge",
        "page",
        "applications",
        "SPA",
        "HTML",
        "CSS",
        "JavaScript",
        "Angular",
        "Bootstrap",
        "Python",
        "development",
        "Experience",
        "WebApplications",
        "Model",
        "Template",
        "View",
        "architecture",
        "Python",
        "Django",
        "web",
        "application",
        "framework",
        "experience",
        "operations",
        "Oracle",
        "SQL",
        "Microsoft",
        "SQL",
        "PostgreSQL",
        "mySQL",
        "MongoDB",
        "Versioning",
        "tools",
        "Git",
        "GitHub",
        "versions",
        "files",
        "source",
        "code",
        "web",
        "pages",
        "documentation",
        "Hands",
        "experience",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "Experience",
        "data",
        "websites",
        "python",
        "web",
        "scraping",
        "packages",
        "Beautiful",
        "Soup",
        "Scrapy",
        "Request",
        "Experience",
        "googles",
        "Tesseract",
        "OCR",
        "image",
        "recognition",
        "feature",
        "web",
        "applications",
        "Object",
        "Oriented",
        "Design",
        "Programming",
        "concepts",
        "unit",
        "testing",
        "Pythons",
        "library",
        "Jasmine",
        "Karma",
        "Experience",
        "deployment",
        "web",
        "application",
        "AWS",
        "Beanstalk",
        "Understanding",
        "machine",
        "learning",
        "libraries",
        "SciKitlearn",
        "TensorFlow",
        "Numpy",
        "Scipy",
        "Pandas",
        "US",
        "employer",
        "Work",
        "Experience",
        "Angular2",
        "Python",
        "Django",
        "Developer",
        "New",
        "York",
        "City",
        "Environmental",
        "Protection",
        "DEP",
        "New",
        "York",
        "NY",
        "January",
        "Present",
        "New",
        "York",
        "City",
        "Department",
        "Environmental",
        "Protection",
        "DEP",
        "health",
        "environment",
        "drinking",
        "water",
        "wastewater",
        "air",
        "noise",
        "materials",
        "pollution",
        "goal",
        "project",
        "web",
        "application",
        "DEP",
        "bureaus",
        "data",
        "consumer",
        "data",
        "UI",
        "application",
        "Bulk",
        "Data",
        "Extract",
        "API",
        "database",
        "meter",
        "readings",
        "fixednetwork",
        "type",
        "Automated",
        "Meter",
        "Infrastructure",
        "AMI",
        "system",
        "role",
        "water",
        "module",
        "web",
        "application",
        "module",
        "track",
        "water",
        "usage",
        "DEP",
        "customers",
        "data",
        "graphs",
        "charts",
        "user",
        "interface",
        "Bulk",
        "Data",
        "Extract",
        "API",
        "DEP",
        "Responsibilities",
        "phases",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Data",
        "UI",
        "Design",
        "Analysis",
        "DEPs",
        "customer",
        "water",
        "usage",
        "Development",
        "Deployment",
        "Application",
        "Developed",
        "RESTful",
        "Web",
        "Services",
        "Django",
        "Angular",
        "Developed",
        "validations",
        "Validation",
        "Form",
        "Reactive",
        "Form",
        "Angular",
        "client",
        "side",
        "validation",
        "Pipes",
        "Angular",
        "data",
        "server",
        "UI",
        "data",
        "python",
        "libraries",
        "matplotlib",
        "numpy",
        "data",
        "Bulk",
        "Data",
        "Extract",
        "API",
        "Angular2",
        "client",
        "side",
        "application",
        "Web",
        "API",
        "django",
        "models",
        "views",
        "admin",
        "interface",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "interface",
        "Routing",
        "Single",
        "Page",
        "Application",
        "Angular",
        "Router",
        "Module",
        "Designed",
        "SQL",
        "database",
        "structure",
        "Django",
        "Framework",
        "methodology",
        "JIRA",
        "bugs",
        "Quality",
        "Assurance",
        "Excel",
        "VBA",
        "gathering",
        "data",
        "format",
        "Django",
        "Rest",
        "Framework",
        "creation",
        "data",
        "DEPs",
        "API",
        "API",
        "integrity",
        "functionality",
        "Postman",
        "Git",
        "source",
        "control",
        "project",
        "Environment",
        "Django",
        "REST",
        "Framework",
        "DRF",
        "MongoDB",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Atom",
        "Postman",
        "Python",
        "Unittest",
        "Excel",
        "VBA",
        "Pycharm",
        "Django",
        "Angular2",
        "Express",
        "Git",
        "Postman",
        "Angular",
        "JS",
        "Full",
        "Stack",
        "Developer",
        "Amtrak",
        "Washington",
        "DC",
        "October",
        "December",
        "National",
        "Railroad",
        "Passenger",
        "Corporation",
        "business",
        "Amtrak",
        "passenger",
        "railroad",
        "service",
        "longdistance",
        "service",
        "United",
        "States",
        "cities",
        "goal",
        "project",
        "functionality",
        "web",
        "application",
        "Amtrak",
        "users",
        "time",
        "schedules",
        "transit",
        "status",
        "application",
        "Amtrak",
        "RealTime",
        "Data",
        "customers",
        "bus",
        "schedules",
        "railroad",
        "schedules",
        "application",
        "data",
        "map",
        "warnings",
        "status",
        "train",
        "line",
        "bus",
        "line",
        "role",
        "project",
        "features",
        "application",
        "API",
        "endpoints",
        "NodeJS",
        "client",
        "side",
        "features",
        "API",
        "AngularJS",
        "Examples",
        "functionality",
        "web",
        "application",
        "ability",
        "bus",
        "train",
        "stations",
        "details",
        "delays",
        "UI",
        "User",
        "Experience",
        "principles",
        "Amtraks",
        "transit",
        "customers",
        "information",
        "hassle",
        "Responsibilities",
        "phases",
        "SDLC",
        "Requirements",
        "Analysis",
        "Design",
        "implementation",
        "project",
        "application",
        "HTML5",
        "Bootstrap",
        "CSS3",
        "Node",
        "JS",
        "Express",
        "JS",
        "MongoDB",
        "user",
        "interface",
        "Bootstrap",
        "HTML5",
        "directives",
        "factory",
        "service",
        "filters",
        "custom",
        "directives",
        "controller",
        "Developed",
        "client",
        "side",
        "validation",
        "JS",
        "form",
        "validation",
        "Angular",
        "JS",
        "ngRoute",
        "routeProvider",
        "page",
        "applications",
        "APIs",
        "Node",
        "JS",
        "Express",
        "JS",
        "end",
        "Angular",
        "JS",
        "service",
        "http",
        "Mongoose",
        "Object",
        "mapping",
        "Model",
        "Schema",
        "Database",
        "design",
        "Git",
        "source",
        "control",
        "project",
        "applications",
        "JIRA",
        "methodology",
        "Environment",
        "AngularJS",
        "HTML5",
        "Bootstrap",
        "CSS3",
        "Node",
        "JS",
        "Express",
        "JS",
        "Bootstrap",
        "Mongoose",
        "JIRA",
        "Git",
        "Python",
        "Django",
        "Developer",
        "Comcast",
        "Philadelphia",
        "PA",
        "May",
        "September",
        "Comcast",
        "Corporation",
        "telecommunications",
        "conglomerate",
        "Philadelphia",
        "Pennsylvania",
        "project",
        "content",
        "management",
        "sharing",
        "service",
        "comcast",
        "branches",
        "data",
        "order",
        "data",
        "interface",
        "purpose",
        "interface",
        "data",
        "management",
        "phase",
        "DSS",
        "Decision",
        "Support",
        "System",
        "role",
        "project",
        "features",
        "interface",
        "UI",
        "Django",
        "data",
        "Comcast",
        "branches",
        "API",
        "API",
        "data",
        "UI",
        "features",
        "functionality",
        "application",
        "files",
        "ability",
        "files",
        "application",
        "Ability",
        "Comcast",
        "branches",
        "ability",
        "data",
        "graphs",
        "tables",
        "charts",
        "Responsibilities",
        "UI",
        "screens",
        "Django",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JavaScript",
        "client",
        "side",
        "validation",
        "Regular",
        "Expressions",
        "application",
        "Python",
        "Django",
        "Framework",
        "MySQL",
        "Database",
        "Python",
        "Django",
        "JavaScript",
        "UI",
        "storage",
        "deletion",
        "content",
        "web",
        "services",
        "Python",
        "Django",
        "data",
        "interaction",
        "data",
        "presentation",
        "pages",
        "HTML",
        "CSS",
        "JavaScript",
        "Developed",
        "features",
        "UI",
        "dashboard",
        "Python",
        "HTML",
        "Bootstrap",
        "JavaScript",
        "Managed",
        "database",
        "applications",
        "UI",
        "designing",
        "services",
        "Django",
        "Framework",
        "team",
        "members",
        "performance",
        "upgrades",
        "client",
        "server",
        "software",
        "developers",
        "project",
        "team",
        "design",
        "development",
        "phase",
        "testability",
        "JIRA",
        "tools",
        "issue",
        "reporting",
        "versions",
        "epics",
        "sprints",
        "GitHub",
        "version",
        "control",
        "system",
        "team",
        "members",
        "Deployment",
        "web",
        "application",
        "AWS",
        "server",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "REST",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "JSON",
        "Eclipse",
        "GitHub",
        "git",
        "jira",
        "postman",
        "JavaScript",
        "Python",
        "Django",
        "Developer",
        "MetroHealth",
        "Cleveland",
        "OH",
        "February",
        "April",
        "MetroHealth",
        "System",
        "insurance",
        "suppliers",
        "Northeast",
        "Ohio",
        "needs",
        "Greater",
        "Cleveland",
        "community",
        "years",
        "interface",
        "doctors",
        "care",
        "patients",
        "illnesses",
        "health",
        "data",
        "administration",
        "programming",
        "capacities",
        "report",
        "imaging",
        "administration",
        "doctor",
        "inquiry",
        "diagram",
        "examination",
        "discharge",
        "data",
        "record",
        "doctor",
        "inquiry",
        "module",
        "schedule",
        "appointment",
        "reminder",
        "doctors",
        "appointments",
        "patients",
        "appointment",
        "reminders",
        "noshows",
        "feature",
        "doctors",
        "billers",
        "patients",
        "employees",
        "Responsibilities",
        "web",
        "pages",
        "Django",
        "framework",
        "Django",
        "Templates",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Git",
        "source",
        "control",
        "project",
        "development",
        "Assisted",
        "Advisor",
        "Portal",
        "application",
        "development",
        "Django",
        "Web",
        "Framework",
        "JavaScript",
        "serverside",
        "web",
        "application",
        "logic",
        "end",
        "templates",
        "components",
        "party",
        "applications",
        "Django",
        "web",
        "framework",
        "database",
        "application",
        "server",
        "Django",
        "Web",
        "Framework",
        "ORM",
        "API",
        "server",
        "Django",
        "REST",
        "API",
        "framework",
        "Developed",
        "Advisor",
        "Portal",
        "end",
        "ReactJS",
        "HTML5",
        "Bootstrap",
        "Managed",
        "SQL",
        "database",
        "Django",
        "Framework",
        "ORM",
        "Environment",
        "Django",
        "REST",
        "Framework",
        "DRF",
        "PyMongo",
        "MongoDB",
        "Python",
        "Pandas",
        "HTML5",
        "CSS3",
        "BootStrap",
        "Atom",
        "Postman",
        "Python",
        "Unittest",
        "Pycharm",
        "Education",
        "Bachelor",
        "Technology",
        "Technology",
        "New",
        "York",
        "City",
        "College",
        "Technology",
        "Skills",
        "HTML5",
        "years",
        "DJANGO",
        "years",
        "PYTHON",
        "years",
        "REST",
        "years",
        "JAVASCRIPT",
        "years",
        "Information",
        "SKILLS",
        "INTERESTS",
        "Programming",
        "Languages",
        "Python",
        "JavaScript",
        "VBA",
        "CSS3",
        "HTML5",
        "Java",
        "C",
        "Rust",
        "Golang",
        "MySQL",
        "MongoDB",
        "Oracle",
        "PostgreSQL",
        "SQLite",
        "Web",
        "Developments",
        "NodeJS",
        "ExpressJS",
        "Django",
        "REST",
        "Framework",
        "Frameworks",
        "Django",
        "Flask",
        "Angular",
        "ExpressJS",
        "Django",
        "REST",
        "Framework",
        "jQuery",
        "Beautiful",
        "Soup",
        "Numpy",
        "scikitlearn",
        "sqlalchemy",
        "Request",
        "Scrapy",
        "Tkinter",
        "Twisted",
        "matplotlib",
        "threading",
        "Tools",
        "Pycharm",
        "Atom",
        "MySQL",
        "WorkBench",
        "Compass",
        "Postman",
        "Github",
        "Desktop",
        "CLI",
        "Eclipse",
        "IDE",
        "Sublime",
        "Text",
        "Microsoft",
        "Visual",
        "Studio",
        "Webstorm",
        "Servers",
        "Apache",
        "HTTP",
        "Amazon",
        "Web",
        "Services",
        "Microsoft",
        "Azure",
        "Microsoft",
        "Windows",
        "Server"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:35:27.073422",
    "resume_data": "Angular2 Python Django Developer Angular2 span lPythonspan Django span lDeveloperspan Angular2 Python Django Developer New York City Environmental Protection DEP Upper Marlboro MD 5 years of experience as Python Developer with proficiency in Analysis Design and Testing Enterprise applications using Python Django framework Flask Django Rest Framework Nodejs and Expressjs and frontend technologies like HTML5 CSS3 XML JavaScript Bootstrap jQuery AJAX Angular 2 AngularJS Experience with Angular JS to create responsive web applications with reusable and readable code Extensive experience using and creating REST APIs using Django Rest Framework and NodeJS with Express Handson experience on Bootstrap to create userfriendly web pages with visual impact Experience in track tasks progress and bugs using workflow management tools like Jira and Rally Experience with the AGILE software development process as well as participating in scrum calls and developing in sprints Extensive knowledge of building single page applications SPA using HTML CSS JavaScript Angular Bootstrap with Python development Experience in developing WebApplications implementing Model Template View architecture using Python and Django web application framework Strong experience setting up and working with operations inside Oracle SQL Microsoft SQL PostgreSQL mySQL and MongoDB Experienced in using Versioning tools like Git and GitHub to maintain current and historical versions of files such as source code web pages and documentation Hands on experience in developing and implementing REST and SOAP Web Services Experience in gathering data from websites using python web scraping packages such as Beautiful Soup Scrapy and Request Experience in using OpenCV and googles Tesseract OCR to implement an image recognition feature to web or mobile applications Experienced in Object Oriented Design Programming concepts and unit testing using Pythons unittest library Jasmine and Karma Experience in deployment of web application using AWS Elastic Beanstalk Understanding of machine learning libraries such as SciKitlearn TensorFlow Numpy Scipy and Pandas Authorized to work in the US for any employer Work Experience Angular2 Python Django Developer New York City Environmental Protection DEP New York NY January 2018 to Present The New York City Department of Environmental Protection DEP protects public health and the environment by supplying clean drinking water collecting and treating wastewater and reducing air noise and hazardous materials pollution The goal of the project was to deliver a web application that allows the different DEP bureaus to interact with their data and general environmental public consumer data with a simple but effective UI The application consumes a Bulk Data Extract API that is connected to a database containing meter readings from a citywide fixednetwork type Automated Meter Infrastructure AMI system My role was to implement the water module of the web application The module consisted of keeping track of the average water usage of all DEP customers and visualize that data with graphs and charts on a user interface by consuming the Bulk Data Extract API that DEP makes available to the public Responsibilities Involved in all phases of SDLC Software Development Life Cycle including Gathering Data UI Design Analysis of DEPs customer water usage Development and Deployment of the Application Developed and consumed RESTful Web Services using Django and Angular Developed validations using Validation Form and Reactive Form from Angular 2 to achieve client side validation Used Pipes from Angular 2 for filtering the data from server before displaying it in the UI Visualized data using python libraries such as matplotlib numpy and pandas Extracted data by consuming the Bulk Data Extract API with the Angular2 client side application Managed the Web API using django models views and admin interface Used HTML5 CSS3 and Bootstrap to create a comfortable interface Implemented Routing in Single Page Application using Angular Router Module Designed and Developed SQL database structure with Django Framework using agile methodology Utilized JIRA to track bugs and interact with Quality Assurance Excel and VBA to automate the gathering of data available only on excel format Django Rest Framework for the creation of data endpoints not available on DEPs API Tested API integrity to ensure proper functionality using Postman Used Git source control to manage project Environment Django REST Framework DRF MongoDB HTML5 CSS3 Bootstrap Atom Postman Python Unittest Excel VBA Pycharm Django Angular2 Express Git Postman Angular JS Full Stack Developer Amtrak Washington DC October 2016 to December 2017 The National Railroad Passenger Corporation doing business as Amtrak is a passenger railroad service that provides medium and longdistance intercity service in the contiguous United States and to three Canadian cities The goal of the project was to extend the functionality of the web application provided by Amtrak to allow users to plan ahead of time their schedules based on transit status The application consumes the Amtrak RealTime Data Feeds to be able to present to customers with bus schedules and railroad schedules The application presents this data on a map with different alert warnings based on the status of the given train line or bus line My role on this project was to maintain and add new features to this application such as creating new API endpoints using NodeJS and adding new client side features by consuming the API with AngularJS Examples of the functionality of this web application are ability to search bus and train stations to get details of delays in an interactive UI that follows User Experience principles to allow Amtraks transit customers to get the information they need without much hassle Responsibilities Involved in the various phases of the SDLC such as Requirements gathering Analysis Design and implementation of the project Designed and implemented application using AngularJS HTML5 Bootstrap CSS3 Node JS Express JS and MongoDB Responsible for creating interactive user interface with Bootstrap and HTML5 Utilized the AngularJS directives factory service and filters Created custom directives to reuse them across the controller Developed client side validation using Angular JS form validation Used Angular JS ngRoute and routeProvider to create single page applications Responsible in creating APIs using Node JS Express JS and consumed in the front end using Angular JS built in service http Used Mongoose as Object relational mapping for developing Model Schema and Database design Used Git source control to manage project Involved in debugging the applications monitored on JIRA using agile methodology Environment AngularJS HTML5 Bootstrap CSS3 Node JS Express JS MongoDB Bootstrap Mongoose JIRA Git Python Django Developer Comcast Philadelphia PA May 2014 to September 2016 Comcast Corporation is an American global telecommunications conglomerate headquartered in Philadelphia and Pennsylvania The project was to create and manage an internal content management and file sharing service for the different comcast branches to upload their data in order for that data to be cleaned and presented in an interface The main purpose of the interface was to display data for upper management to see during the last phase in their DSS Decision Support System My role in this project was to maintain and add new features to the interface UI which was already built using Django Some of the data shared by the different Comcast branches was only available by their API so I was also responsible of consuming that API to present the data accordingly on the UI Some available features and functionality on this application are drag and drop files ability to edit delete and create new files on the application Ability to share between internal Comcast branches and the ability to display clean presentable data on graphs tables and charts Responsibilities Responsible for creating welldesigned UI screens with Django templates using HTML5 CSS3 JavaScript Used JavaScript for client side validation using Regular Expressions Created entire application using Python Django Framework and MySQL Database Used Python and Django to interface with the JavaScript UI and manage the storage and deletion of content Developed a RESTful web services using Python and Django to retrieve and save data Used interaction and data presentation pages developed with HTML CSS and JavaScript Developed and tested features for UI dashboard using Python HTML Bootstrap and JavaScript Managed relational database applications with UI designing services and Django Framework Worked with various team members for necessary performance upgrades to client and server software Worked with other developers and project team during design and development phase to ensure built for testability Worked on JIRA tools for issue tracking reporting versions epics sprints etc Used GitHub version control system to collaborate with team members Worked on Deployment of web application using AWS server Environment Python Django MySQL REST HTML5 CSS3 Bootstrap JavaScript JQuery JSON Eclipse GitHub git jira postman JavaScript Python Django Developer MetroHealth Cleveland OH February 2013 to April 2014 The MetroHealth System is one of the biggest most complete social insurance suppliers in Northeast Ohio serving the medicinal needs of the Greater Cleveland community for about 170 years A webbased interface is displayed which permits the doctors to give proficient successful care to patients influenced with incessant illnesses Furthermore gives a health data administration programming which computerized basic capacities including report imaging and administration doctor inquiry diagram examination and finishing discharge data electronic medical record and so forth I worked on doctor inquiry module which provides a schedule and appointment reminder that helps doctors to schedule appointments with their patients and send appointment reminders to reduce noshows There is also a builtin messaging feature which allows doctors to communicate with their billers patients and employees Responsibilities Created and designed responsive web pages with Django framework and Django Templates Developed user interface using CSS HTML JavaScript and JQuery Used Git source control to track project development Assisted in the Advisor Portal application development using Django Web Framework and JavaScript Designed and wrote serverside web application logic developed back end templates and components to connect with third party applications using Django web framework Connected the database and the application server by using the Django Web Framework ORM Created a RESTful API server with Django REST API framework Developed Advisor Portal front end using ReactJS HTML5 and Bootstrap Managed SQL database with Django Framework ORM Environment Django REST Framework DRF PyMongo MongoDB Python Pandas HTML5 CSS3 BootStrap Atom Postman Python Unittest Pycharm Education Bachelor of Technology in Technology New York City College of Technology Skills HTML5 5 years DJANGO 4 years PYTHON 4 years REST 4 years JAVASCRIPT 3 years Additional Information SKILLS INTERESTS Programming Languages Python JavaScript VBA CSS3 HTML5 Java C Rust Golang Databases MySQL MongoDB Oracle PostgreSQL SQLite Web Developments NodeJS ExpressJS Django REST Framework Frameworks Django Flask AngularJS Angular 2 ExpressJS Django REST Framework Libraries jQuery Beautiful Soup Numpy OpenCV scikitlearn MongooseJS sqlalchemy Request Scrapy Tkinter Twisted matplotlib scipy threading unittest Tools Pycharm Atom MySQL WorkBench MongoDB Compass Postman Github Desktop CLI Eclipse IDE Sublime Text Microsoft Visual Studio Webstorm Servers Apache HTTP Amazon Web Services Microsoft Azure Microsoft Windows Server",
    "unique_id": "33165bd0-073f-4114-bb46-81fabd0e961f"
}