{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer TD Bank Mount Laurel NJ Extensive 6 years of experience in design development testing and implementation of various standalone and clientserver architecture based enterprise application software using various technologies analyzing complex business requirements and mapping them to system specifications Good experience in developing web applications implementing Model View Controller architecture using Django web application framework Designed and implemented large scale business critical systems Experience in developing webbased applications using Python Django Developed web applications RESTful web services and APIs using Python Flask and Django Experience in implementing server side technologies with restful API and MVC design patterns in node JS and Django framework Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev Implemented different python libraries Beautiful Soup matplotlib numpy scipy pytables pythontwitter Pandas data frame Fabric and urllib2 in various tasks Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL DynamoDB and MySQL databases Experience on Web development using HTML5 CSSCSS3 JavaScript JQuery Angular JS AJAX XML and JSON by following W3C standards Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Route S3 Extensive development experience in Java Struts JSPs Servlets taglibs Hibernate JDBC HTML JavaScript SQL XML and JSON Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Most of the applications were developed with Python Django and PostgreSQL using Agile Methodology Good Experience in debugging the issues using pdb Proficient in developing multithreaded web services using CherryPy bottlePy framework Extensive experience in developing applications using Java API Swing HTML5 Flex JavaScript CSS JQuery JDBC JSF JMS XML Leveraging queueing architectures with Rabbit MQ for scalability performance and building Knowledge in working with continuous deployment using Heroku and Jenkins Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers Work Experience Sr Python Developer TD Bank Mount Laurel NJ August 2017 to Present Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Rewrite existing PythonFlask module to deliver certain format of data Created script in python for calling REST APIs Deployed Django web application in Apache webserver and Carpathia cloud web deployment Involved in designing user interactive web pages as the frontend part of the web application using various web technologies HTMLHTML5 CSSCSS3 JavaScript jQuery Node Js React JS DOM AJAX XML XHTML JSON SVG Bootstrap and Angular JS etc Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Install configure and troubleshoot Red Hat Enterprise Linux Wellversed in AWS Elastic Beanstalk for application deployments and operated on AWS lambda with Amazon kinesis Written various AWS Lambda services for Automating the process of taking EBS Snapshots every day in production environment on the cloud Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL db package to retrieve information Generated Python Django Forms to record data of online users Developed Wrapper in Python for instantiating multithreaded application Deployed and monitored scalable infrastructure on Amazon web services AWS Designed and managed API system deployment using fast http server and Amazon AWS architecture and automated AWS S3 data upload download using python scripts Implemented monitoring and established best practices around using elastic search Generated graphical reports using python package Numpy and MatplotLib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Deployed and administered many MySQL RDS instances PostgreSQL RDS instance and MSSQL database on EC2 server Used PostgreSQL for storing and retrieving JSON format data that need to be displayed on Google maps API Good knowledge in AngularJS and Responsive Design Designed and implemented a tool called netconf Network configuration which automatically configures network switches by parsing XML files Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Environment Python 27 Django 17 HTML5 CSS XML MySQL JavaScript JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Windows 12 Server Amazon S3 Jenkins Map Box GitHub Bit Bucket Linux and Windows Python Developer State Farm Insurance Bloomington IL January 2016 to July 2017 Responsibilities Developed Views and Templates using Djangos view controller and template language for the Web application Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Bootstrap JSON and ReactJs Developed custom directives elements Attributes and classes using Javascript and angularjs Used pandas to manipulate data and also to build various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web scraping to extract data for building graphs Expertise in performing Applied Statistics Exploratory Data Analysis and Data Visualization using tools like ggplot2 Tableau Developed a web application for developers to generate their own REST API calls in JAVA and Python Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Developed Application to access JSON from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services Used Restful APIs to access data from different suppliers Set up Unix server to support a TCPIP local net of windows XP clients Wrote a microservice to turn our main app into a SAML Service Provider so authentication could be handled by our clients systems Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in development of Java concepts like Collections Exception Handling MultiThreading Worked on MVC pattern using various frameworks Adopted agile methods for development delivery of the solution and participated in complete life cycle of the project SDLC Designed the Database written triggers and stored procedures Developed automation scripts to test storage appliances in Python Rewrite existing PythonDjango modules to deliver certain format of data Experience in developing scalable frontend user interfaces using HTML CSS Backbone and JavaScript JQuery AngularJS and Mongo DB Automation of the build process using Continuous Integration tools like Continuum and Jenkins Used Docker as a container service to migrate applications from cloud to the end user Created hybrid cloud by combining private cloud and public cloud using AWS Amazon web services and used it for public scaling Deployed Applications into nonproduction BETA production environments with various Application server technologies like WebLogic and Apache Tomcat Designing the web client by using HTML CSS JavaScript AJAX EXT JS and DOJO with JSON Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Environment Python Django MySQL JavaScript PyCharm Git ElasticSearch Flask Web2Py Linux Windows JSON JQuery HTML XML CSS REST JIRA Bootstrap AJAX AWS JavaScript MOCK Pandas Beautiful Soup Wireshark Flash URLlib Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef  PyTest PyChecker Selenium Python Developer NetApp Mountain View CA August 2014 to July 2015 Responsibilities Full Stack developer created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Maintained using PHPMySQL Used AWstat and Google Analytics to analyze web traffic Started developing with Python sdk Django Cand currently developing with Django Deployed production site using Apache 20 with mod_ python Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Using django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked using AJAX with jQuery Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Imported SSL certs from other hosts to new host and properly configured Apache to use certs Used Apache htaccess to provide authentication system for PHPMySQL sites Experience using mod_rewrite to create SEO friendly links Creating complex dynamic HTML UI using jQuery Deployed internal wiki PHP dokowiki and ticketing system Zope Python IssueTrackerProduct to help document and manage tasks Worked on JavaScript frame work to augment browser based applications with MVC capability Worked on frontend and backend application development Have upgraded additional functionalities and services with the use cases provided Involved in development of various controller classes as a part of MVC framework Worked in referential data service module to interface with various databases using JDBC Implemented REST and SOAP based web services and published using JAXWS Worked on Database Schemas HTML and XML services Worked on Oracle Database to store and retrieve information using SQL Developer Worked on Eclipse IDEs for build debugging and deploy it using Apache Tomcat Developed Build Script using MAVEN Involved in unit testing and run test cases Developed screens based on JQuery to dynamically generate HTML ad display data to the client side Written Struts services and DAOS in the service layer for SQL data retrieval operations using JDBC Demonstrated Experience and advocate for testdriven development Python and PHP web application development using the SQLAlchemy Involved in debugging the product using Eclipse and JIRA Bug Tracking Wrote Python scripts to parse XML documents and load the data in database Wrote and maintained application for day to day use for the company using Python and Django that store client data into database in json format Environment Python Django PyCharm JAVA Beautiful Soup PyTest PyQt Apache Cassandra HTML5 DOM CSS3 AJAX JSON JQuery SQLite PyQuery JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Pandas XML SQLAlchemy TSQL REST Linux GIT GitHub Python Scripting Engineer Genesis Solutions Pvt Ltd September 2012 to July 2014 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Written backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Developed consumer based features and applications using Python and Django in test driven Development Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Worked on changes to open stack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Creating invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks For the large data management used TFS and delivered reliable end product Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Worked on translation of web pages to different languages as per client requirements Updated the client admin tool to have the new features like support for internalization support for customer service etc Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions to match the pattern with the existing one Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Java Django HTML5 CSS3 XML JSON MySQL JavaScript Angular JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Skills DJANGO 5 years JENKINS 5 years JSON 5 years PYTHON 5 years XML 5 years Additional Information SKILL MATRIX Languages Python Java C Pearl SQL Frameworks Django web2py pyramid Flask Hibernate Struts pylons selenium Pyunit test and CSS Bootstrap Technologies HTML CSS Java Script JQuery AJAX XML Angular JS Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 Tableau HTMLCSS Bootstrap jQuery Pandas Numpy  Pickle PySide Scipy WxPython PyTables Pdb Json Version Control GIT GitHub SVN CVS Bitbucket Databases Oracle MySQL PostgreSQL MongoDB IDEs Development Tools Py Charm Sublime Text Matlab Eclipse Netbeans and visual studios Web Services AWS Rackspace Cloud Azure Microsoft Tomcat Operating Systems Windows Red hat Linux MAC OSX Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall",
    "entities": [
        "Flashvars",
        "Red Hat",
        "DAOS",
        "HTMLHTML5 CSSCSS3",
        "AJAX",
        "Test Driven Development TDD",
        "jQuery Deployed",
        "AWS Elastic Beanstalk",
        "wiki PHP dokowiki",
        "jQuery Worked",
        "JavaScript SQL XML",
        "Customer",
        "Agile Software Methodology",
        "HTML CSS JavaScript AJAX EXT JS",
        "Amazon SQS",
        "Present Responsibilities Involved",
        "Google",
        "MatplotLib Implemented",
        "Heroku",
        "Panda",
        "SNS Created",
        "TFS",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "SOAP",
        "CherryPy",
        "SQL Developer Worked on Eclipse",
        "WebLogic",
        "CSS Bootstrap Technologies",
        "node JS",
        "GitHub Bit Bucket",
        "Amazon",
        "Python",
        "Agile Methodology Good",
        "Pyunit",
        "Imported SSL",
        "Developed",
        "Jenkins",
        "CSS Bootstrap",
        "AWS S3",
        "the SQLAlchemy Involved",
        "EBS Snapshots",
        "GET PUT POST",
        "MAVEN Involved",
        "Django",
        "Laurel NJ",
        "Waterfall",
        "JQuery CSS Bootstrap Puppet",
        "HTML5",
        "Fabric",
        "Python Rewrite",
        "Oracle Database",
        "HTML UI",
        "HerokuJenkins",
        "MVC",
        "Front Route S3 Extensive",
        "PythonDjango",
        "GIT",
        "Python Worked",
        "Python Django and PostgreSQL",
        "Rabbit MQ",
        "CSS JavaScript",
        "Restful Web Service",
        "API",
        "Database",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "Created",
        "AWS",
        "Tableau HTMLCSS Bootstrap jQuery Pandas Numpy",
        "ELB",
        "Generated Python Django Forms",
        "Secured Web services",
        "Performed Unit",
        "Written Struts",
        "SQL",
        "ReactJs Developed",
        "lPythonspan",
        "Python Django",
        "Applied Statistics Exploratory Data Analysis",
        "DELETE",
        "XHTMLCSS Maintained",
        "the Flash Created PHPMySQL",
        "Developed Wrapper",
        "Rational Application Developer Most",
        "Integration Testing GUI",
        "Amazon AWS",
        "Product Management and User Experience",
        "Pandas",
        "JS Python Libraries",
        "SQLite",
        "Additional Information SKILL MATRIX Languages Python",
        "AWstat",
        "JAVA",
        "netconf Network",
        "Performed",
        "Development Successfully",
        "Djangos",
        "Developed Application",
        "JavaScript",
        "Developer TD Bank",
        "Google Analytics",
        "Templates",
        "Experienced",
        "HTML CSS Backbone",
        "Flask Hibernate Struts",
        "Django AWS Amazon",
        "PyCharm PyScripter Spyder PyStudio",
        "SQL Queries Stored",
        "CMS",
        "ggplot2 Tableau Developed",
        "REST",
        "PHP",
        "NoSQL",
        "Tableau",
        "Application",
        "PythonFlask",
        "Jenkins Mongo DB Elastic",
        "Oracle SQLite PostgreSQL",
        "DOJO",
        "JQuery",
        "Rspec Worked",
        "Windows Python Developer State Farm Insurance"
    ],
    "experience": "Experience in developing webbased applications using Python Django Developed web applications RESTful web services and APIs using Python Flask and Django Experience in implementing server side technologies with restful API and MVC design patterns in node JS and Django framework Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev Implemented different python libraries Beautiful Soup matplotlib numpy scipy pytables pythontwitter Pandas data frame Fabric and urllib2 in various tasks Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL DynamoDB and MySQL databases Experience on Web development using HTML5 CSSCSS3 JavaScript JQuery Angular JS AJAX XML and JSON by following W3C standards Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Route S3 Extensive development experience in Java Struts JSPs Servlets taglibs Hibernate JDBC HTML JavaScript SQL XML and JSON Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Most of the applications were developed with Python Django and PostgreSQL using Agile Methodology Good Experience in debugging the issues using pdb Proficient in developing multithreaded web services using CherryPy bottlePy framework Extensive experience in developing applications using Java API Swing HTML5 Flex JavaScript CSS JQuery JDBC JSF JMS XML Leveraging queueing architectures with Rabbit MQ for scalability performance and building Knowledge in working with continuous deployment using Heroku and Jenkins Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers Work Experience Sr Python Developer TD Bank Mount Laurel NJ August 2017 to Present Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Rewrite existing PythonFlask module to deliver certain format of data Created script in python for calling REST APIs Deployed Django web application in Apache webserver and Carpathia cloud web deployment Involved in designing user interactive web pages as the frontend part of the web application using various web technologies HTMLHTML5 CSSCSS3 JavaScript jQuery Node Js React JS DOM AJAX XML XHTML JSON SVG Bootstrap and Angular JS etc Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Install configure and troubleshoot Red Hat Enterprise Linux Wellversed in AWS Elastic Beanstalk for application deployments and operated on AWS lambda with Amazon kinesis Written various AWS Lambda services for Automating the process of taking EBS Snapshots every day in production environment on the cloud Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL db package to retrieve information Generated Python Django Forms to record data of online users Developed Wrapper in Python for instantiating multithreaded application Deployed and monitored scalable infrastructure on Amazon web services AWS Designed and managed API system deployment using fast http server and Amazon AWS architecture and automated AWS S3 data upload download using python scripts Implemented monitoring and established best practices around using elastic search Generated graphical reports using python package Numpy and MatplotLib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Deployed and administered many MySQL RDS instances PostgreSQL RDS instance and MSSQL database on EC2 server Used PostgreSQL for storing and retrieving JSON format data that need to be displayed on Google maps API Good knowledge in AngularJS and Responsive Design Designed and implemented a tool called netconf Network configuration which automatically configures network switches by parsing XML files Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Environment Python 27 Django 17 HTML5 CSS XML MySQL JavaScript JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Windows 12 Server Amazon S3 Jenkins Map Box GitHub Bit Bucket Linux and Windows Python Developer State Farm Insurance Bloomington IL January 2016 to July 2017 Responsibilities Developed Views and Templates using Djangos view controller and template language for the Web application Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Bootstrap JSON and ReactJs Developed custom directives elements Attributes and classes using Javascript and angularjs Used pandas to manipulate data and also to build various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web scraping to extract data for building graphs Expertise in performing Applied Statistics Exploratory Data Analysis and Data Visualization using tools like ggplot2 Tableau Developed a web application for developers to generate their own REST API calls in JAVA and Python Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Developed Application to access JSON from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services Used Restful APIs to access data from different suppliers Set up Unix server to support a TCPIP local net of windows XP clients Wrote a microservice to turn our main app into a SAML Service Provider so authentication could be handled by our clients systems Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in development of Java concepts like Collections Exception Handling MultiThreading Worked on MVC pattern using various frameworks Adopted agile methods for development delivery of the solution and participated in complete life cycle of the project SDLC Designed the Database written triggers and stored procedures Developed automation scripts to test storage appliances in Python Rewrite existing PythonDjango modules to deliver certain format of data Experience in developing scalable frontend user interfaces using HTML CSS Backbone and JavaScript JQuery AngularJS and Mongo DB Automation of the build process using Continuous Integration tools like Continuum and Jenkins Used Docker as a container service to migrate applications from cloud to the end user Created hybrid cloud by combining private cloud and public cloud using AWS Amazon web services and used it for public scaling Deployed Applications into nonproduction BETA production environments with various Application server technologies like WebLogic and Apache Tomcat Designing the web client by using HTML CSS JavaScript AJAX EXT JS and DOJO with JSON Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Environment Python Django MySQL JavaScript PyCharm Git ElasticSearch Flask Web2Py Linux Windows JSON JQuery HTML XML CSS REST JIRA Bootstrap AJAX AWS JavaScript MOCK Pandas Beautiful Soup Wireshark Flash URLlib Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef   PyTest PyChecker Selenium Python Developer NetApp Mountain View CA August 2014 to July 2015 Responsibilities Full Stack developer created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Maintained using PHPMySQL Used AWstat and Google Analytics to analyze web traffic Started developing with Python sdk Django Cand currently developing with Django Deployed production site using Apache 20 with mod _ python Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Using django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked using AJAX with jQuery Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Imported SSL certs from other hosts to new host and properly configured Apache to use certs Used Apache htaccess to provide authentication system for PHPMySQL sites Experience using mod_rewrite to create SEO friendly links Creating complex dynamic HTML UI using jQuery Deployed internal wiki PHP dokowiki and ticketing system Zope Python IssueTrackerProduct to help document and manage tasks Worked on JavaScript frame work to augment browser based applications with MVC capability Worked on frontend and backend application development Have upgraded additional functionalities and services with the use cases provided Involved in development of various controller classes as a part of MVC framework Worked in referential data service module to interface with various databases using JDBC Implemented REST and SOAP based web services and published using JAXWS Worked on Database Schemas HTML and XML services Worked on Oracle Database to store and retrieve information using SQL Developer Worked on Eclipse IDEs for build debugging and deploy it using Apache Tomcat Developed Build Script using MAVEN Involved in unit testing and run test cases Developed screens based on JQuery to dynamically generate HTML ad display data to the client side Written Struts services and DAOS in the service layer for SQL data retrieval operations using JDBC Demonstrated Experience and advocate for testdriven development Python and PHP web application development using the SQLAlchemy Involved in debugging the product using Eclipse and JIRA Bug Tracking Wrote Python scripts to parse XML documents and load the data in database Wrote and maintained application for day to day use for the company using Python and Django that store client data into database in json format Environment Python Django PyCharm JAVA Beautiful Soup PyTest PyQt Apache Cassandra HTML5 DOM CSS3 AJAX JSON JQuery SQLite PyQuery JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Pandas XML SQLAlchemy TSQL REST Linux GIT GitHub Python Scripting Engineer Genesis Solutions Pvt Ltd September 2012 to July 2014 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Written backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Developed consumer based features and applications using Python and Django in test driven Development Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Worked on changes to open stack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Creating invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks For the large data management used TFS and delivered reliable end product Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Worked on translation of web pages to different languages as per client requirements Updated the client admin tool to have the new features like support for internalization support for customer service etc Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions to match the pattern with the existing one Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Java Django HTML5 CSS3 XML JSON MySQL JavaScript Angular JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Skills DJANGO 5 years JENKINS 5 years JSON 5 years PYTHON 5 years XML 5 years Additional Information SKILL MATRIX Languages Python Java C Pearl SQL Frameworks Django web2py pyramid Flask Hibernate Struts pylons selenium Pyunit test and CSS Bootstrap Technologies HTML CSS Java Script JQuery AJAX XML Angular JS Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 Tableau HTMLCSS Bootstrap jQuery Pandas Numpy   Pickle PySide Scipy WxPython PyTables Pdb Json Version Control GIT GitHub SVN CVS Bitbucket Databases Oracle MySQL PostgreSQL MongoDB IDEs Development Tools Py Charm Sublime Text Matlab Eclipse Netbeans and visual studios Web Services AWS Rackspace Cloud Azure Microsoft Tomcat Operating Systems Windows Red hat Linux MAC OSX Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "TD",
        "Bank",
        "Mount",
        "Laurel",
        "NJ",
        "Extensive",
        "years",
        "experience",
        "design",
        "development",
        "testing",
        "implementation",
        "standalone",
        "architecture",
        "enterprise",
        "application",
        "software",
        "technologies",
        "business",
        "requirements",
        "specifications",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Controller",
        "architecture",
        "Django",
        "web",
        "application",
        "framework",
        "scale",
        "business",
        "systems",
        "Experience",
        "applications",
        "Python",
        "Django",
        "Developed",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "Experience",
        "server",
        "side",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "node",
        "JS",
        "Django",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "Python",
        "IDEs",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "python",
        "Beautiful",
        "Soup",
        "matplotlib",
        "numpy",
        "scipy",
        "pytables",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "Fabric",
        "urllib2",
        "tasks",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Couch",
        "DB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "DynamoDB",
        "MySQL",
        "Experience",
        "Web",
        "development",
        "HTML5",
        "CSSCSS3",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "AJAX",
        "XML",
        "JSON",
        "W3C",
        "standards",
        "Experience",
        "applications",
        "amazon",
        "web",
        "services",
        "EC2",
        "Cloud",
        "Search",
        "Elastic",
        "Load",
        "balancer",
        "ELB",
        "S3",
        "Cloud",
        "Front",
        "Route",
        "S3",
        "development",
        "experience",
        "Java",
        "Struts",
        "JSPs",
        "Servlets",
        "Hibernate",
        "JDBC",
        "HTML",
        "JavaScript",
        "SQL",
        "XML",
        "JSON",
        "J2EE",
        "applications",
        "IDEs",
        "Eclipse",
        "Eclipse",
        "Google",
        "GWT",
        "Rational",
        "Application",
        "Developer",
        "applications",
        "Python",
        "Django",
        "PostgreSQL",
        "Agile",
        "Methodology",
        "Good",
        "Experience",
        "issues",
        "pdb",
        "Proficient",
        "web",
        "services",
        "CherryPy",
        "bottlePy",
        "framework",
        "experience",
        "applications",
        "Java",
        "API",
        "Swing",
        "HTML5",
        "Flex",
        "JavaScript",
        "CSS",
        "JQuery",
        "JDBC",
        "JSF",
        "JMS",
        "XML",
        "architectures",
        "Rabbit",
        "MQ",
        "scalability",
        "performance",
        "Knowledge",
        "deployment",
        "Heroku",
        "Jenkins",
        "Proficient",
        "unit",
        "testing",
        "code",
        "Unit",
        "test",
        "code",
        "build",
        "process",
        "Python",
        "Testing",
        "frameworks",
        "zope",
        "nose",
        "Robot",
        "framework",
        "Agile",
        "SCRUM",
        "Waterfall",
        "Model",
        "Test",
        "development",
        "methodologies",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "TD",
        "Bank",
        "Mount",
        "Laurel",
        "NJ",
        "August",
        "Present",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "testing",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "MVC",
        "architecture",
        "Rewrite",
        "PythonFlask",
        "module",
        "format",
        "data",
        "script",
        "python",
        "REST",
        "APIs",
        "Django",
        "web",
        "application",
        "Apache",
        "webserver",
        "Carpathia",
        "cloud",
        "web",
        "deployment",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTMLHTML5",
        "CSSCSS3",
        "JavaScript",
        "jQuery",
        "Node",
        "Js",
        "React",
        "JS",
        "DOM",
        "AJAX",
        "XML",
        "XHTML",
        "JSON",
        "SVG",
        "Bootstrap",
        "Angular",
        "JS",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "configure",
        "troubleshoot",
        "Red",
        "Hat",
        "Enterprise",
        "Linux",
        "AWS",
        "Beanstalk",
        "application",
        "deployments",
        "AWS",
        "lambda",
        "Amazon",
        "kinesis",
        "AWS",
        "Lambda",
        "services",
        "process",
        "EBS",
        "Snapshots",
        "day",
        "production",
        "environment",
        "cloud",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "Sharding",
        "replication",
        "schema",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Developed",
        "Wrapper",
        "Python",
        "application",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "AWS",
        "S3",
        "data",
        "upload",
        "download",
        "scripts",
        "monitoring",
        "practices",
        "search",
        "reports",
        "package",
        "Numpy",
        "MatplotLib",
        "task",
        "object",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "MySQL",
        "RDS",
        "PostgreSQL",
        "RDS",
        "instance",
        "MSSQL",
        "database",
        "EC2",
        "server",
        "PostgreSQL",
        "format",
        "data",
        "Google",
        "maps",
        "API",
        "knowledge",
        "AngularJS",
        "Responsive",
        "Design",
        "Designed",
        "tool",
        "netconf",
        "Network",
        "configuration",
        "network",
        "switches",
        "XML",
        "files",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "JQuery",
        "CSS",
        "Bootstrap",
        "MS",
        "SQL",
        "Server",
        "Elastic",
        "Search",
        "Ubuntu",
        "server",
        "Windows",
        "Server",
        "Amazon",
        "S3",
        "Jenkins",
        "Map",
        "Box",
        "GitHub",
        "Bit",
        "Bucket",
        "Linux",
        "Windows",
        "Python",
        "Developer",
        "State",
        "Farm",
        "Insurance",
        "Bloomington",
        "IL",
        "January",
        "July",
        "Responsibilities",
        "Views",
        "Templates",
        "Djangos",
        "controller",
        "template",
        "language",
        "Web",
        "application",
        "Developed",
        "User",
        "Interface",
        "frontend",
        "technologies",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JSON",
        "ReactJs",
        "custom",
        "directives",
        "elements",
        "Attributes",
        "classes",
        "Javascript",
        "angularjs",
        "pandas",
        "data",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Expertise",
        "Applied",
        "Statistics",
        "Exploratory",
        "Data",
        "Analysis",
        "Data",
        "Visualization",
        "tools",
        "ggplot2",
        "Tableau",
        "web",
        "application",
        "developers",
        "REST",
        "API",
        "JAVA",
        "Python",
        "WEB",
        "APIs",
        "calls",
        "web",
        "services",
        "URLs",
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "operations",
        "server",
        "procedure",
        "trigger",
        "database",
        "data",
        "tables",
        "Web",
        "API",
        "services",
        "code",
        "modelviewcontroller",
        "MVC",
        "pattern",
        "Python",
        "Django",
        "framework",
        "modules",
        "application",
        "Developed",
        "Application",
        "JSON",
        "Restful",
        "Web",
        "Service",
        "consumer",
        "side",
        "JavaScript",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "APIs",
        "data",
        "suppliers",
        "Unix",
        "server",
        "TCPIP",
        "net",
        "windows",
        "XP",
        "clients",
        "microservice",
        "app",
        "SAML",
        "Service",
        "Provider",
        "authentication",
        "clients",
        "systems",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "development",
        "Java",
        "concepts",
        "Collections",
        "Exception",
        "Handling",
        "MultiThreading",
        "MVC",
        "pattern",
        "frameworks",
        "methods",
        "development",
        "delivery",
        "solution",
        "life",
        "cycle",
        "project",
        "SDLC",
        "Database",
        "triggers",
        "procedures",
        "automation",
        "scripts",
        "storage",
        "appliances",
        "Python",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Experience",
        "frontend",
        "user",
        "interfaces",
        "HTML",
        "CSS",
        "Backbone",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "Mongo",
        "DB",
        "Automation",
        "build",
        "process",
        "Continuous",
        "Integration",
        "tools",
        "Continuum",
        "Jenkins",
        "Used",
        "Docker",
        "container",
        "service",
        "applications",
        "cloud",
        "end",
        "user",
        "cloud",
        "cloud",
        "cloud",
        "AWS",
        "Amazon",
        "web",
        "services",
        "Deployed",
        "Applications",
        "nonproduction",
        "BETA",
        "production",
        "environments",
        "Application",
        "server",
        "technologies",
        "WebLogic",
        "Apache",
        "Tomcat",
        "web",
        "client",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "EXT",
        "JS",
        "DOJO",
        "JSON",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "JavaScript",
        "PyCharm",
        "Git",
        "ElasticSearch",
        "Flask",
        "Web2Py",
        "Linux",
        "Windows",
        "JSON",
        "JQuery",
        "HTML",
        "XML",
        "CSS",
        "REST",
        "JIRA",
        "Bootstrap",
        "AJAX",
        "JavaScript",
        "MOCK",
        "Pandas",
        "Beautiful",
        "Soup",
        "Wireshark",
        "Flash",
        "URLlib",
        "GitHub",
        "PyUnit",
        "SQLAlchemy",
        "Ansible",
        "Tableau",
        "SQL",
        "Developer",
        "Robot",
        "Jenkins",
        "Chef",
        "PyTest",
        "PyChecker",
        "Selenium",
        "Python",
        "Developer",
        "NetApp",
        "Mountain",
        "View",
        "CA",
        "August",
        "July",
        "Responsibilities",
        "Stack",
        "developer",
        "custom",
        "CMS",
        "Django",
        "Amazon",
        "web",
        "service",
        "REST",
        "Json",
        "JavaScript",
        "JQuery",
        "AJAX",
        "components",
        "designer",
        "Photoshop",
        "images",
        "XHTMLCSS",
        "PHPMySQL",
        "AWstat",
        "Google",
        "Analytics",
        "web",
        "traffic",
        "Python",
        "sdk",
        "Django",
        "Cand",
        "Django",
        "production",
        "site",
        "Apache",
        "mod",
        "_",
        "python",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "PostgresSQL",
        "data",
        "integrity",
        "django_evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "AJAX",
        "jQuery",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Imported",
        "SSL",
        "certs",
        "hosts",
        "host",
        "Apache",
        "certs",
        "Apache",
        "htaccess",
        "authentication",
        "system",
        "PHPMySQL",
        "sites",
        "Experience",
        "mod_rewrite",
        "SEO",
        "links",
        "HTML",
        "UI",
        "jQuery",
        "Deployed",
        "wiki",
        "PHP",
        "dokowiki",
        "ticketing",
        "system",
        "Zope",
        "Python",
        "IssueTrackerProduct",
        "document",
        "tasks",
        "JavaScript",
        "frame",
        "work",
        "augment",
        "browser",
        "applications",
        "MVC",
        "capability",
        "frontend",
        "application",
        "development",
        "functionalities",
        "services",
        "use",
        "cases",
        "development",
        "controller",
        "classes",
        "part",
        "MVC",
        "framework",
        "data",
        "service",
        "module",
        "databases",
        "JDBC",
        "REST",
        "SOAP",
        "web",
        "services",
        "JAXWS",
        "Worked",
        "Database",
        "Schemas",
        "HTML",
        "XML",
        "services",
        "Oracle",
        "Database",
        "information",
        "SQL",
        "Developer",
        "Eclipse",
        "IDEs",
        "build",
        "debugging",
        "Apache",
        "Tomcat",
        "Build",
        "Script",
        "MAVEN",
        "unit",
        "testing",
        "test",
        "cases",
        "screens",
        "JQuery",
        "HTML",
        "ad",
        "display",
        "data",
        "client",
        "side",
        "Written",
        "Struts",
        "services",
        "DAOS",
        "service",
        "layer",
        "SQL",
        "data",
        "retrieval",
        "operations",
        "JDBC",
        "Demonstrated",
        "Experience",
        "testdriven",
        "development",
        "Python",
        "PHP",
        "web",
        "application",
        "development",
        "SQLAlchemy",
        "product",
        "Eclipse",
        "JIRA",
        "Bug",
        "Tracking",
        "Wrote",
        "Python",
        "XML",
        "documents",
        "data",
        "database",
        "Wrote",
        "application",
        "day",
        "day",
        "use",
        "company",
        "Python",
        "Django",
        "client",
        "data",
        "database",
        "json",
        "format",
        "Environment",
        "Python",
        "Django",
        "PyCharm",
        "Beautiful",
        "Soup",
        "PyTest",
        "PyQt",
        "Apache",
        "Cassandra",
        "HTML5",
        "DOM",
        "CSS3",
        "AJAX",
        "JSON",
        "JQuery",
        "SQLite",
        "PyQuery",
        "JavaScript",
        "MySQL",
        "FTPlib",
        "Mongo",
        "DB",
        "PostgreSQL",
        "Puppet",
        "Jenkins",
        "Pandas",
        "XML",
        "SQLAlchemy",
        "TSQL",
        "REST",
        "Linux",
        "GIT",
        "GitHub",
        "Python",
        "Scripting",
        "Engineer",
        "Genesis",
        "Solutions",
        "Pvt",
        "Ltd",
        "September",
        "July",
        "Responsibilities",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "Written",
        "backend",
        "programming",
        "Python",
        "Django",
        "Framework",
        "application",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "communication",
        "client",
        "server",
        "Secured",
        "Web",
        "services",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JQuery",
        "Used",
        "JavaScript",
        "XML",
        "portion",
        "webpage",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Rspec",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "changes",
        "stack",
        "AWS",
        "largescale",
        "data",
        "center",
        "deployment",
        "Amazon",
        "Cloud",
        "EC2",
        "Amazon",
        "SQS",
        "project",
        "history",
        "Experience",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Created",
        "data",
        "charts",
        "Customer",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "invitation",
        "flow",
        "customers",
        "client",
        "portal",
        "applications",
        "environment",
        "settings",
        "deployment",
        "checks",
        "code",
        "base",
        "checks",
        "data",
        "management",
        "TFS",
        "end",
        "product",
        "packages",
        "patch",
        "soup",
        "b4",
        "unit",
        "testing",
        "translation",
        "web",
        "pages",
        "languages",
        "client",
        "requirements",
        "client",
        "admin",
        "tool",
        "features",
        "support",
        "internalization",
        "support",
        "customer",
        "service",
        "Collaborate",
        "Product",
        "Management",
        "User",
        "Experience",
        "experts",
        "product",
        "definition",
        "schedule",
        "scope",
        "decisions",
        "clip",
        "board",
        "features",
        "client",
        "requirements",
        "expressions",
        "pattern",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "Environment",
        "Python",
        "Java",
        "Django",
        "HTML5",
        "CSS3",
        "XML",
        "JSON",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Puppet",
        "Postgre",
        "SQL",
        "Amazon",
        "s3",
        "Jenkins",
        "Mongo",
        "DB",
        "search",
        "TSQL",
        "Beautiful",
        "soup",
        "TFS",
        "nose",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Skills",
        "DJANGO",
        "years",
        "JENKINS",
        "years",
        "JSON",
        "years",
        "PYTHON",
        "years",
        "XML",
        "years",
        "Additional",
        "Information",
        "SKILL",
        "MATRIX",
        "Languages",
        "Python",
        "Java",
        "C",
        "Pearl",
        "SQL",
        "Frameworks",
        "Django",
        "web2py",
        "pyramid",
        "Flask",
        "Hibernate",
        "Struts",
        "pylons",
        "selenium",
        "Pyunit",
        "test",
        "CSS",
        "Bootstrap",
        "Technologies",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "JQuery",
        "AJAX",
        "XML",
        "Angular",
        "JS",
        "Python",
        "Python",
        "Django",
        "Flask",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "Tableau",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Pandas",
        "Numpy",
        "Pickle",
        "PySide",
        "Scipy",
        "WxPython",
        "PyTables",
        "Pdb",
        "Json",
        "Version",
        "Control",
        "GIT",
        "GitHub",
        "SVN",
        "CVS",
        "Bitbucket",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "IDEs",
        "Development",
        "Tools",
        "Py",
        "Charm",
        "Sublime",
        "Text",
        "Matlab",
        "Eclipse",
        "Netbeans",
        "studios",
        "Web",
        "Services",
        "AWS",
        "Rackspace",
        "Cloud",
        "Azure",
        "Microsoft",
        "Tomcat",
        "Operating",
        "Systems",
        "Windows",
        "Red",
        "hat",
        "Linux",
        "MAC",
        "OSX",
        "Protocols",
        "HTTPHTTPS",
        "SOAP",
        "SNMP",
        "SMTP",
        "REST",
        "Deployment",
        "Tools",
        "Heroku",
        "Jenkins",
        "Tracking",
        "Tools",
        "Bugzilla",
        "JIRA",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:04:36.726836",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer TD Bank Mount Laurel NJ Extensive 6 years of experience in design development testing and implementation of various standalone and clientserver architecture based enterprise application software using various technologies analyzing complex business requirements and mapping them to system specifications Good experience in developing web applications implementing Model View Controller architecture using Django web application framework Designed and implemented large scale business critical systems Experience in developing webbased applications using Python Django Developed web applications RESTful web services and APIs using Python Flask and Django Experience in implementing server side technologies with restful API and MVC design patterns in node JS and Django framework Good knowledge of web services with protocols SOAP REST Good knowledge of server Apache Tomcat Web logic Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev Implemented different python libraries Beautiful Soup matplotlib numpy scipy pytables pythontwitter Pandas data frame Fabric and urllib2 in various tasks Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL DynamoDB and MySQL databases Experience on Web development using HTML5 CSSCSS3 JavaScript JQuery Angular JS AJAX XML and JSON by following W3C standards Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Route S3 Extensive development experience in Java Struts JSPs Servlets taglibs Hibernate JDBC HTML JavaScript SQL XML and JSON Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Most of the applications were developed with Python Django and PostgreSQL using Agile Methodology Good Experience in debugging the issues using pdb Proficient in developing multithreaded web services using CherryPy bottlePy framework Extensive experience in developing applications using Java API Swing HTML5 Flex JavaScript CSS JQuery JDBC JSF JMS XML Leveraging queueing architectures with Rabbit MQ for scalability performance and building Knowledge in working with continuous deployment using Heroku and Jenkins Proficient in writing unit testing code using Unit TestPyTest and integrating the test code with the build process Worked on Python Testing frameworks like zope pytest nose and Robot framework Well versed with Agile with SCRUM Waterfall Model and Test driven development methodologies Experienced in writing SQL Queries Stored procedures functions packages tables views and triggers Work Experience Sr Python Developer TD Bank Mount Laurel NJ August 2017 to Present Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Rewrite existing PythonFlask module to deliver certain format of data Created script in python for calling REST APIs Deployed Django web application in Apache webserver and Carpathia cloud web deployment Involved in designing user interactive web pages as the frontend part of the web application using various web technologies HTMLHTML5 CSSCSS3 JavaScript jQuery Node Js React JS DOM AJAX XML XHTML JSON SVG Bootstrap and Angular JS etc Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Install configure and troubleshoot Red Hat Enterprise Linux Wellversed in AWS Elastic Beanstalk for application deployments and operated on AWS lambda with Amazon kinesis Written various AWS Lambda services for Automating the process of taking EBS Snapshots every day in production environment on the cloud Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL db package to retrieve information Generated Python Django Forms to record data of online users Developed Wrapper in Python for instantiating multithreaded application Deployed and monitored scalable infrastructure on Amazon web services AWS Designed and managed API system deployment using fast http server and Amazon AWS architecture and automated AWS S3 data upload download using python scripts Implemented monitoring and established best practices around using elastic search Generated graphical reports using python package Numpy and MatplotLib Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Deployed and administered many MySQL RDS instances PostgreSQL RDS instance and MSSQL database on EC2 server Used PostgreSQL for storing and retrieving JSON format data that need to be displayed on Google maps API Good knowledge in AngularJS and Responsive Design Designed and implemented a tool called netconf Network configuration which automatically configures network switches by parsing XML files Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Environment Python 27 Django 17 HTML5 CSS XML MySQL JavaScript JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Windows 12 Server Amazon S3 Jenkins Map Box GitHub Bit Bucket Linux and Windows Python Developer State Farm Insurance Bloomington IL January 2016 to July 2017 Responsibilities Developed Views and Templates using Djangos view controller and template language for the Web application Designed and Developed User Interface using frontend technologies like CSS JavaScript AngularJS Bootstrap JSON and ReactJs Developed custom directives elements Attributes and classes using Javascript and angularjs Used pandas to manipulate data and also to build various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web scraping to extract data for building graphs Expertise in performing Applied Statistics Exploratory Data Analysis and Data Visualization using tools like ggplot2 Tableau Developed a web application for developers to generate their own REST API calls in JAVA and Python Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Created stored procedure trigger on the database to provideinsert specific data from multiple tables for Web API services Wrote code to support modelviewcontroller MVC pattern of Python Django framework in developing several modules for the application Developed Application to access JSON from Restful Web Service from consumer side using JavaScript Developed remote integration with third party platforms by using RESTful web services Used Restful APIs to access data from different suppliers Set up Unix server to support a TCPIP local net of windows XP clients Wrote a microservice to turn our main app into a SAML Service Provider so authentication could be handled by our clients systems Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in development of Java concepts like Collections Exception Handling MultiThreading Worked on MVC pattern using various frameworks Adopted agile methods for development delivery of the solution and participated in complete life cycle of the project SDLC Designed the Database written triggers and stored procedures Developed automation scripts to test storage appliances in Python Rewrite existing PythonDjango modules to deliver certain format of data Experience in developing scalable frontend user interfaces using HTML CSS Backbone and JavaScript JQuery AngularJS and Mongo DB Automation of the build process using Continuous Integration tools like Continuum and Jenkins Used Docker as a container service to migrate applications from cloud to the end user Created hybrid cloud by combining private cloud and public cloud using AWS Amazon web services and used it for public scaling Deployed Applications into nonproduction BETA production environments with various Application server technologies like WebLogic and Apache Tomcat Designing the web client by using HTML CSS JavaScript AJAX EXT JS and DOJO with JSON Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Environment Python Django MySQL JavaScript PyCharm Git ElasticSearch Flask Web2Py Linux Windows JSON JQuery HTML XML CSS REST JIRA Bootstrap AJAX AWS JavaScript MOCK Pandas Beautiful Soup Wireshark Flash URLlib Agile GitHub PyUnit SQLAlchemy Ansible Tableau SQL Developer Robot Jenkins Chef MatPlotLib PyTest PyChecker Selenium Python Developer NetApp Mountain View CA August 2014 to July 2015 Responsibilities Full Stack developer created a custom CMS built using Django AWS Amazon web service REST Json with JavaScript JQuery AJAX components worked closely with designer Converted Photoshop images into XHTMLCSS Maintained using PHPMySQL Used AWstat and Google Analytics to analyze web traffic Started developing with Python sdk Django Cand currently developing with Django Deployed production site using Apache 20 with mod_ python Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Using django_evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked using AJAX with jQuery Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Created PHPMySQL backend for data entry from Imported SSL certs from other hosts to new host and properly configured Apache to use certs Used Apache htaccess to provide authentication system for PHPMySQL sites Experience using mod_rewrite to create SEO friendly links Creating complex dynamic HTML UI using jQuery Deployed internal wiki PHP dokowiki and ticketing system Zope Python IssueTrackerProduct to help document and manage tasks Worked on JavaScript frame work to augment browser based applications with MVC capability Worked on frontend and backend application development Have upgraded additional functionalities and services with the use cases provided Involved in development of various controller classes as a part of MVC framework Worked in referential data service module to interface with various databases using JDBC Implemented REST and SOAP based web services and published using JAXWS Worked on Database Schemas HTML and XML services Worked on Oracle Database to store and retrieve information using SQL Developer Worked on Eclipse IDEs for build debugging and deploy it using Apache Tomcat Developed Build Script using MAVEN Involved in unit testing and run test cases Developed screens based on JQuery to dynamically generate HTML ad display data to the client side Written Struts services and DAOS in the service layer for SQL data retrieval operations using JDBC Demonstrated Experience and advocate for testdriven development Python and PHP web application development using the SQLAlchemy Involved in debugging the product using Eclipse and JIRA Bug Tracking Wrote Python scripts to parse XML documents and load the data in database Wrote and maintained application for day to day use for the company using Python and Django that store client data into database in json format Environment Python Django PyCharm JAVA Beautiful Soup PyTest PyQt Apache Cassandra HTML5 DOM CSS3 AJAX JSON JQuery SQLite PyQuery JavaScript MySQL FTPlib Mongo DB PostgreSQL Puppet Jenkins Pandas XML SQLAlchemy TSQL REST Linux GIT GitHub Python Scripting Engineer Genesis Solutions Pvt Ltd September 2012 to July 2014 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Written backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Developed consumer based features and applications using Python and Django in test driven Development Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Worked on changes to open stack and AWS to accommodate largescale data center deployment Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Created interactive data charts on Customer portal web application using High charts JavaScript library with data coming from Apache Cassandra Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Creating invitation flow for customers to use the client portal for monitoring applications Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks For the large data management used TFS and delivered reliable end product Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Worked on translation of web pages to different languages as per client requirements Updated the client admin tool to have the new features like support for internalization support for customer service etc Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions to match the pattern with the existing one Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Python Java Django HTML5 CSS3 XML JSON MySQL JavaScript Angular JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Skills DJANGO 5 years JENKINS 5 years JSON 5 years PYTHON 5 years XML 5 years Additional Information SKILL MATRIX Languages Python Java C Pearl SQL Frameworks Django web2py pyramid Flask Hibernate Struts pylons selenium Pyunit test and CSS Bootstrap Technologies HTML CSS Java Script JQuery AJAX XML Angular JS Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 Tableau HTMLCSS Bootstrap jQuery Pandas Numpy MatPlotLib Pickle PySide Scipy WxPython PyTables Pdb Json Version Control GIT GitHub SVN CVS Bitbucket Databases Oracle MySQL PostgreSQL MongoDB IDEs Development Tools Py Charm Sublime Text Matlab Eclipse Netbeans and visual studios Web Services AWS Rackspace Cloud Azure Microsoft Tomcat Operating Systems Windows Red hat Linux MAC OSX Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall",
    "unique_id": "fb092401-91a4-443d-a107-b282aa2dc05e"
}