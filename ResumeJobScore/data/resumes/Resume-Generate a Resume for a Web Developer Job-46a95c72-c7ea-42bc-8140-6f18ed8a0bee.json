{
    "clean_data": "Golang Developer Golang span lDeveloperspan Golang Developer Capital One Work Experience Golang Developer Capital One Richmond VA July 2017 to Present Responsibilities Used Go Programming Language Golang and Scala in the development of the application Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Experience using Restful to push configure to devices with Java and Erlang Created PDF reports using Golang and XML documents to send it to all customers at the end of month with international language support Developed front end using Bootstrapjs Angularjs Nodejs D3js Backbonejs where back end is JAXRS Jersey REST webservice Developed Golang software to handle concurrent data collection and processing with goroutines and channels for a WiFi device Achieved concurrent transactions via Goroutines multithreads Implemented Java and J2EE Design Pattern such as Command State Template Composite Strategy and Observer Worked with Go Web Toolkit Microservices Toolkit Gokit Web Service and Cassandra dB Cloud PostgreSQL Server on the server stack Developed Microservices to utilize Go language REST web services in the clients environment Also worked on concurrency goroutines and channels for library support Extensively worked with godoc Worked with ORMs like Equalize and GORM to perform DB operations using Node and Golang respectively Created stage timeline in Web UI client using JavaScript and React and implemented stage deletion in CLI using Golang Used Go to run the Docker Command Line Interface tools Worked on Setting up scalability for application servers using command line interface CLI and administering DNS system in AWS Optimized the Go code using goroutines Experience building Listener on Rabbit MQ erlang Implementing the routing technique in Golang using Gorilla mux as request router and dispatcher for matching incoming requests to their respective handler Developed dynamic web pages using HTML5 CSS3 JavaScript AngularJS NodeJS Bootstrap LESS and bootstrap Developed Single Page Applications SPA using React ES6 and typescript Web Pack Grunt and Redux Developed an application security infrastructure based on JSON web token JWT and Microsoft Azures gateway authentication mechanism Integrated Single Sign On SSO for multiple applications in the portal using SAML and JWT Designed backend system Logging Framework using Play Framework Apache Kafka and Elasticsearch Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed a Process Pool Management system in OTP for controlling Erlang process load on systems using concurrent threads Designed developed extensive additions to existing Struts Java J2EE Web Application utilizing Service Oriented Architecture SOA techniques Worked with database development in both SQL MSSQL PostgreSQLPLSQL MySQL and NoSQL MongoDB Used Apache CXF as the Web Services framework to implement the REST APIs involved Golang and Java were used as a backend REST service while AngularJS was used for the user interface Developed Golang based web services on AWS and Google App Engine Used Goland IDE for development Used GitHub and Jenkins for the continuous integration and deployment Instantiated AgileScrum methods to create a development rigor and Project management Created automated test scripts for web applications with Jasmine and Selenium testing module Wrote unit tests using Jest and Enzyme for testdriven development Created unit test cases and mocked complex classes using JUnit Mockito and Power Mock Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Google Cloud Security Group Auto Scaling and RDS in Cloud Formation JSON templates Prepared Unit test case using JUnit and used Maven for continuous integration testing Designed and developed user interfaces using JSP HTML JSON jQuery and CSS Used Struts ModelViewController approach to help design new features and fix Jira bugs and request Worked with sites hosted on Heroku AWS using a variety of technologies such as Varnish Apache Nginx Utilized GitHub for repository code management and Zoom and Slack for team peering purposes for cowork assignments Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Designed and implemented Container orchestration systems with Docker Swarm and Kubernetes Developed and Debugged Golang plugins for Go CD pipelines Technologies Used GO Golang Goroutine Microservices Channels Gokit ORM GORM cli Gorilla Mux gohystrix godoc JavaScript HTML5 CSS3 Angular Golang Developer Metra Chicago IL Chicago IL June 2016 to July 2017 Responsibilities Enhanced fixed functional and performance related bugs in core product written in GO Golang Experience writing data APIs and multiserver applications to meet product needs in erlang Created RPCbased service for reading large volume of data from PostgreSQL using GOGolang Developed a Process Pool Management system in OTP for controlling Erlang process load on systems using concurrent threads Programmed an IRC bot in Golang that is concurrent using goroutines Designed and created a Goroutine to automatically upgrade appliance software Accelerated the birth of new generation by 30 by using multithreaded Goroutines during the crossover process Experience in pairing with developers to stay actively involved Main technology stacks include C and Erlang Used Golang to create backend servers Responsible for providing leadership in a tradestudy exploring alternate software ecosystems including ErlangOTP Python plus messaging frameworks and other scalable alternatives Providing scalable solutions via erlang Golang AWS protocol buffers and supervision trees Developed REST Microservices which are like APIs used for Home Automation They also keep the data in synchronization between two database services Implemented query functionality while mapping front end code to backend by a priority of native SQL HQL GORM Queries Have involved in implementing DAO layer using GORM api Used godoc while development Enhanced the infrastructure and performance of the interactive and programmatic management interfaces with CLI and RESTful API Deployed and monitored scalable infrastructure on Amazon Web Services AWS and used AWS CLI to control various AWS services over SHELLBash Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Designed developed and deployed an authentication and control system based on JSON web token JWT Developed Go API with the revel framework with Ginkgo development at the forefront driving the TestDriven Development process Architecting the Infrastructure on Google cloud platform using various GCP Services Implementing new projects builds framework using Jenkins Maven as build framework tools Designed the web client by using HTML CSS JavaScript AJAX and DOJO with JSON Executed the test steps defined in Test Cases manually and reporting the bugs in JIRA Developed frontend and backend modules using Python on Django Web Framework with GIT Implemented the application using the concrete principles laid down by several JavaJ2EE Design patterns Worked in RDBMS implementation using SOAP SQL PLSQL MySQL on Oracle database Implemented the use of AWS NoSQL DB DynamoDB to dump data in JSON format Responsible for maintaining and expanding our AWS infrastructure using AWS EC2 manage documents in S3 providing IAM access to S3 buckets Installed and configured the development environment using Windows NT and LINUX operating systems Implemented Docker based Continues Integration and Deployment framework Configured Git and Bitbucket servers as the software version control tools Used zoom for daily standup calls team meetings Sprint planning and Sprint Review Unit tested the code with Jasmine tests and manages the code with SVN Extensively Used Eclipse IDE and IntelliJ for designing coding and developing applications Documented the progress of the daily standups with the Atlassian stack JIRA Confluence HipChat Technologies Used GO Golang Goroutine Microservices Channels Gokit ORM GORM cli Gorilla Mux godoc JavaScript HTML5 CSS3 Angular React Redux Bootstrap Es6 Typescript JSON web token SSOSAML Elasticsearch Software Developer Freedom Mortgage Corp Dallas TX February 2014 to May 2016 Responsibilities Involved in requirement analysis design coding and unit testing Created JKS file to interact with third party application using certificate and public key during SSO implementation Golang backend development for Microservices Building Microservices using Golang JSON Docker MongoDB Implemented code to generate SAML response to interact with third party application successfully Used SSO and SAML token creation and authenticate to the external system from ADE application Used Testing tools Like Ginkgo and Go mega framework Built website and database system for in house programmed in Python through Django streamline framework Improved test automation efficiency and execution through development of a distributed resource management system written in Erlang Designed and developed new features for application using Java J2ee JSP Servlets Struts Java EJB JDBC HTML JSTL and XSL Designed and implemented database structure in MySQL PLSQL Server Developed SQL queries Actively worked on stored procedures Developed Rest architecturebased web services to facilitate communication between client and servers Created all the services to work with the various entities provided and rectified the services using REST APIs Involved in creation of automation framework using selenium and testing Used JIRA Confluence were the tools used to keep things in check Designed layouts on the frontend and developed web pages responsive for smart desktops using JavaScript HTML5 CSS3 Bootstrap and jQuery Technologies Used GO Golang Microservices JavaScript HTML5 CSS3 Angular Bootstrap JSON web token SSOSAML Python Erlang Java Spring Hibernate MySQL PLSQL Rest Soap Eclipse Git SVN Junit Selenium Agile AWS EC2 S3 Maven JSON XML Jira Linux hip chat Jenkins Software Developer Sanofi Seattle WA July 2012 to January 2014 Responsibilities Worked on custom panels blocks content types and views to customize the look of the website Provided external connectivity ApigeeAkamai to LLE Lower level environmentrelease environments Responsible for layout design implementation using HTML5 CSS3 Bootstrap and AngularJS Used JSON web token JWT based authentication along with authentication guards to set the application up Used SOAP Technology for exchanging the XML application using HTTP Created functional automation scripts using open source tools selenium selenium RC Grid Designed the flow of the project using Waterfall Model Used various Amazon Web Services AWS Components like EC2 for virtual servers and S3 Proficient use of developing applications using NetBeans and ANT Tracked software issues and project progress enterprisewide using Jira Responsible for the total efficient and profitable operations of a CVS Written Unit testing and Test suites using JUnit framework for testing the application Used SVN version controller to manage code versions Developed test cases and performed unit testing using JUnit Involved in writing Unix Shell Script for performing automated tasks Designed and maintained databases using Python and developed Python based API RESTful Researched evaluated and worked with basics of functional programming languages such as Go Erlang Used Restful to push configure to devices with Java and Erlang Developed application using Java platform Prepared statements are used for communication with MySQL database Implemented logging functionality using log4j and developed SQL Oracle queries and stored procedures Technologies Used JavaScript HTML5 CSS3 Angular Bootstrap JSON web token SSOSAML Python Java Spring Struts MySQL SQL Rest Soap CVS SVN Selenium Waterfall AWS EC2 S3 Ant XML Jira Unix Education Bachelors CertificationsLicenses Drivers License",
    "entities": [
        "SSOSAML Elasticsearch Software Developer Freedom Mortgage Corp Dallas",
        "Test Cases",
        "SQL Oracle",
        "GOGolang Developed a Process Pool Management",
        "Redux Pattern",
        "the Docker Command Line Interface",
        "JSON",
        "GCP Services Implementing",
        "Sprint Review Unit",
        "Google",
        "Amazon Web Services AWS",
        "Goroutine",
        "Microsoft Azures",
        "Heroku",
        "Google App Engine",
        "XML",
        "SQL MSSQL PostgreSQLPLSQL MySQL",
        "JUnit",
        "TX",
        "VMware vSphere",
        "Python",
        "ApigeeAkamai",
        "SAML",
        "Enzyme",
        "Command State Template Composite Strategy",
        "API Deployed",
        "LLE Lower",
        "Golang Goroutine Microservices Channels Gokit",
        "JavaJ2EE Design",
        "Restful",
        "Used SOAP Technology",
        "AWS Optimized the Go",
        "JSP",
        "IRC",
        "Developed Single Page Applications SPA",
        "Built",
        "CLI",
        "Golang Used Go",
        "Jenkins Software Developer",
        "Project management Created",
        "jQuery Technologies Used GO",
        "GIT",
        "the TestDriven Development",
        "HTTP Created",
        "Developed Microservices",
        "Varnish Apache Nginx Utilized GitHub",
        "PDF",
        "IAM",
        "JUnit Involved",
        "LINUX",
        "JIRA Developed",
        "Created",
        "Jasmine and Selenium",
        "AWS",
        "Zoom and Slack",
        "Continues Integration and Deployment framework Configured Git",
        "Amazon Web Services AWS Components",
        "Home Automation They",
        "native SQL HQL GORM Queries Have",
        "DNS",
        "ADE",
        "Test",
        "JWT Developed Go API",
        "GitHub",
        "Microservices Building Microservices",
        "Golang",
        "Power Mock Setup",
        "Integrated Single Sign",
        "Maven",
        "Main",
        "JWT",
        "Bash Developed a Process Pool Management",
        "JavaScript",
        "ANT",
        "REST APIs Involved",
        "HTML CSS JavaScript AJAX",
        "SVN",
        "API RESTful Researched",
        "CSS",
        "Developed REST Microservices",
        "REST",
        "NetBeans",
        "Application",
        "Sprint",
        "DOJO",
        "Node",
        "OTP"
    ],
    "experience": "Experience Golang Developer Capital One Richmond VA July 2017 to Present Responsibilities Used Go Programming Language Golang and Scala in the development of the application Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Experience using Restful to push configure to devices with Java and Erlang Created PDF reports using Golang and XML documents to send it to all customers at the end of month with international language support Developed front end using Bootstrapjs Angularjs Nodejs D3js Backbonejs where back end is JAXRS Jersey REST webservice Developed Golang software to handle concurrent data collection and processing with goroutines and channels for a WiFi device Achieved concurrent transactions via Goroutines multithreads Implemented Java and J2EE Design Pattern such as Command State Template Composite Strategy and Observer Worked with Go Web Toolkit Microservices Toolkit Gokit Web Service and Cassandra dB Cloud PostgreSQL Server on the server stack Developed Microservices to utilize Go language REST web services in the clients environment Also worked on concurrency goroutines and channels for library support Extensively worked with godoc Worked with ORMs like Equalize and GORM to perform DB operations using Node and Golang respectively Created stage timeline in Web UI client using JavaScript and React and implemented stage deletion in CLI using Golang Used Go to run the Docker Command Line Interface tools Worked on Setting up scalability for application servers using command line interface CLI and administering DNS system in AWS Optimized the Go code using goroutines Experience building Listener on Rabbit MQ erlang Implementing the routing technique in Golang using Gorilla mux as request router and dispatcher for matching incoming requests to their respective handler Developed dynamic web pages using HTML5 CSS3 JavaScript AngularJS NodeJS Bootstrap LESS and bootstrap Developed Single Page Applications SPA using React ES6 and typescript Web Pack Grunt and Redux Developed an application security infrastructure based on JSON web token JWT and Microsoft Azures gateway authentication mechanism Integrated Single Sign On SSO for multiple applications in the portal using SAML and JWT Designed backend system Logging Framework using Play Framework Apache Kafka and Elasticsearch Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed a Process Pool Management system in OTP for controlling Erlang process load on systems using concurrent threads Designed developed extensive additions to existing Struts Java J2EE Web Application utilizing Service Oriented Architecture SOA techniques Worked with database development in both SQL MSSQL PostgreSQLPLSQL MySQL and NoSQL MongoDB Used Apache CXF as the Web Services framework to implement the REST APIs involved Golang and Java were used as a backend REST service while AngularJS was used for the user interface Developed Golang based web services on AWS and Google App Engine Used Goland IDE for development Used GitHub and Jenkins for the continuous integration and deployment Instantiated AgileScrum methods to create a development rigor and Project management Created automated test scripts for web applications with Jasmine and Selenium testing module Wrote unit tests using Jest and Enzyme for testdriven development Created unit test cases and mocked complex classes using JUnit Mockito and Power Mock Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Google Cloud Security Group Auto Scaling and RDS in Cloud Formation JSON templates Prepared Unit test case using JUnit and used Maven for continuous integration testing Designed and developed user interfaces using JSP HTML JSON jQuery and CSS Used Struts ModelViewController approach to help design new features and fix Jira bugs and request Worked with sites hosted on Heroku AWS using a variety of technologies such as Varnish Apache Nginx Utilized GitHub for repository code management and Zoom and Slack for team peering purposes for cowork assignments Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Designed and implemented Container orchestration systems with Docker Swarm and Kubernetes Developed and Debugged Golang plugins for Go CD pipelines Technologies Used GO Golang Goroutine Microservices Channels Gokit ORM GORM cli Gorilla Mux gohystrix godoc JavaScript HTML5 CSS3 Angular Golang Developer Metra Chicago IL Chicago IL June 2016 to July 2017 Responsibilities Enhanced fixed functional and performance related bugs in core product written in GO Golang Experience writing data APIs and multiserver applications to meet product needs in erlang Created RPCbased service for reading large volume of data from PostgreSQL using GOGolang Developed a Process Pool Management system in OTP for controlling Erlang process load on systems using concurrent threads Programmed an IRC bot in Golang that is concurrent using goroutines Designed and created a Goroutine to automatically upgrade appliance software Accelerated the birth of new generation by 30 by using multithreaded Goroutines during the crossover process Experience in pairing with developers to stay actively involved Main technology stacks include C and Erlang Used Golang to create backend servers Responsible for providing leadership in a tradestudy exploring alternate software ecosystems including ErlangOTP Python plus messaging frameworks and other scalable alternatives Providing scalable solutions via erlang Golang AWS protocol buffers and supervision trees Developed REST Microservices which are like APIs used for Home Automation They also keep the data in synchronization between two database services Implemented query functionality while mapping front end code to backend by a priority of native SQL HQL GORM Queries Have involved in implementing DAO layer using GORM api Used godoc while development Enhanced the infrastructure and performance of the interactive and programmatic management interfaces with CLI and RESTful API Deployed and monitored scalable infrastructure on Amazon Web Services AWS and used AWS CLI to control various AWS services over SHELLBash Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Designed developed and deployed an authentication and control system based on JSON web token JWT Developed Go API with the revel framework with Ginkgo development at the forefront driving the TestDriven Development process Architecting the Infrastructure on Google cloud platform using various GCP Services Implementing new projects builds framework using Jenkins Maven as build framework tools Designed the web client by using HTML CSS JavaScript AJAX and DOJO with JSON Executed the test steps defined in Test Cases manually and reporting the bugs in JIRA Developed frontend and backend modules using Python on Django Web Framework with GIT Implemented the application using the concrete principles laid down by several JavaJ2EE Design patterns Worked in RDBMS implementation using SOAP SQL PLSQL MySQL on Oracle database Implemented the use of AWS NoSQL DB DynamoDB to dump data in JSON format Responsible for maintaining and expanding our AWS infrastructure using AWS EC2 manage documents in S3 providing IAM access to S3 buckets Installed and configured the development environment using Windows NT and LINUX operating systems Implemented Docker based Continues Integration and Deployment framework Configured Git and Bitbucket servers as the software version control tools Used zoom for daily standup calls team meetings Sprint planning and Sprint Review Unit tested the code with Jasmine tests and manages the code with SVN Extensively Used Eclipse IDE and IntelliJ for designing coding and developing applications Documented the progress of the daily standups with the Atlassian stack JIRA Confluence HipChat Technologies Used GO Golang Goroutine Microservices Channels Gokit ORM GORM cli Gorilla Mux godoc JavaScript HTML5 CSS3 Angular React Redux Bootstrap Es6 Typescript JSON web token SSOSAML Elasticsearch Software Developer Freedom Mortgage Corp Dallas TX February 2014 to May 2016 Responsibilities Involved in requirement analysis design coding and unit testing Created JKS file to interact with third party application using certificate and public key during SSO implementation Golang backend development for Microservices Building Microservices using Golang JSON Docker MongoDB Implemented code to generate SAML response to interact with third party application successfully Used SSO and SAML token creation and authenticate to the external system from ADE application Used Testing tools Like Ginkgo and Go mega framework Built website and database system for in house programmed in Python through Django streamline framework Improved test automation efficiency and execution through development of a distributed resource management system written in Erlang Designed and developed new features for application using Java J2ee JSP Servlets Struts Java EJB JDBC HTML JSTL and XSL Designed and implemented database structure in MySQL PLSQL Server Developed SQL queries Actively worked on stored procedures Developed Rest architecturebased web services to facilitate communication between client and servers Created all the services to work with the various entities provided and rectified the services using REST APIs Involved in creation of automation framework using selenium and testing Used JIRA Confluence were the tools used to keep things in check Designed layouts on the frontend and developed web pages responsive for smart desktops using JavaScript HTML5 CSS3 Bootstrap and jQuery Technologies Used GO Golang Microservices JavaScript HTML5 CSS3 Angular Bootstrap JSON web token SSOSAML Python Erlang Java Spring Hibernate MySQL PLSQL Rest Soap Eclipse Git SVN Junit Selenium Agile AWS EC2 S3 Maven JSON XML Jira Linux hip chat Jenkins Software Developer Sanofi Seattle WA July 2012 to January 2014 Responsibilities Worked on custom panels blocks content types and views to customize the look of the website Provided external connectivity ApigeeAkamai to LLE Lower level environmentrelease environments Responsible for layout design implementation using HTML5 CSS3 Bootstrap and AngularJS Used JSON web token JWT based authentication along with authentication guards to set the application up Used SOAP Technology for exchanging the XML application using HTTP Created functional automation scripts using open source tools selenium selenium RC Grid Designed the flow of the project using Waterfall Model Used various Amazon Web Services AWS Components like EC2 for virtual servers and S3 Proficient use of developing applications using NetBeans and ANT Tracked software issues and project progress enterprisewide using Jira Responsible for the total efficient and profitable operations of a CVS Written Unit testing and Test suites using JUnit framework for testing the application Used SVN version controller to manage code versions Developed test cases and performed unit testing using JUnit Involved in writing Unix Shell Script for performing automated tasks Designed and maintained databases using Python and developed Python based API RESTful Researched evaluated and worked with basics of functional programming languages such as Go Erlang Used Restful to push configure to devices with Java and Erlang Developed application using Java platform Prepared statements are used for communication with MySQL database Implemented logging functionality using log4j and developed SQL Oracle queries and stored procedures Technologies Used JavaScript HTML5 CSS3 Angular Bootstrap JSON web token SSOSAML Python Java Spring Struts MySQL SQL Rest Soap CVS SVN Selenium Waterfall AWS EC2 S3 Ant XML Jira Unix Education Bachelors CertificationsLicenses Drivers License",
    "extracted_keywords": [
        "Golang",
        "Developer",
        "Golang",
        "span",
        "lDeveloperspan",
        "Golang",
        "Developer",
        "Capital",
        "Work",
        "Experience",
        "Golang",
        "Developer",
        "Capital",
        "Richmond",
        "VA",
        "July",
        "Present",
        "Responsibilities",
        "Programming",
        "Language",
        "Golang",
        "Scala",
        "development",
        "application",
        "backup",
        "recovery",
        "engine",
        "VM",
        "backuprecovery",
        "VMware",
        "vSphere",
        "APIs",
        "Golang",
        "programming",
        "language",
        "RabbitMQ",
        "Message",
        "bus",
        "communication",
        "interface",
        "Experience",
        "Restful",
        "configure",
        "devices",
        "Java",
        "Erlang",
        "Created",
        "PDF",
        "reports",
        "Golang",
        "XML",
        "documents",
        "customers",
        "end",
        "month",
        "language",
        "support",
        "end",
        "Bootstrapjs",
        "Angularjs",
        "Nodejs",
        "Backbonejs",
        "end",
        "JAXRS",
        "Jersey",
        "REST",
        "webservice",
        "Developed",
        "Golang",
        "software",
        "data",
        "collection",
        "processing",
        "goroutines",
        "channels",
        "WiFi",
        "device",
        "transactions",
        "Goroutines",
        "multithreads",
        "Java",
        "J2EE",
        "Design",
        "Pattern",
        "Command",
        "State",
        "Template",
        "Composite",
        "Strategy",
        "Observer",
        "Go",
        "Web",
        "Toolkit",
        "Microservices",
        "Toolkit",
        "Gokit",
        "Web",
        "Service",
        "Cassandra",
        "Cloud",
        "PostgreSQL",
        "Server",
        "server",
        "stack",
        "Developed",
        "Microservices",
        "language",
        "REST",
        "web",
        "services",
        "clients",
        "environment",
        "concurrency",
        "goroutines",
        "channels",
        "library",
        "support",
        "godoc",
        "ORMs",
        "Equalize",
        "GORM",
        "DB",
        "operations",
        "Node",
        "Golang",
        "stage",
        "timeline",
        "Web",
        "UI",
        "client",
        "JavaScript",
        "React",
        "stage",
        "deletion",
        "CLI",
        "Golang",
        "Used",
        "Docker",
        "Command",
        "Line",
        "Interface",
        "tools",
        "scalability",
        "application",
        "servers",
        "command",
        "line",
        "interface",
        "CLI",
        "DNS",
        "system",
        "AWS",
        "Go",
        "code",
        "goroutines",
        "Experience",
        "Listener",
        "Rabbit",
        "MQ",
        "erlang",
        "routing",
        "technique",
        "Golang",
        "Gorilla",
        "mux",
        "request",
        "router",
        "dispatcher",
        "requests",
        "handler",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Bootstrap",
        "bootstrap",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "React",
        "ES6",
        "typescript",
        "Web",
        "Pack",
        "Grunt",
        "Redux",
        "application",
        "security",
        "infrastructure",
        "JSON",
        "web",
        "JWT",
        "Microsoft",
        "Azures",
        "gateway",
        "authentication",
        "mechanism",
        "Integrated",
        "Single",
        "Sign",
        "SSO",
        "applications",
        "SAML",
        "JWT",
        "backend",
        "system",
        "Logging",
        "Framework",
        "Play",
        "Framework",
        "Apache",
        "Kafka",
        "Elasticsearch",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Process",
        "Pool",
        "Management",
        "system",
        "OTP",
        "Erlang",
        "process",
        "load",
        "systems",
        "threads",
        "additions",
        "Struts",
        "Java",
        "J2EE",
        "Web",
        "Application",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "techniques",
        "database",
        "development",
        "SQL",
        "MSSQL",
        "PostgreSQLPLSQL",
        "MySQL",
        "NoSQL",
        "Apache",
        "CXF",
        "Web",
        "Services",
        "framework",
        "REST",
        "APIs",
        "Golang",
        "Java",
        "REST",
        "service",
        "AngularJS",
        "user",
        "interface",
        "Developed",
        "Golang",
        "web",
        "services",
        "AWS",
        "Google",
        "App",
        "Engine",
        "Goland",
        "IDE",
        "development",
        "GitHub",
        "Jenkins",
        "integration",
        "deployment",
        "Instantiated",
        "AgileScrum",
        "methods",
        "development",
        "rigor",
        "Project",
        "management",
        "test",
        "scripts",
        "web",
        "applications",
        "Jasmine",
        "Selenium",
        "testing",
        "module",
        "Wrote",
        "unit",
        "tests",
        "Jest",
        "Enzyme",
        "testdriven",
        "development",
        "unit",
        "test",
        "cases",
        "classes",
        "JUnit",
        "Mockito",
        "Power",
        "Mock",
        "Setup",
        "AWS",
        "infrastructure",
        "resources",
        "VPC",
        "EC2",
        "S3",
        "IAM",
        "EBS",
        "Google",
        "Cloud",
        "Security",
        "Group",
        "Auto",
        "Scaling",
        "RDS",
        "Cloud",
        "Formation",
        "Prepared",
        "Unit",
        "test",
        "case",
        "JUnit",
        "Maven",
        "integration",
        "testing",
        "user",
        "interfaces",
        "JSP",
        "HTML",
        "JSON",
        "jQuery",
        "CSS",
        "Struts",
        "ModelViewController",
        "approach",
        "features",
        "Jira",
        "bugs",
        "sites",
        "Heroku",
        "AWS",
        "variety",
        "technologies",
        "Varnish",
        "Apache",
        "Nginx",
        "GitHub",
        "repository",
        "code",
        "management",
        "Zoom",
        "Slack",
        "team",
        "purposes",
        "cowork",
        "assignments",
        "Docker",
        "deployment",
        "pipeline",
        "custom",
        "application",
        "images",
        "cloud",
        "Jenkins",
        "Designed",
        "Container",
        "orchestration",
        "systems",
        "Docker",
        "Swarm",
        "Kubernetes",
        "Developed",
        "Golang",
        "Go",
        "CD",
        "pipelines",
        "Technologies",
        "GO",
        "Golang",
        "Goroutine",
        "Microservices",
        "Channels",
        "Gokit",
        "ORM",
        "GORM",
        "cli",
        "Gorilla",
        "Mux",
        "godoc",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Angular",
        "Golang",
        "Developer",
        "Metra",
        "Chicago",
        "IL",
        "Chicago",
        "IL",
        "June",
        "July",
        "Responsibilities",
        "functional",
        "bugs",
        "core",
        "product",
        "GO",
        "Golang",
        "Experience",
        "data",
        "APIs",
        "multiserver",
        "applications",
        "product",
        "needs",
        "erlang",
        "Created",
        "RPCbased",
        "service",
        "volume",
        "data",
        "PostgreSQL",
        "GOGolang",
        "Developed",
        "Process",
        "Pool",
        "Management",
        "system",
        "OTP",
        "Erlang",
        "process",
        "load",
        "systems",
        "threads",
        "IRC",
        "bot",
        "Golang",
        "goroutines",
        "Goroutine",
        "appliance",
        "software",
        "birth",
        "generation",
        "Goroutines",
        "crossover",
        "process",
        "Experience",
        "developers",
        "technology",
        "stacks",
        "C",
        "Erlang",
        "Used",
        "Golang",
        "servers",
        "leadership",
        "tradestudy",
        "software",
        "ecosystems",
        "ErlangOTP",
        "Python",
        "frameworks",
        "alternatives",
        "solutions",
        "erlang",
        "Golang",
        "AWS",
        "protocol",
        "buffers",
        "supervision",
        "trees",
        "REST",
        "Microservices",
        "APIs",
        "Home",
        "Automation",
        "data",
        "synchronization",
        "database",
        "services",
        "query",
        "functionality",
        "mapping",
        "end",
        "code",
        "priority",
        "SQL",
        "HQL",
        "GORM",
        "Queries",
        "DAO",
        "layer",
        "GORM",
        "api",
        "godoc",
        "development",
        "infrastructure",
        "performance",
        "management",
        "interfaces",
        "CLI",
        "API",
        "Deployed",
        "infrastructure",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "AWS",
        "CLI",
        "AWS",
        "services",
        "SHELLBash",
        "ReactJS",
        "components",
        "Redux",
        "Pattern",
        "solution",
        "Application",
        "state",
        "authentication",
        "control",
        "system",
        "JSON",
        "web",
        "JWT",
        "Developed",
        "API",
        "revel",
        "framework",
        "Ginkgo",
        "development",
        "forefront",
        "TestDriven",
        "Development",
        "process",
        "Infrastructure",
        "Google",
        "cloud",
        "platform",
        "GCP",
        "Services",
        "projects",
        "framework",
        "Jenkins",
        "Maven",
        "framework",
        "tools",
        "web",
        "client",
        "HTML",
        "CSS",
        "JavaScript",
        "AJAX",
        "DOJO",
        "JSON",
        "test",
        "steps",
        "Test",
        "Cases",
        "bugs",
        "JIRA",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "application",
        "principles",
        "JavaJ2EE",
        "Design",
        "patterns",
        "implementation",
        "SOAP",
        "SQL",
        "PLSQL",
        "MySQL",
        "Oracle",
        "database",
        "use",
        "AWS",
        "NoSQL",
        "DB",
        "DynamoDB",
        "data",
        "format",
        "AWS",
        "infrastructure",
        "AWS",
        "EC2",
        "manage",
        "documents",
        "S3",
        "IAM",
        "access",
        "S3",
        "buckets",
        "development",
        "environment",
        "Windows",
        "NT",
        "LINUX",
        "operating",
        "systems",
        "Docker",
        "Continues",
        "Integration",
        "Deployment",
        "framework",
        "Configured",
        "Git",
        "Bitbucket",
        "servers",
        "software",
        "version",
        "control",
        "tools",
        "zoom",
        "standup",
        "team",
        "meetings",
        "Sprint",
        "planning",
        "Sprint",
        "Review",
        "Unit",
        "code",
        "Jasmine",
        "tests",
        "code",
        "SVN",
        "Eclipse",
        "IDE",
        "IntelliJ",
        "applications",
        "progress",
        "standups",
        "stack",
        "JIRA",
        "Confluence",
        "HipChat",
        "Technologies",
        "GO",
        "Golang",
        "Goroutine",
        "Microservices",
        "Channels",
        "Gokit",
        "ORM",
        "GORM",
        "cli",
        "Gorilla",
        "Mux",
        "godoc",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Angular",
        "React",
        "Redux",
        "Bootstrap",
        "Es6",
        "Typescript",
        "JSON",
        "web",
        "SSOSAML",
        "Elasticsearch",
        "Software",
        "Developer",
        "Freedom",
        "Mortgage",
        "Corp",
        "Dallas",
        "TX",
        "February",
        "May",
        "Responsibilities",
        "requirement",
        "analysis",
        "design",
        "coding",
        "unit",
        "testing",
        "JKS",
        "file",
        "party",
        "application",
        "certificate",
        "key",
        "SSO",
        "implementation",
        "Golang",
        "backend",
        "development",
        "Microservices",
        "Building",
        "Microservices",
        "Golang",
        "JSON",
        "Docker",
        "MongoDB",
        "code",
        "SAML",
        "response",
        "party",
        "application",
        "SSO",
        "SAML",
        "creation",
        "system",
        "ADE",
        "application",
        "Testing",
        "tools",
        "Ginkgo",
        "framework",
        "website",
        "database",
        "system",
        "house",
        "Python",
        "Django",
        "framework",
        "test",
        "automation",
        "efficiency",
        "execution",
        "development",
        "resource",
        "management",
        "system",
        "Erlang",
        "features",
        "application",
        "Java",
        "J2ee",
        "JSP",
        "Servlets",
        "Struts",
        "Java",
        "EJB",
        "JDBC",
        "HTML",
        "JSTL",
        "XSL",
        "database",
        "structure",
        "MySQL",
        "PLSQL",
        "Server",
        "SQL",
        "queries",
        "procedures",
        "Rest",
        "web",
        "services",
        "communication",
        "client",
        "servers",
        "services",
        "entities",
        "services",
        "REST",
        "APIs",
        "creation",
        "automation",
        "framework",
        "selenium",
        "testing",
        "JIRA",
        "Confluence",
        "tools",
        "things",
        "check",
        "layouts",
        "frontend",
        "web",
        "pages",
        "desktops",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "jQuery",
        "Technologies",
        "GO",
        "Golang",
        "Microservices",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Angular",
        "Bootstrap",
        "JSON",
        "web",
        "SSOSAML",
        "Python",
        "Erlang",
        "Java",
        "Spring",
        "Hibernate",
        "MySQL",
        "PLSQL",
        "Rest",
        "Soap",
        "Eclipse",
        "Git",
        "SVN",
        "Junit",
        "Selenium",
        "Agile",
        "AWS",
        "EC2",
        "S3",
        "Maven",
        "JSON",
        "XML",
        "Jira",
        "Linux",
        "hip",
        "Jenkins",
        "Software",
        "Developer",
        "Sanofi",
        "Seattle",
        "WA",
        "July",
        "January",
        "Responsibilities",
        "custom",
        "panels",
        "content",
        "types",
        "views",
        "look",
        "website",
        "connectivity",
        "ApigeeAkamai",
        "LLE",
        "level",
        "environmentrelease",
        "environments",
        "design",
        "implementation",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "AngularJS",
        "JSON",
        "web",
        "JWT",
        "authentication",
        "authentication",
        "guards",
        "application",
        "SOAP",
        "Technology",
        "XML",
        "application",
        "HTTP",
        "automation",
        "scripts",
        "source",
        "tools",
        "selenium",
        "selenium",
        "RC",
        "Grid",
        "flow",
        "project",
        "Waterfall",
        "Model",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Components",
        "EC2",
        "servers",
        "S3",
        "Proficient",
        "use",
        "applications",
        "NetBeans",
        "ANT",
        "software",
        "issues",
        "project",
        "progress",
        "enterprisewide",
        "Jira",
        "Responsible",
        "operations",
        "CVS",
        "Written",
        "Unit",
        "testing",
        "Test",
        "suites",
        "JUnit",
        "framework",
        "application",
        "SVN",
        "version",
        "controller",
        "code",
        "versions",
        "test",
        "cases",
        "unit",
        "testing",
        "JUnit",
        "Unix",
        "Shell",
        "Script",
        "tasks",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Researched",
        "basics",
        "programming",
        "languages",
        "Go",
        "Erlang",
        "configure",
        "devices",
        "Java",
        "Erlang",
        "Developed",
        "application",
        "Java",
        "platform",
        "statements",
        "communication",
        "MySQL",
        "database",
        "functionality",
        "log4j",
        "SQL",
        "Oracle",
        "queries",
        "procedures",
        "Technologies",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Angular",
        "Bootstrap",
        "JSON",
        "web",
        "SSOSAML",
        "Python",
        "Java",
        "Spring",
        "Struts",
        "MySQL",
        "SQL",
        "Rest",
        "Soap",
        "CVS",
        "SVN",
        "Selenium",
        "Waterfall",
        "AWS",
        "EC2",
        "S3",
        "Ant",
        "XML",
        "Jira",
        "Unix",
        "Education",
        "Bachelors",
        "CertificationsLicenses",
        "Drivers",
        "License"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:06:49.532705",
    "resume_data": "Golang Developer Golang span lDeveloperspan Golang Developer Capital One Work Experience Golang Developer Capital One Richmond VA July 2017 to Present Responsibilities Used Go Programming Language Golang and Scala in the development of the application Developed backup and recovery engine for VM backuprecovery using VMware vSphere APIs Golang programming language and RabbitMQ Message bus communication interface Experience using Restful to push configure to devices with Java and Erlang Created PDF reports using Golang and XML documents to send it to all customers at the end of month with international language support Developed front end using Bootstrapjs Angularjs Nodejs D3js Backbonejs where back end is JAXRS Jersey REST webservice Developed Golang software to handle concurrent data collection and processing with goroutines and channels for a WiFi device Achieved concurrent transactions via Goroutines multithreads Implemented Java and J2EE Design Pattern such as Command State Template Composite Strategy and Observer Worked with Go Web Toolkit Microservices Toolkit Gokit Web Service and Cassandra dB Cloud PostgreSQL Server on the server stack Developed Microservices to utilize Go language REST web services in the clients environment Also worked on concurrency goroutines and channels for library support Extensively worked with godoc Worked with ORMs like Equalize and GORM to perform DB operations using Node and Golang respectively Created stage timeline in Web UI client using JavaScript and React and implemented stage deletion in CLI using Golang Used Go to run the Docker Command Line Interface tools Worked on Setting up scalability for application servers using command line interface CLI and administering DNS system in AWS Optimized the Go code using goroutines Experience building Listener on Rabbit MQ erlang Implementing the routing technique in Golang using Gorilla mux as request router and dispatcher for matching incoming requests to their respective handler Developed dynamic web pages using HTML5 CSS3 JavaScript AngularJS NodeJS Bootstrap LESS and bootstrap Developed Single Page Applications SPA using React ES6 and typescript Web Pack Grunt and Redux Developed an application security infrastructure based on JSON web token JWT and Microsoft Azures gateway authentication mechanism Integrated Single Sign On SSO for multiple applications in the portal using SAML and JWT Designed backend system Logging Framework using Play Framework Apache Kafka and Elasticsearch Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed a Process Pool Management system in OTP for controlling Erlang process load on systems using concurrent threads Designed developed extensive additions to existing Struts Java J2EE Web Application utilizing Service Oriented Architecture SOA techniques Worked with database development in both SQL MSSQL PostgreSQLPLSQL MySQL and NoSQL MongoDB Used Apache CXF as the Web Services framework to implement the REST APIs involved Golang and Java were used as a backend REST service while AngularJS was used for the user interface Developed Golang based web services on AWS and Google App Engine Used Goland IDE for development Used GitHub and Jenkins for the continuous integration and deployment Instantiated AgileScrum methods to create a development rigor and Project management Created automated test scripts for web applications with Jasmine and Selenium testing module Wrote unit tests using Jest and Enzyme for testdriven development Created unit test cases and mocked complex classes using JUnit Mockito and Power Mock Setup and build AWS infrastructure various resources VPC EC2 S3 IAM EBS Google Cloud Security Group Auto Scaling and RDS in Cloud Formation JSON templates Prepared Unit test case using JUnit and used Maven for continuous integration testing Designed and developed user interfaces using JSP HTML JSON jQuery and CSS Used Struts ModelViewController approach to help design new features and fix Jira bugs and request Worked with sites hosted on Heroku AWS using a variety of technologies such as Varnish Apache Nginx Utilized GitHub for repository code management and Zoom and Slack for team peering purposes for cowork assignments Created and managed a Docker deployment pipeline for custom application images in the cloud using Jenkins Designed and implemented Container orchestration systems with Docker Swarm and Kubernetes Developed and Debugged Golang plugins for Go CD pipelines Technologies Used GO Golang Goroutine Microservices Channels Gokit ORM GORM cli Gorilla Mux gohystrix godoc JavaScript HTML5 CSS3 Angular Golang Developer Metra Chicago IL Chicago IL June 2016 to July 2017 Responsibilities Enhanced fixed functional and performance related bugs in core product written in GO Golang Experience writing data APIs and multiserver applications to meet product needs in erlang Created RPCbased service for reading large volume of data from PostgreSQL using GOGolang Developed a Process Pool Management system in OTP for controlling Erlang process load on systems using concurrent threads Programmed an IRC bot in Golang that is concurrent using goroutines Designed and created a Goroutine to automatically upgrade appliance software Accelerated the birth of new generation by 30 by using multithreaded Goroutines during the crossover process Experience in pairing with developers to stay actively involved Main technology stacks include C and Erlang Used Golang to create backend servers Responsible for providing leadership in a tradestudy exploring alternate software ecosystems including ErlangOTP Python plus messaging frameworks and other scalable alternatives Providing scalable solutions via erlang Golang AWS protocol buffers and supervision trees Developed REST Microservices which are like APIs used for Home Automation They also keep the data in synchronization between two database services Implemented query functionality while mapping front end code to backend by a priority of native SQL HQL GORM Queries Have involved in implementing DAO layer using GORM api Used godoc while development Enhanced the infrastructure and performance of the interactive and programmatic management interfaces with CLI and RESTful API Deployed and monitored scalable infrastructure on Amazon Web Services AWS and used AWS CLI to control various AWS services over SHELLBash Created reusable ReactJS components and implemented Redux Pattern into the solution to maintain the stable and always updated Application state Designed developed and deployed an authentication and control system based on JSON web token JWT Developed Go API with the revel framework with Ginkgo development at the forefront driving the TestDriven Development process Architecting the Infrastructure on Google cloud platform using various GCP Services Implementing new projects builds framework using Jenkins Maven as build framework tools Designed the web client by using HTML CSS JavaScript AJAX and DOJO with JSON Executed the test steps defined in Test Cases manually and reporting the bugs in JIRA Developed frontend and backend modules using Python on Django Web Framework with GIT Implemented the application using the concrete principles laid down by several JavaJ2EE Design patterns Worked in RDBMS implementation using SOAP SQL PLSQL MySQL on Oracle database Implemented the use of AWS NoSQL DB DynamoDB to dump data in JSON format Responsible for maintaining and expanding our AWS infrastructure using AWS EC2 manage documents in S3 providing IAM access to S3 buckets Installed and configured the development environment using Windows NT and LINUX operating systems Implemented Docker based Continues Integration and Deployment framework Configured Git and Bitbucket servers as the software version control tools Used zoom for daily standup calls team meetings Sprint planning and Sprint Review Unit tested the code with Jasmine tests and manages the code with SVN Extensively Used Eclipse IDE and IntelliJ for designing coding and developing applications Documented the progress of the daily standups with the Atlassian stack JIRA Confluence HipChat Technologies Used GO Golang Goroutine Microservices Channels Gokit ORM GORM cli Gorilla Mux godoc JavaScript HTML5 CSS3 Angular React Redux Bootstrap Es6 Typescript JSON web token SSOSAML Elasticsearch Software Developer Freedom Mortgage Corp Dallas TX February 2014 to May 2016 Responsibilities Involved in requirement analysis design coding and unit testing Created JKS file to interact with third party application using certificate and public key during SSO implementation Golang backend development for Microservices Building Microservices using Golang JSON Docker MongoDB Implemented code to generate SAML response to interact with third party application successfully Used SSO and SAML token creation and authenticate to the external system from ADE application Used Testing tools Like Ginkgo and Go mega framework Built website and database system for in house programmed in Python through Django streamline framework Improved test automation efficiency and execution through development of a distributed resource management system written in Erlang Designed and developed new features for application using Java J2ee JSP Servlets Struts Java EJB JDBC HTML JSTL and XSL Designed and implemented database structure in MySQL PLSQL Server Developed SQL queries Actively worked on stored procedures Developed Rest architecturebased web services to facilitate communication between client and servers Created all the services to work with the various entities provided and rectified the services using REST APIs Involved in creation of automation framework using selenium and testing Used JIRA Confluence were the tools used to keep things in check Designed layouts on the frontend and developed web pages responsive for smart desktops using JavaScript HTML5 CSS3 Bootstrap and jQuery Technologies Used GO Golang Microservices JavaScript HTML5 CSS3 Angular Bootstrap JSON web token SSOSAML Python Erlang Java Spring Hibernate MySQL PLSQL Rest Soap Eclipse Git SVN Junit Selenium Agile AWS EC2 S3 Maven JSON XML Jira Linux hip chat Jenkins Software Developer Sanofi Seattle WA July 2012 to January 2014 Responsibilities Worked on custom panels blocks content types and views to customize the look of the website Provided external connectivity ApigeeAkamai to LLE Lower level environmentrelease environments Responsible for layout design implementation using HTML5 CSS3 Bootstrap and AngularJS Used JSON web token JWT based authentication along with authentication guards to set the application up Used SOAP Technology for exchanging the XML application using HTTP Created functional automation scripts using open source tools selenium selenium RC Grid Designed the flow of the project using Waterfall Model Used various Amazon Web Services AWS Components like EC2 for virtual servers and S3 Proficient use of developing applications using NetBeans and ANT Tracked software issues and project progress enterprisewide using Jira Responsible for the total efficient and profitable operations of a CVS Written Unit testing and Test suites using JUnit framework for testing the application Used SVN version controller to manage code versions Developed test cases and performed unit testing using JUnit Involved in writing Unix Shell Script for performing automated tasks Designed and maintained databases using Python and developed Python based API RESTful Researched evaluated and worked with basics of functional programming languages such as Go Erlang Used Restful to push configure to devices with Java and Erlang Developed application using Java platform Prepared statements are used for communication with MySQL database Implemented logging functionality using log4j and developed SQL Oracle queries and stored procedures Technologies Used JavaScript HTML5 CSS3 Angular Bootstrap JSON web token SSOSAML Python Java Spring Struts MySQL SQL Rest Soap CVS SVN Selenium Waterfall AWS EC2 S3 Ant XML Jira Unix Education Bachelors CertificationsLicenses Drivers License",
    "unique_id": "46a95c72-c7ea-42bc-8140-6f18ed8a0bee"
}