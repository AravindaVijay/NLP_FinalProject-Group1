{
    "clean_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer United HealthCare Experienced JavaJ2EE professional with extensive back ground in Software Development and Testing Life Cycle Over 6 years of experience in designing and developing enterprise level multitier and Singlepage web Applications in UN agency Banking and Retail domains Experience in utilizing opensource frameworks such as AngularJS NodeJS Struts Spring Hibernate JSF and Jquery Experience in consuming RESTful services using Angular http resource and jQuery to exchange request responses information with databases such as Oracle and MySQL Experience in developing web applications using JavaJ2EE JSP Servlets EJB JDBC Spring Struts JSF Hibernate Web Services and XML Expertise in SOA Web Services CXF XML Beans Apache Camel and XML technologies XSLT Xpath Proven software development experience using different methodologies Agile Waterfall and TDD Experienced in MEAN stack development MongoDB ExpressJS AngularJS NodeJS Handson experience in relational databases like Oracle 11g MySQL MS SQL Server using SQL PLSQL programming and NoSQL database Mongo DB Strong experience in deploying J2EE components on JBOSS Apache Tomcat BEA WebLogic and IBM WebSphere application servers good exposure to cloud computing with Amazon Web ServicesAWS Thorough knowledge of Web technologies XML WML SAXDOM Parser AJAX HTML CSS Bootstrap and JavaScript Strong experience on various Java Design Patterns such as Session Faade DAO DTO Delegate Front Controller Factory Business Object Prototype and Singleton Proficient in integration of Enterprise Java Beans EJB with existing applications and using services provided in distributed applications through Web Services JAXRPC JAXWS JAXRS Extensive development experience on different IDEs like Eclipse IBM Rational Application Developer WebSphere Integration Developer and NetBeans Test Driven Programmer with thorough knowledge in Unit testing with JUnit Mockito and using SoapUI Postman for Web Service testing performance testing with JMeter and automated testing with Test Driven Development TDD in Extreme Programming model Experience in AWS Solutions using EC2 S3 RDS EBS Elastic Load Balancer Dynamo DB and Autoscaling Groups Experience with GitHub and AEM and container orchestration like Kubernetes Strong QA Automation experience with Selenium Webdriver Jbehive and Cucumber Expert in coding using core java concepts like multithreading collections serialization synchronization exception handling and database connections Experienced in writing complex Queries Stored procedures functions packages tables views and triggers with major databases such as Oracle DB2 and MySQL Experienced in database GUIIDE Tools using TOAD DB Visualizer and MySQL Client Strong experience working with version control software like TFS CVS ClearCase Apache SubVersion GIT and build tools ANT Maven Gradle and Jenkins Good working experience in operating systems like UNIX Solaris and Windows Skilled and experienced in cocoordinating efforts among multiple teams onsite and offshore and third parties Experience in handlingexecuting projects using Agile methodologies SCRUM along with Test Driven Development techniques Work Experience Full Stack Java Developer United HealthCare Hartford CT August 2018 to Present Responsibilities Developed the single page application following Agile Scrum participated in daily standups sprint reviews Kickoffs and used Jira for project management Responsible for requirements analysis technical design implementation and testing according to Software Development Lifecycle SDLC Involved in designing UML and Sequence Diagrams using Microsoft Visio to model the detail design of the application Used Microservices architecture with Spring boot to develop REST based Web Services with minimal configuration Implemented a Continuous Delivery pipeline with Development of Cloud deployed applications Implemented DAO layer using JPA Hibernate framework to interact with database Designed and developed web pages using HTML JSP JavaScript and XSLT involved in writing new JSPs designed pages using HTML and client validation using JavaScript and jQuery Developed single page applications using Angular Typescript HTML5 CSS3 and Bootstrap Moved the project to Java 8 to extensively use Lambda expressions and have better connectivity to Cloud in addition adding Spring Boot Libraries and UI Enhancement Extensively used Core Java API Spring API in developing the business logic All the functionality is implemented using Spring IOC Spring Boot and Hibernate ORM Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security models Designed and Developed Representational state transfer REST based services and Simple Object Access Protocol SOAP based services as part of the requirement Implemented REST Microservices using spring boot Generated Metrics with method level granularity and Persistence using Spring AOP and Spring Actuator Used spring config server for centralized configuration and Splunk for centralized logging Used Concourse and Jenkins for Microservices deployment Experience in Automation testing using Selenium Web Driver JUnit and Maven Responsible for overall Docker Kubernetes setup configuration and Architecture Integration and configuration of Amazon Web Services AWS with applications infrastructure Involved in writing Spring configuration XML file that contains declarations and business classes are wired up to frontend managed beans using IOC pattern Virtualized the servers using Docker for the test environments and devenvironments needs also configuration automation using Docker containers Imagesdata is stored on Amazon S3 buckets and rendered using lambda functions Configured and maintained a largescale Docker based PaaS environment using Kubernetes Virtualized the servers using Docker for the test environments and devenvironments needs also configuration automation using Docker containers DesignImplement large scale pubsub message queues using Apache Kafka Implemented all the components following testdriven development methodology using JUnit Used Maven for build framework and Jenkins for continuous build system Used Version one as the product management tool to complete stories and fixlog defects Used Log4J 282 as the logging framework to print information warning and exception data to the logs Fixed and tracked defects using Version One as the product management tool effectively Environment Java 18 J2EE Hibernate 43 Spring 4x Spring Boot Microservices JSP Servlets 22 JavaScriptjQuery Maven Angular Log4J REST SOAP WSDL HTML5 XML XSLT Jenkins SVN Oracle 9i Unix Bootstrap 21 Amazon Web services AWS EC2 Junit EasyMock Log4J Docker Kubernetes SoapUI Postman Git SQL HQL Oracle SQL Microsoft Visio Kafka Full Stack Java Developer Mastercard St Louis MO October 2017 to July 2018 Responsibilities Involved in Requirements gathering Analysis Design Development and Testing of the application using AGILE methodology SCRUM Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Designed Java Components and integrated using Spring framework with Hibernate ObjectRelational persistence mechanism Involved in writing Spring Configuration XML file that contains declarations and business classes are wiredup to the frontend managed beans using Spring IOC pattern Implemented the application using Spring IOC Spring MVC Framework and Spring Batch and handled the security using Spring Security Involved in installing upgrading configuring and Troubleshooting IBMWeb Sphere Application Server and IBM MQ on AIX and Linux Used Web Services for transmission of large blocks of XML data using SOAP Tested the application functionality with JUnit Test Cases Identified and fixed various production issues related to IBM MQ server on Linux UNIXand Windows system Involved in integrating JAXRS into Spring Boot application Implemented Microservices using Spring Boot Spring Cloud Spring Microservices Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code Pipeline and Amazon ECS Implemented Restful Web Services to retrieve data from client side using Microservices architecture Designed and developed DAO layer with Hibernate standards to access data from SQL Server Created SQL Server logins and assigning roles and Authentication models as a part of Security Used multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration container EKS focusing on highavailability fault tolerance and autoscaling Developed the persistence layer using Hibernate Framework created the POJO objects and mapped using Hibernate annotations and Transaction Management Used JIRA for bug tracking issue tracking and project management Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Environment Java Agile Methodology Microservices Spring IOC Spring MVC Drools Spring Boot Spring Cloud Spring Batch Spring Security HTML5 CSS3 Nodejs Bootstrap AngularJS JSTL jQuery AJAX AWS EC2 S3 Hibernate Restful API JIRA RabbitMQ MAVEN JUnit Log4J GIT JavaJ2EE Developer Computer Sciences Corporation Columbia MD April 2015 to September 2017 Responsibilities Responsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels Worked on SOA to develop RESTful Web service to generate and consume services from different modules Implemented MVC Framework to make single page applications SPAs for responsive services Developed the application using JSF Spring Framework that uses Model View Controller MVC architecture with JSP as the view and JQuery validation framework for front end validations Used MVC frameworks like Spring MVC along with JSF and Rich faces Involved in developing front end screens using JSF JSTL JQuery XHTML HTML5 CSS AJAX and JavaScript Also involved in adding the Internationalization to the existing application Used Spring ORM Support for Hibernate to manage Hibernate Resources and consistent exception hierarchy Integrated Spring DAO for data access using with Hibernate and Spring Validation Framework for Server side validation Used Spring MVC Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate Developed Business components using core java concepts like Interfaces Polymorphism Collections Serialization etc Used multithreading concepts to overcome errors in the process of concurrent quote transactions Deployed the application in clustered environments for load balancing and Server failover conditions Designed stored procedures triggers and functions in MySQL and DB2 for business critical requirements Created ER graphs and relationships among different database and creation tables with low coupling Developed generic database Connection Pooling with WebLogic Admin server using Spring SQL query optimization Developed objects using JMS API for asynchronous communication and used JMSMQ bridge as provider to send messages in a secure reliable and asynchronous method Involved in performing Unit and Integration testing JUnit Strictly followed TDD using Agile methodologies Used Apache JMeter for load testing and log4J for debugging with various levels Used Subversion for version control across common source code used by developers and deployed the applications on WebLogic Application Server Utilized Gradle for continuous integration Environment Java 16 J2EE JSP JSF JSTL Servlets Hibernate Spring MVC Spring Security MySQL SQL MySQL DB2 WebLogic Application Server JMS XML JavaScript JQuery SOAP UML SVN JUnit Log4J Gradle TDD JMeter JavaJ2EE Developer Netsmartz House Chandigarh Chandigarh June 2014 to March 2015 Responsibilities Used OOAD for building applications Involved in gathering business requirements analyzing the project and creating use Cases and Class Diagrams Created sequence diagrams collaboration diagrams class diagrams usecases and activity diagrams using Rational Rose for the Configuration Cache logging Services Designed and developed the project using MVC design pattern and developed front end using Spring MVC framework business components using Spring Developed Spring MVC validators to perform server side business object validations Developed user interface using JSP JSP Tag libraries Spring Tag libraries and Java Script to simplify the complexities of the application Developed RESTful API with Spring Framework for benchmarking purposes Implemented Spring framework in the presentation tier for all the essential control flow business level validations and for communicating with the business layer Worked on Spring Web Flow on Spring MVC to build an application from scratch using Spring XML configurations annotations Wrote controllers to handle incoming requests and send output to the UI Configured Used JSP JavaScript JSTL EL Custom Tag libraries Tiles Interceptors and Validations provided by Spring framework Wrote authentication and authorization classes and manage it in the front controller for all the users according to their entitlements using Spring security Implemented caching techniques wrote POJO classes for storing data and DAOs to retrieve the data and did other database configurations using Spring Developed SOAP based Web Services for Integrating with the Enterprise Information System Tier Involved in setting up Jenkins for continuous integration and continuous builds by polling the repositories Environment JavaJ2SE 15 JSP Servlets JAXB XSLT DOM XML Spring 30 Web Services JNDI J2EE RSA JBoss60 Rational Rose Spring CVS XML Log4J Oracle9i gradle Junit Jenkins Junit Rational Rose JavaScript DHTML Java Developer 4SquareLogic Jalandhar Punjab April 2013 to May 2014 Responsibilities Involved in complete SDLC management Requirements gathering Design Analysis Development and Testing Developed UML diagrams to develop use cases for Universitys Financial Services web application Implementing the Struts 13 framework for Model View Controller MVC pattern Used Struts framework along with JSP Servlets HTML CSS JQuery and JavaScript to construct dynamic web pages Performed validation for client side as well as server side with the help of Struts Validation Frame Work Involved in the implementation of Stateless session beans EJB for business logic layer and Entity beans for persistence Supported existing applications developed using Spring MVC AOP framework Used JPA mapping techniques such as One to One Many to One and Many to Many mappings to represent relation between various entities in the project Configured and used JBoss application server for creating Datasource and enabling JNDI for beans and database lookups Deployed components on JBoss and Web Sphere application server Worked Oracle database to create databases of student and faculty login information and their desired areas of study Developed codes for ActionServlet RequestProcessor and Action classes by extending Struts package Used EJB 30 Message Drive Beans to initiate daily process Executed quality and assurance testing in developed application reduced performance errors on average by 95 Resolved Blackboard problem tickets and made 100 follow ups maximizing the customer satisfaction Installed SSL certificates on the developed application Provided weekly status reports to the manager with the latest information of all ongoing activities Followed the Java coding standards for scalability reusability and ease of maintenance Environment Java 15 TDD Struts 13 EJB 30 Jquery JSP HTML CSS Servlets SOAP WSSecurity JMS MQ Eclipse SVN Ajax JNDI JBoss Selenium WebDriver Junit Skills Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxws Jboss Jms Jndi jquery Jsf Jsp Jta Rmi Servlet Struts Wsad Application server Additional Information TECHNICAL SKILLS Languages JavaJ2EE SQL PLSQL HTML DHTML JavaScript Perl UML XML XSL XSLT jQuery J2EE Standards JDBC JNDI Java Mail JTA Web Technologies JSP Servlet JAXWS AXIS REST JAXRS SOA SOAP JMS Bootstrap EJB AngularJS RMI IBM MQ Series Databases Oracle MySQL Sybase SQLServer2008 MongoDB IDEs Eclipse NetBeans Intellij Sublime Brackets RAD WSAD WebApp Servers WebSphere Application Server WebLogic JBoss Apache Tomcat Frameworks Struts Spring Spring Boot JSF Hibernate Apache Camel Operating Systems Windows UNIX Solaris Red Hat AIX Version Control Tools CVS SVN Git ClearCase ToolsUtilities Log4j Ant JUnit Caliber Maven Gradle 21 Jenkins SOAPUi AWS Methodologies Agile Scrum TDD Waterfall",
    "entities": [
        "Red Hat",
        "WebLogic Admin",
        "Amazon ECS Implemented Restful Web Services",
        "Test Driven Development TDD",
        "Visualizer",
        "WebSphere Application",
        "TFS CVS ClearCase",
        "Windows UNIX Solaris",
        "SVN Oracle",
        "AIX",
        "Implemented Spring",
        "SOA Web Services CXF XML Beans",
        "JMeter",
        "NetBeans Test Driven Programmer",
        "Version One",
        "MAVEN JUnit",
        "AIX Version",
        "Spring IOC",
        "Hibernate and Spring Validation Framework",
        "Spring Configuration XML",
        "IBM",
        "Architecture Integration",
        "Amazon Web Services AWS",
        "CSS Servlets SOAP",
        "XML",
        "Postman Git",
        "JavaJ2EE JSP Servlets",
        "Tiles Interceptors",
        "Hibernate Utility",
        "IBM WebSphere",
        "Developed Representational",
        "WebLogic",
        "Automation",
        "JUnit",
        "JUnit Strictly",
        "Linux Used Web Services",
        "Web Services for Integrating with the Enterprise Information System Tier Involved",
        "Amazon",
        "Hibernate Framework",
        "SQL Server",
        "Hartford CT",
        "Hibernate Spring",
        "Developed",
        "CSS Bootstrap",
        "Implemented MVC Framework",
        "UNIX Solaris",
        "Spring MVC",
        "Datasource",
        "UML",
        "Interfaces Polymorphism Collections Serialization",
        "Bootstrap Moved",
        "MQ",
        "UN",
        "Eclipse IBM Rational Application Developer WebSphere Integration Developer",
        "Universitys Financial Services",
        "HTML5",
        "ActionServlet RequestProcessor and Action",
        "SOA",
        "AGILE",
        "Spring Security",
        "Control Tools",
        "Simple Object Access Protocol",
        "JNDI",
        "jQuery Developed",
        "NetBeans Intellij Sublime Brackets RAD",
        "JSP",
        "Development of Cloud",
        "Oracle DB2",
        "Version",
        "Singleton Proficient",
        "IOC",
        "Created ER",
        "JBoss",
        "Docker",
        "Implemented Microservices",
        "HTML JSP JavaScript",
        "Kubernetes Virtualized",
        "MVC",
        "Agile",
        "EJB",
        "GIT",
        "Extreme Programming",
        "REST Microservices",
        "ANT Maven Gradle",
        "Worked Oracle",
        "Software Development and Testing Life Cycle",
        "Spring MVC AOP",
        "JSP Servlets HTML CSS JQuery",
        "Rational Rose for the Configuration Cache",
        "JSP JSP Tag",
        "TDD Experienced",
        "POJO",
        "JUnit Test Cases Identified",
        "Linux UNIXand Windows system Involved",
        "AWS",
        "Bootstrap Designed Java Components",
        "Server",
        "Selenium Webdriver Jbehive",
        "Microsoft Visio",
        "Oracle",
        "Singleton",
        "Hibernate ObjectRelational",
        "Generated Metrics",
        "JSF",
        "Requirements gathering Design Analysis Development and Testing Developed UML",
        "HTML",
        "Struts Validation Frame Work Involved",
        "Additional Information TECHNICAL SKILLS Languages JavaJ2EE",
        "SQL",
        "GitHub",
        "Test Driven Development",
        "MD",
        "AEM",
        "Hibernate Resources",
        "XML WML",
        "JAXRS",
        "Used Microservices",
        "Spring XML",
        "Maven Angular Log4J REST SOAP",
        "RMI IBM",
        "Imagesdata",
        "Handson",
        "Maven Responsible",
        "EL Custom Tag",
        "Nodejs Bootstrap",
        "DesignImplement",
        "JSF Spring Framework",
        "Netsmartz House",
        "Integrated Spring",
        "Maven",
        "XSLT",
        "lJavaspan",
        "Software Development Lifecycle SDLC Involved",
        "Hibernate",
        "Sequence Diagrams",
        "Hibernate Developed Business",
        "JavaScript",
        "United HealthCare Experienced JavaJ2EE",
        "JSP Servlets",
        "Cases",
        "BEA WebLogic",
        "SQL Server Created",
        "UI Enhancement",
        "WebLogic Application Server Utilized Gradle",
        "Transaction Management Used JIRA",
        "jQuery",
        "REST",
        "GIT JavaJ2EE Developer Computer Sciences Corporation Columbia",
        "AWS Solutions",
        "TDD",
        "NoSQL",
        "JSF JSTL",
        "java concepts",
        "TOAD",
        "Kubernetes Strong",
        "TDD Struts",
        "Java Hibernate Spring Jax Jaxws Jboss Jms Jndi"
    ],
    "experience": "Experience in utilizing opensource frameworks such as AngularJS NodeJS Struts Spring Hibernate JSF and Jquery Experience in consuming RESTful services using Angular http resource and jQuery to exchange request responses information with databases such as Oracle and MySQL Experience in developing web applications using JavaJ2EE JSP Servlets EJB JDBC Spring Struts JSF Hibernate Web Services and XML Expertise in SOA Web Services CXF XML Beans Apache Camel and XML technologies XSLT Xpath Proven software development experience using different methodologies Agile Waterfall and TDD Experienced in MEAN stack development MongoDB ExpressJS AngularJS NodeJS Handson experience in relational databases like Oracle 11 g MySQL MS SQL Server using SQL PLSQL programming and NoSQL database Mongo DB Strong experience in deploying J2EE components on JBOSS Apache Tomcat BEA WebLogic and IBM WebSphere application servers good exposure to cloud computing with Amazon Web ServicesAWS Thorough knowledge of Web technologies XML WML SAXDOM Parser AJAX HTML CSS Bootstrap and JavaScript Strong experience on various Java Design Patterns such as Session Faade DAO DTO Delegate Front Controller Factory Business Object Prototype and Singleton Proficient in integration of Enterprise Java Beans EJB with existing applications and using services provided in distributed applications through Web Services JAXRPC JAXWS JAXRS Extensive development experience on different IDEs like Eclipse IBM Rational Application Developer WebSphere Integration Developer and NetBeans Test Driven Programmer with thorough knowledge in Unit testing with JUnit Mockito and using SoapUI Postman for Web Service testing performance testing with JMeter and automated testing with Test Driven Development TDD in Extreme Programming model Experience in AWS Solutions using EC2 S3 RDS EBS Elastic Load Balancer Dynamo DB and Autoscaling Groups Experience with GitHub and AEM and container orchestration like Kubernetes Strong QA Automation experience with Selenium Webdriver Jbehive and Cucumber Expert in coding using core java concepts like multithreading collections serialization synchronization exception handling and database connections Experienced in writing complex Queries Stored procedures functions packages tables views and triggers with major databases such as Oracle DB2 and MySQL Experienced in database GUIIDE Tools using TOAD DB Visualizer and MySQL Client Strong experience working with version control software like TFS CVS ClearCase Apache SubVersion GIT and build tools ANT Maven Gradle and Jenkins Good working experience in operating systems like UNIX Solaris and Windows Skilled and experienced in cocoordinating efforts among multiple teams onsite and offshore and third parties Experience in handlingexecuting projects using Agile methodologies SCRUM along with Test Driven Development techniques Work Experience Full Stack Java Developer United HealthCare Hartford CT August 2018 to Present Responsibilities Developed the single page application following Agile Scrum participated in daily standups sprint reviews Kickoffs and used Jira for project management Responsible for requirements analysis technical design implementation and testing according to Software Development Lifecycle SDLC Involved in designing UML and Sequence Diagrams using Microsoft Visio to model the detail design of the application Used Microservices architecture with Spring boot to develop REST based Web Services with minimal configuration Implemented a Continuous Delivery pipeline with Development of Cloud deployed applications Implemented DAO layer using JPA Hibernate framework to interact with database Designed and developed web pages using HTML JSP JavaScript and XSLT involved in writing new JSPs designed pages using HTML and client validation using JavaScript and jQuery Developed single page applications using Angular Typescript HTML5 CSS3 and Bootstrap Moved the project to Java 8 to extensively use Lambda expressions and have better connectivity to Cloud in addition adding Spring Boot Libraries and UI Enhancement Extensively used Core Java API Spring API in developing the business logic All the functionality is implemented using Spring IOC Spring Boot and Hibernate ORM Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security models Designed and Developed Representational state transfer REST based services and Simple Object Access Protocol SOAP based services as part of the requirement Implemented REST Microservices using spring boot Generated Metrics with method level granularity and Persistence using Spring AOP and Spring Actuator Used spring config server for centralized configuration and Splunk for centralized logging Used Concourse and Jenkins for Microservices deployment Experience in Automation testing using Selenium Web Driver JUnit and Maven Responsible for overall Docker Kubernetes setup configuration and Architecture Integration and configuration of Amazon Web Services AWS with applications infrastructure Involved in writing Spring configuration XML file that contains declarations and business classes are wired up to frontend managed beans using IOC pattern Virtualized the servers using Docker for the test environments and devenvironments needs also configuration automation using Docker containers Imagesdata is stored on Amazon S3 buckets and rendered using lambda functions Configured and maintained a largescale Docker based PaaS environment using Kubernetes Virtualized the servers using Docker for the test environments and devenvironments needs also configuration automation using Docker containers DesignImplement large scale pubsub message queues using Apache Kafka Implemented all the components following testdriven development methodology using JUnit Used Maven for build framework and Jenkins for continuous build system Used Version one as the product management tool to complete stories and fixlog defects Used Log4J 282 as the logging framework to print information warning and exception data to the logs Fixed and tracked defects using Version One as the product management tool effectively Environment Java 18 J2EE Hibernate 43 Spring 4x Spring Boot Microservices JSP Servlets 22 JavaScriptjQuery Maven Angular Log4J REST SOAP WSDL HTML5 XML XSLT Jenkins SVN Oracle 9i Unix Bootstrap 21 Amazon Web services AWS EC2 Junit EasyMock Log4J Docker Kubernetes SoapUI Postman Git SQL HQL Oracle SQL Microsoft Visio Kafka Full Stack Java Developer Mastercard St Louis MO October 2017 to July 2018 Responsibilities Involved in Requirements gathering Analysis Design Development and Testing of the application using AGILE methodology SCRUM Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Designed Java Components and integrated using Spring framework with Hibernate ObjectRelational persistence mechanism Involved in writing Spring Configuration XML file that contains declarations and business classes are wiredup to the frontend managed beans using Spring IOC pattern Implemented the application using Spring IOC Spring MVC Framework and Spring Batch and handled the security using Spring Security Involved in installing upgrading configuring and Troubleshooting IBMWeb Sphere Application Server and IBM MQ on AIX and Linux Used Web Services for transmission of large blocks of XML data using SOAP Tested the application functionality with JUnit Test Cases Identified and fixed various production issues related to IBM MQ server on Linux UNIXand Windows system Involved in integrating JAXRS into Spring Boot application Implemented Microservices using Spring Boot Spring Cloud Spring Microservices Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code Pipeline and Amazon ECS Implemented Restful Web Services to retrieve data from client side using Microservices architecture Designed and developed DAO layer with Hibernate standards to access data from SQL Server Created SQL Server logins and assigning roles and Authentication models as a part of Security Used multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration container EKS focusing on highavailability fault tolerance and autoscaling Developed the persistence layer using Hibernate Framework created the POJO objects and mapped using Hibernate annotations and Transaction Management Used JIRA for bug tracking issue tracking and project management Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Environment Java Agile Methodology Microservices Spring IOC Spring MVC Drools Spring Boot Spring Cloud Spring Batch Spring Security HTML5 CSS3 Nodejs Bootstrap AngularJS JSTL jQuery AJAX AWS EC2 S3 Hibernate Restful API JIRA RabbitMQ MAVEN JUnit Log4J GIT JavaJ2EE Developer Computer Sciences Corporation Columbia MD April 2015 to September 2017 Responsibilities Responsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels Worked on SOA to develop RESTful Web service to generate and consume services from different modules Implemented MVC Framework to make single page applications SPAs for responsive services Developed the application using JSF Spring Framework that uses Model View Controller MVC architecture with JSP as the view and JQuery validation framework for front end validations Used MVC frameworks like Spring MVC along with JSF and Rich faces Involved in developing front end screens using JSF JSTL JQuery XHTML HTML5 CSS AJAX and JavaScript Also involved in adding the Internationalization to the existing application Used Spring ORM Support for Hibernate to manage Hibernate Resources and consistent exception hierarchy Integrated Spring DAO for data access using with Hibernate and Spring Validation Framework for Server side validation Used Spring MVC Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate Developed Business components using core java concepts like Interfaces Polymorphism Collections Serialization etc Used multithreading concepts to overcome errors in the process of concurrent quote transactions Deployed the application in clustered environments for load balancing and Server failover conditions Designed stored procedures triggers and functions in MySQL and DB2 for business critical requirements Created ER graphs and relationships among different database and creation tables with low coupling Developed generic database Connection Pooling with WebLogic Admin server using Spring SQL query optimization Developed objects using JMS API for asynchronous communication and used JMSMQ bridge as provider to send messages in a secure reliable and asynchronous method Involved in performing Unit and Integration testing JUnit Strictly followed TDD using Agile methodologies Used Apache JMeter for load testing and log4J for debugging with various levels Used Subversion for version control across common source code used by developers and deployed the applications on WebLogic Application Server Utilized Gradle for continuous integration Environment Java 16 J2EE JSP JSF JSTL Servlets Hibernate Spring MVC Spring Security MySQL SQL MySQL DB2 WebLogic Application Server JMS XML JavaScript JQuery SOAP UML SVN JUnit Log4J Gradle TDD JMeter JavaJ2EE Developer Netsmartz House Chandigarh Chandigarh June 2014 to March 2015 Responsibilities Used OOAD for building applications Involved in gathering business requirements analyzing the project and creating use Cases and Class Diagrams Created sequence diagrams collaboration diagrams class diagrams usecases and activity diagrams using Rational Rose for the Configuration Cache logging Services Designed and developed the project using MVC design pattern and developed front end using Spring MVC framework business components using Spring Developed Spring MVC validators to perform server side business object validations Developed user interface using JSP JSP Tag libraries Spring Tag libraries and Java Script to simplify the complexities of the application Developed RESTful API with Spring Framework for benchmarking purposes Implemented Spring framework in the presentation tier for all the essential control flow business level validations and for communicating with the business layer Worked on Spring Web Flow on Spring MVC to build an application from scratch using Spring XML configurations annotations Wrote controllers to handle incoming requests and send output to the UI Configured Used JSP JavaScript JSTL EL Custom Tag libraries Tiles Interceptors and Validations provided by Spring framework Wrote authentication and authorization classes and manage it in the front controller for all the users according to their entitlements using Spring security Implemented caching techniques wrote POJO classes for storing data and DAOs to retrieve the data and did other database configurations using Spring Developed SOAP based Web Services for Integrating with the Enterprise Information System Tier Involved in setting up Jenkins for continuous integration and continuous builds by polling the repositories Environment JavaJ2SE 15 JSP Servlets JAXB XSLT DOM XML Spring 30 Web Services JNDI J2EE RSA JBoss60 Rational Rose Spring CVS XML Log4J Oracle9i gradle Junit Jenkins Junit Rational Rose JavaScript DHTML Java Developer 4SquareLogic Jalandhar Punjab April 2013 to May 2014 Responsibilities Involved in complete SDLC management Requirements gathering Design Analysis Development and Testing Developed UML diagrams to develop use cases for Universitys Financial Services web application Implementing the Struts 13 framework for Model View Controller MVC pattern Used Struts framework along with JSP Servlets HTML CSS JQuery and JavaScript to construct dynamic web pages Performed validation for client side as well as server side with the help of Struts Validation Frame Work Involved in the implementation of Stateless session beans EJB for business logic layer and Entity beans for persistence Supported existing applications developed using Spring MVC AOP framework Used JPA mapping techniques such as One to One Many to One and Many to Many mappings to represent relation between various entities in the project Configured and used JBoss application server for creating Datasource and enabling JNDI for beans and database lookups Deployed components on JBoss and Web Sphere application server Worked Oracle database to create databases of student and faculty login information and their desired areas of study Developed codes for ActionServlet RequestProcessor and Action classes by extending Struts package Used EJB 30 Message Drive Beans to initiate daily process Executed quality and assurance testing in developed application reduced performance errors on average by 95 Resolved Blackboard problem tickets and made 100 follow ups maximizing the customer satisfaction Installed SSL certificates on the developed application Provided weekly status reports to the manager with the latest information of all ongoing activities Followed the Java coding standards for scalability reusability and ease of maintenance Environment Java 15 TDD Struts 13 EJB 30 Jquery JSP HTML CSS Servlets SOAP WSSecurity JMS MQ Eclipse SVN Ajax JNDI JBoss Selenium WebDriver Junit Skills Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxws Jboss Jms Jndi jquery Jsf Jsp Jta Rmi Servlet Struts Wsad Application server Additional Information TECHNICAL SKILLS Languages JavaJ2EE SQL PLSQL HTML DHTML JavaScript Perl UML XML XSL XSLT jQuery J2EE Standards JDBC JNDI Java Mail JTA Web Technologies JSP Servlet JAXWS AXIS REST JAXRS SOA SOAP JMS Bootstrap EJB AngularJS RMI IBM MQ Series Databases Oracle MySQL Sybase SQLServer2008 MongoDB IDEs Eclipse NetBeans Intellij Sublime Brackets RAD WSAD WebApp Servers WebSphere Application Server WebLogic JBoss Apache Tomcat Frameworks Struts Spring Spring Boot JSF Hibernate Apache Camel Operating Systems Windows UNIX Solaris Red Hat AIX Version Control Tools CVS SVN Git ClearCase ToolsUtilities Log4j Ant JUnit Caliber Maven Gradle 21 Jenkins SOAPUi AWS Methodologies Agile Scrum TDD Waterfall",
    "extracted_keywords": [
        "Stack",
        "Java",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "United",
        "HealthCare",
        "JavaJ2EE",
        "ground",
        "Software",
        "Development",
        "Testing",
        "Life",
        "Cycle",
        "years",
        "experience",
        "enterprise",
        "level",
        "Singlepage",
        "web",
        "Applications",
        "UN",
        "agency",
        "Banking",
        "Retail",
        "domains",
        "Experience",
        "frameworks",
        "AngularJS",
        "NodeJS",
        "Struts",
        "Spring",
        "Hibernate",
        "JSF",
        "Jquery",
        "Experience",
        "services",
        "http",
        "resource",
        "jQuery",
        "request",
        "responses",
        "information",
        "databases",
        "Oracle",
        "MySQL",
        "Experience",
        "web",
        "applications",
        "JavaJ2EE",
        "JSP",
        "Servlets",
        "EJB",
        "JDBC",
        "Spring",
        "Struts",
        "JSF",
        "Hibernate",
        "Web",
        "Services",
        "XML",
        "Expertise",
        "SOA",
        "Web",
        "Services",
        "CXF",
        "XML",
        "Beans",
        "Apache",
        "Camel",
        "XML",
        "technologies",
        "XSLT",
        "Xpath",
        "Proven",
        "software",
        "development",
        "experience",
        "methodologies",
        "Agile",
        "Waterfall",
        "TDD",
        "MEAN",
        "development",
        "ExpressJS",
        "AngularJS",
        "NodeJS",
        "Handson",
        "experience",
        "databases",
        "Oracle",
        "g",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "SQL",
        "PLSQL",
        "programming",
        "NoSQL",
        "database",
        "Mongo",
        "DB",
        "Strong",
        "experience",
        "J2EE",
        "components",
        "JBOSS",
        "Apache",
        "Tomcat",
        "BEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "application",
        "exposure",
        "cloud",
        "computing",
        "Amazon",
        "Web",
        "ServicesAWS",
        "knowledge",
        "Web",
        "technologies",
        "XML",
        "WML",
        "SAXDOM",
        "Parser",
        "AJAX",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Strong",
        "experience",
        "Java",
        "Design",
        "Patterns",
        "Session",
        "Faade",
        "DAO",
        "DTO",
        "Delegate",
        "Front",
        "Controller",
        "Factory",
        "Business",
        "Object",
        "Prototype",
        "Singleton",
        "Proficient",
        "integration",
        "Enterprise",
        "Java",
        "Beans",
        "EJB",
        "applications",
        "services",
        "applications",
        "Web",
        "Services",
        "JAXRPC",
        "JAXWS",
        "JAXRS",
        "development",
        "experience",
        "IDEs",
        "Eclipse",
        "IBM",
        "Rational",
        "Application",
        "Developer",
        "WebSphere",
        "Integration",
        "Developer",
        "NetBeans",
        "Programmer",
        "knowledge",
        "Unit",
        "testing",
        "JUnit",
        "Mockito",
        "SoapUI",
        "Postman",
        "Web",
        "Service",
        "testing",
        "performance",
        "testing",
        "JMeter",
        "testing",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Extreme",
        "Programming",
        "model",
        "Experience",
        "AWS",
        "Solutions",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Dynamo",
        "DB",
        "Autoscaling",
        "Groups",
        "Experience",
        "GitHub",
        "AEM",
        "container",
        "orchestration",
        "Kubernetes",
        "Strong",
        "QA",
        "Automation",
        "experience",
        "Selenium",
        "Webdriver",
        "Jbehive",
        "Cucumber",
        "Expert",
        "core",
        "concepts",
        "collections",
        "serialization",
        "synchronization",
        "exception",
        "handling",
        "database",
        "connections",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "DB2",
        "MySQL",
        "database",
        "GUIIDE",
        "Tools",
        "TOAD",
        "DB",
        "Visualizer",
        "MySQL",
        "Client",
        "Strong",
        "experience",
        "version",
        "control",
        "software",
        "TFS",
        "CVS",
        "ClearCase",
        "Apache",
        "SubVersion",
        "GIT",
        "tools",
        "ANT",
        "Maven",
        "Gradle",
        "Jenkins",
        "Good",
        "working",
        "experience",
        "operating",
        "systems",
        "UNIX",
        "Solaris",
        "Windows",
        "Skilled",
        "efforts",
        "teams",
        "parties",
        "Experience",
        "handlingexecuting",
        "projects",
        "methodologies",
        "Test",
        "Driven",
        "Development",
        "techniques",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "United",
        "HealthCare",
        "Hartford",
        "CT",
        "August",
        "Present",
        "Responsibilities",
        "page",
        "application",
        "Agile",
        "Scrum",
        "standups",
        "sprint",
        "Kickoffs",
        "Jira",
        "project",
        "management",
        "requirements",
        "analysis",
        "design",
        "implementation",
        "testing",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "UML",
        "Sequence",
        "Diagrams",
        "Microsoft",
        "Visio",
        "detail",
        "design",
        "application",
        "Microservices",
        "architecture",
        "Spring",
        "boot",
        "REST",
        "Web",
        "Services",
        "configuration",
        "Continuous",
        "Delivery",
        "pipeline",
        "Development",
        "Cloud",
        "applications",
        "DAO",
        "layer",
        "JPA",
        "Hibernate",
        "framework",
        "database",
        "web",
        "pages",
        "HTML",
        "JSP",
        "JavaScript",
        "XSLT",
        "JSPs",
        "pages",
        "HTML",
        "client",
        "validation",
        "JavaScript",
        "jQuery",
        "page",
        "applications",
        "Angular",
        "Typescript",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "project",
        "Java",
        "Lambda",
        "expressions",
        "connectivity",
        "Cloud",
        "addition",
        "Spring",
        "Boot",
        "Libraries",
        "UI",
        "Enhancement",
        "Core",
        "Java",
        "API",
        "Spring",
        "API",
        "business",
        "logic",
        "functionality",
        "Spring",
        "IOC",
        "Spring",
        "Boot",
        "Hibernate",
        "ORM",
        "Java",
        "EE",
        "components",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "transactions",
        "Spring",
        "security",
        "models",
        "Developed",
        "state",
        "transfer",
        "REST",
        "services",
        "Simple",
        "Object",
        "Access",
        "Protocol",
        "SOAP",
        "services",
        "part",
        "requirement",
        "REST",
        "Microservices",
        "spring",
        "boot",
        "Metrics",
        "method",
        "level",
        "granularity",
        "Persistence",
        "Spring",
        "AOP",
        "Spring",
        "Actuator",
        "spring",
        "config",
        "server",
        "configuration",
        "Splunk",
        "Concourse",
        "Jenkins",
        "Microservices",
        "deployment",
        "Experience",
        "Automation",
        "testing",
        "Selenium",
        "Web",
        "Driver",
        "JUnit",
        "Maven",
        "Responsible",
        "Docker",
        "Kubernetes",
        "setup",
        "configuration",
        "Architecture",
        "Integration",
        "configuration",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "infrastructure",
        "Spring",
        "configuration",
        "XML",
        "file",
        "declarations",
        "business",
        "classes",
        "beans",
        "IOC",
        "pattern",
        "servers",
        "Docker",
        "test",
        "environments",
        "devenvironments",
        "configuration",
        "automation",
        "Docker",
        "containers",
        "Imagesdata",
        "Amazon",
        "S3",
        "buckets",
        "lambda",
        "functions",
        "largescale",
        "Docker",
        "PaaS",
        "environment",
        "Kubernetes",
        "servers",
        "Docker",
        "test",
        "environments",
        "devenvironments",
        "configuration",
        "automation",
        "Docker",
        "containers",
        "DesignImplement",
        "scale",
        "message",
        "queues",
        "Apache",
        "Kafka",
        "components",
        "testdriven",
        "development",
        "methodology",
        "JUnit",
        "Maven",
        "build",
        "framework",
        "Jenkins",
        "build",
        "system",
        "Version",
        "one",
        "product",
        "management",
        "tool",
        "stories",
        "fixlog",
        "defects",
        "Log4J",
        "framework",
        "information",
        "warning",
        "exception",
        "data",
        "logs",
        "defects",
        "Version",
        "One",
        "product",
        "management",
        "tool",
        "Environment",
        "Java",
        "J2EE",
        "Hibernate",
        "Spring",
        "Spring",
        "Boot",
        "Microservices",
        "JSP",
        "Servlets",
        "JavaScriptjQuery",
        "Maven",
        "Angular",
        "REST",
        "SOAP",
        "WSDL",
        "HTML5",
        "XML",
        "XSLT",
        "Jenkins",
        "SVN",
        "Oracle",
        "9i",
        "Unix",
        "Bootstrap",
        "Amazon",
        "Web",
        "services",
        "EC2",
        "Junit",
        "EasyMock",
        "Docker",
        "Kubernetes",
        "SoapUI",
        "Postman",
        "Git",
        "SQL",
        "HQL",
        "Oracle",
        "SQL",
        "Microsoft",
        "Visio",
        "Kafka",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Mastercard",
        "St",
        "Louis",
        "MO",
        "October",
        "July",
        "Responsibilities",
        "Requirements",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "application",
        "methodology",
        "web",
        "interface",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AngularJS",
        "Bootstrap",
        "Java",
        "Components",
        "Spring",
        "framework",
        "Hibernate",
        "ObjectRelational",
        "persistence",
        "mechanism",
        "Spring",
        "Configuration",
        "XML",
        "file",
        "declarations",
        "business",
        "classes",
        "frontend",
        "beans",
        "Spring",
        "IOC",
        "pattern",
        "application",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Framework",
        "Spring",
        "Batch",
        "security",
        "Spring",
        "Security",
        "configuring",
        "Troubleshooting",
        "IBMWeb",
        "Sphere",
        "Application",
        "Server",
        "IBM",
        "MQ",
        "AIX",
        "Linux",
        "Web",
        "Services",
        "transmission",
        "blocks",
        "XML",
        "data",
        "SOAP",
        "application",
        "functionality",
        "JUnit",
        "Test",
        "Cases",
        "production",
        "issues",
        "IBM",
        "MQ",
        "server",
        "Linux",
        "UNIXand",
        "Windows",
        "system",
        "JAXRS",
        "Spring",
        "Boot",
        "application",
        "Microservices",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Microservices",
        "Docker",
        "image",
        "services",
        "Docker",
        "file",
        "delivery",
        "pipeline",
        "containers",
        "AWS",
        "Code",
        "Pipeline",
        "Amazon",
        "ECS",
        "Restful",
        "Web",
        "Services",
        "data",
        "client",
        "side",
        "Microservices",
        "architecture",
        "DAO",
        "layer",
        "Hibernate",
        "standards",
        "data",
        "SQL",
        "Server",
        "Created",
        "SQL",
        "Server",
        "roles",
        "Authentication",
        "models",
        "part",
        "Security",
        "programming",
        "performance",
        "Singleton",
        "design",
        "pattern",
        "Hibernate",
        "Utility",
        "class",
        "application",
        "AWS",
        "stack",
        "EC2",
        "Mongo",
        "DB",
        "Docker",
        "Kubernetes",
        "Orchestration",
        "container",
        "EKS",
        "highavailability",
        "fault",
        "tolerance",
        "persistence",
        "layer",
        "Hibernate",
        "Framework",
        "POJO",
        "objects",
        "Hibernate",
        "annotations",
        "Transaction",
        "Management",
        "JIRA",
        "bug",
        "issue",
        "tracking",
        "project",
        "management",
        "GIT",
        "source",
        "control",
        "management",
        "speed",
        "advantage",
        "systems",
        "server",
        "Environment",
        "Java",
        "Agile",
        "Methodology",
        "Microservices",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Drools",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "HTML5",
        "CSS3",
        "Nodejs",
        "Bootstrap",
        "AngularJS",
        "JSTL",
        "jQuery",
        "AJAX",
        "EC2",
        "S3",
        "Hibernate",
        "Restful",
        "API",
        "JIRA",
        "RabbitMQ",
        "MAVEN",
        "JUnit",
        "Log4J",
        "GIT",
        "JavaJ2EE",
        "Developer",
        "Computer",
        "Sciences",
        "Corporation",
        "Columbia",
        "MD",
        "April",
        "September",
        "Responsibilities",
        "requirements",
        "client",
        "business",
        "unit",
        "design",
        "discussions",
        "implementation",
        "feasibility",
        "analysis",
        "business",
        "analysts",
        "levels",
        "SOA",
        "Web",
        "service",
        "services",
        "modules",
        "MVC",
        "Framework",
        "page",
        "applications",
        "SPAs",
        "services",
        "application",
        "JSF",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "JSP",
        "view",
        "JQuery",
        "validation",
        "framework",
        "end",
        "validations",
        "MVC",
        "frameworks",
        "Spring",
        "MVC",
        "JSF",
        "Rich",
        "end",
        "screens",
        "JSF",
        "JSTL",
        "JQuery",
        "XHTML",
        "HTML5",
        "CSS",
        "AJAX",
        "JavaScript",
        "Internationalization",
        "application",
        "Spring",
        "ORM",
        "Support",
        "Hibernate",
        "Hibernate",
        "Resources",
        "exception",
        "hierarchy",
        "Integrated",
        "Spring",
        "DAO",
        "data",
        "access",
        "Hibernate",
        "Spring",
        "Validation",
        "Framework",
        "Server",
        "side",
        "validation",
        "Spring",
        "MVC",
        "Spring",
        "ORM",
        "Spring",
        "Security",
        "modules",
        "MySQL",
        "database",
        "persistence",
        "layer",
        "Hibernate",
        "Developed",
        "Business",
        "components",
        "core",
        "concepts",
        "Interfaces",
        "Polymorphism",
        "Collections",
        "Serialization",
        "concepts",
        "errors",
        "process",
        "quote",
        "transactions",
        "application",
        "environments",
        "load",
        "balancing",
        "Server",
        "conditions",
        "procedures",
        "triggers",
        "functions",
        "MySQL",
        "DB2",
        "business",
        "requirements",
        "ER",
        "graphs",
        "relationships",
        "database",
        "creation",
        "tables",
        "coupling",
        "database",
        "Connection",
        "Pooling",
        "WebLogic",
        "Admin",
        "server",
        "Spring",
        "SQL",
        "query",
        "optimization",
        "Developed",
        "objects",
        "JMS",
        "API",
        "communication",
        "JMSMQ",
        "bridge",
        "provider",
        "messages",
        "method",
        "Unit",
        "Integration",
        "testing",
        "JUnit",
        "TDD",
        "methodologies",
        "Apache",
        "JMeter",
        "load",
        "testing",
        "levels",
        "Subversion",
        "version",
        "control",
        "source",
        "code",
        "developers",
        "applications",
        "WebLogic",
        "Application",
        "Server",
        "Gradle",
        "integration",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "JSF",
        "JSTL",
        "Servlets",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "MySQL",
        "SQL",
        "MySQL",
        "DB2",
        "WebLogic",
        "Application",
        "Server",
        "JMS",
        "XML",
        "JavaScript",
        "JQuery",
        "SOAP",
        "UML",
        "SVN",
        "JUnit",
        "Log4J",
        "Gradle",
        "TDD",
        "JMeter",
        "JavaJ2EE",
        "Developer",
        "Netsmartz",
        "House",
        "Chandigarh",
        "Chandigarh",
        "June",
        "March",
        "Responsibilities",
        "OOAD",
        "building",
        "applications",
        "business",
        "requirements",
        "project",
        "use",
        "Cases",
        "Class",
        "Diagrams",
        "Created",
        "sequence",
        "diagrams",
        "collaboration",
        "diagrams",
        "class",
        "diagrams",
        "usecases",
        "activity",
        "diagrams",
        "Rational",
        "Rose",
        "Configuration",
        "Cache",
        "Services",
        "project",
        "MVC",
        "design",
        "pattern",
        "end",
        "Spring",
        "MVC",
        "framework",
        "business",
        "components",
        "Spring",
        "Developed",
        "Spring",
        "MVC",
        "validators",
        "server",
        "side",
        "business",
        "object",
        "user",
        "interface",
        "JSP",
        "JSP",
        "Tag",
        "Spring",
        "Tag",
        "libraries",
        "Java",
        "Script",
        "complexities",
        "application",
        "API",
        "Spring",
        "Framework",
        "purposes",
        "Spring",
        "framework",
        "presentation",
        "tier",
        "control",
        "flow",
        "business",
        "level",
        "validations",
        "business",
        "layer",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "MVC",
        "application",
        "scratch",
        "Spring",
        "XML",
        "configurations",
        "annotations",
        "Wrote",
        "requests",
        "output",
        "UI",
        "JSP",
        "JavaScript",
        "JSTL",
        "EL",
        "Custom",
        "Tag",
        "Tiles",
        "Interceptors",
        "Validations",
        "Spring",
        "framework",
        "authentication",
        "authorization",
        "classes",
        "controller",
        "users",
        "entitlements",
        "Spring",
        "security",
        "techniques",
        "POJO",
        "classes",
        "data",
        "DAOs",
        "data",
        "database",
        "configurations",
        "Spring",
        "Developed",
        "SOAP",
        "Web",
        "Services",
        "Enterprise",
        "Information",
        "System",
        "Tier",
        "Jenkins",
        "integration",
        "builds",
        "repositories",
        "Environment",
        "JavaJ2SE",
        "JSP",
        "Servlets",
        "JAXB",
        "XSLT",
        "DOM",
        "XML",
        "Spring",
        "Web",
        "Services",
        "JNDI",
        "J2EE",
        "RSA",
        "JBoss60",
        "Rational",
        "Rose",
        "Spring",
        "CVS",
        "XML",
        "Log4J",
        "Oracle9i",
        "gradle",
        "Junit",
        "Jenkins",
        "Junit",
        "Rational",
        "Rose",
        "JavaScript",
        "DHTML",
        "Java",
        "Developer",
        "4SquareLogic",
        "Jalandhar",
        "Punjab",
        "April",
        "May",
        "Responsibilities",
        "SDLC",
        "management",
        "Requirements",
        "Design",
        "Analysis",
        "Development",
        "Testing",
        "UML",
        "diagrams",
        "use",
        "cases",
        "Universitys",
        "Financial",
        "Services",
        "web",
        "application",
        "Struts",
        "framework",
        "Model",
        "View",
        "Controller",
        "MVC",
        "pattern",
        "Struts",
        "framework",
        "JSP",
        "Servlets",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "web",
        "pages",
        "validation",
        "client",
        "side",
        "server",
        "side",
        "help",
        "Struts",
        "Validation",
        "Frame",
        "Work",
        "implementation",
        "session",
        "beans",
        "EJB",
        "business",
        "logic",
        "layer",
        "Entity",
        "beans",
        "persistence",
        "applications",
        "Spring",
        "MVC",
        "AOP",
        "framework",
        "JPA",
        "mapping",
        "techniques",
        "mappings",
        "relation",
        "entities",
        "project",
        "JBoss",
        "application",
        "server",
        "Datasource",
        "JNDI",
        "beans",
        "database",
        "lookups",
        "components",
        "JBoss",
        "Web",
        "Sphere",
        "application",
        "server",
        "Worked",
        "Oracle",
        "database",
        "databases",
        "student",
        "faculty",
        "login",
        "information",
        "areas",
        "study",
        "codes",
        "ActionServlet",
        "RequestProcessor",
        "Action",
        "classes",
        "Struts",
        "package",
        "EJB",
        "Message",
        "Drive",
        "Beans",
        "process",
        "quality",
        "assurance",
        "testing",
        "application",
        "performance",
        "errors",
        "Resolved",
        "Blackboard",
        "problem",
        "tickets",
        "follow",
        "ups",
        "customer",
        "satisfaction",
        "SSL",
        "certificates",
        "application",
        "status",
        "reports",
        "manager",
        "information",
        "activities",
        "Java",
        "standards",
        "scalability",
        "reusability",
        "ease",
        "maintenance",
        "Environment",
        "Java",
        "TDD",
        "Struts",
        "EJB",
        "Jquery",
        "JSP",
        "HTML",
        "CSS",
        "Servlets",
        "SOAP",
        "WSSecurity",
        "JMS",
        "MQ",
        "Eclipse",
        "SVN",
        "Ajax",
        "JNDI",
        "JBoss",
        "Selenium",
        "WebDriver",
        "Junit",
        "Skills",
        "Eclipse",
        "Ejb",
        "J2ee",
        "Java",
        "Hibernate",
        "Spring",
        "Jax",
        "Jaxws",
        "Jboss",
        "Jms",
        "Jndi",
        "jquery",
        "Jsf",
        "Jsp",
        "Jta",
        "Rmi",
        "Servlet",
        "Struts",
        "Wsad",
        "Application",
        "server",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "JavaJ2EE",
        "SQL",
        "PLSQL",
        "HTML",
        "DHTML",
        "JavaScript",
        "Perl",
        "UML",
        "XML",
        "XSL",
        "XSLT",
        "jQuery",
        "J2EE",
        "Standards",
        "JDBC",
        "JNDI",
        "Java",
        "Mail",
        "JTA",
        "Web",
        "Technologies",
        "JSP",
        "Servlet",
        "JAXWS",
        "REST",
        "JAXRS",
        "SOA",
        "SOAP",
        "JMS",
        "Bootstrap",
        "EJB",
        "AngularJS",
        "RMI",
        "IBM",
        "MQ",
        "Series",
        "Databases",
        "Oracle",
        "MySQL",
        "Sybase",
        "SQLServer2008",
        "MongoDB",
        "IDEs",
        "Eclipse",
        "NetBeans",
        "Intellij",
        "Sublime",
        "Brackets",
        "RAD",
        "WSAD",
        "WebApp",
        "Servers",
        "WebSphere",
        "Application",
        "Server",
        "WebLogic",
        "JBoss",
        "Apache",
        "Tomcat",
        "Frameworks",
        "Struts",
        "Spring",
        "Spring",
        "Boot",
        "JSF",
        "Hibernate",
        "Apache",
        "Camel",
        "Operating",
        "Systems",
        "Windows",
        "UNIX",
        "Solaris",
        "Red",
        "Hat",
        "AIX",
        "Version",
        "Control",
        "Tools",
        "CVS",
        "SVN",
        "Git",
        "ClearCase",
        "ToolsUtilities",
        "Log4j",
        "Ant",
        "JUnit",
        "Caliber",
        "Maven",
        "Gradle",
        "Jenkins",
        "SOAPUi",
        "AWS",
        "Methodologies",
        "Agile",
        "Scrum",
        "TDD",
        "Waterfall"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:36:52.276212",
    "resume_data": "Full Stack Java Developer Full Stack span lJavaspan span lDeveloperspan Full Stack Java Developer United HealthCare Experienced JavaJ2EE professional with extensive back ground in Software Development and Testing Life Cycle Over 6 years of experience in designing and developing enterprise level multitier and Singlepage web Applications in UN agency Banking and Retail domains Experience in utilizing opensource frameworks such as AngularJS NodeJS Struts Spring Hibernate JSF and Jquery Experience in consuming RESTful services using Angular http resource and jQuery to exchange request responses information with databases such as Oracle and MySQL Experience in developing web applications using JavaJ2EE JSP Servlets EJB JDBC Spring Struts JSF Hibernate Web Services and XML Expertise in SOA Web Services CXF XML Beans Apache Camel and XML technologies XSLT Xpath Proven software development experience using different methodologies Agile Waterfall and TDD Experienced in MEAN stack development MongoDB ExpressJS AngularJS NodeJS Handson experience in relational databases like Oracle 11g MySQL MS SQL Server using SQL PLSQL programming and NoSQL database Mongo DB Strong experience in deploying J2EE components on JBOSS Apache Tomcat BEA WebLogic and IBM WebSphere application servers good exposure to cloud computing with Amazon Web ServicesAWS Thorough knowledge of Web technologies XML WML SAXDOM Parser AJAX HTML CSS Bootstrap and JavaScript Strong experience on various Java Design Patterns such as Session Faade DAO DTO Delegate Front Controller Factory Business Object Prototype and Singleton Proficient in integration of Enterprise Java Beans EJB with existing applications and using services provided in distributed applications through Web Services JAXRPC JAXWS JAXRS Extensive development experience on different IDEs like Eclipse IBM Rational Application Developer WebSphere Integration Developer and NetBeans Test Driven Programmer with thorough knowledge in Unit testing with JUnit Mockito and using SoapUI Postman for Web Service testing performance testing with JMeter and automated testing with Test Driven Development TDD in Extreme Programming model Experience in AWS Solutions using EC2 S3 RDS EBS Elastic Load Balancer Dynamo DB and Autoscaling Groups Experience with GitHub and AEM and container orchestration like Kubernetes Strong QA Automation experience with Selenium Webdriver Jbehive and Cucumber Expert in coding using core java concepts like multithreading collections serialization synchronization exception handling and database connections Experienced in writing complex Queries Stored procedures functions packages tables views and triggers with major databases such as Oracle DB2 and MySQL Experienced in database GUIIDE Tools using TOAD DB Visualizer and MySQL Client Strong experience working with version control software like TFS CVS ClearCase Apache SubVersion GIT and build tools ANT Maven Gradle and Jenkins Good working experience in operating systems like UNIX Solaris and Windows Skilled and experienced in cocoordinating efforts among multiple teams onsite and offshore and third parties Experience in handlingexecuting projects using Agile methodologies SCRUM along with Test Driven Development techniques Work Experience Full Stack Java Developer United HealthCare Hartford CT August 2018 to Present Responsibilities Developed the single page application following Agile Scrum participated in daily standups sprint reviews Kickoffs and used Jira for project management Responsible for requirements analysis technical design implementation and testing according to Software Development Lifecycle SDLC Involved in designing UML and Sequence Diagrams using Microsoft Visio to model the detail design of the application Used Microservices architecture with Spring boot to develop REST based Web Services with minimal configuration Implemented a Continuous Delivery pipeline with Development of Cloud deployed applications Implemented DAO layer using JPA Hibernate framework to interact with database Designed and developed web pages using HTML JSP JavaScript and XSLT involved in writing new JSPs designed pages using HTML and client validation using JavaScript and jQuery Developed single page applications using Angular Typescript HTML5 CSS3 and Bootstrap Moved the project to Java 8 to extensively use Lambda expressions and have better connectivity to Cloud in addition adding Spring Boot Libraries and UI Enhancement Extensively used Core Java API Spring API in developing the business logic All the functionality is implemented using Spring IOC Spring Boot and Hibernate ORM Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security models Designed and Developed Representational state transfer REST based services and Simple Object Access Protocol SOAP based services as part of the requirement Implemented REST Microservices using spring boot Generated Metrics with method level granularity and Persistence using Spring AOP and Spring Actuator Used spring config server for centralized configuration and Splunk for centralized logging Used Concourse and Jenkins for Microservices deployment Experience in Automation testing using Selenium Web Driver JUnit and Maven Responsible for overall Docker Kubernetes setup configuration and Architecture Integration and configuration of Amazon Web Services AWS with applications infrastructure Involved in writing Spring configuration XML file that contains declarations and business classes are wired up to frontend managed beans using IOC pattern Virtualized the servers using Docker for the test environments and devenvironments needs also configuration automation using Docker containers Imagesdata is stored on Amazon S3 buckets and rendered using lambda functions Configured and maintained a largescale Docker based PaaS environment using Kubernetes Virtualized the servers using Docker for the test environments and devenvironments needs also configuration automation using Docker containers DesignImplement large scale pubsub message queues using Apache Kafka Implemented all the components following testdriven development methodology using JUnit Used Maven for build framework and Jenkins for continuous build system Used Version one as the product management tool to complete stories and fixlog defects Used Log4J 282 as the logging framework to print information warning and exception data to the logs Fixed and tracked defects using Version One as the product management tool effectively Environment Java 18 J2EE Hibernate 43 Spring 4x Spring Boot Microservices JSP Servlets 22 JavaScriptjQuery Maven Angular Log4J REST SOAP WSDL HTML5 XML XSLT Jenkins SVN Oracle 9i Unix Bootstrap 21 Amazon Web services AWS EC2 Junit EasyMock Log4J Docker Kubernetes SoapUI Postman Git SQL HQL Oracle SQL Microsoft Visio Kafka Full Stack Java Developer Mastercard St Louis MO October 2017 to July 2018 Responsibilities Involved in Requirements gathering Analysis Design Development and Testing of the application using AGILE methodology SCRUM Developed the web interface using HTML5 CSS3 JavaScript jQuery AngularJS and Bootstrap Designed Java Components and integrated using Spring framework with Hibernate ObjectRelational persistence mechanism Involved in writing Spring Configuration XML file that contains declarations and business classes are wiredup to the frontend managed beans using Spring IOC pattern Implemented the application using Spring IOC Spring MVC Framework and Spring Batch and handled the security using Spring Security Involved in installing upgrading configuring and Troubleshooting IBMWeb Sphere Application Server and IBM MQ on AIX and Linux Used Web Services for transmission of large blocks of XML data using SOAP Tested the application functionality with JUnit Test Cases Identified and fixed various production issues related to IBM MQ server on Linux UNIXand Windows system Involved in integrating JAXRS into Spring Boot application Implemented Microservices using Spring Boot Spring Cloud Spring Microservices Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code Pipeline and Amazon ECS Implemented Restful Web Services to retrieve data from client side using Microservices architecture Designed and developed DAO layer with Hibernate standards to access data from SQL Server Created SQL Server logins and assigning roles and Authentication models as a part of Security Used multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration container EKS focusing on highavailability fault tolerance and autoscaling Developed the persistence layer using Hibernate Framework created the POJO objects and mapped using Hibernate annotations and Transaction Management Used JIRA for bug tracking issue tracking and project management Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server Environment Java Agile Methodology Microservices Spring IOC Spring MVC Drools Spring Boot Spring Cloud Spring Batch Spring Security HTML5 CSS3 Nodejs Bootstrap AngularJS JSTL jQuery AJAX AWS EC2 S3 Hibernate Restful API JIRA RabbitMQ MAVEN JUnit Log4J GIT JavaJ2EE Developer Computer Sciences Corporation Columbia MD April 2015 to September 2017 Responsibilities Responsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels Worked on SOA to develop RESTful Web service to generate and consume services from different modules Implemented MVC Framework to make single page applications SPAs for responsive services Developed the application using JSF Spring Framework that uses Model View Controller MVC architecture with JSP as the view and JQuery validation framework for front end validations Used MVC frameworks like Spring MVC along with JSF and Rich faces Involved in developing front end screens using JSF JSTL JQuery XHTML HTML5 CSS AJAX and JavaScript Also involved in adding the Internationalization to the existing application Used Spring ORM Support for Hibernate to manage Hibernate Resources and consistent exception hierarchy Integrated Spring DAO for data access using with Hibernate and Spring Validation Framework for Server side validation Used Spring MVC Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate Developed Business components using core java concepts like Interfaces Polymorphism Collections Serialization etc Used multithreading concepts to overcome errors in the process of concurrent quote transactions Deployed the application in clustered environments for load balancing and Server failover conditions Designed stored procedures triggers and functions in MySQL and DB2 for business critical requirements Created ER graphs and relationships among different database and creation tables with low coupling Developed generic database Connection Pooling with WebLogic Admin server using Spring SQL query optimization Developed objects using JMS API for asynchronous communication and used JMSMQ bridge as provider to send messages in a secure reliable and asynchronous method Involved in performing Unit and Integration testing JUnit Strictly followed TDD using Agile methodologies Used Apache JMeter for load testing and log4J for debugging with various levels Used Subversion for version control across common source code used by developers and deployed the applications on WebLogic Application Server Utilized Gradle for continuous integration Environment Java 16 J2EE JSP JSF JSTL Servlets Hibernate Spring MVC Spring Security MySQL SQL MySQL DB2 WebLogic Application Server JMS XML JavaScript JQuery SOAP UML SVN JUnit Log4J Gradle TDD JMeter JavaJ2EE Developer Netsmartz House Chandigarh Chandigarh June 2014 to March 2015 Responsibilities Used OOAD for building applications Involved in gathering business requirements analyzing the project and creating use Cases and Class Diagrams Created sequence diagrams collaboration diagrams class diagrams usecases and activity diagrams using Rational Rose for the Configuration Cache logging Services Designed and developed the project using MVC design pattern and developed front end using Spring MVC framework business components using Spring Developed Spring MVC validators to perform server side business object validations Developed user interface using JSP JSP Tag libraries Spring Tag libraries and Java Script to simplify the complexities of the application Developed RESTful API with Spring Framework for benchmarking purposes Implemented Spring framework in the presentation tier for all the essential control flow business level validations and for communicating with the business layer Worked on Spring Web Flow on Spring MVC to build an application from scratch using Spring XML configurations annotations Wrote controllers to handle incoming requests and send output to the UI Configured Used JSP JavaScript JSTL EL Custom Tag libraries Tiles Interceptors and Validations provided by Spring framework Wrote authentication and authorization classes and manage it in the front controller for all the users according to their entitlements using Spring security Implemented caching techniques wrote POJO classes for storing data and DAOs to retrieve the data and did other database configurations using Spring Developed SOAP based Web Services for Integrating with the Enterprise Information System Tier Involved in setting up Jenkins for continuous integration and continuous builds by polling the repositories Environment JavaJ2SE 15 JSP Servlets JAXB XSLT DOM XML Spring 30 Web Services JNDI J2EE RSA JBoss60 Rational Rose Spring CVS XML Log4J Oracle9i gradle Junit Jenkins Junit Rational Rose JavaScript DHTML Java Developer 4SquareLogic Jalandhar Punjab April 2013 to May 2014 Responsibilities Involved in complete SDLC management Requirements gathering Design Analysis Development and Testing Developed UML diagrams to develop use cases for Universitys Financial Services web application Implementing the Struts 13 framework for Model View Controller MVC pattern Used Struts framework along with JSP Servlets HTML CSS JQuery and JavaScript to construct dynamic web pages Performed validation for client side as well as server side with the help of Struts Validation Frame Work Involved in the implementation of Stateless session beans EJB for business logic layer and Entity beans for persistence Supported existing applications developed using Spring MVC AOP framework Used JPA mapping techniques such as One to One Many to One and Many to Many mappings to represent relation between various entities in the project Configured and used JBoss application server for creating Datasource and enabling JNDI for beans and database lookups Deployed components on JBoss and Web Sphere application server Worked Oracle database to create databases of student and faculty login information and their desired areas of study Developed codes for ActionServlet RequestProcessor and Action classes by extending Struts package Used EJB 30 Message Drive Beans to initiate daily process Executed quality and assurance testing in developed application reduced performance errors on average by 95 Resolved Blackboard problem tickets and made 100 follow ups maximizing the customer satisfaction Installed SSL certificates on the developed application Provided weekly status reports to the manager with the latest information of all ongoing activities Followed the Java coding standards for scalability reusability and ease of maintenance Environment Java 15 TDD Struts 13 EJB 30 Jquery JSP HTML CSS Servlets SOAP WSSecurity JMS MQ Eclipse SVN Ajax JNDI JBoss Selenium WebDriver Junit Skills Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxws Jboss Jms Jndi jquery Jsf Jsp Jta Rmi Servlet Struts Wsad Application server Additional Information TECHNICAL SKILLS Languages JavaJ2EE SQL PLSQL HTML DHTML JavaScript Perl UML XML XSL XSLT jQuery J2EE Standards JDBC JNDI Java Mail JTA Web Technologies JSP Servlet JAXWS AXIS REST JAXRS SOA SOAP JMS Bootstrap EJB AngularJS RMI IBM MQ Series Databases Oracle MySQL Sybase SQLServer2008 MongoDB IDEs Eclipse NetBeans Intellij Sublime Brackets RAD WSAD WebApp Servers WebSphere Application Server WebLogic JBoss Apache Tomcat Frameworks Struts Spring Spring Boot JSF Hibernate Apache Camel Operating Systems Windows UNIX Solaris Red Hat AIX Version Control Tools CVS SVN Git ClearCase ToolsUtilities Log4j Ant JUnit Caliber Maven Gradle 21 Jenkins SOAPUi AWS Methodologies Agile Scrum TDD Waterfall",
    "unique_id": "531e61ac-87e4-4f3b-a839-c3ddcca84138"
}