{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java developer New Brunswick NJ Around 5 years of experience in IT as a Full stack JavaJ2EE Developer and worked in the areas of Analysis Design Development Production Support and Deployment of Web based applications Expertise in the implementation of Core concepts of Java J2EE Technologies JSP Servlets JSTL JPA JSF JMS Struts Spring Hibernate EJB Java Beans JDBC XML Web Services JNDI MultiThreading Having knowledge on Java 8 features like Lambda expressions and functional interfaces and Parallel Streams In depth knowledge on core java concepts such as OOPS Collections Threading generics Exception handling MultiThreading Execution services concurrent utilities File IO Garbage Collection and Serialization Experience and indepth Knowledge of understanding in the strategy and practical implementation of AWS CloudSpecific technologies including S3 EC2 Virtual Private Cloud VPC Relational Database Service RDS Simple Queue Service SQS Elastic Block Store EBS Simple Notification Service SNS Cloud Front Cloud Formation Elastic Load Balancing AWS Identity and access management Elastic Cache Cloud Watch RedShift AWS Lambda Dynamo DB Strong experience of using open source technologies including React Node JS Spring Angular 7642 jQuery Apache Storm Elastic Search Redis Mongo DB Bootstrap Junit etc Good Knowledge on developing the UI pages from scratch using HTML5 CSS3 JavaScript jQuery Google Web Toolkit GWT Bootstrap AJAX Angular 7642 Backbone JS Node JS and Reactjs Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Good knowledge in Hadoop Architecture with various components such as HDFS Flume Pig and MapReduce Hands on Experience with Middleware Technology Messaging Brokers like JMS Kafka Active MQ Rabbit MQ Experience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server Experienced in React JS and working with React Flux architecture and Redux frameworks Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Expertise in developing SOA Service Oriented Architecture REST and J2EE Web Services based on SOAP WSDL UDDI JAXWS JAXB JAXRPC using tools like Apache Axis Extensive experience in development of Web services such as SOAP using WSDL JAXB SOAP JAXWS and Apache CXF and Restful using JAXRS CXF Rest easy JERSY implementation Strong experience in designing and developing data models and accessing from Java applications using SQL PLSQL ORM tool Hibernate and has experience with NoSQL databases like MongoDB Cassandra Experience in developed logging and standard mechanism based on Log4j and SLF4j Handson experience working with Continuous Integration CI buildautomation tools such as Maven GIT GITHUB SVN CVS Jenkins and Apache Ant Have experience to Develop scripts for build deployment maintenance and related tasks using Jenkins Docker Experience in designing developing and deploying J2EE applications on Web sphere Web logic Apache Tomcat and JBoss application Servers Experienced in writing and implementing unit test cases using Junit Unit test Selenium Cucumber Easy mock and Mockito Strong experience on various development environments IDE Tools like Eclipse IRAD and My Eclipse Experienced in performing automation using Selenium Java and performing Behavioral driven testing using Cucumber and Jbehive Experience in Test Driven Development TDD Waterfall model and agile methodologies like scrum Experience in working with different operating systems like Windows and UNIXLinux Work Experience Java Developer Java DeveloperJohnson Johnson New Brunswick NJ January 2018 to Present Responsibilities Involved in programming testing debugging implementing and maintaining of Java EE clientserver distributed application to meet the organizations needs Prepared the Java 8 development structure for MyEclipse and Replaced the Joda library using streams and lambda expressions Used the stream feature of Java 8 for aggregate operation and pipelining Design coded and tested key modules of the project using java oops concepts Used most of the new features of Java 8 like lambda expressions functional interfaces Method references and stream API Backend application code developed using Java 8 and Spring Boot Services to consume the data from the Database and from the other applications Architected designed and implemented a SPA Single Page Application in Angular 76 which consume JSON from a Spring MVC using Spring Security to secure the Application Involved in design and development of UI component which includes layered POVs and Carousels using frameworks Angular 76 JavaScript HTML5 CSS3 and Bootstrap Implemented Web Service calls for data parsing and server interaction using spring Threads JSON SOAP RESTAPI and Apache Exposed Stateless session beans as RESTful web services using JAXRS Implemented Angular76 promises to handle asynchronous communication with our Rest API for various requirements Make pluggable UI Microservice for each platform which should solve the monolithic problem of seed generation and create Docker image and deploy them into Kubernetes using Angular 76 Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Worked with Docker and Kubernetes to manage micro services for development of continuous integration and worked with Spring MVC pattern used Hibernate persistence framework for developing the public access Agile Court application Mainly involved in development and maintenance of the website using HTML5 CSS3 Ajax jQuery JavaScript Angular 76 and Nodejs Used Rabbit MQ to provide a single unifying transport that reduces cost and maintenance efforts including support for HTTP REST and JMS Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Developed test cases for Front Jasmine and Karma and have used Rabbit MQ queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Developed the spring AOP programming to configure logging for the application Designed the page flow using struts server side components and ibatis for DAO layer Developed Servlets and JSPs based on MVC pattern using Struts framework and Spring Framework Used Node JS React JS Backbone MVC framework for developing the Single Page Application SPA Developed and executed software systems utilizing ReactJS and Groovy Implemented the application using Spring IOC Spring MVC Framework Spring Batch Hibernate and handled the security using Spring Security Developed internationalized multitenant SaaS solutions with responsive UIs using Java or ReactJS with NodeJS and CSS Responsible for developing the UI side with ReactJS SASS HTML5 Implemented Spark using Scala and utilizing Data frames and Spark SQL API for faster processing of data Implemented Spark RDD transformations to Map business analysis and apply actions on top of transformations Developed POCs production ready jobs to stream the data from various backend systems to IMDG using feeds various database pull Apache Spark and Kafka Migrating some of the applications from AngularJS6 to AngularJS7 and componentize the code as per the Angular 6 recommendations for better testability Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Wrote Ext JS Ember js function while implementing various UI Screens across the whole web application both consumer facing as well as internal application Built main application in PHP leveraging technologies such as Tastypie Angular js Backbone js Ember js and Celery Worked with ObjectOriented JavaScript such as Backbone js Knockout js Ember js Handlebars js Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Well versed in installation configuration supporting and managing of Big Data and underlying infrastructure of Hadoop Cluster Worked in performing real time analytics on big data using HBase and Cassandra in Kubernetes Hadoop clusters Deployed Spring Boot based Microservices Docker container using Amazon EC2 container services Build Rest services using NodeJS and ExpressJS and used a full complement of Express Angular 76 NodeJS and MongoDB to store and present assessments Performed unit testing using JUNIT test cases and automated functional testing tools like Selenium debug tools like log4j used Mockito for stubbing Created automated test cases for the web application using Selenium Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Integrating Struts with spring by delegating Struts action management to Spring Framework using proxy Developed different reports in JavaScript by implementing the Angular 76 SPA framework and common packages for the application using Generics Involved in unit and integration testing using both SOAP UI and APIGEE trace tool Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Consumed Kafka stream using Apache Storm topology Designed and developed Microservices Architecture to divide application into business components using Spring Boot Apache Storm Active MQ and Apache Kafka Developed queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Developed user interface using JSP AJAX JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Developed the application using Struts Framework that leverages classical Model View Controller architecture Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in Oracle DB and NoSQL DB Worked closely with Devops team to set up CICD pipeline using Jenkins Ansible AWS Maven and GIT Deploying Rest APIs Application in AWS Cloud and Cloud Foundry Used ExpressJS to route different endpoints made RESTful services to manipulate data in MySQL Familiar with MongoDB write concern to avoid loss of data during system failures and implemented read preferences in MongoDB replica set Developed a feature in utility application and Verification Monitoring tool to verify the application statistics like poolers consumers loggers using Angular 6 Nodejs and Bootstrap Created ant build files to create the EAR and WAR files and involved in development of CPRS system using the Spring MVC framework Involved in development of Hibernate objects in order to persist data into the database Involved in writing SQL scripts and creating backend database table for complex business operations Participated in building webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Used XML web services using SOAP to transfer the remote application to different institutions Developed web services to allow communication between applications through SOAP over HTTP using Axis2 Secured the APIs by implementing OAuth 20 tokenbased authenticationauthorization scheme using Spring Security Designed and developed thirdparty Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol Developed a production Nodejs application with Express module and persisted user information in MongoDB using Mongoose ORM Node JS to manage dependencies and ExpressJS to quickly build a modular server codebase Used Angular 6 Routing for navigation between nested HTML views in the application and created Angular 6 custom directives that were used along with HTML elements for DOM manipulation Used Log4j API for logging in development testing and production environments configured to send email notifications Created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components and implemented transaction management using Spring declarative transaction management with Spring AOP concepts Implemented version controlling using SVN and used Jenkins for continuous integration Wrote build deployment scripts using Ant Maven on UNIX environment Used GIT for version control and used eclipse as the IDE for developing the application Used Rational Clear Quest for defect fixing Involved in guiding mentoring new contractors to understand the application Coordinated with QA lead for development of test plan test cases test code and actual testing responsible for defects allocation and resolution of those defects Java Developer Starbucks Seattle WA August 2016 to December 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Developed the viewcontroller components using JSPs HTML5 CSS3 AJAX JavaScript jQuery Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in Angular 4 Developed website and created graphics for website using HTML JavaScript CSS ReactJS Implemented REST based web services using JAXRS annotations consumed services from angular 4 modules Handson experience in developing integration with Elastic search in any of the programming languages like JAVA and JavaScript Having knowledge of advance reporting using Elastic search and NodeJS Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Designed and developed Micro Services business components using Spring Boot Responsible for creating an instance on Amazon EC2 AWS Pivotal Cloud Foundry and deployed the application on it Involved in the development of Microservices for all the models using combination of Spring Boot and Spring Security Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux and used Spring Cloud for AWS Exposed micro services as both SOAP and Restful web services using Spring Soap Rest controllers Used XML Web Services using SOAP to transfer the amount to transfer application that is remote and global to different financial institutions Worked on NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Implemented a POC with Spark SQL to interpret complex JSON records Used Cassandra as a storage for Spark analytics and worked on Mongo  Used Apache Kafka for holding large number of messages and using RESTful service pushing messages to Couchbase and used Spring boot and Couchbase starter for retrieving and storing data to Couchbase Worked on Rest Web services for backend services used Couchbase DB NoSQL for database services Automated the installation and maintenance of Kafka storm Zookeeper and elastic search using salt stack technology Implemented real time analytics pipeline using Confluent Kafka storm elastic search Splunk and green plum Worked on data transformation pipelines like Storm Worked with operational analytics and log management using ELK and Splunk Assisted teams with SQL and MPP databases such as Green plum Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Worked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container ServiceDocker Involved in creating EC2 instances and installed required configurations and applications on it and created S3 buckets for storing object level data into it Developed APIs to read and publish data from Elastic Search cluster using native Java Transport client as well as REST client Worked on Spring Integration with the Elastic Search Used Spring MVC framework for implementing ModelView Controller MVC architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Used Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc Used Spring Batch for processing large amount of data like transaction management job processing resource management and logging Used UNIX shell scripting to automate software installation and testing and Used kubernetes to manage applications by inspecting and performing CRUD on clusters and worked on docker with kubernetes to create pods for application and deployed across multi node kubernetes cluster Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server and Initiated Microservices application through Docker and Kubernetes cluster formation Used Hibernate ORM framework as persistence engine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java Involved in writing SQL and Stored Procedures for handling complex queries with help of TOAD and access them through Java Programs from Oracle Database Worked with MongoDB to store nonrelational data into collection and retrieve them whenever required Used WebLogic server to route our JMS queue messages to different business floors and configured routes in WebLogic and used JMS in email notification Worked on setting up Maven scripts to build package and deploy application code to the target WebLogic Application Servers and worked on continuous integration servers like Jenkins Hands on Coding to build REST Micro Services using Spring Cloud Oracle XSD JSON Spring Config and Jenkins Worked on developing RESTful endpoints to cache application specific data in inmemory data clusters like REDIS and exposed them with RESTful endpoints Focused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality Performed automation testing and authored test scripts using Selenium Web Driver Selenium Grid and Junit Worked in Agile TDD environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Java Developer BNY Mellon IN May 2014 to December 2015 Responsibilities Involved in various SDLC phases like Design Development and Testing Interact with business managers to transform requirements into technical solutions Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator Value Object and Singleton Configured spring to manage Actions as beans and set their dependencies in a Spring context file Developed presentation tier as HTML JSPs using Struts Framework Used AJAX for faster page rendering Implemented the application using Spring IOC Spring MVC Framework Spring Batch Hibernate and handled the security using Spring Security Developed internationalized multitenant SaaS solutions with responsive UIs using Java or ReactJS with NodeJS and CSS Implemented modules into Nodejs to integrate with design and requirements also backend service using Nodejs and REACT modules and implemented client side Interface using React JS Developed General Ledger module which streamlines analysis reporting and recording of accounting information General Ledger automatically integrates with a powerful spreadsheet solution for budgeting comparative analysis and tracking facility information for flexible reporting Developed clientfacing Struts web applications by creating and modifying Java classes JSPs Struts Delegates and DAOs AJAX Implemented the MVC architecture using Struts framework Developed various Action Classes that route requests to appropriate handlers Coded Struts Action Servlets to process requests and forward to Struts Action classes Developed JSP and Java Helper classes for Inpatient and outpatient Information Wrote Action classes Request Processor Business Delegate Business Objects Service Classes and JSP pages Application integration with Spring Web Services to fetch data from external Benefits application using SOA architecture configuring WSDL based on SOAP specifications and marshalling and unmarshalling using JAXB Developed web pages using Servlets and XML for various modules and involved in environment set up with Ant Eclipse JBoss and SQL Server 2005 Used Oracle as the backend database and wrote PLSQL packages stored procedures views and functions at the Oracle database Used Cassandra NoSQL database management system for keeping usergenerated data by upgrading of Couchbase and Cassandra cluster Developed multiple Angular 2 components which are compatible with latest versions of Type Script angular CLI Integrated the Java code API in JSP pages and responsible for setting up Angular 2 framework for UI development Used Replication Filters in CouchDB to filter precisely the data that needs to be replicated to different nodes Used Couch base as a database for one of the micro services which talks to database using nickel queries within spring framework Designed generic database Connection Pooling with JDBC using Oracle and involved in the SQL query optimization Developed the components for parsing XML documents using SAX and DOM parsers Involved in developing code for obtaining bean references in spring framework and used Spring MVC to implement the Model View Controller pattern Used Spring IoC to inject data into Java beans Developed project in Eclipse IDE and created DB interactions using Hibernate Provided management with technical documentation for Java applications using MS Visio and MS Word Worked on JDBC for data persistence and prepared high and lowlevel design documents for the business modules for future references and updates Deployed the application in JBoss Application Server in development and production environment Implemented CVS as Version control system and used Maven as a build and dependency management tool to manage various dependencies Used ANT as build tool and Junit for writing Unit tests Involved in the functional test of the application and tested Java applications using Functional Testing JBoss and log statements Code Walkthrough Test cases and Test Plans Education Masters Skills Spring Java Java J2Ee Hibernate",
    "entities": [
        "Micro Services",
        "Spring Framework",
        "JavaJ2EE Developer",
        "Spring Web Services",
        "IDE",
        "the Elastic Search",
        "Objects",
        "Agile Court",
        "Request",
        "Nodejs",
        "MultiThreading Execution",
        "AWS CloudSpecific",
        "UNIX",
        "Kubernetes using Angular 76",
        "the Application Involved",
        "JMS",
        "CPRS",
        "Offer Users Convenient Payment Methods",
        "HTTP",
        "JTA",
        "Java J2EE Technologies JSP Servlets",
        "Mongoose ORM Node JS",
        "UI Microservice",
        "Behavioral",
        "OAuth Protocol Developed",
        "Present Responsibilities Involved",
        "Continuous Integration CI",
        "RDD",
        "Express",
        "SOAP",
        "XML",
        "EAR",
        "Kubernetes Hadoop",
        "OAuth",
        "WebLogic Application Servers",
        "a Single Page Application",
        "Couchbase Worked",
        "SOA Service Oriented Architecture REST",
        "WebLogic",
        "Creating",
        "NodeJS",
        "JUnit",
        "HBase",
        "Apache Spark",
        "Amazon",
        "Storm and Kafka Services",
        "HTML5 Implemented Spark",
        "Couchbase",
        "ELK",
        "Angular 4 Developed",
        "Hadoop Cluster Worked",
        "Spring Security Designed",
        "SQL Server",
        "the Single Page Application",
        "Framework Spring Batch Hibernate",
        "SPA Single Page Application",
        "Middleware Technology Messaging Brokers",
        "Developed",
        "Mongo",
        "Jenkins Hands",
        "Mockito",
        "Spring MVC",
        "Splunk Assisted",
        "Axis2 Secured",
        "Windows",
        "Restful",
        "Servlets",
        "Ant Maven",
        "New Brunswick NJ",
        "Exception",
        "Spring MVC IOC",
        "MQ",
        "Oracle Database Worked",
        "Selenium Web Driver Selenium Grid",
        "HTML5",
        "Develop",
        "IMDG",
        "Cassandra using Spark",
        "Spring Security",
        "Nodejs Used Rabbit MQ",
        "SOA",
        "Implemented CVS",
        "Initiated Microservices",
        "JSP",
        "Ember",
        "UI Screens",
        "Micro",
        "Version",
        "MQ Rabbit MQ",
        "Microservices Docker",
        "Angular 6 Nodejs and Bootstrap Created",
        "Docker",
        "DOM",
        "Spark SQL API",
        "MPP",
        "Developed Servlets",
        "Groovy Implemented",
        "J2EE Web Services",
        "MVC",
        "Interface",
        "AngularJS6",
        "Spark",
        "Joda",
        "Redux",
        "Microservices Architecture",
        "GIT",
        "Node JS",
        "Storm Worked",
        "Amazon ECS",
        "REDIS",
        "Database",
        "QA",
        "Created",
        "Request Processor Business Delegate Business Objects Service Classes",
        "Created Spring",
        "AWS",
        "Spring Boot Apache Storm Active",
        "Hadoop Architecture",
        "Struts Action",
        "Oracle",
        "Hibernate Queries",
        "Coding",
        "Junit Unit",
        "Oracle DB",
        "Build Rest",
        "JSP AJAX JSP Tag",
        "Design Development and Testing Interact",
        "SAX",
        "APIGEE",
        "CSS Implemented",
        "UNIXLinux Work",
        "SQL",
        "Log4j",
        "React Flux",
        "Kubernetes",
        "Jenkins Ansible",
        "API Backend",
        "Micro Service Architecture",
        "JAXRS",
        "Big Data",
        "Hive",
        "CICD",
        "JUNIT",
        "Used Rational Clear Quest",
        "JERSY implementation Strong",
        "IDE Tools",
        "Handson",
        "Amazon AWS",
        "Express Angular",
        "SQS",
        "CRUD",
        "Spring AOP",
        "Spring Boot Services",
        "Bootstrap Implemented Web Service",
        "JBoss Application Server",
        "HTML JavaScript CSS",
        "Maven",
        "RESTful Service",
        "Performed",
        "lJavaspan",
        "Spark SQL",
        "Session Faade Business Delegate Service",
        "ANT",
        "UI",
        "Test Plans Education Masters",
        "Hibernate Provided",
        "CSS Responsible",
        "Selenium",
        "Mockito Strong",
        "Inpatient",
        "JAXRS Implemented",
        "SOAP UI",
        "SVN",
        "Expertise",
        "File IO Garbage Collection and Serialization Experience",
        "GITHUB SVN CVS Jenkins",
        "AngularJS7",
        "Front Jasmine",
        "REST",
        "REST Micro Services",
        "PHP",
        "NoSQL",
        "Generics Involved",
        "Verification Monitoring",
        "TOAD",
        "Software Development Life Cycle",
        "Coded Struts Action Servlets",
        "Dispatch",
        "Node"
    ],
    "experience": "Experience and indepth Knowledge of understanding in the strategy and practical implementation of AWS CloudSpecific technologies including S3 EC2 Virtual Private Cloud VPC Relational Database Service RDS Simple Queue Service SQS Elastic Block Store EBS Simple Notification Service SNS Cloud Front Cloud Formation Elastic Load Balancing AWS Identity and access management Elastic Cache Cloud Watch RedShift AWS Lambda Dynamo DB Strong experience of using open source technologies including React Node JS Spring Angular 7642 jQuery Apache Storm Elastic Search Redis Mongo DB Bootstrap Junit etc Good Knowledge on developing the UI pages from scratch using HTML5 CSS3 JavaScript jQuery Google Web Toolkit GWT Bootstrap AJAX Angular 7642 Backbone JS Node JS and Reactjs Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Good knowledge in Hadoop Architecture with various components such as HDFS Flume Pig and MapReduce Hands on Experience with Middleware Technology Messaging Brokers like JMS Kafka Active MQ Rabbit MQ Experience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server Experienced in React JS and working with React Flux architecture and Redux frameworks Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Expertise in developing SOA Service Oriented Architecture REST and J2EE Web Services based on SOAP WSDL UDDI JAXWS JAXB JAXRPC using tools like Apache Axis Extensive experience in development of Web services such as SOAP using WSDL JAXB SOAP JAXWS and Apache CXF and Restful using JAXRS CXF Rest easy JERSY implementation Strong experience in designing and developing data models and accessing from Java applications using SQL PLSQL ORM tool Hibernate and has experience with NoSQL databases like MongoDB Cassandra Experience in developed logging and standard mechanism based on Log4j and SLF4j Handson experience working with Continuous Integration CI buildautomation tools such as Maven GIT GITHUB SVN CVS Jenkins and Apache Ant Have experience to Develop scripts for build deployment maintenance and related tasks using Jenkins Docker Experience in designing developing and deploying J2EE applications on Web sphere Web logic Apache Tomcat and JBoss application Servers Experienced in writing and implementing unit test cases using Junit Unit test Selenium Cucumber Easy mock and Mockito Strong experience on various development environments IDE Tools like Eclipse IRAD and My Eclipse Experienced in performing automation using Selenium Java and performing Behavioral driven testing using Cucumber and Jbehive Experience in Test Driven Development TDD Waterfall model and agile methodologies like scrum Experience in working with different operating systems like Windows and UNIXLinux Work Experience Java Developer Java DeveloperJohnson Johnson New Brunswick NJ January 2018 to Present Responsibilities Involved in programming testing debugging implementing and maintaining of Java EE clientserver distributed application to meet the organizations needs Prepared the Java 8 development structure for MyEclipse and Replaced the Joda library using streams and lambda expressions Used the stream feature of Java 8 for aggregate operation and pipelining Design coded and tested key modules of the project using java oops concepts Used most of the new features of Java 8 like lambda expressions functional interfaces Method references and stream API Backend application code developed using Java 8 and Spring Boot Services to consume the data from the Database and from the other applications Architected designed and implemented a SPA Single Page Application in Angular 76 which consume JSON from a Spring MVC using Spring Security to secure the Application Involved in design and development of UI component which includes layered POVs and Carousels using frameworks Angular 76 JavaScript HTML5 CSS3 and Bootstrap Implemented Web Service calls for data parsing and server interaction using spring Threads JSON SOAP RESTAPI and Apache Exposed Stateless session beans as RESTful web services using JAXRS Implemented Angular76 promises to handle asynchronous communication with our Rest API for various requirements Make pluggable UI Microservice for each platform which should solve the monolithic problem of seed generation and create Docker image and deploy them into Kubernetes using Angular 76 Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Worked with Docker and Kubernetes to manage micro services for development of continuous integration and worked with Spring MVC pattern used Hibernate persistence framework for developing the public access Agile Court application Mainly involved in development and maintenance of the website using HTML5 CSS3 Ajax jQuery JavaScript Angular 76 and Nodejs Used Rabbit MQ to provide a single unifying transport that reduces cost and maintenance efforts including support for HTTP REST and JMS Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Developed test cases for Front Jasmine and Karma and have used Rabbit MQ queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Developed the spring AOP programming to configure logging for the application Designed the page flow using struts server side components and ibatis for DAO layer Developed Servlets and JSPs based on MVC pattern using Struts framework and Spring Framework Used Node JS React JS Backbone MVC framework for developing the Single Page Application SPA Developed and executed software systems utilizing ReactJS and Groovy Implemented the application using Spring IOC Spring MVC Framework Spring Batch Hibernate and handled the security using Spring Security Developed internationalized multitenant SaaS solutions with responsive UIs using Java or ReactJS with NodeJS and CSS Responsible for developing the UI side with ReactJS SASS HTML5 Implemented Spark using Scala and utilizing Data frames and Spark SQL API for faster processing of data Implemented Spark RDD transformations to Map business analysis and apply actions on top of transformations Developed POCs production ready jobs to stream the data from various backend systems to IMDG using feeds various database pull Apache Spark and Kafka Migrating some of the applications from AngularJS6 to AngularJS7 and componentize the code as per the Angular 6 recommendations for better testability Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Wrote Ext JS Ember js function while implementing various UI Screens across the whole web application both consumer facing as well as internal application Built main application in PHP leveraging technologies such as Tastypie Angular js Backbone js Ember js and Celery Worked with ObjectOriented JavaScript such as Backbone js Knockout js Ember js Handlebars js Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Well versed in installation configuration supporting and managing of Big Data and underlying infrastructure of Hadoop Cluster Worked in performing real time analytics on big data using HBase and Cassandra in Kubernetes Hadoop clusters Deployed Spring Boot based Microservices Docker container using Amazon EC2 container services Build Rest services using NodeJS and ExpressJS and used a full complement of Express Angular 76 NodeJS and MongoDB to store and present assessments Performed unit testing using JUNIT test cases and automated functional testing tools like Selenium debug tools like log4j used Mockito for stubbing Created automated test cases for the web application using Selenium Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Integrating Struts with spring by delegating Struts action management to Spring Framework using proxy Developed different reports in JavaScript by implementing the Angular 76 SPA framework and common packages for the application using Generics Involved in unit and integration testing using both SOAP UI and APIGEE trace tool Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Consumed Kafka stream using Apache Storm topology Designed and developed Microservices Architecture to divide application into business components using Spring Boot Apache Storm Active MQ and Apache Kafka Developed queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Developed user interface using JSP AJAX JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Developed the application using Struts Framework that leverages classical Model View Controller architecture Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in Oracle DB and NoSQL DB Worked closely with Devops team to set up CICD pipeline using Jenkins Ansible AWS Maven and GIT Deploying Rest APIs Application in AWS Cloud and Cloud Foundry Used ExpressJS to route different endpoints made RESTful services to manipulate data in MySQL Familiar with MongoDB write concern to avoid loss of data during system failures and implemented read preferences in MongoDB replica set Developed a feature in utility application and Verification Monitoring tool to verify the application statistics like poolers consumers loggers using Angular 6 Nodejs and Bootstrap Created ant build files to create the EAR and WAR files and involved in development of CPRS system using the Spring MVC framework Involved in development of Hibernate objects in order to persist data into the database Involved in writing SQL scripts and creating backend database table for complex business operations Participated in building webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Used XML web services using SOAP to transfer the remote application to different institutions Developed web services to allow communication between applications through SOAP over HTTP using Axis2 Secured the APIs by implementing OAuth 20 tokenbased authenticationauthorization scheme using Spring Security Designed and developed thirdparty Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol Developed a production Nodejs application with Express module and persisted user information in MongoDB using Mongoose ORM Node JS to manage dependencies and ExpressJS to quickly build a modular server codebase Used Angular 6 Routing for navigation between nested HTML views in the application and created Angular 6 custom directives that were used along with HTML elements for DOM manipulation Used Log4j API for logging in development testing and production environments configured to send email notifications Created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components and implemented transaction management using Spring declarative transaction management with Spring AOP concepts Implemented version controlling using SVN and used Jenkins for continuous integration Wrote build deployment scripts using Ant Maven on UNIX environment Used GIT for version control and used eclipse as the IDE for developing the application Used Rational Clear Quest for defect fixing Involved in guiding mentoring new contractors to understand the application Coordinated with QA lead for development of test plan test cases test code and actual testing responsible for defects allocation and resolution of those defects Java Developer Starbucks Seattle WA August 2016 to December 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Developed the viewcontroller components using JSPs HTML5 CSS3 AJAX JavaScript jQuery Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in Angular 4 Developed website and created graphics for website using HTML JavaScript CSS ReactJS Implemented REST based web services using JAXRS annotations consumed services from angular 4 modules Handson experience in developing integration with Elastic search in any of the programming languages like JAVA and JavaScript Having knowledge of advance reporting using Elastic search and NodeJS Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Designed and developed Micro Services business components using Spring Boot Responsible for creating an instance on Amazon EC2 AWS Pivotal Cloud Foundry and deployed the application on it Involved in the development of Microservices for all the models using combination of Spring Boot and Spring Security Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux and used Spring Cloud for AWS Exposed micro services as both SOAP and Restful web services using Spring Soap Rest controllers Used XML Web Services using SOAP to transfer the amount to transfer application that is remote and global to different financial institutions Worked on NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Implemented a POC with Spark SQL to interpret complex JSON records Used Cassandra as a storage for Spark analytics and worked on Mongo   Used Apache Kafka for holding large number of messages and using RESTful service pushing messages to Couchbase and used Spring boot and Couchbase starter for retrieving and storing data to Couchbase Worked on Rest Web services for backend services used Couchbase DB NoSQL for database services Automated the installation and maintenance of Kafka storm Zookeeper and elastic search using salt stack technology Implemented real time analytics pipeline using Confluent Kafka storm elastic search Splunk and green plum Worked on data transformation pipelines like Storm Worked with operational analytics and log management using ELK and Splunk Assisted teams with SQL and MPP databases such as Green plum Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Worked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container ServiceDocker Involved in creating EC2 instances and installed required configurations and applications on it and created S3 buckets for storing object level data into it Developed APIs to read and publish data from Elastic Search cluster using native Java Transport client as well as REST client Worked on Spring Integration with the Elastic Search Used Spring MVC framework for implementing ModelView Controller MVC architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Used Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc Used Spring Batch for processing large amount of data like transaction management job processing resource management and logging Used UNIX shell scripting to automate software installation and testing and Used kubernetes to manage applications by inspecting and performing CRUD on clusters and worked on docker with kubernetes to create pods for application and deployed across multi node kubernetes cluster Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server and Initiated Microservices application through Docker and Kubernetes cluster formation Used Hibernate ORM framework as persistence engine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java Involved in writing SQL and Stored Procedures for handling complex queries with help of TOAD and access them through Java Programs from Oracle Database Worked with MongoDB to store nonrelational data into collection and retrieve them whenever required Used WebLogic server to route our JMS queue messages to different business floors and configured routes in WebLogic and used JMS in email notification Worked on setting up Maven scripts to build package and deploy application code to the target WebLogic Application Servers and worked on continuous integration servers like Jenkins Hands on Coding to build REST Micro Services using Spring Cloud Oracle XSD JSON Spring Config and Jenkins Worked on developing RESTful endpoints to cache application specific data in inmemory data clusters like REDIS and exposed them with RESTful endpoints Focused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality Performed automation testing and authored test scripts using Selenium Web Driver Selenium Grid and Junit Worked in Agile TDD environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Java Developer BNY Mellon IN May 2014 to December 2015 Responsibilities Involved in various SDLC phases like Design Development and Testing Interact with business managers to transform requirements into technical solutions Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator Value Object and Singleton Configured spring to manage Actions as beans and set their dependencies in a Spring context file Developed presentation tier as HTML JSPs using Struts Framework Used AJAX for faster page rendering Implemented the application using Spring IOC Spring MVC Framework Spring Batch Hibernate and handled the security using Spring Security Developed internationalized multitenant SaaS solutions with responsive UIs using Java or ReactJS with NodeJS and CSS Implemented modules into Nodejs to integrate with design and requirements also backend service using Nodejs and REACT modules and implemented client side Interface using React JS Developed General Ledger module which streamlines analysis reporting and recording of accounting information General Ledger automatically integrates with a powerful spreadsheet solution for budgeting comparative analysis and tracking facility information for flexible reporting Developed clientfacing Struts web applications by creating and modifying Java classes JSPs Struts Delegates and DAOs AJAX Implemented the MVC architecture using Struts framework Developed various Action Classes that route requests to appropriate handlers Coded Struts Action Servlets to process requests and forward to Struts Action classes Developed JSP and Java Helper classes for Inpatient and outpatient Information Wrote Action classes Request Processor Business Delegate Business Objects Service Classes and JSP pages Application integration with Spring Web Services to fetch data from external Benefits application using SOA architecture configuring WSDL based on SOAP specifications and marshalling and unmarshalling using JAXB Developed web pages using Servlets and XML for various modules and involved in environment set up with Ant Eclipse JBoss and SQL Server 2005 Used Oracle as the backend database and wrote PLSQL packages stored procedures views and functions at the Oracle database Used Cassandra NoSQL database management system for keeping usergenerated data by upgrading of Couchbase and Cassandra cluster Developed multiple Angular 2 components which are compatible with latest versions of Type Script angular CLI Integrated the Java code API in JSP pages and responsible for setting up Angular 2 framework for UI development Used Replication Filters in CouchDB to filter precisely the data that needs to be replicated to different nodes Used Couch base as a database for one of the micro services which talks to database using nickel queries within spring framework Designed generic database Connection Pooling with JDBC using Oracle and involved in the SQL query optimization Developed the components for parsing XML documents using SAX and DOM parsers Involved in developing code for obtaining bean references in spring framework and used Spring MVC to implement the Model View Controller pattern Used Spring IoC to inject data into Java beans Developed project in Eclipse IDE and created DB interactions using Hibernate Provided management with technical documentation for Java applications using MS Visio and MS Word Worked on JDBC for data persistence and prepared high and lowlevel design documents for the business modules for future references and updates Deployed the application in JBoss Application Server in development and production environment Implemented CVS as Version control system and used Maven as a build and dependency management tool to manage various dependencies Used ANT as build tool and Junit for writing Unit tests Involved in the functional test of the application and tested Java applications using Functional Testing JBoss and log statements Code Walkthrough Test cases and Test Plans Education Masters Skills Spring Java Java J2Ee Hibernate",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "developer",
        "New",
        "Brunswick",
        "NJ",
        "years",
        "experience",
        "IT",
        "stack",
        "JavaJ2EE",
        "Developer",
        "areas",
        "Analysis",
        "Design",
        "Development",
        "Production",
        "Support",
        "Deployment",
        "Web",
        "applications",
        "Expertise",
        "implementation",
        "concepts",
        "Java",
        "J2EE",
        "Technologies",
        "JSP",
        "Servlets",
        "JSTL",
        "JPA",
        "JSF",
        "JMS",
        "Struts",
        "Spring",
        "Hibernate",
        "EJB",
        "Java",
        "Beans",
        "JDBC",
        "XML",
        "Web",
        "Services",
        "JNDI",
        "MultiThreading",
        "knowledge",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "interfaces",
        "Parallel",
        "Streams",
        "depth",
        "knowledge",
        "core",
        "concepts",
        "OOPS",
        "Collections",
        "Threading",
        "Exception",
        "MultiThreading",
        "Execution",
        "services",
        "utilities",
        "File",
        "IO",
        "Garbage",
        "Collection",
        "Serialization",
        "Experience",
        "Knowledge",
        "understanding",
        "strategy",
        "implementation",
        "AWS",
        "CloudSpecific",
        "technologies",
        "S3",
        "EC2",
        "Virtual",
        "Cloud",
        "VPC",
        "Relational",
        "Database",
        "Service",
        "RDS",
        "Simple",
        "Queue",
        "Service",
        "SQS",
        "Elastic",
        "Block",
        "Store",
        "EBS",
        "Simple",
        "Notification",
        "Service",
        "SNS",
        "Cloud",
        "Front",
        "Cloud",
        "Formation",
        "Elastic",
        "Load",
        "Balancing",
        "AWS",
        "Identity",
        "access",
        "management",
        "Elastic",
        "Cache",
        "Cloud",
        "Watch",
        "RedShift",
        "AWS",
        "Lambda",
        "Dynamo",
        "DB",
        "Strong",
        "experience",
        "source",
        "technologies",
        "React",
        "Node",
        "JS",
        "Spring",
        "Angular",
        "jQuery",
        "Apache",
        "Storm",
        "Elastic",
        "Search",
        "Redis",
        "Mongo",
        "DB",
        "Bootstrap",
        "Junit",
        "Good",
        "Knowledge",
        "UI",
        "pages",
        "scratch",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Google",
        "Web",
        "Toolkit",
        "GWT",
        "Bootstrap",
        "AJAX",
        "Angular",
        "Backbone",
        "JS",
        "Node",
        "JS",
        "Reactjs",
        "Expertise",
        "design",
        "development",
        "web",
        "enterprise",
        "applications",
        "Type",
        "technologies",
        "Scala",
        "Akka",
        "Play",
        "framework",
        "Slick",
        "knowledge",
        "Hadoop",
        "Architecture",
        "components",
        "HDFS",
        "Flume",
        "Pig",
        "MapReduce",
        "Hands",
        "Experience",
        "Middleware",
        "Technology",
        "Brokers",
        "JMS",
        "Kafka",
        "MQ",
        "Rabbit",
        "MQ",
        "Experience",
        "Creating",
        "delivery",
        "pipelines",
        "Micro",
        "services",
        "functions",
        "Jenkins",
        "CI",
        "server",
        "React",
        "JS",
        "React",
        "Flux",
        "architecture",
        "Redux",
        "experience",
        "Spring",
        "Framework",
        "modules",
        "Spring",
        "MVC",
        "IOC",
        "AOP",
        "JDBC",
        "JTA",
        "IO",
        "Spring",
        "Boot",
        "Spring",
        "Microservices",
        "Spring",
        "REST",
        "Spring",
        "Annotations",
        "Spring",
        "Transactions",
        "Spring",
        "Security",
        "Expertise",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "REST",
        "J2EE",
        "Web",
        "Services",
        "SOAP",
        "WSDL",
        "UDDI",
        "JAXWS",
        "JAXB",
        "JAXRPC",
        "tools",
        "Apache",
        "Axis",
        "experience",
        "development",
        "Web",
        "services",
        "SOAP",
        "WSDL",
        "JAXB",
        "JAXWS",
        "Apache",
        "CXF",
        "JAXRS",
        "CXF",
        "Rest",
        "JERSY",
        "implementation",
        "experience",
        "data",
        "models",
        "Java",
        "applications",
        "SQL",
        "PLSQL",
        "ORM",
        "tool",
        "Hibernate",
        "experience",
        "databases",
        "MongoDB",
        "Cassandra",
        "Experience",
        "logging",
        "mechanism",
        "Log4j",
        "SLF4j",
        "Handson",
        "Continuous",
        "Integration",
        "CI",
        "buildautomation",
        "tools",
        "Maven",
        "GIT",
        "GITHUB",
        "SVN",
        "CVS",
        "Jenkins",
        "Apache",
        "Ant",
        "experience",
        "scripts",
        "build",
        "deployment",
        "maintenance",
        "tasks",
        "Jenkins",
        "Docker",
        "Experience",
        "J2EE",
        "applications",
        "Web",
        "sphere",
        "Web",
        "logic",
        "Apache",
        "Tomcat",
        "JBoss",
        "application",
        "Servers",
        "writing",
        "unit",
        "test",
        "cases",
        "Junit",
        "Unit",
        "test",
        "Selenium",
        "Cucumber",
        "Easy",
        "mock",
        "Mockito",
        "Strong",
        "experience",
        "development",
        "environments",
        "IDE",
        "Tools",
        "Eclipse",
        "IRAD",
        "Eclipse",
        "automation",
        "Selenium",
        "Java",
        "testing",
        "Cucumber",
        "Jbehive",
        "Experience",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Waterfall",
        "model",
        "methodologies",
        "Experience",
        "operating",
        "systems",
        "Windows",
        "UNIXLinux",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Java",
        "DeveloperJohnson",
        "Johnson",
        "New",
        "Brunswick",
        "NJ",
        "January",
        "Present",
        "Responsibilities",
        "programming",
        "testing",
        "maintaining",
        "Java",
        "EE",
        "clientserver",
        "application",
        "organizations",
        "Java",
        "development",
        "structure",
        "MyEclipse",
        "Joda",
        "library",
        "streams",
        "expressions",
        "stream",
        "feature",
        "Java",
        "operation",
        "Design",
        "modules",
        "project",
        "oops",
        "concepts",
        "features",
        "Java",
        "expressions",
        "interfaces",
        "Method",
        "references",
        "API",
        "Backend",
        "application",
        "code",
        "Java",
        "Spring",
        "Boot",
        "Services",
        "data",
        "Database",
        "applications",
        "SPA",
        "Single",
        "Page",
        "Application",
        "Angular",
        "JSON",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Application",
        "design",
        "development",
        "UI",
        "component",
        "layered",
        "POVs",
        "Carousels",
        "frameworks",
        "Angular",
        "JavaScript",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Implemented",
        "Web",
        "Service",
        "data",
        "server",
        "interaction",
        "spring",
        "Threads",
        "JSON",
        "SOAP",
        "RESTAPI",
        "Apache",
        "Exposed",
        "Stateless",
        "session",
        "beans",
        "web",
        "services",
        "JAXRS",
        "Angular76",
        "promises",
        "communication",
        "Rest",
        "API",
        "requirements",
        "UI",
        "Microservice",
        "platform",
        "problem",
        "seed",
        "generation",
        "Docker",
        "image",
        "Kubernetes",
        "Angular",
        "Used",
        "Docker",
        "development",
        "Stateless",
        "application",
        "Kubernetes",
        "automation",
        "tools",
        "Junit",
        "Jtest",
        "Mockito",
        "testing",
        "frameworks",
        "Docker",
        "Kubernetes",
        "micro",
        "services",
        "development",
        "integration",
        "Spring",
        "MVC",
        "pattern",
        "Hibernate",
        "persistence",
        "framework",
        "access",
        "Agile",
        "Court",
        "application",
        "development",
        "maintenance",
        "website",
        "HTML5",
        "CSS3",
        "Ajax",
        "jQuery",
        "JavaScript",
        "Angular",
        "Nodejs",
        "Rabbit",
        "MQ",
        "transport",
        "cost",
        "maintenance",
        "efforts",
        "support",
        "HTTP",
        "REST",
        "JMS",
        "Docker",
        "development",
        "Stateless",
        "application",
        "Kubernetes",
        "automation",
        "tools",
        "Junit",
        "Jtest",
        "Mockito",
        "testing",
        "frameworks",
        "test",
        "cases",
        "Front",
        "Jasmine",
        "Karma",
        "Rabbit",
        "MQ",
        "queues",
        "implementation",
        "synchronization",
        "processes",
        "JMS",
        "queues",
        "consumption",
        "requests",
        "spring",
        "AOP",
        "programming",
        "configure",
        "application",
        "page",
        "flow",
        "struts",
        "server",
        "side",
        "components",
        "ibatis",
        "DAO",
        "layer",
        "Developed",
        "Servlets",
        "JSPs",
        "MVC",
        "pattern",
        "Struts",
        "framework",
        "Spring",
        "Framework",
        "Node",
        "JS",
        "React",
        "JS",
        "Backbone",
        "MVC",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "software",
        "systems",
        "ReactJS",
        "Groovy",
        "application",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Framework",
        "Spring",
        "Batch",
        "Hibernate",
        "security",
        "Spring",
        "Security",
        "multitenant",
        "SaaS",
        "solutions",
        "UIs",
        "Java",
        "ReactJS",
        "NodeJS",
        "CSS",
        "Responsible",
        "UI",
        "side",
        "ReactJS",
        "SASS",
        "HTML5",
        "Spark",
        "Scala",
        "Data",
        "frames",
        "Spark",
        "SQL",
        "API",
        "processing",
        "data",
        "Spark",
        "RDD",
        "transformations",
        "business",
        "analysis",
        "actions",
        "top",
        "transformations",
        "POCs",
        "production",
        "jobs",
        "data",
        "systems",
        "IMDG",
        "feeds",
        "database",
        "Apache",
        "Spark",
        "Kafka",
        "Migrating",
        "applications",
        "AngularJS6",
        "AngularJS7",
        "code",
        "Angular",
        "recommendations",
        "testability",
        "Docker",
        "image",
        "services",
        "Docker",
        "file",
        "delivery",
        "pipeline",
        "containers",
        "AWS",
        "Code",
        "Amazon",
        "ECS",
        "Wrote",
        "Ext",
        "JS",
        "Ember",
        "js",
        "function",
        "UI",
        "Screens",
        "web",
        "application",
        "consumer",
        "facing",
        "application",
        "application",
        "PHP",
        "technologies",
        "Tastypie",
        "Angular",
        "Backbone",
        "js",
        "Ember",
        "js",
        "Celery",
        "ObjectOriented",
        "JavaScript",
        "Backbone",
        "Knockout",
        "js",
        "Ember",
        "js",
        "Handlebars",
        "js",
        "design",
        "management",
        "configuration",
        "troubleshooting",
        "production",
        "environments",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Apache",
        "HadoopHBase",
        "Couchbase",
        "installation",
        "configuration",
        "managing",
        "Big",
        "Data",
        "infrastructure",
        "Hadoop",
        "Cluster",
        "time",
        "analytics",
        "data",
        "HBase",
        "Cassandra",
        "Kubernetes",
        "Hadoop",
        "clusters",
        "Deployed",
        "Spring",
        "Boot",
        "Microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "Build",
        "Rest",
        "services",
        "NodeJS",
        "ExpressJS",
        "complement",
        "Express",
        "Angular",
        "NodeJS",
        "assessments",
        "Performed",
        "unit",
        "testing",
        "JUNIT",
        "test",
        "cases",
        "testing",
        "tools",
        "Selenium",
        "debug",
        "tools",
        "log4j",
        "Mockito",
        "test",
        "cases",
        "web",
        "application",
        "Selenium",
        "Strong",
        "Knowledge",
        "integration",
        "testing",
        "testing",
        "applications",
        "Selenium",
        "Cucumber",
        "Struts",
        "spring",
        "Struts",
        "action",
        "management",
        "Spring",
        "Framework",
        "proxy",
        "reports",
        "JavaScript",
        "Angular",
        "SPA",
        "framework",
        "packages",
        "application",
        "Generics",
        "unit",
        "integration",
        "testing",
        "SOAP",
        "UI",
        "APIGEE",
        "trace",
        "tool",
        "Storm",
        "Kafka",
        "Services",
        "data",
        "HBase",
        "Hive",
        "tables",
        "Kafka",
        "cluster",
        "nodes",
        "brokers",
        "Consumed",
        "Kafka",
        "stream",
        "Apache",
        "Storm",
        "topology",
        "Microservices",
        "Architecture",
        "application",
        "business",
        "components",
        "Spring",
        "Boot",
        "Apache",
        "Storm",
        "MQ",
        "Apache",
        "Kafka",
        "queues",
        "AWS",
        "SQS",
        "JMS",
        "services",
        "events",
        "logic",
        "events",
        "user",
        "interface",
        "JSP",
        "AJAX",
        "JSP",
        "Tag",
        "libraries",
        "Struts",
        "Tag",
        "complexities",
        "application",
        "application",
        "Struts",
        "Framework",
        "Model",
        "View",
        "Controller",
        "architecture",
        "project",
        "messages",
        "Kafka",
        "topic",
        "conversation",
        "JSON",
        "String",
        "data",
        "format",
        "Oracle",
        "DB",
        "NoSQL",
        "DB",
        "Devops",
        "team",
        "CICD",
        "pipeline",
        "Jenkins",
        "Ansible",
        "AWS",
        "Maven",
        "GIT",
        "Deploying",
        "Rest",
        "APIs",
        "Application",
        "AWS",
        "Cloud",
        "Cloud",
        "Foundry",
        "ExpressJS",
        "endpoints",
        "services",
        "data",
        "MySQL",
        "Familiar",
        "write",
        "concern",
        "loss",
        "data",
        "system",
        "failures",
        "read",
        "preferences",
        "MongoDB",
        "replica",
        "feature",
        "utility",
        "application",
        "Verification",
        "Monitoring",
        "tool",
        "application",
        "statistics",
        "poolers",
        "consumers",
        "Angular",
        "Nodejs",
        "Bootstrap",
        "build",
        "files",
        "EAR",
        "WAR",
        "files",
        "development",
        "CPRS",
        "system",
        "Spring",
        "MVC",
        "framework",
        "development",
        "Hibernate",
        "order",
        "data",
        "database",
        "SQL",
        "scripts",
        "database",
        "table",
        "business",
        "operations",
        "webservices",
        "SOAP",
        "business",
        "application",
        "legacy",
        "applications",
        "applications",
        "XML",
        "web",
        "services",
        "SOAP",
        "application",
        "institutions",
        "web",
        "services",
        "communication",
        "applications",
        "SOAP",
        "HTTP",
        "Secured",
        "APIs",
        "OAuth",
        "authenticationauthorization",
        "scheme",
        "Spring",
        "Security",
        "thirdparty",
        "Payment",
        "services",
        "Users",
        "Convenient",
        "Payment",
        "Methods",
        "OAuth",
        "Protocol",
        "production",
        "Nodejs",
        "application",
        "Express",
        "module",
        "user",
        "information",
        "MongoDB",
        "Mongoose",
        "ORM",
        "Node",
        "JS",
        "dependencies",
        "ExpressJS",
        "server",
        "codebase",
        "Angular",
        "Routing",
        "navigation",
        "HTML",
        "views",
        "application",
        "Angular",
        "custom",
        "directives",
        "HTML",
        "elements",
        "DOM",
        "manipulation",
        "Log4j",
        "API",
        "development",
        "testing",
        "production",
        "environments",
        "email",
        "notifications",
        "Created",
        "Spring",
        "MVC",
        "components",
        "Dispatch",
        "servlets",
        "configure",
        "Request",
        "mapping",
        "annotation",
        "controllers",
        "resolver",
        "components",
        "transaction",
        "management",
        "Spring",
        "transaction",
        "management",
        "Spring",
        "AOP",
        "concepts",
        "version",
        "SVN",
        "Jenkins",
        "integration",
        "Wrote",
        "deployment",
        "scripts",
        "Ant",
        "Maven",
        "UNIX",
        "environment",
        "GIT",
        "version",
        "control",
        "eclipse",
        "IDE",
        "application",
        "Rational",
        "Clear",
        "Quest",
        "defect",
        "fixing",
        "contractors",
        "application",
        "QA",
        "lead",
        "development",
        "test",
        "plan",
        "test",
        "cases",
        "code",
        "testing",
        "defects",
        "allocation",
        "resolution",
        "defects",
        "Java",
        "Developer",
        "Seattle",
        "WA",
        "August",
        "December",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "viewcontroller",
        "components",
        "JSPs",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "jQuery",
        "logic",
        "navigation",
        "screen",
        "screen",
        "login",
        "functionality",
        "client",
        "side",
        "Angular",
        "website",
        "graphics",
        "website",
        "HTML",
        "JavaScript",
        "CSS",
        "ReactJS",
        "REST",
        "web",
        "services",
        "JAXRS",
        "annotations",
        "services",
        "modules",
        "Handson",
        "experience",
        "integration",
        "search",
        "programming",
        "languages",
        "JAVA",
        "JavaScript",
        "knowledge",
        "advance",
        "reporting",
        "search",
        "NodeJS",
        "application",
        "application",
        "Micro",
        "Service",
        "Architecture",
        "RESTful",
        "Service",
        "deployments",
        "AWS",
        "Spring",
        "Cloud",
        "AWS",
        "Micro",
        "Services",
        "business",
        "components",
        "Spring",
        "Boot",
        "instance",
        "Amazon",
        "EC2",
        "AWS",
        "Cloud",
        "Foundry",
        "application",
        "development",
        "Microservices",
        "models",
        "combination",
        "Spring",
        "Boot",
        "Spring",
        "Security",
        "Installed",
        "AWS",
        "cloud",
        "servers",
        "Amazon",
        "AWS",
        "servers",
        "Linux",
        "Spring",
        "Cloud",
        "AWS",
        "services",
        "SOAP",
        "web",
        "services",
        "Spring",
        "Soap",
        "Rest",
        "controllers",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "amount",
        "application",
        "institutions",
        "NoSQL",
        "databases",
        "Cassandra",
        "MongoDB",
        "Apache",
        "Spark",
        "cluster",
        "management",
        "Apache",
        "Kafka",
        "system",
        "POC",
        "Spark",
        "SQL",
        "records",
        "Cassandra",
        "storage",
        "Spark",
        "analytics",
        "Mongo",
        "Apache",
        "Kafka",
        "number",
        "messages",
        "service",
        "messages",
        "Couchbase",
        "Spring",
        "boot",
        "Couchbase",
        "starter",
        "data",
        "Worked",
        "Rest",
        "Web",
        "services",
        "services",
        "Couchbase",
        "DB",
        "NoSQL",
        "database",
        "services",
        "installation",
        "maintenance",
        "Kafka",
        "storm",
        "Zookeeper",
        "search",
        "salt",
        "stack",
        "technology",
        "time",
        "analytics",
        "pipeline",
        "Confluent",
        "Kafka",
        "storm",
        "search",
        "Splunk",
        "plum",
        "data",
        "transformation",
        "pipelines",
        "Storm",
        "analytics",
        "management",
        "ELK",
        "Splunk",
        "Assisted",
        "teams",
        "SQL",
        "MPP",
        "Green",
        "plum",
        "Java",
        "persistence",
        "layer",
        "application",
        "migration",
        "Cassandra",
        "Spark",
        "data",
        "Cassandra",
        "Cluster",
        "AWS",
        "services",
        "websites",
        "Web",
        "Apps",
        "EC2",
        "Elastic",
        "Beanstalk",
        "Elastic",
        "Container",
        "ServiceDocker",
        "EC2",
        "instances",
        "configurations",
        "applications",
        "S3",
        "buckets",
        "object",
        "level",
        "data",
        "APIs",
        "data",
        "Elastic",
        "Search",
        "cluster",
        "Java",
        "Transport",
        "client",
        "REST",
        "client",
        "Spring",
        "Integration",
        "Elastic",
        "Search",
        "Spring",
        "MVC",
        "framework",
        "ModelView",
        "Controller",
        "MVC",
        "architecture",
        "Web",
        "tier",
        "level",
        "layer",
        "application",
        "complexity",
        "integration",
        "maintenance",
        "Spring",
        "AOP",
        "concerns",
        "data",
        "transactions",
        "details",
        "Spring",
        "Batch",
        "amount",
        "data",
        "transaction",
        "management",
        "job",
        "processing",
        "resource",
        "management",
        "UNIX",
        "shell",
        "scripting",
        "software",
        "installation",
        "testing",
        "kubernetes",
        "applications",
        "CRUD",
        "clusters",
        "docker",
        "kubernetes",
        "pods",
        "application",
        "multi",
        "node",
        "kubernetes",
        "cluster",
        "AngularJS",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "data",
        "views",
        "data",
        "server",
        "Initiated",
        "Microservices",
        "application",
        "Docker",
        "Kubernetes",
        "cluster",
        "formation",
        "Hibernate",
        "ORM",
        "framework",
        "persistence",
        "engine",
        "Hibernate",
        "Queries",
        "mapping",
        "Oracle",
        "database",
        "Objects",
        "Java",
        "SQL",
        "Stored",
        "Procedures",
        "queries",
        "help",
        "TOAD",
        "Java",
        "Programs",
        "Oracle",
        "Database",
        "data",
        "collection",
        "WebLogic",
        "server",
        "JMS",
        "queue",
        "messages",
        "business",
        "floors",
        "routes",
        "WebLogic",
        "JMS",
        "email",
        "notification",
        "Maven",
        "scripts",
        "package",
        "application",
        "code",
        "target",
        "WebLogic",
        "Application",
        "Servers",
        "integration",
        "servers",
        "Jenkins",
        "Hands",
        "REST",
        "Micro",
        "Services",
        "Spring",
        "Cloud",
        "Oracle",
        "XSD",
        "JSON",
        "Spring",
        "Config",
        "Jenkins",
        "endpoints",
        "cache",
        "application",
        "data",
        "data",
        "clusters",
        "REDIS",
        "endpoints",
        "Test",
        "Driven",
        "Development",
        "JUnit",
        "tests",
        "piece",
        "functionality",
        "functionality",
        "Performed",
        "automation",
        "testing",
        "test",
        "scripts",
        "Selenium",
        "Web",
        "Driver",
        "Selenium",
        "Grid",
        "Junit",
        "Agile",
        "TDD",
        "environment",
        "SDLC",
        "tools",
        "GIT",
        "Jira",
        "Jenkins",
        "Maven",
        "build",
        "packaging",
        "deployments",
        "application",
        "components",
        "Java",
        "Developer",
        "BNY",
        "Mellon",
        "May",
        "December",
        "Responsibilities",
        "SDLC",
        "phases",
        "Design",
        "Development",
        "Testing",
        "Interact",
        "business",
        "managers",
        "requirements",
        "solutions",
        "application",
        "J2EE",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "Value",
        "Object",
        "Singleton",
        "Configured",
        "spring",
        "Actions",
        "beans",
        "dependencies",
        "Spring",
        "context",
        "file",
        "presentation",
        "tier",
        "HTML",
        "JSPs",
        "Struts",
        "Framework",
        "AJAX",
        "page",
        "application",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Framework",
        "Spring",
        "Batch",
        "Hibernate",
        "security",
        "Spring",
        "Security",
        "multitenant",
        "SaaS",
        "solutions",
        "UIs",
        "Java",
        "ReactJS",
        "NodeJS",
        "CSS",
        "modules",
        "Nodejs",
        "design",
        "requirements",
        "service",
        "Nodejs",
        "REACT",
        "modules",
        "client",
        "side",
        "Interface",
        "React",
        "JS",
        "Developed",
        "General",
        "Ledger",
        "module",
        "analysis",
        "reporting",
        "recording",
        "accounting",
        "information",
        "General",
        "Ledger",
        "spreadsheet",
        "solution",
        "analysis",
        "tracking",
        "facility",
        "information",
        "Developed",
        "clientfacing",
        "Struts",
        "web",
        "applications",
        "Java",
        "classes",
        "Struts",
        "Delegates",
        "DAOs",
        "AJAX",
        "MVC",
        "architecture",
        "Struts",
        "framework",
        "Action",
        "Classes",
        "requests",
        "handlers",
        "Struts",
        "Action",
        "Servlets",
        "requests",
        "Struts",
        "Action",
        "classes",
        "JSP",
        "Java",
        "Helper",
        "classes",
        "Inpatient",
        "outpatient",
        "Information",
        "Wrote",
        "Action",
        "classes",
        "Request",
        "Processor",
        "Business",
        "Delegate",
        "Business",
        "Objects",
        "Service",
        "Classes",
        "JSP",
        "pages",
        "Application",
        "integration",
        "Spring",
        "Web",
        "Services",
        "data",
        "Benefits",
        "application",
        "SOA",
        "architecture",
        "WSDL",
        "SOAP",
        "specifications",
        "unmarshalling",
        "JAXB",
        "web",
        "pages",
        "Servlets",
        "XML",
        "modules",
        "environment",
        "Ant",
        "Eclipse",
        "JBoss",
        "SQL",
        "Server",
        "Used",
        "Oracle",
        "database",
        "PLSQL",
        "packages",
        "procedures",
        "views",
        "functions",
        "Oracle",
        "database",
        "Cassandra",
        "NoSQL",
        "database",
        "management",
        "system",
        "data",
        "upgrading",
        "Couchbase",
        "Cassandra",
        "cluster",
        "Angular",
        "components",
        "versions",
        "Type",
        "Script",
        "CLI",
        "Integrated",
        "Java",
        "code",
        "API",
        "JSP",
        "pages",
        "Angular",
        "framework",
        "UI",
        "development",
        "Replication",
        "Filters",
        "CouchDB",
        "data",
        "nodes",
        "Couch",
        "base",
        "database",
        "micro",
        "services",
        "database",
        "nickel",
        "queries",
        "spring",
        "framework",
        "database",
        "Connection",
        "Pooling",
        "JDBC",
        "Oracle",
        "SQL",
        "query",
        "optimization",
        "components",
        "XML",
        "documents",
        "SAX",
        "DOM",
        "parsers",
        "code",
        "bean",
        "references",
        "spring",
        "framework",
        "Spring",
        "MVC",
        "Model",
        "View",
        "Controller",
        "pattern",
        "Spring",
        "IoC",
        "data",
        "Java",
        "beans",
        "project",
        "Eclipse",
        "IDE",
        "DB",
        "interactions",
        "Hibernate",
        "management",
        "documentation",
        "Java",
        "applications",
        "MS",
        "Visio",
        "MS",
        "Word",
        "JDBC",
        "data",
        "persistence",
        "design",
        "documents",
        "business",
        "modules",
        "references",
        "updates",
        "application",
        "JBoss",
        "Application",
        "Server",
        "development",
        "production",
        "environment",
        "CVS",
        "Version",
        "control",
        "system",
        "Maven",
        "build",
        "dependency",
        "management",
        "tool",
        "dependencies",
        "ANT",
        "build",
        "tool",
        "Junit",
        "Unit",
        "tests",
        "test",
        "application",
        "Java",
        "applications",
        "Functional",
        "Testing",
        "JBoss",
        "statements",
        "Code",
        "Walkthrough",
        "Test",
        "cases",
        "Test",
        "Plans",
        "Education",
        "Masters",
        "Skills",
        "Spring",
        "Java",
        "Java",
        "Hibernate"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:38:34.946677",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java developer New Brunswick NJ Around 5 years of experience in IT as a Full stack JavaJ2EE Developer and worked in the areas of Analysis Design Development Production Support and Deployment of Web based applications Expertise in the implementation of Core concepts of Java J2EE Technologies JSP Servlets JSTL JPA JSF JMS Struts Spring Hibernate EJB Java Beans JDBC XML Web Services JNDI MultiThreading Having knowledge on Java 8 features like Lambda expressions and functional interfaces and Parallel Streams In depth knowledge on core java concepts such as OOPS Collections Threading generics Exception handling MultiThreading Execution services concurrent utilities File IO Garbage Collection and Serialization Experience and indepth Knowledge of understanding in the strategy and practical implementation of AWS CloudSpecific technologies including S3 EC2 Virtual Private Cloud VPC Relational Database Service RDS Simple Queue Service SQS Elastic Block Store EBS Simple Notification Service SNS Cloud Front Cloud Formation Elastic Load Balancing AWS Identity and access management Elastic Cache Cloud Watch RedShift AWS Lambda Dynamo DB Strong experience of using open source technologies including React Node JS Spring Angular 7642 jQuery Apache Storm Elastic Search Redis Mongo DB Bootstrap Junit etc Good Knowledge on developing the UI pages from scratch using HTML5 CSS3 JavaScript jQuery Google Web Toolkit GWT Bootstrap AJAX Angular 7642 Backbone JS Node JS and Reactjs Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Good knowledge in Hadoop Architecture with various components such as HDFS Flume Pig and MapReduce Hands on Experience with Middleware Technology Messaging Brokers like JMS Kafka Active MQ Rabbit MQ Experience in Creating and configuring the continuous delivery pipelines for deploying Micro services and lambda functions using Jenkins CI server Experienced in React JS and working with React Flux architecture and Redux frameworks Strong experience in Spring Framework modules such as Spring MVC IOC AOP JDBC JTA IO Spring Boot Spring Microservices Spring REST Spring Annotations Spring Transactions and Spring Security Expertise in developing SOA Service Oriented Architecture REST and J2EE Web Services based on SOAP WSDL UDDI JAXWS JAXB JAXRPC using tools like Apache Axis Extensive experience in development of Web services such as SOAP using WSDL JAXB SOAP JAXWS and Apache CXF and Restful using JAXRS CXF Rest easy JERSY implementation Strong experience in designing and developing data models and accessing from Java applications using SQL PLSQL ORM tool Hibernate and has experience with NoSQL databases like MongoDB Cassandra Experience in developed logging and standard mechanism based on Log4j and SLF4j Handson experience working with Continuous Integration CI buildautomation tools such as Maven GIT GITHUB SVN CVS Jenkins and Apache Ant Have experience to Develop scripts for build deployment maintenance and related tasks using Jenkins Docker Experience in designing developing and deploying J2EE applications on Web sphere Web logic Apache Tomcat and JBoss application Servers Experienced in writing and implementing unit test cases using Junit Unit test Selenium Cucumber Easy mock and Mockito Strong experience on various development environments IDE Tools like Eclipse IRAD and My Eclipse Experienced in performing automation using Selenium Java and performing Behavioral driven testing using Cucumber and Jbehive Experience in Test Driven Development TDD Waterfall model and agile methodologies like scrum Experience in working with different operating systems like Windows and UNIXLinux Work Experience Java Developer Java DeveloperJohnson Johnson New Brunswick NJ January 2018 to Present Responsibilities Involved in programming testing debugging implementing and maintaining of Java EE clientserver distributed application to meet the organizations needs Prepared the Java 8 development structure for MyEclipse and Replaced the Joda library using streams and lambda expressions Used the stream feature of Java 8 for aggregate operation and pipelining Design coded and tested key modules of the project using java oops concepts Used most of the new features of Java 8 like lambda expressions functional interfaces Method references and stream API Backend application code developed using Java 8 and Spring Boot Services to consume the data from the Database and from the other applications Architected designed and implemented a SPA Single Page Application in Angular 76 which consume JSON from a Spring MVC using Spring Security to secure the Application Involved in design and development of UI component which includes layered POVs and Carousels using frameworks Angular 76 JavaScript HTML5 CSS3 and Bootstrap Implemented Web Service calls for data parsing and server interaction using spring Threads JSON SOAP RESTAPI and Apache Exposed Stateless session beans as RESTful web services using JAXRS Implemented Angular76 promises to handle asynchronous communication with our Rest API for various requirements Make pluggable UI Microservice for each platform which should solve the monolithic problem of seed generation and create Docker image and deploy them into Kubernetes using Angular 76 Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Worked with Docker and Kubernetes to manage micro services for development of continuous integration and worked with Spring MVC pattern used Hibernate persistence framework for developing the public access Agile Court application Mainly involved in development and maintenance of the website using HTML5 CSS3 Ajax jQuery JavaScript Angular 76 and Nodejs Used Rabbit MQ to provide a single unifying transport that reduces cost and maintenance efforts including support for HTTP REST and JMS Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Developed test cases for Front Jasmine and Karma and have used Rabbit MQ queues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Developed the spring AOP programming to configure logging for the application Designed the page flow using struts server side components and ibatis for DAO layer Developed Servlets and JSPs based on MVC pattern using Struts framework and Spring Framework Used Node JS React JS Backbone MVC framework for developing the Single Page Application SPA Developed and executed software systems utilizing ReactJS and Groovy Implemented the application using Spring IOC Spring MVC Framework Spring Batch Hibernate and handled the security using Spring Security Developed internationalized multitenant SaaS solutions with responsive UIs using Java or ReactJS with NodeJS and CSS Responsible for developing the UI side with ReactJS SASS HTML5 Implemented Spark using Scala and utilizing Data frames and Spark SQL API for faster processing of data Implemented Spark RDD transformations to Map business analysis and apply actions on top of transformations Developed POCs production ready jobs to stream the data from various backend systems to IMDG using feeds various database pull Apache Spark and Kafka Migrating some of the applications from AngularJS6 to AngularJS7 and componentize the code as per the Angular 6 recommendations for better testability Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS Wrote Ext JS Ember js function while implementing various UI Screens across the whole web application both consumer facing as well as internal application Built main application in PHP leveraging technologies such as Tastypie Angular js Backbone js Ember js and Celery Worked with ObjectOriented JavaScript such as Backbone js Knockout js Ember js Handlebars js Worked with design management configuration and troubleshooting of distributed production environments based on NoSQL technologies like MongoDB Apache HadoopHBase Couchbase etc Well versed in installation configuration supporting and managing of Big Data and underlying infrastructure of Hadoop Cluster Worked in performing real time analytics on big data using HBase and Cassandra in Kubernetes Hadoop clusters Deployed Spring Boot based Microservices Docker container using Amazon EC2 container services Build Rest services using NodeJS and ExpressJS and used a full complement of Express Angular 76 NodeJS and MongoDB to store and present assessments Performed unit testing using JUNIT test cases and automated functional testing tools like Selenium debug tools like log4j used Mockito for stubbing Created automated test cases for the web application using Selenium Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Integrating Struts with spring by delegating Struts action management to Spring Framework using proxy Developed different reports in JavaScript by implementing the Angular 76 SPA framework and common packages for the application using Generics Involved in unit and integration testing using both SOAP UI and APIGEE trace tool Used Storm and Kafka Services to push data to HBase and Hive tables installed Kafka cluster with separate nodes for brokers Consumed Kafka stream using Apache Storm topology Designed and developed Microservices Architecture to divide application into business components using Spring Boot Apache Storm Active MQ and Apache Kafka Developed queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Developed user interface using JSP AJAX JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application Developed the application using Struts Framework that leverages classical Model View Controller architecture Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in Oracle DB and NoSQL DB Worked closely with Devops team to set up CICD pipeline using Jenkins Ansible AWS Maven and GIT Deploying Rest APIs Application in AWS Cloud and Cloud Foundry Used ExpressJS to route different endpoints made RESTful services to manipulate data in MySQL Familiar with MongoDB write concern to avoid loss of data during system failures and implemented read preferences in MongoDB replica set Developed a feature in utility application and Verification Monitoring tool to verify the application statistics like poolers consumers loggers using Angular 6 Nodejs and Bootstrap Created ant build files to create the EAR and WAR files and involved in development of CPRS system using the Spring MVC framework Involved in development of Hibernate objects in order to persist data into the database Involved in writing SQL scripts and creating backend database table for complex business operations Participated in building webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Used XML web services using SOAP to transfer the remote application to different institutions Developed web services to allow communication between applications through SOAP over HTTP using Axis2 Secured the APIs by implementing OAuth 20 tokenbased authenticationauthorization scheme using Spring Security Designed and developed thirdparty Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol Developed a production Nodejs application with Express module and persisted user information in MongoDB using Mongoose ORM Node JS to manage dependencies and ExpressJS to quickly build a modular server codebase Used Angular 6 Routing for navigation between nested HTML views in the application and created Angular 6 custom directives that were used along with HTML elements for DOM manipulation Used Log4j API for logging in development testing and production environments configured to send email notifications Created Spring MVC components like Dispatch servlets configure Request mapping annotation controllers view resolver components and implemented transaction management using Spring declarative transaction management with Spring AOP concepts Implemented version controlling using SVN and used Jenkins for continuous integration Wrote build deployment scripts using Ant Maven on UNIX environment Used GIT for version control and used eclipse as the IDE for developing the application Used Rational Clear Quest for defect fixing Involved in guiding mentoring new contractors to understand the application Coordinated with QA lead for development of test plan test cases test code and actual testing responsible for defects allocation and resolution of those defects Java Developer Starbucks Seattle WA August 2016 to December 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design development and testing Developed the viewcontroller components using JSPs HTML5 CSS3 AJAX JavaScript jQuery Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in Angular 4 Developed website and created graphics for website using HTML JavaScript CSS ReactJS Implemented REST based web services using JAXRS annotations consumed services from angular 4 modules Handson experience in developing integration with Elastic search in any of the programming languages like JAVA and JavaScript Having knowledge of advance reporting using Elastic search and NodeJS Developed the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS using Spring Cloud for AWS Designed and developed Micro Services business components using Spring Boot Responsible for creating an instance on Amazon EC2 AWS Pivotal Cloud Foundry and deployed the application on it Involved in the development of Microservices for all the models using combination of Spring Boot and Spring Security Installed secured and configured AWS cloud servers and Amazon AWS virtual servers Linux and used Spring Cloud for AWS Exposed micro services as both SOAP and Restful web services using Spring Soap Rest controllers Used XML Web Services using SOAP to transfer the amount to transfer application that is remote and global to different financial institutions Worked on NoSQL databases like Cassandra and MongoDB and Apache Spark for cluster management with Apache Kafka as messaging system Implemented a POC with Spark SQL to interpret complex JSON records Used Cassandra as a storage for Spark analytics and worked on Mongo dB Used Apache Kafka for holding large number of messages and using RESTful service pushing messages to Couchbase and used Spring boot and Couchbase starter for retrieving and storing data to Couchbase Worked on Rest Web services for backend services used Couchbase DB NoSQL for database services Automated the installation and maintenance of Kafka storm Zookeeper and elastic search using salt stack technology Implemented real time analytics pipeline using Confluent Kafka storm elastic search Splunk and green plum Worked on data transformation pipelines like Storm Worked with operational analytics and log management using ELK and Splunk Assisted teams with SQL and MPP databases such as Green plum Extensively worked on Java persistence layer in application migration to Cassandra using Spark to load data to and Cassandra Cluster Worked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container ServiceDocker Involved in creating EC2 instances and installed required configurations and applications on it and created S3 buckets for storing object level data into it Developed APIs to read and publish data from Elastic Search cluster using native Java Transport client as well as REST client Worked on Spring Integration with the Elastic Search Used Spring MVC framework for implementing ModelView Controller MVC architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced and maintenance will be very easy Used Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc Used Spring Batch for processing large amount of data like transaction management job processing resource management and logging Used UNIX shell scripting to automate software installation and testing and Used kubernetes to manage applications by inspecting and performing CRUD on clusters and worked on docker with kubernetes to create pods for application and deployed across multi node kubernetes cluster Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server and Initiated Microservices application through Docker and Kubernetes cluster formation Used Hibernate ORM framework as persistence engine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java Involved in writing SQL and Stored Procedures for handling complex queries with help of TOAD and access them through Java Programs from Oracle Database Worked with MongoDB to store nonrelational data into collection and retrieve them whenever required Used WebLogic server to route our JMS queue messages to different business floors and configured routes in WebLogic and used JMS in email notification Worked on setting up Maven scripts to build package and deploy application code to the target WebLogic Application Servers and worked on continuous integration servers like Jenkins Hands on Coding to build REST Micro Services using Spring Cloud Oracle XSD JSON Spring Config and Jenkins Worked on developing RESTful endpoints to cache application specific data in inmemory data clusters like REDIS and exposed them with RESTful endpoints Focused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality Performed automation testing and authored test scripts using Selenium Web Driver Selenium Grid and Junit Worked in Agile TDD environment using SDLC tools like GIT Jira Jenkins and Maven for build packaging and deployments of the application components Java Developer BNY Mellon IN May 2014 to December 2015 Responsibilities Involved in various SDLC phases like Design Development and Testing Interact with business managers to transform requirements into technical solutions Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator Value Object and Singleton Configured spring to manage Actions as beans and set their dependencies in a Spring context file Developed presentation tier as HTML JSPs using Struts Framework Used AJAX for faster page rendering Implemented the application using Spring IOC Spring MVC Framework Spring Batch Hibernate and handled the security using Spring Security Developed internationalized multitenant SaaS solutions with responsive UIs using Java or ReactJS with NodeJS and CSS Implemented modules into Nodejs to integrate with design and requirements also backend service using Nodejs and REACT modules and implemented client side Interface using React JS Developed General Ledger module which streamlines analysis reporting and recording of accounting information General Ledger automatically integrates with a powerful spreadsheet solution for budgeting comparative analysis and tracking facility information for flexible reporting Developed clientfacing Struts web applications by creating and modifying Java classes JSPs Struts Delegates and DAOs AJAX Implemented the MVC architecture using Struts framework Developed various Action Classes that route requests to appropriate handlers Coded Struts Action Servlets to process requests and forward to Struts Action classes Developed JSP and Java Helper classes for Inpatient and outpatient Information Wrote Action classes Request Processor Business Delegate Business Objects Service Classes and JSP pages Application integration with Spring Web Services to fetch data from external Benefits application using SOA architecture configuring WSDL based on SOAP specifications and marshalling and unmarshalling using JAXB Developed web pages using Servlets and XML for various modules and involved in environment set up with Ant Eclipse JBoss and SQL Server 2005 Used Oracle as the backend database and wrote PLSQL packages stored procedures views and functions at the Oracle database Used Cassandra NoSQL database management system for keeping usergenerated data by upgrading of Couchbase and Cassandra cluster Developed multiple Angular 2 components which are compatible with latest versions of Type Script angular CLI Integrated the Java code API in JSP pages and responsible for setting up Angular 2 framework for UI development Used Replication Filters in CouchDB to filter precisely the data that needs to be replicated to different nodes Used Couch base as a database for one of the micro services which talks to database using nickel queries within spring framework Designed generic database Connection Pooling with JDBC using Oracle and involved in the SQL query optimization Developed the components for parsing XML documents using SAX and DOM parsers Involved in developing code for obtaining bean references in spring framework and used Spring MVC to implement the Model View Controller pattern Used Spring IoC to inject data into Java beans Developed project in Eclipse IDE and created DB interactions using Hibernate Provided management with technical documentation for Java applications using MS Visio and MS Word Worked on JDBC for data persistence and prepared high and lowlevel design documents for the business modules for future references and updates Deployed the application in JBoss Application Server in development and production environment Implemented CVS as Version control system and used Maven as a build and dependency management tool to manage various dependencies Used ANT as build tool and Junit for writing Unit tests Involved in the functional test of the application and tested Java applications using Functional Testing JBoss and log statements Code Walkthrough Test cases and Test Plans Education Masters Skills Spring Java Java J2Ee Hibernate",
    "unique_id": "978b08cd-c7b0-4151-aed0-4cf1914c0bdd"
}