{
    "clean_data": "Job Seeker Bayonne NJ Skilled and resultsoriented Software Engineer with more than 15 years of experience contributing to the design and rollout of cuttingedge software applications in a variety of environmentsprograms using development methodologies tdd oop functional tools and processes Work Experience Bank of America Jersey City NJ September 2018 to Present PB Risk Quartz Leveraged Quartz Frameworks transactional reference objects event property which captures db deltas to implement an audit trail feature critical to the fund config changes tracking requirements of Fund Managers Enabled propagation of Margin Group Configuration changes to Margin Group Views through a rest ful api call flask which create messages read by InformClient listener and highlights deltas in views Automated a manual beginningofthemonth extract system by using bob jobs daily run setting and incorporating pandas date_range dateoffset BMS setting in the extraction bob cant be set monthly Resolved a crtiical position handling production issue utilizing all to correctly implement a special position rule rectified incorrect interpretation of De Morgans theorem Centralized email parameters in a configuration file which replaced hardcoded distribution group emails in 50 modules enabled dynamic response to regulatory requirements by Compliance Rectified unit testing issues by mocking external systems such as sandra db used by the source un der test simplified object instantiation for each test routine by using  Python Developer Insight Global Jersey City NJ June 2018 to August 2018 Refactored EMCUnisphere adapters simplified file ops using context manager and used configura tion to replace hardcoding Vastly improved performance of a computationally intensive metrics system by leveraging GOs gor outines to perform calculations concurrently replaced a single threaded system Provided operations with the abilitiy to view virtual machines listing under specific hosts by leverag ing vRopsAPI metrics collection module and persisting data to OpenTSDB time series database using RestfulAPI Application Architect Data Inc August 2017 to February 2018 Enabled compliance department to track counterparty bankruptcy eligibility by using Quartz Python UI widgets gui and Sandra distributed objects for persistence BOFA db Provided risk data clients ondemand access to critical credit summary fitforusepercentages by creating a python API exposing the path to credit summary Sandra objects Resolved QzTrades extraction data quality issue by debugging LFO House Python adapter and recti fying pertinent fields values assignment through changes in the attributes configuration file Configured risk apps for dynamic adapter and environment assignments Hastened deal inventory to consolidated inventory api transition by creating a python reconciliation tool utilized by both DEV and QA team for comparing deal and consolidated counts Provided statistical insight to trade trends by leveraging percentile pandas feature Senior Developer Judge LLC September 2016 to May 2017 Jersey City PythonAnsible Tech Infrastructure Automated network cluster builds by consuming Django RESTful APIs to gather LLDP NIC and VLAN data setting up RHEL nodes by subprocess call for config and ifup Enabled vcms team to meet enterprise logging requirements by converting logging to be compliant to Universal Logging Framework Facilitated roundrobin load balancing for TaskServer by providing load balancing portal gomy compute itsm change management system and appviewx node health check system with the ap propriate network settings ip address uri etc Supported legacy node setup via shell scripts with Ansible calls Senior Developer Diversant March 2015 to September 2016 Implemented an ETL process which replaced manual monthly data upload from Arctic to Traded Products Sandra db used paramiko module for ftp services yaml for configuration and created a python script daemon launched by the Command Console job scheduler Automated variance reporting by using pythons smtp module creating a parser to convert variance data set into HTML format and having the variance report module registered to the Command Con sole job scheduler Enabled management to scrutinizevalidate cem saccr and imm models by creating python ap plications which apply transformation rules to derivatives transaction records generating ead rwa pd calculations Resolved data pipeline latency issues by replacing complicatedobscure qztable primaryforeign key matching algorithms with set intersection Created scripts using awk to parse through flat files for specific expressions or filter Senior Developer Las Vegas NV April 2014 to February 2015 Facilitated development of customized features for the universal transaction gateway by creating a credit card swipe simulator using the Delphi programming language Reduced code redundancy by using C function pointers Resolved C application issues by using gdb for stepthough debugging Leveraged C STL vectors for containing transaction objects which effectively eliminated mainte nance of an errorprone array based container Senior Python Developer Experis March 2013 to March 2014 Increased unit testing coverage for the Libra Team from 65 to 92 by mentoring offshore team on pyunit usage and its features such as fixtures  mocks test suites etc Automated Libras data upload processes through trigger file detection and reuse of enterprise db api to load data into Sybase Refactored Libra python codebase by using pythonic idioms such as enumerate context manager decorators etc Resolved unit testing issues by mocking resources used in the original test cases and introduced functional testing where  is leveraged to createdelete test data on the resource Senior Python Developer Deutsche Bank Jersey City NJ February 2007 to March 2013 Reduced derivatives xml file processing time by 60 through replacement of the DOM based parser with cElementTree XML API and thus expediting downstream reporting process Extended bond trades csv file system to upload fixedwidth data format to Pershing by using python metaprogramming technique to modify FrontArena objects runtime behavior Instituted instruments requestresponse system by leveraging Bloomberg Data License and using AEL Python objects to load data into Front Arena Reduced insertupdate processing time by 65 for global data hub oracle by leveraging MERGE as a replacement to complex stored PLSQL procedure Customized Front Arena functionalities through AEL Python programming meeting DB requirements Senior Developer Satyam Brooklyn NY February 2004 to February 2007 Supported and maintained a wrapper for C binary file reader using SWIG to create a python ap plication for reporting Display Book DBK captured entries DBK is used by NYSE specialists to cap ture buysell client trades and the report is scanned for anomalous or irregular transactions Resolved python modules issues by debugging using pdb as stepthrough tool replacing the print approach Leveraged C template feature to overload functions effectively providing a dynamic solution to different parameter types for the same function Utilized C function pointers to reduce code duplication Sr Web Developer Quest Diagnostics Lyndhurst NJ February 1999 to February 2004 Enabled patients doctors and hospitals to send queries to Quest Diagnostics by creating a Contact Us feature on Weblogic based portal using JavaMail as the transport container and JSP as the inter face Expedited inclusion of American Medical Labs test menu system within Quest web by converting AMLs Accessbased test menu data into XML and using Javas SAX parser as an integral part of the search engine Pioneered internal technology request system using Perl CGI for web form and PerlSMTP to send requests to technology group Supported and maintained Quest Diagnostics web portal using EJB JSP through Weblogic Java Developer Prudential Florham Park NJ March 1996 to February 1999 Enabled migration of data from a legacy system to Oracle DB by converting flat files into XML format and using Java SAX engine to parse XML data and load into assigned Oracle tables Supported and maintained an insurance quotationrequest application using MQSeries C insur ance quotations are calculated using insurance data and results are placed back in q queue Supported and maintained Group Insurance web portal using Trilogys Java web framework JRun Education BSBA in Accounting Philippine School of Business Administration Computer Programming Systems Technology Institute Additional Information SKILLS Professional Python Flask restful api Pandas CC gdb gcc Unix shell scripting awk grep vim emacs Perl SQL Oracle PLSQL Postgresql Sybase HTML Javascript XML JSON Java github subversion",
    "entities": [
        "Margin Group Configuration",
        "Work Experience Bank of America Jersey City",
        "VLAN",
        "appviewx node",
        "Python Developer Deutsche Bank",
        "beginningofthemonth",
        "LLDP NIC",
        "ETL",
        "Margin Group Views",
        "API",
        "SWIG",
        "Pandas CC gdb",
        "QA",
        "Compliance Rectified",
        "Front Arena Reduced",
        "Refactored EMCUnisphere",
        "Leveraged C STL",
        "AEL Python",
        "TaskServer",
        "Automated Libras",
        "Utilized C",
        "DEV",
        "Oracle",
        "un",
        "De Morgans",
        "Quartz Python",
        "Weblogic Java Developer",
        "Universal Logging Framework Facilitated",
        "BMS",
        "American Medical Labs",
        "MERGE",
        "Oracle DB",
        "MQSeries C",
        "Delphi",
        "Accounting Philippine School of Business Administration Computer Programming Systems Technology Institute Additional Information SKILLS Professional Python Flask",
        "gdb",
        "Bloomberg Data License",
        "Group Insurance",
        "Us",
        "JSP",
        "Weblogic",
        "Command",
        "Perl SQL Oracle",
        "Software Engineer",
        "XML",
        "Quest Diagnostics",
        "Leveraged C",
        "the Libra Team",
        "Jersey City PythonAnsible Tech Infrastructure Automated",
        "DOM",
        "LFO House Python",
        "DBK",
        "Automated",
        "RestfulAPI Application Architect Data Inc",
        "NYSE",
        "ftp",
        "Supported",
        "FrontArena"
    ],
    "experience": "Experience Bank of America Jersey City NJ September 2018 to Present PB Risk Quartz Leveraged Quartz Frameworks transactional reference objects event property which captures db deltas to implement an audit trail feature critical to the fund config changes tracking requirements of Fund Managers Enabled propagation of Margin Group Configuration changes to Margin Group Views through a rest ful api call flask which create messages read by InformClient listener and highlights deltas in views Automated a manual beginningofthemonth extract system by using bob jobs daily run setting and incorporating pandas date_range dateoffset BMS setting in the extraction bob ca nt be set monthly Resolved a crtiical position handling production issue utilizing all to correctly implement a special position rule rectified incorrect interpretation of De Morgans theorem Centralized email parameters in a configuration file which replaced hardcoded distribution group emails in 50 modules enabled dynamic response to regulatory requirements by Compliance Rectified unit testing issues by mocking external systems such as sandra db used by the source un der test simplified object instantiation for each test routine by using   Python Developer Insight Global Jersey City NJ June 2018 to August 2018 Refactored EMCUnisphere adapters simplified file ops using context manager and used configura tion to replace hardcoding Vastly improved performance of a computationally intensive metrics system by leveraging GOs gor outines to perform calculations concurrently replaced a single threaded system Provided operations with the abilitiy to view virtual machines listing under specific hosts by leverag ing vRopsAPI metrics collection module and persisting data to OpenTSDB time series database using RestfulAPI Application Architect Data Inc August 2017 to February 2018 Enabled compliance department to track counterparty bankruptcy eligibility by using Quartz Python UI widgets gui and Sandra distributed objects for persistence BOFA db Provided risk data clients ondemand access to critical credit summary fitforusepercentages by creating a python API exposing the path to credit summary Sandra objects Resolved QzTrades extraction data quality issue by debugging LFO House Python adapter and recti fying pertinent fields values assignment through changes in the attributes configuration file Configured risk apps for dynamic adapter and environment assignments Hastened deal inventory to consolidated inventory api transition by creating a python reconciliation tool utilized by both DEV and QA team for comparing deal and consolidated counts Provided statistical insight to trade trends by leveraging percentile pandas feature Senior Developer Judge LLC September 2016 to May 2017 Jersey City PythonAnsible Tech Infrastructure Automated network cluster builds by consuming Django RESTful APIs to gather LLDP NIC and VLAN data setting up RHEL nodes by subprocess call for config and ifup Enabled vcms team to meet enterprise logging requirements by converting logging to be compliant to Universal Logging Framework Facilitated roundrobin load balancing for TaskServer by providing load balancing portal gomy compute itsm change management system and appviewx node health check system with the ap propriate network settings ip address uri etc Supported legacy node setup via shell scripts with Ansible calls Senior Developer Diversant March 2015 to September 2016 Implemented an ETL process which replaced manual monthly data upload from Arctic to Traded Products Sandra db used paramiko module for ftp services yaml for configuration and created a python script daemon launched by the Command Console job scheduler Automated variance reporting by using pythons smtp module creating a parser to convert variance data set into HTML format and having the variance report module registered to the Command Con sole job scheduler Enabled management to scrutinizevalidate cem saccr and imm models by creating python ap plications which apply transformation rules to derivatives transaction records generating ead rwa pd calculations Resolved data pipeline latency issues by replacing complicatedobscure qztable primaryforeign key matching algorithms with set intersection Created scripts using awk to parse through flat files for specific expressions or filter Senior Developer Las Vegas NV April 2014 to February 2015 Facilitated development of customized features for the universal transaction gateway by creating a credit card swipe simulator using the Delphi programming language Reduced code redundancy by using C function pointers Resolved C application issues by using gdb for stepthough debugging Leveraged C STL vectors for containing transaction objects which effectively eliminated mainte nance of an errorprone array based container Senior Python Developer Experis March 2013 to March 2014 Increased unit testing coverage for the Libra Team from 65 to 92 by mentoring offshore team on pyunit usage and its features such as fixtures   mocks test suites etc Automated Libras data upload processes through trigger file detection and reuse of enterprise db api to load data into Sybase Refactored Libra python codebase by using pythonic idioms such as enumerate context manager decorators etc Resolved unit testing issues by mocking resources used in the original test cases and introduced functional testing where   is leveraged to createdelete test data on the resource Senior Python Developer Deutsche Bank Jersey City NJ February 2007 to March 2013 Reduced derivatives xml file processing time by 60 through replacement of the DOM based parser with cElementTree XML API and thus expediting downstream reporting process Extended bond trades csv file system to upload fixedwidth data format to Pershing by using python metaprogramming technique to modify FrontArena objects runtime behavior Instituted instruments requestresponse system by leveraging Bloomberg Data License and using AEL Python objects to load data into Front Arena Reduced insertupdate processing time by 65 for global data hub oracle by leveraging MERGE as a replacement to complex stored PLSQL procedure Customized Front Arena functionalities through AEL Python programming meeting DB requirements Senior Developer Satyam Brooklyn NY February 2004 to February 2007 Supported and maintained a wrapper for C binary file reader using SWIG to create a python ap plication for reporting Display Book DBK captured entries DBK is used by NYSE specialists to cap ture buysell client trades and the report is scanned for anomalous or irregular transactions Resolved python modules issues by debugging using pdb as stepthrough tool replacing the print approach Leveraged C template feature to overload functions effectively providing a dynamic solution to different parameter types for the same function Utilized C function pointers to reduce code duplication Sr Web Developer Quest Diagnostics Lyndhurst NJ February 1999 to February 2004 Enabled patients doctors and hospitals to send queries to Quest Diagnostics by creating a Contact Us feature on Weblogic based portal using JavaMail as the transport container and JSP as the inter face Expedited inclusion of American Medical Labs test menu system within Quest web by converting AMLs Accessbased test menu data into XML and using Javas SAX parser as an integral part of the search engine Pioneered internal technology request system using Perl CGI for web form and PerlSMTP to send requests to technology group Supported and maintained Quest Diagnostics web portal using EJB JSP through Weblogic Java Developer Prudential Florham Park NJ March 1996 to February 1999 Enabled migration of data from a legacy system to Oracle DB by converting flat files into XML format and using Java SAX engine to parse XML data and load into assigned Oracle tables Supported and maintained an insurance quotationrequest application using MQSeries C insur ance quotations are calculated using insurance data and results are placed back in q queue Supported and maintained Group Insurance web portal using Trilogys Java web framework JRun Education BSBA in Accounting Philippine School of Business Administration Computer Programming Systems Technology Institute Additional Information SKILLS Professional Python Flask restful api Pandas CC gdb gcc Unix shell scripting awk grep vim emacs Perl SQL Oracle PLSQL Postgresql Sybase HTML Javascript XML JSON Java github subversion",
    "extracted_keywords": [
        "Job",
        "Seeker",
        "Bayonne",
        "NJ",
        "Skilled",
        "Software",
        "Engineer",
        "years",
        "experience",
        "design",
        "rollout",
        "cuttingedge",
        "software",
        "applications",
        "variety",
        "environmentsprograms",
        "development",
        "methodologies",
        "tdd",
        "oop",
        "tools",
        "Work",
        "Experience",
        "Bank",
        "America",
        "Jersey",
        "City",
        "NJ",
        "September",
        "Present",
        "PB",
        "Risk",
        "Quartz",
        "Leveraged",
        "Quartz",
        "Frameworks",
        "reference",
        "event",
        "property",
        "deltas",
        "audit",
        "trail",
        "feature",
        "fund",
        "config",
        "tracking",
        "requirements",
        "Fund",
        "Managers",
        "propagation",
        "Margin",
        "Group",
        "Configuration",
        "changes",
        "Margin",
        "Group",
        "Views",
        "rest",
        "api",
        "call",
        "flask",
        "messages",
        "InformClient",
        "listener",
        "deltas",
        "views",
        "extract",
        "system",
        "bob",
        "jobs",
        "pandas",
        "BMS",
        "extraction",
        "bob",
        "position",
        "production",
        "issue",
        "position",
        "rule",
        "interpretation",
        "De",
        "Morgans",
        "email",
        "parameters",
        "configuration",
        "file",
        "distribution",
        "group",
        "emails",
        "modules",
        "response",
        "requirements",
        "Compliance",
        "unit",
        "testing",
        "issues",
        "systems",
        "sandra",
        "source",
        "un",
        "der",
        "test",
        "object",
        "instantiation",
        "test",
        "Python",
        "Developer",
        "Insight",
        "Global",
        "Jersey",
        "City",
        "NJ",
        "June",
        "August",
        "Refactored",
        "EMCUnisphere",
        "adapters",
        "file",
        "ops",
        "context",
        "manager",
        "configura",
        "tion",
        "hardcoding",
        "performance",
        "metrics",
        "system",
        "GOs",
        "outines",
        "calculations",
        "system",
        "operations",
        "abilitiy",
        "machines",
        "hosts",
        "leverag",
        "vRopsAPI",
        "metrics",
        "collection",
        "module",
        "data",
        "time",
        "series",
        "database",
        "RestfulAPI",
        "Application",
        "Architect",
        "Data",
        "Inc",
        "August",
        "February",
        "compliance",
        "department",
        "counterparty",
        "bankruptcy",
        "eligibility",
        "Quartz",
        "Python",
        "UI",
        "gui",
        "Sandra",
        "objects",
        "persistence",
        "BOFA",
        "risk",
        "data",
        "clients",
        "access",
        "credit",
        "summary",
        "fitforusepercentages",
        "API",
        "path",
        "credit",
        "summary",
        "Sandra",
        "Resolved",
        "QzTrades",
        "extraction",
        "data",
        "quality",
        "issue",
        "LFO",
        "House",
        "Python",
        "adapter",
        "fields",
        "values",
        "assignment",
        "changes",
        "attributes",
        "configuration",
        "file",
        "risk",
        "apps",
        "adapter",
        "environment",
        "assignments",
        "deal",
        "inventory",
        "inventory",
        "api",
        "transition",
        "reconciliation",
        "tool",
        "DEV",
        "QA",
        "team",
        "deal",
        "counts",
        "insight",
        "trends",
        "pandas",
        "Senior",
        "Developer",
        "Judge",
        "LLC",
        "September",
        "May",
        "Jersey",
        "City",
        "PythonAnsible",
        "Tech",
        "Infrastructure",
        "Automated",
        "network",
        "cluster",
        "Django",
        "APIs",
        "LLDP",
        "NIC",
        "data",
        "RHEL",
        "nodes",
        "call",
        "config",
        "ifup",
        "vcms",
        "team",
        "enterprise",
        "requirements",
        "Universal",
        "Logging",
        "Framework",
        "roundrobin",
        "load",
        "TaskServer",
        "load",
        "gomy",
        "compute",
        "itsm",
        "change",
        "management",
        "system",
        "appviewx",
        "node",
        "health",
        "check",
        "system",
        "ap",
        "propriate",
        "network",
        "settings",
        "ip",
        "address",
        "uri",
        "legacy",
        "node",
        "setup",
        "scripts",
        "calls",
        "Senior",
        "Developer",
        "Diversant",
        "March",
        "September",
        "ETL",
        "process",
        "data",
        "upload",
        "Arctic",
        "Traded",
        "Products",
        "Sandra",
        "paramiko",
        "module",
        "ftp",
        "services",
        "yaml",
        "configuration",
        "python",
        "script",
        "daemon",
        "Command",
        "Console",
        "job",
        "scheduler",
        "Automated",
        "variance",
        "pythons",
        "smtp",
        "module",
        "parser",
        "variance",
        "data",
        "HTML",
        "format",
        "variance",
        "report",
        "module",
        "Command",
        "Con",
        "job",
        "scheduler",
        "management",
        "cem",
        "saccr",
        "imm",
        "models",
        "python",
        "ap",
        "plications",
        "transformation",
        "rules",
        "derivatives",
        "transaction",
        "records",
        "rwa",
        "pd",
        "calculations",
        "data",
        "pipeline",
        "latency",
        "issues",
        "complicatedobscure",
        "matching",
        "algorithms",
        "intersection",
        "scripts",
        "awk",
        "files",
        "expressions",
        "Senior",
        "Developer",
        "Las",
        "Vegas",
        "NV",
        "April",
        "February",
        "development",
        "features",
        "transaction",
        "gateway",
        "credit",
        "card",
        "swipe",
        "simulator",
        "Delphi",
        "programming",
        "language",
        "Reduced",
        "code",
        "redundancy",
        "C",
        "function",
        "pointers",
        "C",
        "application",
        "issues",
        "gdb",
        "Leveraged",
        "C",
        "STL",
        "vectors",
        "transaction",
        "objects",
        "mainte",
        "nance",
        "errorprone",
        "array",
        "container",
        "Senior",
        "Python",
        "Developer",
        "Experis",
        "March",
        "March",
        "unit",
        "testing",
        "coverage",
        "Libra",
        "Team",
        "team",
        "pyunit",
        "usage",
        "features",
        "fixtures",
        "mocks",
        "test",
        "suites",
        "Automated",
        "Libras",
        "data",
        "upload",
        "trigger",
        "file",
        "detection",
        "reuse",
        "enterprise",
        "api",
        "data",
        "Sybase",
        "Refactored",
        "Libra",
        "python",
        "codebase",
        "idioms",
        "context",
        "manager",
        "decorators",
        "Resolved",
        "unit",
        "testing",
        "issues",
        "resources",
        "test",
        "cases",
        "testing",
        "test",
        "data",
        "resource",
        "Senior",
        "Python",
        "Developer",
        "Deutsche",
        "Bank",
        "Jersey",
        "City",
        "NJ",
        "February",
        "March",
        "Reduced",
        "derivatives",
        "file",
        "processing",
        "time",
        "replacement",
        "DOM",
        "parser",
        "cElementTree",
        "XML",
        "API",
        "reporting",
        "process",
        "bond",
        "trades",
        "file",
        "system",
        "data",
        "format",
        "Pershing",
        "python",
        "metaprogramming",
        "technique",
        "FrontArena",
        "runtime",
        "behavior",
        "instruments",
        "requestresponse",
        "system",
        "Bloomberg",
        "Data",
        "License",
        "AEL",
        "Python",
        "data",
        "Front",
        "Arena",
        "Reduced",
        "processing",
        "time",
        "data",
        "hub",
        "oracle",
        "MERGE",
        "replacement",
        "PLSQL",
        "procedure",
        "Front",
        "Arena",
        "functionalities",
        "AEL",
        "Python",
        "programming",
        "meeting",
        "DB",
        "requirements",
        "Senior",
        "Developer",
        "Satyam",
        "Brooklyn",
        "NY",
        "February",
        "February",
        "wrapper",
        "C",
        "file",
        "reader",
        "SWIG",
        "python",
        "ap",
        "plication",
        "Display",
        "Book",
        "DBK",
        "entries",
        "DBK",
        "NYSE",
        "specialists",
        "ture",
        "buysell",
        "client",
        "trades",
        "report",
        "transactions",
        "python",
        "modules",
        "issues",
        "pdb",
        "tool",
        "print",
        "Leveraged",
        "C",
        "template",
        "feature",
        "overload",
        "functions",
        "solution",
        "parameter",
        "types",
        "function",
        "C",
        "function",
        "pointers",
        "code",
        "duplication",
        "Sr",
        "Web",
        "Developer",
        "Quest",
        "Diagnostics",
        "Lyndhurst",
        "NJ",
        "February",
        "February",
        "patients",
        "doctors",
        "hospitals",
        "queries",
        "Quest",
        "Diagnostics",
        "Contact",
        "Us",
        "feature",
        "Weblogic",
        "portal",
        "JavaMail",
        "transport",
        "container",
        "JSP",
        "inter",
        "Expedited",
        "inclusion",
        "American",
        "Medical",
        "Labs",
        "test",
        "menu",
        "system",
        "Quest",
        "web",
        "AMLs",
        "test",
        "menu",
        "data",
        "XML",
        "Javas",
        "SAX",
        "parser",
        "part",
        "search",
        "engine",
        "technology",
        "request",
        "system",
        "Perl",
        "CGI",
        "web",
        "form",
        "PerlSMTP",
        "requests",
        "technology",
        "group",
        "Quest",
        "Diagnostics",
        "web",
        "portal",
        "EJB",
        "JSP",
        "Weblogic",
        "Java",
        "Developer",
        "Prudential",
        "Florham",
        "Park",
        "NJ",
        "March",
        "February",
        "migration",
        "data",
        "legacy",
        "system",
        "Oracle",
        "DB",
        "files",
        "XML",
        "format",
        "Java",
        "SAX",
        "engine",
        "XML",
        "data",
        "load",
        "Oracle",
        "tables",
        "insurance",
        "quotationrequest",
        "application",
        "MQSeries",
        "C",
        "insur",
        "ance",
        "quotations",
        "insurance",
        "data",
        "results",
        "queue",
        "Group",
        "Insurance",
        "web",
        "portal",
        "Trilogys",
        "Java",
        "web",
        "framework",
        "JRun",
        "Education",
        "BSBA",
        "Accounting",
        "Philippine",
        "School",
        "Business",
        "Administration",
        "Computer",
        "Programming",
        "Systems",
        "Technology",
        "Institute",
        "Additional",
        "Information",
        "SKILLS",
        "Professional",
        "Python",
        "Flask",
        "api",
        "Pandas",
        "CC",
        "gdb",
        "gcc",
        "Unix",
        "shell",
        "scripting",
        "awk",
        "grep",
        "vim",
        "emacs",
        "Perl",
        "SQL",
        "Oracle",
        "PLSQL",
        "Postgresql",
        "Sybase",
        "HTML",
        "Javascript",
        "XML",
        "JSON",
        "Java",
        "github",
        "subversion"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:03:07.307320",
    "resume_data": "Job Seeker Bayonne NJ Skilled and resultsoriented Software Engineer with more than 15 years of experience contributing to the design and rollout of cuttingedge software applications in a variety of environmentsprograms using development methodologies tdd oop functional tools and processes Work Experience Bank of America Jersey City NJ September 2018 to Present PB Risk Quartz Leveraged Quartz Frameworks transactional reference objects event property which captures db deltas to implement an audit trail feature critical to the fund config changes tracking requirements of Fund Managers Enabled propagation of Margin Group Configuration changes to Margin Group Views through a rest ful api call flask which create messages read by InformClient listener and highlights deltas in views Automated a manual beginningofthemonth extract system by using bob jobs daily run setting and incorporating pandas date_range dateoffset BMS setting in the extraction bob cant be set monthly Resolved a crtiical position handling production issue utilizing all to correctly implement a special position rule rectified incorrect interpretation of De Morgans theorem Centralized email parameters in a configuration file which replaced hardcoded distribution group emails in 50 modules enabled dynamic response to regulatory requirements by Compliance Rectified unit testing issues by mocking external systems such as sandra db used by the source un der test simplified object instantiation for each test routine by using setUptearDown Python Developer Insight Global Jersey City NJ June 2018 to August 2018 Refactored EMCUnisphere adapters simplified file ops using context manager and used configura tion to replace hardcoding Vastly improved performance of a computationally intensive metrics system by leveraging GOs gor outines to perform calculations concurrently replaced a single threaded system Provided operations with the abilitiy to view virtual machines listing under specific hosts by leverag ing vRopsAPI metrics collection module and persisting data to OpenTSDB time series database using RestfulAPI Application Architect Data Inc August 2017 to February 2018 Enabled compliance department to track counterparty bankruptcy eligibility by using Quartz Python UI widgets gui and Sandra distributed objects for persistence BOFA db Provided risk data clients ondemand access to critical credit summary fitforusepercentages by creating a python API exposing the path to credit summary Sandra objects Resolved QzTrades extraction data quality issue by debugging LFO House Python adapter and recti fying pertinent fields values assignment through changes in the attributes configuration file Configured risk apps for dynamic adapter and environment assignments Hastened deal inventory to consolidated inventory api transition by creating a python reconciliation tool utilized by both DEV and QA team for comparing deal and consolidated counts Provided statistical insight to trade trends by leveraging percentile pandas feature Senior Developer Judge LLC September 2016 to May 2017 Jersey City PythonAnsible Tech Infrastructure Automated network cluster builds by consuming Django RESTful APIs to gather LLDP NIC and VLAN data setting up RHEL nodes by subprocess call for config and ifup Enabled vcms team to meet enterprise logging requirements by converting logging to be compliant to Universal Logging Framework Facilitated roundrobin load balancing for TaskServer by providing load balancing portal gomy compute itsm change management system and appviewx node health check system with the ap propriate network settings ip address uri etc Supported legacy node setup via shell scripts with Ansible calls Senior Developer Diversant March 2015 to September 2016 Implemented an ETL process which replaced manual monthly data upload from Arctic to Traded Products Sandra db used paramiko module for ftp services yaml for configuration and created a python script daemon launched by the Command Console job scheduler Automated variance reporting by using pythons smtp module creating a parser to convert variance data set into HTML format and having the variance report module registered to the Command Con sole job scheduler Enabled management to scrutinizevalidate cem saccr and imm models by creating python ap plications which apply transformation rules to derivatives transaction records generating ead rwa pd calculations Resolved data pipeline latency issues by replacing complicatedobscure qztable primaryforeign key matching algorithms with set intersection Created scripts using awk to parse through flat files for specific expressions or filter Senior Developer Las Vegas NV April 2014 to February 2015 Facilitated development of customized features for the universal transaction gateway by creating a credit card swipe simulator using the Delphi programming language Reduced code redundancy by using C function pointers Resolved C application issues by using gdb for stepthough debugging Leveraged C STL vectors for containing transaction objects which effectively eliminated mainte nance of an errorprone array based container Senior Python Developer Experis March 2013 to March 2014 Increased unit testing coverage for the Libra Team from 65 to 92 by mentoring offshore team on pyunit usage and its features such as fixtures setUptearDown mocks test suites etc Automated Libras data upload processes through trigger file detection and reuse of enterprise db api to load data into Sybase Refactored Libra python codebase by using pythonic idioms such as enumerate context manager decorators etc Resolved unit testing issues by mocking resources used in the original test cases and introduced functional testing where setUptearDown is leveraged to createdelete test data on the resource Senior Python Developer Deutsche Bank Jersey City NJ February 2007 to March 2013 Reduced derivatives xml file processing time by 60 through replacement of the DOM based parser with cElementTree XML API and thus expediting downstream reporting process Extended bond trades csv file system to upload fixedwidth data format to Pershing by using python metaprogramming technique to modify FrontArena objects runtime behavior Instituted instruments requestresponse system by leveraging Bloomberg Data License and using AEL Python objects to load data into Front Arena Reduced insertupdate processing time by 65 for global data hub oracle by leveraging MERGE as a replacement to complex stored PLSQL procedure Customized Front Arena functionalities through AEL Python programming meeting DB requirements Senior Developer Satyam Brooklyn NY February 2004 to February 2007 Supported and maintained a wrapper for C binary file reader using SWIG to create a python ap plication for reporting Display Book DBK captured entries DBK is used by NYSE specialists to cap ture buysell client trades and the report is scanned for anomalous or irregular transactions Resolved python modules issues by debugging using pdb as stepthrough tool replacing the print approach Leveraged C template feature to overload functions effectively providing a dynamic solution to different parameter types for the same function Utilized C function pointers to reduce code duplication Sr Web Developer Quest Diagnostics Lyndhurst NJ February 1999 to February 2004 Enabled patients doctors and hospitals to send queries to Quest Diagnostics by creating a Contact Us feature on Weblogic based portal using JavaMail as the transport container and JSP as the inter face Expedited inclusion of American Medical Labs test menu system within Quest web by converting AMLs Accessbased test menu data into XML and using Javas SAX parser as an integral part of the search engine Pioneered internal technology request system using Perl CGI for web form and PerlSMTP to send requests to technology group Supported and maintained Quest Diagnostics web portal using EJB JSP through Weblogic Java Developer Prudential Florham Park NJ March 1996 to February 1999 Enabled migration of data from a legacy system to Oracle DB by converting flat files into XML format and using Java SAX engine to parse XML data and load into assigned Oracle tables Supported and maintained an insurance quotationrequest application using MQSeries C insur ance quotations are calculated using insurance data and results are placed back in q queue Supported and maintained Group Insurance web portal using Trilogys Java web framework JRun Education BSBA in Accounting Philippine School of Business Administration Computer Programming Systems Technology Institute Additional Information SKILLS Professional Python Flask restful api Pandas CC gdb gcc Unix shell scripting awk grep vim emacs Perl SQL Oracle PLSQL Postgresql Sybase HTML Javascript XML JSON Java github subversion",
    "unique_id": "c5e8d776-300b-428a-af74-df1bc11d26ed"
}