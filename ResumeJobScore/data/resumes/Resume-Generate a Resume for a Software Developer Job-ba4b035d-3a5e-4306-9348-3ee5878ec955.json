{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Bank of America Over 5 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python C Django Django Rest Framework in various domains Good experience in Python Django Zope Bottlepy Pyramid Framework Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experience in the Hadoop ecosystem components like HDFS Spark with Scala and python Zookeeper Yarn MapReduce Pig Sqoop HBase Hive Flume Cassandra MongoDB Oozie Kafka Flume and TEZ Experience in utilizing SAS Functions SAS Procedures and Macros for data updates data cleansing and reporting Experience with Apache Kafka JMS and Rabbit MQ as the message oriented middleware Working Knowledge of Pandas Numpy Scipy Good working knowledge of Deep Learning Python libraries Working knowledge of data science architectures design patterns and modules such as Keras TensorFlow ScikitLearn NumPy SciPy Matplotlib H2o and MLLib Good understanding of cloud based DAG and Apache Air Flow Experience of software development in Python libraries used libraries BeautifulSoup numpy scipy matplotlib pythontwitter OpenCV Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experienced in MVW frameworks like Django Angularjs Java Script JQuery and Nodejs Proficient in Front end development experience using HTML XML CSS JQuery JSON and Javascript CSS Bootstrap Expert knowledge of and experience in Object oriented Design and Programming concepts Experience object oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience with JSPm Servlets Web Services SOAP REST and Tomcat Effective in executing multiple tasks and assignments ahead of schedule Created and maintained effective budgets Proficient in SQL databases MySQL Oracle and noSQL databases MongoDB Cassandra Sqlite 3 Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Good knowledge of server Apache Tomcat Web logic Hands on SVN Git JIRA Bugzilla Axosoft Amazon EC2S3 Experience in leading multiple efforts to build Hadoop platforms maximizing business value by combining data science with big data Import the historical data from RDBMS into HDFS using Sqoop Experience in installing configuring and using ecoSystem components like Hadoop MapReduce HDFS Hbase Pig Flume Handson experience in Unix and Linux Kernels Ability to manage Multiple project tasks with changing priorities and tight deadlines Ability to work well in a team Open to Team related tasks team meetings team interaction and conference calls Demonstrated ability to work well with a wide variety of people at various levels foster cooperation and collaboration among individuals in the work unit help team resolve conflicts constructively and ability and willingness to communicate when help is needed Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Strong expertise in development of webbased applications using Python Java HTML XML KML Angular JS CSS DHTML JavaScript JSON and jQuery Responsible for design and development of Web Pages using PHP HTML JOOMLA CSS including Ajax controls and XML Responsible for designing developing testing deploying and maintaining the web application Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using Django Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Have good knowledge on NoSQL databases like Mongo DB and SQL databases like MySQL PostgreSQL  Good experience in software development using Python and using its libraries and modules like NumPy Pandas SciPy Pickle Jupiter SciPy Pythontwitter Matplotlib urllib2 for data analytics and rapid development A self starter with a positive attitude willingness to learn new concepts and acceptance of challenges Work Experience Python Developer Bank of America Englewood CO July 2018 to Present Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and Jquery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Pyspark SparkSQL in making pipelines to extract data coming from MDL in spark environment Used POSTGRE SQL also worked with Hadoop Built data pipelines and Machine Learning ML models that run in production in collaboration with software engineers using the tools like Numpy SciKit Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Scala programming to perform transformations and applying business logic Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Assisted in the migration of existing SAS programs from SAS 92 to SAS 94 and validate the resultant datasets Performed Compatibility testing of applications for dynamic and static content of browsers using HTML Ids and XPath in Selenium Developed Automation Scripts for Regression using Selenium Web Driver and Python Worked on Integration of Selenium RCWebDriver with existing API to test Framework Designed recognition models for both handwritten and textbased characters capable of continuous learning using deep neural networks leveraging both Keras and TensorFlow machine learning frameworks in addition to NumPy Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Tracking operations using sensors until certain criteria is met using Air Flow technology Explored DAGs their dependencies and logs using Air Flow pipelines for automation Used Air Flow to keep track of job statuses in repositories like MySQL and Postgre databases Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Developed consumerbased features and applications using Python Django tasty pie pyramid Flask Web2py HTML jinja and other web technologies Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQP Rabbit MQ REST JSON and CRUD scripts for API Integration Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Extensively used Django micro service framework for simple request and response Utilized tools such as Python Tableau R etc to perform complex data analysis and visualizations Used Machine learning concepts common families of models feature engineering selection crossvalidation and parameter tuning Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in development of Web Services using REST for sending and getting data from the external interface in the JSON format Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created Restful backend service deployed on Li bode cloud VPSs using django web framework and SQL Alchemy ORM for data persistence Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Build SQL queries for performing various CRUD operations like create update read and delete Installed Wit be Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support Maintaining the scripts using the version Control Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Used Chef deployed and configured Elasticsearch Log stash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed and managed build and release methodologies using Wit be Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Built an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Built servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for Microservices and continuous deployment Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL Dynamo DB and MySQL database Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST and SOAP Python Developer Infosys October 2015 to December 2017 Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Extensive usage of User Controls and ASPNET server controls Developed and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Trained staff on effective use of Jenkins Docker GitLab and Kubernetes Coordination of Middleware project components into releases for deployment into testing regions and production Wrote SQL and implemented ORM using JPA and developed front end features using ReactReduxES6 with Web pack Analyzed global trading data wrote SQL stored procedures to extract trading data from multiple databases to report Global Trading Metrics blocks allocations notional late and not confirmed trades Designed Configured and managed publicprivate cloud infrastructures utilizing Amazon Web Services AWS including EC2 AutoScaling Elastic Load Balancer Elastic Beanstalk S3 Cloud Front RDS VPC Route53 Cloud Watch Cloud Formation IAM EBS RDS SNS SQS Redshift Managed continuous build and share progress with Confluence Bamboo and SVN Instituted configuration and systems management via Ansible inventoried and standardized system configurations and package installations trained other team members in the use of Git and Ansible Conducted system requirements sessions and documented requirements Deliver Big Data Products including replatforming Legacy Global Risk Management System with BigData Technologies such as Hadoop Hive and HBase Worked with NoSQL Mongo DB and heavily worked on Hive Hbase and HDFS Involved in designing application system requirements and coded backend and frontend in Django Pythonand Used ReactRouter to turn application into Single Page Application Managed local deployments in Kubernetes creating local cluster and deploying application containers Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Performed AWS Cloud administration managing EC2 instances S3 Cloud Formation SES and SNS services Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS JQuery AJAX and implemented CSS3 for better appearance and feel Implement modules into Node JS to integrate with designs and requirements Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Integration Test Coordinator and manager for Enterprise Testing Services ETS organization specializing in Ecommerce projects Architecture and development of REST Services powered webbased SaaS application for largescale video processing using custom DV Labs video compression software able to reduce the size of video by over 50 without a loss in perceived quality Java Groovy Python AWS SQS Jenkins MySQL NginX REST Services Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Involved in building stable React components and standalone functions to be added to any future pages Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed remote integration with third party platforms by using RESTful web services Improved code reuse and performance by making effective use of various design patterns and refactoring code base Created proofofconcept using responsive web design Nodejs React JS HTML5 and CSS3 Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Installed and Configured the Apache Nginx Tomcat web application servers for Dev and Integration Test Environments Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Extracted acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Performed different testing methods like unit testing Integration testing web application testing and selenium testing Aggregated the CPU and GPU temperature for the model as the model was using TensorFlow as bankend Implemented Machine Learning Computer Vision Deep Learning and Neural Networks algorithms using TensorFlow and designed Prediction Model using Data Mining Techniques with help of Python and Libraries like NumPy SciPy Matplotlib Pandas scikitlearn Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Created Data tables utilizing MySQL utilized Jinja to access data and display it in the front end Managed application server load and processing tasks using Celery and Rabbit MQ Python Developer CGI Group August 2013 to September 2015 Involved in the Complete Software development life cycle SDLC to develop the application Developed standalone application using Python UnixLinux scripting Developed Merge jobs in Python to extract and load data into Oracle database Developed python applications using Multithreading concepts Worked on CSV files while trying to get input from the Oracle database Managed large datasets using Oracle and Teradata Wrote python scripts to parse JSON and load the data in database Worked in stages such as analysis and design development testing and debugging Organized data exchange and integration with customers and thirdparty systems using CSV JSON Worked in Oracle database on simple queries and writing cursors Deployment of the standalone application using the Linux server Managed large datasets using Oracle Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Documented the design solutions and created stories for client requirements Rewrite existing Python module to deliver certain format of data Skills JSON 5 years LINUX 5 years PYTHON 5 years TESTING 5 years AJAX 3 years Additional Information Skills Operating systems Windows Linux MAC UNIX Languages Java C C Python 3x2x Ruby on Rails Scripting languages CSS AJAX Java Script JQuery PHP Shell Scripting Analytics Tools SAS Tableau Databricks Markup languages HTML XML JSON Bootstrap Servers Apache Tomcat Databases Oracle My SQL Postgress Apache Cassandra MongoDB Virtualization xen vmware virtualbox openstack vagrand docker lxc lxd IDEs Tools Eclipse Toad Sublime text PyCharm Pgadmin SQLite Revision Controlling Systems CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum Waterfall MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPTPlex Microservices Docker Ansible Jenkins Cloud Services AWS Azure Kubernetes Testing Frameworks PyUnit Splunk Selenium Message Queue ActiveMQ RabbitMQ",
    "entities": [
        "CSS HTML JavaScript",
        "Working Knowledge",
        "Dev and Integration Test Environments Modified",
        "Macros",
        "Implemented Docker",
        "Enterprise Testing Services",
        "CloudWatch Created Terraform",
        "BigData Technologies",
        "Nodejs Proficient",
        "Angularjs Created Data",
        "GitHub Nexus",
        "AJAX JSON",
        "Bash Used",
        "Keras",
        "SQLite Revision Controlling Systems",
        "AWS ECS",
        "LAMP Linux",
        "Amazon Web Services AWS",
        "Created a PythonDjango",
        "Ajax",
        "Microsoft Excel Super",
        "Design Development and Deployment Testing and Implementation",
        "Nodejs React JS HTML5",
        "Installed and Configured",
        "RDD",
        "Hadoop",
        "User Controls",
        "Proficient",
        "MAC",
        "Oracle Used Test",
        "Implemented Terraform",
        "Developed Restful Microservices",
        "SASAccess SAS SQL",
        "Apache Spark",
        "Amazon",
        "ReactRouter",
        "GitHub Bit Bucket",
        "AWS AMIs Involved",
        "Control Involved",
        "Python Script",
        "AWS Lambda and",
        "Global Risk Management System",
        "Python C",
        "Python",
        "API Integration Developed",
        "Assisted",
        "Developed",
        "JPA",
        "Bash",
        "Air Flow",
        "Neural Networks",
        "Created Python",
        "Django",
        "Utilized",
        "Python Unit",
        "Servlets Web Services",
        "Git",
        "Complete Software",
        "Jenkins on Scrumbasis Containerized",
        "ImportExport",
        "AWS Cloud",
        "MDL",
        "XML Responsible",
        "Machine Learning ML",
        "Pytorch TensorFlow",
        "PythonPHP",
        "HTML5",
        "NodeJS Involved",
        "Implemented Machine Learning Computer Vision Deep Learning",
        "Built",
        "Worked",
        "VMWare API",
        "CPU",
        "Docker",
        "Amazon SES",
        "PHP Experienced",
        "RDS",
        "Python Worked on Integration of Selenium RCWebDriver",
        "Performed Compatibility",
        "Tomcat Effective",
        "MVC",
        "UnixLinux",
        "Spark",
        "PythonDjango",
        "PythonPHP Architecture",
        "Puppet for Microservices",
        "Global Trading Metrics",
        "GIT",
        "Node JS",
        "log analytics full text search",
        "CSV",
        "REDIS",
        "API",
        "Developed Microservices",
        "Hadoop Hive",
        "Sqoop",
        "NGINX",
        "QA",
        "IAM",
        "Used POSTGRE SQL",
        "Hadoop MapReduce HDFS Hbase Pig Flume Handson",
        "Business Users",
        "Numpy SciKit Successfully",
        "Created",
        "AI",
        "AWS",
        "Jenkins Docker Ansible",
        "WAMP Windows Apache",
        "Web Services Created",
        "Oracle",
        "HDFS Spark",
        "HTML5 CSS JavaScript",
        "jQuery Responsible",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Pyspark",
        "Designed Configured",
        "Hadoop Built",
        "SQL PostgreSQL Handson",
        "Used Selenium Library",
        "DV Labs",
        "SAS",
        "Apache Air Flow",
        "SQL",
        "Jenkins CICD pipelines",
        "NLP",
        "lPythonspan",
        "Kubernetes",
        "GPU",
        "Python Developer Bank of America Englewood CO",
        "Administrators",
        "REST Integration Test Coordinator",
        "Kubernetes Coordination of Middleware",
        "SSH",
        "SQL Alchemy",
        "REST Services Managed",
        "Analysis Design Development Testing Customization Bug",
        "Python OOP Worked",
        "CICD",
        "MVW",
        "Created Restful",
        "Amazon AWS",
        "DAG",
        "HTML Ids",
        "TEZ",
        "HBase Worked",
        "SQLite",
        "ETL",
        "CRUD",
        "Design and Deployment Testing and Implementation",
        "SCM",
        "Waterfall MS",
        "Air Flow technology Explored",
        "REST Services",
        "Created UI",
        "JavaScript",
        "Front",
        "Deliver Big Data Products",
        "Additional Information Skills Operating",
        "Microsoft",
        "SVN",
        "CSS",
        "SQL Injections Vulnerabilities Wrote",
        "Jenkins Cloud Services",
        "jQuery",
        "PythonFlaskDjango",
        "HTML XML CSS",
        "REST",
        "ASPNET",
        "Python Django Zope Bottlepy",
        "Present Involved",
        "lDeveloperspan Python Developer Bank of America",
        "NoSQL",
        "Tableau",
        "HTMLCSSjQuery",
        "MLLib Good",
        "EBS",
        "Oracle SQLite PostgreSQL",
        "Single Page Application",
        "Integration",
        "Django Jinja Oracle DB PostgreSQL"
    ],
    "experience": "Experience in the Hadoop ecosystem components like HDFS Spark with Scala and python Zookeeper Yarn MapReduce Pig Sqoop HBase Hive Flume Cassandra MongoDB Oozie Kafka Flume and TEZ Experience in utilizing SAS Functions SAS Procedures and Macros for data updates data cleansing and reporting Experience with Apache Kafka JMS and Rabbit MQ as the message oriented middleware Working Knowledge of Pandas Numpy Scipy Good working knowledge of Deep Learning Python libraries Working knowledge of data science architectures design patterns and modules such as Keras TensorFlow ScikitLearn NumPy SciPy Matplotlib H2o and MLLib Good understanding of cloud based DAG and Apache Air Flow Experience of software development in Python libraries used libraries BeautifulSoup numpy scipy matplotlib pythontwitter OpenCV Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experienced in MVW frameworks like Django Angularjs Java Script JQuery and Nodejs Proficient in Front end development experience using HTML XML CSS JQuery JSON and Javascript CSS Bootstrap Expert knowledge of and experience in Object oriented Design and Programming concepts Experience object oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience with JSPm Servlets Web Services SOAP REST and Tomcat Effective in executing multiple tasks and assignments ahead of schedule Created and maintained effective budgets Proficient in SQL databases MySQL Oracle and noSQL databases MongoDB Cassandra Sqlite 3 Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Good knowledge of server Apache Tomcat Web logic Hands on SVN Git JIRA Bugzilla Axosoft Amazon EC2S3 Experience in leading multiple efforts to build Hadoop platforms maximizing business value by combining data science with big data Import the historical data from RDBMS into HDFS using Sqoop Experience in installing configuring and using ecoSystem components like Hadoop MapReduce HDFS Hbase Pig Flume Handson experience in Unix and Linux Kernels Ability to manage Multiple project tasks with changing priorities and tight deadlines Ability to work well in a team Open to Team related tasks team meetings team interaction and conference calls Demonstrated ability to work well with a wide variety of people at various levels foster cooperation and collaboration among individuals in the work unit help team resolve conflicts constructively and ability and willingness to communicate when help is needed Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Strong expertise in development of webbased applications using Python Java HTML XML KML Angular JS CSS DHTML JavaScript JSON and jQuery Responsible for design and development of Web Pages using PHP HTML JOOMLA CSS including Ajax controls and XML Responsible for designing developing testing deploying and maintaining the web application Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using Django Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Have good knowledge on NoSQL databases like Mongo DB and SQL databases like MySQL PostgreSQL   Good experience in software development using Python and using its libraries and modules like NumPy Pandas SciPy Pickle Jupiter SciPy Pythontwitter Matplotlib urllib2 for data analytics and rapid development A self starter with a positive attitude willingness to learn new concepts and acceptance of challenges Work Experience Python Developer Bank of America Englewood CO July 2018 to Present Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and Jquery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Pyspark SparkSQL in making pipelines to extract data coming from MDL in spark environment Used POSTGRE SQL also worked with Hadoop Built data pipelines and Machine Learning ML models that run in production in collaboration with software engineers using the tools like Numpy SciKit Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Scala programming to perform transformations and applying business logic Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Assisted in the migration of existing SAS programs from SAS 92 to SAS 94 and validate the resultant datasets Performed Compatibility testing of applications for dynamic and static content of browsers using HTML Ids and XPath in Selenium Developed Automation Scripts for Regression using Selenium Web Driver and Python Worked on Integration of Selenium RCWebDriver with existing API to test Framework Designed recognition models for both handwritten and textbased characters capable of continuous learning using deep neural networks leveraging both Keras and TensorFlow machine learning frameworks in addition to NumPy Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Tracking operations using sensors until certain criteria is met using Air Flow technology Explored DAGs their dependencies and logs using Air Flow pipelines for automation Used Air Flow to keep track of job statuses in repositories like MySQL and Postgre databases Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Developed consumerbased features and applications using Python Django tasty pie pyramid Flask Web2py HTML jinja and other web technologies Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQP Rabbit MQ REST JSON and CRUD scripts for API Integration Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Extensively used Django micro service framework for simple request and response Utilized tools such as Python Tableau R etc to perform complex data analysis and visualizations Used Machine learning concepts common families of models feature engineering selection crossvalidation and parameter tuning Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in development of Web Services using REST for sending and getting data from the external interface in the JSON format Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created Restful backend service deployed on Li bode cloud VPSs using django web framework and SQL Alchemy ORM for data persistence Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Build SQL queries for performing various CRUD operations like create update read and delete Installed Wit be Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support Maintaining the scripts using the version Control Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Used Chef deployed and configured Elasticsearch Log stash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed and managed build and release methodologies using Wit be Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Built an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Built servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for Microservices and continuous deployment Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL Dynamo DB and MySQL database Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST and SOAP Python Developer Infosys October 2015 to December 2017 Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Extensive usage of User Controls and ASPNET server controls Developed and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Trained staff on effective use of Jenkins Docker GitLab and Kubernetes Coordination of Middleware project components into releases for deployment into testing regions and production Wrote SQL and implemented ORM using JPA and developed front end features using ReactReduxES6 with Web pack Analyzed global trading data wrote SQL stored procedures to extract trading data from multiple databases to report Global Trading Metrics blocks allocations notional late and not confirmed trades Designed Configured and managed publicprivate cloud infrastructures utilizing Amazon Web Services AWS including EC2 AutoScaling Elastic Load Balancer Elastic Beanstalk S3 Cloud Front RDS VPC Route53 Cloud Watch Cloud Formation IAM EBS RDS SNS SQS Redshift Managed continuous build and share progress with Confluence Bamboo and SVN Instituted configuration and systems management via Ansible inventoried and standardized system configurations and package installations trained other team members in the use of Git and Ansible Conducted system requirements sessions and documented requirements Deliver Big Data Products including replatforming Legacy Global Risk Management System with BigData Technologies such as Hadoop Hive and HBase Worked with NoSQL Mongo DB and heavily worked on Hive Hbase and HDFS Involved in designing application system requirements and coded backend and frontend in Django Pythonand Used ReactRouter to turn application into Single Page Application Managed local deployments in Kubernetes creating local cluster and deploying application containers Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Performed AWS Cloud administration managing EC2 instances S3 Cloud Formation SES and SNS services Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS JQuery AJAX and implemented CSS3 for better appearance and feel Implement modules into Node JS to integrate with designs and requirements Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Integration Test Coordinator and manager for Enterprise Testing Services ETS organization specializing in Ecommerce projects Architecture and development of REST Services powered webbased SaaS application for largescale video processing using custom DV Labs video compression software able to reduce the size of video by over 50 without a loss in perceived quality Java Groovy Python AWS SQS Jenkins MySQL NginX REST Services Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Involved in building stable React components and standalone functions to be added to any future pages Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed remote integration with third party platforms by using RESTful web services Improved code reuse and performance by making effective use of various design patterns and refactoring code base Created proofofconcept using responsive web design Nodejs React JS HTML5 and CSS3 Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Installed and Configured the Apache Nginx Tomcat web application servers for Dev and Integration Test Environments Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Extracted acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Performed different testing methods like unit testing Integration testing web application testing and selenium testing Aggregated the CPU and GPU temperature for the model as the model was using TensorFlow as bankend Implemented Machine Learning Computer Vision Deep Learning and Neural Networks algorithms using TensorFlow and designed Prediction Model using Data Mining Techniques with help of Python and Libraries like NumPy SciPy Matplotlib Pandas scikitlearn Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Created Data tables utilizing MySQL utilized Jinja to access data and display it in the front end Managed application server load and processing tasks using Celery and Rabbit MQ Python Developer CGI Group August 2013 to September 2015 Involved in the Complete Software development life cycle SDLC to develop the application Developed standalone application using Python UnixLinux scripting Developed Merge jobs in Python to extract and load data into Oracle database Developed python applications using Multithreading concepts Worked on CSV files while trying to get input from the Oracle database Managed large datasets using Oracle and Teradata Wrote python scripts to parse JSON and load the data in database Worked in stages such as analysis and design development testing and debugging Organized data exchange and integration with customers and thirdparty systems using CSV JSON Worked in Oracle database on simple queries and writing cursors Deployment of the standalone application using the Linux server Managed large datasets using Oracle Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Documented the design solutions and created stories for client requirements Rewrite existing Python module to deliver certain format of data Skills JSON 5 years LINUX 5 years PYTHON 5 years TESTING 5 years AJAX 3 years Additional Information Skills Operating systems Windows Linux MAC UNIX Languages Java C C Python 3x2x Ruby on Rails Scripting languages CSS AJAX Java Script JQuery PHP Shell Scripting Analytics Tools SAS Tableau Databricks Markup languages HTML XML JSON Bootstrap Servers Apache Tomcat Databases Oracle My SQL Postgress Apache Cassandra MongoDB Virtualization xen vmware virtualbox openstack vagrand docker lxc lxd IDEs Tools Eclipse Toad Sublime text PyCharm Pgadmin SQLite Revision Controlling Systems CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum Waterfall MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPTPlex Microservices Docker Ansible Jenkins Cloud Services AWS Azure Kubernetes Testing Frameworks PyUnit Splunk Selenium Message Queue ActiveMQ RabbitMQ",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Bank",
        "America",
        "Years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Customization",
        "Bug",
        "fixes",
        "Enhancement",
        "Support",
        "Implementation",
        "web",
        "standalone",
        "enterprise",
        "applications",
        "Python",
        "C",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "domains",
        "experience",
        "Python",
        "Django",
        "Zope",
        "Bottlepy",
        "Pyramid",
        "Framework",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Experience",
        "Hadoop",
        "ecosystem",
        "components",
        "HDFS",
        "Spark",
        "Scala",
        "python",
        "Zookeeper",
        "Yarn",
        "MapReduce",
        "Pig",
        "Sqoop",
        "HBase",
        "Hive",
        "Flume",
        "Cassandra",
        "MongoDB",
        "Oozie",
        "Kafka",
        "Flume",
        "TEZ",
        "Experience",
        "SAS",
        "Functions",
        "SAS",
        "Procedures",
        "Macros",
        "data",
        "updates",
        "data",
        "cleansing",
        "Experience",
        "Apache",
        "Kafka",
        "JMS",
        "Rabbit",
        "MQ",
        "message",
        "middleware",
        "Working",
        "Knowledge",
        "Pandas",
        "Numpy",
        "Scipy",
        "knowledge",
        "Deep",
        "Learning",
        "Python",
        "knowledge",
        "data",
        "science",
        "design",
        "patterns",
        "modules",
        "Keras",
        "TensorFlow",
        "ScikitLearn",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "H2o",
        "MLLib",
        "understanding",
        "cloud",
        "DAG",
        "Apache",
        "Air",
        "Flow",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "BeautifulSoup",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "networkx",
        "urllib2",
        "MySQLdb",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "pycharm",
        "emacs",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "JQuery",
        "Nodejs",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "HTML",
        "XML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "CSS",
        "Bootstrap",
        "Expert",
        "knowledge",
        "Object",
        "Design",
        "Programming",
        "concepts",
        "Experience",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Experience",
        "JSPm",
        "Servlets",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Tomcat",
        "tasks",
        "assignments",
        "schedule",
        "budgets",
        "SQL",
        "MySQL",
        "Oracle",
        "noSQL",
        "Cassandra",
        "Sqlite",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Excellent",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "RedHat",
        "Linux",
        "Fedora",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "Hands",
        "SVN",
        "Git",
        "JIRA",
        "Bugzilla",
        "Axosoft",
        "Amazon",
        "EC2S3",
        "Experience",
        "efforts",
        "Hadoop",
        "platforms",
        "business",
        "value",
        "data",
        "science",
        "data",
        "Import",
        "data",
        "RDBMS",
        "HDFS",
        "Sqoop",
        "Experience",
        "configuring",
        "ecoSystem",
        "components",
        "Hadoop",
        "MapReduce",
        "HDFS",
        "Hbase",
        "Pig",
        "Flume",
        "Handson",
        "experience",
        "Unix",
        "Linux",
        "Kernels",
        "Ability",
        "project",
        "tasks",
        "priorities",
        "deadlines",
        "Ability",
        "team",
        "Team",
        "tasks",
        "team",
        "meetings",
        "team",
        "interaction",
        "conference",
        "ability",
        "variety",
        "people",
        "levels",
        "cooperation",
        "collaboration",
        "individuals",
        "work",
        "unit",
        "team",
        "conflicts",
        "ability",
        "willingness",
        "help",
        "design",
        "patterns",
        "MVC",
        "Django",
        "Flask",
        "application",
        "Apache",
        "tomcat",
        "server",
        "applications",
        "Docker",
        "Strong",
        "expertise",
        "development",
        "applications",
        "Python",
        "Java",
        "HTML",
        "XML",
        "KML",
        "Angular",
        "JS",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "jQuery",
        "Responsible",
        "design",
        "development",
        "Web",
        "Pages",
        "PHP",
        "HTML",
        "JOOMLA",
        "CSS",
        "controls",
        "XML",
        "testing",
        "web",
        "application",
        "Experience",
        "Design",
        "code",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "Experience",
        "Setup",
        "AWS",
        "EC2",
        "instance",
        "Amazon",
        "SES",
        "email",
        "delivery",
        "handson",
        "experience",
        "SCM",
        "tools",
        "GIT",
        "containers",
        "Docker",
        "Backend",
        "applications",
        "PythonFlaskDjango",
        "SQL",
        "PostgreSQL",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "frame",
        "work",
        "Django",
        "Good",
        "experience",
        "web",
        "applications",
        "MVT",
        "architecture",
        "Django",
        "Flask",
        "web",
        "application",
        "frameworks",
        "understanding",
        "Django",
        "ORM",
        "SQL",
        "Alchemy",
        "Experience",
        "AWS",
        "Cloud",
        "services",
        "EC2",
        "S3",
        "EBS",
        "VPC",
        "ELB",
        "Route53",
        "Cloud",
        "Watch",
        "Security",
        "Groups",
        "Cloud",
        "Trail",
        "IAM",
        "Cloud",
        "Front",
        "Snowball",
        "RDS",
        "Glacier",
        "Responsible",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "Expertise",
        "test",
        "automation",
        "delivery",
        "web",
        "applications",
        "client",
        "server",
        "applications",
        "web",
        "servicesREST",
        "APIs",
        "Python",
        "knowledge",
        "NoSQL",
        "databases",
        "Mongo",
        "DB",
        "SQL",
        "MySQL",
        "PostgreSQL",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "modules",
        "NumPy",
        "Pandas",
        "SciPy",
        "Pickle",
        "Jupiter",
        "SciPy",
        "Pythontwitter",
        "Matplotlib",
        "urllib2",
        "data",
        "analytics",
        "development",
        "self",
        "starter",
        "attitude",
        "willingness",
        "concepts",
        "acceptance",
        "challenges",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Bank",
        "America",
        "Englewood",
        "CO",
        "July",
        "Present",
        "development",
        "end",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "bootstrap",
        "AJAX",
        "JSON",
        "Jquery",
        "Web",
        "Application",
        "MultiTier",
        "Architecture",
        "web",
        "technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "RESTful",
        "Web",
        "Services",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "business",
        "process",
        "automation",
        "applications",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Used",
        "Pyspark",
        "SparkSQL",
        "pipelines",
        "data",
        "MDL",
        "spark",
        "environment",
        "POSTGRE",
        "SQL",
        "Hadoop",
        "data",
        "pipelines",
        "Machine",
        "Learning",
        "ML",
        "models",
        "production",
        "collaboration",
        "software",
        "engineers",
        "tools",
        "Numpy",
        "SciKit",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Scala",
        "programming",
        "transformations",
        "business",
        "logic",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Python",
        "Scala",
        "Scala",
        "HiveSQL",
        "queries",
        "RDD",
        "transformations",
        "Apache",
        "Spark",
        "SAS",
        "data",
        "models",
        "Base",
        "SAS",
        "SAS",
        "Macros",
        "Modified",
        "SAS",
        "datasets",
        "input",
        "sources",
        "files",
        "CSV",
        "formats",
        "reports",
        "tables",
        "SAS",
        "datasets",
        "migration",
        "SAS",
        "programs",
        "SAS",
        "SAS",
        "datasets",
        "Performed",
        "Compatibility",
        "testing",
        "applications",
        "content",
        "browsers",
        "HTML",
        "Ids",
        "XPath",
        "Selenium",
        "Developed",
        "Automation",
        "Scripts",
        "Regression",
        "Selenium",
        "Web",
        "Driver",
        "Python",
        "Integration",
        "Selenium",
        "API",
        "Framework",
        "recognition",
        "models",
        "characters",
        "learning",
        "networks",
        "Keras",
        "TensorFlow",
        "machine",
        "frameworks",
        "addition",
        "NumPy",
        "source",
        "AI",
        "Pytorch",
        "TensorFlow",
        "Scikitlearn",
        "Apache",
        "Open",
        "Source",
        "Kafka",
        "Storm",
        "Spark",
        "NLP",
        "ML",
        "Algorithms",
        "Tracking",
        "operations",
        "sensors",
        "criteria",
        "Air",
        "Flow",
        "technology",
        "DAGs",
        "dependencies",
        "logs",
        "Air",
        "Flow",
        "pipelines",
        "automation",
        "Air",
        "Flow",
        "track",
        "job",
        "statuses",
        "repositories",
        "MySQL",
        "Postgre",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Jinja",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "pie",
        "pyramid",
        "Flask",
        "Web2py",
        "HTML",
        "jinja",
        "web",
        "technologies",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQP",
        "Rabbit",
        "MQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Developed",
        "modules",
        "CSV",
        "XML",
        "data",
        "files",
        "REST",
        "services",
        "data",
        "Django",
        "micro",
        "service",
        "framework",
        "request",
        "response",
        "tools",
        "Python",
        "Tableau",
        "R",
        "data",
        "analysis",
        "visualizations",
        "Machine",
        "learning",
        "concepts",
        "families",
        "models",
        "engineering",
        "selection",
        "crossvalidation",
        "parameter",
        "tuning",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Microservices",
        "REST",
        "APIs",
        "data",
        "suppliers",
        "network",
        "traffic",
        "data",
        "servers",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "development",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Restful",
        "backend",
        "service",
        "Li",
        "cloud",
        "VPSs",
        "django",
        "web",
        "framework",
        "SQL",
        "Alchemy",
        "ORM",
        "data",
        "persistence",
        "UI",
        "JavaScript",
        "HTML5",
        "data",
        "management",
        "system",
        "MySQL",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Installed",
        "Wit",
        "Python",
        "Jira",
        "test",
        "Rail",
        "part",
        "server",
        "setups",
        "AWS",
        "server",
        "deployment",
        "data",
        "processing",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "Nexus",
        "Maven",
        "AWS",
        "AMIs",
        "lifecycle",
        "projects",
        "Design",
        "Deployment",
        "Testing",
        "Implementation",
        "scripts",
        "version",
        "Control",
        "Web",
        "application",
        "penetration",
        "testing",
        "process",
        "web",
        "process",
        "SQL",
        "Injections",
        "Vulnerabilities",
        "Wrote",
        "automate",
        "Python",
        "Script",
        "testing",
        "program",
        "machine",
        "detection",
        "alarm",
        "experience",
        "Amazon",
        "cloud",
        "Developed",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "webpages",
        "HTML5",
        "CSS",
        "JavaScript",
        "AJAX",
        "data",
        "HTML",
        "format",
        "data",
        "files",
        "Used",
        "Chef",
        "Elasticsearch",
        "Log",
        "stash",
        "Kibana",
        "ELK",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Designed",
        "build",
        "methodologies",
        "Wit",
        "Tool",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Apache",
        "CouchDB",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "programming",
        "automations",
        "Jenkins",
        "Ansible",
        "UnixLinux",
        "OS",
        "cloud",
        "Docker",
        "AWS",
        "REDIS",
        "server",
        "data",
        "analysis",
        "interaction",
        "Business",
        "Users",
        "UATSIT",
        "Developed",
        "Restful",
        "Microservices",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "CICD",
        "pipeline",
        "dev",
        "QA",
        "prod",
        "environments",
        "Jenkins",
        "Bamboo",
        "Docker",
        "Designed",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Cloud",
        "Formation",
        "Cloud",
        "Watch",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "network",
        "architecture",
        "AWS",
        "subnets",
        "Internet",
        "Gateway",
        "Route",
        "Perform",
        "S3",
        "buckets",
        "creation",
        "storage",
        "S3",
        "buckets",
        "policies",
        "IAM",
        "policies",
        "AWS",
        "ImportExport",
        "amounts",
        "data",
        "AWS",
        "storage",
        "devices",
        "transport",
        "POC",
        "application",
        "service",
        "architecture",
        "architecture",
        "Docker",
        "container",
        "technology",
        "Kubernetes",
        "REST",
        "API",
        "integration",
        "deployments",
        "Jenkins",
        "Docker",
        "Ansible",
        "AWS",
        "Cloud",
        "Templates",
        "Docker",
        "images",
        "Docker",
        "Hub",
        "solutions",
        "Docker",
        "Jenkins",
        "Git",
        "Puppet",
        "Microservices",
        "deployment",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Cassandra",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "Dynamo",
        "DB",
        "MySQL",
        "database",
        "Implemented",
        "Docker",
        "containers",
        "images",
        "applications",
        "provision",
        "slaves",
        "Jenkins",
        "CICD",
        "pipelines",
        "Development",
        "code",
        "Python",
        "code",
        "Companys",
        "Source",
        "control",
        "Bitbucket",
        "Companys",
        "Sever",
        "CICD",
        "procedures",
        "Jenkins",
        "Scrumbasis",
        "Containerized",
        "ETL",
        "REST",
        "services",
        "AWS",
        "ECS",
        "CICD",
        "Jenkins",
        "pipe",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "REST",
        "Python",
        "Developer",
        "Infosys",
        "October",
        "December",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "usage",
        "User",
        "Controls",
        "ASPNET",
        "server",
        "Developed",
        "Python",
        "scripts",
        "automation",
        "procedure",
        "API",
        "JSON",
        "data",
        "hardware",
        "system",
        "design",
        "documents",
        "business",
        "objectives",
        "developer",
        "testing",
        "activities",
        "unit",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "staff",
        "use",
        "Jenkins",
        "Docker",
        "GitLab",
        "Kubernetes",
        "Coordination",
        "Middleware",
        "project",
        "components",
        "releases",
        "deployment",
        "testing",
        "regions",
        "production",
        "Wrote",
        "SQL",
        "ORM",
        "JPA",
        "end",
        "features",
        "ReactReduxES6",
        "Web",
        "pack",
        "trading",
        "data",
        "SQL",
        "procedures",
        "trading",
        "data",
        "databases",
        "Global",
        "Trading",
        "Metrics",
        "blocks",
        "allocations",
        "trades",
        "Configured",
        "publicprivate",
        "cloud",
        "infrastructures",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AutoScaling",
        "Elastic",
        "Load",
        "Balancer",
        "Elastic",
        "Beanstalk",
        "S3",
        "Cloud",
        "Front",
        "RDS",
        "VPC",
        "Route53",
        "Cloud",
        "Watch",
        "Cloud",
        "Formation",
        "IAM",
        "EBS",
        "RDS",
        "SNS",
        "SQS",
        "Redshift",
        "build",
        "progress",
        "Confluence",
        "Bamboo",
        "SVN",
        "configuration",
        "systems",
        "management",
        "system",
        "configurations",
        "package",
        "installations",
        "team",
        "members",
        "use",
        "Git",
        "Ansible",
        "Conducted",
        "system",
        "requirements",
        "sessions",
        "requirements",
        "Deliver",
        "Big",
        "Data",
        "Products",
        "Legacy",
        "Global",
        "Risk",
        "Management",
        "System",
        "BigData",
        "Technologies",
        "Hadoop",
        "Hive",
        "HBase",
        "NoSQL",
        "Mongo",
        "DB",
        "Hive",
        "Hbase",
        "HDFS",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Django",
        "Pythonand",
        "ReactRouter",
        "application",
        "Single",
        "Page",
        "Application",
        "deployments",
        "Kubernetes",
        "cluster",
        "application",
        "containers",
        "frontend",
        "code",
        "call",
        "AngularJS",
        "jQuery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "RESTful",
        "Server",
        "Performed",
        "AWS",
        "Cloud",
        "administration",
        "EC2",
        "instances",
        "S3",
        "Cloud",
        "Formation",
        "SES",
        "SNS",
        "services",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML5",
        "JavaScript",
        "JQuery",
        "AJAX",
        "CSS3",
        "appearance",
        "Implement",
        "modules",
        "Node",
        "JS",
        "designs",
        "requirements",
        "network",
        "web",
        "pages",
        "user",
        "application",
        "links",
        "page",
        "user",
        "use",
        "REST",
        "Integration",
        "Test",
        "Coordinator",
        "manager",
        "Enterprise",
        "Testing",
        "Services",
        "ETS",
        "organization",
        "Ecommerce",
        "projects",
        "Architecture",
        "development",
        "REST",
        "Services",
        "SaaS",
        "application",
        "largescale",
        "video",
        "processing",
        "custom",
        "DV",
        "Labs",
        "video",
        "compression",
        "software",
        "size",
        "video",
        "loss",
        "quality",
        "Java",
        "Groovy",
        "Python",
        "AWS",
        "SQS",
        "Jenkins",
        "MySQL",
        "NginX",
        "REST",
        "Services",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "React",
        "components",
        "functions",
        "pages",
        "task",
        "object",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "Performed",
        "security",
        "patching",
        "Apache",
        "NGINX",
        "Vhosts",
        "Linux",
        "hosts",
        "Ubuntu",
        "CentOS",
        "Amazon",
        "Linux",
        "SSH",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "refactoring",
        "code",
        "base",
        "Created",
        "proofofconcept",
        "web",
        "design",
        "Nodejs",
        "React",
        "JS",
        "HTML5",
        "CSS3",
        "page",
        "application",
        "Angular",
        "JS",
        "MongoDB",
        "NodeJS",
        "development",
        "Map",
        "application",
        "analysis",
        "purpose",
        "Experience",
        "debugging",
        "troubleshooting",
        "programming",
        "issues",
        "Configured",
        "Apache",
        "Nginx",
        "Tomcat",
        "web",
        "application",
        "servers",
        "Dev",
        "Integration",
        "Test",
        "Environments",
        "SAS",
        "programs",
        "programs",
        "SAS",
        "variables",
        "ease",
        "speed",
        "modification",
        "consistency",
        "results",
        "data",
        "database",
        "SASAccess",
        "SAS",
        "SQL",
        "procedures",
        "SAS",
        "data",
        "sets",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "browser",
        "web",
        "application",
        "testing",
        "methods",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "selenium",
        "testing",
        "CPU",
        "GPU",
        "temperature",
        "model",
        "model",
        "TensorFlow",
        "bankend",
        "Machine",
        "Learning",
        "Computer",
        "Vision",
        "Deep",
        "Learning",
        "Neural",
        "Networks",
        "TensorFlow",
        "Prediction",
        "Model",
        "Data",
        "Mining",
        "Techniques",
        "help",
        "Python",
        "Libraries",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Pandas",
        "custom",
        "screens",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Jinja",
        "Angularjs",
        "Created",
        "Data",
        "tables",
        "MySQL",
        "Jinja",
        "data",
        "end",
        "application",
        "server",
        "load",
        "processing",
        "tasks",
        "Celery",
        "Rabbit",
        "MQ",
        "Python",
        "Developer",
        "CGI",
        "Group",
        "August",
        "September",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "application",
        "Python",
        "UnixLinux",
        "Merge",
        "jobs",
        "Python",
        "data",
        "Oracle",
        "database",
        "python",
        "applications",
        "Multithreading",
        "concepts",
        "CSV",
        "files",
        "input",
        "Oracle",
        "database",
        "datasets",
        "Oracle",
        "Teradata",
        "Wrote",
        "python",
        "scripts",
        "JSON",
        "data",
        "database",
        "stages",
        "analysis",
        "design",
        "development",
        "testing",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "JSON",
        "Oracle",
        "database",
        "queries",
        "cursors",
        "Deployment",
        "application",
        "Linux",
        "server",
        "datasets",
        "Oracle",
        "Used",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "design",
        "solutions",
        "stories",
        "client",
        "requirements",
        "Rewrite",
        "Python",
        "module",
        "format",
        "data",
        "Skills",
        "JSON",
        "years",
        "LINUX",
        "years",
        "PYTHON",
        "years",
        "TESTING",
        "years",
        "AJAX",
        "years",
        "Additional",
        "Information",
        "Skills",
        "Operating",
        "systems",
        "Windows",
        "Linux",
        "MAC",
        "UNIX",
        "Languages",
        "Java",
        "C",
        "C",
        "Python",
        "Ruby",
        "Rails",
        "Scripting",
        "CSS",
        "AJAX",
        "Java",
        "Script",
        "JQuery",
        "PHP",
        "Shell",
        "Scripting",
        "Analytics",
        "Tools",
        "SAS",
        "Tableau",
        "Databricks",
        "Markup",
        "HTML",
        "XML",
        "JSON",
        "Bootstrap",
        "Servers",
        "Apache",
        "Tomcat",
        "Databases",
        "Oracle",
        "SQL",
        "Postgress",
        "Apache",
        "Cassandra",
        "MongoDB",
        "Virtualization",
        "xen",
        "vmware",
        "virtualbox",
        "openstack",
        "vagrand",
        "docker",
        "lxc",
        "lxd",
        "IDEs",
        "Tools",
        "Eclipse",
        "Toad",
        "Sublime",
        "text",
        "PyCharm",
        "Pgadmin",
        "SQLite",
        "Revision",
        "Controlling",
        "Systems",
        "CVS",
        "GitHub",
        "Methodologies",
        "tools",
        "Object",
        "Programming",
        "UML",
        "Agile",
        "Scrum",
        "Waterfall",
        "MS",
        "office",
        "tools",
        "Microsoft",
        "Excel",
        "Super",
        "user",
        "Microsoft",
        "word",
        "Microsoft",
        "PowerPoint",
        "PPTPlex",
        "Microservices",
        "Docker",
        "Ansible",
        "Jenkins",
        "Cloud",
        "Services",
        "AWS",
        "Azure",
        "Kubernetes",
        "Testing",
        "Frameworks",
        "PyUnit",
        "Splunk",
        "Selenium",
        "Message",
        "Queue",
        "ActiveMQ"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:46:43.032497",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Bank of America Over 5 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python C Django Django Rest Framework in various domains Good experience in Python Django Zope Bottlepy Pyramid Framework Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experience in the Hadoop ecosystem components like HDFS Spark with Scala and python Zookeeper Yarn MapReduce Pig Sqoop HBase Hive Flume Cassandra MongoDB Oozie Kafka Flume and TEZ Experience in utilizing SAS Functions SAS Procedures and Macros for data updates data cleansing and reporting Experience with Apache Kafka JMS and Rabbit MQ as the message oriented middleware Working Knowledge of Pandas Numpy Scipy Good working knowledge of Deep Learning Python libraries Working knowledge of data science architectures design patterns and modules such as Keras TensorFlow ScikitLearn NumPy SciPy Matplotlib H2o and MLLib Good understanding of cloud based DAG and Apache Air Flow Experience of software development in Python libraries used libraries BeautifulSoup numpy scipy matplotlib pythontwitter OpenCV Pandas dataframe networkx urllib2 MySQLdb for database connectivity and IDEs sublime text Spyder pycharm emacs Experienced in MVW frameworks like Django Angularjs Java Script JQuery and Nodejs Proficient in Front end development experience using HTML XML CSS JQuery JSON and Javascript CSS Bootstrap Expert knowledge of and experience in Object oriented Design and Programming concepts Experience object oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience with JSPm Servlets Web Services SOAP REST and Tomcat Effective in executing multiple tasks and assignments ahead of schedule Created and maintained effective budgets Proficient in SQL databases MySQL Oracle and noSQL databases MongoDB Cassandra Sqlite 3 Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Excellent experience with Python development under Linux OS Debian Ubuntu SUSE Linux RedHat Linux Fedora Good knowledge of server Apache Tomcat Web logic Hands on SVN Git JIRA Bugzilla Axosoft Amazon EC2S3 Experience in leading multiple efforts to build Hadoop platforms maximizing business value by combining data science with big data Import the historical data from RDBMS into HDFS using Sqoop Experience in installing configuring and using ecoSystem components like Hadoop MapReduce HDFS Hbase Pig Flume Handson experience in Unix and Linux Kernels Ability to manage Multiple project tasks with changing priorities and tight deadlines Ability to work well in a team Open to Team related tasks team meetings team interaction and conference calls Demonstrated ability to work well with a wide variety of people at various levels foster cooperation and collaboration among individuals in the work unit help team resolve conflicts constructively and ability and willingness to communicate when help is needed Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Strong expertise in development of webbased applications using Python Java HTML XML KML Angular JS CSS DHTML JavaScript JSON and jQuery Responsible for design and development of Web Pages using PHP HTML JOOMLA CSS including Ajax controls and XML Responsible for designing developing testing deploying and maintaining the web application Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using Django Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Have good knowledge on NoSQL databases like Mongo DB and SQL databases like MySQL PostgreSQL SQLite3 Good experience in software development using Python and using its libraries and modules like NumPy Pandas SciPy Pickle Jupiter SciPy Pythontwitter Matplotlib urllib2 for data analytics and rapid development A self starter with a positive attitude willingness to learn new concepts and acceptance of challenges Work Experience Python Developer Bank of America Englewood CO July 2018 to Present Involved in the development of front end of the application using Python 34 HTML5 CSS3 bootstrap 30 AJAX JSON and Jquery Designed a Web Application based on MultiTier Architecture using the current most popular web technologies like HTML5 CSS3 JavaScript and RESTful Web Services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Pyspark SparkSQL in making pipelines to extract data coming from MDL in spark environment Used POSTGRE SQL also worked with Hadoop Built data pipelines and Machine Learning ML models that run in production in collaboration with software engineers using the tools like Numpy SciKit Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Scala programming to perform transformations and applying business logic Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Used Scala to convert HiveSQL queries into RDD transformations in Apache Spark Designed some of the SAS data models using Base SAS and SAS Macros Modified and created SAS datasets from various input sources like flat files CSV and other formats created reports and tables from existing SAS datasets Assisted in the migration of existing SAS programs from SAS 92 to SAS 94 and validate the resultant datasets Performed Compatibility testing of applications for dynamic and static content of browsers using HTML Ids and XPath in Selenium Developed Automation Scripts for Regression using Selenium Web Driver and Python Worked on Integration of Selenium RCWebDriver with existing API to test Framework Designed recognition models for both handwritten and textbased characters capable of continuous learning using deep neural networks leveraging both Keras and TensorFlow machine learning frameworks in addition to NumPy Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Tracking operations using sensors until certain criteria is met using Air Flow technology Explored DAGs their dependencies and logs using Air Flow pipelines for automation Used Air Flow to keep track of job statuses in repositories like MySQL and Postgre databases Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Developed consumerbased features and applications using Python Django tasty pie pyramid Flask Web2py HTML jinja and other web technologies Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQP Rabbit MQ REST JSON and CRUD scripts for API Integration Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Extensively used Django micro service framework for simple request and response Utilized tools such as Python Tableau R etc to perform complex data analysis and visualizations Used Machine learning concepts common families of models feature engineering selection crossvalidation and parameter tuning Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in development of Web Services using REST for sending and getting data from the external interface in the JSON format Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created Restful backend service deployed on Li bode cloud VPSs using django web framework and SQL Alchemy ORM for data persistence Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Build SQL queries for performing various CRUD operations like create update read and delete Installed Wit be Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support Maintaining the scripts using the version Control Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Used Chef deployed and configured Elasticsearch Log stash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed and managed build and release methodologies using Wit be Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Built an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Built servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for Microservices and continuous deployment Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL Dynamo DB and MySQL database Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST and SOAP Python Developer Infosys October 2015 to December 2017 Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Extensive usage of User Controls and ASPNET server controls Developed and program Python scripts of automation procedure with provided API and JSON data to connect and communicate embedded hardware system based on design documents and business objectives including developer testing activities like unit testing regression testing integration testing Trained staff on effective use of Jenkins Docker GitLab and Kubernetes Coordination of Middleware project components into releases for deployment into testing regions and production Wrote SQL and implemented ORM using JPA and developed front end features using ReactReduxES6 with Web pack Analyzed global trading data wrote SQL stored procedures to extract trading data from multiple databases to report Global Trading Metrics blocks allocations notional late and not confirmed trades Designed Configured and managed publicprivate cloud infrastructures utilizing Amazon Web Services AWS including EC2 AutoScaling Elastic Load Balancer Elastic Beanstalk S3 Cloud Front RDS VPC Route53 Cloud Watch Cloud Formation IAM EBS RDS SNS SQS Redshift Managed continuous build and share progress with Confluence Bamboo and SVN Instituted configuration and systems management via Ansible inventoried and standardized system configurations and package installations trained other team members in the use of Git and Ansible Conducted system requirements sessions and documented requirements Deliver Big Data Products including replatforming Legacy Global Risk Management System with BigData Technologies such as Hadoop Hive and HBase Worked with NoSQL Mongo DB and heavily worked on Hive Hbase and HDFS Involved in designing application system requirements and coded backend and frontend in Django Pythonand Used ReactRouter to turn application into Single Page Application Managed local deployments in Kubernetes creating local cluster and deploying application containers Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server Performed AWS Cloud administration managing EC2 instances S3 Cloud Formation SES and SNS services Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML5 JavaScript AngularJS JQuery AJAX and implemented CSS3 for better appearance and feel Implement modules into Node JS to integrate with designs and requirements Designed a network of web pages where the user progresses through an application by selecting links resulting in the next page being transferred to the user and rendered for their use using REST Integration Test Coordinator and manager for Enterprise Testing Services ETS organization specializing in Ecommerce projects Architecture and development of REST Services powered webbased SaaS application for largescale video processing using custom DV Labs video compression software able to reduce the size of video by over 50 without a loss in perceived quality Java Groovy Python AWS SQS Jenkins MySQL NginX REST Services Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Involved in building stable React components and standalone functions to be added to any future pages Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Performed security patching configured Apache and NGINX Vhosts optimized Varnish on Linux hosts Ubuntu CentOS Amazon Linux via SSH and sudo Developed remote integration with third party platforms by using RESTful web services Improved code reuse and performance by making effective use of various design patterns and refactoring code base Created proofofconcept using responsive web design Nodejs React JS HTML5 and CSS3 Developed single page application by using Angular JS backed by MongoDB and NodeJS Involved in development of a Map based application for integral analysis purpose Experience in debugging and troubleshooting programming related issues Installed and Configured the Apache Nginx Tomcat web application servers for Dev and Integration Test Environments Modified existing SAS programs and created new programs using SAS macro variables to improve ease and speed of modification as well as consistency of results Extracted acting data from the database using SASAccess SAS SQL procedures and create SAS data sets Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different we request from multiple browser to web application Performed different testing methods like unit testing Integration testing web application testing and selenium testing Aggregated the CPU and GPU temperature for the model as the model was using TensorFlow as bankend Implemented Machine Learning Computer Vision Deep Learning and Neural Networks algorithms using TensorFlow and designed Prediction Model using Data Mining Techniques with help of Python and Libraries like NumPy SciPy Matplotlib Pandas scikitlearn Developed custom screens using HTML5 JavaScript jQuery Bootstrap Jinja and Angularjs Created Data tables utilizing MySQL utilized Jinja to access data and display it in the front end Managed application server load and processing tasks using Celery and Rabbit MQ Python Developer CGI Group August 2013 to September 2015 Involved in the Complete Software development life cycle SDLC to develop the application Developed standalone application using Python UnixLinux scripting Developed Merge jobs in Python to extract and load data into Oracle database Developed python applications using Multithreading concepts Worked on CSV files while trying to get input from the Oracle database Managed large datasets using Oracle and Teradata Wrote python scripts to parse JSON and load the data in database Worked in stages such as analysis and design development testing and debugging Organized data exchange and integration with customers and thirdparty systems using CSV JSON Worked in Oracle database on simple queries and writing cursors Deployment of the standalone application using the Linux server Managed large datasets using Oracle Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Documented the design solutions and created stories for client requirements Rewrite existing Python module to deliver certain format of data Skills JSON 5 years LINUX 5 years PYTHON 5 years TESTING 5 years AJAX 3 years Additional Information Skills Operating systems Windows Linux MAC UNIX Languages Java C C Python 3x2x Ruby on Rails Scripting languages CSS AJAX Java Script JQuery PHP Shell Scripting Analytics Tools SAS Tableau Databricks Markup languages HTML XML JSON Bootstrap Servers Apache Tomcat Databases Oracle My SQL Postgress Apache Cassandra MongoDB Virtualization xen vmware virtualbox openstack vagrand docker lxc lxd IDEs Tools Eclipse Toad Sublime text PyCharm Pgadmin SQLite Revision Controlling Systems CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum Waterfall MS office tools Microsoft Excel Super user Microsoft word Microsoft PowerPoint PPTPlex Microservices Docker Ansible Jenkins Cloud Services AWS Azure Kubernetes Testing Frameworks PyUnit Splunk Selenium Message Queue ActiveMQ RabbitMQ",
    "unique_id": "ba4b035d-3a5e-4306-9348-3ee5878ec955"
}