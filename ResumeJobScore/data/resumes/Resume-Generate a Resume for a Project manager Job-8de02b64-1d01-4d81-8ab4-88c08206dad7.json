{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer CVS Health Arizona City AZ AZ Creative and innovative IT professional working as a Python Developer having 7 years of experience with proficiency using cuttingedge technologies Work Experience Python Developer CVS Health Phoenix AZ January 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Successful migration of the default Djangos database SQLite to PostgreSQL to improve efficiency integrity and security of data Involved in designing developing and managing REST APIs utilizing Djangos Rest framework and overlooking the API system Involved in databasedriven web application development using a variety of frameworks such as Django on Python Responsible for developing data pipeline using Hadoop ecosystem to extract the data from weblogs and store in HDFS Experience working with complex datasets including Pythons native lists dictionaries and tuples Wrote REST APIs as part of developing webbased applications for customer feedback and complaints calculations using Djangos REST framework Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Webservices Designed and developed templates using Djangos template library and utilized them using Djangos forms library Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed single page web application using AngularJS HTML5 CSS3 Bootstrap jQuery for interactive crossbrowser functionality Used AngularJS framework for single page applications and validating the clientside user information based on their business rules Generated property list for every application dynamically using Python and was responsible for search engine optimization to improve the visibility of the website Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Followed Scrum along with TestDriven Development to develop applications services and software solutions Developed tested and deployed proprietary data analytics and visualization Python Django application in an agile team used packages like Pandas NumPy and tool including Git Responsible for constantly communicating the progress and issues to the higher management and making necessary changes to the application based on flexibility scalability and security issues Environment Linux Angular JS Python 35 Django 15 JSON Hadoop Mongo DB RISK management SOAP REST GitHub Python Developer Starbucks Seattle WA December 2014 to December 2016 Responsibilities Implemented Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity Python twitter PySide Pickle Pandas data frame network urllib2 Designed Automation script in Python 27 using Android APIs and Motorola library to generate automatic report logs crashes in the reporting server Developed an embedded software data driven test automation framework in Linux Python Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used the Nodejs Angularjs MVC Frameworks in the development of the web applications Unit testing with JavaScript and nodejs Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery and Reactjs that meets accessibility and web browser standards for car dealerships websites Worked on Angular 2 for frontend development and NodeJS for backend development Designed and maintained databases using Python and developed Python based API RESTful Web service using Flask SQL Alchemy and PostgreSQL Developed JSPs Servlets and custom tags for creating user interfaces and worked on Spring JMS MDB for listeners Message Broker for routing the messages Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Deployed the project into Jenkins using SVN version control system Managed projects with Grunt task runner and combined with Bower package manager to install JavaScript latest version of libraries based on running in the Nodejs environment Designed and developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Wrote JSX code in updating the React DOM and also worked with states and props in initializing the child components using this set method Designed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Debugged the application using Firebug to traverse the documents and manipulated the Nodes using DOM and DOM Functions Developed a high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX STL BOOST XML XPath and XSLT Perl Python scripting Handled all the client side validation using JavaScript and designed the J2EE components of the RESTful Web Services and scheduled Java batch jobs based application in UML Performed bootstrapping and modularizing of an application with Angular JS injector and gathered all requirements for developing and analysing requirement of projects Developed Merge jobs in Python to extract and load data into MySQL database and used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Automated AWS S3 data upload download using python scripts and integrated activate catalog to get parts using JMS Developed web Components using JSP Servlet under J2EE Environment and implemented security features for the APIs Involved in developing HTML and JavaScript for presentation and data validation on the client side with in the forms Designed and Developed the parsers for parsing xmls and jsons using jackson JAXB and developed the controller Servlet to handle the requests and responses Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Managed large datasets using Pandas data frames and MySQL and performed dynamic implementation of SQL server work on website using SQL developer tool Worked on AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Developed asynchronous messaging systems using JMS MDB and MQ series Managed virtual servers and accessed various features in Open stack infrastructure using Rest API calls developed in Python Used JQuery libraries for all client side JavaScript manipulations and developed server based web traffic statistical analysis tool using Flask Pandas Built AWS and REDIS server for storing the data and performed defect analysis and Interaction with Business Users during UATSIT Wrote Python scripts to parse XML documents and load the data in database and wrote programs for performance calculations using NumPy and SQLAlchemy Environment Python 35 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer BNY Mellon New York NY May 2012 to November 2014 Responsibilities Created a PythonDjango based web application using Python scripting and MySQL Workbench for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Successfully migrated the Django database from MySQL Workbench to PostgreSQL with complete data integrity Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed ETL processes that were used to integrate data between various sources using Informatica Extensive experience in deploying managing and developing Oracle SQL developer clusters Created Automated Test Scripts in Python for Reports and Data extraction jobs Developed scripts in python for Financial Data coming from SQL Developer based on the requirements specified Refactored existing batch jobs and migrated existing legacy extracts from Informatica to Python based micro services and deployed in AWS with minimal downtime Worked on Python Open stack API used Python scripts to update content in the database and manipulate files Worked on JIRA for bug tracking and communicating for better results Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Created MAVEN archetypes for generating fully functional REST web services supporting both XML and JSON message transformation Archetypes built on Spring technology Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in Loading analyzing and extracting data to and from Oracle database with Python Worked with python Unit test library which was used for testing many programs on Python and other codes Checked error tested the ETL procedures programs using Informatica session log Involved in the complete software development life cycle SDLC to develop the web application Wrote Python scripts to parse XML documents and load the data in database Coding application using Python Django in Endto End Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Java Developer Synchrony Financial Alpharetta GA March 2011 to May 2012 Responsibilities Design of application components using Java Collections and providing concurrent database access using multithreading Implemented the logic layer using Java features like Collections Interfaces Polymorphism and Exception Handling Used Spring Framework for Dependency Injection DI and integrated and used DAO design pattern to retrieve the data from database Java Servlets and JSP pages were deployed on the Web Logic Application Server for retrieving user information and posting related data Developing new endpoints to fetch data from different sources like SQL Server Netezza AWS and designing its output response in JSON Reengineered designed and migrated SCORE applications from Websphere to JBOSS application Server Worked with Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean Worked on development of Hibernate including mapping files configuration file and classes to interact with the database Designed and created PLSQL sub programs like Stored Procedures Triggers and Sequences to access Oracle Developed dynamic web pages using HTML jQuery Bootstrap CSS and Eclipse Handling form requests using Servlets and JSP responses for interacting with the formal Business Logic Layer that contained the BackEnd business rules for handling the data in and out of the system Generated UML artifacts such as use cases sequence diagrams class diagrams using Rational Application Developer Created UNIX shell scripts to automate the build process to perform regular jobs like file transfers between different hosts Written SQL queries in PLSQL wrote new stored procedures and modified existing ones depending on requirements in Oracle database Developed iterations including planning requirements analysis design writing unit tests throughout the lifecycle of the project using Agile Scrum Methodology Skills Django 5 years front end 5 years JavaScript 5 years JQuery 7 years Python 5 years Additional Information TECHNICAL SKILL Languages Python 27 34 Perl JavaJ2EE C C Unix Shell Scripts SQL Frameworks Flask Django Laravel Spring Hibernate Apache Hadoop Spark Frontend Technologies HTML CSS javascript Jquery BootStrap jQuery AJAX Kendo UI AngularJS ReactJS NodeJS BackboneJS Cloud Technologies Amazon Web Services AWS OpenStack MicroSoft Azure Rackspace SaaS IaaS PaaS Security Spring Security OAuth Active Directory LDAP SSL SAML Databases RDBMS MySQL and Oracle NoSQL MongoDB and Cassandra CouchDB DynamoDB Teradata and PostgreSQL Version Control Management Tools GIT JUnit Log4j JIRA Jenkins SDLC Methodologies AgileScrum Waterfall Hybrid Application Servers Apache Tomcat WebSphere Jboss WebLogic Servlets IDE Tools Spider PyCharm Eclipse IntelliJ IDEA Sublime VS Code PyStudio Matlab Design Methodologies OOP Agile Water Fall SCRUM Operating systems Linux Ubuntu Fedora UNIX Windows XP Vista 7 8 10",
    "entities": [
        "Stored Procedures Triggers",
        "AJAX",
        "Informatica",
        "Motorola",
        "New York",
        "Nodejs",
        "SQL Developer",
        "Automated AWS S3",
        "Android",
        "JMS",
        "AWS S3 Created",
        "PyUnit Created Database Schema",
        "Hadoop",
        "XML",
        "BackEnd",
        "HTMLCSSJQuery",
        "SOAP Webservices Designed",
        "J2EE Environment",
        "Responsibilities Created",
        "MySQL Database",
        "the Web Logic Application Server",
        "Python",
        "Generated",
        "Amazon AWS S3",
        "Developed",
        "DAO",
        "jsons",
        "Jenkins",
        "Business Logic Layer",
        "Python Unit",
        "Puppet",
        "UML",
        "Git",
        "Servlets",
        "Arizona City",
        "Firebug",
        "Linux",
        "JSP",
        "the RESTful Web Services",
        "Java Collections",
        "Additional Information TECHNICAL SKILL Languages Python",
        "DOM",
        "RDS",
        "MS",
        "Action Mapping Action",
        "HTML CSS JavaScript JQuery",
        "Angular JS",
        "TestDriven Development",
        "MVC",
        "HerokuJenkins",
        "Flask SQL Alchemy",
        "PythonDjango",
        "Python Worked",
        "REDIS",
        "API",
        "Oracle Developed",
        "Present Responsibilities Designed",
        "jackson JAXB",
        "AWS",
        "Websphere",
        "HTML jQuery Bootstrap CSS",
        "UML Performed",
        "Workbench",
        "Python Developer",
        "HTML",
        "Financial Data",
        "Rational Application Developer Created",
        "HTML CSS jQuery and Reactjs",
        "SQL",
        "Oracle SQL",
        "the React DOM",
        "Version Control Management Tools",
        "Interaction with Business Users",
        "lPythonspan",
        "Python Django",
        "Pandas NumPy",
        "Amazon Web Services AWS EC2",
        "JS Angular JS CSS",
        "Loading",
        "Pandas",
        "SQLite",
        "ETL",
        "ERDiagrams",
        "Collections Interfaces Polymorphism",
        "Cloud Technologies Amazon Web Services",
        "JSON Reengineered",
        "SQL Server Netezza AWS",
        "API RESTful Web",
        "Djangos",
        "JavaScript",
        "Django on Python Responsible",
        "Microsoft",
        "WebSphere Jboss WebLogic",
        "Nodes",
        "SVN",
        "Informatica Extensive",
        "REST",
        "MQ series Managed",
        "Flask Pandas Built AWS",
        "Python Unit Test",
        "JMS Developed web Components",
        "Action Form",
        "Java Developer Synchrony Financial",
        "Sequences"
    ],
    "experience": "Experience Python Developer CVS Health Phoenix AZ January 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Successful migration of the default Djangos database SQLite to PostgreSQL to improve efficiency integrity and security of data Involved in designing developing and managing REST APIs utilizing Djangos Rest framework and overlooking the API system Involved in databasedriven web application development using a variety of frameworks such as Django on Python Responsible for developing data pipeline using Hadoop ecosystem to extract the data from weblogs and store in HDFS Experience working with complex datasets including Pythons native lists dictionaries and tuples Wrote REST APIs as part of developing webbased applications for customer feedback and complaints calculations using Djangos REST framework Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Webservices Designed and developed templates using Djangos template library and utilized them using Djangos forms library Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed single page web application using AngularJS HTML5 CSS3 Bootstrap jQuery for interactive crossbrowser functionality Used AngularJS framework for single page applications and validating the clientside user information based on their business rules Generated property list for every application dynamically using Python and was responsible for search engine optimization to improve the visibility of the website Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Followed Scrum along with TestDriven Development to develop applications services and software solutions Developed tested and deployed proprietary data analytics and visualization Python Django application in an agile team used packages like Pandas NumPy and tool including Git Responsible for constantly communicating the progress and issues to the higher management and making necessary changes to the application based on flexibility scalability and security issues Environment Linux Angular JS Python 35 Django 15 JSON Hadoop Mongo DB RISK management SOAP REST GitHub Python Developer Starbucks Seattle WA December 2014 to December 2016 Responsibilities Implemented Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity Python twitter PySide Pickle Pandas data frame network urllib2 Designed Automation script in Python 27 using Android APIs and Motorola library to generate automatic report logs crashes in the reporting server Developed an embedded software data driven test automation framework in Linux Python Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used the Nodejs Angularjs MVC Frameworks in the development of the web applications Unit testing with JavaScript and nodejs Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery and Reactjs that meets accessibility and web browser standards for car dealerships websites Worked on Angular 2 for frontend development and NodeJS for backend development Designed and maintained databases using Python and developed Python based API RESTful Web service using Flask SQL Alchemy and PostgreSQL Developed JSPs Servlets and custom tags for creating user interfaces and worked on Spring JMS MDB for listeners Message Broker for routing the messages Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Deployed the project into Jenkins using SVN version control system Managed projects with Grunt task runner and combined with Bower package manager to install JavaScript latest version of libraries based on running in the Nodejs environment Designed and developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Wrote JSX code in updating the React DOM and also worked with states and props in initializing the child components using this set method Designed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Debugged the application using Firebug to traverse the documents and manipulated the Nodes using DOM and DOM Functions Developed a high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX STL BOOST XML XPath and XSLT Perl Python scripting Handled all the client side validation using JavaScript and designed the J2EE components of the RESTful Web Services and scheduled Java batch jobs based application in UML Performed bootstrapping and modularizing of an application with Angular JS injector and gathered all requirements for developing and analysing requirement of projects Developed Merge jobs in Python to extract and load data into MySQL database and used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Automated AWS S3 data upload download using python scripts and integrated activate catalog to get parts using JMS Developed web Components using JSP Servlet under J2EE Environment and implemented security features for the APIs Involved in developing HTML and JavaScript for presentation and data validation on the client side with in the forms Designed and Developed the parsers for parsing xmls and jsons using jackson JAXB and developed the controller Servlet to handle the requests and responses Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Managed large datasets using Pandas data frames and MySQL and performed dynamic implementation of SQL server work on website using SQL developer tool Worked on AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Developed asynchronous messaging systems using JMS MDB and MQ series Managed virtual servers and accessed various features in Open stack infrastructure using Rest API calls developed in Python Used JQuery libraries for all client side JavaScript manipulations and developed server based web traffic statistical analysis tool using Flask Pandas Built AWS and REDIS server for storing the data and performed defect analysis and Interaction with Business Users during UATSIT Wrote Python scripts to parse XML documents and load the data in database and wrote programs for performance calculations using NumPy and SQLAlchemy Environment Python 35 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer BNY Mellon New York NY May 2012 to November 2014 Responsibilities Created a PythonDjango based web application using Python scripting and MySQL Workbench for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Successfully migrated the Django database from MySQL Workbench to PostgreSQL with complete data integrity Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed ETL processes that were used to integrate data between various sources using Informatica Extensive experience in deploying managing and developing Oracle SQL developer clusters Created Automated Test Scripts in Python for Reports and Data extraction jobs Developed scripts in python for Financial Data coming from SQL Developer based on the requirements specified Refactored existing batch jobs and migrated existing legacy extracts from Informatica to Python based micro services and deployed in AWS with minimal downtime Worked on Python Open stack API used Python scripts to update content in the database and manipulate files Worked on JIRA for bug tracking and communicating for better results Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Created MAVEN archetypes for generating fully functional REST web services supporting both XML and JSON message transformation Archetypes built on Spring technology Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in Loading analyzing and extracting data to and from Oracle database with Python Worked with python Unit test library which was used for testing many programs on Python and other codes Checked error tested the ETL procedures programs using Informatica session log Involved in the complete software development life cycle SDLC to develop the web application Wrote Python scripts to parse XML documents and load the data in database Coding application using Python Django in Endto End Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Java Developer Synchrony Financial Alpharetta GA March 2011 to May 2012 Responsibilities Design of application components using Java Collections and providing concurrent database access using multithreading Implemented the logic layer using Java features like Collections Interfaces Polymorphism and Exception Handling Used Spring Framework for Dependency Injection DI and integrated and used DAO design pattern to retrieve the data from database Java Servlets and JSP pages were deployed on the Web Logic Application Server for retrieving user information and posting related data Developing new endpoints to fetch data from different sources like SQL Server Netezza AWS and designing its output response in JSON Reengineered designed and migrated SCORE applications from Websphere to JBOSS application Server Worked with Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean Worked on development of Hibernate including mapping files configuration file and classes to interact with the database Designed and created PLSQL sub programs like Stored Procedures Triggers and Sequences to access Oracle Developed dynamic web pages using HTML jQuery Bootstrap CSS and Eclipse Handling form requests using Servlets and JSP responses for interacting with the formal Business Logic Layer that contained the BackEnd business rules for handling the data in and out of the system Generated UML artifacts such as use cases sequence diagrams class diagrams using Rational Application Developer Created UNIX shell scripts to automate the build process to perform regular jobs like file transfers between different hosts Written SQL queries in PLSQL wrote new stored procedures and modified existing ones depending on requirements in Oracle database Developed iterations including planning requirements analysis design writing unit tests throughout the lifecycle of the project using Agile Scrum Methodology Skills Django 5 years front end 5 years JavaScript 5 years JQuery 7 years Python 5 years Additional Information TECHNICAL SKILL Languages Python 27 34 Perl JavaJ2EE C C Unix Shell Scripts SQL Frameworks Flask Django Laravel Spring Hibernate Apache Hadoop Spark Frontend Technologies HTML CSS javascript Jquery BootStrap jQuery AJAX Kendo UI AngularJS ReactJS NodeJS BackboneJS Cloud Technologies Amazon Web Services AWS OpenStack MicroSoft Azure Rackspace SaaS IaaS PaaS Security Spring Security OAuth Active Directory LDAP SSL SAML Databases RDBMS MySQL and Oracle NoSQL MongoDB and Cassandra CouchDB DynamoDB Teradata and PostgreSQL Version Control Management Tools GIT JUnit Log4j JIRA Jenkins SDLC Methodologies AgileScrum Waterfall Hybrid Application Servers Apache Tomcat WebSphere Jboss WebLogic Servlets IDE Tools Spider PyCharm Eclipse IntelliJ IDEA Sublime VS Code PyStudio Matlab Design Methodologies OOP Agile Water Fall SCRUM Operating systems Linux Ubuntu Fedora UNIX Windows XP Vista 7 8 10",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "CVS",
        "Health",
        "Arizona",
        "City",
        "AZ",
        "AZ",
        "Creative",
        "IT",
        "working",
        "Python",
        "Developer",
        "years",
        "experience",
        "proficiency",
        "cuttingedge",
        "technologies",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "CVS",
        "Health",
        "Phoenix",
        "AZ",
        "January",
        "Present",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "migration",
        "default",
        "Djangos",
        "database",
        "efficiency",
        "integrity",
        "security",
        "data",
        "REST",
        "APIs",
        "Djangos",
        "Rest",
        "framework",
        "API",
        "system",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "Django",
        "Python",
        "data",
        "pipeline",
        "Hadoop",
        "ecosystem",
        "data",
        "weblogs",
        "HDFS",
        "Experience",
        "datasets",
        "Pythons",
        "lists",
        "dictionaries",
        "tuples",
        "Wrote",
        "REST",
        "APIs",
        "part",
        "applications",
        "customer",
        "feedback",
        "complaints",
        "calculations",
        "Djangos",
        "REST",
        "framework",
        "application",
        "features",
        "Django",
        "Framework",
        "performance",
        "SOAP",
        "Webservices",
        "templates",
        "Djangos",
        "template",
        "library",
        "Djangos",
        "forms",
        "library",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "page",
        "web",
        "application",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "jQuery",
        "crossbrowser",
        "functionality",
        "framework",
        "page",
        "applications",
        "user",
        "information",
        "business",
        "rules",
        "property",
        "list",
        "application",
        "Python",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "Experience",
        "version",
        "control",
        "systems",
        "Git",
        "Apache",
        "SVN",
        "state",
        "application",
        "development",
        "process",
        "Scrum",
        "TestDriven",
        "Development",
        "applications",
        "services",
        "software",
        "solutions",
        "data",
        "analytics",
        "visualization",
        "Python",
        "Django",
        "application",
        "team",
        "packages",
        "Pandas",
        "NumPy",
        "tool",
        "Git",
        "Responsible",
        "progress",
        "issues",
        "management",
        "changes",
        "application",
        "flexibility",
        "scalability",
        "security",
        "issues",
        "Environment",
        "Linux",
        "Angular",
        "JS",
        "Python",
        "Django",
        "JSON",
        "Hadoop",
        "Mongo",
        "DB",
        "RISK",
        "management",
        "SOAP",
        "REST",
        "GitHub",
        "Python",
        "Developer",
        "Starbucks",
        "Seattle",
        "WA",
        "December",
        "December",
        "Responsibilities",
        "Python",
        "libraries",
        "matplotlib",
        "charts",
        "graphs",
        "MySQL",
        "database",
        "connectivity",
        "Python",
        "twitter",
        "PySide",
        "Pickle",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "Designed",
        "Automation",
        "script",
        "Python",
        "Android",
        "APIs",
        "Motorola",
        "library",
        "report",
        "logs",
        "reporting",
        "server",
        "software",
        "data",
        "test",
        "automation",
        "framework",
        "Linux",
        "Python",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Nodejs",
        "Angularjs",
        "MVC",
        "Frameworks",
        "development",
        "web",
        "applications",
        "Unit",
        "testing",
        "JavaScript",
        "Consumed",
        "REST",
        "Microservices",
        "Rest",
        "template",
        "APIs",
        "HTML",
        "CSS",
        "jQuery",
        "Reactjs",
        "accessibility",
        "web",
        "browser",
        "standards",
        "car",
        "dealerships",
        "websites",
        "Angular",
        "frontend",
        "development",
        "NodeJS",
        "development",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "JSPs",
        "Servlets",
        "custom",
        "tags",
        "user",
        "interfaces",
        "Spring",
        "JMS",
        "MDB",
        "listeners",
        "Message",
        "Broker",
        "messages",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "project",
        "Jenkins",
        "SVN",
        "version",
        "control",
        "system",
        "projects",
        "Grunt",
        "task",
        "runner",
        "Bower",
        "package",
        "manager",
        "JavaScript",
        "version",
        "libraries",
        "Nodejs",
        "environment",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "JSX",
        "code",
        "React",
        "DOM",
        "states",
        "props",
        "child",
        "components",
        "method",
        "solutions",
        "Docker",
        "Jenkins",
        "Git",
        "Puppet",
        "microservices",
        "deployment",
        "application",
        "Firebug",
        "documents",
        "Nodes",
        "DOM",
        "DOM",
        "Functions",
        "availability",
        "time",
        "system",
        "financialBanking",
        "transactions",
        "components",
        "Linux",
        "UNIX",
        "STL",
        "BOOST",
        "XML",
        "XPath",
        "XSLT",
        "Perl",
        "Python",
        "scripting",
        "client",
        "side",
        "validation",
        "JavaScript",
        "J2EE",
        "components",
        "RESTful",
        "Web",
        "Services",
        "Java",
        "batch",
        "jobs",
        "application",
        "UML",
        "Performed",
        "bootstrapping",
        "application",
        "Angular",
        "JS",
        "injector",
        "requirements",
        "requirement",
        "projects",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "AWS",
        "S3",
        "data",
        "upload",
        "download",
        "python",
        "scripts",
        "activate",
        "catalog",
        "parts",
        "JMS",
        "Developed",
        "web",
        "Components",
        "JSP",
        "Servlet",
        "J2EE",
        "Environment",
        "security",
        "features",
        "APIs",
        "HTML",
        "JavaScript",
        "presentation",
        "data",
        "validation",
        "client",
        "side",
        "forms",
        "parsers",
        "xmls",
        "jsons",
        "jackson",
        "JAXB",
        "controller",
        "Servlet",
        "requests",
        "responses",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "datasets",
        "Pandas",
        "data",
        "frames",
        "MySQL",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "strings",
        "messaging",
        "systems",
        "JMS",
        "MDB",
        "MQ",
        "series",
        "Managed",
        "servers",
        "features",
        "stack",
        "infrastructure",
        "Rest",
        "API",
        "calls",
        "Python",
        "JQuery",
        "libraries",
        "client",
        "side",
        "JavaScript",
        "manipulations",
        "server",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "AWS",
        "REDIS",
        "server",
        "data",
        "analysis",
        "Interaction",
        "Business",
        "Users",
        "UATSIT",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "programs",
        "performance",
        "calculations",
        "NumPy",
        "SQLAlchemy",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Python",
        "Developer",
        "BNY",
        "Mellon",
        "New",
        "York",
        "NY",
        "May",
        "November",
        "Responsibilities",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "MySQL",
        "Workbench",
        "database",
        "HTMLCSSJQuery",
        "High",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Django",
        "database",
        "MySQL",
        "Workbench",
        "PostgreSQL",
        "data",
        "integrity",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "ETL",
        "processes",
        "data",
        "sources",
        "Informatica",
        "experience",
        "Oracle",
        "SQL",
        "developer",
        "clusters",
        "Automated",
        "Test",
        "Scripts",
        "Python",
        "Reports",
        "Data",
        "extraction",
        "jobs",
        "scripts",
        "python",
        "Financial",
        "Data",
        "SQL",
        "Developer",
        "requirements",
        "batch",
        "jobs",
        "legacy",
        "extracts",
        "Informatica",
        "Python",
        "micro",
        "services",
        "AWS",
        "downtime",
        "Python",
        "stack",
        "API",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "JIRA",
        "bug",
        "tracking",
        "communicating",
        "results",
        "Experience",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Created",
        "MAVEN",
        "REST",
        "web",
        "services",
        "XML",
        "message",
        "transformation",
        "Archetypes",
        "Spring",
        "technology",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Loading",
        "data",
        "Oracle",
        "database",
        "Python",
        "Worked",
        "python",
        "Unit",
        "test",
        "library",
        "programs",
        "Python",
        "codes",
        "error",
        "ETL",
        "procedures",
        "programs",
        "Informatica",
        "session",
        "log",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "web",
        "application",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "application",
        "Python",
        "Django",
        "Endto",
        "End",
        "Web",
        "application",
        "development",
        "MVC",
        "architecture",
        "frontend",
        "CSS3",
        "HTML5",
        "Test",
        "Approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "Test",
        "framework",
        "PyUnit",
        "Created",
        "Database",
        "Schema",
        "MySQL",
        "Database",
        "ERDiagrams",
        "Microsoft",
        "Visio",
        "JavaScript",
        "Dynamic",
        "Page",
        "Functionality",
        "popup",
        "screens",
        "user",
        "entry",
        "Java",
        "Developer",
        "Synchrony",
        "Financial",
        "Alpharetta",
        "GA",
        "March",
        "May",
        "Responsibilities",
        "Design",
        "application",
        "components",
        "Java",
        "Collections",
        "database",
        "access",
        "layer",
        "Java",
        "features",
        "Collections",
        "Interfaces",
        "Polymorphism",
        "Exception",
        "Handling",
        "Spring",
        "Framework",
        "Dependency",
        "Injection",
        "DI",
        "DAO",
        "design",
        "pattern",
        "data",
        "database",
        "Java",
        "Servlets",
        "JSP",
        "pages",
        "Web",
        "Logic",
        "Application",
        "Server",
        "user",
        "information",
        "data",
        "endpoints",
        "data",
        "sources",
        "SQL",
        "Server",
        "Netezza",
        "AWS",
        "output",
        "response",
        "JSON",
        "SCORE",
        "applications",
        "Websphere",
        "JBOSS",
        "application",
        "Server",
        "Struts",
        "MVC",
        "Paradigm",
        "components",
        "Action",
        "Mapping",
        "Action",
        "class",
        "Dispatch",
        "action",
        "class",
        "Action",
        "Form",
        "bean",
        "development",
        "Hibernate",
        "mapping",
        "files",
        "configuration",
        "file",
        "classes",
        "database",
        "PLSQL",
        "sub",
        "programs",
        "Stored",
        "Procedures",
        "Triggers",
        "Sequences",
        "Oracle",
        "web",
        "pages",
        "HTML",
        "jQuery",
        "Bootstrap",
        "CSS",
        "Eclipse",
        "Handling",
        "form",
        "requests",
        "Servlets",
        "JSP",
        "responses",
        "Business",
        "Logic",
        "Layer",
        "BackEnd",
        "business",
        "data",
        "system",
        "UML",
        "artifacts",
        "use",
        "cases",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "Rational",
        "Application",
        "Developer",
        "UNIX",
        "shell",
        "scripts",
        "build",
        "process",
        "jobs",
        "file",
        "transfers",
        "hosts",
        "SQL",
        "PLSQL",
        "procedures",
        "ones",
        "requirements",
        "Oracle",
        "database",
        "iterations",
        "planning",
        "requirements",
        "analysis",
        "design",
        "writing",
        "unit",
        "lifecycle",
        "project",
        "Agile",
        "Scrum",
        "Methodology",
        "Skills",
        "Django",
        "years",
        "years",
        "JavaScript",
        "years",
        "JQuery",
        "years",
        "Python",
        "years",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILL",
        "Languages",
        "Python",
        "Perl",
        "JavaJ2EE",
        "C",
        "C",
        "Unix",
        "Shell",
        "Scripts",
        "SQL",
        "Frameworks",
        "Flask",
        "Django",
        "Laravel",
        "Spring",
        "Hibernate",
        "Apache",
        "Hadoop",
        "Spark",
        "Frontend",
        "Technologies",
        "HTML",
        "CSS",
        "javascript",
        "Jquery",
        "BootStrap",
        "jQuery",
        "AJAX",
        "Kendo",
        "UI",
        "AngularJS",
        "ReactJS",
        "NodeJS",
        "BackboneJS",
        "Cloud",
        "Technologies",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "OpenStack",
        "MicroSoft",
        "Azure",
        "Rackspace",
        "SaaS",
        "IaaS",
        "PaaS",
        "Security",
        "Spring",
        "Security",
        "OAuth",
        "Active",
        "Directory",
        "LDAP",
        "SSL",
        "SAML",
        "Databases",
        "MySQL",
        "Oracle",
        "NoSQL",
        "MongoDB",
        "Cassandra",
        "CouchDB",
        "Teradata",
        "PostgreSQL",
        "Version",
        "Control",
        "Management",
        "Tools",
        "GIT",
        "JUnit",
        "Log4j",
        "JIRA",
        "Jenkins",
        "SDLC",
        "Methodologies",
        "AgileScrum",
        "Waterfall",
        "Hybrid",
        "Application",
        "Servers",
        "Apache",
        "Tomcat",
        "WebSphere",
        "Jboss",
        "WebLogic",
        "Servlets",
        "IDE",
        "Tools",
        "Spider",
        "PyCharm",
        "Eclipse",
        "IDEA",
        "Sublime",
        "VS",
        "Code",
        "PyStudio",
        "Matlab",
        "Design",
        "Methodologies",
        "OOP",
        "Agile",
        "Water",
        "Fall",
        "Operating",
        "systems",
        "Linux",
        "Ubuntu",
        "Fedora",
        "UNIX",
        "Windows",
        "XP",
        "Vista"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:57:12.368539",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer CVS Health Arizona City AZ AZ Creative and innovative IT professional working as a Python Developer having 7 years of experience with proficiency using cuttingedge technologies Work Experience Python Developer CVS Health Phoenix AZ January 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Successful migration of the default Djangos database SQLite to PostgreSQL to improve efficiency integrity and security of data Involved in designing developing and managing REST APIs utilizing Djangos Rest framework and overlooking the API system Involved in databasedriven web application development using a variety of frameworks such as Django on Python Responsible for developing data pipeline using Hadoop ecosystem to extract the data from weblogs and store in HDFS Experience working with complex datasets including Pythons native lists dictionaries and tuples Wrote REST APIs as part of developing webbased applications for customer feedback and complaints calculations using Djangos REST framework Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Webservices Designed and developed templates using Djangos template library and utilized them using Djangos forms library Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and Angular JS Developed single page web application using AngularJS HTML5 CSS3 Bootstrap jQuery for interactive crossbrowser functionality Used AngularJS framework for single page applications and validating the clientside user information based on their business rules Generated property list for every application dynamically using Python and was responsible for search engine optimization to improve the visibility of the website Experience working with version control systems such as Git and Apache SVN for maintaining a consistent state throughout the application development process Followed Scrum along with TestDriven Development to develop applications services and software solutions Developed tested and deployed proprietary data analytics and visualization Python Django application in an agile team used packages like Pandas NumPy and tool including Git Responsible for constantly communicating the progress and issues to the higher management and making necessary changes to the application based on flexibility scalability and security issues Environment Linux Angular JS Python 35 Django 15 JSON Hadoop Mongo DB RISK management SOAP REST GitHub Python Developer Starbucks Seattle WA December 2014 to December 2016 Responsibilities Implemented Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity Python twitter PySide Pickle Pandas data frame network urllib2 Designed Automation script in Python 27 using Android APIs and Motorola library to generate automatic report logs crashes in the reporting server Developed an embedded software data driven test automation framework in Linux Python Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used the Nodejs Angularjs MVC Frameworks in the development of the web applications Unit testing with JavaScript and nodejs Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery and Reactjs that meets accessibility and web browser standards for car dealerships websites Worked on Angular 2 for frontend development and NodeJS for backend development Designed and maintained databases using Python and developed Python based API RESTful Web service using Flask SQL Alchemy and PostgreSQL Developed JSPs Servlets and custom tags for creating user interfaces and worked on Spring JMS MDB for listeners Message Broker for routing the messages Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Deployed the project into Jenkins using SVN version control system Managed projects with Grunt task runner and combined with Bower package manager to install JavaScript latest version of libraries based on running in the Nodejs environment Designed and developed the presentation layer using HTML CSS JavaScript JQuery and AJAX Wrote JSX code in updating the React DOM and also worked with states and props in initializing the child components using this set method Designed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Debugged the application using Firebug to traverse the documents and manipulated the Nodes using DOM and DOM Functions Developed a high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX STL BOOST XML XPath and XSLT Perl Python scripting Handled all the client side validation using JavaScript and designed the J2EE components of the RESTful Web Services and scheduled Java batch jobs based application in UML Performed bootstrapping and modularizing of an application with Angular JS injector and gathered all requirements for developing and analysing requirement of projects Developed Merge jobs in Python to extract and load data into MySQL database and used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Automated AWS S3 data upload download using python scripts and integrated activate catalog to get parts using JMS Developed web Components using JSP Servlet under J2EE Environment and implemented security features for the APIs Involved in developing HTML and JavaScript for presentation and data validation on the client side with in the forms Designed and Developed the parsers for parsing xmls and jsons using jackson JAXB and developed the controller Servlet to handle the requests and responses Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Managed large datasets using Pandas data frames and MySQL and performed dynamic implementation of SQL server work on website using SQL developer tool Worked on AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Developed asynchronous messaging systems using JMS MDB and MQ series Managed virtual servers and accessed various features in Open stack infrastructure using Rest API calls developed in Python Used JQuery libraries for all client side JavaScript manipulations and developed server based web traffic statistical analysis tool using Flask Pandas Built AWS and REDIS server for storing the data and performed defect analysis and Interaction with Business Users during UATSIT Wrote Python scripts to parse XML documents and load the data in database and wrote programs for performance calculations using NumPy and SQLAlchemy Environment Python 35 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Python Developer BNY Mellon New York NY May 2012 to November 2014 Responsibilities Created a PythonDjango based web application using Python scripting and MySQL Workbench for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Successfully migrated the Django database from MySQL Workbench to PostgreSQL with complete data integrity Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed ETL processes that were used to integrate data between various sources using Informatica Extensive experience in deploying managing and developing Oracle SQL developer clusters Created Automated Test Scripts in Python for Reports and Data extraction jobs Developed scripts in python for Financial Data coming from SQL Developer based on the requirements specified Refactored existing batch jobs and migrated existing legacy extracts from Informatica to Python based micro services and deployed in AWS with minimal downtime Worked on Python Open stack API used Python scripts to update content in the database and manipulate files Worked on JIRA for bug tracking and communicating for better results Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Created MAVEN archetypes for generating fully functional REST web services supporting both XML and JSON message transformation Archetypes built on Spring technology Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in Loading analyzing and extracting data to and from Oracle database with Python Worked with python Unit test library which was used for testing many programs on Python and other codes Checked error tested the ETL procedures programs using Informatica session log Involved in the complete software development life cycle SDLC to develop the web application Wrote Python scripts to parse XML documents and load the data in database Coding application using Python Django in Endto End Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Java Developer Synchrony Financial Alpharetta GA March 2011 to May 2012 Responsibilities Design of application components using Java Collections and providing concurrent database access using multithreading Implemented the logic layer using Java features like Collections Interfaces Polymorphism and Exception Handling Used Spring Framework for Dependency Injection DI and integrated and used DAO design pattern to retrieve the data from database Java Servlets and JSP pages were deployed on the Web Logic Application Server for retrieving user information and posting related data Developing new endpoints to fetch data from different sources like SQL Server Netezza AWS and designing its output response in JSON Reengineered designed and migrated SCORE applications from Websphere to JBOSS application Server Worked with Struts MVC Paradigm components such as Action Mapping Action class Dispatch action class Action Form bean Worked on development of Hibernate including mapping files configuration file and classes to interact with the database Designed and created PLSQL sub programs like Stored Procedures Triggers and Sequences to access Oracle Developed dynamic web pages using HTML jQuery Bootstrap CSS and Eclipse Handling form requests using Servlets and JSP responses for interacting with the formal Business Logic Layer that contained the BackEnd business rules for handling the data in and out of the system Generated UML artifacts such as use cases sequence diagrams class diagrams using Rational Application Developer Created UNIX shell scripts to automate the build process to perform regular jobs like file transfers between different hosts Written SQL queries in PLSQL wrote new stored procedures and modified existing ones depending on requirements in Oracle database Developed iterations including planning requirements analysis design writing unit tests throughout the lifecycle of the project using Agile Scrum Methodology Skills Django 5 years front end 5 years JavaScript 5 years JQuery 7 years Python 5 years Additional Information TECHNICAL SKILL Languages Python 27 34 Perl JavaJ2EE C C Unix Shell Scripts SQL Frameworks Flask Django Laravel Spring Hibernate Apache Hadoop Spark Frontend Technologies HTML CSS javascript Jquery BootStrap jQuery AJAX Kendo UI AngularJS ReactJS NodeJS BackboneJS Cloud Technologies Amazon Web Services AWS OpenStack MicroSoft Azure Rackspace SaaS IaaS PaaS Security Spring Security OAuth Active Directory LDAP SSL SAML Databases RDBMS MySQL and Oracle NoSQL MongoDB and Cassandra CouchDB DynamoDB Teradata and PostgreSQL Version Control Management Tools GIT JUnit Log4j JIRA Jenkins SDLC Methodologies AgileScrum Waterfall Hybrid Application Servers Apache Tomcat WebSphere Jboss WebLogic Servlets IDE Tools Spider PyCharm Eclipse IntelliJ IDEA Sublime VS Code PyStudio Matlab Design Methodologies OOP Agile Water Fall SCRUM Operating systems Linux Ubuntu Fedora UNIX Windows XP Vista 7 8 10",
    "unique_id": "8de02b64-1d01-4d81-8ab4-88c08206dad7"
}