{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Optum Minneapolis MN Work Experience Sr Python Developer Optum Minneapolis MN October 2017 to Present Minneapolis MN Oct 2017 Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Worked on Angular JS of Scopes Models Services Dependency Injection Routing and Prototyping Developed Responsible Web Design RWD UIUX using HTML 5 CSS3 media queries Ajax Angular Js and Bootstrap Used open source JavaScript libraries like React in building UI components Developed GUI HTML5 XHTML AJAX CSS3 and JavaScript Query Used Python Library Beautiful Soup for web Scrapping Worked on google cloud platform GCP services like compute engine cloud load balancing cloud storage cloud SQL stack driver monitoring and cloud deployment manager Migrated servers databases and applications from on premise to AWS and Google Cloud Platform Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Written Programs in Spark using Scala and Python for Data quality check Worked on analyzing Hadoop cluster and different big data analytic tools such as HiveQL Hosted GPU based Apache spark jobs using Scala for faster data processing and used spark SQL for querying Involved in writing application level code to interact with APIs Web Services using AJAX JSON and hence building features using jQuery Ajax and jQuery UI Used filters while coding in Angular JS Involved in configured DNS DHCP Active Directory with strong focus on Domain Controller maintenance including Windows Server Develop consumer based features and applications using Python Django HTML and Test Driven Development TDD Analyzed the SQL scripts and designed the solution to implement using Scala Involved in debugging the applications monitored on JIRA using agile methodology Involved in writing application level code to interact with APIs Web Services using AJAX JSON XML Angular JS and Node JS Working on Loading and transforming large sets of structured semi structured and unstructured data using HadoopBig data concepts Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker and Kubernetes Designed database Model APIs and Views utilizing Python to build an interactive webbased application Leveraged Angular resources for all data access encapsulating URLs and standardizing data access interfaces Developed microservice on boarding tools leveraging Python and Jenkins allowing for easy creation and maintenance of build jobs and Kubernetes deploy and services Maintained and developed Docker images for a tech stack including Cassandra Kafka Apache and several inhouse written Java services running on Google Cloud Platform GCP on Kubernetes Did Web Development using Html5 CSS3 JavaScript Jquery AngularJS NodeJS Sinatra Spring Designed GUI framework using PyQt and Matplotlib for two quantitative finance patents Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Managed the Docker container through the pods and performing the load balance between the pods through Kubernetes Also used PyQt to implement GUI for the user to create modify and view reports based on client data Expertise includes bash and python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Coding in LAMP Linux Apache MySQL and PHP environment and installed Zookeeper to manage the Hadoop ecosystem and other big data sets Used Pandas library for statistics Analysis Used Numpy for Numerical analysis Leveraged and integrated Google Cloud Storage and Big Query applications which connected to Tableau for end user web based dashboards and reports Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed multiple high performance MongoDB replica sets on EC2 with robust reliability Used Amazon Web Services AWS for improved efficiency of storage and fast access Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Test driven development TDD and agile development using integrate platform Quartz subversion StoryJiraSprint for development testing signoff and release Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Worked with with Heroku Site5 Amazon EC2S3 for deployment Load Balancing implementations of solutions to client applications including HTTP HTTPS SSH FTP providing global DNS design solution successful implementation Exposure in working for developing a portal to manage and entities in a content management system using Flask Developed single page applications using various JavaScript frameworks like SASS AngularJS Writing testing debugging Javascript OOP modules with AngularJS JQuery BackboneJS Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Performed Troubleshooting and Technical support abilities with Migrations Network connectivity and Security and Database applications Worked mainly on Core Java C STL data structures UNIX scripting multithreading Worked on design and implementation of an audit log system major API design improvements and OpenStack cloud management Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Setting up network environments using TCPIP DNS DHCP and proxy Established OpenStack project Infrastructure Program and served as tech lead Involved in Unit testing and Integration testing I have used AWS Amazon Web services in Redshift EmR for improved efficiency of storage Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Excellent project management skill with local and international teams Ex Continuous Integration and smoke test projects from Jenkins Scaled developer infrastructure as project grew and transitioned to OpenStack Foundation UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used WebServices to get travel destination data and rates Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Python Developer Wells Fargo San Francisco CA March 2016 to September 2017 Responsibilities Worked extensively on the Python based proprietary framework Quartz Worked on various UIUX technologies like JSF HTML5 XHTML CSS3 JavaScript and JSP tag libraries Used Django configuration to manage URLs and application parameters Used Python Django framework to develop applications Developed server side REST web services and called them from angular controllers Web application development for backend system on using Angular with cutting edge HTML and CSS techniques Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Implemented a production ready load balanced highly available fault tolerant auto scaling Kubernetes infrastructure and microservice container orchestration Performed job functions using Spark APIs in Scala for real time analysis and for fast querying purposes Worked on implementing GUI using PyQt in Python REST JSON Develop Unix Shell scripts to perform ELT operations on big data using functions like Sqoop create externalinternal Hive tables initiate HQL scripts etc Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Designed and developed a horizontally scalable APIs using Python Flask Developed POC replacing Tibco BE with Cassandra and spark streaming using AWS Designed and Developed Java Script frame work which is wrapper on top of JQUERY frame work and AJAX based UI frame work for UI Configuration widgets Developed Date Time Picker using Object Oriented JavaScript extensively Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and Jquery Handled all the client side validation using JavaScript Managed large datasets using Panda data frames and MySQL Develop online applications using OOP as well as Python programming Develop applications that use MongoDB database and pymongo Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Work application level code to interact with APIs rest web services using AJAX JSON Nodejs XML and Angularjs Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Worked on front end frame works like CSS Bootstrap for responsive webpages Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Involved in back end development using Python with framework Flask Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid For new website features wrote Angular controllers views and services Examined eventdriven network programming using select and Twisted framework Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Trained extensively in agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Software Developer Verizon Irving TX December 2014 to February 2016 Irving TX Dec 2014 Feb 2016 Responsibilities Responsible for all client side UIUX Validation and implementing Business logic based on user selection using JQuery JQuery UI Used HTMLCSS and Javascript for UIUX development Converted Visual basic Application to Python MSQL Created Reports using JASPER Designed database Model Views and APIs using Python for interactive web based solutions Used Angularjs for creating custom directives for reusable components multifield form elements background file uploads etc Worked with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Used Test driven approach TDD for developing services required for the application Worked on Openstack Swift for moving large data files using Keystone and Horizon and integrated them into the web services and client server application Writing modules in Python to connect to MongoDB with PyMongo and doing CRUD operations with MongoDB Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Django framework for database application development Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Used HTML CSS JQuery JSON and Javascript for front end applications Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked responsible for development and enhancements of all the modules of raildocs and have them running with the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Software Developer GE Energy Seattle WA October 2013 to November 2014 Seattle WA Oct 2013 Nov 2014 Responsibilities Designed front end using UI HTML Bootstrap and JavaScript frameworks also worked with server side technologies including databases and MVC design patterns Involved in requirement Analysis documentation of high level and low level design Created prototypes in HTML JavaScript and CSS for different UI pages Developed SOAP WebServices using Apache CXF and Axis2 framework and deployed on Tomcat Developed JAXWS WebServices and deployed on WebSphere Application Server Migrated web service applications from Tomcat to WebSphere Application Server Worked on java security like encryption decryption and generation of signature Used EJB Query Language for all database interactions Worked with Core java concepts Generics Collections OOP Threads Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Involved in implementing static and dynamic Web mapping of business logic and technical requirements Collaborated with business during requirement analysis and design discussions Worked on migration of light weight web applications from WebLogic to Tomcat Responsible for developing the application level flow by utilizing Java JSP and Struts Responsible for developing the OS specific scripts Shell Scripts for automating the closing doc Process Used JSP for the frontend development and JavaScript for validation Education Bachelors Skills Cc C Django Docker Hadoop Hive Javascript Angularjs Bootstrap Nodejs Reactjs Redux Jenkins Json Pig Python Matplotlib Numpy Pandas Visio Additional Information TECHNICAL SKILLS Programming Languages JavaScript Python CC SQL Scala DevOps Tools Ansible Jenkins Docker CICD Puppet and chef Github Modern Web Stack Angularjs JavaScript Bootstrap JQuery HTML5 CSS3 SASS LESS npm Kendo UI Nodejs ReactJS Redux Grunt Technologies Netconf Yang Openstack BSCS MSCS Frameworks Django AngularJS Mongodb Big data Hadoop Pig Hive Web Technologies HTML5 CSS3 AWS Google Cloud JavaScript XML Pandas Servlet JSP JSON ExtJs JQuery AJAX Web Services AWS EC2 AMI EBS Cloud watch AWS Config Autoscaling REST SOAP WSDL Python Libraries BeautifulSoup NumPy SciPy matplotlib Pythontwitter Databases MYSQL Oracle SQL Lite NoSQL MongoDB Dynamo DB Cassandra Redis SoftwareIDE Sublime Text PyCharm NetBeans MS Visio Operating Systems Windows Linux Bug Tracking tools Bugzilla Jira Confluence",
    "entities": [
        "AJAX",
        "Test Driven Development TDD",
        "GUI",
        "Jenkins Scaled",
        "Nodejs",
        "Ex Continuous Integration",
        "SQLAlchemy",
        "UNIX",
        "Agile Software Methodology",
        "Kubernetes Created Pods",
        "AJAX JSON",
        "CC SQL Scala",
        "Developed SOAP WebServices",
        "WebSphere Application Server Migrated",
        "OpenStack",
        "Amazon Web Services AWS",
        "Heroku",
        "Panda",
        "Hadoop",
        "Pytest Written Programs",
        "XML",
        "Generics Collections OOP Threads Designed",
        "Flask Developed",
        "Bootstrap CSS",
        "WebLogic",
        "Angular JS Involved",
        "DevOps",
        "Shell",
        "Software Developer GE Energy",
        "ELT",
        "Devops",
        "LAMP",
        "Kubernetes Test",
        "Amazon",
        "TX",
        "Present Minneapolis",
        "Big Query",
        "Python",
        "Migrations Network",
        "Postgre SQL Involved",
        "Oracle SQL Lite NoSQL MongoDB",
        "Tibco BE",
        "Developed",
        "CSS Bootstrap",
        "Windows",
        "Tomcat Responsible",
        "OpenStack Foundation UIS",
        "Grid",
        "HiveQL Hosted",
        "Linux",
        "JSP",
        "API RESTful Web Service",
        "HadoopBig",
        "Collaborated",
        "UIUX Validation",
        "Oracle DB2",
        "VMWare API",
        "Docker",
        "Redshift EmR",
        "Kubernetes Used Test",
        "Views",
        "Dynamo",
        "PyQt",
        "MVC",
        "Flask SQL Alchemy",
        "Spark",
        "JS",
        "API",
        "UI HTML Bootstrap",
        "HTML CSS JavaScript",
        "Scala Involved",
        "jQuery Ajax",
        "Sqoop",
        "Task Schedulers",
        "DNS DHCP Active Directory",
        "Created",
        "Infrastructure Program",
        "AWS",
        "Apache CXF",
        "JSF",
        "Postgres",
        "Python Object Oriented Design",
        "Seattle",
        "Converted Visual",
        "Leveraged Angular",
        "Cryptography EncryptionHashing Foundation Utilities",
        "SQL",
        "UIUX",
        "Flask Implemented",
        "Keystone",
        "Django Oracle DB PostgreSQL",
        "Axis2",
        "lPythonspan",
        "Kubernetes",
        "GPU",
        "Jenkins Ansible",
        "Administrators",
        "AWS Cloud Architecture",
        "Python OOP Worked",
        "CICD",
        "Quartz",
        "Amazon AWS",
        "DevOps Tools Ansible",
        "Scopes Models Services",
        "Pandas",
        "Performed Troubleshooting and Technical",
        "Datatables",
        "SQLite",
        "Zookeeper",
        "Performed",
        "GCP",
        "AJAX JSON Nodejs XML",
        "JavaScript",
        "UI",
        "WebSphere Application Server Worked",
        "SQL Queries Stored",
        "SVN",
        "JASPER",
        "CSS",
        "FPML Financial Products Markup Language",
        "Established OpenStack",
        "Tomcat",
        "REST",
        "Google Cloud Platform GCP",
        "PHP",
        "TDD",
        "Tableau",
        "Horizon",
        "Tomcat Developed JAXWS WebServices",
        "UI Configuration",
        "Product Owners Software Developer",
        "Node",
        "Redux Grunt Technologies",
        "DNS"
    ],
    "experience": "Experience Sr Python Developer Optum Minneapolis MN October 2017 to Present Minneapolis MN Oct 2017 Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Worked on Angular JS of Scopes Models Services Dependency Injection Routing and Prototyping Developed Responsible Web Design RWD UIUX using HTML 5 CSS3 media queries Ajax Angular Js and Bootstrap Used open source JavaScript libraries like React in building UI components Developed GUI HTML5 XHTML AJAX CSS3 and JavaScript Query Used Python Library Beautiful Soup for web Scrapping Worked on google cloud platform GCP services like compute engine cloud load balancing cloud storage cloud SQL stack driver monitoring and cloud deployment manager Migrated servers databases and applications from on premise to AWS and Google Cloud Platform Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Written Programs in Spark using Scala and Python for Data quality check Worked on analyzing Hadoop cluster and different big data analytic tools such as HiveQL Hosted GPU based Apache spark jobs using Scala for faster data processing and used spark SQL for querying Involved in writing application level code to interact with APIs Web Services using AJAX JSON and hence building features using jQuery Ajax and jQuery UI Used filters while coding in Angular JS Involved in configured DNS DHCP Active Directory with strong focus on Domain Controller maintenance including Windows Server Develop consumer based features and applications using Python Django HTML and Test Driven Development TDD Analyzed the SQL scripts and designed the solution to implement using Scala Involved in debugging the applications monitored on JIRA using agile methodology Involved in writing application level code to interact with APIs Web Services using AJAX JSON XML Angular JS and Node JS Working on Loading and transforming large sets of structured semi structured and unstructured data using HadoopBig data concepts Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker and Kubernetes Designed database Model APIs and Views utilizing Python to build an interactive webbased application Leveraged Angular resources for all data access encapsulating URLs and standardizing data access interfaces Developed microservice on boarding tools leveraging Python and Jenkins allowing for easy creation and maintenance of build jobs and Kubernetes deploy and services Maintained and developed Docker images for a tech stack including Cassandra Kafka Apache and several inhouse written Java services running on Google Cloud Platform GCP on Kubernetes Did Web Development using Html5 CSS3 JavaScript Jquery AngularJS NodeJS Sinatra Spring Designed GUI framework using PyQt and Matplotlib for two quantitative finance patents Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Managed the Docker container through the pods and performing the load balance between the pods through Kubernetes Also used PyQt to implement GUI for the user to create modify and view reports based on client data Expertise includes bash and python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Coding in LAMP Linux Apache MySQL and PHP environment and installed Zookeeper to manage the Hadoop ecosystem and other big data sets Used Pandas library for statistics Analysis Used Numpy for Numerical analysis Leveraged and integrated Google Cloud Storage and Big Query applications which connected to Tableau for end user web based dashboards and reports Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed multiple high performance MongoDB replica sets on EC2 with robust reliability Used Amazon Web Services AWS for improved efficiency of storage and fast access Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Test driven development TDD and agile development using integrate platform Quartz subversion StoryJiraSprint for development testing signoff and release Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Worked with with Heroku Site5 Amazon EC2S3 for deployment Load Balancing implementations of solutions to client applications including HTTP HTTPS SSH FTP providing global DNS design solution successful implementation Exposure in working for developing a portal to manage and entities in a content management system using Flask Developed single page applications using various JavaScript frameworks like SASS AngularJS Writing testing debugging Javascript OOP modules with AngularJS JQuery BackboneJS Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Performed Troubleshooting and Technical support abilities with Migrations Network connectivity and Security and Database applications Worked mainly on Core Java C STL data structures UNIX scripting multithreading Worked on design and implementation of an audit log system major API design improvements and OpenStack cloud management Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Setting up network environments using TCPIP DNS DHCP and proxy Established OpenStack project Infrastructure Program and served as tech lead Involved in Unit testing and Integration testing I have used AWS Amazon Web services in Redshift EmR for improved efficiency of storage Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Excellent project management skill with local and international teams Ex Continuous Integration and smoke test projects from Jenkins Scaled developer infrastructure as project grew and transitioned to OpenStack Foundation UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used WebServices to get travel destination data and rates Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Python Developer Wells Fargo San Francisco CA March 2016 to September 2017 Responsibilities Worked extensively on the Python based proprietary framework Quartz Worked on various UIUX technologies like JSF HTML5 XHTML CSS3 JavaScript and JSP tag libraries Used Django configuration to manage URLs and application parameters Used Python Django framework to develop applications Developed server side REST web services and called them from angular controllers Web application development for backend system on using Angular with cutting edge HTML and CSS techniques Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Implemented a production ready load balanced highly available fault tolerant auto scaling Kubernetes infrastructure and microservice container orchestration Performed job functions using Spark APIs in Scala for real time analysis and for fast querying purposes Worked on implementing GUI using PyQt in Python REST JSON Develop Unix Shell scripts to perform ELT operations on big data using functions like Sqoop create externalinternal Hive tables initiate HQL scripts etc Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Designed and developed a horizontally scalable APIs using Python Flask Developed POC replacing Tibco BE with Cassandra and spark streaming using AWS Designed and Developed Java Script frame work which is wrapper on top of JQUERY frame work and AJAX based UI frame work for UI Configuration widgets Developed Date Time Picker using Object Oriented JavaScript extensively Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and Jquery Handled all the client side validation using JavaScript Managed large datasets using Panda data frames and MySQL Develop online applications using OOP as well as Python programming Develop applications that use MongoDB database and pymongo Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Work application level code to interact with APIs rest web services using AJAX JSON Nodejs XML and Angularjs Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Worked on front end frame works like CSS Bootstrap for responsive webpages Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Involved in back end development using Python with framework Flask Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid For new website features wrote Angular controllers views and services Examined eventdriven network programming using select and Twisted framework Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Trained extensively in agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Software Developer Verizon Irving TX December 2014 to February 2016 Irving TX Dec 2014 Feb 2016 Responsibilities Responsible for all client side UIUX Validation and implementing Business logic based on user selection using JQuery JQuery UI Used HTMLCSS and Javascript for UIUX development Converted Visual basic Application to Python MSQL Created Reports using JASPER Designed database Model Views and APIs using Python for interactive web based solutions Used Angularjs for creating custom directives for reusable components multifield form elements background file uploads etc Worked with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Used Test driven approach TDD for developing services required for the application Worked on Openstack Swift for moving large data files using Keystone and Horizon and integrated them into the web services and client server application Writing modules in Python to connect to MongoDB with PyMongo and doing CRUD operations with MongoDB Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Django framework for database application development Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Used HTML CSS JQuery JSON and Javascript for front end applications Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked responsible for development and enhancements of all the modules of raildocs and have them running with the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Software Developer GE Energy Seattle WA October 2013 to November 2014 Seattle WA Oct 2013 Nov 2014 Responsibilities Designed front end using UI HTML Bootstrap and JavaScript frameworks also worked with server side technologies including databases and MVC design patterns Involved in requirement Analysis documentation of high level and low level design Created prototypes in HTML JavaScript and CSS for different UI pages Developed SOAP WebServices using Apache CXF and Axis2 framework and deployed on Tomcat Developed JAXWS WebServices and deployed on WebSphere Application Server Migrated web service applications from Tomcat to WebSphere Application Server Worked on java security like encryption decryption and generation of signature Used EJB Query Language for all database interactions Worked with Core java concepts Generics Collections OOP Threads Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Involved in implementing static and dynamic Web mapping of business logic and technical requirements Collaborated with business during requirement analysis and design discussions Worked on migration of light weight web applications from WebLogic to Tomcat Responsible for developing the application level flow by utilizing Java JSP and Struts Responsible for developing the OS specific scripts Shell Scripts for automating the closing doc Process Used JSP for the frontend development and JavaScript for validation Education Bachelors Skills Cc C Django Docker Hadoop Hive Javascript Angularjs Bootstrap Nodejs Reactjs Redux Jenkins Json Pig Python Matplotlib Numpy Pandas Visio Additional Information TECHNICAL SKILLS Programming Languages JavaScript Python CC SQL Scala DevOps Tools Ansible Jenkins Docker CICD Puppet and chef Github Modern Web Stack Angularjs JavaScript Bootstrap JQuery HTML5 CSS3 SASS LESS npm Kendo UI Nodejs ReactJS Redux Grunt Technologies Netconf Yang Openstack BSCS MSCS Frameworks Django AngularJS Mongodb Big data Hadoop Pig Hive Web Technologies HTML5 CSS3 AWS Google Cloud JavaScript XML Pandas Servlet JSP JSON ExtJs JQuery AJAX Web Services AWS EC2 AMI EBS Cloud watch AWS Config Autoscaling REST SOAP WSDL Python Libraries BeautifulSoup NumPy SciPy matplotlib Pythontwitter Databases MYSQL Oracle SQL Lite NoSQL MongoDB Dynamo DB Cassandra Redis SoftwareIDE Sublime Text PyCharm NetBeans MS Visio Operating Systems Windows Linux Bug Tracking tools Bugzilla Jira Confluence",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Optum",
        "Minneapolis",
        "MN",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Optum",
        "Minneapolis",
        "MN",
        "October",
        "Present",
        "Minneapolis",
        "MN",
        "Oct",
        "Present",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "JS",
        "Scopes",
        "Models",
        "Services",
        "Dependency",
        "Injection",
        "Routing",
        "Prototyping",
        "Developed",
        "Responsible",
        "Web",
        "Design",
        "RWD",
        "UIUX",
        "HTML",
        "CSS3",
        "media",
        "Ajax",
        "Angular",
        "Js",
        "Bootstrap",
        "source",
        "JavaScript",
        "React",
        "UI",
        "components",
        "GUI",
        "HTML5",
        "XHTML",
        "AJAX",
        "CSS3",
        "JavaScript",
        "Query",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "Scrapping",
        "google",
        "cloud",
        "platform",
        "GCP",
        "services",
        "compute",
        "engine",
        "cloud",
        "load",
        "cloud",
        "storage",
        "cloud",
        "SQL",
        "stack",
        "driver",
        "monitoring",
        "deployment",
        "manager",
        "servers",
        "databases",
        "applications",
        "premise",
        "AWS",
        "Google",
        "Cloud",
        "Platform",
        "APIs",
        "Python",
        "Flask",
        "SQLAlchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "Written",
        "Programs",
        "Spark",
        "Scala",
        "Python",
        "Data",
        "quality",
        "check",
        "Hadoop",
        "cluster",
        "data",
        "tools",
        "HiveQL",
        "Hosted",
        "GPU",
        "Apache",
        "spark",
        "jobs",
        "Scala",
        "data",
        "processing",
        "spark",
        "SQL",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "AJAX",
        "JSON",
        "features",
        "jQuery",
        "Ajax",
        "jQuery",
        "UI",
        "filters",
        "JS",
        "DNS",
        "Active",
        "Directory",
        "focus",
        "Domain",
        "Controller",
        "maintenance",
        "Windows",
        "Server",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "SQL",
        "scripts",
        "solution",
        "Scala",
        "applications",
        "JIRA",
        "methodology",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "AJAX",
        "JSON",
        "XML",
        "JS",
        "Node",
        "JS",
        "Working",
        "Loading",
        "sets",
        "data",
        "HadoopBig",
        "data",
        "concepts",
        "DevOps",
        "tools",
        "team",
        "scripts",
        "deployment",
        "tools",
        "environment",
        "Docker",
        "Kubernetes",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "application",
        "Leveraged",
        "Angular",
        "resources",
        "data",
        "access",
        "URLs",
        "data",
        "access",
        "interfaces",
        "microservice",
        "boarding",
        "tools",
        "Python",
        "Jenkins",
        "creation",
        "maintenance",
        "build",
        "jobs",
        "Kubernetes",
        "services",
        "Docker",
        "images",
        "tech",
        "stack",
        "Cassandra",
        "Kafka",
        "Apache",
        "inhouse",
        "Java",
        "services",
        "Google",
        "Cloud",
        "Platform",
        "GCP",
        "Kubernetes",
        "Web",
        "Development",
        "Html5",
        "CSS3",
        "JavaScript",
        "Jquery",
        "NodeJS",
        "Sinatra",
        "Spring",
        "GUI",
        "framework",
        "PyQt",
        "Matplotlib",
        "finance",
        "patents",
        "Cassandra",
        "data",
        "store",
        "data",
        "time",
        "Oracle",
        "Cassandra",
        "Cassandra",
        "Spark",
        "streaming",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "PostgresSQL",
        "data",
        "integrity",
        "Docker",
        "container",
        "pods",
        "load",
        "balance",
        "pods",
        "Kubernetes",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Expertise",
        "bash",
        "scripting",
        "focus",
        "Devops",
        "tools",
        "CICD",
        "AWS",
        "Cloud",
        "Architecture",
        "handson",
        "Engineering",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Coding",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PHP",
        "environment",
        "Zookeeper",
        "Hadoop",
        "ecosystem",
        "data",
        "sets",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "Google",
        "Cloud",
        "Storage",
        "Big",
        "Query",
        "applications",
        "Tableau",
        "end",
        "user",
        "web",
        "dashboards",
        "reports",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "performance",
        "replica",
        "sets",
        "EC2",
        "reliability",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "custom",
        "query",
        "script",
        "store",
        "index",
        "sets",
        "Object",
        "data",
        "MongoDb",
        "Jenkins",
        "pipelines",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "Test",
        "development",
        "TDD",
        "development",
        "platform",
        "Quartz",
        "subversion",
        "StoryJiraSprint",
        "development",
        "testing",
        "signoff",
        "Proficient",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "DB2",
        "MySQL",
        "Heroku",
        "Site5",
        "Amazon",
        "EC2S3",
        "deployment",
        "Load",
        "Balancing",
        "implementations",
        "solutions",
        "client",
        "applications",
        "HTTP",
        "HTTPS",
        "SSH",
        "FTP",
        "DNS",
        "design",
        "solution",
        "implementation",
        "Exposure",
        "portal",
        "entities",
        "content",
        "management",
        "system",
        "Flask",
        "page",
        "applications",
        "JavaScript",
        "frameworks",
        "SASS",
        "AngularJS",
        "Writing",
        "testing",
        "Javascript",
        "OOP",
        "modules",
        "AngularJS",
        "JQuery",
        "BackboneJS",
        "Docker",
        "Ansible",
        "deployment",
        "execution",
        "benchmark",
        "suite",
        "cluster",
        "machines",
        "Performed",
        "Troubleshooting",
        "support",
        "abilities",
        "Migrations",
        "Network",
        "connectivity",
        "Security",
        "Database",
        "applications",
        "Core",
        "Java",
        "C",
        "STL",
        "data",
        "UNIX",
        "scripting",
        "design",
        "implementation",
        "audit",
        "log",
        "system",
        "API",
        "design",
        "improvements",
        "OpenStack",
        "cloud",
        "management",
        "testing",
        "framework",
        "commandline",
        "tests",
        "Linux",
        "Objected",
        "Oriented",
        "Perl",
        "tests",
        "Python",
        "network",
        "environments",
        "TCPIP",
        "DNS",
        "DHCP",
        "proxy",
        "Established",
        "OpenStack",
        "project",
        "Infrastructure",
        "Program",
        "tech",
        "lead",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "AWS",
        "Amazon",
        "Web",
        "services",
        "Redshift",
        "EmR",
        "efficiency",
        "storage",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "Excellent",
        "project",
        "management",
        "skill",
        "teams",
        "Ex",
        "Continuous",
        "Integration",
        "smoke",
        "test",
        "projects",
        "Jenkins",
        "Scaled",
        "developer",
        "infrastructure",
        "project",
        "OpenStack",
        "Foundation",
        "UIS",
        "system",
        "design",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "approach",
        "modulespackagesutilities",
        "eg",
        "Cryptography",
        "EncryptionHashing",
        "Foundation",
        "Utilities",
        "Persona",
        "management",
        "errorexception",
        "management",
        "WebServices",
        "travel",
        "destination",
        "data",
        "rates",
        "Issues",
        "Realtime",
        "data",
        "RabbitMQ",
        "Postgres",
        "Cassandra",
        "Python",
        "Developer",
        "Wells",
        "Fargo",
        "San",
        "Francisco",
        "CA",
        "March",
        "September",
        "Responsibilities",
        "Python",
        "framework",
        "Quartz",
        "UIUX",
        "technologies",
        "JSF",
        "HTML5",
        "XHTML",
        "CSS3",
        "JavaScript",
        "JSP",
        "tag",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Python",
        "Django",
        "framework",
        "applications",
        "server",
        "side",
        "REST",
        "web",
        "services",
        "controllers",
        "Web",
        "application",
        "development",
        "system",
        "Angular",
        "edge",
        "HTML",
        "CSS",
        "techniques",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "calls",
        "production",
        "load",
        "fault",
        "auto",
        "Kubernetes",
        "infrastructure",
        "microservice",
        "container",
        "orchestration",
        "job",
        "functions",
        "Spark",
        "APIs",
        "Scala",
        "time",
        "analysis",
        "purposes",
        "GUI",
        "PyQt",
        "Python",
        "REST",
        "JSON",
        "Develop",
        "Unix",
        "Shell",
        "scripts",
        "ELT",
        "operations",
        "data",
        "functions",
        "Sqoop",
        "Hive",
        "tables",
        "HQL",
        "scripts",
        "Wrote",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "APIs",
        "Python",
        "Flask",
        "Developed",
        "POC",
        "Tibco",
        "Cassandra",
        "streaming",
        "AWS",
        "Developed",
        "Java",
        "Script",
        "frame",
        "work",
        "wrapper",
        "top",
        "JQUERY",
        "frame",
        "work",
        "AJAX",
        "UI",
        "frame",
        "work",
        "UI",
        "Configuration",
        "Date",
        "Time",
        "Picker",
        "Object",
        "Oriented",
        "JavaScript",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "Jquery",
        "client",
        "side",
        "validation",
        "JavaScript",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Develop",
        "applications",
        "OOP",
        "Python",
        "programming",
        "Develop",
        "applications",
        "database",
        "pymongo",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "Work",
        "application",
        "level",
        "code",
        "APIs",
        "rest",
        "web",
        "services",
        "AJAX",
        "JSON",
        "Nodejs",
        "XML",
        "Angularjs",
        "Developed",
        "Golang",
        "API",
        "chatbot",
        "TDD",
        "software",
        "deployments",
        "rollbacks",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "webpages",
        "features",
        "dashboard",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "end",
        "development",
        "Python",
        "framework",
        "Flask",
        "Task",
        "Schedulers",
        "scheduling",
        "job",
        "priority",
        "data",
        "mapreduce",
        "functions",
        "Grid",
        "website",
        "features",
        "controllers",
        "views",
        "services",
        "network",
        "programming",
        "framework",
        "time",
        "scripts",
        "sets",
        "data",
        "filtering",
        "data",
        "reports",
        "scale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "Python",
        "modules",
        "eg",
        "csv",
        "robotparser",
        "itertools",
        "pickle",
        "jinja2",
        "lxml",
        "development",
        "modules",
        "XML",
        "trade",
        "data",
        "trade",
        "objects",
        "trade",
        "data",
        "outbound",
        "FPML",
        "Financial",
        "Products",
        "Markup",
        "Language",
        "repositories",
        "methodologies",
        "scrum",
        "standups",
        "Kanban",
        "mode",
        "requirements",
        "Product",
        "Owners",
        "Software",
        "Developer",
        "Verizon",
        "Irving",
        "TX",
        "December",
        "February",
        "Irving",
        "TX",
        "Dec",
        "Feb",
        "Responsibilities",
        "client",
        "side",
        "UIUX",
        "Validation",
        "Business",
        "logic",
        "user",
        "selection",
        "JQuery",
        "JQuery",
        "UI",
        "HTMLCSS",
        "Javascript",
        "UIUX",
        "development",
        "Application",
        "Python",
        "MSQL",
        "Created",
        "Reports",
        "JASPER",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "Angularjs",
        "custom",
        "directives",
        "components",
        "multifield",
        "form",
        "elements",
        "background",
        "file",
        "uploads",
        "deployments",
        "Docker",
        "Docker",
        "Docker",
        "Hub",
        "Docker",
        "registries",
        "Kubernetes",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Openstack",
        "Swift",
        "data",
        "files",
        "Keystone",
        "Horizon",
        "web",
        "services",
        "client",
        "server",
        "application",
        "modules",
        "Python",
        "MongoDB",
        "PyMongo",
        "CRUD",
        "operations",
        "MongoDB",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Django",
        "framework",
        "database",
        "application",
        "development",
        "data",
        "access",
        "SQL",
        "procedures",
        "Multithreading",
        "Concurrency",
        "Batch",
        "Job",
        "Scheduling",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "Linux",
        "profiler",
        "Valgrind",
        "optimization",
        "code",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Worked",
        "development",
        "enhancements",
        "modules",
        "raildocs",
        "design",
        "team",
        "project",
        "structure",
        "presentation",
        "layer",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "Python",
        "Perl",
        "CGI",
        "JQuery",
        "JavaScript",
        "JSON",
        "end",
        "Windows",
        "Linux",
        "server",
        "data",
        "exchange",
        "website",
        "XML",
        "JAVA",
        "Web",
        "Services",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Software",
        "Developer",
        "GE",
        "Energy",
        "Seattle",
        "WA",
        "October",
        "November",
        "Seattle",
        "WA",
        "Oct",
        "Nov",
        "Responsibilities",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "JavaScript",
        "frameworks",
        "server",
        "side",
        "technologies",
        "databases",
        "MVC",
        "design",
        "patterns",
        "requirement",
        "Analysis",
        "documentation",
        "level",
        "level",
        "design",
        "prototypes",
        "HTML",
        "JavaScript",
        "CSS",
        "UI",
        "pages",
        "SOAP",
        "WebServices",
        "Apache",
        "CXF",
        "framework",
        "Tomcat",
        "JAXWS",
        "WebServices",
        "WebSphere",
        "Application",
        "Server",
        "web",
        "service",
        "applications",
        "Tomcat",
        "WebSphere",
        "Application",
        "Server",
        "security",
        "encryption",
        "decryption",
        "generation",
        "signature",
        "EJB",
        "Query",
        "Language",
        "database",
        "interactions",
        "Core",
        "java",
        "Generics",
        "Collections",
        "OOP",
        "Threads",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "Postgre",
        "SQL",
        "Web",
        "mapping",
        "business",
        "logic",
        "requirements",
        "business",
        "requirement",
        "analysis",
        "design",
        "discussions",
        "migration",
        "weight",
        "web",
        "applications",
        "WebLogic",
        "Tomcat",
        "Responsible",
        "application",
        "level",
        "flow",
        "Java",
        "JSP",
        "Struts",
        "OS",
        "scripts",
        "Shell",
        "Scripts",
        "doc",
        "Process",
        "JSP",
        "frontend",
        "development",
        "JavaScript",
        "validation",
        "Education",
        "Bachelors",
        "Skills",
        "Cc",
        "C",
        "Django",
        "Docker",
        "Hadoop",
        "Hive",
        "Javascript",
        "Angularjs",
        "Bootstrap",
        "Nodejs",
        "Reactjs",
        "Redux",
        "Jenkins",
        "Json",
        "Pig",
        "Python",
        "Matplotlib",
        "Numpy",
        "Pandas",
        "Visio",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Programming",
        "Languages",
        "JavaScript",
        "Python",
        "CC",
        "SQL",
        "Scala",
        "DevOps",
        "Tools",
        "Ansible",
        "Jenkins",
        "Docker",
        "CICD",
        "Puppet",
        "chef",
        "Github",
        "Modern",
        "Web",
        "Stack",
        "Angularjs",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "HTML5",
        "CSS3",
        "SASS",
        "npm",
        "Kendo",
        "UI",
        "Nodejs",
        "ReactJS",
        "Redux",
        "Grunt",
        "Technologies",
        "Netconf",
        "Yang",
        "Openstack",
        "MSCS",
        "Frameworks",
        "Django",
        "Mongodb",
        "Big",
        "data",
        "Hadoop",
        "Pig",
        "Hive",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "AWS",
        "Google",
        "Cloud",
        "JavaScript",
        "XML",
        "Pandas",
        "Servlet",
        "JSP",
        "JSON",
        "ExtJs",
        "JQuery",
        "AJAX",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AMI",
        "EBS",
        "Cloud",
        "watch",
        "AWS",
        "Config",
        "Autoscaling",
        "REST",
        "SOAP",
        "WSDL",
        "Python",
        "BeautifulSoup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "Pythontwitter",
        "MYSQL",
        "Oracle",
        "SQL",
        "Lite",
        "NoSQL",
        "Dynamo",
        "DB",
        "Cassandra",
        "Redis",
        "SoftwareIDE",
        "Sublime",
        "Text",
        "PyCharm",
        "NetBeans",
        "MS",
        "Visio",
        "Operating",
        "Systems",
        "Linux",
        "Bug",
        "Tracking",
        "tools",
        "Bugzilla",
        "Jira",
        "Confluence"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:53:45.045617",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Optum Minneapolis MN Work Experience Sr Python Developer Optum Minneapolis MN October 2017 to Present Minneapolis MN Oct 2017 Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Worked on Angular JS of Scopes Models Services Dependency Injection Routing and Prototyping Developed Responsible Web Design RWD UIUX using HTML 5 CSS3 media queries Ajax Angular Js and Bootstrap Used open source JavaScript libraries like React in building UI components Developed GUI HTML5 XHTML AJAX CSS3 and JavaScript Query Used Python Library Beautiful Soup for web Scrapping Worked on google cloud platform GCP services like compute engine cloud load balancing cloud storage cloud SQL stack driver monitoring and cloud deployment manager Migrated servers databases and applications from on premise to AWS and Google Cloud Platform Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Written Programs in Spark using Scala and Python for Data quality check Worked on analyzing Hadoop cluster and different big data analytic tools such as HiveQL Hosted GPU based Apache spark jobs using Scala for faster data processing and used spark SQL for querying Involved in writing application level code to interact with APIs Web Services using AJAX JSON and hence building features using jQuery Ajax and jQuery UI Used filters while coding in Angular JS Involved in configured DNS DHCP Active Directory with strong focus on Domain Controller maintenance including Windows Server Develop consumer based features and applications using Python Django HTML and Test Driven Development TDD Analyzed the SQL scripts and designed the solution to implement using Scala Involved in debugging the applications monitored on JIRA using agile methodology Involved in writing application level code to interact with APIs Web Services using AJAX JSON XML Angular JS and Node JS Working on Loading and transforming large sets of structured semi structured and unstructured data using HadoopBig data concepts Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker and Kubernetes Designed database Model APIs and Views utilizing Python to build an interactive webbased application Leveraged Angular resources for all data access encapsulating URLs and standardizing data access interfaces Developed microservice on boarding tools leveraging Python and Jenkins allowing for easy creation and maintenance of build jobs and Kubernetes deploy and services Maintained and developed Docker images for a tech stack including Cassandra Kafka Apache and several inhouse written Java services running on Google Cloud Platform GCP on Kubernetes Did Web Development using Html5 CSS3 JavaScript Jquery AngularJS NodeJS Sinatra Spring Designed GUI framework using PyQt and Matplotlib for two quantitative finance patents Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Successfully migrated the Django database from SQLite to MySQL to PostgresSQL with complete data integrity Managed the Docker container through the pods and performing the load balance between the pods through Kubernetes Also used PyQt to implement GUI for the user to create modify and view reports based on client data Expertise includes bash and python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Coding in LAMP Linux Apache MySQL and PHP environment and installed Zookeeper to manage the Hadoop ecosystem and other big data sets Used Pandas library for statistics Analysis Used Numpy for Numerical analysis Leveraged and integrated Google Cloud Storage and Big Query applications which connected to Tableau for end user web based dashboards and reports Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed multiple high performance MongoDB replica sets on EC2 with robust reliability Used Amazon Web Services AWS for improved efficiency of storage and fast access Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Used Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Created Pods and managed using Kubernetes Test driven development TDD and agile development using integrate platform Quartz subversion StoryJiraSprint for development testing signoff and release Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Worked with with Heroku Site5 Amazon EC2S3 for deployment Load Balancing implementations of solutions to client applications including HTTP HTTPS SSH FTP providing global DNS design solution successful implementation Exposure in working for developing a portal to manage and entities in a content management system using Flask Developed single page applications using various JavaScript frameworks like SASS AngularJS Writing testing debugging Javascript OOP modules with AngularJS JQuery BackboneJS Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Performed Troubleshooting and Technical support abilities with Migrations Network connectivity and Security and Database applications Worked mainly on Core Java C STL data structures UNIX scripting multithreading Worked on design and implementation of an audit log system major API design improvements and OpenStack cloud management Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Setting up network environments using TCPIP DNS DHCP and proxy Established OpenStack project Infrastructure Program and served as tech lead Involved in Unit testing and Integration testing I have used AWS Amazon Web services in Redshift EmR for improved efficiency of storage Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Excellent project management skill with local and international teams Ex Continuous Integration and smoke test projects from Jenkins Scaled developer infrastructure as project grew and transitioned to OpenStack Foundation UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used WebServices to get travel destination data and rates Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Python Developer Wells Fargo San Francisco CA March 2016 to September 2017 Responsibilities Worked extensively on the Python based proprietary framework Quartz Worked on various UIUX technologies like JSF HTML5 XHTML CSS3 JavaScript and JSP tag libraries Used Django configuration to manage URLs and application parameters Used Python Django framework to develop applications Developed server side REST web services and called them from angular controllers Web application development for backend system on using Angular with cutting edge HTML and CSS techniques Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Implemented a production ready load balanced highly available fault tolerant auto scaling Kubernetes infrastructure and microservice container orchestration Performed job functions using Spark APIs in Scala for real time analysis and for fast querying purposes Worked on implementing GUI using PyQt in Python REST JSON Develop Unix Shell scripts to perform ELT operations on big data using functions like Sqoop create externalinternal Hive tables initiate HQL scripts etc Wrote Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Designed and developed a horizontally scalable APIs using Python Flask Developed POC replacing Tibco BE with Cassandra and spark streaming using AWS Designed and Developed Java Script frame work which is wrapper on top of JQUERY frame work and AJAX based UI frame work for UI Configuration widgets Developed Date Time Picker using Object Oriented JavaScript extensively Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and Jquery Handled all the client side validation using JavaScript Managed large datasets using Panda data frames and MySQL Develop online applications using OOP as well as Python programming Develop applications that use MongoDB database and pymongo Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Work application level code to interact with APIs rest web services using AJAX JSON Nodejs XML and Angularjs Developed Golang API and chatbot using TDD to automate software deployments and rollbacks Worked on front end frame works like CSS Bootstrap for responsive webpages Developed and tested many features for dashboard created using Bootstrap CSS and JavaScript Involved in back end development using Python with framework Flask Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid For new website features wrote Angular controllers views and services Examined eventdriven network programming using select and Twisted framework Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Trained extensively in agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Software Developer Verizon Irving TX December 2014 to February 2016 Irving TX Dec 2014 Feb 2016 Responsibilities Responsible for all client side UIUX Validation and implementing Business logic based on user selection using JQuery JQuery UI Used HTMLCSS and Javascript for UIUX development Converted Visual basic Application to Python MSQL Created Reports using JASPER Designed database Model Views and APIs using Python for interactive web based solutions Used Angularjs for creating custom directives for reusable components multifield form elements background file uploads etc Worked with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Used Test driven approach TDD for developing services required for the application Worked on Openstack Swift for moving large data files using Keystone and Horizon and integrated them into the web services and client server application Writing modules in Python to connect to MongoDB with PyMongo and doing CRUD operations with MongoDB Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Django framework for database application development Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Used HTML CSS JQuery JSON and Javascript for front end applications Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked responsible for development and enhancements of all the modules of raildocs and have them running with the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Software Developer GE Energy Seattle WA October 2013 to November 2014 Seattle WA Oct 2013 Nov 2014 Responsibilities Designed front end using UI HTML Bootstrap and JavaScript frameworks also worked with server side technologies including databases and MVC design patterns Involved in requirement Analysis documentation of high level and low level design Created prototypes in HTML JavaScript and CSS for different UI pages Developed SOAP WebServices using Apache CXF and Axis2 framework and deployed on Tomcat Developed JAXWS WebServices and deployed on WebSphere Application Server Migrated web service applications from Tomcat to WebSphere Application Server Worked on java security like encryption decryption and generation of signature Used EJB Query Language for all database interactions Worked with Core java concepts Generics Collections OOP Threads Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and Postgre SQL Involved in implementing static and dynamic Web mapping of business logic and technical requirements Collaborated with business during requirement analysis and design discussions Worked on migration of light weight web applications from WebLogic to Tomcat Responsible for developing the application level flow by utilizing Java JSP and Struts Responsible for developing the OS specific scripts Shell Scripts for automating the closing doc Process Used JSP for the frontend development and JavaScript for validation Education Bachelors Skills Cc C Django Docker Hadoop Hive Javascript Angularjs Bootstrap Nodejs Reactjs Redux Jenkins Json Pig Python Matplotlib Numpy Pandas Visio Additional Information TECHNICAL SKILLS Programming Languages JavaScript Python CC SQL Scala DevOps Tools Ansible Jenkins Docker CICD Puppet and chef Github Modern Web Stack Angularjs JavaScript Bootstrap JQuery HTML5 CSS3 SASS LESS npm Kendo UI Nodejs ReactJS Redux Grunt Technologies Netconf Yang Openstack BSCS MSCS Frameworks Django AngularJS Mongodb Big data Hadoop Pig Hive Web Technologies HTML5 CSS3 AWS Google Cloud JavaScript XML Pandas Servlet JSP JSON ExtJs JQuery AJAX Web Services AWS EC2 AMI EBS Cloud watch AWS Config Autoscaling REST SOAP WSDL Python Libraries BeautifulSoup NumPy SciPy matplotlib Pythontwitter Databases MYSQL Oracle SQL Lite NoSQL MongoDB Dynamo DB Cassandra Redis SoftwareIDE Sublime Text PyCharm NetBeans MS Visio Operating Systems Windows Linux Bug Tracking tools Bugzilla Jira Confluence",
    "unique_id": "40b23176-5b03-4fd5-ab21-94a37757ac48"
}