{
    "clean_data": "Sr Python developer Sr span lPythonspan span ldeveloperspan Sr Python developer Deutsche bank NJ New Jersey Wildlife and Game Refuge NJ Having 7 years of experience as a WebApplication Developer with deep understanding of technology trends with expertise in core of complex technologies Solid experience in Analysis Design and Development Testing Implementation production support and maintenance of various Web Applications using Python Django Extensive experience in Requirement Analysis Application Design Development and profound knowledge on SDLC using agile and Vmodel Experienced in working with various Python IDEs using PyCharm PY Scripter Spyder PY Studio and PY Dev Experienced in developing Webbased Applications using Python CSS HTML JavaScript Angular JS and jQuery and experienced in developing Web Services with Python programming language having Good knowledge of Web Services with protocols SOAP REST Experienced in using third party tools like Telerik DevExpress and kendo Controls and experienced with containerizing applications using Docker and Vagrant Skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy NumPy SciPy Matplotlib Pickle PY Side Pandas data frame network X urllib2 PY chart High charts to drive improvements throughout entire SDLC Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experienced in web applications development using Django Python Flask Python and Nodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Created Custom workflows custom screens and custom fields on Jira Created users on Active Directory synched the users on Jira and assigned groups and spaces and Created events email notification schemes and assigned project roles on Jira Worked on confluence Assigned user personal space and provided assistance in using Confluence Expertise in developing webbased applications using libraries and frameworks like Angular JS Bootstrap jQuery Knockoutjs Node Js Backbonejs React JS D3 JS and Require JS Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Having working Knowledge of Amazon AWS S3 and also Worked extensively on Big Data analytical models developed in Python Extensive use of ObjectOriented design methodology and Agile in software development Extensive experience in Building web applications using Kendo UI widgets jQuery Angular JS and Experienced objectoriented programming OOP concepts using Python C and PHP Experienced in NoSQL technologies like MongoDB CouchDB Cassandra Redis and relational databases like Oracle SQLite Post SQL and MySQL databases Experienced on Web development using HTML45 CSSCSS3 JavaScript jQuery Angular JS AJAX XML and JSON by following W3C standards Proficient in developing multithreaded web services using Cherry PY bottle PY framework Leveraging queuing architectures with RabbitMQ for scalability performance and building Knowledge in working with continuous deployment using Heroku and Jenkins Knowledge on Cloud innovations including Infrastructure as a Service Platform as a Service and Software as a Service supplier IaaS PaaS and SaaS Proficient in writing unit testing code using Unit TestPY Test and integrating the test code with the build process Worked on Python Testing frameworks like zope PY test nose and Robot framework and Well versed with Agile with SCRUM Waterfall Model and Testdriven development methodologies Experienced in installing configuring modifying testing and deploying applications with Apache and Experienced in working with different operating systems like LINUX UNIX and WINDOWS Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Work Experience Sr Python developer Deutsche bank NJ October 2017 to Present Used PythonDjango MVC framework to design and develop the application Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework Jenkins in the builds triggered by each push to GIT Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom FortiGate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Working as an application developer experienced with controllers views and models in Django and designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used Amazon EC2 command line interface along with Bash Python to automate repetitive work and Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application and worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Setup JIRA Timesheet Report plugin to help users for timetracking on their dashboards using a JQL or by configuring manually Worked with Python OO Design code for manufacturing quality monitoring logging and debugging code optimization and Managed large datasets using Panda data frames and MySQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers and Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed python Script for moving files from drop box to Amazon server and Consumed external APIs and wrote RESTful API using Django REST Framework Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python Developer SIEMENS Tarrytown NY May 2016 to October 2017 Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database and Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database and Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page and Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Stats models and Anaconda Used jQuery for all clientside data manipulation and Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked on JQL Jira Query Language filters Customizing dashboards and reports and searches using JQL JIRA Query Language Administer Jenkins Continuous integration server and manage integrations with Bitbucket repository Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy and Responsible for debugging and troubleshooting the web application Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement and Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Python Developer McKesson San Francisco CA July 2014 to May 2016 Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python inorder to build an interactive webbased solution Thorough knowledge in various frontend tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe and Involved in the error checking and testing of the ETL procedures and programs of Informatica session log Designedwrote the tech specs SourceTarget mappings for the ETL mappings along with the Unit Test scripts and used Python based GUI components for the frontend functionality such as selection criteria and created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PY Qt to display customer and policy information and add delete update customer records and used PY Query for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions and Created UI Screens for initiation and validation Created JIRA projects templates workflows screens fields and other administrative activities Prepared projects dashboards reports and questions for all JIRA related services and Managed build results in Jenkins and deployed using workflows Configuration Management and source code repository management using tools like GIT Subversion SVN Clear Case JIRA and CI tools like Jenkins Worked on UI using HTML5 CSS3 and Java Scripts and Developed multithreaded standalone app in Python Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks and Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in writing stored procedures using MySQL and Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Web developer Citi group New York NY July 2012 to July 2014 Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Analysis of requirements and implement different functions according to design Django and Flask frameworks Moreover I have good knowledge in REST APIs JSON PostgreSQL MySQL developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services and route providers Also used Angularjs filter to make the data searchable and sortable Supported the bank website in creating user profiles we can also do the simple banking transactions for the with drawls deposit and transactions is accompanied by password check by securing Deployed DevOps using Puppet Dashboard and Puppet DB for configuration management to existing infrastructure Involved in different layers such as Front and Back end as well as developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions and was involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PY Unit Designed Database Model for the entire application Creating tables Views and Stored procedures and implementation of clientside validations using jQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET and develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec and implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on advanced CSS concepts and building tablefree layout and worked on frontend frameworks like CSS Bootstrap for development of Web applications Wrote SQL Queries and implementing stored procedures functions packages tables views Cursors triggers and created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports and used Pandas for Statistical Analysis in the application and NumPy for the advance math functionalities Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Education Bachelors",
    "entities": [
        "Python Performed",
        "JQL JIRA Query Language",
        "Infrastructure",
        "C NET",
        "Informatica",
        "GUI",
        "jQuery Worked",
        "New York",
        "Customizing",
        "Building",
        "UNIX",
        "the User Interface",
        "Developed Spark",
        "Deutsche bank",
        "Working",
        "Interfacing",
        "Citi",
        "Integrity Developed",
        "Sr",
        "Created Terraform",
        "AWS ECS",
        "JQL",
        "Heroku",
        "Panda",
        "Spark Actions",
        "Controller",
        "XML",
        "SOAP",
        "DevOps",
        "Shell",
        "Implemented Terraform",
        "Setup JIRA Timesheet Report",
        "MySQL Database",
        "Amazon",
        "Consumed",
        "HTML Created Business Logic",
        "PHP Work",
        "UserAcceptance",
        "Python",
        "Python C",
        "Stored Procedures",
        "Developed",
        "Amazon AWS S3",
        "Jenkins",
        "CSS Bootstrap",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "Django",
        "CSSCSS3",
        "Python Developer SIEMENS Tarrytown",
        "Python Unit",
        "New Jersey Wildlife",
        "Bash Python",
        "Created JIRA",
        "Active Directory",
        "Django Websites Created",
        "DjangoREST",
        "AJAX Managed",
        "User Defined Function Developed",
        "AGILE",
        "jQuery Angular JS",
        "Flask",
        "ObjectOriented",
        "Requirement Analysis Application Design Development",
        "HTML CSS JavaScript XML",
        "PHP Experienced",
        "Software",
        "RDS",
        "Created Custom",
        "Views",
        "MVC",
        "PythonDjango",
        "EndtoEnd",
        "Integration Testing",
        "Agile",
        "GIT",
        "CSV",
        "API",
        "HTML CSS JavaScript",
        "Sr Python",
        "Created",
        "ASPNET MVC Validation",
        "Microsoft Visio Worked",
        "AWS",
        "Server",
        "Worked with View Sets",
        "Performed Unit",
        "Angular JS Bootstrap jQuery Knockoutjs Node Js Backbonejs React",
        "SQL",
        "Pandas for Statistical Analysis",
        "lPythonspan",
        "WebApplication Developer",
        "NJ",
        "SSH",
        "SQL Python",
        "Anaconda",
        "Big Data",
        "Integration Testing GUI",
        "Oracle SQLite Post",
        "google analytics",
        "Pandas",
        "SQLite",
        "ETL",
        "CRUD",
        "Kendo UI",
        "ERDiagrams",
        "GIT Subversion",
        "Assigned",
        "Analysis Design and Development Testing Implementation",
        "UI",
        "Front",
        "CSS",
        "jQuery",
        "REST",
        "the Complete Software Development Life Cycle",
        "HTMLCSSJS",
        "Amazon Cloud Created Data",
        "NoSQL",
        "Python Unit Test",
        "PythonTornado",
        "Configs",
        "Configuration Management"
    ],
    "experience": "Experience Sr Python developer Deutsche bank NJ October 2017 to Present Used PythonDjango MVC framework to design and develop the application Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework Jenkins in the builds triggered by each push to GIT Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom FortiGate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Working as an application developer experienced with controllers views and models in Django and designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used Amazon EC2 command line interface along with Bash Python to automate repetitive work and Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application and worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Setup JIRA Timesheet Report plugin to help users for timetracking on their dashboards using a JQL or by configuring manually Worked with Python OO Design code for manufacturing quality monitoring logging and debugging code optimization and Managed large datasets using Panda data frames and MySQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers and Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed python Script for moving files from drop box to Amazon server and Consumed external APIs and wrote RESTful API using Django REST Framework Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python Developer SIEMENS Tarrytown NY May 2016 to October 2017 Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database and Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database and Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page and Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Stats models and Anaconda Used jQuery for all clientside data manipulation and Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked on JQL Jira Query Language filters Customizing dashboards and reports and searches using JQL JIRA Query Language Administer Jenkins Continuous integration server and manage integrations with Bitbucket repository Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy and Responsible for debugging and troubleshooting the web application Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement and Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Python Developer McKesson San Francisco CA July 2014 to May 2016 Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python inorder to build an interactive webbased solution Thorough knowledge in various frontend tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe and Involved in the error checking and testing of the ETL procedures and programs of Informatica session log Designedwrote the tech specs SourceTarget mappings for the ETL mappings along with the Unit Test scripts and used Python based GUI components for the frontend functionality such as selection criteria and created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PY Qt to display customer and policy information and add delete update customer records and used PY Query for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions and Created UI Screens for initiation and validation Created JIRA projects templates workflows screens fields and other administrative activities Prepared projects dashboards reports and questions for all JIRA related services and Managed build results in Jenkins and deployed using workflows Configuration Management and source code repository management using tools like GIT Subversion SVN Clear Case JIRA and CI tools like Jenkins Worked on UI using HTML5 CSS3 and Java Scripts and Developed multithreaded standalone app in Python Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks and Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in writing stored procedures using MySQL and Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Web developer Citi group New York NY July 2012 to July 2014 Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Analysis of requirements and implement different functions according to design Django and Flask frameworks Moreover I have good knowledge in REST APIs JSON PostgreSQL MySQL developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services and route providers Also used Angularjs filter to make the data searchable and sortable Supported the bank website in creating user profiles we can also do the simple banking transactions for the with drawls deposit and transactions is accompanied by password check by securing Deployed DevOps using Puppet Dashboard and Puppet DB for configuration management to existing infrastructure Involved in different layers such as Front and Back end as well as developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions and was involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PY Unit Designed Database Model for the entire application Creating tables Views and Stored procedures and implementation of clientside validations using jQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET and develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec and implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on advanced CSS concepts and building tablefree layout and worked on frontend frameworks like CSS Bootstrap for development of Web applications Wrote SQL Queries and implementing stored procedures functions packages tables views Cursors triggers and created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports and used Pandas for Statistical Analysis in the application and NumPy for the advance math functionalities Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Education Bachelors",
    "extracted_keywords": [
        "Sr",
        "Python",
        "developer",
        "Sr",
        "lPythonspan",
        "span",
        "ldeveloperspan",
        "Sr",
        "Python",
        "developer",
        "Deutsche",
        "bank",
        "NJ",
        "New",
        "Jersey",
        "Wildlife",
        "Game",
        "Refuge",
        "NJ",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "understanding",
        "technology",
        "trends",
        "expertise",
        "core",
        "technologies",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Implementation",
        "production",
        "support",
        "maintenance",
        "Web",
        "Applications",
        "Python",
        "Django",
        "experience",
        "Requirement",
        "Analysis",
        "Application",
        "Design",
        "Development",
        "knowledge",
        "SDLC",
        "Vmodel",
        "Experienced",
        "Python",
        "IDEs",
        "PyCharm",
        "PY",
        "Scripter",
        "Spyder",
        "PY",
        "Studio",
        "PY",
        "Dev",
        "Webbased",
        "Applications",
        "Python",
        "CSS",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "knowledge",
        "Web",
        "Services",
        "protocols",
        "SOAP",
        "REST",
        "party",
        "tools",
        "Telerik",
        "DevExpress",
        "kendo",
        "Controls",
        "applications",
        "Docker",
        "experience",
        "Python",
        "tools",
        "developments",
        "Beautiful",
        "Soup",
        "Jasy",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Pickle",
        "PY",
        "Side",
        "Pandas",
        "data",
        "frame",
        "network",
        "X",
        "PY",
        "chart",
        "charts",
        "improvements",
        "SDLC",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "Python",
        "Nodejs",
        "Angularjs",
        "DOJO",
        "jQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "API",
        "services",
        "PythonTornado",
        "NodeJS",
        "AMQP",
        "architectures",
        "Custom",
        "custom",
        "screens",
        "custom",
        "fields",
        "Jira",
        "users",
        "Active",
        "Directory",
        "users",
        "Jira",
        "groups",
        "spaces",
        "events",
        "email",
        "notification",
        "schemes",
        "project",
        "roles",
        "Jira",
        "Worked",
        "confluence",
        "user",
        "space",
        "assistance",
        "Confluence",
        "Expertise",
        "applications",
        "libraries",
        "frameworks",
        "JS",
        "Bootstrap",
        "jQuery",
        "Knockoutjs",
        "Node",
        "Js",
        "Backbonejs",
        "React",
        "JS",
        "D3",
        "JS",
        "Require",
        "JS",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Knowledge",
        "Amazon",
        "AWS",
        "S3",
        "Data",
        "models",
        "Python",
        "use",
        "ObjectOriented",
        "design",
        "methodology",
        "software",
        "development",
        "experience",
        "Building",
        "web",
        "applications",
        "Kendo",
        "UI",
        "jQuery",
        "Angular",
        "JS",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "NoSQL",
        "technologies",
        "MongoDB",
        "CouchDB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "Post",
        "SQL",
        "MySQL",
        "Web",
        "development",
        "HTML45",
        "CSSCSS3",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "AJAX",
        "XML",
        "JSON",
        "W3C",
        "standards",
        "Proficient",
        "web",
        "services",
        "Cherry",
        "PY",
        "bottle",
        "PY",
        "framework",
        "architectures",
        "RabbitMQ",
        "scalability",
        "performance",
        "Knowledge",
        "deployment",
        "Heroku",
        "Jenkins",
        "Knowledge",
        "Cloud",
        "innovations",
        "Infrastructure",
        "Service",
        "Platform",
        "Service",
        "Software",
        "Service",
        "supplier",
        "IaaS",
        "PaaS",
        "SaaS",
        "Proficient",
        "unit",
        "testing",
        "code",
        "Unit",
        "TestPY",
        "Test",
        "test",
        "code",
        "build",
        "process",
        "Python",
        "Testing",
        "frameworks",
        "zope",
        "PY",
        "test",
        "nose",
        "Robot",
        "framework",
        "Agile",
        "SCRUM",
        "Waterfall",
        "Model",
        "Testdriven",
        "development",
        "methodologies",
        "testing",
        "applications",
        "Apache",
        "operating",
        "systems",
        "LINUX",
        "UNIX",
        "WINDOWS",
        "Developed",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "PHP",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "developer",
        "Deutsche",
        "bank",
        "NJ",
        "October",
        "Present",
        "PythonDjango",
        "MVC",
        "framework",
        "application",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "Jenkins",
        "builds",
        "push",
        "GIT",
        "Python",
        "scripts",
        "networking",
        "tasks",
        "Ex",
        "auto",
        "Config",
        "generation",
        "information",
        "network",
        "devices",
        "data",
        "custom",
        "FortiGate",
        "firewall",
        "Config",
        "generator",
        "functionality",
        "Configs",
        "firewalls",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Setup",
        "JIRA",
        "Timesheet",
        "Report",
        "users",
        "dashboards",
        "JQL",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Python",
        "Developer",
        "SIEMENS",
        "Tarrytown",
        "NY",
        "May",
        "October",
        "User",
        "Interface",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "JSON",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "Integrity",
        "merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "Defined",
        "Function",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Embedded",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "data",
        "analysis",
        "tools",
        "PythonSQL",
        "Pandas",
        "NumPy",
        "Matplotlib",
        "Stats",
        "models",
        "Anaconda",
        "jQuery",
        "data",
        "manipulation",
        "data",
        "queries",
        "lists",
        "references",
        "databases",
        "analysis",
        "Perl",
        "web",
        "automation",
        "web",
        "chat",
        "box",
        "customers",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "JQL",
        "Jira",
        "Query",
        "Language",
        "dashboards",
        "reports",
        "searches",
        "JQL",
        "JIRA",
        "Query",
        "Language",
        "Administer",
        "Jenkins",
        "Continuous",
        "integration",
        "server",
        "integrations",
        "Bitbucket",
        "repository",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Maintenance",
        "development",
        "applications",
        "PLSQL",
        "procedures",
        "ETL",
        "modules",
        "shell",
        "scripting",
        "practices",
        "Automation",
        "framework",
        "database",
        "testing",
        "AutoEasy",
        "web",
        "application",
        "Spark",
        "Actions",
        "Transformations",
        "RDDs",
        "HDFS",
        "Spark",
        "scripts",
        "Scala",
        "IDEs",
        "business",
        "requirement",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "libraries",
        "data",
        "warehousing",
        "application",
        "jobs",
        "SLAs",
        "application",
        "operations",
        "Business",
        "requirements",
        "Complete",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Python",
        "Developer",
        "McKesson",
        "San",
        "Francisco",
        "CA",
        "July",
        "May",
        "Responsible",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "web",
        "applications",
        "Django",
        "Framework",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modelling",
        "data",
        "import",
        "export",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "inorder",
        "solution",
        "knowledge",
        "frontend",
        "tools",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "Angularjs",
        "AJAX",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Containerized",
        "ETL",
        "REST",
        "services",
        "AWS",
        "ECS",
        "CICD",
        "Jenkins",
        "pipe",
        "error",
        "checking",
        "testing",
        "ETL",
        "procedures",
        "programs",
        "Informatica",
        "session",
        "log",
        "Designedwrote",
        "tech",
        "specs",
        "SourceTarget",
        "mappings",
        "ETL",
        "mappings",
        "Unit",
        "Test",
        "scripts",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Created",
        "Data",
        "tables",
        "PY",
        "Qt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PY",
        "Query",
        "DOM",
        "elements",
        "HTML",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "JIRA",
        "projects",
        "workflows",
        "screens",
        "fields",
        "activities",
        "Prepared",
        "projects",
        "dashboards",
        "reports",
        "questions",
        "JIRA",
        "services",
        "results",
        "Jenkins",
        "workflows",
        "Configuration",
        "Management",
        "source",
        "code",
        "repository",
        "management",
        "tools",
        "GIT",
        "Subversion",
        "SVN",
        "Clear",
        "Case",
        "JIRA",
        "CI",
        "tools",
        "Jenkins",
        "Worked",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "Developed",
        "app",
        "Python",
        "Performed",
        "data",
        "extraction",
        "manipulation",
        "datasets",
        "SQL",
        "Python",
        "tools",
        "Python",
        "libraries",
        "SQL",
        "queriessubqueries",
        "datasets",
        "statistics",
        "tables",
        "figures",
        "charts",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Web",
        "developer",
        "Citi",
        "group",
        "New",
        "York",
        "NY",
        "July",
        "July",
        "web",
        "pages",
        "HTML5CSS3",
        "Bootstrap",
        "XMLJSON",
        "REST",
        "web",
        "Analysis",
        "requirements",
        "functions",
        "design",
        "Django",
        "Flask",
        "frameworks",
        "knowledge",
        "REST",
        "APIs",
        "JSON",
        "PostgreSQL",
        "MySQL",
        "frontend",
        "code",
        "call",
        "AngularJS",
        "jQuery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "RESTful",
        "Server",
        "result",
        "web",
        "pages",
        "controller",
        "directives",
        "services",
        "route",
        "providers",
        "Angularjs",
        "filter",
        "data",
        "bank",
        "website",
        "user",
        "profiles",
        "banking",
        "transactions",
        "deposit",
        "transactions",
        "password",
        "check",
        "Deployed",
        "DevOps",
        "Puppet",
        "Dashboard",
        "Puppet",
        "DB",
        "configuration",
        "management",
        "infrastructure",
        "layers",
        "Front",
        "end",
        "Web",
        "Applications",
        "W3C",
        "XHTML",
        "HTML5",
        "PHP",
        "CSS3",
        "standards",
        "Python",
        "Django",
        "Payment",
        "Processing",
        "monitoring",
        "payments",
        "solutions",
        "software",
        "life",
        "cycle",
        "SDLC",
        "web",
        "application",
        "application",
        "Python",
        "Django",
        "EndtoEnd",
        "Web",
        "application",
        "development",
        "MVC",
        "architecture",
        "frontend",
        "CSS3",
        "HTML5",
        "Test",
        "Approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "Test",
        "framework",
        "PY",
        "Unit",
        "Designed",
        "Database",
        "Model",
        "application",
        "tables",
        "Views",
        "procedures",
        "implementation",
        "validations",
        "jQuery",
        "Angular",
        "JS",
        "ASPNET",
        "MVC",
        "Validation",
        "Controller",
        "level",
        "classes",
        "classes",
        "business",
        "logic",
        "C",
        "NET",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Drive",
        "Development",
        "BDD",
        "programming",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Spec",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "CSS",
        "concepts",
        "tablefree",
        "layout",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Wrote",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "triggers",
        "Database",
        "Schema",
        "MySQL",
        "Database",
        "ERDiagrams",
        "Microsoft",
        "Visio",
        "APIs",
        "thirdparty",
        "data",
        "analysis",
        "representation",
        "data",
        "Pandas",
        "data",
        "Sort",
        "data",
        "histograms",
        "Python",
        "Scripts",
        "Excel",
        "CSV",
        "files",
        "Statistical",
        "Reports",
        "Pandas",
        "Statistical",
        "Analysis",
        "application",
        "NumPy",
        "math",
        "functionalities",
        "JavaScript",
        "Dynamic",
        "Page",
        "Functionality",
        "popup",
        "screens",
        "user",
        "entry",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:29:09.548011",
    "resume_data": "Sr Python developer Sr span lPythonspan span ldeveloperspan Sr Python developer Deutsche bank NJ New Jersey Wildlife and Game Refuge NJ Having 7 years of experience as a WebApplication Developer with deep understanding of technology trends with expertise in core of complex technologies Solid experience in Analysis Design and Development Testing Implementation production support and maintenance of various Web Applications using Python Django Extensive experience in Requirement Analysis Application Design Development and profound knowledge on SDLC using agile and Vmodel Experienced in working with various Python IDEs using PyCharm PY Scripter Spyder PY Studio and PY Dev Experienced in developing Webbased Applications using Python CSS HTML JavaScript Angular JS and jQuery and experienced in developing Web Services with Python programming language having Good knowledge of Web Services with protocols SOAP REST Experienced in using third party tools like Telerik DevExpress and kendo Controls and experienced with containerizing applications using Docker and Vagrant Skilled experience in Python with using new tools and technical developments Libraries Used libraries Beautiful Soup Jasy NumPy SciPy Matplotlib Pickle PY Side Pandas data frame network X urllib2 PY chart High charts to drive improvements throughout entire SDLC Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experienced in web applications development using Django Python Flask Python and Nodejs Angularjs DOJO jQuery while using HTMLCSSJS for serverside rendered applications Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Created Custom workflows custom screens and custom fields on Jira Created users on Active Directory synched the users on Jira and assigned groups and spaces and Created events email notification schemes and assigned project roles on Jira Worked on confluence Assigned user personal space and provided assistance in using Confluence Expertise in developing webbased applications using libraries and frameworks like Angular JS Bootstrap jQuery Knockoutjs Node Js Backbonejs React JS D3 JS and Require JS Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Having working Knowledge of Amazon AWS S3 and also Worked extensively on Big Data analytical models developed in Python Extensive use of ObjectOriented design methodology and Agile in software development Extensive experience in Building web applications using Kendo UI widgets jQuery Angular JS and Experienced objectoriented programming OOP concepts using Python C and PHP Experienced in NoSQL technologies like MongoDB CouchDB Cassandra Redis and relational databases like Oracle SQLite Post SQL and MySQL databases Experienced on Web development using HTML45 CSSCSS3 JavaScript jQuery Angular JS AJAX XML and JSON by following W3C standards Proficient in developing multithreaded web services using Cherry PY bottle PY framework Leveraging queuing architectures with RabbitMQ for scalability performance and building Knowledge in working with continuous deployment using Heroku and Jenkins Knowledge on Cloud innovations including Infrastructure as a Service Platform as a Service and Software as a Service supplier IaaS PaaS and SaaS Proficient in writing unit testing code using Unit TestPY Test and integrating the test code with the build process Worked on Python Testing frameworks like zope PY test nose and Robot framework and Well versed with Agile with SCRUM Waterfall Model and Testdriven development methodologies Experienced in installing configuring modifying testing and deploying applications with Apache and Experienced in working with different operating systems like LINUX UNIX and WINDOWS Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Work Experience Sr Python developer Deutsche bank NJ October 2017 to Present Used PythonDjango MVC framework to design and develop the application Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework Jenkins in the builds triggered by each push to GIT Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom FortiGate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Working as an application developer experienced with controllers views and models in Django and designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used Amazon EC2 command line interface along with Bash Python to automate repetitive work and Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application and worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Setup JIRA Timesheet Report plugin to help users for timetracking on their dashboards using a JQL or by configuring manually Worked with Python OO Design code for manufacturing quality monitoring logging and debugging code optimization and Managed large datasets using Panda data frames and MySQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers and Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed python Script for moving files from drop box to Amazon server and Consumed external APIs and wrote RESTful API using Django REST Framework Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Python Developer SIEMENS Tarrytown NY May 2016 to October 2017 Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database and Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database and Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page and Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Stats models and Anaconda Used jQuery for all clientside data manipulation and Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked on JQL Jira Query Language filters Customizing dashboards and reports and searches using JQL JIRA Query Language Administer Jenkins Continuous integration server and manage integrations with Bitbucket repository Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy and Responsible for debugging and troubleshooting the web application Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement and Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Python Developer McKesson San Francisco CA July 2014 to May 2016 Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python inorder to build an interactive webbased solution Thorough knowledge in various frontend tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe and Involved in the error checking and testing of the ETL procedures and programs of Informatica session log Designedwrote the tech specs SourceTarget mappings for the ETL mappings along with the Unit Test scripts and used Python based GUI components for the frontend functionality such as selection criteria and created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PY Qt to display customer and policy information and add delete update customer records and used PY Query for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions and Created UI Screens for initiation and validation Created JIRA projects templates workflows screens fields and other administrative activities Prepared projects dashboards reports and questions for all JIRA related services and Managed build results in Jenkins and deployed using workflows Configuration Management and source code repository management using tools like GIT Subversion SVN Clear Case JIRA and CI tools like Jenkins Worked on UI using HTML5 CSS3 and Java Scripts and Developed multithreaded standalone app in Python Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks and Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Involved in writing stored procedures using MySQL and Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Web developer Citi group New York NY July 2012 to July 2014 Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Analysis of requirements and implement different functions according to design Django and Flask frameworks Moreover I have good knowledge in REST APIs JSON PostgreSQL MySQL developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services and route providers Also used Angularjs filter to make the data searchable and sortable Supported the bank website in creating user profiles we can also do the simple banking transactions for the with drawls deposit and transactions is accompanied by password check by securing Deployed DevOps using Puppet Dashboard and Puppet DB for configuration management to existing infrastructure Involved in different layers such as Front and Back end as well as developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions and was involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5 Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PY Unit Designed Database Model for the entire application Creating tables Views and Stored procedures and implementation of clientside validations using jQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET and develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec and implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on advanced CSS concepts and building tablefree layout and worked on frontend frameworks like CSS Bootstrap for development of Web applications Wrote SQL Queries and implementing stored procedures functions packages tables views Cursors triggers and created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports and used Pandas for Statistical Analysis in the application and NumPy for the advance math functionalities Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Education Bachelors",
    "unique_id": "5a38faff-3e32-4b05-9037-359e496e34b0"
}