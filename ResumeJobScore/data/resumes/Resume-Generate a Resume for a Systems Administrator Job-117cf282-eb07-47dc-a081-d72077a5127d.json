{
    "clean_data": "Software Developer span lSoftwarespan span lDeveloperspan Software Developer Atlantic Home Loans Inc Dallas TX Full Stack developer with over 5 years experience in analysis design coding implementation using Microsoft NET technologies ASPNET C Developed single page applications SPA using Angular Extensive experience in objectoriented languages including Microsoft C and proven ability in Angular projects by using Typescript Provided crosshost communication using Crossorigin resource sharing CORS a method that allows an application to communicate with Web API Advanced knowledge in frontend languages such as HTML5 CSS JavaScript and Bootstrap Angular material to maintain logic design and styling make it more responsive and interactive Expertise in frontend development using jQuery and Ajax to allow updating the pages without reloading also include validation using Unobtrusive Proficient in ASPNET technologies such as Web Forms MVC 5 Web Services WCF and Web API Many projects draw from different models of the framework Handson experience in creating Angular modules components directives and filters to deploy the entire business logic Knowledgeable in writing data base design concepts in MS SQL Server including database design and normalization which provides the basis for data use in projects Extensive experience in accessing and modifying storing data by using LINQ Entity Framework 6 in Database first and Code first approach Additionally worked with building Ntier and Onion architecture for projects that require RDS data Used Fiddler Postman and SOAPUI to test and debug Web API to optimize the running process Developed and performed test cases using Jasmine and Karma in the unit test Maintained the code using version control system such as Git Successfully completed projects involved with Agile and Scrum SDLC methodologies to communicate project requirements and ensure timely results Utilized Azure DevOp JIRA for team projects management and communication with team members Work Experience Software Developer Atlantic Home Loans Inc Parsippany NJ August 2018 to Present Atlantic Home Loans is mortgage bankers business is providing for home financing clients Company strives to be the premier mortgage lender in a market and focusing on mortgage banking Project about loan tracking reporting system to customize work with the clients adding features as searching filtering and reporting services The project is a Single Page Application SPA and using Angular 6 7 Roles and Responsibilities Working in Agile Methodologies for rapid development and regular adaption to the varying requirements and continuous delivery of the working software Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Implemented routing using RouterModule to enable easy navigation throughout the project and to assist in the authentication Used HTML CSS3 Bootstrap Typescript at the frontend to provide design styling and logic for the project Implemented Net Security features of Authentication and Authorization Enable CORS to allow communication between the frontend Angular project and the backend Web API functionality Employed RESTful WEB API services at the backend that allows the project to retrieve and manipulate data from the backend Created WEB API Services and Client Proxy for communication between Application Server and Web Server Demonstrated create read update and delete CRUD functionalities using the Web API POST GET PUT and DELETE methods Utilized Entity Framework database first approach to set up a connection with SQL Server to retrieve and pass data Used Postman SOAPUI to test the Web API to ensure proper functionality of the backend Added GitHub as Version Control Tool Experience with unit testing frameworks such as Jasmine and Karma Environment Angular 67 Web API MVC5 Entity Framework 6 Typescript HTML5 CSS3 Bootstrap Visual Studio Code Visual Studio 2017 Postman SOAPUI MS SQL Server 2017 Git Postman Jasmine and Karma Agile methodology Software Developer QualCare Inc Piscataway NJ February 2018 to August 2018 QualCare one of the regions leading providers of health care coverage provides the public and private marketplace with a higherquality lowercost alternative to commercial insurance companies Project about task management system and the company was interested to extend functionalities by adding new features by using Angular 6 and 7 Roles and Responsibilities Involve in all the phases of Software Development Life Cycle SDLC including Analysis Design Programming Testing and Deployment Worked with Bootstrap framework and Angular2 to Design Single Page Application Used HTML5 CSS3 and Typescript and Angular material at the frontend to provide design styling and logic for the project Created Angular Components Modules Directives and Services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing WEB API Used Observable from the RXJS library in the service layer to enable subscription in the component Applied Route Guard for securing routes by using canActivate canDeactivate interfaces Implemented CRUD operations using http service to call Web API methods Enable CORS to allow communication between the frontend Angular project and the backend WEB API functionality Employed RESTful Web API services at the backend that allows the project to retrieve and manipulate data from the backend Utilized Entity Framework for mapping models to database and insert retrieve and update database Modified MS SQL Server to create the tables and sample data for testing purposes Used Postman Fiddler to test the Web API to ensure proper functionality of the backend Added GitHub as Version Control Tool Environment Angular 6 MVC5 WEB API Entity Framework 6 C HTML5 CSS3 Bootstrap LINQ Visual Studio Code Visual Studio 2015 MS SQL Server 2017 Postman Fiddler GIT SDLC Software Developer Bolt on technology Inc Southampton PA November 2016 to February 2018 Bolt on technologys auto repair software solutions give repair shop the power to streamline operations and create happy repeat customers The project was developed to manage the statistic of employees creating reports upgrading statistic focusing on analytical and financial structure This project is done using the capabilities of ASPNET MVC Roles and Responsibilities Involved in the FullStack development of Web applications using the latest of technologies for the different tiers of an application Used HTML5 CSS3 Bootstrap and C at the front end to provide design styling and logic for the project Employed Layout page and multiple partial views combine the view as a single view when launched Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name id and age without refreshing the page Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and also encourages the reusability of components between packages and also sometimes between applications Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Repository Pattern is used to build this project by combining serviceoriented application Most notably the service employs an autocomplete feature and units of works to provide the functionality to the rest of the project Developing infrastructure framework using Inversion of controls Dependency Injection Unity Experience of Object relation mapping using ADONET Entity Framework LINQ to SQL LINQ to objects and Lambda Expressions used in LINQ Entity Framework Database first approach was used to allow the program to connect with the database Demonstrated create read update and delete CRUD functionalities for hire requests Used MS SQL Server to create the tables and sample data via SQL command The sample data were to test the application All issues were tracked using JIRA and GitHub was used for source control Implement agile scrum methodology in application development Environment MVC 5 Entity Framework 6 C HTML5 CSS3 Bootstrap JavaScript jQuery Ajax SQL LINQ Visual Studio 2015 and Microsoft SQL Server Management Studio 2012 JIRA GIT Agile methodology Software Developer The Neat Company Inc Philadelphia PA November 2015 to November 2016 The Neat Company focuses exclusively on developing powerful yet cost effective tools for small business that help with expense management automated bookkeeping and document organization Project about implementing a management system to customize help service adding features as reporting services searching services by using MVC WCF Roles and Responsibilities Developed an application that combines the concepts of ASPNET MVC and Ntier Architecture Used HTML5 CSS3 and C at the front end to provide design styling and logic for the project Employed JavaScript jQuery and AJAX to enable searching and filtering of jobs without need to reload the page The functionality is connected to the frontend through WCF Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and reusability of components Added routing and Authentication for easy navigability and security through a username and password coupled with Form Validation Effectively used Session and Cookies for users to validate and to make a timeout for the connectivity with the database Used Filter at both global and controller level for exception handling Demonstrated create read update and delete CRUD functionalities for hire requests Entity Framework Database first was used to allow the program to connect with the database Enable CORS to allow communication between the MVC project and the WCF functionality Get and post actions are used to retrieve and update data from WCF in the form of XML and JSON SQL statements were used to obtain the appropriate data from the database For example it is used in filtering the database during a search The model establishes the job class the view displays the system and the controller provides the necessary functionalities Used NUnit for units testing User Postman to test the Web AOU to ensure proper functionality of the backend All issues were tracked using JIRA and GitHub was used for source control Implement agile scrum methodology in application development Environment MVC 5 Entity Framework 6 C HTML5 CSS3 JavaScript jQuery Ajax SQL LINQ Visual Studio 2015 and Microsoft SQL Server Management Studio 2012 JIRA GIT Agile methodology Software Developer SMA Laboratory Inc FeastervilleTrevose PA June 2014 to November 2015 Medical laboratory guided from basic tests and preventive screenings to the most innovative tests that involve latest technology as Drug test Blood test etc Recreating project from 3rd party application with updating from ASPNET Web forms to new MVC technologies Roles and Responsibilities Rewrite an application the utilizes the concepts from ASPNET Web Forms to MVC Used HTML CSS3 and C at the frontend to rewrite design styling logic for the project introduced to objectoriented programming OOP through C Modified patient insurance information by adding Pop up window and added a validation using jQuery to an intranet MVC application for new patient orders Modified multiple stored procedures to obtain appropriate data from tables about patient information and patient orders using SQL server Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name id and age without refreshing the page Added create read update and delete CRUD functionality for new patients to an intranet MVC application Modified Datatable form adding more columns by using Pop up window for search patient diagnoses Employed NTier architecture that included Presentation Business and Data Access Layers using CNet ASPNET MVC and SQL An ADONET Connection string was used to allow the program to connect with the database Implemented Stored Procedures Views Indexes and User Defined Functions to retrieve the data from the central database SQL Server 2012 Exposure to all stages of SDLC Software Development Life Cycle Software Test Life Cycle STLC and Waterfall methodology Environment ASPNET Web Forms MVC HTML5 CSS3 Bootstrap JavaScript JQuery AJAX ADONET SQL Server 2012 Visual studio 2013 Waterfall methodology Education Associate degree in Tashkent American Advanced Institute of Technology Philadelphia PA Skills Ado Database Adonet Microsoft sql server Sql server Sql net Visual studio Api C Git Html Javascript Bootstrap Typescript Json Wcf Xml Mvc Sdlc",
    "entities": [
        "JSON SQL",
        "The Neat Company",
        "AJAX",
        "Added GitHub as Version Control Tool",
        "Angular Extensive",
        "Git Postman Jasmine",
        "SDLC Software Development Life Cycle Software Test Life Cycle STLC",
        "ASPNET C Developed",
        "Jasmine and Karma Environment Angular",
        "WCF Application",
        "Presentation Business and Data Access Layers",
        "Implemented Net Security",
        "Form Validation",
        "Fiddler Postman",
        "Analysis Design Programming Testing and Deployment Worked with Bootstrap",
        "Microsoft SQL Server Management Studio",
        "XML",
        "Unobtrusive Proficient",
        "The Neat Company Inc Philadelphia",
        "JIRA",
        "Maintained",
        "Software Development Life Cycle SDLC",
        "Postman Fiddler",
        "FullStack",
        "SQL Server",
        "Added GitHub as Version Control Tool Environment Angular 6 MVC5",
        "Dallas",
        "NUnit",
        "Ntier Architecture Used HTML5 CSS3",
        "Responsibilities Involved",
        "Waterfall",
        "MVC WCF Roles",
        "Postman SOAPUI MS",
        "HTML5",
        "Lambda Expressions",
        "QualCare Inc",
        "Used Postman Fiddler",
        "RDS",
        "MS",
        "Git Successfully",
        "MVC",
        "Agile",
        "Created Angular Components",
        "MS SQL Server",
        "Database",
        "Loans Inc Parsippany NJ",
        "Onion Architecture Repository Pattern",
        "Software Developer SMA Laboratory Inc FeastervilleTrevose PA June",
        "Api C Git Html",
        "User Postman",
        "Sql",
        "Applied Route Guard",
        "Crossorigin",
        "SQL",
        "GitHub",
        "DELETE",
        "LINQ Entity Framework 6",
        "Created Angular",
        "Microsoft C",
        "Tashkent American Advanced Institute of Technology Philadelphia",
        "the Web API POST GET PUT",
        "RouterModule",
        "Typescript",
        "Ntier and Onion",
        "Ajax Users",
        "Utilized Entity Framework",
        "Handson",
        "C Modified",
        "Created WEB API Services",
        "ASPNET MVC Roles",
        "Authentication and Authorization Enable",
        "CRUD",
        "Application Server",
        "Design Single Page Application",
        "Microsoft",
        "Present Atlantic Home",
        "jQuery",
        "a Single Page Application SPA",
        "SPA",
        "ASPNET",
        "ASPNET MVC",
        "RXJS",
        "Software Developer Bolt",
        "Implemented Stored Procedures Views Indexes"
    ],
    "experience": "Experience Software Developer Atlantic Home Loans Inc Parsippany NJ August 2018 to Present Atlantic Home Loans is mortgage bankers business is providing for home financing clients Company strives to be the premier mortgage lender in a market and focusing on mortgage banking Project about loan tracking reporting system to customize work with the clients adding features as searching filtering and reporting services The project is a Single Page Application SPA and using Angular 6 7 Roles and Responsibilities Working in Agile Methodologies for rapid development and regular adaption to the varying requirements and continuous delivery of the working software Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Implemented routing using RouterModule to enable easy navigation throughout the project and to assist in the authentication Used HTML CSS3 Bootstrap Typescript at the frontend to provide design styling and logic for the project Implemented Net Security features of Authentication and Authorization Enable CORS to allow communication between the frontend Angular project and the backend Web API functionality Employed RESTful WEB API services at the backend that allows the project to retrieve and manipulate data from the backend Created WEB API Services and Client Proxy for communication between Application Server and Web Server Demonstrated create read update and delete CRUD functionalities using the Web API POST GET PUT and DELETE methods Utilized Entity Framework database first approach to set up a connection with SQL Server to retrieve and pass data Used Postman SOAPUI to test the Web API to ensure proper functionality of the backend Added GitHub as Version Control Tool Experience with unit testing frameworks such as Jasmine and Karma Environment Angular 67 Web API MVC5 Entity Framework 6 Typescript HTML5 CSS3 Bootstrap Visual Studio Code Visual Studio 2017 Postman SOAPUI MS SQL Server 2017 Git Postman Jasmine and Karma Agile methodology Software Developer QualCare Inc Piscataway NJ February 2018 to August 2018 QualCare one of the regions leading providers of health care coverage provides the public and private marketplace with a higherquality lowercost alternative to commercial insurance companies Project about task management system and the company was interested to extend functionalities by adding new features by using Angular 6 and 7 Roles and Responsibilities Involve in all the phases of Software Development Life Cycle SDLC including Analysis Design Programming Testing and Deployment Worked with Bootstrap framework and Angular2 to Design Single Page Application Used HTML5 CSS3 and Typescript and Angular material at the frontend to provide design styling and logic for the project Created Angular Components Modules Directives and Services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing WEB API Used Observable from the RXJS library in the service layer to enable subscription in the component Applied Route Guard for securing routes by using canActivate canDeactivate interfaces Implemented CRUD operations using http service to call Web API methods Enable CORS to allow communication between the frontend Angular project and the backend WEB API functionality Employed RESTful Web API services at the backend that allows the project to retrieve and manipulate data from the backend Utilized Entity Framework for mapping models to database and insert retrieve and update database Modified MS SQL Server to create the tables and sample data for testing purposes Used Postman Fiddler to test the Web API to ensure proper functionality of the backend Added GitHub as Version Control Tool Environment Angular 6 MVC5 WEB API Entity Framework 6 C HTML5 CSS3 Bootstrap LINQ Visual Studio Code Visual Studio 2015 MS SQL Server 2017 Postman Fiddler GIT SDLC Software Developer Bolt on technology Inc Southampton PA November 2016 to February 2018 Bolt on technologys auto repair software solutions give repair shop the power to streamline operations and create happy repeat customers The project was developed to manage the statistic of employees creating reports upgrading statistic focusing on analytical and financial structure This project is done using the capabilities of ASPNET MVC Roles and Responsibilities Involved in the FullStack development of Web applications using the latest of technologies for the different tiers of an application Used HTML5 CSS3 Bootstrap and C at the front end to provide design styling and logic for the project Employed Layout page and multiple partial views combine the view as a single view when launched Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name i d and age without refreshing the page Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and also encourages the reusability of components between packages and also sometimes between applications Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Repository Pattern is used to build this project by combining serviceoriented application Most notably the service employs an autocomplete feature and units of works to provide the functionality to the rest of the project Developing infrastructure framework using Inversion of controls Dependency Injection Unity Experience of Object relation mapping using ADONET Entity Framework LINQ to SQL LINQ to objects and Lambda Expressions used in LINQ Entity Framework Database first approach was used to allow the program to connect with the database Demonstrated create read update and delete CRUD functionalities for hire requests Used MS SQL Server to create the tables and sample data via SQL command The sample data were to test the application All issues were tracked using JIRA and GitHub was used for source control Implement agile scrum methodology in application development Environment MVC 5 Entity Framework 6 C HTML5 CSS3 Bootstrap JavaScript jQuery Ajax SQL LINQ Visual Studio 2015 and Microsoft SQL Server Management Studio 2012 JIRA GIT Agile methodology Software Developer The Neat Company Inc Philadelphia PA November 2015 to November 2016 The Neat Company focuses exclusively on developing powerful yet cost effective tools for small business that help with expense management automated bookkeeping and document organization Project about implementing a management system to customize help service adding features as reporting services searching services by using MVC WCF Roles and Responsibilities Developed an application that combines the concepts of ASPNET MVC and Ntier Architecture Used HTML5 CSS3 and C at the front end to provide design styling and logic for the project Employed JavaScript jQuery and AJAX to enable searching and filtering of jobs without need to reload the page The functionality is connected to the frontend through WCF Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and reusability of components Added routing and Authentication for easy navigability and security through a username and password coupled with Form Validation Effectively used Session and Cookies for users to validate and to make a timeout for the connectivity with the database Used Filter at both global and controller level for exception handling Demonstrated create read update and delete CRUD functionalities for hire requests Entity Framework Database first was used to allow the program to connect with the database Enable CORS to allow communication between the MVC project and the WCF functionality Get and post actions are used to retrieve and update data from WCF in the form of XML and JSON SQL statements were used to obtain the appropriate data from the database For example it is used in filtering the database during a search The model establishes the job class the view displays the system and the controller provides the necessary functionalities Used NUnit for units testing User Postman to test the Web AOU to ensure proper functionality of the backend All issues were tracked using JIRA and GitHub was used for source control Implement agile scrum methodology in application development Environment MVC 5 Entity Framework 6 C HTML5 CSS3 JavaScript jQuery Ajax SQL LINQ Visual Studio 2015 and Microsoft SQL Server Management Studio 2012 JIRA GIT Agile methodology Software Developer SMA Laboratory Inc FeastervilleTrevose PA June 2014 to November 2015 Medical laboratory guided from basic tests and preventive screenings to the most innovative tests that involve latest technology as Drug test Blood test etc Recreating project from 3rd party application with updating from ASPNET Web forms to new MVC technologies Roles and Responsibilities Rewrite an application the utilizes the concepts from ASPNET Web Forms to MVC Used HTML CSS3 and C at the frontend to rewrite design styling logic for the project introduced to objectoriented programming OOP through C Modified patient insurance information by adding Pop up window and added a validation using jQuery to an intranet MVC application for new patient orders Modified multiple stored procedures to obtain appropriate data from tables about patient information and patient orders using SQL server Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name i d and age without refreshing the page Added create read update and delete CRUD functionality for new patients to an intranet MVC application Modified Datatable form adding more columns by using Pop up window for search patient diagnoses Employed NTier architecture that included Presentation Business and Data Access Layers using CNet ASPNET MVC and SQL An ADONET Connection string was used to allow the program to connect with the database Implemented Stored Procedures Views Indexes and User Defined Functions to retrieve the data from the central database SQL Server 2012 Exposure to all stages of SDLC Software Development Life Cycle Software Test Life Cycle STLC and Waterfall methodology Environment ASPNET Web Forms MVC HTML5 CSS3 Bootstrap JavaScript JQuery AJAX ADONET SQL Server 2012 Visual studio 2013 Waterfall methodology Education Associate degree in Tashkent American Advanced Institute of Technology Philadelphia PA Skills Ado Database Adonet Microsoft sql server Sql server Sql net Visual studio Api C Git Html Javascript Bootstrap Typescript Json Wcf Xml Mvc Sdlc",
    "extracted_keywords": [
        "Software",
        "Developer",
        "lSoftwarespan",
        "span",
        "lDeveloperspan",
        "Software",
        "Developer",
        "Atlantic",
        "Home",
        "Loans",
        "Inc",
        "Dallas",
        "TX",
        "Full",
        "Stack",
        "developer",
        "years",
        "experience",
        "analysis",
        "design",
        "implementation",
        "Microsoft",
        "NET",
        "technologies",
        "ASPNET",
        "C",
        "page",
        "applications",
        "SPA",
        "Angular",
        "experience",
        "languages",
        "Microsoft",
        "C",
        "ability",
        "projects",
        "Typescript",
        "crosshost",
        "communication",
        "Crossorigin",
        "resource",
        "sharing",
        "CORS",
        "method",
        "application",
        "Web",
        "API",
        "knowledge",
        "frontend",
        "languages",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Angular",
        "material",
        "design",
        "styling",
        "Expertise",
        "frontend",
        "development",
        "jQuery",
        "Ajax",
        "pages",
        "validation",
        "Unobtrusive",
        "Proficient",
        "ASPNET",
        "technologies",
        "Web",
        "Forms",
        "MVC",
        "Web",
        "Services",
        "WCF",
        "Web",
        "API",
        "projects",
        "models",
        "framework",
        "Handson",
        "experience",
        "Angular",
        "modules",
        "components",
        "directives",
        "filters",
        "business",
        "logic",
        "Knowledgeable",
        "data",
        "base",
        "design",
        "concepts",
        "MS",
        "SQL",
        "Server",
        "database",
        "design",
        "normalization",
        "basis",
        "data",
        "use",
        "projects",
        "experience",
        "data",
        "Entity",
        "Framework",
        "Database",
        "Code",
        "approach",
        "Ntier",
        "Onion",
        "architecture",
        "projects",
        "RDS",
        "data",
        "Fiddler",
        "Postman",
        "SOAPUI",
        "Web",
        "API",
        "running",
        "process",
        "test",
        "cases",
        "Jasmine",
        "Karma",
        "unit",
        "test",
        "code",
        "version",
        "control",
        "system",
        "Git",
        "Successfully",
        "projects",
        "Agile",
        "Scrum",
        "SDLC",
        "methodologies",
        "project",
        "requirements",
        "results",
        "Azure",
        "DevOp",
        "JIRA",
        "team",
        "projects",
        "management",
        "communication",
        "team",
        "members",
        "Work",
        "Experience",
        "Software",
        "Developer",
        "Atlantic",
        "Home",
        "Loans",
        "Inc",
        "Parsippany",
        "NJ",
        "August",
        "Present",
        "Atlantic",
        "Home",
        "Loans",
        "mortgage",
        "bankers",
        "business",
        "home",
        "financing",
        "clients",
        "Company",
        "premier",
        "mortgage",
        "lender",
        "market",
        "mortgage",
        "banking",
        "Project",
        "loan",
        "tracking",
        "reporting",
        "system",
        "work",
        "clients",
        "features",
        "reporting",
        "services",
        "project",
        "Single",
        "Page",
        "Application",
        "SPA",
        "Angular",
        "Roles",
        "Responsibilities",
        "Agile",
        "Methodologies",
        "development",
        "adaption",
        "requirements",
        "delivery",
        "working",
        "software",
        "Angular",
        "components",
        "modules",
        "services",
        "features",
        "project",
        "functionalities",
        "Web",
        "API",
        "RouterModule",
        "navigation",
        "project",
        "authentication",
        "HTML",
        "CSS3",
        "Bootstrap",
        "Typescript",
        "frontend",
        "design",
        "styling",
        "logic",
        "project",
        "Net",
        "Security",
        "features",
        "Authentication",
        "Authorization",
        "Enable",
        "CORS",
        "communication",
        "project",
        "Web",
        "API",
        "functionality",
        "WEB",
        "API",
        "services",
        "backend",
        "project",
        "manipulate",
        "data",
        "Created",
        "WEB",
        "API",
        "Services",
        "Client",
        "Proxy",
        "communication",
        "Application",
        "Server",
        "Web",
        "Server",
        "Demonstrated",
        "read",
        "update",
        "CRUD",
        "functionalities",
        "Web",
        "API",
        "POST",
        "GET",
        "PUT",
        "DELETE",
        "methods",
        "Entity",
        "Framework",
        "database",
        "approach",
        "connection",
        "SQL",
        "Server",
        "data",
        "Postman",
        "SOAPUI",
        "Web",
        "API",
        "functionality",
        "Added",
        "GitHub",
        "Version",
        "Control",
        "Tool",
        "Experience",
        "unit",
        "testing",
        "frameworks",
        "Jasmine",
        "Karma",
        "Environment",
        "Angular",
        "Web",
        "API",
        "MVC5",
        "Entity",
        "Framework",
        "Typescript",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Visual",
        "Studio",
        "Code",
        "Visual",
        "Studio",
        "Postman",
        "SOAPUI",
        "MS",
        "SQL",
        "Server",
        "Git",
        "Postman",
        "Jasmine",
        "Karma",
        "Agile",
        "methodology",
        "Software",
        "Developer",
        "QualCare",
        "Inc",
        "Piscataway",
        "NJ",
        "February",
        "August",
        "QualCare",
        "regions",
        "providers",
        "health",
        "care",
        "coverage",
        "marketplace",
        "higherquality",
        "alternative",
        "insurance",
        "companies",
        "Project",
        "task",
        "management",
        "system",
        "company",
        "functionalities",
        "features",
        "Angular",
        "Roles",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Analysis",
        "Design",
        "Programming",
        "Testing",
        "Deployment",
        "Worked",
        "Bootstrap",
        "framework",
        "Angular2",
        "Design",
        "Single",
        "Page",
        "Application",
        "HTML5",
        "CSS3",
        "Typescript",
        "material",
        "frontend",
        "design",
        "styling",
        "logic",
        "project",
        "Angular",
        "Components",
        "Modules",
        "Directives",
        "Services",
        "features",
        "project",
        "functionalities",
        "WEB",
        "API",
        "Observable",
        "RXJS",
        "library",
        "service",
        "layer",
        "subscription",
        "component",
        "Applied",
        "Route",
        "Guard",
        "securing",
        "routes",
        "canActivate",
        "canDeactivate",
        "interfaces",
        "CRUD",
        "operations",
        "http",
        "service",
        "Web",
        "API",
        "methods",
        "Enable",
        "CORS",
        "communication",
        "project",
        "WEB",
        "API",
        "functionality",
        "Employed",
        "Web",
        "API",
        "services",
        "backend",
        "project",
        "manipulate",
        "data",
        "Utilized",
        "Entity",
        "Framework",
        "mapping",
        "models",
        "database",
        "retrieve",
        "database",
        "Modified",
        "MS",
        "SQL",
        "Server",
        "tables",
        "sample",
        "data",
        "testing",
        "purposes",
        "Postman",
        "Fiddler",
        "Web",
        "API",
        "functionality",
        "Added",
        "GitHub",
        "Version",
        "Control",
        "Tool",
        "Environment",
        "Angular",
        "MVC5",
        "WEB",
        "API",
        "Entity",
        "Framework",
        "C",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Visual",
        "Studio",
        "Code",
        "Visual",
        "Studio",
        "MS",
        "SQL",
        "Server",
        "Postman",
        "Fiddler",
        "GIT",
        "SDLC",
        "Software",
        "Developer",
        "Bolt",
        "technology",
        "Inc",
        "Southampton",
        "PA",
        "November",
        "February",
        "Bolt",
        "technologys",
        "auto",
        "repair",
        "software",
        "solutions",
        "repair",
        "shop",
        "power",
        "operations",
        "repeat",
        "customers",
        "project",
        "statistic",
        "employees",
        "reports",
        "statistic",
        "structure",
        "project",
        "capabilities",
        "ASPNET",
        "MVC",
        "Roles",
        "Responsibilities",
        "FullStack",
        "development",
        "Web",
        "applications",
        "technologies",
        "tiers",
        "application",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "C",
        "end",
        "design",
        "styling",
        "logic",
        "project",
        "Employed",
        "Layout",
        "page",
        "views",
        "view",
        "view",
        "searching",
        "filtering",
        "patient",
        "JavaScript",
        "Ajax",
        "Users",
        "name",
        "i",
        "d",
        "age",
        "page",
        "Application",
        "development",
        "MVC",
        "Model",
        "View",
        "Controller",
        "framework",
        "separation",
        "concerns",
        "code",
        "reusability",
        "components",
        "packages",
        "applications",
        "application",
        "concepts",
        "ASPNET",
        "MVC",
        "Onion",
        "Architecture",
        "Repository",
        "Pattern",
        "project",
        "application",
        "service",
        "feature",
        "units",
        "works",
        "functionality",
        "rest",
        "project",
        "infrastructure",
        "framework",
        "Inversion",
        "controls",
        "Dependency",
        "Injection",
        "Unity",
        "Experience",
        "Object",
        "relation",
        "mapping",
        "ADONET",
        "Entity",
        "Framework",
        "SQL",
        "LINQ",
        "objects",
        "Lambda",
        "Expressions",
        "Entity",
        "Framework",
        "Database",
        "approach",
        "program",
        "database",
        "read",
        "update",
        "CRUD",
        "functionalities",
        "hire",
        "requests",
        "MS",
        "SQL",
        "Server",
        "tables",
        "sample",
        "data",
        "SQL",
        "command",
        "sample",
        "data",
        "application",
        "issues",
        "JIRA",
        "GitHub",
        "source",
        "control",
        "Implement",
        "scrum",
        "methodology",
        "application",
        "development",
        "Environment",
        "MVC",
        "Entity",
        "Framework",
        "C",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "Ajax",
        "SQL",
        "LINQ",
        "Visual",
        "Studio",
        "Microsoft",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "JIRA",
        "GIT",
        "Agile",
        "methodology",
        "Software",
        "Developer",
        "The",
        "Neat",
        "Company",
        "Inc",
        "Philadelphia",
        "PA",
        "November",
        "November",
        "Neat",
        "Company",
        "tools",
        "business",
        "expense",
        "management",
        "bookkeeping",
        "document",
        "organization",
        "Project",
        "management",
        "system",
        "help",
        "service",
        "features",
        "services",
        "services",
        "MVC",
        "WCF",
        "Roles",
        "Responsibilities",
        "application",
        "concepts",
        "ASPNET",
        "MVC",
        "Ntier",
        "Architecture",
        "HTML5",
        "CSS3",
        "C",
        "end",
        "design",
        "styling",
        "logic",
        "project",
        "Employed",
        "JavaScript",
        "jQuery",
        "AJAX",
        "filtering",
        "jobs",
        "need",
        "page",
        "functionality",
        "frontend",
        "WCF",
        "Application",
        "development",
        "MVC",
        "Model",
        "View",
        "Controller",
        "framework",
        "separation",
        "concerns",
        "code",
        "reusability",
        "components",
        "routing",
        "Authentication",
        "navigability",
        "security",
        "password",
        "Form",
        "Validation",
        "Session",
        "Cookies",
        "users",
        "timeout",
        "connectivity",
        "database",
        "Used",
        "Filter",
        "controller",
        "level",
        "exception",
        "read",
        "update",
        "CRUD",
        "functionalities",
        "hire",
        "requests",
        "Entity",
        "Framework",
        "Database",
        "program",
        "database",
        "Enable",
        "CORS",
        "communication",
        "MVC",
        "project",
        "WCF",
        "functionality",
        "post",
        "actions",
        "data",
        "WCF",
        "form",
        "XML",
        "SQL",
        "statements",
        "data",
        "database",
        "example",
        "database",
        "search",
        "model",
        "job",
        "class",
        "view",
        "system",
        "controller",
        "functionalities",
        "NUnit",
        "units",
        "User",
        "Postman",
        "Web",
        "AOU",
        "functionality",
        "backend",
        "issues",
        "JIRA",
        "GitHub",
        "source",
        "control",
        "Implement",
        "scrum",
        "methodology",
        "application",
        "development",
        "Environment",
        "MVC",
        "Entity",
        "Framework",
        "C",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Ajax",
        "SQL",
        "LINQ",
        "Visual",
        "Studio",
        "Microsoft",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "JIRA",
        "GIT",
        "Agile",
        "methodology",
        "Software",
        "Developer",
        "SMA",
        "Laboratory",
        "Inc",
        "FeastervilleTrevose",
        "PA",
        "June",
        "November",
        "Medical",
        "laboratory",
        "tests",
        "screenings",
        "tests",
        "technology",
        "Drug",
        "test",
        "Blood",
        "test",
        "project",
        "party",
        "application",
        "ASPNET",
        "Web",
        "forms",
        "MVC",
        "technologies",
        "Roles",
        "Responsibilities",
        "application",
        "concepts",
        "ASPNET",
        "Web",
        "Forms",
        "MVC",
        "Used",
        "HTML",
        "CSS3",
        "C",
        "frontend",
        "design",
        "styling",
        "logic",
        "project",
        "programming",
        "OOP",
        "C",
        "patient",
        "insurance",
        "information",
        "Pop",
        "window",
        "validation",
        "jQuery",
        "intranet",
        "MVC",
        "application",
        "patient",
        "orders",
        "Modified",
        "procedures",
        "data",
        "tables",
        "information",
        "patient",
        "orders",
        "SQL",
        "server",
        "searching",
        "filtering",
        "patient",
        "JavaScript",
        "Ajax",
        "Users",
        "name",
        "i",
        "d",
        "age",
        "page",
        "read",
        "update",
        "CRUD",
        "functionality",
        "patients",
        "intranet",
        "MVC",
        "application",
        "Modified",
        "Datatable",
        "form",
        "columns",
        "Pop",
        "window",
        "search",
        "patient",
        "Employed",
        "NTier",
        "architecture",
        "Presentation",
        "Business",
        "Data",
        "Access",
        "Layers",
        "CNet",
        "ASPNET",
        "MVC",
        "SQL",
        "An",
        "ADONET",
        "Connection",
        "string",
        "program",
        "database",
        "Stored",
        "Procedures",
        "Views",
        "Indexes",
        "User",
        "Defined",
        "Functions",
        "data",
        "database",
        "SQL",
        "Server",
        "Exposure",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Test",
        "Life",
        "Cycle",
        "STLC",
        "Waterfall",
        "methodology",
        "Environment",
        "ASPNET",
        "Web",
        "Forms",
        "MVC",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "JQuery",
        "AJAX",
        "ADONET",
        "SQL",
        "Server",
        "Visual",
        "studio",
        "Waterfall",
        "methodology",
        "Education",
        "Associate",
        "degree",
        "Tashkent",
        "American",
        "Advanced",
        "Institute",
        "Technology",
        "Philadelphia",
        "PA",
        "Skills",
        "Ado",
        "Database",
        "Adonet",
        "Microsoft",
        "server",
        "Sql",
        "server",
        "Sql",
        "Visual",
        "studio",
        "Api",
        "C",
        "Git",
        "Html",
        "Javascript",
        "Bootstrap",
        "Typescript",
        "Json",
        "Wcf",
        "Xml",
        "Mvc",
        "Sdlc"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:43:02.231036",
    "resume_data": "Software Developer span lSoftwarespan span lDeveloperspan Software Developer Atlantic Home Loans Inc Dallas TX Full Stack developer with over 5 years experience in analysis design coding implementation using Microsoft NET technologies ASPNET C Developed single page applications SPA using Angular Extensive experience in objectoriented languages including Microsoft C and proven ability in Angular projects by using Typescript Provided crosshost communication using Crossorigin resource sharing CORS a method that allows an application to communicate with Web API Advanced knowledge in frontend languages such as HTML5 CSS JavaScript and Bootstrap Angular material to maintain logic design and styling make it more responsive and interactive Expertise in frontend development using jQuery and Ajax to allow updating the pages without reloading also include validation using Unobtrusive Proficient in ASPNET technologies such as Web Forms MVC 5 Web Services WCF and Web API Many projects draw from different models of the framework Handson experience in creating Angular modules components directives and filters to deploy the entire business logic Knowledgeable in writing data base design concepts in MS SQL Server including database design and normalization which provides the basis for data use in projects Extensive experience in accessing and modifying storing data by using LINQ Entity Framework 6 in Database first and Code first approach Additionally worked with building Ntier and Onion architecture for projects that require RDS data Used Fiddler Postman and SOAPUI to test and debug Web API to optimize the running process Developed and performed test cases using Jasmine and Karma in the unit test Maintained the code using version control system such as Git Successfully completed projects involved with Agile and Scrum SDLC methodologies to communicate project requirements and ensure timely results Utilized Azure DevOp JIRA for team projects management and communication with team members Work Experience Software Developer Atlantic Home Loans Inc Parsippany NJ August 2018 to Present Atlantic Home Loans is mortgage bankers business is providing for home financing clients Company strives to be the premier mortgage lender in a market and focusing on mortgage banking Project about loan tracking reporting system to customize work with the clients adding features as searching filtering and reporting services The project is a Single Page Application SPA and using Angular 6 7 Roles and Responsibilities Working in Agile Methodologies for rapid development and regular adaption to the varying requirements and continuous delivery of the working software Created Angular components modules and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing Web API Implemented routing using RouterModule to enable easy navigation throughout the project and to assist in the authentication Used HTML CSS3 Bootstrap Typescript at the frontend to provide design styling and logic for the project Implemented Net Security features of Authentication and Authorization Enable CORS to allow communication between the frontend Angular project and the backend Web API functionality Employed RESTful WEB API services at the backend that allows the project to retrieve and manipulate data from the backend Created WEB API Services and Client Proxy for communication between Application Server and Web Server Demonstrated create read update and delete CRUD functionalities using the Web API POST GET PUT and DELETE methods Utilized Entity Framework database first approach to set up a connection with SQL Server to retrieve and pass data Used Postman SOAPUI to test the Web API to ensure proper functionality of the backend Added GitHub as Version Control Tool Experience with unit testing frameworks such as Jasmine and Karma Environment Angular 67 Web API MVC5 Entity Framework 6 Typescript HTML5 CSS3 Bootstrap Visual Studio Code Visual Studio 2017 Postman SOAPUI MS SQL Server 2017 Git Postman Jasmine and Karma Agile methodology Software Developer QualCare Inc Piscataway NJ February 2018 to August 2018 QualCare one of the regions leading providers of health care coverage provides the public and private marketplace with a higherquality lowercost alternative to commercial insurance companies Project about task management system and the company was interested to extend functionalities by adding new features by using Angular 6 and 7 Roles and Responsibilities Involve in all the phases of Software Development Life Cycle SDLC including Analysis Design Programming Testing and Deployment Worked with Bootstrap framework and Angular2 to Design Single Page Application Used HTML5 CSS3 and Typescript and Angular material at the frontend to provide design styling and logic for the project Created Angular Components Modules Directives and Services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout such as employing WEB API Used Observable from the RXJS library in the service layer to enable subscription in the component Applied Route Guard for securing routes by using canActivate canDeactivate interfaces Implemented CRUD operations using http service to call Web API methods Enable CORS to allow communication between the frontend Angular project and the backend WEB API functionality Employed RESTful Web API services at the backend that allows the project to retrieve and manipulate data from the backend Utilized Entity Framework for mapping models to database and insert retrieve and update database Modified MS SQL Server to create the tables and sample data for testing purposes Used Postman Fiddler to test the Web API to ensure proper functionality of the backend Added GitHub as Version Control Tool Environment Angular 6 MVC5 WEB API Entity Framework 6 C HTML5 CSS3 Bootstrap LINQ Visual Studio Code Visual Studio 2015 MS SQL Server 2017 Postman Fiddler GIT SDLC Software Developer Bolt on technology Inc Southampton PA November 2016 to February 2018 Bolt on technologys auto repair software solutions give repair shop the power to streamline operations and create happy repeat customers The project was developed to manage the statistic of employees creating reports upgrading statistic focusing on analytical and financial structure This project is done using the capabilities of ASPNET MVC Roles and Responsibilities Involved in the FullStack development of Web applications using the latest of technologies for the different tiers of an application Used HTML5 CSS3 Bootstrap and C at the front end to provide design styling and logic for the project Employed Layout page and multiple partial views combine the view as a single view when launched Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name id and age without refreshing the page Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and also encourages the reusability of components between packages and also sometimes between applications Developed an application that combines the concepts of ASPNET MVC and Onion Architecture Repository Pattern is used to build this project by combining serviceoriented application Most notably the service employs an autocomplete feature and units of works to provide the functionality to the rest of the project Developing infrastructure framework using Inversion of controls Dependency Injection Unity Experience of Object relation mapping using ADONET Entity Framework LINQ to SQL LINQ to objects and Lambda Expressions used in LINQ Entity Framework Database first approach was used to allow the program to connect with the database Demonstrated create read update and delete CRUD functionalities for hire requests Used MS SQL Server to create the tables and sample data via SQL command The sample data were to test the application All issues were tracked using JIRA and GitHub was used for source control Implement agile scrum methodology in application development Environment MVC 5 Entity Framework 6 C HTML5 CSS3 Bootstrap JavaScript jQuery Ajax SQL LINQ Visual Studio 2015 and Microsoft SQL Server Management Studio 2012 JIRA GIT Agile methodology Software Developer The Neat Company Inc Philadelphia PA November 2015 to November 2016 The Neat Company focuses exclusively on developing powerful yet cost effective tools for small business that help with expense management automated bookkeeping and document organization Project about implementing a management system to customize help service adding features as reporting services searching services by using MVC WCF Roles and Responsibilities Developed an application that combines the concepts of ASPNET MVC and Ntier Architecture Used HTML5 CSS3 and C at the front end to provide design styling and logic for the project Employed JavaScript jQuery and AJAX to enable searching and filtering of jobs without need to reload the page The functionality is connected to the frontend through WCF Application development using MVC Model View Controller based framework which provides a strong separation of concerns between the code and reusability of components Added routing and Authentication for easy navigability and security through a username and password coupled with Form Validation Effectively used Session and Cookies for users to validate and to make a timeout for the connectivity with the database Used Filter at both global and controller level for exception handling Demonstrated create read update and delete CRUD functionalities for hire requests Entity Framework Database first was used to allow the program to connect with the database Enable CORS to allow communication between the MVC project and the WCF functionality Get and post actions are used to retrieve and update data from WCF in the form of XML and JSON SQL statements were used to obtain the appropriate data from the database For example it is used in filtering the database during a search The model establishes the job class the view displays the system and the controller provides the necessary functionalities Used NUnit for units testing User Postman to test the Web AOU to ensure proper functionality of the backend All issues were tracked using JIRA and GitHub was used for source control Implement agile scrum methodology in application development Environment MVC 5 Entity Framework 6 C HTML5 CSS3 JavaScript jQuery Ajax SQL LINQ Visual Studio 2015 and Microsoft SQL Server Management Studio 2012 JIRA GIT Agile methodology Software Developer SMA Laboratory Inc FeastervilleTrevose PA June 2014 to November 2015 Medical laboratory guided from basic tests and preventive screenings to the most innovative tests that involve latest technology as Drug test Blood test etc Recreating project from 3rd party application with updating from ASPNET Web forms to new MVC technologies Roles and Responsibilities Rewrite an application the utilizes the concepts from ASPNET Web Forms to MVC Used HTML CSS3 and C at the frontend to rewrite design styling logic for the project introduced to objectoriented programming OOP through C Modified patient insurance information by adding Pop up window and added a validation using jQuery to an intranet MVC application for new patient orders Modified multiple stored procedures to obtain appropriate data from tables about patient information and patient orders using SQL server Implemented searching and filtering of patient using JavaScript and Ajax Users can search by name id and age without refreshing the page Added create read update and delete CRUD functionality for new patients to an intranet MVC application Modified Datatable form adding more columns by using Pop up window for search patient diagnoses Employed NTier architecture that included Presentation Business and Data Access Layers using CNet ASPNET MVC and SQL An ADONET Connection string was used to allow the program to connect with the database Implemented Stored Procedures Views Indexes and User Defined Functions to retrieve the data from the central database SQL Server 2012 Exposure to all stages of SDLC Software Development Life Cycle Software Test Life Cycle STLC and Waterfall methodology Environment ASPNET Web Forms MVC HTML5 CSS3 Bootstrap JavaScript JQuery AJAX ADONET SQL Server 2012 Visual studio 2013 Waterfall methodology Education Associate degree in Tashkent American Advanced Institute of Technology Philadelphia PA Skills Ado Database Adonet Microsoft sql server Sql server Sql net Visual studio Api C Git Html Javascript Bootstrap Typescript Json Wcf Xml Mvc Sdlc",
    "unique_id": "117cf282-eb07-47dc-a081-d72077a5127d"
}