{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Adobe System Philadelphia PA Extensive experience in Adobe Flex Adobe Flash ActionScript and ColdFusion to build highly rich web application development sites for internal property information and gathering entering property data Real time reporting in internal SharePoint site using Adobe Flex APIs along with Micro strategy APIs Involved in Adobe Flex development exposure of Flex layout and navigation event handling pop up dialogs menus and skinning Utilize ActionScript 30 to develop and maintain the Flash and livestreaming components of the companys websites Utilize ActionScript 30 Adobe AIR to develop and maintain several of the companys products including its flagship product Experience in application development using Python Django HTML5 CSS Git JavaJ2EE JavaScript Oracle PostgreSQL and SQLite Experience with ORMs such as Django and SQL Alchamy database design and normalization Proficient skills of using PyUnit PyTest for writing unit test cases Experience objectoriented programming OOP concepts using Python C and PHP Strong Experience in webbased UI design and interface development using JSP HTML DHTML CSS Bootstrap JavaScript Angular JS Backbone JS JQUERY AJAX and JSON Designed and implemented large scale business critical systems using Object oriented design and Programming concepts using Python and Django Involved in web application development using ASPNet HTML5 JavaScript jQuery Knockout Bootstrap PHP and Action script 3 Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Expertise in developing different web applications implementing the ModelViewController MVC architectures using Full stack frameworks such as Django Zope and Turbo Gears Experience in using Eclipse PyCharm Visual Studio Pyscripter and Sublime Text while developing different application in python Good knowledge on SOAP and JSON web services Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Work Experience Python Developer Adobe System Philadelphia PA November 2017 to Present Responsibilities Designed and managed build and release methodologies using Witbe Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and develop CPD Test scripts for Droplet Generator steering system with C C Python Linux Internal and driver interfaces Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Developed the front end of the web pages using HTML5 CSS3 JavaScript Angular JS jQuery and AJAX Decent experience in UNIX in developing the application and familiar with all of its commands Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Deployed Django web application in Apache web server and Carpathias cloud operations Written numerous Django views class based and templates for page rendering Implemented the Backbone JS for DOM manipulation as this is the light web framework compared to Angular JS Utilized Python Libraries like Boto3 NumPy for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Implemented SOA based web services designed and built SOAP web service interface Created SOAP web services and SOAP handlers to store the SOAP messages Performed Pytest and unit test on them Extracted XML code from script for testing Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Installed Witbe Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Built various Flash mp3 players with ActionScript 3 reusable object code Troubleshoot object classes for ActionScriptAMFPHP to optimize image compression Worked on numerous Python modules Built  context run context and other python objects thats reused by application Optimized the code using smart pointers profilers and C Standard template library Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Converted Photoshop smart objects into animations using Actionscript 3 Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Python Developer CenterPoint Energy Houston TX March 2015 to October 2017 Responsibilities Performed all financial activities to include PL statements and management reports Developed Python based API RESTful Web Service to track the events and perform analysis using Django Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Designed Cassandra schema for the APIs and Parsed XML file using Python to extract data from database Worked on Python Open stack APIs and used NoSQL as database and followed Python testdriven development techniques Developed serverbased web traffic statistical analysis tool using Flask Pandas and implemented on premise MongoDB Monitoring Service MMS and created dashboards for monitoring the MongoDB environment Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Restful web service calls for the validation Involved in Using AWS Cloud Watch performed Monitoring customized metrics and file logging Built webservices using SOAP that allowed integrating the business application with the legacy applications and facilitates for future applications Involved in debugging the applications monitored on JIRA using agile methodology Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Responsible for both backend programming in PHP and frontend functionality using JavaScript Ajax jQuery libraries and other technologies and developed GUI using PHP HTML CSS JavaScript jQuery Bootstrap Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Developed userfriendly modals for the form submissions using simplemodaljs jQuery Ajax and JavaScript Automated the existing scripts for performance calculations using NumPy and SQL Alchemy Involved in creating and extracting data from database using SQL Queries PLSQL on Oracle database Used Python and Django creating graphics XML processing data exchange and business logic implementation Python Developer Citi Bank New York NY January 2013 to February 2015 Responsibilities Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote Test Automation Script for deployment of AWS and Company Web API using python package puppet configuration tool to update and check historical pumping data from AWS Compare the existing data and historical data and create performance chart for client Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Wrote program to fetch data and from amazon cloud and send the client according their requirement Passed query and wrote script to automate machine alarm data with timestamp to engineer Used Python and Pandas library built data analysis graph for documentation and record Worked with Blender script built addon and customization of blender interface Used SPSS tool for statistical programming and computational techniques for large data sets and quantitative analysis Used SPSS tool for Visualization techniques for summarizing complex data analysis using Python Independently developed and implemented analysis workflow and quality practices including workflow optimization process standardization configuration management of analysis files and software and verification and validation VV of models Using Numerical equation built application and do 2D finite Element analysis using python language Used Django database APIs to access database objects Generated graphical reports using python package NumPy and Matplotlib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Wrote programs to parse excel file and process many user data with data validations Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Maintained data with different levels of access privileges Additional Informations Education Masters Skills CSS 4 years Django 6 years HTML 6 years JavaScript 4 years Python 6 years Android MYSQL PHP Git Jquery Additional Information Technical Skills OS Platforms UnixLinux Windows iOS Programming Languages Python Java JavaScript Modules and Frameworks Django Flask Tools Eclipse Notepad PyCharm Sublime Text Web Technologies HTML CSS Bootstrap JavaScript Server Technologies Apache Databases MySQL Mongo DB PostgreSQL SQLite",
    "entities": [
        "CSS HTML JavaScript",
        "Jquery Additional Information Technical Skills OS Platforms UnixLinux Windows",
        "Python Flask",
        "ActionScriptAMFPHP",
        "AJAX",
        "Amazon AWS architecture",
        "Using Numerical",
        "GUI",
        "Actionscript 3",
        "HTML AJAX CSS",
        "Angular JS Utilized Python Libraries like Boto3 NumPy",
        "UNIX",
        "Sublime Text",
        "GitHub Nexus",
        "Amazon Web Services AWS",
        "CPD Test",
        "SOAP",
        "Developed Simple Object Access Protocol",
        "XML",
        "Maintained",
        "SPSS",
        "AJAX Involved",
        "Monitoring Service MMS",
        "GitHub Bit Bucket",
        "Amazon",
        "Python Script",
        "Python",
        "Flex",
        "Amazon AWS S3",
        "Developed",
        "Additional Informations Education Masters Skills",
        "Django Created",
        "AWS Elastic Load Balancing ELB",
        "NumPy",
        "AWS Compare",
        "Droplet Generator",
        "HTML5",
        "API RESTful Web Service",
        "JSP",
        "Micro",
        "Built",
        "SQL Queries",
        "Turbo Gears",
        "JavaScript Added",
        "DOM",
        "Witbe Tool Designed",
        "RDS",
        "Celery",
        "Views",
        "MVC",
        "JSP Developed",
        "PythonDjango",
        "Amazon Cloud Responsible",
        "Development of Python",
        "API",
        "Build JSON",
        "Present Responsibilities Designed",
        "PHP HTML CSS",
        "AWS",
        "HTML5 CSS JavaScript",
        "Apache",
        "SQL Injections Vulnerabilities Wrote Test Automation Script",
        "SQL",
        "lPythonspan",
        "Developed Python",
        "PL",
        "User Service",
        "JavaScript Oracle PostgreSQL",
        "Pandas",
        "AJAX Expertise",
        "CRUD",
        "Python Developer Citi Bank New York",
        "Bash Used Restful",
        "Djangos",
        "JavaScript",
        "Created SOAP",
        "UI",
        "Python Independently",
        "Templates",
        "AJAX Decent",
        "Carpathias",
        "SharePoint",
        "ColdFusion",
        "Developed UI",
        "PHP",
        "NoSQL",
        "Tableau",
        "HTMLCSSjQuery"
    ],
    "experience": "Experience in application development using Python Django HTML5 CSS Git JavaJ2EE JavaScript Oracle PostgreSQL and SQLite Experience with ORMs such as Django and SQL Alchamy database design and normalization Proficient skills of using PyUnit PyTest for writing unit test cases Experience objectoriented programming OOP concepts using Python C and PHP Strong Experience in webbased UI design and interface development using JSP HTML DHTML CSS Bootstrap JavaScript Angular JS Backbone JS JQUERY AJAX and JSON Designed and implemented large scale business critical systems using Object oriented design and Programming concepts using Python and Django Involved in web application development using ASPNet HTML5 JavaScript jQuery Knockout Bootstrap PHP and Action script 3 Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Expertise in developing different web applications implementing the ModelViewController MVC architectures using Full stack frameworks such as Django Zope and Turbo Gears Experience in using Eclipse PyCharm Visual Studio Pyscripter and Sublime Text while developing different application in python Good knowledge on SOAP and JSON web services Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Work Experience Python Developer Adobe System Philadelphia PA November 2017 to Present Responsibilities Designed and managed build and release methodologies using Witbe Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and develop CPD Test scripts for Droplet Generator steering system with C C Python Linux Internal and driver interfaces Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Developed the front end of the web pages using HTML5 CSS3 JavaScript Angular JS jQuery and AJAX Decent experience in UNIX in developing the application and familiar with all of its commands Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Deployed Django web application in Apache web server and Carpathias cloud operations Written numerous Django views class based and templates for page rendering Implemented the Backbone JS for DOM manipulation as this is the light web framework compared to Angular JS Utilized Python Libraries like Boto3 NumPy for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Implemented SOA based web services designed and built SOAP web service interface Created SOAP web services and SOAP handlers to store the SOAP messages Performed Pytest and unit test on them Extracted XML code from script for testing Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Installed Witbe Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Built various Flash mp3 players with ActionScript 3 reusable object code Troubleshoot object classes for ActionScriptAMFPHP to optimize image compression Worked on numerous Python modules Built   context run context and other python objects that s reused by application Optimized the code using smart pointers profilers and C Standard template library Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Converted Photoshop smart objects into animations using Actionscript 3 Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Python Developer CenterPoint Energy Houston TX March 2015 to October 2017 Responsibilities Performed all financial activities to include PL statements and management reports Developed Python based API RESTful Web Service to track the events and perform analysis using Django Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Designed Cassandra schema for the APIs and Parsed XML file using Python to extract data from database Worked on Python Open stack APIs and used NoSQL as database and followed Python testdriven development techniques Developed serverbased web traffic statistical analysis tool using Flask Pandas and implemented on premise MongoDB Monitoring Service MMS and created dashboards for monitoring the MongoDB environment Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Restful web service calls for the validation Involved in Using AWS Cloud Watch performed Monitoring customized metrics and file logging Built webservices using SOAP that allowed integrating the business application with the legacy applications and facilitates for future applications Involved in debugging the applications monitored on JIRA using agile methodology Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Responsible for both backend programming in PHP and frontend functionality using JavaScript Ajax jQuery libraries and other technologies and developed GUI using PHP HTML CSS JavaScript jQuery Bootstrap Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Developed userfriendly modals for the form submissions using simplemodaljs jQuery Ajax and JavaScript Automated the existing scripts for performance calculations using NumPy and SQL Alchemy Involved in creating and extracting data from database using SQL Queries PLSQL on Oracle database Used Python and Django creating graphics XML processing data exchange and business logic implementation Python Developer Citi Bank New York NY January 2013 to February 2015 Responsibilities Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote Test Automation Script for deployment of AWS and Company Web API using python package puppet configuration tool to update and check historical pumping data from AWS Compare the existing data and historical data and create performance chart for client Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Wrote program to fetch data and from amazon cloud and send the client according their requirement Passed query and wrote script to automate machine alarm data with timestamp to engineer Used Python and Pandas library built data analysis graph for documentation and record Worked with Blender script built addon and customization of blender interface Used SPSS tool for statistical programming and computational techniques for large data sets and quantitative analysis Used SPSS tool for Visualization techniques for summarizing complex data analysis using Python Independently developed and implemented analysis workflow and quality practices including workflow optimization process standardization configuration management of analysis files and software and verification and validation VV of models Using Numerical equation built application and do 2D finite Element analysis using python language Used Django database APIs to access database objects Generated graphical reports using python package NumPy and Matplotlib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Wrote programs to parse excel file and process many user data with data validations Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Maintained data with different levels of access privileges Additional Informations Education Masters Skills CSS 4 years Django 6 years HTML 6 years JavaScript 4 years Python 6 years Android MYSQL PHP Git Jquery Additional Information Technical Skills OS Platforms UnixLinux Windows iOS Programming Languages Python Java JavaScript Modules and Frameworks Django Flask Tools Eclipse Notepad PyCharm Sublime Text Web Technologies HTML CSS Bootstrap JavaScript Server Technologies Apache Databases MySQL Mongo DB PostgreSQL SQLite",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Adobe",
        "System",
        "Philadelphia",
        "PA",
        "experience",
        "Adobe",
        "Flex",
        "Adobe",
        "Flash",
        "ActionScript",
        "ColdFusion",
        "web",
        "application",
        "development",
        "sites",
        "property",
        "information",
        "gathering",
        "property",
        "data",
        "time",
        "SharePoint",
        "site",
        "Adobe",
        "Flex",
        "APIs",
        "Micro",
        "strategy",
        "APIs",
        "Adobe",
        "Flex",
        "development",
        "exposure",
        "Flex",
        "layout",
        "navigation",
        "event",
        "pop",
        "dialogs",
        "menus",
        "Utilize",
        "ActionScript",
        "Flash",
        "components",
        "companys",
        "Utilize",
        "ActionScript",
        "Adobe",
        "AIR",
        "companys",
        "products",
        "flagship",
        "product",
        "Experience",
        "application",
        "development",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "Git",
        "JavaJ2EE",
        "JavaScript",
        "Oracle",
        "PostgreSQL",
        "SQLite",
        "Experience",
        "ORMs",
        "Django",
        "SQL",
        "Alchamy",
        "database",
        "design",
        "normalization",
        "skills",
        "PyUnit",
        "PyTest",
        "unit",
        "test",
        "cases",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "Strong",
        "Experience",
        "UI",
        "design",
        "interface",
        "development",
        "JSP",
        "HTML",
        "DHTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQUERY",
        "AJAX",
        "JSON",
        "scale",
        "business",
        "systems",
        "Object",
        "design",
        "Programming",
        "concepts",
        "Python",
        "Django",
        "web",
        "application",
        "development",
        "ASPNet",
        "HTML5",
        "JavaScript",
        "jQuery",
        "Knockout",
        "Bootstrap",
        "PHP",
        "Action",
        "script",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "webpages",
        "HTML5",
        "CSS",
        "JavaScript",
        "AJAX",
        "Expertise",
        "web",
        "applications",
        "ModelViewController",
        "MVC",
        "stack",
        "frameworks",
        "Django",
        "Zope",
        "Turbo",
        "Gears",
        "Experience",
        "Eclipse",
        "PyCharm",
        "Visual",
        "Studio",
        "Pyscripter",
        "Sublime",
        "Text",
        "application",
        "knowledge",
        "SOAP",
        "JSON",
        "web",
        "services",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "environment",
        "knowledge",
        "AWS",
        "services",
        "Elastic",
        "Compute",
        "Cloud",
        "EC2",
        "Elastic",
        "Loadbalancers",
        "Elastic",
        "Container",
        "Service",
        "Docker",
        "Containers",
        "S3",
        "Elastic",
        "Beanstalk",
        "Cloud",
        "Front",
        "Elastic",
        "Filesystem",
        "RDS",
        "DMS",
        "VPC",
        "Route53",
        "CloudWatch",
        "CloudTrail",
        "CloudFormation",
        "IAM",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Adobe",
        "System",
        "Philadelphia",
        "PA",
        "November",
        "Present",
        "Responsibilities",
        "build",
        "methodologies",
        "Witbe",
        "Tool",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "Design",
        "CPD",
        "Test",
        "scripts",
        "Droplet",
        "Generator",
        "steering",
        "system",
        "C",
        "C",
        "Python",
        "Linux",
        "Internal",
        "driver",
        "interfaces",
        "Object",
        "Access",
        "Protocol",
        "SOAP",
        "web",
        "services",
        "applications",
        "User",
        "Service",
        "applications",
        "Representational",
        "State",
        "Transfer",
        "REST",
        "Web",
        "services",
        "end",
        "web",
        "pages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "AJAX",
        "experience",
        "UNIX",
        "application",
        "commands",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Experience",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Deployed",
        "Django",
        "web",
        "application",
        "Apache",
        "web",
        "server",
        "Carpathias",
        "cloud",
        "operations",
        "Django",
        "class",
        "templates",
        "page",
        "Backbone",
        "JS",
        "DOM",
        "manipulation",
        "web",
        "framework",
        "JS",
        "Python",
        "Libraries",
        "NumPy",
        "AWS",
        "Pandas",
        "library",
        "Analysis",
        "Angularjs",
        "client",
        "application",
        "SOA",
        "web",
        "services",
        "SOAP",
        "web",
        "service",
        "interface",
        "Created",
        "SOAP",
        "web",
        "services",
        "SOAP",
        "handlers",
        "SOAP",
        "messages",
        "Pytest",
        "unit",
        "test",
        "XML",
        "code",
        "script",
        "Build",
        "JSON",
        "objects",
        "framework",
        "JavaScript",
        "flow",
        "page",
        "performance",
        "issues",
        "Developed",
        "web",
        "services",
        "Python",
        "Django",
        "REST",
        "framework",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "communication",
        "testing",
        "Witbe",
        "Python",
        "Jira",
        "test",
        "Rail",
        "part",
        "server",
        "setups",
        "AWS",
        "server",
        "deployment",
        "data",
        "processing",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "Nexus",
        "Maven",
        "AWS",
        "AMIs",
        "Flash",
        "mp3",
        "players",
        "ActionScript",
        "object",
        "code",
        "Troubleshoot",
        "object",
        "classes",
        "ActionScriptAMFPHP",
        "image",
        "compression",
        "Python",
        "modules",
        "context",
        "run",
        "context",
        "python",
        "application",
        "code",
        "pointers",
        "profilers",
        "C",
        "Standard",
        "template",
        "library",
        "Build",
        "JSON",
        "framework",
        "JavaScript",
        "flow",
        "page",
        "performance",
        "issues",
        "Converted",
        "Photoshop",
        "objects",
        "animations",
        "Actionscript",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "AWS",
        "highavailability",
        "AWS",
        "Elastic",
        "Load",
        "Balancing",
        "ELB",
        "balance",
        "instances",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "Celery",
        "task",
        "queue",
        "RabbitMQ",
        "broker",
        "tasks",
        "task",
        "object",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "Views",
        "Templates",
        "Python",
        "website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "language",
        "Developed",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "webpages",
        "HTML5",
        "CSS",
        "JavaScript",
        "AJAX",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "report",
        "application",
        "Tableau",
        "production",
        "site",
        "Apache",
        "Servers",
        "mod",
        "Python",
        "Python",
        "Developer",
        "CenterPoint",
        "Energy",
        "Houston",
        "TX",
        "March",
        "October",
        "Responsibilities",
        "activities",
        "PL",
        "statements",
        "management",
        "reports",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Django",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Cassandra",
        "schema",
        "APIs",
        "XML",
        "file",
        "Python",
        "data",
        "database",
        "Python",
        "stack",
        "APIs",
        "NoSQL",
        "database",
        "Python",
        "testdriven",
        "development",
        "techniques",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "premise",
        "Monitoring",
        "Service",
        "MMS",
        "dashboards",
        "MongoDB",
        "environment",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Restful",
        "web",
        "service",
        "validation",
        "AWS",
        "Cloud",
        "Watch",
        "Monitoring",
        "metrics",
        "file",
        "webservices",
        "SOAP",
        "business",
        "application",
        "legacy",
        "applications",
        "facilitates",
        "applications",
        "applications",
        "JIRA",
        "methodology",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Responsible",
        "programming",
        "PHP",
        "functionality",
        "JavaScript",
        "Ajax",
        "jQuery",
        "libraries",
        "technologies",
        "GUI",
        "PHP",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "Design",
        "development",
        "UI",
        "screens",
        "JSP",
        "Developed",
        "user",
        "registration",
        "login",
        "feature",
        "application",
        "process",
        "scratch",
        "Django",
        "user",
        "model",
        "framework",
        "response",
        "user",
        "request",
        "JavaScript",
        "validation",
        "modals",
        "form",
        "submissions",
        "jQuery",
        "Ajax",
        "JavaScript",
        "scripts",
        "performance",
        "calculations",
        "NumPy",
        "SQL",
        "Alchemy",
        "data",
        "database",
        "SQL",
        "Queries",
        "PLSQL",
        "Oracle",
        "database",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "Developer",
        "Citi",
        "Bank",
        "New",
        "York",
        "NY",
        "January",
        "February",
        "Responsibilities",
        "Web",
        "application",
        "penetration",
        "testing",
        "process",
        "web",
        "process",
        "SQL",
        "Injections",
        "Vulnerabilities",
        "Wrote",
        "Test",
        "Automation",
        "Script",
        "deployment",
        "AWS",
        "Company",
        "Web",
        "API",
        "package",
        "puppet",
        "configuration",
        "tool",
        "pumping",
        "data",
        "AWS",
        "data",
        "data",
        "performance",
        "chart",
        "client",
        "Wrote",
        "automate",
        "Python",
        "Script",
        "testing",
        "program",
        "machine",
        "detection",
        "alarm",
        "experience",
        "Amazon",
        "cloud",
        "Wrote",
        "program",
        "data",
        "amazon",
        "cloud",
        "client",
        "requirement",
        "query",
        "script",
        "machine",
        "alarm",
        "data",
        "timestamp",
        "Used",
        "Python",
        "Pandas",
        "library",
        "data",
        "analysis",
        "graph",
        "documentation",
        "record",
        "Worked",
        "Blender",
        "script",
        "addon",
        "customization",
        "blender",
        "interface",
        "SPSS",
        "tool",
        "programming",
        "techniques",
        "data",
        "sets",
        "analysis",
        "SPSS",
        "tool",
        "Visualization",
        "techniques",
        "data",
        "analysis",
        "Python",
        "analysis",
        "workflow",
        "quality",
        "practices",
        "optimization",
        "process",
        "standardization",
        "configuration",
        "management",
        "analysis",
        "files",
        "software",
        "verification",
        "validation",
        "VV",
        "models",
        "Numerical",
        "equation",
        "application",
        "2D",
        "finite",
        "Element",
        "analysis",
        "language",
        "Django",
        "database",
        "APIs",
        "database",
        "reports",
        "package",
        "NumPy",
        "Matplotlib",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "data",
        "HTML",
        "format",
        "data",
        "files",
        "Wrote",
        "programs",
        "file",
        "user",
        "data",
        "data",
        "validations",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "data",
        "levels",
        "access",
        "privileges",
        "Additional",
        "Informations",
        "Education",
        "Masters",
        "Skills",
        "CSS",
        "years",
        "Django",
        "years",
        "HTML",
        "years",
        "JavaScript",
        "years",
        "Python",
        "years",
        "Android",
        "MYSQL",
        "PHP",
        "Git",
        "Jquery",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "OS",
        "Platforms",
        "UnixLinux",
        "Windows",
        "iOS",
        "Programming",
        "Languages",
        "Python",
        "Java",
        "JavaScript",
        "Modules",
        "Frameworks",
        "Django",
        "Flask",
        "Tools",
        "Eclipse",
        "Notepad",
        "PyCharm",
        "Sublime",
        "Text",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Server",
        "Technologies",
        "Apache",
        "Databases",
        "MySQL",
        "Mongo",
        "DB",
        "PostgreSQL",
        "SQLite"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:08:17.878360",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Adobe System Philadelphia PA Extensive experience in Adobe Flex Adobe Flash ActionScript and ColdFusion to build highly rich web application development sites for internal property information and gathering entering property data Real time reporting in internal SharePoint site using Adobe Flex APIs along with Micro strategy APIs Involved in Adobe Flex development exposure of Flex layout and navigation event handling pop up dialogs menus and skinning Utilize ActionScript 30 to develop and maintain the Flash and livestreaming components of the companys websites Utilize ActionScript 30 Adobe AIR to develop and maintain several of the companys products including its flagship product Experience in application development using Python Django HTML5 CSS Git JavaJ2EE JavaScript Oracle PostgreSQL and SQLite Experience with ORMs such as Django and SQL Alchamy database design and normalization Proficient skills of using PyUnit PyTest for writing unit test cases Experience objectoriented programming OOP concepts using Python C and PHP Strong Experience in webbased UI design and interface development using JSP HTML DHTML CSS Bootstrap JavaScript Angular JS Backbone JS JQUERY AJAX and JSON Designed and implemented large scale business critical systems using Object oriented design and Programming concepts using Python and Django Involved in web application development using ASPNet HTML5 JavaScript jQuery Knockout Bootstrap PHP and Action script 3 Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Expertise in developing different web applications implementing the ModelViewController MVC architectures using Full stack frameworks such as Django Zope and Turbo Gears Experience in using Eclipse PyCharm Visual Studio Pyscripter and Sublime Text while developing different application in python Good knowledge on SOAP and JSON web services Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Work Experience Python Developer Adobe System Philadelphia PA November 2017 to Present Responsibilities Designed and managed build and release methodologies using Witbe Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Design and develop CPD Test scripts for Droplet Generator steering system with C C Python Linux Internal and driver interfaces Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Developed the front end of the web pages using HTML5 CSS3 JavaScript Angular JS jQuery and AJAX Decent experience in UNIX in developing the application and familiar with all of its commands Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Experience in writing SQL queries for performing various CRUD operations like create update read and delete Deployed Django web application in Apache web server and Carpathias cloud operations Written numerous Django views class based and templates for page rendering Implemented the Backbone JS for DOM manipulation as this is the light web framework compared to Angular JS Utilized Python Libraries like Boto3 NumPy for AWS Used Pandas library for statistical Analysis Developed efficient Angularjs for client webbased application Implemented SOA based web services designed and built SOAP web service interface Created SOAP web services and SOAP handlers to store the SOAP messages Performed Pytest and unit test on them Extracted XML code from script for testing Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Installed Witbe Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Built various Flash mp3 players with ActionScript 3 reusable object code Troubleshoot object classes for ActionScriptAMFPHP to optimize image compression Worked on numerous Python modules Built dB context run context and other python objects thats reused by application Optimized the code using smart pointers profilers and C Standard template library Build JSON objects using the framework which will be used by JavaScript to control the flow of the page Resolved performance related issues using efficient coding Converted Photoshop smart objects into animations using Actionscript 3 Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented AWS highavailability using AWS Elastic Load Balancing ELB which performed balance across instances Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Used Celery as task queue and RabbitMQ as messaging broker to execute asynchronous tasks Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Python Developer CenterPoint Energy Houston TX March 2015 to October 2017 Responsibilities Performed all financial activities to include PL statements and management reports Developed Python based API RESTful Web Service to track the events and perform analysis using Django Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Designed Cassandra schema for the APIs and Parsed XML file using Python to extract data from database Worked on Python Open stack APIs and used NoSQL as database and followed Python testdriven development techniques Developed serverbased web traffic statistical analysis tool using Flask Pandas and implemented on premise MongoDB Monitoring Service MMS and created dashboards for monitoring the MongoDB environment Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Used Restful web service calls for the validation Involved in Using AWS Cloud Watch performed Monitoring customized metrics and file logging Built webservices using SOAP that allowed integrating the business application with the legacy applications and facilitates for future applications Involved in debugging the applications monitored on JIRA using agile methodology Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Responsible for both backend programming in PHP and frontend functionality using JavaScript Ajax jQuery libraries and other technologies and developed GUI using PHP HTML CSS JavaScript jQuery Bootstrap Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Developed userfriendly modals for the form submissions using simplemodaljs jQuery Ajax and JavaScript Automated the existing scripts for performance calculations using NumPy and SQL Alchemy Involved in creating and extracting data from database using SQL Queries PLSQL on Oracle database Used Python and Django creating graphics XML processing data exchange and business logic implementation Python Developer Citi Bank New York NY January 2013 to February 2015 Responsibilities Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote Test Automation Script for deployment of AWS and Company Web API using python package puppet configuration tool to update and check historical pumping data from AWS Compare the existing data and historical data and create performance chart for client Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Wrote program to fetch data and from amazon cloud and send the client according their requirement Passed query and wrote script to automate machine alarm data with timestamp to engineer Used Python and Pandas library built data analysis graph for documentation and record Worked with Blender script built addon and customization of blender interface Used SPSS tool for statistical programming and computational techniques for large data sets and quantitative analysis Used SPSS tool for Visualization techniques for summarizing complex data analysis using Python Independently developed and implemented analysis workflow and quality practices including workflow optimization process standardization configuration management of analysis files and software and verification and validation VV of models Using Numerical equation built application and do 2D finite Element analysis using python language Used Django database APIs to access database objects Generated graphical reports using python package NumPy and Matplotlib Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Wrote programs to parse excel file and process many user data with data validations Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Maintained data with different levels of access privileges Additional Informations Education Masters Skills CSS 4 years Django 6 years HTML 6 years JavaScript 4 years Python 6 years Android MYSQL PHP Git Jquery Additional Information Technical Skills OS Platforms UnixLinux Windows iOS Programming Languages Python Java JavaScript Modules and Frameworks Django Flask Tools Eclipse Notepad PyCharm Sublime Text Web Technologies HTML CSS Bootstrap JavaScript Server Technologies Apache Databases MySQL Mongo DB PostgreSQL SQLite",
    "unique_id": "291f2c51-6550-4df0-a5a9-2656f1a3cb95"
}