{
    "clean_data": "java Developer span ljavaspan span lDeveloperspan java Developer Morgan Stanly Bayonne NJ 6 years of involvement in design development deployment and test of client server web based and distributed software applications by using J2SE JEE and J2EE technologies Experience on SDLC process that includes translation of requirements into functional and technical specifications Designing Developing Testing Implementation Post Production support using development methodologies like Waterfall and Agile Experience in System Analysis Design Configuration Code management and maintenance in the sectors of Banking Finance Ecommerce and Health Expertise in DOM manipulation using JavaScript DOJO jQuery Experience on spring modules like Spring IOC and Knowledge on Spring DAO ORM and AOP Hand on experience with Restful web services used JAXRS to implement RESTful applications in Java Extensive experience in working with SOA architecture and web services SOAP WSDL UDDI using Apache Axis Experience with automation deployment using Terraform Hands on experience with Docker Hands on experience with Spring Spring MVC Struts Good knowledge on Active Directory AD Services Worked and knowledge on protocols HTTP HTTPS FTP SMTP Good knowledge on TCPIP protocols and TCPIP model Good knowledge on issue tracking product JIRA Experience on architectures like ModelViewController MVC ServiceOrientedArchitecture SOA Expertise in implementing various J2EE design patterns like Singleton Session Facade Data Access Objects DAO Factory Data Transfer Object DTO and Business Delegate in the development of MultiTier Distributed Applications Developed J2EE applications by using the IDEs such as Eclipse NetBeans and IntelliJ Experience in deploying applications using Application Servers like Web Logic JBOSS Oracle App Server and web server like IBM WebSphere Apache Tomcat Good knowledge in usage of version controls such as CVS Git SVN and ClearCase Extensive experience in Oracle RDBMS design and developing stored procedures packages triggers cursors using SQL and PLSQL Expertise in XML Technologies XML XSLT XSD and Worked on parsers like JAXB JAXP SAX and DOM Good knowledge in log4J implementation to persist the data into log files and experience with ant and maven for the build and deployment of applications Well versed in developing various database objects like Tables Packages Stored Procedures Functions Triggers Indexes Constraints Materialized Views and others in Oracle 10g database IBM DB2 database Extensive involvement in development and Performance tuning of SQL and PLSQL scripts Experience on Jasper Reports Crystal Reports and knowledge on Oracle Reports Technical expertise in the areas of Object Oriented Analysis and Design OOAD Using different methodologies and UML using rational rose Excellent team player with good analytical strategic planning and interpersonal and communication skills Highly motivated enthusiastic and selfstarter Work Experience java Developer Morgan Stanly Chicago IL December 2017 to Present Unified Order Entry UOE application is primarily responsible for handling all the trading action on orders beginning at new order creation UOE is centralized application for different Financial products such as equities options fixed come and mutual funds UOL keeps track of an orders various transition states from order creation onwards primarily users are financial advisors who creates orders and monitors their order statuses for making meaningful business decisions MTE as per FINRA regulations amendment to rule 2232Customer Confirmations that require member firms to disclose additional transactionrelated information to retailnoninstitutional customers for trades in certain fixed income securities Products in scope Corporate Bonds US Agencies Bonds Municipal Bonds 10 Par Structured Equity Trades from all source systems sent to BondWave vendor solution via Rest API to capture the Enriched trades BondWave handles all the trade matching and calculations of PMPCP At the end of day BondWave will have a batch job that generates the copybook files feed that will get sent to confirms via MTE NDM transmission for processing of the client disclosures Responsibilities Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Worked on Java functional programming concepts like Streams Functional Interfaces new date time API and lambda expressions Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Implemented JMS Listener on MQ Routing functionalities and invoking corresponding web service using Apache Camel Core Java with Concurrent API is used extensively for parallel processing and chunk processing Apache camel Kafka end point used to publish trade flow to Apache Kafka TFM Transaction Forensic Monitor to track transaction details Developed component to receive inbound data from different source systems in different formats fixed lengthxml normalized to GOMS format using Apache Camel Smook Data Format Developed component send formatted Goms JSON trade data to GOMS Rest Endpoint to capture enriched data Response from Rest Endpoint publishes to MQ using Apache Camel Involved in developing several Fix message New Order single Execution Confirmation Used Angular router and implemented module wide routing and created different forms using Angular data driven and template driven forms Developed Angular Components Services and Filters and took part in developing unit test and integration test cases using Jasmine Karma Consumed REST services using Angular HTTP and performed various REST Http operations for data retrievals and updates Implemented Cloud capabilities like Centralized Configuration Load Balancing ServicetoService call using Feign Service Registry and Discovery using Eureka in Spring Cloud Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed Micro services APIs using Spring Cloud Spring Security Spring Boot Spring Integration Spring JDBC used retrieve and update inserting data in oracle database with use of stored procs Gulp is used to build and Bower is used for managing dependencies JSON requestresponse from UI is processed using Spring Boot Restful features with micro services Architecture and Spring Data Jpa is used to saveretrieve the data in the backend Oracle Coherence used to store Reference Data Used Apache Maven as a build tool for building the Restful webservice Environment Java 18 concurrent package lambda expressions streams J2ee web servicesJMSXMLDom Sax Xpath Stax XSLTIBM MQKafka 20 Spring BootApache Camel 22 Spring Batch Spring Data JPA EHCacheJprofilerAngular6BowerGulpEclipseWebStormGITStashBitbucketJenkinsConfluenceJiraSourceTree Swagger Maven Windows LinuxDB2Sql Server Coherence java Developer TD Ameritrade June 2016 to December 2017 Description Institutional Trading platform ITP is used to capture manage and execute trades of financial instruments like equities mutual funds and options for advisors on behalf of their clients Supports Block Trading with advisory account and account level trading Responsibilities Build and support web applications mobile and tablet apps that provide account management trading management fees balances cash management portfolio rebalancing client document services tradeconfirms statements and tax documents and other capabilities Developed the robust scheduled billing engine to calculate the generated fees for the advisor accounts Integration with OMS system for placing new orders and canceling orders modifying orders using Fix messages Developed Trade Execution listener to receive Trade Executions Aks from OMS system and updates database Developed Allocation Engine to allocate trades to client accounts and updates Back office system with position information Designed and developed multitier custom build workflowbased web application Implemented an adaptor which receives trade alerts from CEP engine and sends to Tibco EMS queue for further processing by Message Bus Message Bus was built using Spring Integration to dequeue xml trade messages from Tibco EMS queue and sends to different channels for parsing enrichment persisting into database Core Java with Concurrent API is used extensively for parallel processing and chunk processing of trade execution data and market data and converts in to JSON and store it Mongo DB XSLT and Trax API used to convert different formats of XML to our Standard XML format and StAX API used for parsing XML messages JProfiler is used to profile he application Memory view and CPU view and Thread view are used Followed AgileScrum methodology that included iterative application development weekly Sprints and stand up meetings Consumed REST services using Angular HTTP and performed various REST Http operations for data retrievals and updates Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed Micro services APIs using Spring Cloud Spring Security Spring Boot Spring Integration Performed REST validations and created REST exception Handlers and used Postman to test REST services Developed unit test cases using Junit Spring to test REST microservices Involved in consuming SOAP based web services so that the business application can integrate with legacy applications and facilitates for future applications Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Worked on Java functional programming concepts like Streams Functional Interfaces new date time API and lambda expressions Design and implementation of different micro services and its Docker files Created and maintained Docker images and Docker containers Configuring the Docker containers and creating Docker files for different environments Docker swam used for container orchestration Amazon IAM was used to maintain the user credentials and involved in creating custom IAM policies to various groups defined within the organization To send emails to users developed Java API to interact with the Amazon SQS and Amazon SNS created Docker machine in Amazon EC2 instance and created Docker containers in Docker Machine running in Amazon EC2 Involved in Creating cloud formation templates using AWS Cloud formation and leveraged Elastic container services to run Docker micro services in AWS Used MultiThreading and collection framework including List Map etc Used Apache Maven as a build tool for building the Restful webservice Environment Java 18 concurrent package lambda expressions streams JavaScript Servlets JSPs JDBC EJB JPA Hibernate JAXB JAXRS SQL Oracle 10g SVN GitHub Ant ServiceNow Spring Boot Spring BatchJMSTibco EMS Autosys Eclipse Unix JUnit Log4J Anuglar 6HTML CSS and Bootstrap Docker AWS Swagger Microservices JIRA Jenkins java Developer Citigroup Jersey City NJ January 2015 to May 2016 World Link Next Gen GPP Word Link Next Gen is a rewrite of existing mainframe application world Link using J2EE This application main purpose is to send payments across 160 countries with multicurrency capabilities Payments can be sent in the different types of disbursement modes Ach Wire Mass pay Remote Check Cash The application has the capability to book the Fx deals in multiple currencies and across multiple counterparties Also the system calculates the corresponding settlement date with counterparty after considering weekends and holidays This Application divided in to three parts UI User interface Payment Processing Engine Statemachine and Report Engine Payment Processing engine Statemachine Statemachine processes the payments from different types of files Fixed length XML Swift and MQ messages Swift Payments are routed to different workflow components based on routing logic Workflows are configured in spring container and initiated by thread pool All workflows are monitored by MBeans Processing Engine has following modules Transaction Initiation Sanctions FXEngine Funding and Disbursement Responsibilities XSLT and Trax API used to convert the different formats of XML to our Standard XML format Used STAX Pull parsing API of XML for parsing the XML messages and generated model object Developed generic component for reading files and writing to files using Java IO and NIO Generic component for reading from IBM MQ and Writing to MQ queues Jboss cached used to maintain static data set up data in different nodes and replicated data between the nodes Hibernate associations and criteria api used for chunk processing batch processing updating and inserting data in to oracle and db2 tables Ehcache used for secondary cache in hibernate Thread pool and blocking queues used for parallel processing Apache Axis webservices client framework used to communicate to check processing service to process checks Spring framework used configures workflow and dependency injection and transaction management Involved in designing validation framework for validating transactions Parsing swift message and generating swift messages using Wife Open Source swift Frame work Involved in design and development of report Framework using Jasper Reports Involved in developing batch jobs runs in processing engine at different schedules for processing Ack and Nak data present in Db2 tables of Legacy system Worked on migrating disbursement module to Weblogic11g container using MDB Ejb3 parallel processing using common static data cache using Oracle Coherence Tangosol Developed Search Payments User Maintenance screen using GWT Environment Java16J2EEWebservicesJMS  MQ Apache CXF Ejb XML Dom Sax Xpath Stax XSLT Adobe Flex32FlexBuilderEclipse 34 Windows Linux Oracle Sybase Apache CXF Weblogic 103ALBPM 61 ILog Jrules Junior Java Developer Byte Alpha Solutions Hyderabad Telangana June 2013 to November 2014 Description Automated Quotation System has three modules divided based on the type of logins It has a Technical Administration Module Administration Module and User Module The user module is basically to create projects prospects and quotations There is a welldesigned quotation builder and an editor to describe the quotation and to add up items to the quotation The workflow and approval process is also inbuilt in the quotation Responsibilities Involved in the Analysis Design Implementation and Testing of Software Development Life Cycle SDLC of the project Assisted the analysis team in performing the feasibility analysis of the project Designed Use Case diagrams Class diagrams and Sequence diagrams and Object Diagrams in the detailed design phase of the project using Rational Rose 40 Developed presentation layer of the project using HTML JSP 20 JSTL and JavaScript technologies Developed complete Business tier using Stateless and Stateful Session beans with EJB 20 standards using Web Sphere Studio Application Developer WSAD 50 Used various J2EE design patterns like DTO DAO and Business Delegate Service Locator Session Facade Singleton and Factory patterns Consumed Web Service for transferring data between different applications Used ObjectRelational mapping Hibernate 30 framework as the persistence layer for interacting with Oracle  Extensively used IBM Web Sphere 50 while writing code and for creating Data Sources Written complex SQL queries stored procedures functions and triggers in PLSQL Configured and used Log4J for logging all the debugging and error information Involved writing code for Request Processor class to extend the functionality of struts Controller Developed Ant build scripts for compiling and building the project Used IBM Web Sphere 50 for deploying the application Used CVS Repository for Version Control Created test plans and JUnit test cases and test suite for testing the application Participated in the production support and maintenance of the project Environment J2EE JavaJDK JDBC JSP Struts 20 Web Services SOAP REST JavaScript CSS JNDI JavaBeans XML XSLT Oracle 10g TOAD Eclipse HTML DHTML Windows JAXB MySQL IBM WebSphere HTML CSS Spring 30 Hibernate 356 Maven JUnit Log4j SVN Servlets jQuery JSP Education Bachelors in EDUCATION Information Technology Jawaharlal Nehru Technological University Hyderabad Telangana Skills Ejb J2ee Java Spring Jax Jaxrpc Jaxws Jboss Jms Jndi jquery Jsf Jsp Jstl Jta Rmi Servlets Struts C Git Additional Information Technical Proficiency Languages C C Java SQL and PLSQL Enterprise Java Java J2EE Swing RMI Sockets JDBC Servlets JSP JMS Java Beans JSTL JSF Struts EJB Spring JTA JNDI and JPA Tools Frameworks Spring MVC Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J SOA Jasper reports SOAP UI Spring Boot Spring Batch Spring Security and Spring Data Databases Oracle 8i10g11g Sybase SQL Server 70 2000 DB2 MySQL and MS Access 2000 Web Development HTML XHTML CSS XML XSD XSLXSLT SAXDOM AJAX JSON Scripting Language Shell Script bash Perl JavaScript jQuery AngularJS WebApp Servers Web Sphere Apache Tomcat JBoss WebLogic Tools Eclipse30 Net Beans50 Clear Case Clear Quest CVS SVN Perforce Sub Version Dream weaver 2000 Edit plus VISIO JUnit JMeter Web Services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Apache Axis2 Apache CFX JMS MQ Cloud Computing VPC S3 Route53 Direct Connect VPC SNS Elastic Beanstalk  Version Control GIT CVS SVN Rational clear case",
    "entities": [
        "Micro Services",
        "Amazon IAM",
        "Writing",
        "Centralized Configuration Load Balancing ServicetoService",
        "System Analysis Design Configuration",
        "UI User",
        "JMS",
        "UOE",
        "Spring IOC",
        "Tibco EMS",
        "Object Diagrams",
        "JSON",
        "IBM",
        "Web Sphere Studio Application Developer",
        "J2EE technologies Experience",
        "Trade Executions Aks",
        "jQuery JSP Education Bachelors",
        "XML",
        "Nehru Technological University",
        "Apache Camel Involved",
        "Docker micro services",
        "Factory",
        "Stateless",
        "JUnit",
        "Amazon",
        "Developed Angular Components Services",
        "Singleton Session Facade Data Access Objects",
        "REST Http",
        "Ehcache",
        "java Developer",
        "Oracle Coherence",
        "Assisted",
        "Developed",
        "JProfiler",
        "StAX API",
        "Transaction Initiation Sanctions FXEngine Funding and Disbursement Responsibilities XSLT",
        "Goms JSON",
        "NIO Generic",
        "MultiThreading",
        "UML",
        "Responsibilities Involved",
        "OMS",
        "Used CVS Repository for Version Control Created",
        "Response",
        "Waterfall",
        "Restful",
        "EDUCATION Information Technology",
        "MBeans Processing Engine",
        "Stream API",
        "MQ",
        "Sequence",
        "Windows Linux Oracle",
        "Health Expertise",
        "SOA",
        "Feign Service Registry",
        "MQ Apache",
        "JSP",
        "SOA Expertise",
        "Par Structured Equity Trades",
        "Business Delegate Service",
        "Banking Finance Ecommerce",
        "SVN Servlets",
        "MySQL and MS Access 2000",
        "CPU",
        "Docker",
        "GWT Environment",
        "Apache Camel Smook Data",
        "Present Unified Order Entry UOE",
        "Oracle 10",
        "MVC",
        "CVS Git SVN",
        "Supports Block Trading",
        "EJB",
        "JTA JNDI",
        "API",
        "Sybase",
        "MQ Routing",
        "ITP",
        "EMS",
        "Corporate Bonds US Agencies Bonds Municipal Bonds",
        "Filters",
        "GOMS Rest Endpoint",
        "Oracle Reports Technical",
        "AWS",
        "Sprints",
        "Oracle",
        "Developed Micro",
        "Terraform Hands",
        "Workflows",
        "Amazon SNS",
        "SAX",
        "CXF",
        "SOA Jasper",
        "SQL",
        "Jasper Reports Crystal Reports",
        "Bayonne NJ",
        "JAXRS",
        "Chicago",
        "Rest Endpoint",
        "Standard XML",
        "VISIO",
        "SQS",
        "DTO DAO",
        "UOL",
        "BootApache",
        "JavaScript Servlets",
        "DOM Good",
        "Description Institutional Trading",
        "Swift Payments",
        "Technical Administration Module Administration Module",
        "Developed Trade Execution",
        "Fx",
        "JavaScript",
        "Oracle Coherence Tangosol Developed Search Payments User Maintenance",
        "UI",
        "Swagger Maven Windows LinuxDB2Sql",
        "Docker Hands",
        "XSD",
        "Docker Machine",
        "Tables Packages Stored Procedures Functions Triggers Indexes Constraints Materialized Views",
        "Oracle RDBMS",
        "Active Directory AD Services Worked",
        "FINRA",
        "REST",
        "User Module",
        "Amazon EC2 Involved",
        "TOAD",
        "Object Oriented Analysis and Design OOAD",
        "Streams Functional Interfaces"
    ],
    "experience": "Experience on SDLC process that includes translation of requirements into functional and technical specifications Designing Developing Testing Implementation Post Production support using development methodologies like Waterfall and Agile Experience in System Analysis Design Configuration Code management and maintenance in the sectors of Banking Finance Ecommerce and Health Expertise in DOM manipulation using JavaScript DOJO jQuery Experience on spring modules like Spring IOC and Knowledge on Spring DAO ORM and AOP Hand on experience with Restful web services used JAXRS to implement RESTful applications in Java Extensive experience in working with SOA architecture and web services SOAP WSDL UDDI using Apache Axis Experience with automation deployment using Terraform Hands on experience with Docker Hands on experience with Spring Spring MVC Struts Good knowledge on Active Directory AD Services Worked and knowledge on protocols HTTP HTTPS FTP SMTP Good knowledge on TCPIP protocols and TCPIP model Good knowledge on issue tracking product JIRA Experience on architectures like ModelViewController MVC ServiceOrientedArchitecture SOA Expertise in implementing various J2EE design patterns like Singleton Session Facade Data Access Objects DAO Factory Data Transfer Object DTO and Business Delegate in the development of MultiTier Distributed Applications Developed J2EE applications by using the IDEs such as Eclipse NetBeans and IntelliJ Experience in deploying applications using Application Servers like Web Logic JBOSS Oracle App Server and web server like IBM WebSphere Apache Tomcat Good knowledge in usage of version controls such as CVS Git SVN and ClearCase Extensive experience in Oracle RDBMS design and developing stored procedures packages triggers cursors using SQL and PLSQL Expertise in XML Technologies XML XSLT XSD and Worked on parsers like JAXB JAXP SAX and DOM Good knowledge in log4J implementation to persist the data into log files and experience with ant and maven for the build and deployment of applications Well versed in developing various database objects like Tables Packages Stored Procedures Functions Triggers Indexes Constraints Materialized Views and others in Oracle 10 g database IBM DB2 database Extensive involvement in development and Performance tuning of SQL and PLSQL scripts Experience on Jasper Reports Crystal Reports and knowledge on Oracle Reports Technical expertise in the areas of Object Oriented Analysis and Design OOAD Using different methodologies and UML using rational rose Excellent team player with good analytical strategic planning and interpersonal and communication skills Highly motivated enthusiastic and selfstarter Work Experience java Developer Morgan Stanly Chicago IL December 2017 to Present Unified Order Entry UOE application is primarily responsible for handling all the trading action on orders beginning at new order creation UOE is centralized application for different Financial products such as equities options fixed come and mutual funds UOL keeps track of an orders various transition states from order creation onwards primarily users are financial advisors who creates orders and monitors their order statuses for making meaningful business decisions MTE as per FINRA regulations amendment to rule 2232Customer Confirmations that require member firms to disclose additional transactionrelated information to retailnoninstitutional customers for trades in certain fixed income securities Products in scope Corporate Bonds US Agencies Bonds Municipal Bonds 10 Par Structured Equity Trades from all source systems sent to BondWave vendor solution via Rest API to capture the Enriched trades BondWave handles all the trade matching and calculations of PMPCP At the end of day BondWave will have a batch job that generates the copybook files feed that will get sent to confirms via MTE NDM transmission for processing of the client disclosures Responsibilities Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Worked on Java functional programming concepts like Streams Functional Interfaces new date time API and lambda expressions Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Implemented JMS Listener on MQ Routing functionalities and invoking corresponding web service using Apache Camel Core Java with Concurrent API is used extensively for parallel processing and chunk processing Apache camel Kafka end point used to publish trade flow to Apache Kafka TFM Transaction Forensic Monitor to track transaction details Developed component to receive inbound data from different source systems in different formats fixed lengthxml normalized to GOMS format using Apache Camel Smook Data Format Developed component send formatted Goms JSON trade data to GOMS Rest Endpoint to capture enriched data Response from Rest Endpoint publishes to MQ using Apache Camel Involved in developing several Fix message New Order single Execution Confirmation Used Angular router and implemented module wide routing and created different forms using Angular data driven and template driven forms Developed Angular Components Services and Filters and took part in developing unit test and integration test cases using Jasmine Karma Consumed REST services using Angular HTTP and performed various REST Http operations for data retrievals and updates Implemented Cloud capabilities like Centralized Configuration Load Balancing ServicetoService call using Feign Service Registry and Discovery using Eureka in Spring Cloud Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed Micro services APIs using Spring Cloud Spring Security Spring Boot Spring Integration Spring JDBC used retrieve and update inserting data in oracle database with use of stored procs Gulp is used to build and Bower is used for managing dependencies JSON requestresponse from UI is processed using Spring Boot Restful features with micro services Architecture and Spring Data Jpa is used to saveretrieve the data in the backend Oracle Coherence used to store Reference Data Used Apache Maven as a build tool for building the Restful webservice Environment Java 18 concurrent package lambda expressions streams J2ee web servicesJMSXMLDom Sax Xpath Stax XSLTIBM MQKafka 20 Spring BootApache Camel 22 Spring Batch Spring Data JPA EHCacheJprofilerAngular6BowerGulpEclipseWebStormGITStashBitbucketJenkinsConfluenceJiraSourceTree Swagger Maven Windows LinuxDB2Sql Server Coherence java Developer TD Ameritrade June 2016 to December 2017 Description Institutional Trading platform ITP is used to capture manage and execute trades of financial instruments like equities mutual funds and options for advisors on behalf of their clients Supports Block Trading with advisory account and account level trading Responsibilities Build and support web applications mobile and tablet apps that provide account management trading management fees balances cash management portfolio rebalancing client document services tradeconfirms statements and tax documents and other capabilities Developed the robust scheduled billing engine to calculate the generated fees for the advisor accounts Integration with OMS system for placing new orders and canceling orders modifying orders using Fix messages Developed Trade Execution listener to receive Trade Executions Aks from OMS system and updates database Developed Allocation Engine to allocate trades to client accounts and updates Back office system with position information Designed and developed multitier custom build workflowbased web application Implemented an adaptor which receives trade alerts from CEP engine and sends to Tibco EMS queue for further processing by Message Bus Message Bus was built using Spring Integration to dequeue xml trade messages from Tibco EMS queue and sends to different channels for parsing enrichment persisting into database Core Java with Concurrent API is used extensively for parallel processing and chunk processing of trade execution data and market data and converts in to JSON and store it Mongo DB XSLT and Trax API used to convert different formats of XML to our Standard XML format and StAX API used for parsing XML messages JProfiler is used to profile he application Memory view and CPU view and Thread view are used Followed AgileScrum methodology that included iterative application development weekly Sprints and stand up meetings Consumed REST services using Angular HTTP and performed various REST Http operations for data retrievals and updates Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed Micro services APIs using Spring Cloud Spring Security Spring Boot Spring Integration Performed REST validations and created REST exception Handlers and used Postman to test REST services Developed unit test cases using Junit Spring to test REST microservices Involved in consuming SOAP based web services so that the business application can integrate with legacy applications and facilitates for future applications Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Worked on Java functional programming concepts like Streams Functional Interfaces new date time API and lambda expressions Design and implementation of different micro services and its Docker files Created and maintained Docker images and Docker containers Configuring the Docker containers and creating Docker files for different environments Docker swam used for container orchestration Amazon IAM was used to maintain the user credentials and involved in creating custom IAM policies to various groups defined within the organization To send emails to users developed Java API to interact with the Amazon SQS and Amazon SNS created Docker machine in Amazon EC2 instance and created Docker containers in Docker Machine running in Amazon EC2 Involved in Creating cloud formation templates using AWS Cloud formation and leveraged Elastic container services to run Docker micro services in AWS Used MultiThreading and collection framework including List Map etc Used Apache Maven as a build tool for building the Restful webservice Environment Java 18 concurrent package lambda expressions streams JavaScript Servlets JSPs JDBC EJB JPA Hibernate JAXB JAXRS SQL Oracle 10 g SVN GitHub Ant ServiceNow Spring Boot Spring BatchJMSTibco EMS Autosys Eclipse Unix JUnit Log4J Anuglar 6HTML CSS and Bootstrap Docker AWS Swagger Microservices JIRA Jenkins java Developer Citigroup Jersey City NJ January 2015 to May 2016 World Link Next Gen GPP Word Link Next Gen is a rewrite of existing mainframe application world Link using J2EE This application main purpose is to send payments across 160 countries with multicurrency capabilities Payments can be sent in the different types of disbursement modes Ach Wire Mass pay Remote Check Cash The application has the capability to book the Fx deals in multiple currencies and across multiple counterparties Also the system calculates the corresponding settlement date with counterparty after considering weekends and holidays This Application divided in to three parts UI User interface Payment Processing Engine Statemachine and Report Engine Payment Processing engine Statemachine Statemachine processes the payments from different types of files Fixed length XML Swift and MQ messages Swift Payments are routed to different workflow components based on routing logic Workflows are configured in spring container and initiated by thread pool All workflows are monitored by MBeans Processing Engine has following modules Transaction Initiation Sanctions FXEngine Funding and Disbursement Responsibilities XSLT and Trax API used to convert the different formats of XML to our Standard XML format Used STAX Pull parsing API of XML for parsing the XML messages and generated model object Developed generic component for reading files and writing to files using Java IO and NIO Generic component for reading from IBM MQ and Writing to MQ queues Jboss cached used to maintain static data set up data in different nodes and replicated data between the nodes Hibernate associations and criteria api used for chunk processing batch processing updating and inserting data in to oracle and db2 tables Ehcache used for secondary cache in hibernate Thread pool and blocking queues used for parallel processing Apache Axis webservices client framework used to communicate to check processing service to process checks Spring framework used configures workflow and dependency injection and transaction management Involved in designing validation framework for validating transactions Parsing swift message and generating swift messages using Wife Open Source swift Frame work Involved in design and development of report Framework using Jasper Reports Involved in developing batch jobs runs in processing engine at different schedules for processing Ack and Nak data present in Db2 tables of Legacy system Worked on migrating disbursement module to Weblogic11 g container using MDB Ejb3 parallel processing using common static data cache using Oracle Coherence Tangosol Developed Search Payments User Maintenance screen using GWT Environment Java16J2EEWebservicesJMS   MQ Apache CXF Ejb XML Dom Sax Xpath Stax XSLT Adobe Flex32FlexBuilderEclipse 34 Windows Linux Oracle Sybase Apache CXF Weblogic 103ALBPM 61 ILog Jrules Junior Java Developer Byte Alpha Solutions Hyderabad Telangana June 2013 to November 2014 Description Automated Quotation System has three modules divided based on the type of logins It has a Technical Administration Module Administration Module and User Module The user module is basically to create projects prospects and quotations There is a welldesigned quotation builder and an editor to describe the quotation and to add up items to the quotation The workflow and approval process is also inbuilt in the quotation Responsibilities Involved in the Analysis Design Implementation and Testing of Software Development Life Cycle SDLC of the project Assisted the analysis team in performing the feasibility analysis of the project Designed Use Case diagrams Class diagrams and Sequence diagrams and Object Diagrams in the detailed design phase of the project using Rational Rose 40 Developed presentation layer of the project using HTML JSP 20 JSTL and JavaScript technologies Developed complete Business tier using Stateless and Stateful Session beans with EJB 20 standards using Web Sphere Studio Application Developer WSAD 50 Used various J2EE design patterns like DTO DAO and Business Delegate Service Locator Session Facade Singleton and Factory patterns Consumed Web Service for transferring data between different applications Used ObjectRelational mapping Hibernate 30 framework as the persistence layer for interacting with Oracle   Extensively used IBM Web Sphere 50 while writing code and for creating Data Sources Written complex SQL queries stored procedures functions and triggers in PLSQL Configured and used Log4J for logging all the debugging and error information Involved writing code for Request Processor class to extend the functionality of struts Controller Developed Ant build scripts for compiling and building the project Used IBM Web Sphere 50 for deploying the application Used CVS Repository for Version Control Created test plans and JUnit test cases and test suite for testing the application Participated in the production support and maintenance of the project Environment J2EE JavaJDK JDBC JSP Struts 20 Web Services SOAP REST JavaScript CSS JNDI JavaBeans XML XSLT Oracle 10 g TOAD Eclipse HTML DHTML Windows JAXB MySQL IBM WebSphere HTML CSS Spring 30 Hibernate 356 Maven JUnit Log4j SVN Servlets jQuery JSP Education Bachelors in EDUCATION Information Technology Jawaharlal Nehru Technological University Hyderabad Telangana Skills Ejb J2ee Java Spring Jax Jaxrpc Jaxws Jboss Jms Jndi jquery Jsf Jsp Jstl Jta Rmi Servlets Struts C Git Additional Information Technical Proficiency Languages C C Java SQL and PLSQL Enterprise Java Java J2EE Swing RMI Sockets JDBC Servlets JSP JMS Java Beans JSTL JSF Struts EJB Spring JTA JNDI and JPA Tools Frameworks Spring MVC Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J SOA Jasper reports SOAP UI Spring Boot Spring Batch Spring Security and Spring Data Databases Oracle 8i10g11 g Sybase SQL Server 70 2000 DB2 MySQL and MS Access 2000 Web Development HTML XHTML CSS XML XSD XSLXSLT SAXDOM AJAX JSON Scripting Language Shell Script bash Perl JavaScript jQuery AngularJS WebApp Servers Web Sphere Apache Tomcat JBoss WebLogic Tools Eclipse30 Net Beans50 Clear Case Clear Quest CVS SVN Perforce Sub Version Dream weaver 2000 Edit plus VISIO JUnit JMeter Web Services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Apache Axis2 Apache CFX JMS MQ Cloud Computing VPC S3 Route53 Direct Connect VPC SNS Elastic Beanstalk   Version Control GIT CVS SVN Rational clear case",
    "extracted_keywords": [
        "java",
        "Developer",
        "ljavaspan",
        "span",
        "lDeveloperspan",
        "java",
        "Developer",
        "Morgan",
        "Stanly",
        "Bayonne",
        "NJ",
        "years",
        "involvement",
        "design",
        "development",
        "deployment",
        "test",
        "client",
        "server",
        "web",
        "software",
        "applications",
        "J2SE",
        "JEE",
        "J2EE",
        "technologies",
        "Experience",
        "SDLC",
        "process",
        "translation",
        "requirements",
        "specifications",
        "Designing",
        "Developing",
        "Testing",
        "Implementation",
        "Post",
        "Production",
        "support",
        "development",
        "methodologies",
        "Waterfall",
        "Agile",
        "Experience",
        "System",
        "Analysis",
        "Design",
        "Configuration",
        "Code",
        "management",
        "maintenance",
        "sectors",
        "Banking",
        "Finance",
        "Ecommerce",
        "Health",
        "Expertise",
        "DOM",
        "manipulation",
        "JavaScript",
        "DOJO",
        "jQuery",
        "Experience",
        "spring",
        "modules",
        "Spring",
        "IOC",
        "Knowledge",
        "Spring",
        "DAO",
        "ORM",
        "AOP",
        "Hand",
        "experience",
        "Restful",
        "web",
        "services",
        "JAXRS",
        "applications",
        "Java",
        "experience",
        "SOA",
        "architecture",
        "web",
        "services",
        "SOAP",
        "WSDL",
        "UDDI",
        "Apache",
        "Axis",
        "Experience",
        "automation",
        "deployment",
        "Terraform",
        "Hands",
        "experience",
        "Docker",
        "Hands",
        "experience",
        "Spring",
        "Spring",
        "MVC",
        "Struts",
        "knowledge",
        "Active",
        "Directory",
        "AD",
        "Services",
        "Worked",
        "knowledge",
        "protocols",
        "HTTP",
        "HTTPS",
        "FTP",
        "SMTP",
        "knowledge",
        "TCPIP",
        "protocols",
        "model",
        "knowledge",
        "issue",
        "product",
        "JIRA",
        "Experience",
        "architectures",
        "ModelViewController",
        "MVC",
        "ServiceOrientedArchitecture",
        "SOA",
        "Expertise",
        "J2EE",
        "design",
        "patterns",
        "Singleton",
        "Session",
        "Facade",
        "Data",
        "Access",
        "DAO",
        "Factory",
        "Data",
        "Transfer",
        "Object",
        "DTO",
        "Business",
        "Delegate",
        "development",
        "MultiTier",
        "Distributed",
        "Applications",
        "J2EE",
        "applications",
        "IDEs",
        "Eclipse",
        "NetBeans",
        "IntelliJ",
        "Experience",
        "applications",
        "Application",
        "Servers",
        "Web",
        "Logic",
        "JBOSS",
        "Oracle",
        "App",
        "Server",
        "web",
        "server",
        "IBM",
        "WebSphere",
        "Apache",
        "Tomcat",
        "knowledge",
        "usage",
        "version",
        "controls",
        "CVS",
        "Git",
        "SVN",
        "ClearCase",
        "experience",
        "Oracle",
        "RDBMS",
        "design",
        "procedures",
        "packages",
        "cursors",
        "SQL",
        "PLSQL",
        "Expertise",
        "XML",
        "Technologies",
        "XML",
        "XSLT",
        "XSD",
        "parsers",
        "JAXB",
        "JAXP",
        "SAX",
        "DOM",
        "knowledge",
        "implementation",
        "data",
        "log",
        "files",
        "experience",
        "ant",
        "maven",
        "build",
        "deployment",
        "applications",
        "database",
        "objects",
        "Tables",
        "Packages",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Indexes",
        "Constraints",
        "Views",
        "others",
        "Oracle",
        "g",
        "database",
        "IBM",
        "DB2",
        "database",
        "involvement",
        "development",
        "Performance",
        "tuning",
        "SQL",
        "PLSQL",
        "Experience",
        "Jasper",
        "Reports",
        "Crystal",
        "Reports",
        "knowledge",
        "Oracle",
        "Reports",
        "expertise",
        "areas",
        "Object",
        "Oriented",
        "Analysis",
        "Design",
        "OOAD",
        "methodologies",
        "UML",
        "Excellent",
        "team",
        "player",
        "planning",
        "communication",
        "skills",
        "Work",
        "Experience",
        "java",
        "Developer",
        "Morgan",
        "Stanly",
        "Chicago",
        "IL",
        "December",
        "Present",
        "Unified",
        "Order",
        "Entry",
        "UOE",
        "application",
        "trading",
        "action",
        "orders",
        "order",
        "creation",
        "UOE",
        "application",
        "products",
        "equities",
        "options",
        "come",
        "funds",
        "UOL",
        "track",
        "orders",
        "transition",
        "states",
        "order",
        "creation",
        "users",
        "advisors",
        "orders",
        "order",
        "statuses",
        "business",
        "decisions",
        "MTE",
        "FINRA",
        "regulations",
        "amendment",
        "Confirmations",
        "member",
        "firms",
        "information",
        "customers",
        "trades",
        "income",
        "securities",
        "Products",
        "scope",
        "Corporate",
        "Bonds",
        "US",
        "Agencies",
        "Bonds",
        "Municipal",
        "Bonds",
        "Par",
        "Structured",
        "Equity",
        "Trades",
        "source",
        "systems",
        "BondWave",
        "vendor",
        "solution",
        "Rest",
        "API",
        "trades",
        "BondWave",
        "trade",
        "matching",
        "calculations",
        "PMPCP",
        "end",
        "day",
        "BondWave",
        "batch",
        "job",
        "copybook",
        "files",
        "feed",
        "confirms",
        "MTE",
        "NDM",
        "transmission",
        "processing",
        "client",
        "Responsibilities",
        "Java",
        "Lambda",
        "expressions",
        "Stream",
        "API",
        "functionalstyle",
        "operations",
        "streams",
        "elements",
        "Java",
        "programming",
        "concepts",
        "Streams",
        "Functional",
        "Interfaces",
        "date",
        "time",
        "API",
        "expressions",
        "Java",
        "Lambda",
        "expressions",
        "Stream",
        "API",
        "functionalstyle",
        "operations",
        "streams",
        "elements",
        "JMS",
        "Listener",
        "MQ",
        "Routing",
        "functionalities",
        "web",
        "service",
        "Apache",
        "Camel",
        "Core",
        "Java",
        "API",
        "processing",
        "chunk",
        "Apache",
        "camel",
        "Kafka",
        "end",
        "point",
        "trade",
        "flow",
        "Apache",
        "Kafka",
        "TFM",
        "Transaction",
        "Forensic",
        "Monitor",
        "transaction",
        "details",
        "component",
        "data",
        "source",
        "systems",
        "formats",
        "lengthxml",
        "GOMS",
        "format",
        "Apache",
        "Camel",
        "Smook",
        "Data",
        "Format",
        "Developed",
        "component",
        "Goms",
        "JSON",
        "trade",
        "data",
        "GOMS",
        "Rest",
        "Endpoint",
        "data",
        "Response",
        "Rest",
        "Endpoint",
        "publishes",
        "MQ",
        "Apache",
        "Camel",
        "Fix",
        "message",
        "New",
        "Order",
        "Execution",
        "Confirmation",
        "router",
        "module",
        "routing",
        "forms",
        "data",
        "template",
        "forms",
        "Angular",
        "Components",
        "Services",
        "Filters",
        "part",
        "unit",
        "test",
        "integration",
        "test",
        "cases",
        "Jasmine",
        "Karma",
        "Consumed",
        "REST",
        "services",
        "Angular",
        "HTTP",
        "REST",
        "Http",
        "operations",
        "data",
        "retrievals",
        "updates",
        "Cloud",
        "capabilities",
        "Centralized",
        "Configuration",
        "Load",
        "Balancing",
        "ServicetoService",
        "Feign",
        "Service",
        "Registry",
        "Discovery",
        "Eureka",
        "Spring",
        "Cloud",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "Services",
        "Spring",
        "application",
        "configuration",
        "Developed",
        "Micro",
        "services",
        "APIs",
        "Spring",
        "Cloud",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Integration",
        "Spring",
        "JDBC",
        "retrieve",
        "data",
        "oracle",
        "database",
        "use",
        "procs",
        "Gulp",
        "Bower",
        "dependencies",
        "requestresponse",
        "UI",
        "Spring",
        "Boot",
        "Restful",
        "features",
        "micro",
        "services",
        "Architecture",
        "Spring",
        "Data",
        "Jpa",
        "data",
        "Oracle",
        "Coherence",
        "Reference",
        "Data",
        "Apache",
        "Maven",
        "build",
        "tool",
        "webservice",
        "Environment",
        "Java",
        "package",
        "lambda",
        "expressions",
        "streams",
        "J2ee",
        "web",
        "Sax",
        "Xpath",
        "Stax",
        "XSLTIBM",
        "MQKafka",
        "Spring",
        "BootApache",
        "Camel",
        "Spring",
        "Batch",
        "Spring",
        "Data",
        "JPA",
        "EHCacheJprofilerAngular6BowerGulpEclipseWebStormGITStashBitbucketJenkinsConfluenceJiraSourceTree",
        "Swagger",
        "Maven",
        "Windows",
        "LinuxDB2Sql",
        "Server",
        "Coherence",
        "java",
        "Developer",
        "TD",
        "Ameritrade",
        "June",
        "December",
        "Description",
        "Institutional",
        "Trading",
        "platform",
        "trades",
        "instruments",
        "equities",
        "funds",
        "options",
        "advisors",
        "behalf",
        "clients",
        "Block",
        "Trading",
        "account",
        "account",
        "level",
        "trading",
        "Responsibilities",
        "Build",
        "support",
        "web",
        "applications",
        "tablet",
        "apps",
        "account",
        "management",
        "trading",
        "management",
        "fees",
        "cash",
        "management",
        "portfolio",
        "rebalancing",
        "client",
        "document",
        "services",
        "tradeconfirms",
        "statements",
        "tax",
        "documents",
        "capabilities",
        "billing",
        "engine",
        "fees",
        "advisor",
        "Integration",
        "OMS",
        "system",
        "orders",
        "orders",
        "orders",
        "Fix",
        "messages",
        "Developed",
        "Trade",
        "Execution",
        "listener",
        "Trade",
        "Executions",
        "Aks",
        "OMS",
        "system",
        "updates",
        "database",
        "Developed",
        "Allocation",
        "Engine",
        "trades",
        "client",
        "accounts",
        "office",
        "system",
        "position",
        "information",
        "custom",
        "web",
        "application",
        "adaptor",
        "trade",
        "alerts",
        "CEP",
        "engine",
        "Tibco",
        "EMS",
        "queue",
        "processing",
        "Message",
        "Bus",
        "Message",
        "Bus",
        "Spring",
        "Integration",
        "xml",
        "trade",
        "messages",
        "Tibco",
        "EMS",
        "queue",
        "channels",
        "enrichment",
        "database",
        "Core",
        "Java",
        "API",
        "processing",
        "chunk",
        "processing",
        "trade",
        "execution",
        "data",
        "market",
        "data",
        "converts",
        "JSON",
        "Mongo",
        "DB",
        "XSLT",
        "Trax",
        "API",
        "formats",
        "XML",
        "Standard",
        "XML",
        "format",
        "StAX",
        "API",
        "XML",
        "messages",
        "JProfiler",
        "application",
        "Memory",
        "view",
        "CPU",
        "view",
        "Thread",
        "view",
        "Followed",
        "AgileScrum",
        "methodology",
        "application",
        "development",
        "Sprints",
        "meetings",
        "Consumed",
        "REST",
        "services",
        "Angular",
        "HTTP",
        "REST",
        "Http",
        "operations",
        "data",
        "retrievals",
        "updates",
        "Spring",
        "Boot",
        "cloud",
        "Micro",
        "Services",
        "Spring",
        "application",
        "configuration",
        "Developed",
        "Micro",
        "services",
        "APIs",
        "Spring",
        "Cloud",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Integration",
        "Performed",
        "REST",
        "validations",
        "REST",
        "exception",
        "Handlers",
        "Postman",
        "REST",
        "services",
        "unit",
        "test",
        "cases",
        "Junit",
        "Spring",
        "REST",
        "microservices",
        "SOAP",
        "web",
        "services",
        "business",
        "application",
        "legacy",
        "applications",
        "facilitates",
        "applications",
        "Java",
        "Lambda",
        "expressions",
        "Stream",
        "API",
        "functionalstyle",
        "operations",
        "streams",
        "elements",
        "Java",
        "programming",
        "concepts",
        "Streams",
        "Functional",
        "Interfaces",
        "date",
        "time",
        "API",
        "lambda",
        "expressions",
        "Design",
        "implementation",
        "micro",
        "services",
        "Docker",
        "files",
        "Docker",
        "images",
        "Docker",
        "containers",
        "Docker",
        "containers",
        "Docker",
        "files",
        "environments",
        "Docker",
        "swam",
        "container",
        "orchestration",
        "Amazon",
        "IAM",
        "user",
        "credentials",
        "custom",
        "IAM",
        "policies",
        "groups",
        "organization",
        "emails",
        "users",
        "Java",
        "API",
        "Amazon",
        "SQS",
        "Amazon",
        "SNS",
        "Docker",
        "machine",
        "Amazon",
        "EC2",
        "instance",
        "Docker",
        "containers",
        "Docker",
        "Machine",
        "Amazon",
        "EC2",
        "cloud",
        "formation",
        "templates",
        "AWS",
        "Cloud",
        "formation",
        "container",
        "services",
        "Docker",
        "micro",
        "services",
        "AWS",
        "MultiThreading",
        "collection",
        "framework",
        "List",
        "Map",
        "Apache",
        "Maven",
        "build",
        "tool",
        "webservice",
        "Environment",
        "Java",
        "package",
        "lambda",
        "expressions",
        "JavaScript",
        "Servlets",
        "JSPs",
        "JDBC",
        "EJB",
        "JPA",
        "Hibernate",
        "JAXB",
        "JAXRS",
        "SQL",
        "Oracle",
        "g",
        "SVN",
        "GitHub",
        "Ant",
        "ServiceNow",
        "Spring",
        "Boot",
        "Spring",
        "BatchJMSTibco",
        "EMS",
        "Autosys",
        "Eclipse",
        "Unix",
        "JUnit",
        "Log4J",
        "Anuglar",
        "6HTML",
        "CSS",
        "Bootstrap",
        "Docker",
        "Swagger",
        "Microservices",
        "JIRA",
        "Jenkins",
        "java",
        "Developer",
        "Citigroup",
        "Jersey",
        "City",
        "NJ",
        "January",
        "May",
        "World",
        "Link",
        "Next",
        "Gen",
        "GPP",
        "Word",
        "Link",
        "Next",
        "Gen",
        "rewrite",
        "mainframe",
        "application",
        "world",
        "Link",
        "J2EE",
        "application",
        "purpose",
        "payments",
        "countries",
        "multicurrency",
        "capabilities",
        "Payments",
        "types",
        "disbursement",
        "Ach",
        "Wire",
        "Mass",
        "Remote",
        "Check",
        "Cash",
        "application",
        "capability",
        "Fx",
        "deals",
        "currencies",
        "counterparties",
        "system",
        "settlement",
        "date",
        "counterparty",
        "weekends",
        "holidays",
        "Application",
        "parts",
        "UI",
        "User",
        "interface",
        "Payment",
        "Processing",
        "Engine",
        "Statemachine",
        "Report",
        "Engine",
        "Payment",
        "Processing",
        "engine",
        "Statemachine",
        "Statemachine",
        "payments",
        "types",
        "files",
        "length",
        "XML",
        "Swift",
        "MQ",
        "messages",
        "Swift",
        "Payments",
        "workflow",
        "components",
        "logic",
        "Workflows",
        "spring",
        "container",
        "thread",
        "pool",
        "workflows",
        "MBeans",
        "Processing",
        "Engine",
        "modules",
        "Transaction",
        "Initiation",
        "Sanctions",
        "FXEngine",
        "Funding",
        "Disbursement",
        "Responsibilities",
        "XSLT",
        "Trax",
        "API",
        "formats",
        "XML",
        "Standard",
        "XML",
        "format",
        "STAX",
        "API",
        "XML",
        "XML",
        "messages",
        "model",
        "object",
        "component",
        "files",
        "files",
        "Java",
        "IO",
        "NIO",
        "Generic",
        "component",
        "IBM",
        "MQ",
        "Writing",
        "MQ",
        "queues",
        "Jboss",
        "data",
        "data",
        "nodes",
        "data",
        "nodes",
        "Hibernate",
        "associations",
        "criteria",
        "api",
        "chunk",
        "processing",
        "batch",
        "processing",
        "data",
        "oracle",
        "db2",
        "tables",
        "Ehcache",
        "cache",
        "hibernate",
        "Thread",
        "pool",
        "queues",
        "processing",
        "Apache",
        "Axis",
        "webservices",
        "client",
        "framework",
        "processing",
        "service",
        "checks",
        "Spring",
        "framework",
        "configures",
        "dependency",
        "injection",
        "transaction",
        "management",
        "validation",
        "framework",
        "transactions",
        "message",
        "messages",
        "Wife",
        "Open",
        "Source",
        "Frame",
        "work",
        "design",
        "development",
        "report",
        "Framework",
        "Jasper",
        "Reports",
        "batch",
        "jobs",
        "processing",
        "engine",
        "schedules",
        "Ack",
        "Nak",
        "data",
        "tables",
        "Legacy",
        "system",
        "disbursement",
        "module",
        "Weblogic11",
        "g",
        "container",
        "MDB",
        "Ejb3",
        "processing",
        "data",
        "cache",
        "Oracle",
        "Coherence",
        "Tangosol",
        "Developed",
        "Search",
        "Payments",
        "User",
        "Maintenance",
        "screen",
        "GWT",
        "Environment",
        "Java16J2EEWebservicesJMS",
        "MQ",
        "Apache",
        "CXF",
        "Ejb",
        "XML",
        "Dom",
        "Sax",
        "Xpath",
        "Stax",
        "XSLT",
        "Adobe",
        "Flex32FlexBuilderEclipse",
        "Windows",
        "Linux",
        "Oracle",
        "Sybase",
        "Apache",
        "CXF",
        "Weblogic",
        "ILog",
        "Jrules",
        "Junior",
        "Java",
        "Developer",
        "Byte",
        "Alpha",
        "Solutions",
        "Hyderabad",
        "Telangana",
        "June",
        "November",
        "Description",
        "Automated",
        "Quotation",
        "System",
        "modules",
        "type",
        "logins",
        "Technical",
        "Administration",
        "Module",
        "Administration",
        "Module",
        "User",
        "Module",
        "user",
        "module",
        "projects",
        "prospects",
        "quotations",
        "quotation",
        "builder",
        "editor",
        "quotation",
        "items",
        "quotation",
        "workflow",
        "approval",
        "process",
        "quotation",
        "Responsibilities",
        "Analysis",
        "Design",
        "Implementation",
        "Testing",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "project",
        "analysis",
        "team",
        "feasibility",
        "analysis",
        "project",
        "Use",
        "Case",
        "diagrams",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "Object",
        "Diagrams",
        "design",
        "phase",
        "project",
        "Rational",
        "Rose",
        "presentation",
        "layer",
        "project",
        "HTML",
        "JSP",
        "JSTL",
        "JavaScript",
        "technologies",
        "Business",
        "tier",
        "Stateless",
        "Stateful",
        "Session",
        "beans",
        "EJB",
        "standards",
        "Web",
        "Sphere",
        "Studio",
        "Application",
        "Developer",
        "WSAD",
        "J2EE",
        "design",
        "patterns",
        "DTO",
        "DAO",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "Session",
        "Facade",
        "Singleton",
        "Factory",
        "patterns",
        "Consumed",
        "Web",
        "Service",
        "data",
        "applications",
        "mapping",
        "Hibernate",
        "framework",
        "persistence",
        "layer",
        "Oracle",
        "IBM",
        "Web",
        "Sphere",
        "code",
        "Data",
        "Sources",
        "SQL",
        "queries",
        "procedures",
        "functions",
        "triggers",
        "PLSQL",
        "Configured",
        "Log4J",
        "debugging",
        "error",
        "information",
        "code",
        "Request",
        "Processor",
        "class",
        "functionality",
        "struts",
        "Controller",
        "Developed",
        "Ant",
        "scripts",
        "project",
        "IBM",
        "Web",
        "Sphere",
        "application",
        "CVS",
        "Repository",
        "Version",
        "Control",
        "test",
        "plans",
        "JUnit",
        "test",
        "cases",
        "test",
        "suite",
        "application",
        "production",
        "support",
        "maintenance",
        "project",
        "Environment",
        "J2EE",
        "JDBC",
        "JSP",
        "Struts",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "JavaScript",
        "CSS",
        "JNDI",
        "JavaBeans",
        "XML",
        "XSLT",
        "Oracle",
        "g",
        "TOAD",
        "Eclipse",
        "HTML",
        "DHTML",
        "Windows",
        "JAXB",
        "MySQL",
        "IBM",
        "WebSphere",
        "HTML",
        "CSS",
        "Spring",
        "Hibernate",
        "Maven",
        "JUnit",
        "Log4j",
        "SVN",
        "Servlets",
        "jQuery",
        "JSP",
        "Education",
        "Bachelors",
        "EDUCATION",
        "Information",
        "Technology",
        "Jawaharlal",
        "Nehru",
        "Technological",
        "University",
        "Hyderabad",
        "Telangana",
        "Skills",
        "Ejb",
        "J2ee",
        "Java",
        "Spring",
        "Jax",
        "Jaxrpc",
        "Jaxws",
        "Jboss",
        "Jms",
        "Jndi",
        "jquery",
        "Jsf",
        "Jsp",
        "Jstl",
        "Jta",
        "Rmi",
        "Servlets",
        "Struts",
        "C",
        "Git",
        "Additional",
        "Information",
        "Technical",
        "Proficiency",
        "Languages",
        "C",
        "C",
        "Java",
        "SQL",
        "PLSQL",
        "Enterprise",
        "Java",
        "Java",
        "J2EE",
        "Swing",
        "RMI",
        "Sockets",
        "JDBC",
        "Servlets",
        "JSP",
        "JMS",
        "Java",
        "Beans",
        "JSTL",
        "JSF",
        "Struts",
        "EJB",
        "Spring",
        "JTA",
        "JNDI",
        "JPA",
        "Tools",
        "Frameworks",
        "Spring",
        "MVC",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "JMS",
        "JSF",
        "SOA",
        "Jasper",
        "reports",
        "UI",
        "Spring",
        "Boot",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Spring",
        "Data",
        "Oracle",
        "8i10g11",
        "g",
        "Sybase",
        "SQL",
        "Server",
        "DB2",
        "MySQL",
        "MS",
        "Access",
        "Web",
        "Development",
        "HTML",
        "XHTML",
        "CSS",
        "XML",
        "XSD",
        "XSLXSLT",
        "SAXDOM",
        "AJAX",
        "JSON",
        "Scripting",
        "Language",
        "Shell",
        "Script",
        "bash",
        "Perl",
        "JavaScript",
        "jQuery",
        "WebApp",
        "Servers",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "JBoss",
        "WebLogic",
        "Tools",
        "Eclipse30",
        "Net",
        "Beans50",
        "Clear",
        "Case",
        "Clear",
        "Quest",
        "CVS",
        "SVN",
        "Perforce",
        "Sub",
        "Version",
        "Dream",
        "weaver",
        "Edit",
        "VISIO",
        "JUnit",
        "JMeter",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "UDDI",
        "WSDL",
        "JAXRPC",
        "JAXRS",
        "JAXWS",
        "JAXB",
        "Apache",
        "Axis2",
        "Apache",
        "CFX",
        "JMS",
        "MQ",
        "Cloud",
        "Computing",
        "VPC",
        "S3",
        "Route53",
        "Direct",
        "Connect",
        "VPC",
        "SNS",
        "Elastic",
        "Beanstalk",
        "Version",
        "Control",
        "GIT",
        "CVS",
        "SVN",
        "Rational",
        "case"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:58:38.913114",
    "resume_data": "java Developer span ljavaspan span lDeveloperspan java Developer Morgan Stanly Bayonne NJ 6 years of involvement in design development deployment and test of client server web based and distributed software applications by using J2SE JEE and J2EE technologies Experience on SDLC process that includes translation of requirements into functional and technical specifications Designing Developing Testing Implementation Post Production support using development methodologies like Waterfall and Agile Experience in System Analysis Design Configuration Code management and maintenance in the sectors of Banking Finance Ecommerce and Health Expertise in DOM manipulation using JavaScript DOJO jQuery Experience on spring modules like Spring IOC and Knowledge on Spring DAO ORM and AOP Hand on experience with Restful web services used JAXRS to implement RESTful applications in Java Extensive experience in working with SOA architecture and web services SOAP WSDL UDDI using Apache Axis Experience with automation deployment using Terraform Hands on experience with Docker Hands on experience with Spring Spring MVC Struts Good knowledge on Active Directory AD Services Worked and knowledge on protocols HTTP HTTPS FTP SMTP Good knowledge on TCPIP protocols and TCPIP model Good knowledge on issue tracking product JIRA Experience on architectures like ModelViewController MVC ServiceOrientedArchitecture SOA Expertise in implementing various J2EE design patterns like Singleton Session Facade Data Access Objects DAO Factory Data Transfer Object DTO and Business Delegate in the development of MultiTier Distributed Applications Developed J2EE applications by using the IDEs such as Eclipse NetBeans and IntelliJ Experience in deploying applications using Application Servers like Web Logic JBOSS Oracle App Server and web server like IBM WebSphere Apache Tomcat Good knowledge in usage of version controls such as CVS Git SVN and ClearCase Extensive experience in Oracle RDBMS design and developing stored procedures packages triggers cursors using SQL and PLSQL Expertise in XML Technologies XML XSLT XSD and Worked on parsers like JAXB JAXP SAX and DOM Good knowledge in log4J implementation to persist the data into log files and experience with ant and maven for the build and deployment of applications Well versed in developing various database objects like Tables Packages Stored Procedures Functions Triggers Indexes Constraints Materialized Views and others in Oracle 10g database IBM DB2 database Extensive involvement in development and Performance tuning of SQL and PLSQL scripts Experience on Jasper Reports Crystal Reports and knowledge on Oracle Reports Technical expertise in the areas of Object Oriented Analysis and Design OOAD Using different methodologies and UML using rational rose Excellent team player with good analytical strategic planning and interpersonal and communication skills Highly motivated enthusiastic and selfstarter Work Experience java Developer Morgan Stanly Chicago IL December 2017 to Present Unified Order Entry UOE application is primarily responsible for handling all the trading action on orders beginning at new order creation UOE is centralized application for different Financial products such as equities options fixed come and mutual funds UOL keeps track of an orders various transition states from order creation onwards primarily users are financial advisors who creates orders and monitors their order statuses for making meaningful business decisions MTE as per FINRA regulations amendment to rule 2232Customer Confirmations that require member firms to disclose additional transactionrelated information to retailnoninstitutional customers for trades in certain fixed income securities Products in scope Corporate Bonds US Agencies Bonds Municipal Bonds 10 Par Structured Equity Trades from all source systems sent to BondWave vendor solution via Rest API to capture the Enriched trades BondWave handles all the trade matching and calculations of PMPCP At the end of day BondWave will have a batch job that generates the copybook files feed that will get sent to confirms via MTE NDM transmission for processing of the client disclosures Responsibilities Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Worked on Java functional programming concepts like Streams Functional Interfaces new date time API and lambda expressions Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Implemented JMS Listener on MQ Routing functionalities and invoking corresponding web service using Apache Camel Core Java with Concurrent API is used extensively for parallel processing and chunk processing Apache camel Kafka end point used to publish trade flow to Apache Kafka TFM Transaction Forensic Monitor to track transaction details Developed component to receive inbound data from different source systems in different formats fixed lengthxml normalized to GOMS format using Apache Camel Smook Data Format Developed component send formatted Goms JSON trade data to GOMS Rest Endpoint to capture enriched data Response from Rest Endpoint publishes to MQ using Apache Camel Involved in developing several Fix message New Order single Execution Confirmation Used Angular router and implemented module wide routing and created different forms using Angular data driven and template driven forms Developed Angular Components Services and Filters and took part in developing unit test and integration test cases using Jasmine Karma Consumed REST services using Angular HTTP and performed various REST Http operations for data retrievals and updates Implemented Cloud capabilities like Centralized Configuration Load Balancing ServicetoService call using Feign Service Registry and Discovery using Eureka in Spring Cloud Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed Micro services APIs using Spring Cloud Spring Security Spring Boot Spring Integration Spring JDBC used retrieve and update inserting data in oracle database with use of stored procs Gulp is used to build and Bower is used for managing dependencies JSON requestresponse from UI is processed using Spring Boot Restful features with micro services Architecture and Spring Data Jpa is used to saveretrieve the data in the backend Oracle Coherence used to store Reference Data Used Apache Maven as a build tool for building the Restful webservice Environment Java 18 concurrent package lambda expressions streams J2ee web servicesJMSXMLDom Sax Xpath Stax XSLTIBM MQKafka 20 Spring BootApache Camel 22 Spring Batch Spring Data JPA EHCacheJprofilerAngular6BowerGulpEclipseWebStormGITStashBitbucketJenkinsConfluenceJiraSourceTree Swagger Maven Windows LinuxDB2Sql Server Coherence java Developer TD Ameritrade June 2016 to December 2017 Description Institutional Trading platform ITP is used to capture manage and execute trades of financial instruments like equities mutual funds and options for advisors on behalf of their clients Supports Block Trading with advisory account and account level trading Responsibilities Build and support web applications mobile and tablet apps that provide account management trading management fees balances cash management portfolio rebalancing client document services tradeconfirms statements and tax documents and other capabilities Developed the robust scheduled billing engine to calculate the generated fees for the advisor accounts Integration with OMS system for placing new orders and canceling orders modifying orders using Fix messages Developed Trade Execution listener to receive Trade Executions Aks from OMS system and updates database Developed Allocation Engine to allocate trades to client accounts and updates Back office system with position information Designed and developed multitier custom build workflowbased web application Implemented an adaptor which receives trade alerts from CEP engine and sends to Tibco EMS queue for further processing by Message Bus Message Bus was built using Spring Integration to dequeue xml trade messages from Tibco EMS queue and sends to different channels for parsing enrichment persisting into database Core Java with Concurrent API is used extensively for parallel processing and chunk processing of trade execution data and market data and converts in to JSON and store it Mongo DB XSLT and Trax API used to convert different formats of XML to our Standard XML format and StAX API used for parsing XML messages JProfiler is used to profile he application Memory view and CPU view and Thread view are used Followed AgileScrum methodology that included iterative application development weekly Sprints and stand up meetings Consumed REST services using Angular HTTP and performed various REST Http operations for data retrievals and updates Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration Developed Micro services APIs using Spring Cloud Spring Security Spring Boot Spring Integration Performed REST validations and created REST exception Handlers and used Postman to test REST services Developed unit test cases using Junit Spring to test REST microservices Involved in consuming SOAP based web services so that the business application can integrate with legacy applications and facilitates for future applications Used Java 18 Lambda expressions and Stream API to support functionalstyle operations on streams of elements Worked on Java functional programming concepts like Streams Functional Interfaces new date time API and lambda expressions Design and implementation of different micro services and its Docker files Created and maintained Docker images and Docker containers Configuring the Docker containers and creating Docker files for different environments Docker swam used for container orchestration Amazon IAM was used to maintain the user credentials and involved in creating custom IAM policies to various groups defined within the organization To send emails to users developed Java API to interact with the Amazon SQS and Amazon SNS created Docker machine in Amazon EC2 instance and created Docker containers in Docker Machine running in Amazon EC2 Involved in Creating cloud formation templates using AWS Cloud formation and leveraged Elastic container services to run Docker micro services in AWS Used MultiThreading and collection framework including List Map etc Used Apache Maven as a build tool for building the Restful webservice Environment Java 18 concurrent package lambda expressions streams JavaScript Servlets JSPs JDBC EJB JPA Hibernate JAXB JAXRS SQL Oracle 10g SVN GitHub Ant ServiceNow Spring Boot Spring BatchJMSTibco EMS Autosys Eclipse Unix JUnit Log4J Anuglar 6HTML CSS and Bootstrap Docker AWS Swagger Microservices JIRA Jenkins java Developer Citigroup Jersey City NJ January 2015 to May 2016 World Link Next Gen GPP Word Link Next Gen is a rewrite of existing mainframe application world Link using J2EE This application main purpose is to send payments across 160 countries with multicurrency capabilities Payments can be sent in the different types of disbursement modes Ach Wire Mass pay Remote Check Cash The application has the capability to book the Fx deals in multiple currencies and across multiple counterparties Also the system calculates the corresponding settlement date with counterparty after considering weekends and holidays This Application divided in to three parts UI User interface Payment Processing Engine Statemachine and Report Engine Payment Processing engine Statemachine Statemachine processes the payments from different types of files Fixed length XML Swift and MQ messages Swift Payments are routed to different workflow components based on routing logic Workflows are configured in spring container and initiated by thread pool All workflows are monitored by MBeans Processing Engine has following modules Transaction Initiation Sanctions FXEngine Funding and Disbursement Responsibilities XSLT and Trax API used to convert the different formats of XML to our Standard XML format Used STAX Pull parsing API of XML for parsing the XML messages and generated model object Developed generic component for reading files and writing to files using Java IO and NIO Generic component for reading from IBM MQ and Writing to MQ queues Jboss cached used to maintain static data set up data in different nodes and replicated data between the nodes Hibernate associations and criteria api used for chunk processing batch processing updating and inserting data in to oracle and db2 tables Ehcache used for secondary cache in hibernate Thread pool and blocking queues used for parallel processing Apache Axis webservices client framework used to communicate to check processing service to process checks Spring framework used configures workflow and dependency injection and transaction management Involved in designing validation framework for validating transactions Parsing swift message and generating swift messages using Wife Open Source swift Frame work Involved in design and development of report Framework using Jasper Reports Involved in developing batch jobs runs in processing engine at different schedules for processing Ack and Nak data present in Db2 tables of Legacy system Worked on migrating disbursement module to Weblogic11g container using MDB Ejb3 parallel processing using common static data cache using Oracle Coherence Tangosol Developed Search Payments User Maintenance screen using GWT Environment Java16J2EEWebservicesJMS SpringHibernate30 MQ Apache CXF Ejb XML Dom Sax Xpath Stax XSLT Adobe Flex32FlexBuilderEclipse 34 Windows Linux Oracle Sybase Apache CXF Weblogic 103ALBPM 61 ILog Jrules Junior Java Developer Byte Alpha Solutions Hyderabad Telangana June 2013 to November 2014 Description Automated Quotation System has three modules divided based on the type of logins It has a Technical Administration Module Administration Module and User Module The user module is basically to create projects prospects and quotations There is a welldesigned quotation builder and an editor to describe the quotation and to add up items to the quotation The workflow and approval process is also inbuilt in the quotation Responsibilities Involved in the Analysis Design Implementation and Testing of Software Development Life Cycle SDLC of the project Assisted the analysis team in performing the feasibility analysis of the project Designed Use Case diagrams Class diagrams and Sequence diagrams and Object Diagrams in the detailed design phase of the project using Rational Rose 40 Developed presentation layer of the project using HTML JSP 20 JSTL and JavaScript technologies Developed complete Business tier using Stateless and Stateful Session beans with EJB 20 standards using Web Sphere Studio Application Developer WSAD 50 Used various J2EE design patterns like DTO DAO and Business Delegate Service Locator Session Facade Singleton and Factory patterns Consumed Web Service for transferring data between different applications Used ObjectRelational mapping Hibernate 30 framework as the persistence layer for interacting with Oracle 9i Extensively used IBM Web Sphere 50 while writing code and for creating Data Sources Written complex SQL queries stored procedures functions and triggers in PLSQL Configured and used Log4J for logging all the debugging and error information Involved writing code for Request Processor class to extend the functionality of struts Controller Developed Ant build scripts for compiling and building the project Used IBM Web Sphere 50 for deploying the application Used CVS Repository for Version Control Created test plans and JUnit test cases and test suite for testing the application Participated in the production support and maintenance of the project Environment J2EE JavaJDK JDBC JSP Struts 20 Web Services SOAP REST JavaScript CSS JNDI JavaBeans XML XSLT Oracle 10g TOAD Eclipse HTML DHTML Windows JAXB MySQL IBM WebSphere HTML CSS Spring 30 Hibernate 356 Maven JUnit Log4j SVN Servlets jQuery JSP Education Bachelors in EDUCATION Information Technology Jawaharlal Nehru Technological University Hyderabad Telangana Skills Ejb J2ee Java Spring Jax Jaxrpc Jaxws Jboss Jms Jndi jquery Jsf Jsp Jstl Jta Rmi Servlets Struts C Git Additional Information Technical Proficiency Languages C C Java SQL and PLSQL Enterprise Java Java J2EE Swing RMI Sockets JDBC Servlets JSP JMS Java Beans JSTL JSF Struts EJB Spring JTA JNDI and JPA Tools Frameworks Spring MVC Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J SOA Jasper reports SOAP UI Spring Boot Spring Batch Spring Security and Spring Data Databases Oracle 8i9i10g11g Sybase SQL Server 70 2000 DB2 MySQL and MS Access 2000 Web Development HTML XHTML CSS XML XSD XSLXSLT SAXDOM AJAX JSON Scripting Language Shell Script bash Perl JavaScript jQuery AngularJS WebApp Servers Web Sphere Apache Tomcat JBoss WebLogic Tools Eclipse30 Net Beans50 Clear Case Clear Quest CVS SVN Perforce Sub Version Dream weaver 2000 Edit plus VISIO JUnit JMeter Web Services SOAP RESTful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Apache Axis2 Apache CFX JMS MQ Cloud Computing VPC S3 Route53 Direct Connect VPC SNS Elastic Beanstalk SimpleDB Version Control GIT CVS SVN Rational clear case",
    "unique_id": "4ba69f4a-44f3-4b42-b4e3-667a668fe800"
}