{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Seattle WA WA Over 4 of professional experience as a Python developer with broad range of expertise in webbased years applications Experience with full software development lifecycle architecting scalable platforms objectsoriented programming database design and agile methodologies Expertise in Web Technologies using Python Django Flask and REST API Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Expertise in developing webbased applications using Bash Perl Python PHP XML DHTML XHTML Ajax JOOMLA CSS HTML JSON JavaScript and Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experienced with Python frameworks like Pandas Webapp2 and Flask Experience in Object oriented Design and Programming concepts Expertise in full life cycle application development and good experience in Unit testing and TestDriven Development TDD and Behavior driven Development Hands on experience with continuous integration and automation using Jenkins Hands on experience with version control tools such as SVN GitHub and GitLab Experience in scripting languages including Shell Scripting PERL Scripting and build automation using ANT MAVEN and other UNIX Windows system level programming Strong experience in DevOps Environment by enhancing Continuous Delivery and infrastructure change by using Chef Ansible Kubernetes and Docker to deploy code with GIT Jenkins Experienced in using Pig Hive Sqoop Oozie ZooKeeper Kafka HBase and Cloudera Spark Ansible Docker and Git Excellent hands on experience in developing webbased applications using Django and Flask which involves MVC Architecture Experienced with databases using ORMsDOMs for integrating with MySQL Postgres MongoDB Hands on experience in working with Python ORM libraries including Django ORM SQL Alchemy Experience in working on various python packages such as NumPy SQL Alchemy Pyside SciPy and PyTables Visualize interpret report findings and develop strategic by python libraries NumPy Pandas SciPy and ScikitLearn Handson experience in SOAP and RESTful web services Handson experience in relational database connections like DBAPI connection Expertise with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS Expertise with most of the web scale services on Amazon Web Services AWS Expertise in AWS like Amazon EC2 Amazon S3 Amazon Redshift Amazon EMR and Amazon SQS Experienced in Amazon EC2 command line interface along with Bash Python to automate repetitive work Familiarity with developing for and deploying to cloudbased environments specifically AWS and EC2 Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm NumPy Eclipse MyEclipse JDeveloper and RAD Experienced in developing webbased applications using Python QT C XML PHP CSS HTML DHTML JavaScript and JQuery Good Experience in HTML CSS JavaScript AngularJS Bootstrap JQUERY JSON and AJAX to deliver cuttingedge user interfaces and components Experience in writing Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Expertise in working with different databases like Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Extensive experience in implementation of the version control software SVN and GIT like GitHub Excellent working knowledge in UNIX and Linux shell environments using command line utilities Excellent ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Amazon Seattle WA July 2018 to Present Involved in development of entire frontend and backend modules using Python on Django Web Framework Involved Developed dynamic web pages using Python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Used the continuous integration CID tool Jenkins for automating the build processes Implemented a continuous Delivery pipeline with Jenkins and GitHub whenever a new GitHub branches are created Jenkins automatically attempts to build a new Docker container from it Modified queries functions cursors triggers and stored procedures for MySQL database to improve performance while processing data Created Database tables functions stored procedures and wrote prepared statements using PLSQL Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search and developed Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Automated the existing scripts for performance calculations using NumPy and Sqlalchemy and used REST and SOAPUI for testing web service for serverside changes Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote scripts in Python for extracting data from HTML file and involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support and maintaining the scripts using the version Control Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Worked on different cross browsing capability issue for IE Chrome Firefox and Safari and also utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created PyUnit test scripts and used for unit testing Used Git for the version control and developed Merge jobs in Python to extract and load data into MySQL database Developed user interfaces using HTML5 and utilized Agile process and JIRA issue management to track sprint cycles Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Python Developer JP Morgan Chase India January 2015 to November 2017 Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed web applications and implementing Model View Control MVC architecture using serverside applications like Django Developed and tested many features for dashboard using Python Bootstrap CSS JavaScript and jQuery Utilized Python libraries like wxPython NumPy SciPy Web2py Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS and Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Used Golang scripts for uploading a file to S3 and deploying them and creating GO serverless application and deploying it to AWS lambda Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects and created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Worked on several standard Python packages like NumPy matPlotLib SciPy Pandas PyTables etc Successfully migrated the Django database from SQLite to MySQL with complete data integrity Created Python scripts to automate AWS services which include web servers ELB CloudFront distribution database EC2 and database security groups S3 bucket and application configuration Worked on frontend frameworks like Angularjs Created PHPMySQL backend for data entry from Flash Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used jQuery for selecting DOM elements when parsing HTML Used GitHub for version control Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Attended everyday Enterprise Workflow StandUp meeting to provide status thus implementing Agile Scrum Methodology with Test Driven Development Python Developer IBM India July 2013 to December 2014 Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and wrote with objectoriented Python AWS Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to Automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db Package Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Updated site with JavaScript jQuery Python Django and SQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Utilized Agile process and JIRA issue management to track sprint cycles Participated in multiple sprint cycles addressing requirements for UI development",
    "entities": [
        "RAD Experienced",
        "Flask Admin MySQL and SQLite Responsible",
        "AJAX",
        "GUI",
        "Merge",
        "ORMsDOMs",
        "MySQL Postgres MongoDB Hands",
        "GIT Jenkins Experienced",
        "REST API Experienced",
        "jQuery Utilized Python",
        "UNIX",
        "HTTP",
        "Python Django Frameworks",
        "Created Database",
        "Angularjs Created PHPMySQL",
        "JSON",
        "Pig Hive Sqoop Oozie ZooKeeper Kafka HBase",
        "OpenStack",
        "TestDriven Development TDD",
        "Model View Control MVC",
        "SOAP",
        "XML",
        "DHTML",
        "Python Flask SQL Beautiful Soup httplib2 Jinja2",
        "GitHub Excellent",
        "JIRA",
        "DevOps",
        "Implemented Terraform",
        "HBase",
        "Git Excellent",
        "Amazon",
        "Control Involved",
        "ELK",
        "JQuery Good Experience",
        "Pandas Webapp2",
        "Python",
        "Shell Scripting PERL",
        "Integrated Development Environments",
        "Stored Procedures",
        "Developed",
        "CSS Bootstrap",
        "Nodejs Expertise",
        "Created Python",
        "Jenkins Hands",
        "Django",
        "Automation Test",
        "Amazon Web Services AWS Expertise",
        "Hadoop MapReduce",
        "Analysis Design Development and Testing Developed",
        "Bash Python",
        "DjangoREST",
        "Pytorch TensorFlow",
        "HTML5",
        "the Workflows Worklets Sessions Mappings Source Definitions Target",
        "GitLab Experience",
        "Flask",
        "Python AWS Flask",
        "Automate",
        "jQuery Implemented",
        "Docker",
        "ScikitLearn Handson",
        "PyQt",
        "Agile",
        "GIT",
        "Developed SQL Queries Stored Procedures",
        "API",
        "WebSphere WebLogic Tomcat Web Servers",
        "HTML CSS JavaScript",
        "Terraform",
        "NGINX",
        "QA",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "Created",
        "MySQL db Package",
        "Oracle MySQL PostgreSQL",
        "AI",
        "AWS",
        "Implemented",
        "Python Bootstrap CSS JavaScript",
        "AWS SNS Wrote",
        "Worked with View Sets",
        "ELB",
        "Stash",
        "SQL",
        "Oracle SQL",
        "GitHub",
        "HDFS Hive Python Developer JP Morgan Chase India",
        "NLP",
        "lPythonspan",
        "SSH",
        "Used Git",
        "CI",
        "MVW",
        "IE Chrome Firefox",
        "Amazon AWS",
        "Handson",
        "Test Driven Development Python Developer IBM",
        "google analytics",
        "Apache Cassandra Created Terraform",
        "SQLite",
        "CRUD",
        "Design and Deployment Testing and Implementation",
        "MVC Architecture Experienced",
        "Leveraged AWS",
        "Setup Updated",
        "India",
        "JavaScript",
        "ANT",
        "the Application Developed",
        "RedisCache",
        "UI",
        "Amazon SQS Experienced",
        "Spark shark Streams",
        "Windows Created PyUnit",
        "SVN",
        "CSS",
        "DevOps Environment",
        "NumPy SQL Alchemy Pyside SciPy",
        "UNIX Windows",
        "REST",
        "Present Involved",
        "NoSQL",
        "Unit",
        "Sprint",
        "ELB CloudFront"
    ],
    "experience": "Experience with full software development lifecycle architecting scalable platforms objectsoriented programming database design and agile methodologies Expertise in Web Technologies using Python Django Flask and REST API Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Expertise in developing webbased applications using Bash Perl Python PHP XML DHTML XHTML Ajax JOOMLA CSS HTML JSON JavaScript and Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experienced with Python frameworks like Pandas Webapp2 and Flask Experience in Object oriented Design and Programming concepts Expertise in full life cycle application development and good experience in Unit testing and TestDriven Development TDD and Behavior driven Development Hands on experience with continuous integration and automation using Jenkins Hands on experience with version control tools such as SVN GitHub and GitLab Experience in scripting languages including Shell Scripting PERL Scripting and build automation using ANT MAVEN and other UNIX Windows system level programming Strong experience in DevOps Environment by enhancing Continuous Delivery and infrastructure change by using Chef Ansible Kubernetes and Docker to deploy code with GIT Jenkins Experienced in using Pig Hive Sqoop Oozie ZooKeeper Kafka HBase and Cloudera Spark Ansible Docker and Git Excellent hands on experience in developing webbased applications using Django and Flask which involves MVC Architecture Experienced with databases using ORMsDOMs for integrating with MySQL Postgres MongoDB Hands on experience in working with Python ORM libraries including Django ORM SQL Alchemy Experience in working on various python packages such as NumPy SQL Alchemy Pyside SciPy and PyTables Visualize interpret report findings and develop strategic by python libraries NumPy Pandas SciPy and ScikitLearn Handson experience in SOAP and RESTful web services Handson experience in relational database connections like DBAPI connection Expertise with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS Expertise with most of the web scale services on Amazon Web Services AWS Expertise in AWS like Amazon EC2 Amazon S3 Amazon Redshift Amazon EMR and Amazon SQS Experienced in Amazon EC2 command line interface along with Bash Python to automate repetitive work Familiarity with developing for and deploying to cloudbased environments specifically AWS and EC2 Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm NumPy Eclipse MyEclipse JDeveloper and RAD Experienced in developing webbased applications using Python QT C XML PHP CSS HTML DHTML JavaScript and JQuery Good Experience in HTML CSS JavaScript AngularJS Bootstrap JQUERY JSON and AJAX to deliver cuttingedge user interfaces and components Experience in writing Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Expertise in working with different databases like Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Extensive experience in implementation of the version control software SVN and GIT like GitHub Excellent working knowledge in UNIX and Linux shell environments using command line utilities Excellent ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Amazon Seattle WA July 2018 to Present Involved in development of entire frontend and backend modules using Python on Django Web Framework Involved Developed dynamic web pages using Python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Used the continuous integration CID tool Jenkins for automating the build processes Implemented a continuous Delivery pipeline with Jenkins and GitHub whenever a new GitHub branches are created Jenkins automatically attempts to build a new Docker container from it Modified queries functions cursors triggers and stored procedures for MySQL database to improve performance while processing data Created Database tables functions stored procedures and wrote prepared statements using PLSQL Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search and developed Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Automated the existing scripts for performance calculations using NumPy and Sqlalchemy and used REST and SOAPUI for testing web service for serverside changes Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote scripts in Python for extracting data from HTML file and involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support and maintaining the scripts using the version Control Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Worked on different cross browsing capability issue for IE Chrome Firefox and Safari and also utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created PyUnit test scripts and used for unit testing Used Git for the version control and developed Merge jobs in Python to extract and load data into MySQL database Developed user interfaces using HTML5 and utilized Agile process and JIRA issue management to track sprint cycles Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Python Developer JP Morgan Chase India January 2015 to November 2017 Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed web applications and implementing Model View Control MVC architecture using serverside applications like Django Developed and tested many features for dashboard using Python Bootstrap CSS JavaScript and jQuery Utilized Python libraries like wxPython NumPy SciPy Web2py Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS and Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Used Golang scripts for uploading a file to S3 and deploying them and creating GO serverless application and deploying it to AWS lambda Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects and created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Worked on several standard Python packages like NumPy matPlotLib SciPy Pandas PyTables etc Successfully migrated the Django database from SQLite to MySQL with complete data integrity Created Python scripts to automate AWS services which include web servers ELB CloudFront distribution database EC2 and database security groups S3 bucket and application configuration Worked on frontend frameworks like Angularjs Created PHPMySQL backend for data entry from Flash Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used jQuery for selecting DOM elements when parsing HTML Used GitHub for version control Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Attended everyday Enterprise Workflow StandUp meeting to provide status thus implementing Agile Scrum Methodology with Test Driven Development Python Developer IBM India July 2013 to December 2014 Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and wrote with objectoriented Python AWS Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to Automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db Package Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Updated site with JavaScript jQuery Python Django and SQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Utilized Agile process and JIRA issue management to track sprint cycles Participated in multiple sprint cycles addressing requirements for UI development",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Seattle",
        "WA",
        "WA",
        "experience",
        "Python",
        "developer",
        "range",
        "expertise",
        "years",
        "applications",
        "Experience",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "Expertise",
        "Web",
        "Technologies",
        "Python",
        "Django",
        "Flask",
        "REST",
        "API",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "jQuery",
        "Nodejs",
        "Expertise",
        "applications",
        "Bash",
        "Perl",
        "Python",
        "PHP",
        "XML",
        "DHTML",
        "XHTML",
        "JOOMLA",
        "CSS",
        "HTML",
        "JSON",
        "JavaScript",
        "Bootstrap",
        "Experience",
        "Design",
        "code",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "Python",
        "frameworks",
        "Pandas",
        "Webapp2",
        "Flask",
        "Experience",
        "Object",
        "Design",
        "Programming",
        "concepts",
        "Expertise",
        "life",
        "cycle",
        "application",
        "development",
        "experience",
        "Unit",
        "testing",
        "TestDriven",
        "Development",
        "TDD",
        "Behavior",
        "Development",
        "Hands",
        "experience",
        "integration",
        "automation",
        "Jenkins",
        "Hands",
        "experience",
        "version",
        "control",
        "tools",
        "SVN",
        "GitHub",
        "GitLab",
        "Experience",
        "scripting",
        "languages",
        "Shell",
        "Scripting",
        "PERL",
        "Scripting",
        "automation",
        "ANT",
        "MAVEN",
        "UNIX",
        "Windows",
        "system",
        "level",
        "programming",
        "experience",
        "DevOps",
        "Environment",
        "Continuous",
        "Delivery",
        "infrastructure",
        "change",
        "Chef",
        "Ansible",
        "Kubernetes",
        "Docker",
        "code",
        "GIT",
        "Jenkins",
        "Pig",
        "Hive",
        "Sqoop",
        "Oozie",
        "ZooKeeper",
        "Kafka",
        "HBase",
        "Cloudera",
        "Spark",
        "Ansible",
        "Docker",
        "Git",
        "Excellent",
        "hands",
        "experience",
        "applications",
        "Django",
        "Flask",
        "MVC",
        "Architecture",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "Postgres",
        "MongoDB",
        "Hands",
        "experience",
        "Python",
        "ORM",
        "libraries",
        "Django",
        "ORM",
        "SQL",
        "Alchemy",
        "Experience",
        "python",
        "packages",
        "NumPy",
        "SQL",
        "Alchemy",
        "Pyside",
        "SciPy",
        "PyTables",
        "Visualize",
        "report",
        "findings",
        "python",
        "NumPy",
        "Pandas",
        "SciPy",
        "ScikitLearn",
        "Handson",
        "experience",
        "SOAP",
        "web",
        "services",
        "Handson",
        "experience",
        "database",
        "connections",
        "DBAPI",
        "connection",
        "Expertise",
        "AWS",
        "services",
        "S3",
        "ELB",
        "EBS",
        "AutoScaling",
        "Route53",
        "Storefront",
        "IAM",
        "Cloud",
        "Watch",
        "RDS",
        "Expertise",
        "web",
        "scale",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Expertise",
        "AWS",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "Redshift",
        "Amazon",
        "EMR",
        "Amazon",
        "SQS",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "Familiarity",
        "environments",
        "AWS",
        "EC2",
        "Application",
        "Servers",
        "WebSphere",
        "WebLogic",
        "Tomcat",
        "Web",
        "Servers",
        "Apache",
        "server",
        "NGINX",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "NumPy",
        "Eclipse",
        "MyEclipse",
        "JDeveloper",
        "RAD",
        "applications",
        "Python",
        "QT",
        "C",
        "XML",
        "PHP",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Good",
        "Experience",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQUERY",
        "JSON",
        "AJAX",
        "cuttingedge",
        "user",
        "interfaces",
        "components",
        "Experience",
        "Subqueries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Expertise",
        "databases",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "knowledge",
        "NoSQL",
        "database",
        "experience",
        "implementation",
        "version",
        "control",
        "software",
        "SVN",
        "GIT",
        "GitHub",
        "Excellent",
        "knowledge",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "ability",
        "technologies",
        "communication",
        "skills",
        "team",
        "player",
        "ability",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Amazon",
        "Seattle",
        "WA",
        "July",
        "Present",
        "development",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "web",
        "pages",
        "Python",
        "Django",
        "Frameworks",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Installation",
        "PythonUnix",
        "test",
        "beds",
        "Apache",
        "Server",
        "Linux",
        "Platform",
        "integration",
        "CID",
        "tool",
        "Jenkins",
        "build",
        "processes",
        "Delivery",
        "pipeline",
        "Jenkins",
        "GitHub",
        "GitHub",
        "branches",
        "Jenkins",
        "Docker",
        "container",
        "Modified",
        "queries",
        "functions",
        "cursors",
        "triggers",
        "procedures",
        "MySQL",
        "database",
        "performance",
        "data",
        "Database",
        "functions",
        "procedures",
        "statements",
        "PLSQL",
        "Installed",
        "ELK",
        "Elastic",
        "Search",
        "Log",
        "Facilitated",
        "Scrum",
        "ceremonies",
        "Sprint",
        "planning",
        "Daily",
        "standups",
        "Stash",
        "Kibana",
        "Log",
        "management",
        "EC2",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "search",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "auto",
        "scaling",
        "systems",
        "load",
        "servers",
        "scripts",
        "performance",
        "calculations",
        "NumPy",
        "Sqlalchemy",
        "REST",
        "SOAPUI",
        "testing",
        "web",
        "service",
        "serverside",
        "changes",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "lifecycle",
        "projects",
        "Design",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "scripts",
        "version",
        "Control",
        "development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "cross",
        "capability",
        "issue",
        "IE",
        "Chrome",
        "Firefox",
        "Safari",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "web",
        "middleware",
        "end",
        "systems",
        "Python",
        "SQL",
        "Perl",
        "Linux",
        "Windows",
        "Created",
        "PyUnit",
        "test",
        "scripts",
        "unit",
        "testing",
        "Git",
        "version",
        "control",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "user",
        "interfaces",
        "HTML5",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "Kafka",
        "producer",
        "consumers",
        "HBase",
        "Spark",
        "shark",
        "Streams",
        "Hadoop",
        "MapReduce",
        "jobs",
        "components",
        "HDFS",
        "Hive",
        "Python",
        "Developer",
        "JP",
        "Morgan",
        "Chase",
        "India",
        "January",
        "November",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "Python",
        "wxPython",
        "NumPy",
        "SciPy",
        "Web2py",
        "Designed",
        "source",
        "AI",
        "Pytorch",
        "TensorFlow",
        "Scikitlearn",
        "Apache",
        "Open",
        "Source",
        "Kafka",
        "Storm",
        "Spark",
        "NLP",
        "ML",
        "Algorithms",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "designing",
        "developing",
        "Automation",
        "Test",
        "cases",
        "Selenium",
        "WebDriver",
        "Java",
        "TestNG",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Used",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "Angular",
        "Developed",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "Golang",
        "scripts",
        "file",
        "S3",
        "GO",
        "serverless",
        "application",
        "AWS",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "JIRA",
        "projects",
        "departments",
        "JIRA",
        "projects",
        "DevOps",
        "tools",
        "team",
        "scripts",
        "deployment",
        "tools",
        "environment",
        "Docker",
        "Worked",
        "Python",
        "packages",
        "NumPy",
        "matPlotLib",
        "SciPy",
        "Pandas",
        "PyTables",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "data",
        "integrity",
        "Python",
        "scripts",
        "AWS",
        "services",
        "web",
        "servers",
        "ELB",
        "CloudFront",
        "distribution",
        "database",
        "EC2",
        "database",
        "security",
        "groups",
        "S3",
        "bucket",
        "application",
        "configuration",
        "frontend",
        "frameworks",
        "Angularjs",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Used",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "jQuery",
        "DOM",
        "elements",
        "HTML",
        "GitHub",
        "version",
        "control",
        "Developed",
        "SQL",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Oracle",
        "SQL",
        "PLSQL",
        "Enterprise",
        "Workflow",
        "StandUp",
        "status",
        "Agile",
        "Scrum",
        "Methodology",
        "Test",
        "Driven",
        "Development",
        "Python",
        "Developer",
        "IBM",
        "India",
        "July",
        "December",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "Wrote",
        "Python",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "MySQL",
        "database",
        "server",
        "web",
        "apps",
        "report",
        "progress",
        "Integrated",
        "RedisCache",
        "Djangorestframework",
        "data",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "Python",
        "AWS",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "Jenkins",
        "configuring",
        "integration",
        "CI",
        "End",
        "End",
        "automation",
        "build",
        "deployments",
        "Bash",
        "Perl",
        "Python",
        "Automate",
        "daytoday",
        "tasks",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "notification",
        "service",
        "request",
        "AWS",
        "API",
        "Gateway",
        "response",
        "Lambda",
        "data",
        "DynamoDB",
        "notification",
        "AWS",
        "SNS",
        "Wrote",
        "Python",
        "Flask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQLAlchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "development",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "XML",
        "format",
        "phases",
        "project",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Developed",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Worklets",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "product",
        "situations",
        "applications",
        "CI",
        "tools",
        "Jenkins",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "applications",
        "JIRA",
        "methodology",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "db",
        "Package",
        "daytoday",
        "meetings",
        "developers",
        "users",
        "QA",
        "testing",
        "Application",
        "software",
        "tools",
        "clients",
        "customers",
        "organization",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "admin",
        "sites",
        "database",
        "information",
        "Flask",
        "Admin",
        "MySQL",
        "SQLite",
        "Responsible",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "reports",
        "Python",
        "libraries",
        "environment",
        "Setup",
        "site",
        "JavaScript",
        "jQuery",
        "Python",
        "Django",
        "SQL",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "process",
        "JIRA",
        "issue",
        "management",
        "sprint",
        "cycles",
        "sprint",
        "cycles",
        "requirements",
        "UI",
        "development"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:05:06.172490",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Seattle WA WA Over 4 of professional experience as a Python developer with broad range of expertise in webbased years applications Experience with full software development lifecycle architecting scalable platforms objectsoriented programming database design and agile methodologies Expertise in Web Technologies using Python Django Flask and REST API Experienced in MVW frameworks like Django Angularjs Java Script jQuery and Nodejs Expertise in developing webbased applications using Bash Perl Python PHP XML DHTML XHTML Ajax JOOMLA CSS HTML JSON JavaScript and Bootstrap Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experienced with Python frameworks like Pandas Webapp2 and Flask Experience in Object oriented Design and Programming concepts Expertise in full life cycle application development and good experience in Unit testing and TestDriven Development TDD and Behavior driven Development Hands on experience with continuous integration and automation using Jenkins Hands on experience with version control tools such as SVN GitHub and GitLab Experience in scripting languages including Shell Scripting PERL Scripting and build automation using ANT MAVEN and other UNIX Windows system level programming Strong experience in DevOps Environment by enhancing Continuous Delivery and infrastructure change by using Chef Ansible Kubernetes and Docker to deploy code with GIT Jenkins Experienced in using Pig Hive Sqoop Oozie ZooKeeper Kafka HBase and Cloudera Spark Ansible Docker and Git Excellent hands on experience in developing webbased applications using Django and Flask which involves MVC Architecture Experienced with databases using ORMsDOMs for integrating with MySQL Postgres MongoDB Hands on experience in working with Python ORM libraries including Django ORM SQL Alchemy Experience in working on various python packages such as NumPy SQL Alchemy Pyside SciPy and PyTables Visualize interpret report findings and develop strategic by python libraries NumPy Pandas SciPy and ScikitLearn Handson experience in SOAP and RESTful web services Handson experience in relational database connections like DBAPI connection Expertise with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS Expertise with most of the web scale services on Amazon Web Services AWS Expertise in AWS like Amazon EC2 Amazon S3 Amazon Redshift Amazon EMR and Amazon SQS Experienced in Amazon EC2 command line interface along with Bash Python to automate repetitive work Familiarity with developing for and deploying to cloudbased environments specifically AWS and EC2 Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm NumPy Eclipse MyEclipse JDeveloper and RAD Experienced in developing webbased applications using Python QT C XML PHP CSS HTML DHTML JavaScript and JQuery Good Experience in HTML CSS JavaScript AngularJS Bootstrap JQUERY JSON and AJAX to deliver cuttingedge user interfaces and components Experience in writing Subqueries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Expertise in working with different databases like Oracle MySQL PostgreSQL and Good knowledge in using NoSQL database MongoDB Extensive experience in implementation of the version control software SVN and GIT like GitHub Excellent working knowledge in UNIX and Linux shell environments using command line utilities Excellent ability to learn and adapt quickly to the emerging new technologies and paradigms Excellent communication interpersonal and analytical skills and a highly motivated team player with the ability to work independently Work Experience Python Developer Amazon Seattle WA July 2018 to Present Involved in development of entire frontend and backend modules using Python on Django Web Framework Involved Developed dynamic web pages using Python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Used the continuous integration CID tool Jenkins for automating the build processes Implemented a continuous Delivery pipeline with Jenkins and GitHub whenever a new GitHub branches are created Jenkins automatically attempts to build a new Docker container from it Modified queries functions cursors triggers and stored procedures for MySQL database to improve performance while processing data Created Database tables functions stored procedures and wrote prepared statements using PLSQL Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search and developed Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Automated the existing scripts for performance calculations using NumPy and Sqlalchemy and used REST and SOAPUI for testing web service for serverside changes Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Wrote scripts in Python for extracting data from HTML file and involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support and maintaining the scripts using the version Control Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Worked on different cross browsing capability issue for IE Chrome Firefox and Safari and also utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL and Perl for Linux and Windows Created PyUnit test scripts and used for unit testing Used Git for the version control and developed Merge jobs in Python to extract and load data into MySQL database Developed user interfaces using HTML5 and utilized Agile process and JIRA issue management to track sprint cycles Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Python Developer JP Morgan Chase India January 2015 to November 2017 Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Developed web applications and implementing Model View Control MVC architecture using serverside applications like Django Developed and tested many features for dashboard using Python Bootstrap CSS JavaScript and jQuery Utilized Python libraries like wxPython NumPy SciPy Web2py Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS and Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the web apps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Used Golang scripts for uploading a file to S3 and deploying them and creating GO serverless application and deploying it to AWS lambda Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Created and configured new JIRA projects and worked with departments to maintain existing JIRA projects and created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Worked on several standard Python packages like NumPy matPlotLib SciPy Pandas PyTables etc Successfully migrated the Django database from SQLite to MySQL with complete data integrity Created Python scripts to automate AWS services which include web servers ELB CloudFront distribution database EC2 and database security groups S3 bucket and application configuration Worked on frontend frameworks like Angularjs Created PHPMySQL backend for data entry from Flash Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Used jQuery for selecting DOM elements when parsing HTML Used GitHub for version control Developed SQL Queries Stored Procedures and Triggers Using Oracle SQL and PLSQL Attended everyday Enterprise Workflow StandUp meeting to provide status thus implementing Agile Scrum Methodology with Test Driven Development Python Developer IBM India July 2013 to December 2014 Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed applications using Python Django pyramid Flask Web2py HTML and other web technologies With using of Python OS module on UNIX environment made job cloning and forking Wrote Python modules to extractload asset data from the MySQL source database Designed and implemented a dedicated MySQL database server to drive the web apps and report on daily progress Integrated RedisCache with the Djangorestframework for reading the data faster Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and wrote with objectoriented Python AWS Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented RESTful WebServices for sending and receiving the data between multiple systems Extensively worked on Jenkins by installing configuring and maintaining for Continuous integration CI and for End to End automation for all build and deployments Implemented Bash Perl Python scripting to Automate many daytoday tasks Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Developed the notification service by posting the JSON request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Wrote with objectoriented Python Flask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Implemented REST APIs in Python using microframework like Flask with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Involved in development of Web Services using and REST for sending and getting data from the external interface in XML and JSON format Involved in various phases of the project like Analysis Design Development and Testing Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Tested and debugged the product in controlled and real situations Deploy third partys applications using various CI tools like Jenkins Working as an application developer experienced with controllers views and models in Django Involved in debugging the applications monitored on JIRA using agile methodology Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db Package Attended many daytoday meetings with developers and users and performed QA testing on the Application Developed tested and debugged software tools for clients and internal customers of the organization Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Implemented admin sites to manage database information with Flask Admin MySQL and SQLite Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Prepared and analyzed reports using Python libraries and involved in environment Setup Updated site with JavaScript jQuery Python Django and SQL Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Utilized Agile process and JIRA issue management to track sprint cycles Participated in multiple sprint cycles addressing requirements for UI development",
    "unique_id": "642e42dd-64c8-41cc-b388-a3273dae60b6"
}