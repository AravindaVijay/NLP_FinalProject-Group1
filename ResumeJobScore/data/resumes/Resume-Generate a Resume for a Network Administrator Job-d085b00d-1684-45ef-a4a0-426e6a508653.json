{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Flexera Software Itasca IL Work Experience Sr Python Developer Flexera Software Itasca IL February 2017 to Present February 2017 Present Sr Python developer Nvidia Austin TX November 2014 to January 2017 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Developed serverbased web traffic statistical analysis tool using Flask Pandas and had implemented and tested pythonbased web applications interacting with MySQL Developed and tested many features in an Agile environment using Python Django HTML5 CSS JavaScript Bootstrap Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Implemented AngularJS controllers to maintain each view data Involved in writing application level code to interact with APIs Web Services using AJAX JSON XML Angular JS and Node JS Working with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Performed testing using Djangos Test Module Rewrite existing PythonDjango modules to deliver certain format of data Working in team of developers to build and deploy Flask Linux AWS Involved in maintaining and editing Python scripts for application deployment automation Working on various Integrated Development Environments like Pycharm Anaconda Spyder Developed a portal to manage and entities in a content management system using Flask Created activated and programmed in Anaconda environment Wrote programs for performance calculations using NumPy Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx  Ansible Spinnaker Implemented Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Wrote Python scripts to parse XML documents and load the data in database Created Python scripts used to generate reports Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Rewrite existing Java application in Python Built various graphs for business decision making using Python matplotlib libraryCapital One McLean VA Python Developer Resposibilities March 2013 to October 2014 Worked on Django Framework that was used in developing web applications to implement the model view control architecture Created Python and Bash tools to i Confidential ease efficiency of operations data conversion scripts REST JSON and CRUD scripts for API Integration Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Build SQL queries for performing various CRUD operations like create update read and delete Used Django Database APIs to access database objects Designed and developed data management system using MongoDB Carried out various mathematical operations for calculation purpose using python libraries Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used standard Python modules like CSV Robot parser Pickle development Used GIT version control and deployed project to Heroku Utilized various IDEs and internal debug tools during debugging Implemented a delivery pipeline with Jenkins and AWS Automation of unit testing using Python Different testing methodologies like unit testing Integration testing and web application testing Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Python developer Toshiba Research Triangle Park NC December 2011 to February 2013 Responsibilities Built database model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client webbased application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Used the Pythons modules NumPy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Education Bachelors Skills Django Javascript Python Flask",
    "entities": [
        "GIT",
        "Python",
        "API Integration Developed",
        "Integrated Development Environments",
        "CSV",
        "JS",
        "Development of Python",
        "Developed",
        "McLean VA Python Developer Resposibilities March 2013 to October 2014 Worked on Django Framework",
        "CRUD",
        "Jenkins",
        "Bash",
        "Created Python",
        "NC",
        "MultiThreading",
        "Toshiba Research",
        "UI",
        "Kubernetes Performed",
        "Wrote Python",
        "Kubernetes Docker",
        "Linux",
        "UNIX Utilized",
        "Heroku Utilized",
        "Spinnaker Implemented Model View Control MVC",
        "SQL",
        "Tomcat",
        "XML",
        "lPythonspan",
        "Python Different",
        "Docker",
        "Pycharm Anaconda Spyder Developed",
        "NumPy Golang Infrastructure Teams",
        "Created Unit",
        "Flask Linux AWS Involved",
        "Shell",
        "Djangos Test Module Rewrite",
        "Views",
        "Integration",
        "Flask Created",
        "TX",
        "Anaconda",
        "Node",
        "PythonDjango",
        "ELK"
    ],
    "experience": "Experience Sr Python Developer Flexera Software Itasca IL February 2017 to Present February 2017 Present Sr Python developer Nvidia Austin TX November 2014 to January 2017 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Developed serverbased web traffic statistical analysis tool using Flask Pandas and had implemented and tested pythonbased web applications interacting with MySQL Developed and tested many features in an Agile environment using Python Django HTML5 CSS JavaScript Bootstrap Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Implemented AngularJS controllers to maintain each view data Involved in writing application level code to interact with APIs Web Services using AJAX JSON XML Angular JS and Node JS Working with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Performed testing using Djangos Test Module Rewrite existing PythonDjango modules to deliver certain format of data Working in team of developers to build and deploy Flask Linux AWS Involved in maintaining and editing Python scripts for application deployment automation Working on various Integrated Development Environments like Pycharm Anaconda Spyder Developed a portal to manage and entities in a content management system using Flask Created activated and programmed in Anaconda environment Wrote programs for performance calculations using NumPy Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx   Ansible Spinnaker Implemented Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Wrote Python scripts to parse XML documents and load the data in database Created Python scripts used to generate reports Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Rewrite existing Java application in Python Built various graphs for business decision making using Python matplotlib libraryCapital One McLean VA Python Developer Resposibilities March 2013 to October 2014 Worked on Django Framework that was used in developing web applications to implement the model view control architecture Created Python and Bash tools to i Confidential ease efficiency of operations data conversion scripts REST JSON and CRUD scripts for API Integration Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Build SQL queries for performing various CRUD operations like create update read and delete Used Django Database APIs to access database objects Designed and developed data management system using MongoDB Carried out various mathematical operations for calculation purpose using python libraries Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used standard Python modules like CSV Robot parser Pickle development Used GIT version control and deployed project to Heroku Utilized various IDEs and internal debug tools during debugging Implemented a delivery pipeline with Jenkins and AWS Automation of unit testing using Python Different testing methodologies like unit testing Integration testing and web application testing Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Python developer Toshiba Research Triangle Park NC December 2011 to February 2013 Responsibilities Built database model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client webbased application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Used the Pythons modules NumPy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Education Bachelors Skills Django Javascript Python Flask",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Flexera",
        "Software",
        "Itasca",
        "IL",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Flexera",
        "Software",
        "Itasca",
        "IL",
        "February",
        "Present",
        "February",
        "Present",
        "Sr",
        "Python",
        "developer",
        "Nvidia",
        "Austin",
        "TX",
        "November",
        "January",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "web",
        "applications",
        "MySQL",
        "Developed",
        "features",
        "environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Responsible",
        "ELK",
        "clusters",
        "Elasticsearch",
        "Logstash",
        "Graphite",
        "Kibana",
        "Kafka",
        "zookeeper",
        "controllers",
        "view",
        "data",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "AJAX",
        "JSON",
        "XML",
        "JS",
        "Node",
        "JS",
        "Working",
        "deployments",
        "Docker",
        "Docker",
        "Docker",
        "Hub",
        "Docker",
        "registries",
        "Kubernetes",
        "Performed",
        "testing",
        "Djangos",
        "Test",
        "Module",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "team",
        "developers",
        "Flask",
        "Linux",
        "AWS",
        "Python",
        "scripts",
        "application",
        "deployment",
        "automation",
        "Integrated",
        "Development",
        "Environments",
        "Pycharm",
        "Anaconda",
        "Spyder",
        "portal",
        "entities",
        "content",
        "management",
        "system",
        "Flask",
        "Created",
        "Anaconda",
        "environment",
        "Wrote",
        "programs",
        "performance",
        "calculations",
        "NumPy",
        "Golang",
        "Infrastructure",
        "Teams",
        "Engineering",
        "Productivity",
        "Kubernetes",
        "Docker",
        "Ansible",
        "Spinnaker",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "web",
        "applications",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Python",
        "scripts",
        "reports",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "Docker",
        "host",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "libraryCapital",
        "McLean",
        "VA",
        "Python",
        "Developer",
        "Resposibilities",
        "March",
        "October",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Python",
        "Bash",
        "tools",
        "ease",
        "efficiency",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Used",
        "Django",
        "Database",
        "APIs",
        "database",
        "data",
        "management",
        "system",
        "MongoDB",
        "operations",
        "calculation",
        "purpose",
        "python",
        "libraries",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Python",
        "modules",
        "CSV",
        "Robot",
        "parser",
        "Pickle",
        "development",
        "GIT",
        "version",
        "control",
        "project",
        "Heroku",
        "IDEs",
        "debug",
        "tools",
        "delivery",
        "pipeline",
        "Jenkins",
        "AWS",
        "Automation",
        "unit",
        "testing",
        "Python",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Use",
        "case",
        "diagrams",
        "Activity",
        "flow",
        "diagrams",
        "Class",
        "diagrams",
        "Object",
        "diagrams",
        "design",
        "phase",
        "Python",
        "developer",
        "Toshiba",
        "Research",
        "Triangle",
        "Park",
        "NC",
        "December",
        "February",
        "Responsibilities",
        "database",
        "model",
        "Views",
        "APIs",
        "Python",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "Python",
        "OOD",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Collections",
        "Python",
        "user",
        "objects",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "Created",
        "Unit",
        "test",
        "regression",
        "test",
        "framework",
        "workingnew",
        "code",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Python",
        "modules",
        "CSV",
        "itertools",
        "pickle",
        "development",
        "Angularjs",
        "client",
        "application",
        "testing",
        "web",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "Python",
        "stock",
        "APIs",
        "Spark",
        "Code",
        "python",
        "processing",
        "data",
        "databases",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "Pythons",
        "modules",
        "NumPy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "automation",
        "framework",
        "Python",
        "Shell",
        "scripting",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Education",
        "Bachelors",
        "Skills",
        "Django",
        "Javascript",
        "Python",
        "Flask"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:36:25.796008",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Flexera Software Itasca IL Work Experience Sr Python Developer Flexera Software Itasca IL February 2017 to Present February 2017 Present Sr Python developer Nvidia Austin TX November 2014 to January 2017 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Developed serverbased web traffic statistical analysis tool using Flask Pandas and had implemented and tested pythonbased web applications interacting with MySQL Developed and tested many features in an Agile environment using Python Django HTML5 CSS JavaScript Bootstrap Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Implemented AngularJS controllers to maintain each view data Involved in writing application level code to interact with APIs Web Services using AJAX JSON XML Angular JS and Node JS Working with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Performed testing using Djangos Test Module Rewrite existing PythonDjango modules to deliver certain format of data Working in team of developers to build and deploy Flask Linux AWS Involved in maintaining and editing Python scripts for application deployment automation Working on various Integrated Development Environments like Pycharm Anaconda Spyder Developed a portal to manage and entities in a content management system using Flask Created activated and programmed in Anaconda environment Wrote programs for performance calculations using NumPy Golang Infrastructure Teams and Engineering Productivity utilizing Kubernetes Docker influx dB Ansible Spinnaker Implemented Model View Control MVC architecture using serverside applications like Django and Flask for developing web applications Wrote Python scripts to parse XML documents and load the data in database Created Python scripts used to generate reports Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Rewrite existing Java application in Python Built various graphs for business decision making using Python matplotlib libraryCapital One McLean VA Python Developer Resposibilities March 2013 to October 2014 Worked on Django Framework that was used in developing web applications to implement the model view control architecture Created Python and Bash tools to i Confidential ease efficiency of operations data conversion scripts REST JSON and CRUD scripts for API Integration Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Build SQL queries for performing various CRUD operations like create update read and delete Used Django Database APIs to access database objects Designed and developed data management system using MongoDB Carried out various mathematical operations for calculation purpose using python libraries Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used standard Python modules like CSV Robot parser Pickle development Used GIT version control and deployed project to Heroku Utilized various IDEs and internal debug tools during debugging Implemented a delivery pipeline with Jenkins and AWS Automation of unit testing using Python Different testing methodologies like unit testing Integration testing and web application testing Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Generated Use case diagrams Activity flow diagrams Class diagrams and Object diagrams in the design phase Python developer Toshiba Research Triangle Park NC December 2011 to February 2013 Responsibilities Built database model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOD code for quality logging monitoring and debugging code optimization Skilled in using Collections in Python for manipulating and looping through different user defined objects Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Utilized standard Python modules such as CSV itertools and pickle for development Developed efficient Angularjs for client webbased application Responsible for designing developing testing deploying and maintaining the web application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Developed Spark Code using python for faster processing of data Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Used the Pythons modules NumPy matplotlib etc for generating complex graphical data creation of histograms etc Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Education Bachelors Skills Django Javascript Python Flask",
    "unique_id": "d085b00d-1684-45ef-a4a0-426e6a508653"
}