{
    "clean_data": "Python developer span lPythonspan span ldeveloperspan Python developer Texas Instruments Texas New Jersey Wildlife and Game Refuge NJ Authorized to work in the US for any employer Work Experience Python developer Texas Instruments Texas November 2018 to Present Responsibilities Have work experience with various Python Integrated Development Environments like PyCharm Eclipse and Net Beans Involved in development of the enterprise social network application using Python Twisted and Cassandra Good understanding of Postgres both database modeling and efficient querying and updates Experience in Python programming using Django and Postgres Solid in OOPS and Design Patterns and Linux based development Ability to troubleshoot the existing application and provide root cause analysis Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and Postgres SQL Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Experience with TestDriven Development TDD using packages such as mocking frameworks and unit test Used Mongo DB internal tools like Mongo Compass Mongo Atlas Manager Ops Manager and Cloud Manager etc Designed dynamic and crossbrowser compatible pages using web technologies such as AngularJS Html5 CSS3 JavaScript JQuery JSON CSS bootstrap JSP Designed dynamic and crossbrowser compatible pages using web technologies such as AngularJS Html5 CSS3 JavaScript JQuery JSON CSS bootstrap JSP Experience in Mongo DB installation patching troubleshooting performance trackingtuning back up and recovery in dynamic environments Responsible for setting up Python REST API framework and spring framework using Django Managed and improved the build infrastructure for global software development Engineering teams including implementation of build scripts continuous integration infrastructure and deployment tools Developed user interfaces using HTML CSS JavaScript Ajax JSON and JQuery Developed views and templates with Python and using Djangos view controller and template language Website interface is created Worked extensively with Nagios monitoring system as well as other monitoring tools Experience with advanced CSS concepts and also building tablefree layouts Environment Django Git Python oops Linux Postgres Nagios Python developer City Group New Jersey August 2015 to October 2018 Responsibilities Responsible for the design development and administration of analytical data process such as converting TERADATASQL scripts to REDSHIFTPSQL scripts data validation checks metadata review included within those responsibilities are the areas of data access and delivery technologies Includes expertise in data quality data organization metadata and data profiling Data set sizes are usually huge more than hundreds of millions of records storing millions of records in csv files and excel spreadsheets Leveraging Driver tables to pull data in Teradata Redshift UD interim and Driver Mapping the true source of the fields from the table and moving the fields from S3RAW LOAD Ready Extract datasets to REDSHIFT using AWS CLI and Python Working with AWS services like EC2 S3 IAM and REDSHIFT Data ingestion to configure parameters Working on FUSION UAT BAU testing for both Teradata and Redshift Understanding the PDS BAU data workflow such from following Mainframe files Cluster validationPreproc Wrapper XFORM JBOS S3 REDSHIFT LOAD Working on FRB reporting converting and making reports using Python Pandas XLSX writer etc modules Converting Kohls library metric Scripts commonly used metric scripts Driver table scripts and others etc from Teradata SQL syntax to Redshift PSQL syntax Branded card tables and fields validation and testing from converting the shell SQL scripts to python and PSQL in AWS Demonstrated to move from one sequential assignment to the next work environment and properties can change quickly depending on business needs Ability to move data between production systems and across multiple platforms Experience with Financial domain clients Works substantially with little supervision or oversight to deliver key milestones Ability to deliver highly technical information to an analyst team to support their own systems migration responsibilities Environment Django Python oops Linux PSQL Postgres Build Python Engineer IN March 2012 to June 2015 Responsibilities Well versed with configuration management policies and practices with regards to SDLC along with automation by using scripting languages like Shell Python Scripting Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Experienced in build and deployment of Java applications on to different environments such as QA UAT and Production Build and deployment of scripts using python scripting Shell to setup development and QA environments Worked with Version Control tools like GIT Used Python and Django creating graphics XML json processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Packaging build Test and Deploy chain SVN with DevTestProd Branching Model for weekly releases Hands on standard of SCM tools Git CICD JenkinsMaven process Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Coordinated with developers Business Analyst and Mangers to make sure that code is deployed in the Production Environment Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Generated property list for every application dynamically using python Created branches in GIT implementation parallel development process Created deployment request tickets in Bugzilla for the deploying the code to Production Provided ongoing support and administration for Jenkins SonarQube fortify scan GIT and build automations Installed Jenkins on Linux machines and created master and slave configurations to implement multiple parallel builds Environment GIT Jenkins Nexus Django Linux PythonShell script Tomcat Education Bachelors Skills deployment 3 years Django 6 years JSON 3 years Linux 6 years Python 6 years Additional Information Programming Skills Python C C Core Java Web Development Skills HTML5 CSS3 JavaScript PHP JSON JQuery AJAX XML and Bootstrap Frameworks Django and Flask Frameworks Django and Flask IDEs Geany PyCharm Eclipse Android Studio Spyder and NetBeans Database Oracle SQL MySQL PLSQL PostgreSQL Operating Systems LINUX UNIX and WINDOWS Web Services REST SOAP and AWS Servers Apache Tomcat and Web Logic Version Control ToolsGit GitHub and SVN Development Process Waterfall Agile and Scrum Bug Tracking Tool JIRA Bugzilla Deployment Tools Heroku Jenkins",
    "entities": [
        "GIT",
        "Tomcat Education Bachelors Skills",
        "TERADATASQL",
        "Shell Python Scripting Developed",
        "Python Integrated Development Environments",
        "Linux Postgres Nagios Python",
        "REDSHIFT Data",
        "QA UAT",
        "SCM",
        "US",
        "Working on FUSION UAT BAU",
        "Business Analyst",
        "QA",
        "Version Control",
        "Leveraging Driver",
        "Created",
        "New Jersey",
        "Teradata Redshift UD",
        "webapp2",
        "New Jersey Wildlife",
        "Coordinated",
        "NetBeans Database Oracle",
        "Teradata SQL",
        "Postgres",
        "Texas",
        "City Group",
        "PDS",
        "PyCharm",
        "Utilized PyUnit",
        "SVN",
        "CSS",
        "Texas Instruments",
        "the Production Environment Wrote Python OO Design",
        "WINDOWS Web Services REST SOAP",
        "Linux",
        "JSP",
        "SQL",
        "Flask",
        "HTML CSS JavaScript Ajax JSON",
        "Data",
        "XML",
        "Git CICD JenkinsMaven",
        "REST",
        "Python Twisted",
        "lPythonspan",
        "Redshift PSQL",
        "SVN Development Process Waterfall Agile and",
        "Shell",
        "Linux PSQL Postgres Build Python Engineer",
        "CLI",
        "Jenkins SonarQube",
        "Python Working",
        "Driver",
        "TestDriven Development",
        "Web Logic Version Control",
        "Flask SQL Alchemy",
        "REDSHIFT",
        "Mongo Compass Mongo Atlas",
        "JQuery Developed"
    ],
    "experience": "Experience Python developer Texas Instruments Texas November 2018 to Present Responsibilities Have work experience with various Python Integrated Development Environments like PyCharm Eclipse and Net Beans Involved in development of the enterprise social network application using Python Twisted and Cassandra Good understanding of Postgres both database modeling and efficient querying and updates Experience in Python programming using Django and Postgres Solid in OOPS and Design Patterns and Linux based development Ability to troubleshoot the existing application and provide root cause analysis Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and Postgres SQL Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Experience with TestDriven Development TDD using packages such as mocking frameworks and unit test Used Mongo DB internal tools like Mongo Compass Mongo Atlas Manager Ops Manager and Cloud Manager etc Designed dynamic and crossbrowser compatible pages using web technologies such as AngularJS Html5 CSS3 JavaScript JQuery JSON CSS bootstrap JSP Designed dynamic and crossbrowser compatible pages using web technologies such as AngularJS Html5 CSS3 JavaScript JQuery JSON CSS bootstrap JSP Experience in Mongo DB installation patching troubleshooting performance trackingtuning back up and recovery in dynamic environments Responsible for setting up Python REST API framework and spring framework using Django Managed and improved the build infrastructure for global software development Engineering teams including implementation of build scripts continuous integration infrastructure and deployment tools Developed user interfaces using HTML CSS JavaScript Ajax JSON and JQuery Developed views and templates with Python and using Djangos view controller and template language Website interface is created Worked extensively with Nagios monitoring system as well as other monitoring tools Experience with advanced CSS concepts and also building tablefree layouts Environment Django Git Python oops Linux Postgres Nagios Python developer City Group New Jersey August 2015 to October 2018 Responsibilities Responsible for the design development and administration of analytical data process such as converting TERADATASQL scripts to REDSHIFTPSQL scripts data validation checks metadata review included within those responsibilities are the areas of data access and delivery technologies Includes expertise in data quality data organization metadata and data profiling Data set sizes are usually huge more than hundreds of millions of records storing millions of records in csv files and excel spreadsheets Leveraging Driver tables to pull data in Teradata Redshift UD interim and Driver Mapping the true source of the fields from the table and moving the fields from S3RAW LOAD Ready Extract datasets to REDSHIFT using AWS CLI and Python Working with AWS services like EC2 S3 IAM and REDSHIFT Data ingestion to configure parameters Working on FUSION UAT BAU testing for both Teradata and Redshift Understanding the PDS BAU data workflow such from following Mainframe files Cluster validationPreproc Wrapper XFORM JBOS S3 REDSHIFT LOAD Working on FRB reporting converting and making reports using Python Pandas XLSX writer etc modules Converting Kohls library metric Scripts commonly used metric scripts Driver table scripts and others etc from Teradata SQL syntax to Redshift PSQL syntax Branded card tables and fields validation and testing from converting the shell SQL scripts to python and PSQL in AWS Demonstrated to move from one sequential assignment to the next work environment and properties can change quickly depending on business needs Ability to move data between production systems and across multiple platforms Experience with Financial domain clients Works substantially with little supervision or oversight to deliver key milestones Ability to deliver highly technical information to an analyst team to support their own systems migration responsibilities Environment Django Python oops Linux PSQL Postgres Build Python Engineer IN March 2012 to June 2015 Responsibilities Well versed with configuration management policies and practices with regards to SDLC along with automation by using scripting languages like Shell Python Scripting Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Experienced in build and deployment of Java applications on to different environments such as QA UAT and Production Build and deployment of scripts using python scripting Shell to setup development and QA environments Worked with Version Control tools like GIT Used Python and Django creating graphics XML json processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Packaging build Test and Deploy chain SVN with DevTestProd Branching Model for weekly releases Hands on standard of SCM tools Git CICD JenkinsMaven process Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Coordinated with developers Business Analyst and Mangers to make sure that code is deployed in the Production Environment Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Generated property list for every application dynamically using python Created branches in GIT implementation parallel development process Created deployment request tickets in Bugzilla for the deploying the code to Production Provided ongoing support and administration for Jenkins SonarQube fortify scan GIT and build automations Installed Jenkins on Linux machines and created master and slave configurations to implement multiple parallel builds Environment GIT Jenkins Nexus Django Linux PythonShell script Tomcat Education Bachelors Skills deployment 3 years Django 6 years JSON 3 years Linux 6 years Python 6 years Additional Information Programming Skills Python C C Core Java Web Development Skills HTML5 CSS3 JavaScript PHP JSON JQuery AJAX XML and Bootstrap Frameworks Django and Flask Frameworks Django and Flask IDEs Geany PyCharm Eclipse Android Studio Spyder and NetBeans Database Oracle SQL MySQL PLSQL PostgreSQL Operating Systems LINUX UNIX and WINDOWS Web Services REST SOAP and AWS Servers Apache Tomcat and Web Logic Version Control ToolsGit GitHub and SVN Development Process Waterfall Agile and Scrum Bug Tracking Tool JIRA Bugzilla Deployment Tools Heroku Jenkins",
    "extracted_keywords": [
        "developer",
        "span",
        "lPythonspan",
        "span",
        "ldeveloperspan",
        "Python",
        "developer",
        "Texas",
        "Instruments",
        "Texas",
        "New",
        "Jersey",
        "Wildlife",
        "Game",
        "Refuge",
        "NJ",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "developer",
        "Texas",
        "Instruments",
        "Texas",
        "November",
        "Present",
        "Responsibilities",
        "work",
        "experience",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "Eclipse",
        "Net",
        "Beans",
        "development",
        "enterprise",
        "network",
        "application",
        "Python",
        "Twisted",
        "Cassandra",
        "understanding",
        "Postgres",
        "database",
        "modeling",
        "querying",
        "Experience",
        "Python",
        "programming",
        "Django",
        "Postgres",
        "Solid",
        "OOPS",
        "Design",
        "Patterns",
        "Linux",
        "development",
        "Ability",
        "application",
        "root",
        "cause",
        "analysis",
        "databases",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "Postgres",
        "SQL",
        "components",
        "Python",
        "Django",
        "framework",
        "code",
        "python",
        "manipulate",
        "data",
        "Experience",
        "TestDriven",
        "Development",
        "TDD",
        "packages",
        "frameworks",
        "unit",
        "test",
        "Mongo",
        "DB",
        "tools",
        "Mongo",
        "Compass",
        "Mongo",
        "Atlas",
        "Manager",
        "Ops",
        "Manager",
        "Cloud",
        "Manager",
        "crossbrowser",
        "pages",
        "web",
        "technologies",
        "Html5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "JSON",
        "CSS",
        "bootstrap",
        "JSP",
        "dynamic",
        "crossbrowser",
        "pages",
        "web",
        "technologies",
        "Html5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "JSON",
        "CSS",
        "bootstrap",
        "JSP",
        "Experience",
        "Mongo",
        "DB",
        "installation",
        "troubleshooting",
        "performance",
        "recovery",
        "environments",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "framework",
        "Django",
        "Managed",
        "build",
        "infrastructure",
        "software",
        "development",
        "Engineering",
        "teams",
        "implementation",
        "build",
        "scripts",
        "integration",
        "infrastructure",
        "deployment",
        "tools",
        "user",
        "interfaces",
        "HTML",
        "CSS",
        "JavaScript",
        "JSON",
        "JQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "template",
        "language",
        "Website",
        "interface",
        "Nagios",
        "system",
        "monitoring",
        "tools",
        "Experience",
        "CSS",
        "concepts",
        "layouts",
        "Environment",
        "Django",
        "Git",
        "Python",
        "Linux",
        "Postgres",
        "Nagios",
        "Python",
        "developer",
        "City",
        "Group",
        "New",
        "Jersey",
        "August",
        "October",
        "Responsibilities",
        "design",
        "development",
        "administration",
        "data",
        "process",
        "TERADATASQL",
        "scripts",
        "scripts",
        "data",
        "validation",
        "checks",
        "metadata",
        "review",
        "responsibilities",
        "areas",
        "data",
        "access",
        "delivery",
        "technologies",
        "expertise",
        "data",
        "quality",
        "data",
        "organization",
        "metadata",
        "data",
        "Data",
        "sizes",
        "hundreds",
        "millions",
        "records",
        "millions",
        "records",
        "files",
        "spreadsheets",
        "Driver",
        "tables",
        "data",
        "Teradata",
        "Redshift",
        "UD",
        "interim",
        "Driver",
        "Mapping",
        "source",
        "fields",
        "table",
        "fields",
        "S3RAW",
        "Ready",
        "Extract",
        "datasets",
        "REDSHIFT",
        "AWS",
        "CLI",
        "Python",
        "AWS",
        "services",
        "EC2",
        "S3",
        "IAM",
        "REDSHIFT",
        "Data",
        "ingestion",
        "configure",
        "parameters",
        "FUSION",
        "BAU",
        "testing",
        "Teradata",
        "Redshift",
        "PDS",
        "BAU",
        "data",
        "workflow",
        "Mainframe",
        "files",
        "Cluster",
        "validationPreproc",
        "Wrapper",
        "XFORM",
        "JBOS",
        "S3",
        "REDSHIFT",
        "FRB",
        "reports",
        "Python",
        "Pandas",
        "XLSX",
        "writer",
        "modules",
        "Kohls",
        "library",
        "Scripts",
        "scripts",
        "Driver",
        "table",
        "scripts",
        "others",
        "Teradata",
        "SQL",
        "syntax",
        "Redshift",
        "PSQL",
        "syntax",
        "Branded",
        "card",
        "tables",
        "validation",
        "testing",
        "shell",
        "SQL",
        "scripts",
        "python",
        "PSQL",
        "AWS",
        "assignment",
        "work",
        "environment",
        "properties",
        "business",
        "Ability",
        "data",
        "production",
        "systems",
        "platforms",
        "Experience",
        "domain",
        "clients",
        "supervision",
        "oversight",
        "milestones",
        "Ability",
        "information",
        "analyst",
        "team",
        "systems",
        "migration",
        "responsibilities",
        "Environment",
        "Django",
        "Python",
        "Linux",
        "PSQL",
        "Postgres",
        "Build",
        "Python",
        "Engineer",
        "March",
        "June",
        "Responsibilities",
        "configuration",
        "management",
        "policies",
        "practices",
        "regards",
        "SDLC",
        "automation",
        "scripting",
        "languages",
        "Shell",
        "Python",
        "Scripting",
        "partnerships",
        "business",
        "unit",
        "knowledge",
        "base",
        "business",
        "line",
        "business",
        "plan",
        "products",
        "processes",
        "build",
        "deployment",
        "Java",
        "applications",
        "environments",
        "QA",
        "UAT",
        "Production",
        "Build",
        "deployment",
        "scripts",
        "python",
        "Shell",
        "development",
        "QA",
        "environments",
        "Version",
        "Control",
        "tools",
        "GIT",
        "Python",
        "Django",
        "graphics",
        "XML",
        "json",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Packaging",
        "build",
        "Test",
        "chain",
        "SVN",
        "DevTestProd",
        "Branching",
        "Model",
        "releases",
        "Hands",
        "standard",
        "SCM",
        "Git",
        "CICD",
        "JenkinsMaven",
        "process",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "developers",
        "Business",
        "Analyst",
        "Mangers",
        "code",
        "Production",
        "Environment",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Installation",
        "Python",
        "Linux",
        "test",
        "beds",
        "JSON",
        "REST",
        "Web",
        "services",
        "property",
        "list",
        "application",
        "python",
        "branches",
        "GIT",
        "implementation",
        "parallel",
        "development",
        "process",
        "deployment",
        "request",
        "tickets",
        "Bugzilla",
        "code",
        "Production",
        "support",
        "administration",
        "Jenkins",
        "SonarQube",
        "GIT",
        "automations",
        "Jenkins",
        "Linux",
        "machines",
        "master",
        "slave",
        "configurations",
        "builds",
        "Environment",
        "GIT",
        "Jenkins",
        "Nexus",
        "Django",
        "Linux",
        "PythonShell",
        "script",
        "Tomcat",
        "Education",
        "Bachelors",
        "Skills",
        "deployment",
        "years",
        "Django",
        "years",
        "JSON",
        "years",
        "Linux",
        "years",
        "Python",
        "years",
        "Additional",
        "Information",
        "Programming",
        "Skills",
        "Python",
        "C",
        "C",
        "Core",
        "Java",
        "Web",
        "Development",
        "Skills",
        "HTML5",
        "CSS3",
        "JavaScript",
        "PHP",
        "JSON",
        "JQuery",
        "AJAX",
        "XML",
        "Bootstrap",
        "Frameworks",
        "Django",
        "Flask",
        "Frameworks",
        "Django",
        "Flask",
        "IDEs",
        "Geany",
        "PyCharm",
        "Eclipse",
        "Android",
        "Studio",
        "Spyder",
        "NetBeans",
        "Database",
        "Oracle",
        "SQL",
        "MySQL",
        "PLSQL",
        "PostgreSQL",
        "Operating",
        "Systems",
        "LINUX",
        "UNIX",
        "WINDOWS",
        "Web",
        "Services",
        "REST",
        "SOAP",
        "AWS",
        "Servers",
        "Apache",
        "Tomcat",
        "Web",
        "Logic",
        "Version",
        "Control",
        "ToolsGit",
        "GitHub",
        "SVN",
        "Development",
        "Process",
        "Waterfall",
        "Agile",
        "Scrum",
        "Bug",
        "Tracking",
        "Tool",
        "JIRA",
        "Bugzilla",
        "Deployment",
        "Tools",
        "Heroku",
        "Jenkins"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:42:44.124710",
    "resume_data": "Python developer span lPythonspan span ldeveloperspan Python developer Texas Instruments Texas New Jersey Wildlife and Game Refuge NJ Authorized to work in the US for any employer Work Experience Python developer Texas Instruments Texas November 2018 to Present Responsibilities Have work experience with various Python Integrated Development Environments like PyCharm Eclipse and Net Beans Involved in development of the enterprise social network application using Python Twisted and Cassandra Good understanding of Postgres both database modeling and efficient querying and updates Experience in Python programming using Django and Postgres Solid in OOPS and Design Patterns and Linux based development Ability to troubleshoot the existing application and provide root cause analysis Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and Postgres SQL Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Experience with TestDriven Development TDD using packages such as mocking frameworks and unit test Used Mongo DB internal tools like Mongo Compass Mongo Atlas Manager Ops Manager and Cloud Manager etc Designed dynamic and crossbrowser compatible pages using web technologies such as AngularJS Html5 CSS3 JavaScript JQuery JSON CSS bootstrap JSP Designed dynamic and crossbrowser compatible pages using web technologies such as AngularJS Html5 CSS3 JavaScript JQuery JSON CSS bootstrap JSP Experience in Mongo DB installation patching troubleshooting performance trackingtuning back up and recovery in dynamic environments Responsible for setting up Python REST API framework and spring framework using Django Managed and improved the build infrastructure for global software development Engineering teams including implementation of build scripts continuous integration infrastructure and deployment tools Developed user interfaces using HTML CSS JavaScript Ajax JSON and JQuery Developed views and templates with Python and using Djangos view controller and template language Website interface is created Worked extensively with Nagios monitoring system as well as other monitoring tools Experience with advanced CSS concepts and also building tablefree layouts Environment Django Git Python oops Linux Postgres Nagios Python developer City Group New Jersey August 2015 to October 2018 Responsibilities Responsible for the design development and administration of analytical data process such as converting TERADATASQL scripts to REDSHIFTPSQL scripts data validation checks metadata review included within those responsibilities are the areas of data access and delivery technologies Includes expertise in data quality data organization metadata and data profiling Data set sizes are usually huge more than hundreds of millions of records storing millions of records in csv files and excel spreadsheets Leveraging Driver tables to pull data in Teradata Redshift UD interim and Driver Mapping the true source of the fields from the table and moving the fields from S3RAW LOAD Ready Extract datasets to REDSHIFT using AWS CLI and Python Working with AWS services like EC2 S3 IAM and REDSHIFT Data ingestion to configure parameters Working on FUSION UAT BAU testing for both Teradata and Redshift Understanding the PDS BAU data workflow such from following Mainframe files Cluster validationPreproc Wrapper XFORM JBOS S3 REDSHIFT LOAD Working on FRB reporting converting and making reports using Python Pandas XLSX writer etc modules Converting Kohls library metric Scripts commonly used metric scripts Driver table scripts and others etc from Teradata SQL syntax to Redshift PSQL syntax Branded card tables and fields validation and testing from converting the shell SQL scripts to python and PSQL in AWS Demonstrated to move from one sequential assignment to the next work environment and properties can change quickly depending on business needs Ability to move data between production systems and across multiple platforms Experience with Financial domain clients Works substantially with little supervision or oversight to deliver key milestones Ability to deliver highly technical information to an analyst team to support their own systems migration responsibilities Environment Django Python oops Linux PSQL Postgres Build Python Engineer IN March 2012 to June 2015 Responsibilities Well versed with configuration management policies and practices with regards to SDLC along with automation by using scripting languages like Shell Python Scripting Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Experienced in build and deployment of Java applications on to different environments such as QA UAT and Production Build and deployment of scripts using python scripting Shell to setup development and QA environments Worked with Version Control tools like GIT Used Python and Django creating graphics XML json processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Packaging build Test and Deploy chain SVN with DevTestProd Branching Model for weekly releases Hands on standard of SCM tools Git CICD JenkinsMaven process Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Coordinated with developers Business Analyst and Mangers to make sure that code is deployed in the Production Environment Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Generated property list for every application dynamically using python Created branches in GIT implementation parallel development process Created deployment request tickets in Bugzilla for the deploying the code to Production Provided ongoing support and administration for Jenkins SonarQube fortify scan GIT and build automations Installed Jenkins on Linux machines and created master and slave configurations to implement multiple parallel builds Environment GIT Jenkins Nexus Django Linux PythonShell script Tomcat Education Bachelors Skills deployment 3 years Django 6 years JSON 3 years Linux 6 years Python 6 years Additional Information Programming Skills Python C C Core Java Web Development Skills HTML5 CSS3 JavaScript PHP JSON JQuery AJAX XML and Bootstrap Frameworks Django and Flask Frameworks Django and Flask IDEs Geany PyCharm Eclipse Android Studio Spyder and NetBeans Database Oracle SQL MySQL PLSQL PostgreSQL Operating Systems LINUX UNIX and WINDOWS Web Services REST SOAP and AWS Servers Apache Tomcat and Web Logic Version Control ToolsGit GitHub and SVN Development Process Waterfall Agile and Scrum Bug Tracking Tool JIRA Bugzilla Deployment Tools Heroku Jenkins",
    "unique_id": "82696a93-b1f5-4f1d-bfe9-c6e4a60880e2"
}