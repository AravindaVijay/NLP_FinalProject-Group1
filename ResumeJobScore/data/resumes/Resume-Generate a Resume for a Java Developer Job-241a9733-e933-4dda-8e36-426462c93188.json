{
    "clean_data": "Python Automation Engineer Developer span lPythonspan Automation Engineerspan lDeveloperspan Python Automation Engineer Developer Mavenir MA Over 5 years of IT experience in developing and deploying projects with Python and frameworks such as DjangoFlask using one or more ofMySQL HTML Javascript MVCAJAX LinuxUnix Extensive knowledge in Python Django PHP MYSQL UNIX and Linux Good Knowledge Objected Oriented Concepts Standard Template Library Smart Pointers Data Structures and Design patterns Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Handson experience in Python scripting PythonSTL Django UI and web development Good experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Designed the frontend of the application using Python 27 HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Strong expertise in development of web based applications using Python Django HTML XML Angular JS CSS DHTML JavaScript JSON and JQuery Good knowledge on front end frame works like CSS Bootstrap Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Sound experience in Core Java and Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge on Cisco technology knowledge in design administration implementation and support Indepth knowledge of deploying and troubleshooting IP protocols Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Good knowledge of web services with protocols SOAP REST Developed and executed White box test cases of the Java API using Test NG framework Eclipse Extended Testing framework by adding some helper classes and methods Experienced in working with server side technologies including databases restful API and MVC design patterns Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Good Experience in Linux Bash scripting and following PEP Guidelines in Python Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Experience in working with deployment tools like Microsoft Azure Heroku and Jenkins Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Skilled in debuggingtroubleshooting issues in complex applications Excellent experience with Python development under Linux OS Debian Ubuntu SUSELinux RedHatLinux Fedora Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Work Experience Python Automation Engineer Developer Mavenir MA September 2017 to Present Responsibilities Worked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology Involved in detailed analysis based on the requirement documents Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Provided Database Administration support for high volume production Oracle 11g 12c Databases Designed and created backend data access modules using PLSQL stored procedures and Oracle Designed and developed components using Python with Django framework Implemented code in Python to retrieve and manipulate data Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Created data frames in particular schema from raw data stored at Amazon S3 lambda using PySpark Used PySparkData frame for creation of table and performing analytics over it Participated in developing view pages using HTML5 CSS3 and Tag Libraries Experienced the serverside Java Script like Nodejs The creation of Web servers and Package manager like Node Package Manager NPM Involved in creating responsive web pages using Bootstrap tables and grids for displaying data and styling using CSS3 for enhancing the look and feel of Webpages Used Python IDEs such as Pycharm sublime text for developing the code and performing unit test and SIT Experience in smoke testing end to end testing regression testing integration testing staging testing staging with a production schemas production testing dry run black box white box Extensive experience in implementation of change request process and defect management process Experience developing andtesting dynamic databasedriven applications with web interfaces Hands on knowledge of Systemintegration functional regression and end to end testing Experience with Robot Framework Testing with Cisco Boxes like Juniper boxes Vnf Ethernet Decent experience in UNIX in developing the application and familiar with all its commands Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Have expertise with an in depth understanding of the wide range of AWS services like EC2 Knowledge of ChefPuppet as Configuration management tool to automate repetitive tasks quickly deploy critical applications and proactively manage change Experience working with Puppet Enterprise and Puppet Open Source Integrated data from multiple applications using ETL tools like SSIS Informatics Migration of Test Content to Automation Tool using Python and XML Created and implemented SOA services utilizing SOA programs Extensive use of version controller Team Foundation Server TFS Involved in start to end process of Hadoop cluster installation configuration and monitoring Responsible for building scalable distributed data solutions using Hadoop Managed and reviewed Hadoop log file and also worked in analyzing SQL scripts and designed the solution for the process using PySpark Built reusable Hive UDF libraries for business requirements which enabled users to use these UDFs in Hive Querying Experienced in migrating Hive QL into Impala to minimize query response time Creating database schema for MySQL Database and helped to draw ERDiagrams using Microsoft Visio Managed code versioning with GitHub and deployment to staging and production servers Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP RIDE REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Python Developer Nationwide Mutual Insurance OH January 2016 to September 2017 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component The PHPpage for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of PythonAPIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Doing UI Testing Functional Testing Feature Testing End to End Testing Working with Regression Team Doing Regression Testing Smoke Testing Sanity Testing Staging Testing White Box and Blackbox testing Testing Developer code with Java Scripting Dot Net and C sharp Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating Restful web services for Catalog and Pricing with DjangoMVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangosview controller and templating language to create a userfriendly website interface Used DjangoDatabase APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automates the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Education Masters in Computer Technology University of South Florida Skills Amazon Elastic Compute Cloud 2 years BOOTSTRAP 2 years DATABASE 2 years DJANGO 2 years EC2 2 years Additional Information TECHNICAL SKILLS Primary Languages Python Java CC Web Technologies HTML CSS DHTML XML Java Script Frameworks Bootstrap Django AngularJS Pyramid Hibernate Database Sqlite3 MSSQL MySQL Mongo DB Oracle 11g IDEs PyCharm Eclipses PyDev RIDE Servers Apache Tomcat WebSphere JBoss WebLogic XAMPP Deployment tools Heroku Amazon Web Services EC2 S3 EBS ELB SES Operating systems Windows Mac Fedora Linux Red hat Linux Python Libraries Beautiful Soup numpy scipy Pandas data frame urllib2 SDLC Methods SCRUM Agile Testing Frameworks Junit TestNG ROBOT JXL JTest Bug Tracking Tools Axosoft JIRA Bugzilla Rational Clearquest Version Controls VSS SVN Github GitBitBucket",
    "entities": [
        "SQL Server Integration Service",
        "Flashvars",
        "AJAX",
        "GUI",
        "ORMsDOMs",
        "Computer Technology University",
        "RESTFUL Technology Involved",
        "UNIX",
        "Cisco Boxes",
        "Interfacing",
        "Working",
        "IP",
        "Heroku",
        "Node Package",
        "Panda",
        "Indepth",
        "Hadoop",
        "XML",
        "SOAP",
        "DHTML",
        "Testing Developer",
        "SQL Server Analysis Service",
        "Hive UDF",
        "Shell",
        "MySQL Database",
        "Amazon S3",
        "LAMP",
        "Amazon",
        "DataLayer",
        "JQuery Developed",
        "SSIS",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "PySpark Used",
        "CSS Bootstrap",
        "Django",
        "Developed Business Logic",
        "Additional Information TECHNICAL SKILLS Primary Languages Python",
        "AntMaven Good",
        "SOA",
        "API RESTful Web Service",
        "Created Data",
        "RDS",
        "Views",
        "PyQt",
        "PyQtto",
        "Team Foundation",
        "Puppet Enterprise",
        "Flask SQL Alchemy",
        "MVC",
        "Django Curl XML JSON",
        "API",
        "HTML CSS JavaScript",
        "Linux Python Libraries Beautiful Soup",
        "SSIS Informatics Migration of Test Content to Automation Tool",
        "JQuery Handson",
        "Microsoft Excel Parsers",
        "Created",
        "XML Created",
        "PyCharm",
        "Puppet Open Source Integrated",
        "DjangoFlask",
        "Provided Database Administration",
        "SQL",
        "GitHub",
        "Database Administration",
        "Pycharm",
        "WebLogic XAMPP Deployment",
        "Python Automation Engineer Developer",
        "Wireshark",
        "JenkinsHudson",
        "MultiThreading Exception Handling",
        "Test NG",
        "Utilized Python",
        "Pandas",
        "ETL",
        "ERDiagrams",
        "Created UI",
        "Impala",
        "PEP Guidelines",
        "Djangos",
        "Cisco",
        "PySpark Built",
        "S3 RDS Education Masters",
        "Oracle Designed",
        "UI",
        "Microsoft",
        "Continuous Integration",
        "Created Business Logic",
        "Present Responsibilities Worked",
        "CSS",
        "CMS",
        "HTML5 CSS3",
        "WebSphere JBoss",
        "Amazon SQS Designed",
        "PHP",
        "Djangosview",
        "the Flash Good Experience"
    ],
    "experience": "Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Good knowledge of web services with protocols SOAP REST Developed and executed White box test cases of the Java API using Test NG framework Eclipse Extended Testing framework by adding some helper classes and methods Experienced in working with server side technologies including databases restful API and MVC design patterns Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Good Experience in Linux Bash scripting and following PEP Guidelines in Python Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Experience in working with deployment tools like Microsoft Azure Heroku and Jenkins Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Skilled in debuggingtroubleshooting issues in complex applications Excellent experience with Python development under Linux OS Debian Ubuntu SUSELinux RedHatLinux Fedora Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Work Experience Python Automation Engineer Developer Mavenir MA September 2017 to Present Responsibilities Worked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology Involved in detailed analysis based on the requirement documents Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Provided Database Administration support for high volume production Oracle 11 g 12c Databases Designed and created backend data access modules using PLSQL stored procedures and Oracle Designed and developed components using Python with Django framework Implemented code in Python to retrieve and manipulate data Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Created data frames in particular schema from raw data stored at Amazon S3 lambda using PySpark Used PySparkData frame for creation of table and performing analytics over it Participated in developing view pages using HTML5 CSS3 and Tag Libraries Experienced the serverside Java Script like Nodejs The creation of Web servers and Package manager like Node Package Manager NPM Involved in creating responsive web pages using Bootstrap tables and grids for displaying data and styling using CSS3 for enhancing the look and feel of Webpages Used Python IDEs such as Pycharm sublime text for developing the code and performing unit test and SIT Experience in smoke testing end to end testing regression testing integration testing staging testing staging with a production schemas production testing dry run black box white box Extensive experience in implementation of change request process and defect management process Experience developing andtesting dynamic databasedriven applications with web interfaces Hands on knowledge of Systemintegration functional regression and end to end testing Experience with Robot Framework Testing with Cisco Boxes like Juniper boxes Vnf Ethernet Decent experience in UNIX in developing the application and familiar with all its commands Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Have expertise with an in depth understanding of the wide range of AWS services like EC2 Knowledge of ChefPuppet as Configuration management tool to automate repetitive tasks quickly deploy critical applications and proactively manage change Experience working with Puppet Enterprise and Puppet Open Source Integrated data from multiple applications using ETL tools like SSIS Informatics Migration of Test Content to Automation Tool using Python and XML Created and implemented SOA services utilizing SOA programs Extensive use of version controller Team Foundation Server TFS Involved in start to end process of Hadoop cluster installation configuration and monitoring Responsible for building scalable distributed data solutions using Hadoop Managed and reviewed Hadoop log file and also worked in analyzing SQL scripts and designed the solution for the process using PySpark Built reusable Hive UDF libraries for business requirements which enabled users to use these UDFs in Hive Querying Experienced in migrating Hive QL into Impala to minimize query response time Creating database schema for MySQL Database and helped to draw ERDiagrams using Microsoft Visio Managed code versioning with GitHub and deployment to staging and production servers Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP RIDE REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Python Developer Nationwide Mutual Insurance OH January 2016 to September 2017 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component The PHPpage for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of PythonAPIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Doing UI Testing Functional Testing Feature Testing End to End Testing Working with Regression Team Doing Regression Testing Smoke Testing Sanity Testing Staging Testing White Box and Blackbox testing Testing Developer code with Java Scripting Dot Net and C sharp Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating Restful web services for Catalog and Pricing with DjangoMVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangosview controller and templating language to create a userfriendly website interface Used DjangoDatabase APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automates the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Education Masters in Computer Technology University of South Florida Skills Amazon Elastic Compute Cloud 2 years BOOTSTRAP 2 years DATABASE 2 years DJANGO 2 years EC2 2 years Additional Information TECHNICAL SKILLS Primary Languages Python Java CC Web Technologies HTML CSS DHTML XML Java Script Frameworks Bootstrap Django AngularJS Pyramid Hibernate Database Sqlite3 MSSQL MySQL Mongo DB Oracle 11 g IDEs PyCharm Eclipses PyDev RIDE Servers Apache Tomcat WebSphere JBoss WebLogic XAMPP Deployment tools Heroku Amazon Web Services EC2 S3 EBS ELB SES Operating systems Windows Mac Fedora Linux Red hat Linux Python Libraries Beautiful Soup numpy scipy Pandas data frame urllib2 SDLC Methods SCRUM Agile Testing Frameworks Junit TestNG ROBOT JXL JTest Bug Tracking Tools Axosoft JIRA Bugzilla Rational Clearquest Version Controls VSS SVN Github GitBitBucket",
    "extracted_keywords": [
        "Python",
        "Automation",
        "Engineer",
        "Developer",
        "lPythonspan",
        "Automation",
        "Engineerspan",
        "lDeveloperspan",
        "Python",
        "Automation",
        "Engineer",
        "Developer",
        "Mavenir",
        "MA",
        "years",
        "IT",
        "experience",
        "projects",
        "Python",
        "frameworks",
        "DjangoFlask",
        "ofMySQL",
        "HTML",
        "Javascript",
        "MVCAJAX",
        "LinuxUnix",
        "knowledge",
        "Python",
        "Django",
        "PHP",
        "MYSQL",
        "UNIX",
        "Linux",
        "Good",
        "Knowledge",
        "Objected",
        "Oriented",
        "Concepts",
        "Standard",
        "Template",
        "Library",
        "Smart",
        "Pointers",
        "Data",
        "Structures",
        "Design",
        "patterns",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Handson",
        "experience",
        "Python",
        "PythonSTL",
        "Django",
        "UI",
        "web",
        "development",
        "experience",
        "Amazon",
        "Cloud",
        "EC2",
        "Simple",
        "Storage",
        "Service",
        "S3",
        "Amazon",
        "SQS",
        "frontend",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "Strong",
        "expertise",
        "development",
        "web",
        "applications",
        "Python",
        "Django",
        "HTML",
        "XML",
        "JS",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "JQuery",
        "knowledge",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "experience",
        "Core",
        "Java",
        "Object",
        "Oriented",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Knowledge",
        "Cisco",
        "technology",
        "knowledge",
        "design",
        "administration",
        "implementation",
        "knowledge",
        "IP",
        "protocols",
        "Experience",
        "JenkinsHudson",
        "Continuous",
        "Integration",
        "server",
        "configure",
        "AntMaven",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "White",
        "box",
        "test",
        "cases",
        "Java",
        "API",
        "Test",
        "NG",
        "framework",
        "Eclipse",
        "Extended",
        "Testing",
        "framework",
        "helper",
        "classes",
        "methods",
        "server",
        "side",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "Good",
        "Experience",
        "Linux",
        "Bash",
        "PEP",
        "Guidelines",
        "Python",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "data",
        "SQL",
        "Server",
        "Integration",
        "Service",
        "SSIS",
        "SQL",
        "Server",
        "Analysis",
        "Service",
        "SSAS",
        "databases",
        "ORMsDOMs",
        "MySQL",
        "Postgres",
        "Neo4J",
        "MongoDB",
        "custom",
        "queries",
        "database",
        "connectors",
        "Expertise",
        "database",
        "connections",
        "Java",
        "Python",
        "packages",
        "JDBC",
        "MySQL",
        "Python",
        "Experience",
        "tools",
        "Microsoft",
        "Azure",
        "Heroku",
        "Jenkins",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "issues",
        "applications",
        "experience",
        "Python",
        "development",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "SUSELinux",
        "RedHatLinux",
        "Fedora",
        "Experience",
        "Database",
        "Administration",
        "development",
        "design",
        "maintenance",
        "production",
        "support",
        "databases",
        "business",
        "applications",
        "server",
        "setup",
        "MySQL",
        "Server",
        "installation",
        "upgrade",
        "migration",
        "Work",
        "Experience",
        "Python",
        "Automation",
        "Engineer",
        "Developer",
        "Mavenir",
        "MA",
        "September",
        "Present",
        "Responsibilities",
        "Restful",
        "web",
        "services",
        "client",
        "server",
        "changes",
        "SOAP",
        "RESTFUL",
        "Technology",
        "analysis",
        "requirement",
        "documents",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "Database",
        "Administration",
        "support",
        "volume",
        "production",
        "Oracle",
        "g",
        "12c",
        "Databases",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "components",
        "Python",
        "Django",
        "framework",
        "code",
        "Python",
        "manipulate",
        "data",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "data",
        "frames",
        "schema",
        "data",
        "Amazon",
        "S3",
        "lambda",
        "PySpark",
        "frame",
        "creation",
        "table",
        "analytics",
        "view",
        "pages",
        "HTML5",
        "CSS3",
        "Tag",
        "Libraries",
        "serverside",
        "Java",
        "Script",
        "Nodejs",
        "creation",
        "Web",
        "servers",
        "Package",
        "manager",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "web",
        "pages",
        "Bootstrap",
        "tables",
        "grids",
        "data",
        "styling",
        "CSS3",
        "look",
        "feel",
        "Webpages",
        "Python",
        "IDEs",
        "Pycharm",
        "text",
        "code",
        "unit",
        "test",
        "SIT",
        "Experience",
        "smoke",
        "testing",
        "end",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "staging",
        "testing",
        "staging",
        "production",
        "schemas",
        "production",
        "testing",
        "black",
        "box",
        "white",
        "box",
        "Extensive",
        "experience",
        "implementation",
        "change",
        "request",
        "process",
        "management",
        "process",
        "Experience",
        "applications",
        "web",
        "interfaces",
        "Hands",
        "knowledge",
        "Systemintegration",
        "regression",
        "end",
        "Experience",
        "Robot",
        "Framework",
        "Testing",
        "Cisco",
        "Boxes",
        "Juniper",
        "boxes",
        "Vnf",
        "Ethernet",
        "Decent",
        "experience",
        "UNIX",
        "application",
        "commands",
        "web",
        "services",
        "Python",
        "Django",
        "REST",
        "framework",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "communication",
        "testing",
        "expertise",
        "depth",
        "understanding",
        "range",
        "AWS",
        "services",
        "EC2",
        "Knowledge",
        "ChefPuppet",
        "Configuration",
        "management",
        "tool",
        "tasks",
        "applications",
        "change",
        "Experience",
        "Puppet",
        "Enterprise",
        "Puppet",
        "Open",
        "Source",
        "Integrated",
        "data",
        "applications",
        "ETL",
        "tools",
        "SSIS",
        "Informatics",
        "Migration",
        "Test",
        "Content",
        "Automation",
        "Tool",
        "Python",
        "XML",
        "SOA",
        "services",
        "SOA",
        "programs",
        "use",
        "version",
        "controller",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "start",
        "end",
        "process",
        "Hadoop",
        "cluster",
        "installation",
        "configuration",
        "data",
        "solutions",
        "Hadoop",
        "Managed",
        "Hadoop",
        "log",
        "file",
        "SQL",
        "scripts",
        "solution",
        "process",
        "PySpark",
        "Hive",
        "UDF",
        "business",
        "requirements",
        "users",
        "UDFs",
        "Hive",
        "Querying",
        "Hive",
        "QL",
        "Impala",
        "query",
        "response",
        "time",
        "database",
        "schema",
        "MySQL",
        "Database",
        "ERDiagrams",
        "Microsoft",
        "Visio",
        "Managed",
        "code",
        "GitHub",
        "deployment",
        "staging",
        "production",
        "servers",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "MySQL",
        "AJAX",
        "SOAP",
        "RIDE",
        "REST",
        "JQuery",
        "JavaScript",
        "Bootstrap",
        "PyCharm",
        "EC2",
        "S3",
        "RDS",
        "Python",
        "Developer",
        "Nationwide",
        "Mutual",
        "Insurance",
        "OH",
        "January",
        "September",
        "Responsibilities",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "package",
        "information",
        "Python",
        "wxPython",
        "numPY",
        "Twisted",
        "matPlotLib",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Used",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "PHPpage",
        "data",
        "AJAX",
        "data",
        "page",
        "data",
        "csv",
        "Microsoft",
        "Excel",
        "Parsers",
        "Python",
        "data",
        "design",
        "data",
        "base",
        "Development",
        "PythonAPIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "UI",
        "Testing",
        "Functional",
        "Testing",
        "Feature",
        "Testing",
        "End",
        "End",
        "Testing",
        "Working",
        "Regression",
        "Team",
        "Regression",
        "Testing",
        "Smoke",
        "Testing",
        "Sanity",
        "Testing",
        "Staging",
        "Testing",
        "White",
        "Box",
        "Blackbox",
        "testing",
        "Testing",
        "Developer",
        "code",
        "Java",
        "Scripting",
        "Dot",
        "Net",
        "C",
        "phpunit",
        "test",
        "cases",
        "DataLayer",
        "Searchserver",
        "classes",
        "Django",
        "Curl",
        "XML",
        "REST",
        "base",
        "services",
        "MongoDB",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "DjangoMVT",
        "Jersey",
        "MySQL",
        "MongoDB",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "reports",
        "package",
        "Numpy",
        "matPlotLib",
        "Usage",
        "advance",
        "features",
        "pickleunpickle",
        "python",
        "information",
        "applications",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "Data",
        "tables",
        "PyQtto",
        "display",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Utilize",
        "knowledge",
        "experience",
        "LAMP",
        "leadingedge",
        "products",
        "technology",
        "conjunction",
        "industry",
        "business",
        "skills",
        "solutions",
        "customer",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "views",
        "templates",
        "Python",
        "Djangosview",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "DjangoDatabase",
        "APIs",
        "database",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler2",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Pandas",
        "library",
        "Analysis",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Version",
        "control",
        "GITHub",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "MySQL",
        "AJAX",
        "SOAP",
        "REST",
        "JQuery",
        "JavaScript",
        "Bootstrap",
        "PyCharm",
        "EC2",
        "S3",
        "RDS",
        "Education",
        "Masters",
        "Computer",
        "Technology",
        "University",
        "South",
        "Florida",
        "Skills",
        "Amazon",
        "Elastic",
        "Compute",
        "Cloud",
        "years",
        "BOOTSTRAP",
        "years",
        "DATABASE",
        "years",
        "DJANGO",
        "years",
        "EC2",
        "years",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Primary",
        "Languages",
        "Python",
        "Java",
        "CC",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "DHTML",
        "XML",
        "Java",
        "Script",
        "Frameworks",
        "Bootstrap",
        "Django",
        "AngularJS",
        "Pyramid",
        "Hibernate",
        "Database",
        "Sqlite3",
        "MSSQL",
        "MySQL",
        "Mongo",
        "DB",
        "Oracle",
        "g",
        "IDEs",
        "PyCharm",
        "Eclipses",
        "PyDev",
        "RIDE",
        "Servers",
        "Apache",
        "Tomcat",
        "WebSphere",
        "JBoss",
        "WebLogic",
        "XAMPP",
        "Deployment",
        "tools",
        "Heroku",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "EBS",
        "ELB",
        "SES",
        "Operating",
        "systems",
        "Windows",
        "Mac",
        "Fedora",
        "Linux",
        "Red",
        "hat",
        "Linux",
        "Python",
        "Beautiful",
        "Soup",
        "Pandas",
        "data",
        "frame",
        "urllib2",
        "SDLC",
        "Methods",
        "Agile",
        "Testing",
        "Frameworks",
        "Junit",
        "TestNG",
        "JXL",
        "JTest",
        "Bug",
        "Tracking",
        "Tools",
        "Axosoft",
        "JIRA",
        "Bugzilla",
        "Rational",
        "Clearquest",
        "Version",
        "Controls",
        "VSS",
        "SVN",
        "Github",
        "GitBitBucket"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:11:04.234115",
    "resume_data": "Python Automation Engineer Developer span lPythonspan Automation Engineerspan lDeveloperspan Python Automation Engineer Developer Mavenir MA Over 5 years of IT experience in developing and deploying projects with Python and frameworks such as DjangoFlask using one or more ofMySQL HTML Javascript MVCAJAX LinuxUnix Extensive knowledge in Python Django PHP MYSQL UNIX and Linux Good Knowledge Objected Oriented Concepts Standard Template Library Smart Pointers Data Structures and Design patterns Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and JQuery Handson experience in Python scripting PythonSTL Django UI and web development Good experience with Amazon Cloud EC2 Simple Storage Service S3 and Amazon SQS Designed the frontend of the application using Python 27 HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Strong expertise in development of web based applications using Python Django HTML XML Angular JS CSS DHTML JavaScript JSON and JQuery Good knowledge on front end frame works like CSS Bootstrap Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Sound experience in Core Java and Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Knowledge on Cisco technology knowledge in design administration implementation and support Indepth knowledge of deploying and troubleshooting IP protocols Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Good knowledge of web services with protocols SOAP REST Developed and executed White box test cases of the Java API using Test NG framework Eclipse Extended Testing framework by adding some helper classes and methods Experienced in working with server side technologies including databases restful API and MVC design patterns Worked closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Good Experience in Linux Bash scripting and following PEP Guidelines in Python Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Experienced in monitoring developing and transforming data using SQL Server Integration Service SSIS and SQL Server Analysis Service SSAS Experienced with databases using ORMsDOMs for integrating with MySQL Postgres Neo4J MongoDB Also experienced with writing custom queries through database connectors Expertise in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Experience in working with deployment tools like Microsoft Azure Heroku and Jenkins Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Skilled in debuggingtroubleshooting issues in complex applications Excellent experience with Python development under Linux OS Debian Ubuntu SUSELinux RedHatLinux Fedora Experience in Database Administration development design maintenance and production support of relational databases business applications new server setup MySQL Server installation upgrade migration Work Experience Python Automation Engineer Developer Mavenir MA September 2017 to Present Responsibilities Worked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology Involved in detailed analysis based on the requirement documents Designed and maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Provided Database Administration support for high volume production Oracle 11g 12c Databases Designed and created backend data access modules using PLSQL stored procedures and Oracle Designed and developed components using Python with Django framework Implemented code in Python to retrieve and manipulate data Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Python and Django creating graphics XML processing data exchange and business logic implementation Created data frames in particular schema from raw data stored at Amazon S3 lambda using PySpark Used PySparkData frame for creation of table and performing analytics over it Participated in developing view pages using HTML5 CSS3 and Tag Libraries Experienced the serverside Java Script like Nodejs The creation of Web servers and Package manager like Node Package Manager NPM Involved in creating responsive web pages using Bootstrap tables and grids for displaying data and styling using CSS3 for enhancing the look and feel of Webpages Used Python IDEs such as Pycharm sublime text for developing the code and performing unit test and SIT Experience in smoke testing end to end testing regression testing integration testing staging testing staging with a production schemas production testing dry run black box white box Extensive experience in implementation of change request process and defect management process Experience developing andtesting dynamic databasedriven applications with web interfaces Hands on knowledge of Systemintegration functional regression and end to end testing Experience with Robot Framework Testing with Cisco Boxes like Juniper boxes Vnf Ethernet Decent experience in UNIX in developing the application and familiar with all its commands Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Have expertise with an in depth understanding of the wide range of AWS services like EC2 Knowledge of ChefPuppet as Configuration management tool to automate repetitive tasks quickly deploy critical applications and proactively manage change Experience working with Puppet Enterprise and Puppet Open Source Integrated data from multiple applications using ETL tools like SSIS Informatics Migration of Test Content to Automation Tool using Python and XML Created and implemented SOA services utilizing SOA programs Extensive use of version controller Team Foundation Server TFS Involved in start to end process of Hadoop cluster installation configuration and monitoring Responsible for building scalable distributed data solutions using Hadoop Managed and reviewed Hadoop log file and also worked in analyzing SQL scripts and designed the solution for the process using PySpark Built reusable Hive UDF libraries for business requirements which enabled users to use these UDFs in Hive Querying Experienced in migrating Hive QL into Impala to minimize query response time Creating database schema for MySQL Database and helped to draw ERDiagrams using Microsoft Visio Managed code versioning with GitHub and deployment to staging and production servers Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP RIDE REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Python Developer Nationwide Mutual Insurance OH January 2016 to September 2017 Responsibilities Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component The PHPpage for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of PythonAPIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Doing UI Testing Functional Testing Feature Testing End to End Testing Working with Regression Team Doing Regression Testing Smoke Testing Sanity Testing Staging Testing White Box and Blackbox testing Testing Developer code with Java Scripting Dot Net and C sharp Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating Restful web services for Catalog and Pricing with DjangoMVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Developed Business Logic using Python on Django Web Framework Developed views and templates with Python and Djangosview controller and templating language to create a userfriendly website interface Used DjangoDatabase APIs to access database objects Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Used objectrelational mapper ORM to automates the transfer of data stored in relational databases tables into objects Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Used Wireshark live http headers and Fiddler2 debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Used Pandas library for statistical Analysis Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3427 Django 17 MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Education Masters in Computer Technology University of South Florida Skills Amazon Elastic Compute Cloud 2 years BOOTSTRAP 2 years DATABASE 2 years DJANGO 2 years EC2 2 years Additional Information TECHNICAL SKILLS Primary Languages Python Java CC Web Technologies HTML CSS DHTML XML Java Script Frameworks Bootstrap Django AngularJS Pyramid Hibernate Database Sqlite3 MSSQL MySQL Mongo DB Oracle 11g IDEs PyCharm Eclipses PyDev RIDE Servers Apache Tomcat WebSphere JBoss WebLogic XAMPP Deployment tools Heroku Amazon Web Services EC2 S3 EBS ELB SES Operating systems Windows Mac Fedora Linux Red hat Linux Python Libraries Beautiful Soup numpy scipy Pandas data frame urllib2 SDLC Methods SCRUM Agile Testing Frameworks Junit TestNG ROBOT JXL JTest Bug Tracking Tools Axosoft JIRA Bugzilla Rational Clearquest Version Controls VSS SVN Github GitBitBucket",
    "unique_id": "241a9733-e933-4dda-8e36-426462c93188"
}