{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer GE Health Milwaukee WI Authorized to work in the US for any employer Work Experience Sr Python Developer GE Health Milwaukee WI July 2017 to Present Roles Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Implemented different python libraries NumPy SciPy PyTables Matplotlib pythontwitter Pandas data frame and urllib2 Participated in all phases of the System Development Life Cycle Analysis SDLC and responsible for gathering requirements system analysis design development testing and deployment Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashovers stored in the Django models Also created XML with Django to be used by the Flash Involved in building database Model APIs and Views using Python so as to manufacture an intuitive electronic arrangement Used Python based GUI parts for the frontend usefulness for example determination criteria made test saddle to empower exhaustive testing using Python Used Amazon Web Services AWS for enhanced productivity of capacity and quick access Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Worked on messaging solutions like ActiveMQ and worked on unit test plans UTP integrated test plans ITP and user acceptance testing UAT and involved in development of main modules like CSV import xlsx import bulk content upload Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Also used jQuery as library to create a Single Page Application Phases which can bind data to specific views and synchronize data with server and Worked with JQX widgets functionality Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Python based GUI segments for the frontend usefulness for example choice criteria Created test outfit to empower exhaustive testing using Python Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed Merge jobs in Python to extract and load data into MySQL database Used CouchBase Python SDK to build applications that use CouchBase Server Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Used IDQ to profile the project source data define or confirm the definition of the metadata cleanse and accuracy check the project data check for duplicate or redundant records and provide information on how to proceed with ETL processes Designed ETL processes and develop sourcetotarget data mappings integration workflows and load processes Used python to process the batch files and also scheduling the batch process Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Implemented Garbage collection with Python to enhance the performance by garbage collecting the older generated objects Automated RabbitMQ cluster installations and configuration using PythonBash Worked on Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCenter Datastax Ops center Wrote test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Configuring administering and monitoring multi node NoSQL Cassandra 3011 clusters and Datastax Enterprise Edition 503 on a realtime environment issues Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful Webservices MongoDB MySQL SQLite Cassandra Docker AWS EC2 S3 PyUnit Karma Jenkins Selenium Automation Testing Sr Python Developer Thales Avionics Irvine CA April 2015 to July 2017 Roles Responsibilities Implemented different python libraries NumPy SciPy PyTables Matplotlib PythonTwitter Pandas Data Frame and urllib2 in various tasks Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Coded model level validation using Python programming with emphasis in web security Handled Business logics by backend Python programming to achieve optimal results Implemented jQuery to improve the overall usability of the website interface and AJAX functionality to speed up web application Developed views and templates in Django to create a userfriendly website interface Constructed RESTful APIs using PHP and MySQLPostgreSQL Configured Django to manage URLs and application parameters Extensively used Python Django Framework for developing backend of web applications Used Django APIs for database access Developed reusable components using reactjs and redux for maintaining the state and actions of the functions Participate in discussions with business users for requirements related doubts Provide application maintenance and enhancement support for legacy system Utilized Futures and Spring Framework to make Asynchronous calls to the application Developed web services using Restful technology to support JSON and XML Create EC2 instances and maintaining applications on EC2 instances Setup and attached EBS volumes to EC2 instances Created new connections through applications for better access to MySQL database and involved in writing SQL PLSQL Stored procedures functions sequences triggers cursors object types etc Developed user interface using JSP jQuery and AJAX to speed the application Worked on AWS provided Solutions like EC2 and ELB which includes Creating EC2 instances adding EBS volumes for EC2 Changed directories and executing a batch file in python in windows Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Worked on resulting reports of the application and Tableau reports Implemented AJAX to update necessary section of webpages and hence avoiding the need for reloading the entire web page Extensively used ETL for testing and supporting data extraction transformations and loading processing in a  Solution using Informatica Designed and tested UNIX shell scripts as part of the ETL testing process to automate the process of loading pulling the data for testing ETL loads Created batch file that runs Manage Map Server Cache Tiles and other caching tools then scheduling that script to run on nights or weekends when it would be least disruptive to users of the Web map Implemented the Project structure based on Spring MVC pattern using spring boot Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Worked on creating and configuring virtual development environments with Chef and Virtual Box Designed maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Created PyUnit test cases for unit testing Development of test framework using the Python Managed code with unit tests and GitHub Developed Capistrano scripts to automate deployment on various environments Used GIT as Source control repositories with regular code reviews and pullmerge requests Environment Python 2730 Django XML Hadoop pig hive PySpark AWS ETL HDFS HBase MongoDB Agile SCRUM PyUnit Apache CSS MySQL DHTML HTML JavaScript AngularJS Shell Scripts Git Linux Unix and Windows Python Developer Financial Group Boone IA December 2012 to April 2015 Roles Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Built PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed web applications in Django Frameworks model view control MVC architecture Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing and web application testing Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed custom screens using HTML5 JavaScript JQuery Bootstrap and Angular Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Amazon Web Services AWS for improved efficiency of storage and fast access Used GitHub for Python source code version control Jenkins for automating the build Docker containers Develop consumerbased features and applications using Python Django HTML and TestDriven Development TDD Wrote existing PythonDjango modules to deliver certain format of data Responsible for tracking and monitoring project status in JIRA Agile Developed Python web services for processing JSON and interfacing with the Data layer Worked on deployment of project on to Amazon S3 Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Worked with Flask to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in Developing a Restful APIS service using Python Flask framework Build SQL queries for performing various CRUD operations like create update read and delete Used Collections in Python for manipulating and looping through different user defined objects Environment Python 34 Django 18 Linux HTML5 CSS Bootstrap MySQL SQL PLSQL XML Heroku JavaScript JQuery JSP JSON Restful API MVC architecture AWS EC2 GitHub Python Developer Camp Systems Ronkonkoma NY August 2010 to December 2012 Roles Responsibilities Used SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework on MySQL Used Django APIs for database access Designed and developed data management system using MySQL Built application logic using Python 27 Used Django APIs for database access Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Developed shopping cart for Library and integrated web services to access the payment Used PhP language on lamp server to develop page Developed dynamic interaction page on net MS visual basic 2014 using SQL developer tools Environment Python JavaScript Django Framework 13 SQL MySQL LAMP JQuery PHP Cassandra Flask Education Bachelors Skills CSS 8 years DJANGO 8 years HTML 8 years jQuery 8 years MYSQL 8 years Additional Information Resultdriven IT Professional with 8 years of experience as a Web Application Developer and coding with analytical programming skills using Python Django Flask Highly skilled in Python modules such as NumPy Matplotlib etc for generating complex graphical data creation of histograms etc Experience Object Oriented programming OOP concepts using Python C and PHP Experience in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Strong experience in planning designing developing Architecting and implementation in Amazon Web Services Cloud and Python Experience on Requests Pysftp Gnupg ReportLab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Expert in developing of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Good knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting and bash scripting Experience in developing highly interactive web applications utilizing JavaScript HTML5 CSS JSON AngularJS and Bootstrap and integrating Restful APIs Experience in developing Object Relation Mappings using Hibernate JDBC Spring JDBC and Spring Data with RDMS Oracle DB2 and MySQL and NoSQL redshift Cassandra databases Experience in the field of Data warehouse using ETL tools such as Informatica Power Center Power Mart 9x8x databases as DB2 Oracle MS SQL Server and Teradata Experience with build tools like Buck BitBake Apache Ant Apache Maven Boot Grunt GNU Expert in Designing Developing and Maintaining Big Data Solutions to the Supply Chain Management Transport and ECommerce Domains Technical competencies Methodologies Agile Scrum Waterfall Languages Python 2X Python 3X C C Java SQL PHP Swift Web technologies HTML CSS XHTML Java Script jQuery Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Operating Systems Linux Windows 1087VistaXP Mac",
    "entities": [
        "Python Flask",
        "DSE DevCenter Datastax Ops center Wrote",
        "Pandas Data Frame",
        "Spring Framework",
        "Bash Implemented Multithreading",
        "UTP",
        "AJAX",
        "Test Driven Development TDD",
        "GUI",
        "UNIX",
        "Agile Software Methodology",
        "Work Experience Sr Python Developer",
        "LAMP Linux",
        "jQuery Good",
        "Amazon Web Services AWS",
        "XML",
        "the System Development Life Cycle Analysis SDLC",
        "Created PyUnit",
        "PyUnit",
        "the Supply Chain Management Transport",
        "Shell",
        "Automated",
        "Datastax Enterprise Edition",
        "LAMP",
        "UAT",
        "Amazon",
        "Selenium Automation",
        "Python C",
        "Python",
        "Python Django Flask Highly",
        "PHP Experience",
        "Amazon AWS S3",
        "Developed",
        "Windows Python Developer Financial Group",
        "Django",
        "a Single Page Application Phases",
        "redux",
        "Restful",
        "Object Relation Mappings",
        "JQX",
        "PythonPHP",
        "Develop",
        "Linux",
        "JSP",
        "RDMS Oracle DB2",
        "Collaborated",
        "TestDriven Development TDD Wrote",
        "Docker",
        "RDS",
        "Views",
        "MVC",
        "PySpark AWS ETL HDFS HBase",
        "PythonDjango",
        "GIT",
        "CSV",
        "Development of Python",
        "Oracle MS SQL Server",
        "API",
        "US",
        "ITP",
        "Spring Data",
        "the metadata cleanse",
        "Utilized Futures",
        "Created",
        "Python Django Framework",
        "Sqlite3",
        "AWS",
        "WAMP Windows Apache",
        "Coded",
        "ELB",
        "IDQ",
        "SQL",
        "lPythonspan",
        "CouchBase",
        "the Flash Involved",
        "GitHub Developed Capistrano",
        "Amazon AWS",
        "Pandas",
        "GitHub Python Developer Camp Systems Ronkonkoma",
        "Amazon S3 Worked",
        "Amazon Web Services Cloud and Python Experience on Requests Pysftp Gnupg ReportLab Numpy",
        "ETL",
        "SQL PLSQL Stored",
        "CRUD",
        "Restful APIs Experience",
        "Oracle Microsoft",
        "Performed",
        "Development of test",
        "SMTP",
        "Informatica Power Center Power Mart",
        "CSS",
        "CMS",
        "Buck BitBake Apache",
        "jQuery",
        "SDK",
        "REST",
        "Data",
        "TDD",
        "PHP",
        "Tableau",
        "NoSQL",
        "Worked with JSON",
        "EBS",
        "Integration",
        "Bash Developed"
    ],
    "experience": "Experience Sr Python Developer GE Health Milwaukee WI July 2017 to Present Roles Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Implemented different python libraries NumPy SciPy PyTables Matplotlib pythontwitter Pandas data frame and urllib2 Participated in all phases of the System Development Life Cycle Analysis SDLC and responsible for gathering requirements system analysis design development testing and deployment Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashovers stored in the Django models Also created XML with Django to be used by the Flash Involved in building database Model APIs and Views using Python so as to manufacture an intuitive electronic arrangement Used Python based GUI parts for the frontend usefulness for example determination criteria made test saddle to empower exhaustive testing using Python Used Amazon Web Services AWS for enhanced productivity of capacity and quick access Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Worked on messaging solutions like ActiveMQ and worked on unit test plans UTP integrated test plans ITP and user acceptance testing UAT and involved in development of main modules like CSV import xlsx import bulk content upload Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Also used jQuery as library to create a Single Page Application Phases which can bind data to specific views and synchronize data with server and Worked with JQX widgets functionality Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Python based GUI segments for the frontend usefulness for example choice criteria Created test outfit to empower exhaustive testing using Python Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed Merge jobs in Python to extract and load data into MySQL database Used CouchBase Python SDK to build applications that use CouchBase Server Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Used IDQ to profile the project source data define or confirm the definition of the metadata cleanse and accuracy check the project data check for duplicate or redundant records and provide information on how to proceed with ETL processes Designed ETL processes and develop sourcetotarget data mappings integration workflows and load processes Used python to process the batch files and also scheduling the batch process Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Implemented Garbage collection with Python to enhance the performance by garbage collecting the older generated objects Automated RabbitMQ cluster installations and configuration using PythonBash Worked on Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCenter Datastax Ops center Wrote test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Configuring administering and monitoring multi node NoSQL Cassandra 3011 clusters and Datastax Enterprise Edition 503 on a realtime environment issues Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful Webservices MongoDB MySQL SQLite Cassandra Docker AWS EC2 S3 PyUnit Karma Jenkins Selenium Automation Testing Sr Python Developer Thales Avionics Irvine CA April 2015 to July 2017 Roles Responsibilities Implemented different python libraries NumPy SciPy PyTables Matplotlib PythonTwitter Pandas Data Frame and urllib2 in various tasks Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Coded model level validation using Python programming with emphasis in web security Handled Business logics by backend Python programming to achieve optimal results Implemented jQuery to improve the overall usability of the website interface and AJAX functionality to speed up web application Developed views and templates in Django to create a userfriendly website interface Constructed RESTful APIs using PHP and MySQLPostgreSQL Configured Django to manage URLs and application parameters Extensively used Python Django Framework for developing backend of web applications Used Django APIs for database access Developed reusable components using reactjs and redux for maintaining the state and actions of the functions Participate in discussions with business users for requirements related doubts Provide application maintenance and enhancement support for legacy system Utilized Futures and Spring Framework to make Asynchronous calls to the application Developed web services using Restful technology to support JSON and XML Create EC2 instances and maintaining applications on EC2 instances Setup and attached EBS volumes to EC2 instances Created new connections through applications for better access to MySQL database and involved in writing SQL PLSQL Stored procedures functions sequences triggers cursors object types etc Developed user interface using JSP jQuery and AJAX to speed the application Worked on AWS provided Solutions like EC2 and ELB which includes Creating EC2 instances adding EBS volumes for EC2 Changed directories and executing a batch file in python in windows Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Worked on resulting reports of the application and Tableau reports Implemented AJAX to update necessary section of webpages and hence avoiding the need for reloading the entire web page Extensively used ETL for testing and supporting data extraction transformations and loading processing in a   Solution using Informatica Designed and tested UNIX shell scripts as part of the ETL testing process to automate the process of loading pulling the data for testing ETL loads Created batch file that runs Manage Map Server Cache Tiles and other caching tools then scheduling that script to run on nights or weekends when it would be least disruptive to users of the Web map Implemented the Project structure based on Spring MVC pattern using spring boot Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Worked on creating and configuring virtual development environments with Chef and Virtual Box Designed maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Created PyUnit test cases for unit testing Development of test framework using the Python Managed code with unit tests and GitHub Developed Capistrano scripts to automate deployment on various environments Used GIT as Source control repositories with regular code reviews and pullmerge requests Environment Python 2730 Django XML Hadoop pig hive PySpark AWS ETL HDFS HBase MongoDB Agile SCRUM PyUnit Apache CSS MySQL DHTML HTML JavaScript AngularJS Shell Scripts Git Linux Unix and Windows Python Developer Financial Group Boone IA December 2012 to April 2015 Roles Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Built PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed web applications in Django Frameworks model view control MVC architecture Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing and web application testing Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed custom screens using HTML5 JavaScript JQuery Bootstrap and Angular Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Amazon Web Services AWS for improved efficiency of storage and fast access Used GitHub for Python source code version control Jenkins for automating the build Docker containers Develop consumerbased features and applications using Python Django HTML and TestDriven Development TDD Wrote existing PythonDjango modules to deliver certain format of data Responsible for tracking and monitoring project status in JIRA Agile Developed Python web services for processing JSON and interfacing with the Data layer Worked on deployment of project on to Amazon S3 Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Worked with Flask to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in Developing a Restful APIS service using Python Flask framework Build SQL queries for performing various CRUD operations like create update read and delete Used Collections in Python for manipulating and looping through different user defined objects Environment Python 34 Django 18 Linux HTML5 CSS Bootstrap MySQL SQL PLSQL XML Heroku JavaScript JQuery JSP JSON Restful API MVC architecture AWS EC2 GitHub Python Developer Camp Systems Ronkonkoma NY August 2010 to December 2012 Roles Responsibilities Used SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework on MySQL Used Django APIs for database access Designed and developed data management system using MySQL Built application logic using Python 27 Used Django APIs for database access Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Developed shopping cart for Library and integrated web services to access the payment Used PhP language on lamp server to develop page Developed dynamic interaction page on net MS visual basic 2014 using SQL developer tools Environment Python JavaScript Django Framework 13 SQL MySQL LAMP JQuery PHP Cassandra Flask Education Bachelors Skills CSS 8 years DJANGO 8 years HTML 8 years jQuery 8 years MYSQL 8 years Additional Information Resultdriven IT Professional with 8 years of experience as a Web Application Developer and coding with analytical programming skills using Python Django Flask Highly skilled in Python modules such as NumPy Matplotlib etc for generating complex graphical data creation of histograms etc Experience Object Oriented programming OOP concepts using Python C and PHP Experience in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Strong experience in planning designing developing Architecting and implementation in Amazon Web Services Cloud and Python Experience on Requests Pysftp Gnupg ReportLab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Expert in developing of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Good knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting and bash scripting Experience in developing highly interactive web applications utilizing JavaScript HTML5 CSS JSON AngularJS and Bootstrap and integrating Restful APIs Experience in developing Object Relation Mappings using Hibernate JDBC Spring JDBC and Spring Data with RDMS Oracle DB2 and MySQL and NoSQL redshift Cassandra databases Experience in the field of Data warehouse using ETL tools such as Informatica Power Center Power Mart 9x8x databases as DB2 Oracle MS SQL Server and Teradata Experience with build tools like Buck BitBake Apache Ant Apache Maven Boot Grunt GNU Expert in Designing Developing and Maintaining Big Data Solutions to the Supply Chain Management Transport and ECommerce Domains Technical competencies Methodologies Agile Scrum Waterfall Languages Python 2X Python 3X C C Java SQL PHP Swift Web technologies HTML CSS XHTML Java Script jQuery Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Operating Systems Linux Windows 1087VistaXP Mac",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "GE",
        "Health",
        "Milwaukee",
        "WI",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "GE",
        "Health",
        "Milwaukee",
        "WI",
        "July",
        "Present",
        "Roles",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "python",
        "NumPy",
        "SciPy",
        "PyTables",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "urllib2",
        "phases",
        "System",
        "Development",
        "Life",
        "Cycle",
        "Analysis",
        "SDLC",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "Worked",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashovers",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "arrangement",
        "Python",
        "GUI",
        "parts",
        "frontend",
        "usefulness",
        "example",
        "determination",
        "criteria",
        "test",
        "saddle",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "productivity",
        "capacity",
        "access",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "Angularjs",
        "Twitter",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "solutions",
        "ActiveMQ",
        "unit",
        "test",
        "UTP",
        "test",
        "plans",
        "user",
        "acceptance",
        "testing",
        "UAT",
        "development",
        "modules",
        "CSV",
        "import",
        "xlsx",
        "import",
        "bulk",
        "content",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "jQuery",
        "library",
        "Single",
        "Page",
        "Application",
        "Phases",
        "data",
        "views",
        "data",
        "server",
        "JQX",
        "widgets",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "Python",
        "GUI",
        "segments",
        "frontend",
        "usefulness",
        "example",
        "choice",
        "criteria",
        "test",
        "outfit",
        "testing",
        "Python",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Created",
        "PyUnit",
        "test",
        "scripts",
        "unit",
        "testing",
        "JSON",
        "REST",
        "Web",
        "services",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "CouchBase",
        "Python",
        "SDK",
        "applications",
        "CouchBase",
        "Server",
        "data",
        "form",
        "JSON",
        "documents",
        "collection",
        "MongoDB",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "Docker",
        "host",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "IDQ",
        "project",
        "source",
        "data",
        "definition",
        "metadata",
        "cleanse",
        "accuracy",
        "project",
        "data",
        "records",
        "information",
        "ETL",
        "processes",
        "ETL",
        "processes",
        "sourcetotarget",
        "data",
        "mappings",
        "integration",
        "workflows",
        "load",
        "processes",
        "python",
        "batch",
        "files",
        "batch",
        "process",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "bugs",
        "production",
        "support",
        "applications",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "team",
        "development",
        "workflow",
        "collaboration",
        "practices",
        "Git",
        "Developed",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Multithreading",
        "module",
        "networking",
        "operations",
        "race",
        "route",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Python",
        "Garbage",
        "collection",
        "Python",
        "performance",
        "garbage",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Worked",
        "Data",
        "migration",
        "Sqlite3",
        "Apache",
        "Cassandra",
        "database",
        "Cassandra",
        "data",
        "model",
        "implementation",
        "monitoring",
        "DSE",
        "DevCenter",
        "Datastax",
        "Ops",
        "center",
        "test",
        "cases",
        "PyUnit",
        "Selenium",
        "Automation",
        "testing",
        "manipulation",
        "test",
        "scripts",
        "Configuring",
        "node",
        "NoSQL",
        "Cassandra",
        "clusters",
        "Datastax",
        "Enterprise",
        "Edition",
        "environment",
        "issues",
        "automation",
        "Jenkins",
        "integration",
        "Amazon",
        "EC2",
        "JIRA",
        "Bug",
        "tracking",
        "issue",
        "part",
        "AgileScrum",
        "development",
        "team",
        "TDD",
        "approach",
        "applications",
        "Environment",
        "Python",
        "Django",
        "CherryPy",
        "HTML5",
        "CSS",
        "Bootstrap",
        "JSON",
        "JavaScript",
        "AJAX",
        "RESTful",
        "Webservices",
        "MongoDB",
        "MySQL",
        "SQLite",
        "Cassandra",
        "Docker",
        "AWS",
        "EC2",
        "S3",
        "PyUnit",
        "Karma",
        "Jenkins",
        "Selenium",
        "Automation",
        "Testing",
        "Sr",
        "Python",
        "Developer",
        "Thales",
        "Avionics",
        "Irvine",
        "CA",
        "April",
        "July",
        "Roles",
        "Responsibilities",
        "python",
        "NumPy",
        "SciPy",
        "PyTables",
        "Matplotlib",
        "PythonTwitter",
        "Pandas",
        "Data",
        "Frame",
        "urllib2",
        "tasks",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "model",
        "level",
        "validation",
        "Python",
        "programming",
        "emphasis",
        "web",
        "security",
        "Business",
        "logics",
        "Python",
        "programming",
        "results",
        "jQuery",
        "usability",
        "website",
        "interface",
        "AJAX",
        "functionality",
        "web",
        "application",
        "views",
        "templates",
        "Django",
        "website",
        "interface",
        "APIs",
        "PHP",
        "Configured",
        "Django",
        "URLs",
        "application",
        "parameters",
        "Python",
        "Django",
        "Framework",
        "backend",
        "web",
        "applications",
        "Django",
        "APIs",
        "database",
        "access",
        "components",
        "reactjs",
        "redux",
        "state",
        "actions",
        "functions",
        "discussions",
        "business",
        "users",
        "requirements",
        "doubts",
        "application",
        "maintenance",
        "enhancement",
        "support",
        "legacy",
        "system",
        "Futures",
        "Spring",
        "Framework",
        "calls",
        "application",
        "web",
        "services",
        "technology",
        "JSON",
        "XML",
        "EC2",
        "instances",
        "applications",
        "EC2",
        "instances",
        "Setup",
        "EBS",
        "volumes",
        "EC2",
        "instances",
        "connections",
        "applications",
        "access",
        "MySQL",
        "database",
        "SQL",
        "PLSQL",
        "procedures",
        "functions",
        "sequences",
        "cursors",
        "types",
        "user",
        "interface",
        "JSP",
        "jQuery",
        "AJAX",
        "application",
        "AWS",
        "Solutions",
        "EC2",
        "ELB",
        "EC2",
        "instances",
        "EBS",
        "volumes",
        "EC2",
        "Changed",
        "directories",
        "batch",
        "file",
        "python",
        "windows",
        "RabbitMQMongoDB",
        "pipeline",
        "email",
        "bounce",
        "records",
        "reports",
        "application",
        "Tableau",
        "AJAX",
        "section",
        "webpages",
        "need",
        "web",
        "page",
        "ETL",
        "testing",
        "data",
        "extraction",
        "transformations",
        "loading",
        "processing",
        "Solution",
        "Informatica",
        "Designed",
        "UNIX",
        "shell",
        "scripts",
        "part",
        "ETL",
        "testing",
        "process",
        "process",
        "loading",
        "data",
        "testing",
        "ETL",
        "loads",
        "batch",
        "file",
        "Manage",
        "Map",
        "Server",
        "Cache",
        "Tiles",
        "tools",
        "script",
        "nights",
        "weekends",
        "users",
        "Web",
        "map",
        "Project",
        "structure",
        "Spring",
        "MVC",
        "pattern",
        "spring",
        "boot",
        "features",
        "environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "development",
        "environments",
        "Chef",
        "Virtual",
        "Box",
        "databases",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "Created",
        "PyUnit",
        "test",
        "cases",
        "unit",
        "Development",
        "test",
        "framework",
        "Python",
        "Managed",
        "code",
        "unit",
        "tests",
        "GitHub",
        "Developed",
        "Capistrano",
        "scripts",
        "deployment",
        "environments",
        "GIT",
        "Source",
        "control",
        "repositories",
        "code",
        "reviews",
        "pullmerge",
        "requests",
        "Environment",
        "Python",
        "Django",
        "XML",
        "Hadoop",
        "pig",
        "hive",
        "PySpark",
        "AWS",
        "HDFS",
        "HBase",
        "SCRUM",
        "PyUnit",
        "Apache",
        "CSS",
        "MySQL",
        "DHTML",
        "HTML",
        "JavaScript",
        "Shell",
        "Scripts",
        "Git",
        "Linux",
        "Unix",
        "Windows",
        "Python",
        "Developer",
        "Financial",
        "Group",
        "Boone",
        "IA",
        "December",
        "April",
        "Roles",
        "Responsibilities",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "PythonDjango",
        "web",
        "application",
        "PostgreSQL",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "web",
        "applications",
        "Django",
        "Frameworks",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "custom",
        "screens",
        "HTML5",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "Angular",
        "Develop",
        "REST",
        "API",
        "products",
        "AWS",
        "REST",
        "API",
        "gateway",
        "AWS",
        "lambda",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "GitHub",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "TestDriven",
        "Development",
        "TDD",
        "Wrote",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "monitoring",
        "project",
        "status",
        "JIRA",
        "Agile",
        "Developed",
        "Python",
        "web",
        "services",
        "JSON",
        "Data",
        "layer",
        "deployment",
        "project",
        "Amazon",
        "S3",
        "development",
        "SQL",
        "procedures",
        "normalization",
        "renormalization",
        "MYSQL",
        "Flask",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Used",
        "Collections",
        "Python",
        "user",
        "objects",
        "Environment",
        "Python",
        "Django",
        "Linux",
        "HTML5",
        "CSS",
        "Bootstrap",
        "MySQL",
        "SQL",
        "PLSQL",
        "XML",
        "Heroku",
        "JavaScript",
        "JQuery",
        "JSP",
        "JSON",
        "API",
        "MVC",
        "architecture",
        "EC2",
        "GitHub",
        "Python",
        "Developer",
        "Camp",
        "Systems",
        "Ronkonkoma",
        "NY",
        "August",
        "December",
        "Roles",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "MySQL",
        "Django",
        "APIs",
        "database",
        "access",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "Python",
        "Used",
        "Django",
        "APIs",
        "database",
        "access",
        "development",
        "SQL",
        "procedures",
        "trigger",
        "function",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "Ecommerce",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "PhP",
        "language",
        "lamp",
        "server",
        "page",
        "interaction",
        "page",
        "MS",
        "SQL",
        "developer",
        "tools",
        "Environment",
        "Python",
        "JavaScript",
        "Django",
        "Framework",
        "SQL",
        "MySQL",
        "LAMP",
        "JQuery",
        "PHP",
        "Cassandra",
        "Flask",
        "Education",
        "Bachelors",
        "Skills",
        "CSS",
        "years",
        "DJANGO",
        "years",
        "HTML",
        "years",
        "jQuery",
        "years",
        "MYSQL",
        "years",
        "Additional",
        "Information",
        "Resultdriven",
        "IT",
        "Professional",
        "years",
        "experience",
        "Web",
        "Application",
        "Developer",
        "programming",
        "skills",
        "Python",
        "Django",
        "Flask",
        "Python",
        "modules",
        "NumPy",
        "Matplotlib",
        "data",
        "creation",
        "histograms",
        "Experience",
        "Object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "Experience",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Strong",
        "experience",
        "Architecting",
        "implementation",
        "Amazon",
        "Web",
        "Services",
        "Cloud",
        "Python",
        "Experience",
        "Requests",
        "Pysftp",
        "Gnupg",
        "ReportLab",
        "Numpy",
        "SciPy",
        "Matplotlib",
        "HTTPLib2",
        "Urllib2",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Expert",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Dojo",
        "HTML",
        "XML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "jQuery",
        "knowledge",
        "spring",
        "Hibernate",
        "RDBMS",
        "Web",
        "XML",
        "AntMaven",
        "HTML",
        "Python",
        "Shell",
        "Scripting",
        "Experience",
        "web",
        "applications",
        "JavaScript",
        "HTML5",
        "CSS",
        "JSON",
        "AngularJS",
        "Bootstrap",
        "APIs",
        "Experience",
        "Object",
        "Relation",
        "Mappings",
        "Hibernate",
        "JDBC",
        "Spring",
        "JDBC",
        "Spring",
        "Data",
        "RDMS",
        "Oracle",
        "DB2",
        "MySQL",
        "NoSQL",
        "redshift",
        "Cassandra",
        "Experience",
        "field",
        "Data",
        "warehouse",
        "ETL",
        "tools",
        "Informatica",
        "Power",
        "Center",
        "Power",
        "Mart",
        "databases",
        "DB2",
        "Oracle",
        "MS",
        "SQL",
        "Server",
        "Teradata",
        "Experience",
        "build",
        "tools",
        "Buck",
        "BitBake",
        "Apache",
        "Ant",
        "Apache",
        "Maven",
        "Boot",
        "Grunt",
        "GNU",
        "Expert",
        "Designing",
        "Developing",
        "Big",
        "Data",
        "Solutions",
        "Supply",
        "Chain",
        "Management",
        "Transport",
        "ECommerce",
        "Domains",
        "Technical",
        "competencies",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "Languages",
        "Python",
        "2X",
        "Python",
        "3X",
        "C",
        "C",
        "Java",
        "SQL",
        "PHP",
        "Swift",
        "Web",
        "technologies",
        "HTML",
        "CSS",
        "XHTML",
        "Java",
        "Script",
        "jQuery",
        "MySQL",
        "Oracle",
        "Microsoft",
        "SQL",
        "PostgreSQL",
        "MongoDB",
        "Python",
        "Web",
        "frameworks",
        "Django",
        "Pyramid",
        "Flask",
        "web2Py",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "Version",
        "Control",
        "GitHub",
        "Sub",
        "Version",
        "Build",
        "Tools",
        "GNU",
        "Apache",
        "Ant",
        "Apache",
        "Maven",
        "Operating",
        "Systems",
        "Linux",
        "Windows",
        "Mac"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:07:39.151149",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer GE Health Milwaukee WI Authorized to work in the US for any employer Work Experience Sr Python Developer GE Health Milwaukee WI July 2017 to Present Roles Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Implemented different python libraries NumPy SciPy PyTables Matplotlib pythontwitter Pandas data frame and urllib2 Participated in all phases of the System Development Life Cycle Analysis SDLC and responsible for gathering requirements system analysis design development testing and deployment Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashovers stored in the Django models Also created XML with Django to be used by the Flash Involved in building database Model APIs and Views using Python so as to manufacture an intuitive electronic arrangement Used Python based GUI parts for the frontend usefulness for example determination criteria made test saddle to empower exhaustive testing using Python Used Amazon Web Services AWS for enhanced productivity of capacity and quick access Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Worked on messaging solutions like ActiveMQ and worked on unit test plans UTP integrated test plans ITP and user acceptance testing UAT and involved in development of main modules like CSV import xlsx import bulk content upload Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Also used jQuery as library to create a Single Page Application Phases which can bind data to specific views and synchronize data with server and Worked with JQX widgets functionality Developed tools using Python Shell scripting XML to automate some of the menial tasks Used Python based GUI segments for the frontend usefulness for example choice criteria Created test outfit to empower exhaustive testing using Python Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed Merge jobs in Python to extract and load data into MySQL database Used CouchBase Python SDK to build applications that use CouchBase Server Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Used IDQ to profile the project source data define or confirm the definition of the metadata cleanse and accuracy check the project data check for duplicate or redundant records and provide information on how to proceed with ETL processes Designed ETL processes and develop sourcetotarget data mappings integration workflows and load processes Used python to process the batch files and also scheduling the batch process Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Created RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Implemented Garbage collection with Python to enhance the performance by garbage collecting the older generated objects Automated RabbitMQ cluster installations and configuration using PythonBash Worked on Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCenter Datastax Ops center Wrote test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Configuring administering and monitoring multi node NoSQL Cassandra 3011 clusters and Datastax Enterprise Edition 503 on a realtime environment issues Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful Webservices MongoDB MySQL SQLite Cassandra Docker AWS EC2 S3 PyUnit Karma Jenkins Selenium Automation Testing Sr Python Developer Thales Avionics Irvine CA April 2015 to July 2017 Roles Responsibilities Implemented different python libraries NumPy SciPy PyTables Matplotlib PythonTwitter Pandas Data Frame and urllib2 in various tasks Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Coded model level validation using Python programming with emphasis in web security Handled Business logics by backend Python programming to achieve optimal results Implemented jQuery to improve the overall usability of the website interface and AJAX functionality to speed up web application Developed views and templates in Django to create a userfriendly website interface Constructed RESTful APIs using PHP and MySQLPostgreSQL Configured Django to manage URLs and application parameters Extensively used Python Django Framework for developing backend of web applications Used Django APIs for database access Developed reusable components using reactjs and redux for maintaining the state and actions of the functions Participate in discussions with business users for requirements related doubts Provide application maintenance and enhancement support for legacy system Utilized Futures and Spring Framework to make Asynchronous calls to the application Developed web services using Restful technology to support JSON and XML Create EC2 instances and maintaining applications on EC2 instances Setup and attached EBS volumes to EC2 instances Created new connections through applications for better access to MySQL database and involved in writing SQL PLSQL Stored procedures functions sequences triggers cursors object types etc Developed user interface using JSP jQuery and AJAX to speed the application Worked on AWS provided Solutions like EC2 and ELB which includes Creating EC2 instances adding EBS volumes for EC2 Changed directories and executing a batch file in python in windows Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Worked on resulting reports of the application and Tableau reports Implemented AJAX to update necessary section of webpages and hence avoiding the need for reloading the entire web page Extensively used ETL for testing and supporting data extraction transformations and loading processing in a corporatewideETL Solution using Informatica Designed and tested UNIX shell scripts as part of the ETL testing process to automate the process of loading pulling the data for testing ETL loads Created batch file that runs Manage Map Server Cache Tiles and other caching tools then scheduling that script to run on nights or weekends when it would be least disruptive to users of the Web map Implemented the Project structure based on Spring MVC pattern using spring boot Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Worked on creating and configuring virtual development environments with Chef and Virtual Box Designed maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Created PyUnit test cases for unit testing Development of test framework using the Python Managed code with unit tests and GitHub Developed Capistrano scripts to automate deployment on various environments Used GIT as Source control repositories with regular code reviews and pullmerge requests Environment Python 2730 Django XML Hadoop pig hive PySpark AWS ETL HDFS HBase MongoDB Agile SCRUM PyUnit Apache CSS MySQL DHTML HTML JavaScript AngularJS Shell Scripts Git Linux Unix and Windows Python Developer Financial Group Boone IA December 2012 to April 2015 Roles Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Built PythonDjango based web application PostgreSQL DB and integrations with 3rd party email messaging storage services Developed web applications in Django Frameworks model view control MVC architecture Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing and web application testing Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Developed custom screens using HTML5 JavaScript JQuery Bootstrap and Angular Develop REST API and integrated with cloud products like AWS REST API gateway and AWS lambda Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Amazon Web Services AWS for improved efficiency of storage and fast access Used GitHub for Python source code version control Jenkins for automating the build Docker containers Develop consumerbased features and applications using Python Django HTML and TestDriven Development TDD Wrote existing PythonDjango modules to deliver certain format of data Responsible for tracking and monitoring project status in JIRA Agile Developed Python web services for processing JSON and interfacing with the Data layer Worked on deployment of project on to Amazon S3 Worked on development of SQL and stored procedures for normalization and renormalization in MYSQL Worked with Flask to put the data as time series and tabular format for east timestamp data manipulation and retrieval Involved in Developing a Restful APIS service using Python Flask framework Build SQL queries for performing various CRUD operations like create update read and delete Used Collections in Python for manipulating and looping through different user defined objects Environment Python 34 Django 18 Linux HTML5 CSS Bootstrap MySQL SQL PLSQL XML Heroku JavaScript JQuery JSP JSON Restful API MVC architecture AWS EC2 GitHub Python Developer Camp Systems Ronkonkoma NY August 2010 to December 2012 Roles Responsibilities Used SDLC process and used PHP to develop website functionality Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework on MySQL Used Django APIs for database access Designed and developed data management system using MySQL Built application logic using Python 27 Used Django APIs for database access Worked on development of SQL and stored procedures trigger and function on MYSQL Developed shopping cart for Library and integrated web services to access the payment Ecommerce Designed and developed a horizontally scalable APIs using Python Flask Designed Cassandra schema for the APIs Developed shopping cart for Library and integrated web services to access the payment Used PhP language on lamp server to develop page Developed dynamic interaction page on net MS visual basic 2014 using SQL developer tools Environment Python JavaScript Django Framework 13 SQL MySQL LAMP JQuery PHP Cassandra Flask Education Bachelors Skills CSS 8 years DJANGO 8 years HTML 8 years jQuery 8 years MYSQL 8 years Additional Information Resultdriven IT Professional with 8 years of experience as a Web Application Developer and coding with analytical programming skills using Python Django Flask Highly skilled in Python modules such as NumPy Matplotlib etc for generating complex graphical data creation of histograms etc Experience Object Oriented programming OOP concepts using Python C and PHP Experience in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Strong experience in planning designing developing Architecting and implementation in Amazon Web Services Cloud and Python Experience on Requests Pysftp Gnupg ReportLab Numpy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Expert in developing of webbased applications using Python Django Flask Dojo HTML XML AngularJS CSS DHTML JavaScript JSON and jQuery Good knowledge in spring Hibernate RDBMS Web XML AntMaven HTML Python Shell Scripting and bash scripting Experience in developing highly interactive web applications utilizing JavaScript HTML5 CSS JSON AngularJS and Bootstrap and integrating Restful APIs Experience in developing Object Relation Mappings using Hibernate JDBC Spring JDBC and Spring Data with RDMS Oracle DB2 and MySQL and NoSQL redshift Cassandra databases Experience in the field of Data warehouse using ETL tools such as Informatica Power Center Power Mart 9x8x databases as DB2 Oracle MS SQL Server and Teradata Experience with build tools like Buck BitBake Apache Ant Apache Maven Boot Grunt GNU Expert in Designing Developing and Maintaining Big Data Solutions to the Supply Chain Management Transport and ECommerce Domains Technical competencies Methodologies Agile Scrum Waterfall Languages Python 2X Python 3X C C Java SQL PHP Swift Web technologies HTML CSS XHTML Java Script jQuery Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Operating Systems Linux Windows 1087VistaXP Mac",
    "unique_id": "0de99f54-87af-4694-80e0-d06c7272903d"
}