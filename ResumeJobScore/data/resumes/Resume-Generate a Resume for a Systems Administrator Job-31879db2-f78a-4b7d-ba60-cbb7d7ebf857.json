{
    "clean_data": "Vice President Vice President Vice President JPMORGAN CHASE New York NY Solid experience in Analysis Design Development Testing and Maintenance of clientserver software systems using CC and Relational Databases on UNIXLinux and Windows with full SDLC Systems Network Programming Kernel System Calls file system memory Signal handling Sockets MultiThreading Inter Process Communication mechanisms shared memory semaphores and message queues in C C and Java Design develop and deploy high performance low latency real time financial applications Market Data Ticker Plant for Equities Design develop and deploy applications for high volume low latency low system level optimizations Perl Python UNIX Scripting including Korn Bourne Makefile and Compilers Strong OOPOOD STL and UML notations Excellent analytical designing and debugging skills Excellent communication and documentation skills Experienced in Build Release Version Control Software Configuration Management and Change Management Experienced with DevOps development with Agile and Continuous Integration CI Very good understanding of CMM certification processes and audits Work Experience Vice President JPMORGAN CHASE January 2017 to Present Smart Order Routing and Crossing Engine Support OSOR application for product enhancement Design and develop enhancements for SOR JPMX applications Work on Ultra Low Latency SOR Work on JPMX Benchmark crossing Engine Develop Similator for Crossing Engine using Python Develop Log Analysis tools using PERL Develop Production Log File player to conduct performance test using Perl Python Environment C Perl Python LBM RSM Linux Jenkins Oracle FX Rates Bit Bucket Git Python Developer Bank Of America October 2016 to January 2017 Credit Risk Analyze requirements and design batch jobs for Market risk application Develop jobs using Python scripting Work with business analyst and design schema for Sandra using Quartz framework Write Bob job scripts for scheduling batch jobs Environment Python Sandra Quartz framework Sr Lead Consultant Star Engine Pace Brown Brothers Harriman NJ April 2013 to September 2016 Star is a suite of Mutual Fund Accounting applications Star receives client trading transactions electronically and does STP for accounting based on clients rules Pace gets security prices from various pricing vendors validates and applies to the client portfolios at the end of market closure It calculates NAV URGL unrealized gain loss and portfolios valuation for all mutual funds it manages Familiar with various types of securities FI OP EQ FT CASH FWD Work with FX Rates Engine Processing Trades Corporate Actions Dividends Coupons using PERL and PYTHON Pricing securities and price validation process using PERL and Python Worked on BLOBS to Table conversion of fund account positions Redesignedimplemented and Unit Tested Pricing Center modules C C OCI and Oracle database functions stored procedure ref cursors Refactored Oracle Tables for Oracle 11g supports table partitioning encryption with max columns in any table is 255 or less Modified engine module as per new database schema Memory optimization for better performance in star engine module developed in C and C runs on Solaris and Linux Perform design and code peer reviews Implementing Oracle DRCP database connection pooling using OCI as part of performance tuning SPS Scaling Performance and Stability of Star initiation project Made significant suggestions in process improvement Worked with messaging techniques IBM MQ and Oracle AQ Environment C C C1114 C and VBNET STL BOOST Redhat Linux Solaris Eclipse vi editor Svn Code Collaborator code review Jam make Perl Python shell scripting GDB DBX Oracle database OCIOCCI Oracle Pro C Market Data DeveloperAnalyst Ticker Plant Scottrade MO March 2012 to April 2013 The Ticker Plant is suite of market data applications which gather real time market data from stock exchanges and cater transformed data to midtier and trading applications Worked on redesigning and developing the Ticker Plant applications on Linux Designeddeveloped centralized event handling system Designeddeveloped Application Framework modules Message Factory Exceptions Timers Statistics Buffers Disruptor ipc shared memory technique Tcp Messaging server Ipc Messaging server etc Designeddeveloped Remote Interface Service Event System Service Executive Service Generic Feed Application Feed Application Framework modules Feed buffers Channel consumers Channel producers Data serializers Interfaces and concrete classes for Normalizers Processors decoders encoders Generic processors Router Multicast Unicast Normalization processor Implemented feed handlers for Nasdaq feeds Uqdf Utdf CTS and NYSE Gif Developed Unit Tests for all concrete and abstract class implementations using BOOST unit test framework Performed peer reviews both design and code Created Mpc files for the modules which are used to compile and link using make Created scripts for packaging and deployment Environment C BOOST STL Redhat Linux Eclipse vi Team Foundation Server Code Collaborator code review MPC make Perl shell scripting Sr Software Consultant ADT Security Services MO July 2006 to February 2012 Performed market research gathered data and developed a prototype for feasibility study and presented to management Translated business requirement into functional requirements Designed application architecture of Windows services for both Live and Recorded Video streaming as well as recorded video download using NET C C WFC as web serviceWindows services Designedimplemented distributed message communication modules using C WFC WSDL SOAP XML as Web Service Implemented recorded video service frame workinterfaces for DVRsIP cameras supported Implemented Live and Recorded Video SDK implementations for ADHDVR and Matrix DVR using DirectShow filters VC in a windows service Researched network load balancing techniques and suggested a solution and implemented load balancing for application scalability Designcreated a database for the application using SQL Server 2005 Maintained web user interface internal use developed in Perl End Client are free to develop their own web interface and communicate with VEWS via web service Designedimplemented web service to get user requests from web UI and forward to Windows services Perform unit testing and performance tuning Environment VC C MFC ATL STL WSDL SOAP XML WFC Managed C Java DirectShow Perl Jscript Wowza Server H264 MPEG4 Windows SQL Server 2005 Visual Studio 2005 Perl windows services web service Install Shield Sr Software Consultant Comtrak TechnologiesADT Security Services MO July 2006 to September 2009 DVR integration of Bosch IP camera using SDK and Microsoft DirectShow filters for live video and recorded video Designeddeveloped Email Player which packages video files along with Player Designedimplemented Troubles and Alarms on DVR creation of troubles saving the in the SQL database Implemented trouble forwarding mechanism to Central Station Implemented logging modules for Troubles and Activity on both DVR and Video Client Highresolution recording on DVR user interface for camera configuration startstop live video and Print save snapshots of both live and recorded video Modifiedimplemented Video file management to meet disk space requirement Database design and creation tables SQL stored procedures Implemented Video Sync status on the DVR key pad Managed Windows service code responsible for forwarding troubles to GEs MAS system Release Manager Created Install shield Msi packages and Msp patches for software releases Provided production support in maintaining Central Station Server and DVRs Modified communication code for bug fixing performance improvement Lead team for software release versions tracking requirements software implementation coordinate with QA team and analyze QA results communicate with management on release progress Environment VCC MFC Pipes sockets Multi thread pgming XML Windows XP7embedded Install Shield SQL Server 2005 DirectShow Visual studio 2005 Windows Services Software Consultant ATT SBC MO October 2005 to June 2006 Understand the existing implementation of the Greta Application CC sockets Linked lists multithreading PTHREADS Designed and implemented the interface between Greta and GretaMQ adaptor modules using CC Used IBM Rational Purify Plus tool for fixing memory leaks and code coverage and performance analysis Study the Greta client GUI application developed in C and MFC and perform maintenance work Designed and implemented the GrateMQ Adaptor module to access MQ Servers queue with JAVA JMS XML parsing using JDOM package Estimate efforts for each module and assure team adherence to the quality processes document the process followed in the project execution Work with intercompany partners in getting requirements finalized and in resolving issues Work with MQ team to defined client channels for primary and fail over MQ server to provide the fault tolerant and develop scripts in UNIX shell program Diagnoses production problems and give the solution on a timely basis Environment CC MFC Java JMS JDOM AIX PTHREADS sockets IBM WebSphere MQ DB2 XML UNIX shell scripting IBM Purify Plus Sr Software Engineer Newmarket International NH April 2005 to September 2005 Delphi MultiProperty Edition is Newmarkets sales marketing and catering technical solution for multiple properties utilizing one database Designed and implemented data access modules using CC and ODBC API Developed a utility to parse existing database contact full names fields and save the broken names into individual fields using C and ODBC API and SQL Server Integrated Melissa DATA NAMEOBJ object into Delphi to parse the Contatct full name into honorific first middle last suffix Designed and implemented XML web services to integrate Delphi with Meeting Broker Application using C XML XSLT NET and CC Implemented new functionality for Delphi Application using VC MFC Win32 API COM Designed and developed database using SQL Server 2000 Write stored procedures views triggers cursors using TSQL Implemented the installation program for Delphi using Install Shield prof edition Environment CC VC Win32 SDK MS Internals MFC ActiveX COM DCOM ATL C WinNET ASP ASPNET SQL Server 2000 TSQL ODBC API Install Shield Windows 2000XP Unix Technical Lead HewlettPackard US and India December 2003 to March 2005 Requirement gathering design implements system Lead a team of 4 estimate project timeframes execute the project smoothly with given resources Assure team follows companys quality process Apprise project status to management and copartners on timely basis and discuss issuesproscons Motivate team and get work done to meet the timelines Implemented ISEE client configuration scripts for UNIX using shell script corn Bourne and for OpenVMS using COM procedures Implemented Install Programs SCP for Tru64 UNIX and PCSI for OpenVMS Automated build test environment using Ant for AIX HPUX Tru64 Unix Solaris Linux windows and OpenVMS Maintained and enhanced EMSListener module in CC make tool on HPUX Implemented the ISEE Insight Client GUI to display incident statistics using VC MFC ActiveX and COM Implemented callouts using Java which will be called by MAD program Callouts synchronizes client with HP data center for data exchange Work with production Support Engineers to resolve customer problems Environment CC Java Unix Shell corn Bourne scripting SCP Subset Control Programming PCSI Ant Tru64 UNIX AIX HPUX OpenVMS Linux Solaris Windows VC MFC ActiveX and COM COM ASP JAVA Script HTML SQL HewlettPackard US and India September 2000 to March 2005 Sr Software Engineer HewlettPackard US and India IN December 2002 to November 2003 Environment CC VC COM ATLCOM MMC snapin Rational Visual Test 60 Visual Studio 60 OpenVMS system calls PThread library Windows and OpenVMS Software Engineer HewlettPackard US and India IN July 2002 to November 2002 Environment C ABAP4 Rational Rose Microsoft SAPRFC library and Windows NT2K Software Engineer HewlettPackard US and India IN September 2000 to June 2002 Environment VC Win32 SDK MFC VB C ATLCOM Installed Shield Microsoft Exchange Server Windows 9598NT2K Education MBA in Finance Lindenwood University Saint Charles MO 2009 Bachelors in Computer Science and Engineering in Computer Science and Engineering Nagarjuna University Bapatla Engineering College AP Bapatla Andhra Pradesh 2000 Skills net Visual studio C C Vc Html Javascript Mfc Ms project Objectoriented Perl Python Scripting Visio Xml Aix Apache Linux Solaris Ux",
    "entities": [
        "ADT Security Services",
        "Delphi Application",
        "GUI",
        "New York",
        "STP",
        "Created Mpc",
        "UNIX",
        "AIX",
        "MQ Servers",
        "Sr Software Engineer HewlettPackard",
        "Redesignedimplemented",
        "Researched",
        "Delphi",
        "IBM",
        "Generic",
        "PThread",
        "CMM",
        "XML",
        "TSQL Implemented",
        "the Greta Application CC",
        "Bourne",
        "Maintained",
        "DevOps",
        "Shell",
        "CC",
        "Automated",
        "PTHREADS",
        "UNIXLinux",
        "WebSphere",
        "Analysis Design Development Testing",
        "SQL Server",
        "Windows Services",
        "Rational Visual Test",
        "Central Station Server",
        "PERL Develop Production Log File",
        "UML",
        "Implemented Video Sync",
        "Newmarkets",
        "Windows",
        "Delphi MultiProperty Edition",
        "SQL Server 2000 Write",
        "MQ",
        "GDB",
        "Install Shield Sr Software",
        "DVR",
        "MAD",
        "Develop",
        "Normalizers Processors",
        "ADHDVR",
        "HPUX Implemented",
        "Solaris",
        "Visual",
        "BOOST",
        "Install Shield",
        "Refactored Oracle Tables for",
        "OCI",
        "Build Release Version Control Software Configuration Management and Change Management Experienced",
        "Team Foundation",
        "Sr Software",
        "Agile",
        "NET",
        "CC Implemented",
        "Print",
        "Oracle AQ Environment C C C1114 C",
        "Sockets MultiThreading Inter Process Communication",
        "VEWS",
        "Perform",
        "US",
        "EMSListener",
        "QA",
        "Created",
        "SOR JPMX",
        "PCSI",
        "SCP Subset Control Programming PCSI Ant Tru64",
        "SDLC Systems Network Programming Kernel System",
        "Diagnoses",
        "Translated",
        "SPS Scaling Performance and Stability of Star",
        "SQL",
        "Router Multicast Unicast Normalization",
        "JDOM",
        "Designeddeveloped Application Framework",
        "CTS",
        "Bosch IP",
        "MO",
        "ODBC API Developed",
        "Present Smart Order Routing",
        "Implemented Install Programs SCP",
        "Designeddeveloped Remote Interface Service Event System Service Executive Service",
        "Signal",
        "India",
        "Performed",
        "CC Used",
        "MPC",
        "UI",
        "Python Develop Log Analysis",
        "Microsoft",
        "Troubles and Activity",
        "Mutual Fund Accounting",
        "Multi",
        "FX Rates Engine Processing Trades Corporate Actions",
        "Channel consumers Channel",
        "Software Engineer HewlettPackard",
        "NAV",
        "SDK",
        "Relational Databases on",
        "Perl Python",
        "ref",
        "Modifiedimplemented Video",
        "Sr Software Engineer Newmarket International NH",
        "Finance Lindenwood University",
        "HP data",
        "DBX Oracle",
        "Nasdaq",
        "MAS",
        "Engine Develop Similator for Crossing Engine"
    ],
    "experience": "Experience Vice President JPMORGAN CHASE January 2017 to Present Smart Order Routing and Crossing Engine Support OSOR application for product enhancement Design and develop enhancements for SOR JPMX applications Work on Ultra Low Latency SOR Work on JPMX Benchmark crossing Engine Develop Similator for Crossing Engine using Python Develop Log Analysis tools using PERL Develop Production Log File player to conduct performance test using Perl Python Environment C Perl Python LBM RSM Linux Jenkins Oracle FX Rates Bit Bucket Git Python Developer Bank Of America October 2016 to January 2017 Credit Risk Analyze requirements and design batch jobs for Market risk application Develop jobs using Python scripting Work with business analyst and design schema for Sandra using Quartz framework Write Bob job scripts for scheduling batch jobs Environment Python Sandra Quartz framework Sr Lead Consultant Star Engine Pace Brown Brothers Harriman NJ April 2013 to September 2016 Star is a suite of Mutual Fund Accounting applications Star receives client trading transactions electronically and does STP for accounting based on clients rules Pace gets security prices from various pricing vendors validates and applies to the client portfolios at the end of market closure It calculates NAV URGL unrealized gain loss and portfolios valuation for all mutual funds it manages Familiar with various types of securities FI OP EQ FT CASH FWD Work with FX Rates Engine Processing Trades Corporate Actions Dividends Coupons using PERL and PYTHON Pricing securities and price validation process using PERL and Python Worked on BLOBS to Table conversion of fund account positions Redesignedimplemented and Unit Tested Pricing Center modules C C OCI and Oracle database functions stored procedure ref cursors Refactored Oracle Tables for Oracle 11 g supports table partitioning encryption with max columns in any table is 255 or less Modified engine module as per new database schema Memory optimization for better performance in star engine module developed in C and C runs on Solaris and Linux Perform design and code peer reviews Implementing Oracle DRCP database connection pooling using OCI as part of performance tuning SPS Scaling Performance and Stability of Star initiation project Made significant suggestions in process improvement Worked with messaging techniques IBM MQ and Oracle AQ Environment C C C1114 C and VBNET STL BOOST Redhat Linux Solaris Eclipse vi editor Svn Code Collaborator code review Jam make Perl Python shell scripting GDB DBX Oracle database OCIOCCI Oracle Pro C Market Data DeveloperAnalyst Ticker Plant Scottrade MO March 2012 to April 2013 The Ticker Plant is suite of market data applications which gather real time market data from stock exchanges and cater transformed data to midtier and trading applications Worked on redesigning and developing the Ticker Plant applications on Linux Designeddeveloped centralized event handling system Designeddeveloped Application Framework modules Message Factory Exceptions Timers Statistics Buffers Disruptor ipc shared memory technique Tcp Messaging server Ipc Messaging server etc Designeddeveloped Remote Interface Service Event System Service Executive Service Generic Feed Application Feed Application Framework modules Feed buffers Channel consumers Channel producers Data serializers Interfaces and concrete classes for Normalizers Processors decoders encoders Generic processors Router Multicast Unicast Normalization processor Implemented feed handlers for Nasdaq feeds Uqdf Utdf CTS and NYSE Gif Developed Unit Tests for all concrete and abstract class implementations using BOOST unit test framework Performed peer reviews both design and code Created Mpc files for the modules which are used to compile and link using make Created scripts for packaging and deployment Environment C BOOST STL Redhat Linux Eclipse vi Team Foundation Server Code Collaborator code review MPC make Perl shell scripting Sr Software Consultant ADT Security Services MO July 2006 to February 2012 Performed market research gathered data and developed a prototype for feasibility study and presented to management Translated business requirement into functional requirements Designed application architecture of Windows services for both Live and Recorded Video streaming as well as recorded video download using NET C C WFC as web serviceWindows services Designedimplemented distributed message communication modules using C WFC WSDL SOAP XML as Web Service Implemented recorded video service frame workinterfaces for DVRsIP cameras supported Implemented Live and Recorded Video SDK implementations for ADHDVR and Matrix DVR using DirectShow filters VC in a windows service Researched network load balancing techniques and suggested a solution and implemented load balancing for application scalability Designcreated a database for the application using SQL Server 2005 Maintained web user interface internal use developed in Perl End Client are free to develop their own web interface and communicate with VEWS via web service Designedimplemented web service to get user requests from web UI and forward to Windows services Perform unit testing and performance tuning Environment VC C MFC ATL STL WSDL SOAP XML WFC Managed C Java DirectShow Perl Jscript Wowza Server H264 MPEG4 Windows SQL Server 2005 Visual Studio 2005 Perl windows services web service Install Shield Sr Software Consultant Comtrak TechnologiesADT Security Services MO July 2006 to September 2009 DVR integration of Bosch IP camera using SDK and Microsoft DirectShow filters for live video and recorded video Designeddeveloped Email Player which packages video files along with Player Designedimplemented Troubles and Alarms on DVR creation of troubles saving the in the SQL database Implemented trouble forwarding mechanism to Central Station Implemented logging modules for Troubles and Activity on both DVR and Video Client Highresolution recording on DVR user interface for camera configuration startstop live video and Print save snapshots of both live and recorded video Modifiedimplemented Video file management to meet disk space requirement Database design and creation tables SQL stored procedures Implemented Video Sync status on the DVR key pad Managed Windows service code responsible for forwarding troubles to GEs MAS system Release Manager Created Install shield Msi packages and Msp patches for software releases Provided production support in maintaining Central Station Server and DVRs Modified communication code for bug fixing performance improvement Lead team for software release versions tracking requirements software implementation coordinate with QA team and analyze QA results communicate with management on release progress Environment VCC MFC Pipes sockets Multi thread pgming XML Windows XP7embedded Install Shield SQL Server 2005 DirectShow Visual studio 2005 Windows Services Software Consultant ATT SBC MO October 2005 to June 2006 Understand the existing implementation of the Greta Application CC sockets Linked lists multithreading PTHREADS Designed and implemented the interface between Greta and GretaMQ adaptor modules using CC Used IBM Rational Purify Plus tool for fixing memory leaks and code coverage and performance analysis Study the Greta client GUI application developed in C and MFC and perform maintenance work Designed and implemented the GrateMQ Adaptor module to access MQ Servers queue with JAVA JMS XML parsing using JDOM package Estimate efforts for each module and assure team adherence to the quality processes document the process followed in the project execution Work with intercompany partners in getting requirements finalized and in resolving issues Work with MQ team to defined client channels for primary and fail over MQ server to provide the fault tolerant and develop scripts in UNIX shell program Diagnoses production problems and give the solution on a timely basis Environment CC MFC Java JMS JDOM AIX PTHREADS sockets IBM WebSphere MQ DB2 XML UNIX shell scripting IBM Purify Plus Sr Software Engineer Newmarket International NH April 2005 to September 2005 Delphi MultiProperty Edition is Newmarkets sales marketing and catering technical solution for multiple properties utilizing one database Designed and implemented data access modules using CC and ODBC API Developed a utility to parse existing database contact full names fields and save the broken names into individual fields using C and ODBC API and SQL Server Integrated Melissa DATA NAMEOBJ object into Delphi to parse the Contatct full name into honorific first middle last suffix Designed and implemented XML web services to integrate Delphi with Meeting Broker Application using C XML XSLT NET and CC Implemented new functionality for Delphi Application using VC MFC Win32 API COM Designed and developed database using SQL Server 2000 Write stored procedures views triggers cursors using TSQL Implemented the installation program for Delphi using Install Shield prof edition Environment CC VC Win32 SDK MS Internals MFC ActiveX COM DCOM ATL C WinNET ASP ASPNET SQL Server 2000 TSQL ODBC API Install Shield Windows 2000XP Unix Technical Lead HewlettPackard US and India December 2003 to March 2005 Requirement gathering design implements system Lead a team of 4 estimate project timeframes execute the project smoothly with given resources Assure team follows companys quality process Apprise project status to management and copartners on timely basis and discuss issuesproscons Motivate team and get work done to meet the timelines Implemented ISEE client configuration scripts for UNIX using shell script corn Bourne and for OpenVMS using COM procedures Implemented Install Programs SCP for Tru64 UNIX and PCSI for OpenVMS Automated build test environment using Ant for AIX HPUX Tru64 Unix Solaris Linux windows and OpenVMS Maintained and enhanced EMSListener module in CC make tool on HPUX Implemented the ISEE Insight Client GUI to display incident statistics using VC MFC ActiveX and COM Implemented callouts using Java which will be called by MAD program Callouts synchronizes client with HP data center for data exchange Work with production Support Engineers to resolve customer problems Environment CC Java Unix Shell corn Bourne scripting SCP Subset Control Programming PCSI Ant Tru64 UNIX AIX HPUX OpenVMS Linux Solaris Windows VC MFC ActiveX and COM COM ASP JAVA Script HTML SQL HewlettPackard US and India September 2000 to March 2005 Sr Software Engineer HewlettPackard US and India IN December 2002 to November 2003 Environment CC VC COM ATLCOM MMC snapin Rational Visual Test 60 Visual Studio 60 OpenVMS system calls PThread library Windows and OpenVMS Software Engineer HewlettPackard US and India IN July 2002 to November 2002 Environment C ABAP4 Rational Rose Microsoft SAPRFC library and Windows NT2 K Software Engineer HewlettPackard US and India IN September 2000 to June 2002 Environment VC Win32 SDK MFC VB C ATLCOM Installed Shield Microsoft Exchange Server Windows 9598NT2 K Education MBA in Finance Lindenwood University Saint Charles MO 2009 Bachelors in Computer Science and Engineering in Computer Science and Engineering Nagarjuna University Bapatla Engineering College AP Bapatla Andhra Pradesh 2000 Skills net Visual studio C C Vc Html Javascript Mfc Ms project Objectoriented Perl Python Scripting Visio Xml Aix Apache Linux Solaris Ux",
    "extracted_keywords": [
        "Vice",
        "President",
        "Vice",
        "President",
        "Vice",
        "President",
        "JPMORGAN",
        "CHASE",
        "New",
        "York",
        "NY",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Maintenance",
        "clientserver",
        "software",
        "systems",
        "CC",
        "Relational",
        "Databases",
        "UNIXLinux",
        "Windows",
        "SDLC",
        "Systems",
        "Network",
        "Programming",
        "Kernel",
        "System",
        "Calls",
        "file",
        "system",
        "memory",
        "Signal",
        "handling",
        "Sockets",
        "MultiThreading",
        "Inter",
        "Process",
        "Communication",
        "mechanisms",
        "memory",
        "semaphores",
        "message",
        "queues",
        "C",
        "C",
        "Java",
        "Design",
        "performance",
        "latency",
        "time",
        "applications",
        "Market",
        "Data",
        "Ticker",
        "Plant",
        "Equities",
        "Design",
        "applications",
        "volume",
        "latency",
        "system",
        "level",
        "optimizations",
        "Perl",
        "Python",
        "UNIX",
        "Scripting",
        "Korn",
        "Bourne",
        "Makefile",
        "Compilers",
        "OOPOOD",
        "STL",
        "UML",
        "notations",
        "designing",
        "debugging",
        "skills",
        "communication",
        "documentation",
        "skills",
        "Build",
        "Release",
        "Version",
        "Control",
        "Software",
        "Configuration",
        "Management",
        "Change",
        "Management",
        "DevOps",
        "development",
        "Agile",
        "Continuous",
        "Integration",
        "CI",
        "understanding",
        "CMM",
        "certification",
        "processes",
        "audits",
        "Work",
        "Experience",
        "Vice",
        "President",
        "JPMORGAN",
        "CHASE",
        "January",
        "Present",
        "Smart",
        "Order",
        "Routing",
        "Crossing",
        "Engine",
        "Support",
        "OSOR",
        "application",
        "product",
        "enhancement",
        "Design",
        "enhancements",
        "SOR",
        "JPMX",
        "applications",
        "Work",
        "Ultra",
        "Low",
        "Latency",
        "SOR",
        "Work",
        "JPMX",
        "Benchmark",
        "crossing",
        "Engine",
        "Develop",
        "Similator",
        "Crossing",
        "Engine",
        "Python",
        "Develop",
        "Log",
        "Analysis",
        "tools",
        "PERL",
        "Develop",
        "Production",
        "Log",
        "File",
        "player",
        "performance",
        "test",
        "Perl",
        "Python",
        "Environment",
        "C",
        "Perl",
        "Python",
        "LBM",
        "RSM",
        "Linux",
        "Jenkins",
        "Oracle",
        "FX",
        "Rates",
        "Bit",
        "Bucket",
        "Git",
        "Python",
        "Developer",
        "Bank",
        "America",
        "October",
        "January",
        "Credit",
        "Risk",
        "Analyze",
        "requirements",
        "design",
        "batch",
        "jobs",
        "Market",
        "risk",
        "application",
        "Develop",
        "jobs",
        "Python",
        "scripting",
        "Work",
        "business",
        "analyst",
        "design",
        "schema",
        "Sandra",
        "Quartz",
        "framework",
        "Write",
        "Bob",
        "job",
        "scripts",
        "scheduling",
        "batch",
        "jobs",
        "Environment",
        "Python",
        "Sandra",
        "Quartz",
        "framework",
        "Sr",
        "Lead",
        "Consultant",
        "Star",
        "Engine",
        "Pace",
        "Brown",
        "Brothers",
        "Harriman",
        "NJ",
        "April",
        "September",
        "Star",
        "suite",
        "Mutual",
        "Fund",
        "Accounting",
        "applications",
        "Star",
        "client",
        "trading",
        "transactions",
        "STP",
        "accounting",
        "clients",
        "rules",
        "Pace",
        "security",
        "prices",
        "pricing",
        "vendors",
        "client",
        "portfolios",
        "end",
        "market",
        "closure",
        "NAV",
        "URGL",
        "gain",
        "loss",
        "portfolios",
        "valuation",
        "funds",
        "types",
        "securities",
        "FI",
        "OP",
        "EQ",
        "FT",
        "CASH",
        "FWD",
        "Work",
        "FX",
        "Rates",
        "Engine",
        "Processing",
        "Trades",
        "Corporate",
        "Actions",
        "Dividends",
        "Coupons",
        "PERL",
        "PYTHON",
        "Pricing",
        "securities",
        "price",
        "validation",
        "process",
        "PERL",
        "Python",
        "BLOBS",
        "Table",
        "conversion",
        "fund",
        "account",
        "positions",
        "Unit",
        "Tested",
        "Pricing",
        "Center",
        "modules",
        "C",
        "C",
        "OCI",
        "Oracle",
        "database",
        "functions",
        "procedure",
        "ref",
        "cursors",
        "Oracle",
        "Tables",
        "Oracle",
        "g",
        "table",
        "encryption",
        "max",
        "columns",
        "table",
        "engine",
        "module",
        "database",
        "schema",
        "Memory",
        "optimization",
        "performance",
        "star",
        "engine",
        "module",
        "C",
        "C",
        "runs",
        "Solaris",
        "Linux",
        "Perform",
        "design",
        "code",
        "peer",
        "reviews",
        "Implementing",
        "Oracle",
        "DRCP",
        "database",
        "connection",
        "OCI",
        "part",
        "performance",
        "SPS",
        "Scaling",
        "Performance",
        "Stability",
        "Star",
        "initiation",
        "project",
        "suggestions",
        "process",
        "improvement",
        "techniques",
        "IBM",
        "MQ",
        "Oracle",
        "AQ",
        "Environment",
        "C",
        "C",
        "C1114",
        "C",
        "VBNET",
        "STL",
        "BOOST",
        "Redhat",
        "Linux",
        "Solaris",
        "Eclipse",
        "vi",
        "editor",
        "Svn",
        "Code",
        "Collaborator",
        "code",
        "review",
        "Jam",
        "Perl",
        "Python",
        "shell",
        "GDB",
        "DBX",
        "Oracle",
        "database",
        "OCIOCCI",
        "Oracle",
        "Pro",
        "C",
        "Market",
        "Data",
        "DeveloperAnalyst",
        "Ticker",
        "Plant",
        "Scottrade",
        "MO",
        "March",
        "April",
        "Ticker",
        "Plant",
        "suite",
        "market",
        "data",
        "applications",
        "time",
        "market",
        "data",
        "stock",
        "exchanges",
        "data",
        "trading",
        "applications",
        "Ticker",
        "Plant",
        "applications",
        "Linux",
        "Designeddeveloped",
        "event",
        "system",
        "Designeddeveloped",
        "Application",
        "Framework",
        "Message",
        "Factory",
        "Exceptions",
        "Timers",
        "Statistics",
        "Buffers",
        "Disruptor",
        "ipc",
        "memory",
        "technique",
        "Tcp",
        "Messaging",
        "server",
        "Ipc",
        "Messaging",
        "server",
        "Designeddeveloped",
        "Remote",
        "Interface",
        "Service",
        "Event",
        "System",
        "Service",
        "Executive",
        "Service",
        "Generic",
        "Feed",
        "Application",
        "Feed",
        "Application",
        "Framework",
        "modules",
        "Feed",
        "buffers",
        "Channel",
        "consumers",
        "Channel",
        "producers",
        "Data",
        "Interfaces",
        "classes",
        "Normalizers",
        "Processors",
        "decoders",
        "processors",
        "Router",
        "Multicast",
        "Unicast",
        "Normalization",
        "processor",
        "feed",
        "handlers",
        "Nasdaq",
        "Uqdf",
        "Utdf",
        "CTS",
        "NYSE",
        "Gif",
        "Developed",
        "Unit",
        "Tests",
        "class",
        "implementations",
        "BOOST",
        "unit",
        "test",
        "framework",
        "Performed",
        "peer",
        "reviews",
        "design",
        "code",
        "Created",
        "Mpc",
        "files",
        "modules",
        "compile",
        "link",
        "scripts",
        "packaging",
        "deployment",
        "Environment",
        "C",
        "BOOST",
        "STL",
        "Redhat",
        "Linux",
        "Eclipse",
        "vi",
        "Team",
        "Foundation",
        "Server",
        "Code",
        "Collaborator",
        "code",
        "review",
        "MPC",
        "Perl",
        "shell",
        "Sr",
        "Software",
        "Consultant",
        "ADT",
        "Security",
        "Services",
        "MO",
        "July",
        "February",
        "Performed",
        "market",
        "research",
        "data",
        "prototype",
        "feasibility",
        "study",
        "business",
        "requirement",
        "requirements",
        "application",
        "architecture",
        "Windows",
        "services",
        "Video",
        "streaming",
        "video",
        "download",
        "NET",
        "C",
        "C",
        "WFC",
        "web",
        "services",
        "message",
        "communication",
        "modules",
        "C",
        "WFC",
        "WSDL",
        "XML",
        "Web",
        "Service",
        "video",
        "service",
        "frame",
        "workinterfaces",
        "DVRsIP",
        "cameras",
        "Live",
        "Video",
        "SDK",
        "implementations",
        "Matrix",
        "DVR",
        "DirectShow",
        "filters",
        "VC",
        "windows",
        "service",
        "network",
        "load",
        "techniques",
        "solution",
        "load",
        "application",
        "scalability",
        "database",
        "application",
        "SQL",
        "Server",
        "web",
        "user",
        "use",
        "Perl",
        "End",
        "Client",
        "web",
        "interface",
        "VEWS",
        "web",
        "service",
        "web",
        "service",
        "user",
        "requests",
        "web",
        "UI",
        "Windows",
        "services",
        "Perform",
        "unit",
        "testing",
        "performance",
        "Environment",
        "VC",
        "C",
        "MFC",
        "ATL",
        "STL",
        "WSDL",
        "SOAP",
        "XML",
        "WFC",
        "C",
        "Java",
        "DirectShow",
        "Perl",
        "Jscript",
        "Wowza",
        "Server",
        "H264",
        "MPEG4",
        "Windows",
        "SQL",
        "Server",
        "Visual",
        "Studio",
        "Perl",
        "windows",
        "services",
        "web",
        "service",
        "Install",
        "Shield",
        "Sr",
        "Software",
        "Consultant",
        "Comtrak",
        "Security",
        "Services",
        "MO",
        "July",
        "September",
        "DVR",
        "integration",
        "Bosch",
        "IP",
        "camera",
        "SDK",
        "Microsoft",
        "DirectShow",
        "filters",
        "video",
        "video",
        "Designeddeveloped",
        "Email",
        "Player",
        "video",
        "files",
        "Player",
        "Designedimplemented",
        "Troubles",
        "Alarms",
        "DVR",
        "creation",
        "troubles",
        "SQL",
        "database",
        "trouble",
        "mechanism",
        "Central",
        "Station",
        "modules",
        "Troubles",
        "Activity",
        "DVR",
        "Video",
        "Client",
        "Highresolution",
        "recording",
        "DVR",
        "user",
        "interface",
        "camera",
        "configuration",
        "video",
        "Print",
        "snapshots",
        "video",
        "Modifiedimplemented",
        "Video",
        "file",
        "management",
        "disk",
        "space",
        "requirement",
        "Database",
        "design",
        "creation",
        "tables",
        "SQL",
        "procedures",
        "Video",
        "Sync",
        "status",
        "DVR",
        "pad",
        "Managed",
        "Windows",
        "service",
        "code",
        "troubles",
        "GEs",
        "MAS",
        "system",
        "Release",
        "Manager",
        "Install",
        "packages",
        "Msp",
        "patches",
        "software",
        "releases",
        "production",
        "support",
        "Central",
        "Station",
        "Server",
        "DVRs",
        "Modified",
        "communication",
        "code",
        "bug",
        "performance",
        "improvement",
        "Lead",
        "team",
        "software",
        "release",
        "versions",
        "requirements",
        "software",
        "implementation",
        "coordinate",
        "QA",
        "team",
        "QA",
        "results",
        "management",
        "release",
        "progress",
        "Environment",
        "VCC",
        "MFC",
        "Pipes",
        "thread",
        "XML",
        "Windows",
        "Install",
        "Shield",
        "SQL",
        "Server",
        "DirectShow",
        "Visual",
        "studio",
        "Windows",
        "Services",
        "Software",
        "Consultant",
        "ATT",
        "SBC",
        "MO",
        "October",
        "June",
        "implementation",
        "Greta",
        "Application",
        "CC",
        "sockets",
        "Linked",
        "lists",
        "PTHREADS",
        "interface",
        "Greta",
        "GretaMQ",
        "adaptor",
        "modules",
        "CC",
        "IBM",
        "Rational",
        "Purify",
        "tool",
        "memory",
        "leaks",
        "code",
        "coverage",
        "performance",
        "analysis",
        "Study",
        "Greta",
        "client",
        "GUI",
        "application",
        "C",
        "MFC",
        "maintenance",
        "work",
        "GrateMQ",
        "Adaptor",
        "module",
        "MQ",
        "Servers",
        "queue",
        "JMS",
        "XML",
        "JDOM",
        "package",
        "Estimate",
        "efforts",
        "module",
        "assure",
        "team",
        "adherence",
        "quality",
        "processes",
        "document",
        "process",
        "project",
        "execution",
        "Work",
        "intercompany",
        "partners",
        "requirements",
        "issues",
        "MQ",
        "team",
        "client",
        "channels",
        "MQ",
        "server",
        "fault",
        "scripts",
        "UNIX",
        "shell",
        "program",
        "production",
        "problems",
        "solution",
        "basis",
        "Environment",
        "CC",
        "MFC",
        "Java",
        "JMS",
        "JDOM",
        "AIX",
        "PTHREADS",
        "IBM",
        "WebSphere",
        "MQ",
        "DB2",
        "XML",
        "UNIX",
        "shell",
        "IBM",
        "Purify",
        "Sr",
        "Software",
        "Engineer",
        "Newmarket",
        "International",
        "NH",
        "April",
        "September",
        "Delphi",
        "MultiProperty",
        "Edition",
        "Newmarkets",
        "sales",
        "marketing",
        "solution",
        "properties",
        "database",
        "data",
        "access",
        "modules",
        "CC",
        "ODBC",
        "API",
        "utility",
        "database",
        "contact",
        "names",
        "fields",
        "names",
        "fields",
        "C",
        "ODBC",
        "API",
        "SQL",
        "Server",
        "Integrated",
        "Melissa",
        "DATA",
        "Delphi",
        "Contatct",
        "name",
        "suffix",
        "XML",
        "web",
        "services",
        "Delphi",
        "Meeting",
        "Broker",
        "Application",
        "C",
        "XML",
        "XSLT",
        "NET",
        "CC",
        "functionality",
        "Delphi",
        "Application",
        "VC",
        "MFC",
        "Win32",
        "API",
        "COM",
        "database",
        "SQL",
        "Server",
        "Write",
        "procedures",
        "views",
        "triggers",
        "cursors",
        "TSQL",
        "installation",
        "program",
        "Delphi",
        "Install",
        "Shield",
        "prof",
        "edition",
        "Environment",
        "CC",
        "VC",
        "Win32",
        "SDK",
        "MS",
        "Internals",
        "MFC",
        "COM",
        "DCOM",
        "ATL",
        "C",
        "WinNET",
        "ASP",
        "ASPNET",
        "SQL",
        "Server",
        "TSQL",
        "ODBC",
        "API",
        "Install",
        "Shield",
        "Windows",
        "2000XP",
        "Unix",
        "Technical",
        "Lead",
        "HewlettPackard",
        "US",
        "India",
        "December",
        "March",
        "Requirement",
        "design",
        "implements",
        "system",
        "Lead",
        "team",
        "estimate",
        "project",
        "timeframes",
        "project",
        "resources",
        "Assure",
        "team",
        "quality",
        "process",
        "Apprise",
        "project",
        "status",
        "management",
        "copartners",
        "basis",
        "issuesproscons",
        "team",
        "work",
        "timelines",
        "ISEE",
        "client",
        "configuration",
        "scripts",
        "UNIX",
        "shell",
        "script",
        "corn",
        "Bourne",
        "COM",
        "procedures",
        "Install",
        "Programs",
        "SCP",
        "Tru64",
        "UNIX",
        "PCSI",
        "build",
        "test",
        "environment",
        "Ant",
        "AIX",
        "HPUX",
        "Tru64",
        "Unix",
        "Solaris",
        "Linux",
        "windows",
        "EMSListener",
        "module",
        "CC",
        "tool",
        "HPUX",
        "ISEE",
        "Insight",
        "Client",
        "GUI",
        "incident",
        "statistics",
        "VC",
        "MFC",
        "COM",
        "callouts",
        "Java",
        "MAD",
        "program",
        "Callouts",
        "client",
        "HP",
        "data",
        "center",
        "data",
        "exchange",
        "Work",
        "production",
        "Support",
        "Engineers",
        "customer",
        "problems",
        "Environment",
        "CC",
        "Java",
        "Unix",
        "Shell",
        "corn",
        "Bourne",
        "SCP",
        "Subset",
        "Control",
        "Programming",
        "PCSI",
        "Ant",
        "Tru64",
        "UNIX",
        "AIX",
        "HPUX",
        "OpenVMS",
        "Linux",
        "Solaris",
        "Windows",
        "VC",
        "MFC",
        "COM",
        "COM",
        "ASP",
        "JAVA",
        "Script",
        "HTML",
        "SQL",
        "HewlettPackard",
        "US",
        "India",
        "September",
        "March",
        "Sr",
        "Software",
        "Engineer",
        "HewlettPackard",
        "US",
        "India",
        "December",
        "November",
        "Environment",
        "CC",
        "VC",
        "COM",
        "ATLCOM",
        "MMC",
        "Rational",
        "Visual",
        "Test",
        "Visual",
        "Studio",
        "system",
        "library",
        "Windows",
        "Software",
        "Engineer",
        "HewlettPackard",
        "US",
        "India",
        "July",
        "November",
        "Environment",
        "C",
        "ABAP4",
        "Rational",
        "Rose",
        "Microsoft",
        "SAPRFC",
        "library",
        "Windows",
        "NT2",
        "K",
        "Software",
        "Engineer",
        "HewlettPackard",
        "US",
        "India",
        "September",
        "June",
        "Environment",
        "VC",
        "Win32",
        "SDK",
        "MFC",
        "VB",
        "C",
        "ATLCOM",
        "Shield",
        "Microsoft",
        "Exchange",
        "Server",
        "Windows",
        "9598NT2",
        "K",
        "Education",
        "MBA",
        "Finance",
        "Lindenwood",
        "University",
        "Saint",
        "Charles",
        "MO",
        "Bachelors",
        "Computer",
        "Science",
        "Engineering",
        "Computer",
        "Science",
        "Engineering",
        "Nagarjuna",
        "University",
        "Bapatla",
        "Engineering",
        "College",
        "AP",
        "Bapatla",
        "Andhra",
        "Pradesh",
        "Skills",
        "studio",
        "C",
        "C",
        "Vc",
        "Html",
        "Javascript",
        "Mfc",
        "Ms",
        "project",
        "Objectoriented",
        "Perl",
        "Python",
        "Scripting",
        "Visio",
        "Xml",
        "Aix",
        "Apache",
        "Linux",
        "Solaris",
        "Ux"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:38:23.375916",
    "resume_data": "Vice President Vice President Vice President JPMORGAN CHASE New York NY Solid experience in Analysis Design Development Testing and Maintenance of clientserver software systems using CC and Relational Databases on UNIXLinux and Windows with full SDLC Systems Network Programming Kernel System Calls file system memory Signal handling Sockets MultiThreading Inter Process Communication mechanisms shared memory semaphores and message queues in C C and Java Design develop and deploy high performance low latency real time financial applications Market Data Ticker Plant for Equities Design develop and deploy applications for high volume low latency low system level optimizations Perl Python UNIX Scripting including Korn Bourne Makefile and Compilers Strong OOPOOD STL and UML notations Excellent analytical designing and debugging skills Excellent communication and documentation skills Experienced in Build Release Version Control Software Configuration Management and Change Management Experienced with DevOps development with Agile and Continuous Integration CI Very good understanding of CMM certification processes and audits Work Experience Vice President JPMORGAN CHASE January 2017 to Present Smart Order Routing and Crossing Engine Support OSOR application for product enhancement Design and develop enhancements for SOR JPMX applications Work on Ultra Low Latency SOR Work on JPMX Benchmark crossing Engine Develop Similator for Crossing Engine using Python Develop Log Analysis tools using PERL Develop Production Log File player to conduct performance test using Perl Python Environment C Perl Python LBM RSM Linux Jenkins Oracle FX Rates Bit Bucket Git Python Developer Bank Of America October 2016 to January 2017 Credit Risk Analyze requirements and design batch jobs for Market risk application Develop jobs using Python scripting Work with business analyst and design schema for Sandra using Quartz framework Write Bob job scripts for scheduling batch jobs Environment Python Sandra Quartz framework Sr Lead Consultant Star Engine Pace Brown Brothers Harriman NJ April 2013 to September 2016 Star is a suite of Mutual Fund Accounting applications Star receives client trading transactions electronically and does STP for accounting based on clients rules Pace gets security prices from various pricing vendors validates and applies to the client portfolios at the end of market closure It calculates NAV URGL unrealized gain loss and portfolios valuation for all mutual funds it manages Familiar with various types of securities FI OP EQ FT CASH FWD Work with FX Rates Engine Processing Trades Corporate Actions Dividends Coupons using PERL and PYTHON Pricing securities and price validation process using PERL and Python Worked on BLOBS to Table conversion of fund account positions Redesignedimplemented and Unit Tested Pricing Center modules C C OCI and Oracle database functions stored procedure ref cursors Refactored Oracle Tables for Oracle 11g supports table partitioning encryption with max columns in any table is 255 or less Modified engine module as per new database schema Memory optimization for better performance in star engine module developed in C and C runs on Solaris and Linux Perform design and code peer reviews Implementing Oracle DRCP database connection pooling using OCI as part of performance tuning SPS Scaling Performance and Stability of Star initiation project Made significant suggestions in process improvement Worked with messaging techniques IBM MQ and Oracle AQ Environment C C C1114 C and VBNET STL BOOST Redhat Linux Solaris Eclipse vi editor Svn Code Collaborator code review Jam make Perl Python shell scripting GDB DBX Oracle database OCIOCCI Oracle Pro C Market Data DeveloperAnalyst Ticker Plant Scottrade MO March 2012 to April 2013 The Ticker Plant is suite of market data applications which gather real time market data from stock exchanges and cater transformed data to midtier and trading applications Worked on redesigning and developing the Ticker Plant applications on Linux Designeddeveloped centralized event handling system Designeddeveloped Application Framework modules Message Factory Exceptions Timers Statistics Buffers Disruptor ipc shared memory technique Tcp Messaging server Ipc Messaging server etc Designeddeveloped Remote Interface Service Event System Service Executive Service Generic Feed Application Feed Application Framework modules Feed buffers Channel consumers Channel producers Data serializers Interfaces and concrete classes for Normalizers Processors decoders encoders Generic processors Router Multicast Unicast Normalization processor Implemented feed handlers for Nasdaq feeds Uqdf Utdf CTS and NYSE Gif Developed Unit Tests for all concrete and abstract class implementations using BOOST unit test framework Performed peer reviews both design and code Created Mpc files for the modules which are used to compile and link using make Created scripts for packaging and deployment Environment C BOOST STL Redhat Linux Eclipse vi Team Foundation Server Code Collaborator code review MPC make Perl shell scripting Sr Software Consultant ADT Security Services MO July 2006 to February 2012 Performed market research gathered data and developed a prototype for feasibility study and presented to management Translated business requirement into functional requirements Designed application architecture of Windows services for both Live and Recorded Video streaming as well as recorded video download using NET C C WFC as web serviceWindows services Designedimplemented distributed message communication modules using C WFC WSDL SOAP XML as Web Service Implemented recorded video service frame workinterfaces for DVRsIP cameras supported Implemented Live and Recorded Video SDK implementations for ADHDVR and Matrix DVR using DirectShow filters VC in a windows service Researched network load balancing techniques and suggested a solution and implemented load balancing for application scalability Designcreated a database for the application using SQL Server 2005 Maintained web user interface internal use developed in Perl End Client are free to develop their own web interface and communicate with VEWS via web service Designedimplemented web service to get user requests from web UI and forward to Windows services Perform unit testing and performance tuning Environment VC C MFC ATL STL WSDL SOAP XML WFC Managed C Java DirectShow Perl Jscript Wowza Server H264 MPEG4 Windows SQL Server 2005 Visual Studio 2005 Perl windows services web service Install Shield Sr Software Consultant Comtrak TechnologiesADT Security Services MO July 2006 to September 2009 DVR integration of Bosch IP camera using SDK and Microsoft DirectShow filters for live video and recorded video Designeddeveloped Email Player which packages video files along with Player Designedimplemented Troubles and Alarms on DVR creation of troubles saving the in the SQL database Implemented trouble forwarding mechanism to Central Station Implemented logging modules for Troubles and Activity on both DVR and Video Client Highresolution recording on DVR user interface for camera configuration startstop live video and Print save snapshots of both live and recorded video Modifiedimplemented Video file management to meet disk space requirement Database design and creation tables SQL stored procedures Implemented Video Sync status on the DVR key pad Managed Windows service code responsible for forwarding troubles to GEs MAS system Release Manager Created Install shield Msi packages and Msp patches for software releases Provided production support in maintaining Central Station Server and DVRs Modified communication code for bug fixing performance improvement Lead team for software release versions tracking requirements software implementation coordinate with QA team and analyze QA results communicate with management on release progress Environment VCC MFC Pipes sockets Multi thread pgming XML Windows XP7embedded Install Shield SQL Server 2005 DirectShow Visual studio 2005 Windows Services Software Consultant ATT SBC MO October 2005 to June 2006 Understand the existing implementation of the Greta Application CC sockets Linked lists multithreading PTHREADS Designed and implemented the interface between Greta and GretaMQ adaptor modules using CC Used IBM Rational Purify Plus tool for fixing memory leaks and code coverage and performance analysis Study the Greta client GUI application developed in C and MFC and perform maintenance work Designed and implemented the GrateMQ Adaptor module to access MQ Servers queue with JAVA JMS XML parsing using JDOM package Estimate efforts for each module and assure team adherence to the quality processes document the process followed in the project execution Work with intercompany partners in getting requirements finalized and in resolving issues Work with MQ team to defined client channels for primary and fail over MQ server to provide the fault tolerant and develop scripts in UNIX shell program Diagnoses production problems and give the solution on a timely basis Environment CC MFC Java JMS JDOM AIX PTHREADS sockets IBM WebSphere MQ DB2 XML UNIX shell scripting IBM Purify Plus Sr Software Engineer Newmarket International NH April 2005 to September 2005 Delphi MultiProperty Edition is Newmarkets sales marketing and catering technical solution for multiple properties utilizing one database Designed and implemented data access modules using CC and ODBC API Developed a utility to parse existing database contact full names fields and save the broken names into individual fields using C and ODBC API and SQL Server Integrated Melissa DATA NAMEOBJ object into Delphi to parse the Contatct full name into honorific first middle last suffix Designed and implemented XML web services to integrate Delphi with Meeting Broker Application using C XML XSLT NET and CC Implemented new functionality for Delphi Application using VC MFC Win32 API COM Designed and developed database using SQL Server 2000 Write stored procedures views triggers cursors using TSQL Implemented the installation program for Delphi using Install Shield prof edition Environment CC VC Win32 SDK MS Internals MFC ActiveX COM DCOM ATL C WinNET ASP ASPNET SQL Server 2000 TSQL ODBC API Install Shield Windows 2000XP Unix Technical Lead HewlettPackard US and India December 2003 to March 2005 Requirement gathering design implements system Lead a team of 4 estimate project timeframes execute the project smoothly with given resources Assure team follows companys quality process Apprise project status to management and copartners on timely basis and discuss issuesproscons Motivate team and get work done to meet the timelines Implemented ISEE client configuration scripts for UNIX using shell script corn Bourne and for OpenVMS using COM procedures Implemented Install Programs SCP for Tru64 UNIX and PCSI for OpenVMS Automated build test environment using Ant for AIX HPUX Tru64 Unix Solaris Linux windows and OpenVMS Maintained and enhanced EMSListener module in CC make tool on HPUX Implemented the ISEE Insight Client GUI to display incident statistics using VC MFC ActiveX and COM Implemented callouts using Java which will be called by MAD program Callouts synchronizes client with HP data center for data exchange Work with production Support Engineers to resolve customer problems Environment CC Java Unix Shell corn Bourne scripting SCP Subset Control Programming PCSI Ant Tru64 UNIX AIX HPUX OpenVMS Linux Solaris Windows VC MFC ActiveX and COM COM ASP JAVA Script HTML SQL HewlettPackard US and India September 2000 to March 2005 Sr Software Engineer HewlettPackard US and India IN December 2002 to November 2003 Environment CC VC COM ATLCOM MMC snapin Rational Visual Test 60 Visual Studio 60 OpenVMS system calls PThread library Windows and OpenVMS Software Engineer HewlettPackard US and India IN July 2002 to November 2002 Environment C ABAP4 Rational Rose Microsoft SAPRFC library and Windows NT2K Software Engineer HewlettPackard US and India IN September 2000 to June 2002 Environment VC Win32 SDK MFC VB C ATLCOM Installed Shield Microsoft Exchange Server Windows 9598NT2K Education MBA in Finance Lindenwood University Saint Charles MO 2009 Bachelors in Computer Science and Engineering in Computer Science and Engineering Nagarjuna University Bapatla Engineering College AP Bapatla Andhra Pradesh 2000 Skills net Visual studio C C Vc Html Javascript Mfc Ms project Objectoriented Perl Python Scripting Visio Xml Aix Apache Linux Solaris Ux",
    "unique_id": "31879db2-f78a-4b7d-ba60-cbb7d7ebf857"
}