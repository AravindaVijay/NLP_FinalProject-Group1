{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer The Home Depot Strong work experience in Software development with knowledge in Object Oriented Applications and Web based Enterprise Applications using JavaJ2EE on Windows and UNIX platforms for Retail Travel and Banking Domains Has exposure to the complete Software Development Life Cycle activities like User Requirement Specification Requirement analysis Design Development Unit testing UNITIntegration Release and Technical documentation Experience in Core Java 17 J2EE enterprise technologies including JSPEJBJNDI JDBC JMS Spring Boot Spring Struts and web client technologies including HTML CSS AJAX React JS and Java Script and XMLJSONXSLTJAXRSJAXB Experienced in design and development of Spring Boot application using Micro services Architecture Experience in writing Java Web Services using Restful Experience in developing SQL queries for DB2 Oracle databases and comfortable using other open source databases like My SQL and NoSQL database Cassandra Experience in producing and consuming messages through Tibco EMS server and used Gems as a graphical representation to view the Queues Topics Bridges and Routes Experience in ORM framework like Hibernate and query language like HQL Possess hands on experience using agile methodologies including SCRUM Extensive knowledge in general objectoriented design principles and concepts including Design patterns like Chain of Responsibility MVC DAO Factory etc Experience in using logging libraries like Apache Commons Logging and Log4j Experience in using Rapid Application Development RAD environments like Eclipse and Net beans IDE Involved in Unit Test Cases writing and having good knowledge in JUnit Extensive experience in implementation of the version control systems like GitHub TFS Subversion CVS and Clear Case Experience in UNIX Shell Scripting Strong analytical skills with ability to quickly understand clients business needs Quick learner eager and able to rapidly learn new APIs tools and techniques and implement business solutions that require cutting edge technology Troubleshooting and problem solving skills Work Experience Java Developer The Home Depot Atlanta GA November 2018 to Present Description Repair Depot is the single platform one stop shop for all home depot Repairs complete with single flow for ordering parts organizing repair queues maintaining customer orders and managing inventory The technicians can efficiently order parts for repairs and track order history New Work orders can be created view open repairs edit and diagnose tools add notes to repair and finish a repair Repair Tracker are used to track the status of the repair Repair Queues assist in managing the zone level repairs Responsibilities Has developed micro services for parts order parts service inventory Parts order systems Developed the application using React JS components and containers Repair Depot UI uses several repair libraries to render the application view Repair Depot UI interacts with the back end micro services to render the repair details through rest service calls Implemented Spring JDBC and JPA for the Database interaction to update the repair inventory details CICD process are through the concourse pipelines Deployed the applications in the Pivotal Cloud Foundary Used Pivotal tracker for tracking the user stories Worked in a test driven development environment Environment JDK 18 Spring Boot REST API React JS Redux XSLT YAML JMS Bash Shell Scripting Swagger JunitMocktioJest Postman Client GIT Concourse Pivotal Cloud Foundary Metasys Technologies Java Developer Macys Systems and Technology Johns Creek Court GA January 2018 to October 2018 Description The integration of Macys Real Time Offers system with Loyalty system where Loyalty sends the loyalty offer metadata to RTO system and RTO system will generate the segmented campaigns to Loyalty System based on the loyalty data being received from DAAS These campaigns related data from Loyalty system will be sent to downstream systems like DAAS along with additional information which will be further sent to backend systems where Data Analytics are generated related to offers being redeemed Segmented customers will be receiving the offer codes through different means like email sms push and other communication systems to redeem the offers being provided Responsibilites Has developed microservices to consume messages from Tibco Ems Queue published messages to the Tibco Ems Topic for the targeted offers and deployed microservices Process the messages interacting through REST services and formed the JSON objects Implemented Spring JDBC and JPA for the Database interaction to update the reward offers and Coupon Offers Read the loyalty program details from the NoSql database Cassandra Platform is very dynamic used Jenkins for continuous integration Udeploy for automatic deployment Extensively used IAPI logs for logging and elastic Search Kibana Dashboards for viewing logs Developing the property server using spring boot to externalize the application configuration Used Atlassian tool JIRA to track the user stories and defectsbugs for the project Used Macys Platforms MspCore FrameworkMicroService Platform for the application development Designed and developed the application using Agile Scrum methodology by breaking down the project to several sprints Performed the unit testing integration testing and system testing of the applications Environment JDK 18 Spring BootTibco EMS REST API SOAP XSLT YAML JMS Bash Shell Scripting HP ALM Swagger Junit Postman Client GITUdeploy Java Developer UPS PickupPoint Alpharetta GA November 2016 to January 2018 Description The UPS PickupPoint is used in the medical industry The medical laboratories use this UPS PickupPoint facility to collect the lab specimens from the doctors office The PickupPoints will be available at specific clinical sites locations with a unique PlacardID The clinical sites can inquire on the site status Request for an available pickup and subscribe for alertsreminders through Virtual DropBox Web Application A dashboardmonitoring engine was built to enable realtime or near realtime visibility of VDB Pickup status for authorized users of companies The PickupPoint Component is an internal component to the VDB PickupPoint that receives the request from the VDBWAQVMC clients process the request interface with the PickupPointDB to inquire and confirm the PicupPointOrders send the response back to the Client applications New channels were established to communicate Pickup orders to interested parties and receive pickup status from Operations The Subscribers of the PickupPoints receive the alerts on the Order status Reminders are sent before the closing time to confirmrequest a pickup Responsibilities Had analysed the Business Requirement Specification and Functional Requirement Specification through JAMA product management software had done Design Development Integration Testing and Implementation Designed and developed the application using Agile methodology Experience with Spring 40 Framework by implementing Spring Rest API Developed REST APIs for status inquiry schedule pickup subscribeunsubscribeupdate for alerts decode subscription using spring Wrote business logic for processing the above APIs functionalities Experience in implementing the Spring JMS API to publish the confirmed pickup orders expired pickup orders and subscribe the order status from UPS Operations in IBM MQ Developed code to interact with DB webservice using Spring REST API Wrote Jobs using Spring Batch and Scheduler to send out alerts and update status to the DB Extensively used Log4j for logging Developed code is analysed using Static code analysers like Check style PMD and Find bugs Extensively used Eclipse IDE while writing code used Team Foundation Server for version control Performed the unit testing integration testing and system testing of the applications Coordinate with the QA team for the QA testing of the applications and defect fixes using the TFS defect tracking system Used Maven plugin to build the software packages Deployed the applications in Oracles WebLogic Application Server Environment Eclipse 36 Java 17 Spring 40 Spring JMS IBM MQ Maven JSON Log4j WebLogic Server Junit Java Developer UPS PickupPoint Alpharetta GA April 2015 to October 2016 Description UPS Internet Freight Shipping UIFS is a web based UPS shipping application that enables the UPS users customers to create a Freight shipment across different lanes using various services UIFS offers shipping in one step and guides through every stage of the shipping process initiate a shipment set user preferences schedule a pickup track shipment progress create a bill of lading for freight shipments using saved addresses and commodity information This initiative is to provide the Ground with Freight Pricing GFP service option to all shippers for eligible shipments and to provide a comparison between Less Than truck Load LTL and GFP offerings ship GFP without a contract Display GFP rates to shippers regardless of origin and destination point within the US48 and to provide and collect densityclass rating shipment information Responsibilities Participated in requirement Gathering had analysed the BRS and FRS through JAMA product management software had done Design Development Integration Testing and Implementation Prepared the Requirement traceability matrix Low level design document Use case specification Document and used UML diagramsClass diagrams Sequence diagrams Experience with Struts 12 Framework implementing MVC architecture Experience in using EJB 30 to develop and create stubs adapters and connectors for retrieving the customer contract list for the different customer classifications Density based Userclass based User Extensively interacted with the external dependencies like IMS FAC SHARP AV IO and International Forms for setting the user preferences Made the UI changes for the user interface using HTML 5 JavaScript JQuery Ajax Extensively used Rest Web Services to interact with the back end systems UPGF Freight shipping services E2k to retrieve the small package and customer contract information and FRAC to retrieve and display the rates Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Consumed AngularJs as a client side application to add a newexisting account for the existing or new user Extensively used Log4j for logging Developed code is analysed using Static code analysers like Check style PMD and Find bugs Experience in using Hailstorm vulnerability assessment tool to test for the security holesto limit the number of vulnerabilities and Burp Suite to test the webapplication against the vulnerabilities Extensively used Eclipse IDE while writing code used Team Foundation Server for version control Performed the unit testing integration testing and system testing of the applications Have identified the defects and logged in the identified defects in the Serena Defect tracking system and the translation related defects in the JIRA Coordinate with the QA team for the QA testing of the applications and defect fixes Used Ant deploy plugin to build the software packages Deployed the applications in Oracles WebLogic Application Server and Apache Server Environment Eclipse 36 Java 17Struts JavaScript JSP j Query Ajax Servlet XML Soap EJB Firebug Junit Vhtml Hailstorm BurpSuite Java Developer January 2013 to April 2014 Project Title Supply Chain Visibility Description Supply Chain Visibility is a web application developed mainly for End to End Visibility of orders The purpose of this project is to increase product and shipment visibility from product origin to actual fulfillment at store locations This initiative will enable proactive monitoring for our users in their normal course of business and when exceptions occur In addition to electronic monitoring of events within the supply chain lifecycle this project will resolve gaps in visibility by providing operational reporting and access to analytical data The goals for this project include providing visibility for Shipment and RDC Visibility supporting improvements in carrier and vendor compliance by providing timely electronic data feeds and establishing executive and operational reporting Responsibilities Participated in requirements gathering and had done Analysis Design Development Integration Testing and Implementation Designed and developed the application using Agile Scrum methodology by breaking down the project to several sprints Prepared the LLD Low Level Design document and DDD Detailed Design Document document Developed SOA architecture based on the Restful Web Services Experience with WS creation unit tested using Junit and debugged using Rest Client and posterplugins Designed and developed the application using HTML 5 J Query Ajax Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Implementing the Data Access object to connect the database through DAO Framework Conducted the performance testing using the J Probe tool to identify the memory leaks unused java objects Implemented Java Messaging Service JMS APIs to receive the file for LEAD Time application from TIBCO and send the processed to file back to TIBCO Developed code is analysed using Static code analysers like Check style PMD and Find bugs Extensively used Eclipse IDE while writing code used Sub Version for version control Performed the unit testing integration testing and system testing of the applications Coordinate with the QA team for the QA testing of the applications and defect fixes Used Jenkins deploys plugin to build the software packages Deployed the applications in Tomcat Server Environment Eclipse 36 Tomcat 60 Java 16 JavaScript JSP j Query Servest Restful Web Services JAXRS JAXB XML Poster Jenkins Opsware and IBM DB2 Java Developer JP Morgan Chase May 2011 to December 2012 Project Information One Information one is the portal used internally to keep track of the customers recorded information to provide offers rewards and emails This application needs some operations that need to be happened in the back end at the regular interval of time This had been achieved by using the Java Batch framework There are some Java batch jobs that will be triggered by the scheduler and gets executed at the regular interval of time Responsibilities Responsible for Analysis Design Development Integration Testing Implementation User Acceptance Testing and maintenance stage Involved in OO Analysis OOA and Design OOD and Identification of Components and preparing Technical Use Cases Involved in Documentation and Use case design using UML modelling include development of Class diagrams Sequence diagrams and Use case diagrams Designed several web pages using front end technologies like JSP HTML Java Script and CSS Used Java Message Service JMS for reliable and asynchronous exchange of important information such as statement of activities Extensively used ControlM job monitoring tool for scheduling and monitoring the Scheduled Jobs Responsible for deploying different modules of the project in Web Sphere application server Used struts validation framework for performing presentation tier validations Used Configuration Management tool CVS for version management Developed J Unit test classes to test the Services Implemented Log4j for logging and tracing Used Ant to compile and Build the Project streams Environment Java Struts 12 J2ee JDBC Servest JSP Edit plus RAD IDE Web Sphere CVS HTML JavaScript CSS Ant Log4j Skills ECLIPSE J2EE JAVA HIBERNATE SPRING",
    "entities": [
        "AV IO",
        "AJAX",
        "Density",
        "Hailstorm",
        "UNIX",
        "Repairs",
        "Responsibilities",
        "Tibco EMS",
        "Userclass",
        "UNITIntegration Release and Technical documentation",
        "Oracles WebLogic Application Server",
        "IBM",
        "Coupon Offers Read",
        "CVS",
        "Quick",
        "HQL Possess",
        "Responsibilites",
        "TFS",
        "IDE Involved",
        "UPS Operations",
        "PickupPoints",
        "the Tibco Ems Topic",
        "TIBCO Developed",
        "WebLogic",
        "Present Description Repair Depot",
        "the Business Requirement Specification and Functional Requirement Specification",
        "Spring Boot",
        "BRS",
        "Analysis Design Development Integration Testing and Implementation Designed",
        "the Data Access",
        "DDD Detailed Design Document",
        "Shipment",
        "OO Analysis OOA and Design",
        "Rest Web Services",
        "Design Development Integration Testing and Implementation Prepared",
        "Process",
        "TIBCO",
        "Used Configuration Management",
        "UML",
        "Windows",
        "Client",
        "Repair Queues",
        "Technical Use Cases Involved",
        "JUnit Extensive",
        "JSP",
        "International Forms",
        "Data Analytics",
        "Rest Client",
        "IAPI",
        "HTML CSS AJAX React JS",
        "Micro services Architecture Experience",
        "Responsibilities Responsible for Analysis Design Development Integration Testing Implementation User Acceptance Testing",
        "Chain of Responsibility MVC",
        "RTO",
        "MVC",
        "User Requirement Specification Requirement analysis Design Development Unit",
        "Agile",
        "Identification of Components",
        "EJB",
        "the Scheduled Jobs Responsible",
        "Retail Travel",
        "QA",
        "VDBWAQVMC",
        "Loyalty",
        "Implemented",
        "VDB",
        "Restful Experience",
        "GFP",
        "Tomcat Server Environment",
        "React JS",
        "UPS PickupPoint",
        "The PickupPoint Component",
        "java",
        "Build the Project",
        "UPS",
        "SQL",
        "IMS FAC",
        "Java Web Services",
        "Technology Johns Creek Court",
        "Virtual DropBox Web Application",
        "CICD",
        "Implemented Java Messaging Service JMS",
        "Team Foundation Server",
        "the Queues Topics Bridges",
        "BootTibco EMS REST API SOAP",
        "RDC Visibility",
        "Apache Commons",
        "FRS",
        "DAAS",
        "Maven",
        "Performed",
        "Order",
        "lJavaspan",
        "the VDB PickupPoint",
        "Project Title Supply Chain Visibility Description Supply Chain Visibility",
        "Repair Depot UI",
        "GitHub TFS Subversion CVS",
        "UI",
        "Loyalty System",
        "Tibco Ems Queue",
        "CSS",
        "Spring 40 Framework",
        "Sub Version",
        "REST",
        "Segmented",
        "Repair Tracker",
        "NoSQL",
        "Macys Real Time Offers",
        "Software Development Life Cycle",
        "Oracles WebLogic Application Server Environment",
        "The UPS PickupPoint",
        "the Restful Web Services",
        "Design Development Integration Testing and Implementation Designed"
    ],
    "experience": "Experience in Core Java 17 J2EE enterprise technologies including JSPEJBJNDI JDBC JMS Spring Boot Spring Struts and web client technologies including HTML CSS AJAX React JS and Java Script and XMLJSONXSLTJAXRSJAXB Experienced in design and development of Spring Boot application using Micro services Architecture Experience in writing Java Web Services using Restful Experience in developing SQL queries for DB2 Oracle databases and comfortable using other open source databases like My SQL and NoSQL database Cassandra Experience in producing and consuming messages through Tibco EMS server and used Gems as a graphical representation to view the Queues Topics Bridges and Routes Experience in ORM framework like Hibernate and query language like HQL Possess hands on experience using agile methodologies including SCRUM Extensive knowledge in general objectoriented design principles and concepts including Design patterns like Chain of Responsibility MVC DAO Factory etc Experience in using logging libraries like Apache Commons Logging and Log4j Experience in using Rapid Application Development RAD environments like Eclipse and Net beans IDE Involved in Unit Test Cases writing and having good knowledge in JUnit Extensive experience in implementation of the version control systems like GitHub TFS Subversion CVS and Clear Case Experience in UNIX Shell Scripting Strong analytical skills with ability to quickly understand clients business needs Quick learner eager and able to rapidly learn new APIs tools and techniques and implement business solutions that require cutting edge technology Troubleshooting and problem solving skills Work Experience Java Developer The Home Depot Atlanta GA November 2018 to Present Description Repair Depot is the single platform one stop shop for all home depot Repairs complete with single flow for ordering parts organizing repair queues maintaining customer orders and managing inventory The technicians can efficiently order parts for repairs and track order history New Work orders can be created view open repairs edit and diagnose tools add notes to repair and finish a repair Repair Tracker are used to track the status of the repair Repair Queues assist in managing the zone level repairs Responsibilities Has developed micro services for parts order parts service inventory Parts order systems Developed the application using React JS components and containers Repair Depot UI uses several repair libraries to render the application view Repair Depot UI interacts with the back end micro services to render the repair details through rest service calls Implemented Spring JDBC and JPA for the Database interaction to update the repair inventory details CICD process are through the concourse pipelines Deployed the applications in the Pivotal Cloud Foundary Used Pivotal tracker for tracking the user stories Worked in a test driven development environment Environment JDK 18 Spring Boot REST API React JS Redux XSLT YAML JMS Bash Shell Scripting Swagger JunitMocktioJest Postman Client GIT Concourse Pivotal Cloud Foundary Metasys Technologies Java Developer Macys Systems and Technology Johns Creek Court GA January 2018 to October 2018 Description The integration of Macys Real Time Offers system with Loyalty system where Loyalty sends the loyalty offer metadata to RTO system and RTO system will generate the segmented campaigns to Loyalty System based on the loyalty data being received from DAAS These campaigns related data from Loyalty system will be sent to downstream systems like DAAS along with additional information which will be further sent to backend systems where Data Analytics are generated related to offers being redeemed Segmented customers will be receiving the offer codes through different means like email sms push and other communication systems to redeem the offers being provided Responsibilites Has developed microservices to consume messages from Tibco Ems Queue published messages to the Tibco Ems Topic for the targeted offers and deployed microservices Process the messages interacting through REST services and formed the JSON objects Implemented Spring JDBC and JPA for the Database interaction to update the reward offers and Coupon Offers Read the loyalty program details from the NoSql database Cassandra Platform is very dynamic used Jenkins for continuous integration Udeploy for automatic deployment Extensively used IAPI logs for logging and elastic Search Kibana Dashboards for viewing logs Developing the property server using spring boot to externalize the application configuration Used Atlassian tool JIRA to track the user stories and defectsbugs for the project Used Macys Platforms MspCore FrameworkMicroService Platform for the application development Designed and developed the application using Agile Scrum methodology by breaking down the project to several sprints Performed the unit testing integration testing and system testing of the applications Environment JDK 18 Spring BootTibco EMS REST API SOAP XSLT YAML JMS Bash Shell Scripting HP ALM Swagger Junit Postman Client GITUdeploy Java Developer UPS PickupPoint Alpharetta GA November 2016 to January 2018 Description The UPS PickupPoint is used in the medical industry The medical laboratories use this UPS PickupPoint facility to collect the lab specimens from the doctors office The PickupPoints will be available at specific clinical sites locations with a unique PlacardID The clinical sites can inquire on the site status Request for an available pickup and subscribe for alertsreminders through Virtual DropBox Web Application A dashboardmonitoring engine was built to enable realtime or near realtime visibility of VDB Pickup status for authorized users of companies The PickupPoint Component is an internal component to the VDB PickupPoint that receives the request from the VDBWAQVMC clients process the request interface with the PickupPointDB to inquire and confirm the PicupPointOrders send the response back to the Client applications New channels were established to communicate Pickup orders to interested parties and receive pickup status from Operations The Subscribers of the PickupPoints receive the alerts on the Order status Reminders are sent before the closing time to confirmrequest a pickup Responsibilities Had analysed the Business Requirement Specification and Functional Requirement Specification through JAMA product management software had done Design Development Integration Testing and Implementation Designed and developed the application using Agile methodology Experience with Spring 40 Framework by implementing Spring Rest API Developed REST APIs for status inquiry schedule pickup subscribeunsubscribeupdate for alerts decode subscription using spring Wrote business logic for processing the above APIs functionalities Experience in implementing the Spring JMS API to publish the confirmed pickup orders expired pickup orders and subscribe the order status from UPS Operations in IBM MQ Developed code to interact with DB webservice using Spring REST API Wrote Jobs using Spring Batch and Scheduler to send out alerts and update status to the DB Extensively used Log4j for logging Developed code is analysed using Static code analysers like Check style PMD and Find bugs Extensively used Eclipse IDE while writing code used Team Foundation Server for version control Performed the unit testing integration testing and system testing of the applications Coordinate with the QA team for the QA testing of the applications and defect fixes using the TFS defect tracking system Used Maven plugin to build the software packages Deployed the applications in Oracles WebLogic Application Server Environment Eclipse 36 Java 17 Spring 40 Spring JMS IBM MQ Maven JSON Log4j WebLogic Server Junit Java Developer UPS PickupPoint Alpharetta GA April 2015 to October 2016 Description UPS Internet Freight Shipping UIFS is a web based UPS shipping application that enables the UPS users customers to create a Freight shipment across different lanes using various services UIFS offers shipping in one step and guides through every stage of the shipping process initiate a shipment set user preferences schedule a pickup track shipment progress create a bill of lading for freight shipments using saved addresses and commodity information This initiative is to provide the Ground with Freight Pricing GFP service option to all shippers for eligible shipments and to provide a comparison between Less Than truck Load LTL and GFP offerings ship GFP without a contract Display GFP rates to shippers regardless of origin and destination point within the US48 and to provide and collect densityclass rating shipment information Responsibilities Participated in requirement Gathering had analysed the BRS and FRS through JAMA product management software had done Design Development Integration Testing and Implementation Prepared the Requirement traceability matrix Low level design document Use case specification Document and used UML diagramsClass diagrams Sequence diagrams Experience with Struts 12 Framework implementing MVC architecture Experience in using EJB 30 to develop and create stubs adapters and connectors for retrieving the customer contract list for the different customer classifications Density based Userclass based User Extensively interacted with the external dependencies like IMS FAC SHARP AV IO and International Forms for setting the user preferences Made the UI changes for the user interface using HTML 5 JavaScript JQuery Ajax Extensively used Rest Web Services to interact with the back end systems UPGF Freight shipping services E2k to retrieve the small package and customer contract information and FRAC to retrieve and display the rates Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Consumed AngularJs as a client side application to add a newexisting account for the existing or new user Extensively used Log4j for logging Developed code is analysed using Static code analysers like Check style PMD and Find bugs Experience in using Hailstorm vulnerability assessment tool to test for the security holesto limit the number of vulnerabilities and Burp Suite to test the webapplication against the vulnerabilities Extensively used Eclipse IDE while writing code used Team Foundation Server for version control Performed the unit testing integration testing and system testing of the applications Have identified the defects and logged in the identified defects in the Serena Defect tracking system and the translation related defects in the JIRA Coordinate with the QA team for the QA testing of the applications and defect fixes Used Ant deploy plugin to build the software packages Deployed the applications in Oracles WebLogic Application Server and Apache Server Environment Eclipse 36 Java 17Struts JavaScript JSP j Query Ajax Servlet XML Soap EJB Firebug Junit Vhtml Hailstorm BurpSuite Java Developer January 2013 to April 2014 Project Title Supply Chain Visibility Description Supply Chain Visibility is a web application developed mainly for End to End Visibility of orders The purpose of this project is to increase product and shipment visibility from product origin to actual fulfillment at store locations This initiative will enable proactive monitoring for our users in their normal course of business and when exceptions occur In addition to electronic monitoring of events within the supply chain lifecycle this project will resolve gaps in visibility by providing operational reporting and access to analytical data The goals for this project include providing visibility for Shipment and RDC Visibility supporting improvements in carrier and vendor compliance by providing timely electronic data feeds and establishing executive and operational reporting Responsibilities Participated in requirements gathering and had done Analysis Design Development Integration Testing and Implementation Designed and developed the application using Agile Scrum methodology by breaking down the project to several sprints Prepared the LLD Low Level Design document and DDD Detailed Design Document document Developed SOA architecture based on the Restful Web Services Experience with WS creation unit tested using Junit and debugged using Rest Client and posterplugins Designed and developed the application using HTML 5 J Query Ajax Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Implementing the Data Access object to connect the database through DAO Framework Conducted the performance testing using the J Probe tool to identify the memory leaks unused java objects Implemented Java Messaging Service JMS APIs to receive the file for LEAD Time application from TIBCO and send the processed to file back to TIBCO Developed code is analysed using Static code analysers like Check style PMD and Find bugs Extensively used Eclipse IDE while writing code used Sub Version for version control Performed the unit testing integration testing and system testing of the applications Coordinate with the QA team for the QA testing of the applications and defect fixes Used Jenkins deploys plugin to build the software packages Deployed the applications in Tomcat Server Environment Eclipse 36 Tomcat 60 Java 16 JavaScript JSP j Query Servest Restful Web Services JAXRS JAXB XML Poster Jenkins Opsware and IBM DB2 Java Developer JP Morgan Chase May 2011 to December 2012 Project Information One Information one is the portal used internally to keep track of the customers recorded information to provide offers rewards and emails This application needs some operations that need to be happened in the back end at the regular interval of time This had been achieved by using the Java Batch framework There are some Java batch jobs that will be triggered by the scheduler and gets executed at the regular interval of time Responsibilities Responsible for Analysis Design Development Integration Testing Implementation User Acceptance Testing and maintenance stage Involved in OO Analysis OOA and Design OOD and Identification of Components and preparing Technical Use Cases Involved in Documentation and Use case design using UML modelling include development of Class diagrams Sequence diagrams and Use case diagrams Designed several web pages using front end technologies like JSP HTML Java Script and CSS Used Java Message Service JMS for reliable and asynchronous exchange of important information such as statement of activities Extensively used ControlM job monitoring tool for scheduling and monitoring the Scheduled Jobs Responsible for deploying different modules of the project in Web Sphere application server Used struts validation framework for performing presentation tier validations Used Configuration Management tool CVS for version management Developed J Unit test classes to test the Services Implemented Log4j for logging and tracing Used Ant to compile and Build the Project streams Environment Java Struts 12 J2ee JDBC Servest JSP Edit plus RAD IDE Web Sphere CVS HTML JavaScript CSS Ant Log4j Skills ECLIPSE J2EE JAVA HIBERNATE SPRING",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "Home",
        "Depot",
        "Strong",
        "work",
        "experience",
        "Software",
        "development",
        "knowledge",
        "Object",
        "Oriented",
        "Applications",
        "Web",
        "Enterprise",
        "Applications",
        "JavaJ2EE",
        "Windows",
        "UNIX",
        "platforms",
        "Retail",
        "Travel",
        "Banking",
        "Domains",
        "exposure",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "activities",
        "User",
        "Requirement",
        "Specification",
        "Requirement",
        "analysis",
        "Design",
        "Development",
        "Unit",
        "UNITIntegration",
        "Release",
        "documentation",
        "Experience",
        "Core",
        "Java",
        "J2EE",
        "enterprise",
        "technologies",
        "JSPEJBJNDI",
        "JDBC",
        "JMS",
        "Spring",
        "Boot",
        "Spring",
        "Struts",
        "web",
        "client",
        "technologies",
        "HTML",
        "CSS",
        "AJAX",
        "React",
        "JS",
        "Java",
        "Script",
        "XMLJSONXSLTJAXRSJAXB",
        "design",
        "development",
        "Spring",
        "Boot",
        "application",
        "Micro",
        "services",
        "Architecture",
        "Experience",
        "Java",
        "Web",
        "Services",
        "Restful",
        "Experience",
        "SQL",
        "queries",
        "DB2",
        "Oracle",
        "databases",
        "source",
        "SQL",
        "NoSQL",
        "database",
        "Cassandra",
        "Experience",
        "messages",
        "Tibco",
        "EMS",
        "server",
        "Gems",
        "representation",
        "Queues",
        "Topics",
        "Bridges",
        "Routes",
        "Experience",
        "ORM",
        "framework",
        "Hibernate",
        "query",
        "language",
        "HQL",
        "Possess",
        "hands",
        "experience",
        "methodologies",
        "knowledge",
        "design",
        "principles",
        "concepts",
        "Design",
        "patterns",
        "Chain",
        "Responsibility",
        "MVC",
        "DAO",
        "Factory",
        "Experience",
        "libraries",
        "Apache",
        "Commons",
        "Logging",
        "Log4j",
        "Experience",
        "Rapid",
        "Application",
        "Development",
        "RAD",
        "environments",
        "Eclipse",
        "beans",
        "IDE",
        "Unit",
        "Test",
        "Cases",
        "knowledge",
        "JUnit",
        "experience",
        "implementation",
        "version",
        "control",
        "systems",
        "GitHub",
        "TFS",
        "Subversion",
        "CVS",
        "Clear",
        "Case",
        "Experience",
        "UNIX",
        "Shell",
        "Scripting",
        "Strong",
        "skills",
        "ability",
        "clients",
        "business",
        "Quick",
        "learner",
        "APIs",
        "tools",
        "techniques",
        "business",
        "solutions",
        "edge",
        "technology",
        "Troubleshooting",
        "problem",
        "skills",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Home",
        "Depot",
        "Atlanta",
        "GA",
        "November",
        "Present",
        "Description",
        "Repair",
        "Depot",
        "platform",
        "stop",
        "shop",
        "home",
        "depot",
        "Repairs",
        "flow",
        "parts",
        "repair",
        "queues",
        "customer",
        "orders",
        "inventory",
        "technicians",
        "parts",
        "repairs",
        "track",
        "order",
        "history",
        "New",
        "Work",
        "orders",
        "view",
        "repairs",
        "edit",
        "diagnose",
        "tools",
        "notes",
        "repair",
        "Repair",
        "Tracker",
        "status",
        "repair",
        "Repair",
        "Queues",
        "zone",
        "level",
        "repairs",
        "Responsibilities",
        "services",
        "parts",
        "order",
        "parts",
        "service",
        "inventory",
        "Parts",
        "order",
        "systems",
        "application",
        "React",
        "JS",
        "components",
        "containers",
        "Repair",
        "Depot",
        "UI",
        "repair",
        "libraries",
        "application",
        "view",
        "Repair",
        "Depot",
        "UI",
        "end",
        "micro",
        "services",
        "repair",
        "details",
        "rest",
        "service",
        "Spring",
        "JDBC",
        "JPA",
        "Database",
        "interaction",
        "repair",
        "inventory",
        "details",
        "CICD",
        "process",
        "pipelines",
        "applications",
        "Cloud",
        "Foundary",
        "Pivotal",
        "tracker",
        "user",
        "stories",
        "test",
        "development",
        "environment",
        "Environment",
        "JDK",
        "Spring",
        "Boot",
        "REST",
        "API",
        "React",
        "JS",
        "Redux",
        "XSLT",
        "YAML",
        "JMS",
        "Bash",
        "Shell",
        "Scripting",
        "Swagger",
        "JunitMocktioJest",
        "Postman",
        "Client",
        "GIT",
        "Concourse",
        "Pivotal",
        "Cloud",
        "Foundary",
        "Metasys",
        "Technologies",
        "Java",
        "Developer",
        "Macys",
        "Systems",
        "Technology",
        "Johns",
        "Creek",
        "Court",
        "GA",
        "January",
        "October",
        "Description",
        "integration",
        "Macys",
        "Real",
        "Time",
        "Offers",
        "system",
        "Loyalty",
        "system",
        "Loyalty",
        "loyalty",
        "metadata",
        "RTO",
        "system",
        "RTO",
        "system",
        "campaigns",
        "Loyalty",
        "System",
        "loyalty",
        "data",
        "DAAS",
        "campaigns",
        "data",
        "Loyalty",
        "system",
        "systems",
        "DAAS",
        "information",
        "systems",
        "Data",
        "Analytics",
        "offers",
        "Segmented",
        "customers",
        "offer",
        "codes",
        "means",
        "email",
        "sms",
        "push",
        "communication",
        "systems",
        "offers",
        "Responsibilites",
        "microservices",
        "messages",
        "Tibco",
        "Ems",
        "Queue",
        "messages",
        "Tibco",
        "Ems",
        "Topic",
        "offers",
        "microservices",
        "messages",
        "REST",
        "services",
        "Spring",
        "JDBC",
        "JPA",
        "Database",
        "interaction",
        "reward",
        "offers",
        "Coupon",
        "Offers",
        "loyalty",
        "program",
        "details",
        "NoSql",
        "database",
        "Cassandra",
        "Platform",
        "Jenkins",
        "integration",
        "Udeploy",
        "deployment",
        "IAPI",
        "Search",
        "Kibana",
        "Dashboards",
        "logs",
        "property",
        "server",
        "spring",
        "boot",
        "application",
        "configuration",
        "tool",
        "JIRA",
        "user",
        "stories",
        "defectsbugs",
        "project",
        "Macys",
        "Platforms",
        "MspCore",
        "FrameworkMicroService",
        "Platform",
        "application",
        "development",
        "application",
        "Agile",
        "Scrum",
        "methodology",
        "project",
        "sprints",
        "unit",
        "integration",
        "testing",
        "system",
        "testing",
        "applications",
        "Environment",
        "JDK",
        "Spring",
        "BootTibco",
        "EMS",
        "REST",
        "API",
        "SOAP",
        "XSLT",
        "YAML",
        "JMS",
        "Bash",
        "Shell",
        "Scripting",
        "HP",
        "ALM",
        "Swagger",
        "Junit",
        "Postman",
        "Client",
        "GITUdeploy",
        "Java",
        "Developer",
        "UPS",
        "PickupPoint",
        "Alpharetta",
        "GA",
        "November",
        "January",
        "Description",
        "UPS",
        "PickupPoint",
        "industry",
        "laboratories",
        "UPS",
        "PickupPoint",
        "facility",
        "lab",
        "doctors",
        "office",
        "PickupPoints",
        "sites",
        "locations",
        "PlacardID",
        "sites",
        "site",
        "status",
        "Request",
        "pickup",
        "subscribe",
        "alertsreminders",
        "Virtual",
        "DropBox",
        "Web",
        "Application",
        "dashboardmonitoring",
        "engine",
        "visibility",
        "VDB",
        "Pickup",
        "status",
        "users",
        "companies",
        "PickupPoint",
        "Component",
        "component",
        "VDB",
        "PickupPoint",
        "request",
        "VDBWAQVMC",
        "clients",
        "request",
        "interface",
        "PickupPointDB",
        "PicupPointOrders",
        "response",
        "Client",
        "applications",
        "channels",
        "Pickup",
        "orders",
        "parties",
        "pickup",
        "status",
        "Operations",
        "Subscribers",
        "PickupPoints",
        "alerts",
        "Order",
        "status",
        "Reminders",
        "closing",
        "time",
        "pickup",
        "Responsibilities",
        "Business",
        "Requirement",
        "Specification",
        "Functional",
        "Requirement",
        "Specification",
        "JAMA",
        "product",
        "management",
        "software",
        "Design",
        "Development",
        "Integration",
        "Testing",
        "Implementation",
        "application",
        "methodology",
        "Experience",
        "Spring",
        "Framework",
        "Spring",
        "Rest",
        "API",
        "REST",
        "APIs",
        "status",
        "inquiry",
        "schedule",
        "pickup",
        "subscribeunsubscribeupdate",
        "alerts",
        "decode",
        "subscription",
        "spring",
        "Wrote",
        "business",
        "logic",
        "APIs",
        "functionalities",
        "Experience",
        "Spring",
        "JMS",
        "API",
        "pickup",
        "orders",
        "pickup",
        "orders",
        "order",
        "status",
        "UPS",
        "Operations",
        "IBM",
        "MQ",
        "code",
        "DB",
        "webservice",
        "Spring",
        "REST",
        "API",
        "Wrote",
        "Jobs",
        "Spring",
        "Batch",
        "Scheduler",
        "alerts",
        "status",
        "DB",
        "Log4j",
        "code",
        "Static",
        "code",
        "analysers",
        "Check",
        "style",
        "PMD",
        "bugs",
        "Eclipse",
        "IDE",
        "code",
        "Team",
        "Foundation",
        "Server",
        "version",
        "control",
        "Performed",
        "unit",
        "integration",
        "testing",
        "system",
        "testing",
        "applications",
        "QA",
        "team",
        "QA",
        "testing",
        "applications",
        "fixes",
        "TFS",
        "tracking",
        "system",
        "Maven",
        "plugin",
        "software",
        "packages",
        "applications",
        "Oracles",
        "WebLogic",
        "Application",
        "Server",
        "Environment",
        "Eclipse",
        "Java",
        "Spring",
        "Spring",
        "JMS",
        "IBM",
        "MQ",
        "Maven",
        "Log4j",
        "WebLogic",
        "Server",
        "Junit",
        "Java",
        "Developer",
        "UPS",
        "PickupPoint",
        "Alpharetta",
        "GA",
        "April",
        "October",
        "Description",
        "UPS",
        "Internet",
        "Freight",
        "Shipping",
        "UIFS",
        "web",
        "UPS",
        "shipping",
        "application",
        "UPS",
        "users",
        "customers",
        "Freight",
        "shipment",
        "lanes",
        "services",
        "UIFS",
        "shipping",
        "step",
        "stage",
        "shipping",
        "process",
        "shipment",
        "user",
        "preferences",
        "track",
        "shipment",
        "progress",
        "bill",
        "lading",
        "freight",
        "shipments",
        "addresses",
        "commodity",
        "information",
        "initiative",
        "Ground",
        "Freight",
        "Pricing",
        "GFP",
        "service",
        "option",
        "shippers",
        "shipments",
        "comparison",
        "truck",
        "Load",
        "LTL",
        "GFP",
        "offerings",
        "ship",
        "GFP",
        "contract",
        "Display",
        "GFP",
        "rates",
        "shippers",
        "origin",
        "destination",
        "point",
        "US48",
        "densityclass",
        "rating",
        "shipment",
        "information",
        "Responsibilities",
        "requirement",
        "Gathering",
        "BRS",
        "FRS",
        "JAMA",
        "product",
        "management",
        "software",
        "Design",
        "Development",
        "Integration",
        "Testing",
        "Implementation",
        "Requirement",
        "traceability",
        "matrix",
        "level",
        "design",
        "document",
        "Use",
        "case",
        "specification",
        "Document",
        "UML",
        "diagramsClass",
        "diagrams",
        "Sequence",
        "diagrams",
        "Experience",
        "Struts",
        "Framework",
        "MVC",
        "architecture",
        "Experience",
        "EJB",
        "stubs",
        "adapters",
        "connectors",
        "customer",
        "contract",
        "list",
        "customer",
        "classifications",
        "Density",
        "Userclass",
        "User",
        "dependencies",
        "IMS",
        "FAC",
        "SHARP",
        "AV",
        "IO",
        "International",
        "Forms",
        "user",
        "preferences",
        "UI",
        "changes",
        "user",
        "interface",
        "HTML",
        "JavaScript",
        "JQuery",
        "Ajax",
        "Rest",
        "Web",
        "Services",
        "end",
        "systems",
        "UPGF",
        "Freight",
        "shipping",
        "services",
        "E2k",
        "package",
        "customer",
        "contract",
        "information",
        "rates",
        "AJAX",
        "Web",
        "Application",
        "JavaScript",
        "Data",
        "Validations",
        "Consumed",
        "AngularJs",
        "client",
        "side",
        "application",
        "account",
        "user",
        "Log4j",
        "code",
        "Static",
        "code",
        "analysers",
        "Check",
        "style",
        "PMD",
        "bugs",
        "Experience",
        "Hailstorm",
        "vulnerability",
        "assessment",
        "tool",
        "security",
        "holesto",
        "number",
        "vulnerabilities",
        "Burp",
        "Suite",
        "webapplication",
        "vulnerabilities",
        "Eclipse",
        "IDE",
        "code",
        "Team",
        "Foundation",
        "Server",
        "version",
        "control",
        "Performed",
        "unit",
        "integration",
        "testing",
        "system",
        "testing",
        "applications",
        "defects",
        "defects",
        "Serena",
        "Defect",
        "tracking",
        "system",
        "translation",
        "defects",
        "JIRA",
        "Coordinate",
        "QA",
        "team",
        "QA",
        "testing",
        "applications",
        "fixes",
        "Ant",
        "plugin",
        "software",
        "packages",
        "applications",
        "Oracles",
        "WebLogic",
        "Application",
        "Server",
        "Apache",
        "Server",
        "Environment",
        "Eclipse",
        "Java",
        "17Struts",
        "JavaScript",
        "JSP",
        "j",
        "Query",
        "Ajax",
        "Servlet",
        "XML",
        "Soap",
        "EJB",
        "Firebug",
        "Junit",
        "Vhtml",
        "Hailstorm",
        "BurpSuite",
        "Java",
        "Developer",
        "January",
        "April",
        "Project",
        "Title",
        "Supply",
        "Chain",
        "Visibility",
        "Description",
        "Supply",
        "Chain",
        "Visibility",
        "web",
        "application",
        "End",
        "Visibility",
        "orders",
        "purpose",
        "project",
        "product",
        "shipment",
        "visibility",
        "product",
        "origin",
        "fulfillment",
        "store",
        "locations",
        "initiative",
        "monitoring",
        "users",
        "course",
        "business",
        "exceptions",
        "addition",
        "monitoring",
        "events",
        "supply",
        "chain",
        "lifecycle",
        "project",
        "gaps",
        "visibility",
        "reporting",
        "access",
        "data",
        "goals",
        "project",
        "visibility",
        "Shipment",
        "RDC",
        "Visibility",
        "improvements",
        "carrier",
        "vendor",
        "compliance",
        "data",
        "executive",
        "reporting",
        "Responsibilities",
        "requirements",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "Testing",
        "Implementation",
        "application",
        "Agile",
        "Scrum",
        "methodology",
        "project",
        "sprints",
        "LLD",
        "Low",
        "Level",
        "Design",
        "document",
        "DDD",
        "Detailed",
        "Design",
        "Document",
        "document",
        "SOA",
        "architecture",
        "Restful",
        "Web",
        "Services",
        "Experience",
        "WS",
        "creation",
        "unit",
        "Junit",
        "Rest",
        "Client",
        "application",
        "HTML",
        "J",
        "Query",
        "Ajax",
        "AJAX",
        "Web",
        "Application",
        "JavaScript",
        "Data",
        "Validations",
        "Data",
        "Access",
        "object",
        "database",
        "DAO",
        "Framework",
        "performance",
        "testing",
        "J",
        "Probe",
        "tool",
        "memory",
        "leaks",
        "objects",
        "Java",
        "Messaging",
        "Service",
        "JMS",
        "APIs",
        "file",
        "LEAD",
        "Time",
        "application",
        "TIBCO",
        "TIBCO",
        "code",
        "Static",
        "code",
        "analysers",
        "Check",
        "style",
        "PMD",
        "bugs",
        "Eclipse",
        "IDE",
        "code",
        "Sub",
        "Version",
        "version",
        "control",
        "Performed",
        "unit",
        "integration",
        "testing",
        "system",
        "testing",
        "applications",
        "QA",
        "team",
        "QA",
        "testing",
        "applications",
        "fixes",
        "Jenkins",
        "deploys",
        "software",
        "packages",
        "applications",
        "Tomcat",
        "Server",
        "Environment",
        "Eclipse",
        "Tomcat",
        "Java",
        "JavaScript",
        "JSP",
        "j",
        "Query",
        "Servest",
        "Restful",
        "Web",
        "Services",
        "JAXRS",
        "JAXB",
        "XML",
        "Poster",
        "Jenkins",
        "Opsware",
        "IBM",
        "DB2",
        "Java",
        "Developer",
        "JP",
        "Morgan",
        "Chase",
        "May",
        "December",
        "Project",
        "Information",
        "One",
        "Information",
        "one",
        "track",
        "customers",
        "information",
        "offers",
        "rewards",
        "emails",
        "application",
        "operations",
        "end",
        "interval",
        "time",
        "Java",
        "Batch",
        "framework",
        "Java",
        "batch",
        "jobs",
        "scheduler",
        "interval",
        "time",
        "Responsibilities",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "Testing",
        "Implementation",
        "User",
        "Acceptance",
        "Testing",
        "maintenance",
        "stage",
        "OO",
        "Analysis",
        "OOA",
        "Design",
        "OOD",
        "Identification",
        "Components",
        "Technical",
        "Use",
        "Cases",
        "Documentation",
        "Use",
        "case",
        "design",
        "UML",
        "modelling",
        "development",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "Use",
        "case",
        "diagrams",
        "web",
        "pages",
        "end",
        "technologies",
        "JSP",
        "HTML",
        "Java",
        "Script",
        "CSS",
        "Java",
        "Message",
        "Service",
        "JMS",
        "exchange",
        "information",
        "statement",
        "activities",
        "ControlM",
        "job",
        "monitoring",
        "tool",
        "scheduling",
        "Scheduled",
        "Jobs",
        "Responsible",
        "modules",
        "project",
        "Web",
        "Sphere",
        "application",
        "server",
        "struts",
        "validation",
        "framework",
        "presentation",
        "tier",
        "validations",
        "Configuration",
        "Management",
        "tool",
        "CVS",
        "version",
        "management",
        "Developed",
        "J",
        "Unit",
        "test",
        "classes",
        "Services",
        "Log4j",
        "Ant",
        "Project",
        "streams",
        "Environment",
        "Java",
        "Struts",
        "J2ee",
        "JDBC",
        "Servest",
        "JSP",
        "Edit",
        "RAD",
        "IDE",
        "Web",
        "Sphere",
        "CVS",
        "HTML",
        "JavaScript",
        "CSS",
        "Ant",
        "Log4j",
        "Skills",
        "ECLIPSE",
        "J2EE",
        "HIBERNATE",
        "SPRING"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:43:16.149262",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer The Home Depot Strong work experience in Software development with knowledge in Object Oriented Applications and Web based Enterprise Applications using JavaJ2EE on Windows and UNIX platforms for Retail Travel and Banking Domains Has exposure to the complete Software Development Life Cycle activities like User Requirement Specification Requirement analysis Design Development Unit testing UNITIntegration Release and Technical documentation Experience in Core Java 17 J2EE enterprise technologies including JSPEJBJNDI JDBC JMS Spring Boot Spring Struts and web client technologies including HTML CSS AJAX React JS and Java Script and XMLJSONXSLTJAXRSJAXB Experienced in design and development of Spring Boot application using Micro services Architecture Experience in writing Java Web Services using Restful Experience in developing SQL queries for DB2 Oracle databases and comfortable using other open source databases like My SQL and NoSQL database Cassandra Experience in producing and consuming messages through Tibco EMS server and used Gems as a graphical representation to view the Queues Topics Bridges and Routes Experience in ORM framework like Hibernate and query language like HQL Possess hands on experience using agile methodologies including SCRUM Extensive knowledge in general objectoriented design principles and concepts including Design patterns like Chain of Responsibility MVC DAO Factory etc Experience in using logging libraries like Apache Commons Logging and Log4j Experience in using Rapid Application Development RAD environments like Eclipse and Net beans IDE Involved in Unit Test Cases writing and having good knowledge in JUnit Extensive experience in implementation of the version control systems like GitHub TFS Subversion CVS and Clear Case Experience in UNIX Shell Scripting Strong analytical skills with ability to quickly understand clients business needs Quick learner eager and able to rapidly learn new APIs tools and techniques and implement business solutions that require cutting edge technology Troubleshooting and problem solving skills Work Experience Java Developer The Home Depot Atlanta GA November 2018 to Present Description Repair Depot is the single platform one stop shop for all home depot Repairs complete with single flow for ordering parts organizing repair queues maintaining customer orders and managing inventory The technicians can efficiently order parts for repairs and track order history New Work orders can be created view open repairs edit and diagnose tools add notes to repair and finish a repair Repair Tracker are used to track the status of the repair Repair Queues assist in managing the zone level repairs Responsibilities Has developed micro services for parts order parts service inventory Parts order systems Developed the application using React JS components and containers Repair Depot UI uses several repair libraries to render the application view Repair Depot UI interacts with the back end micro services to render the repair details through rest service calls Implemented Spring JDBC and JPA for the Database interaction to update the repair inventory details CICD process are through the concourse pipelines Deployed the applications in the Pivotal Cloud Foundary Used Pivotal tracker for tracking the user stories Worked in a test driven development environment Environment JDK 18 Spring Boot REST API React JS Redux XSLT YAML JMS Bash Shell Scripting Swagger JunitMocktioJest Postman Client GIT Concourse Pivotal Cloud Foundary Metasys Technologies Java Developer Macys Systems and Technology Johns Creek Court GA January 2018 to October 2018 Description The integration of Macys Real Time Offers system with Loyalty system where Loyalty sends the loyalty offer metadata to RTO system and RTO system will generate the segmented campaigns to Loyalty System based on the loyalty data being received from DAAS These campaigns related data from Loyalty system will be sent to downstream systems like DAAS along with additional information which will be further sent to backend systems where Data Analytics are generated related to offers being redeemed Segmented customers will be receiving the offer codes through different means like email sms push and other communication systems to redeem the offers being provided Responsibilites Has developed microservices to consume messages from Tibco Ems Queue published messages to the Tibco Ems Topic for the targeted offers and deployed microservices Process the messages interacting through REST services and formed the JSON objects Implemented Spring JDBC and JPA for the Database interaction to update the reward offers and Coupon Offers Read the loyalty program details from the NoSql database Cassandra Platform is very dynamic used Jenkins for continuous integration Udeploy for automatic deployment Extensively used IAPI logs for logging and elastic Search Kibana Dashboards for viewing logs Developing the property server using spring boot to externalize the application configuration Used Atlassian tool JIRA to track the user stories and defectsbugs for the project Used Macys Platforms MspCore FrameworkMicroService Platform for the application development Designed and developed the application using Agile Scrum methodology by breaking down the project to several sprints Performed the unit testing integration testing and system testing of the applications Environment JDK 18 Spring BootTibco EMS REST API SOAP XSLT YAML JMS Bash Shell Scripting HP ALM Swagger Junit Postman Client GITUdeploy Java Developer UPS PickupPoint Alpharetta GA November 2016 to January 2018 Description The UPS PickupPoint is used in the medical industry The medical laboratories use this UPS PickupPoint facility to collect the lab specimens from the doctors office The PickupPoints will be available at specific clinical sites locations with a unique PlacardID The clinical sites can inquire on the site status Request for an available pickup and subscribe for alertsreminders through Virtual DropBox Web Application A dashboardmonitoring engine was built to enable realtime or near realtime visibility of VDB Pickup status for authorized users of companies The PickupPoint Component is an internal component to the VDB PickupPoint that receives the request from the VDBWAQVMC clients process the request interface with the PickupPointDB to inquire and confirm the PicupPointOrders send the response back to the Client applications New channels were established to communicate Pickup orders to interested parties and receive pickup status from Operations The Subscribers of the PickupPoints receive the alerts on the Order status Reminders are sent before the closing time to confirmrequest a pickup Responsibilities Had analysed the Business Requirement Specification and Functional Requirement Specification through JAMA product management software had done Design Development Integration Testing and Implementation Designed and developed the application using Agile methodology Experience with Spring 40 Framework by implementing Spring Rest API Developed REST APIs for status inquiry schedule pickup subscribeunsubscribeupdate for alerts decode subscription using spring Wrote business logic for processing the above APIs functionalities Experience in implementing the Spring JMS API to publish the confirmed pickup orders expired pickup orders and subscribe the order status from UPS Operations in IBM MQ Developed code to interact with DB webservice using Spring REST API Wrote Jobs using Spring Batch and Scheduler to send out alerts and update status to the DB Extensively used Log4j for logging Developed code is analysed using Static code analysers like Check style PMD and Find bugs Extensively used Eclipse IDE while writing code used Team Foundation Server for version control Performed the unit testing integration testing and system testing of the applications Coordinate with the QA team for the QA testing of the applications and defect fixes using the TFS defect tracking system Used Maven plugin to build the software packages Deployed the applications in Oracles WebLogic Application Server Environment Eclipse 36 Java 17 Spring 40 Spring JMS IBM MQ Maven JSON Log4j WebLogic Server Junit Java Developer UPS PickupPoint Alpharetta GA April 2015 to October 2016 Description UPS Internet Freight Shipping UIFS is a web based UPS shipping application that enables the UPS users customers to create a Freight shipment across different lanes using various services UIFS offers shipping in one step and guides through every stage of the shipping process initiate a shipment set user preferences schedule a pickup track shipment progress create a bill of lading for freight shipments using saved addresses and commodity information This initiative is to provide the Ground with Freight Pricing GFP service option to all shippers for eligible shipments and to provide a comparison between Less Than truck Load LTL and GFP offerings ship GFP without a contract Display GFP rates to shippers regardless of origin and destination point within the US48 and to provide and collect densityclass rating shipment information Responsibilities Participated in requirement Gathering had analysed the BRS and FRS through JAMA product management software had done Design Development Integration Testing and Implementation Prepared the Requirement traceability matrix Low level design document Use case specification Document and used UML diagramsClass diagrams Sequence diagrams Experience with Struts 12 Framework implementing MVC architecture Experience in using EJB 30 to develop and create stubs adapters and connectors for retrieving the customer contract list for the different customer classifications Density based Userclass based User Extensively interacted with the external dependencies like IMS FAC SHARP AV IO and International Forms for setting the user preferences Made the UI changes for the user interface using HTML 5 JavaScript JQuery Ajax Extensively used Rest Web Services to interact with the back end systems UPGF Freight shipping services E2k to retrieve the small package and customer contract information and FRAC to retrieve and display the rates Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Consumed AngularJs as a client side application to add a newexisting account for the existing or new user Extensively used Log4j for logging Developed code is analysed using Static code analysers like Check style PMD and Find bugs Experience in using Hailstorm vulnerability assessment tool to test for the security holesto limit the number of vulnerabilities and Burp Suite to test the webapplication against the vulnerabilities Extensively used Eclipse IDE while writing code used Team Foundation Server for version control Performed the unit testing integration testing and system testing of the applications Have identified the defects and logged in the identified defects in the Serena Defect tracking system and the translation related defects in the JIRA Coordinate with the QA team for the QA testing of the applications and defect fixes Used Ant deploy plugin to build the software packages Deployed the applications in Oracles WebLogic Application Server and Apache Server Environment Eclipse 36 Java 17Struts JavaScript JSP j Query Ajax Servlet XML Soap EJB Firebug Junit Vhtml Hailstorm BurpSuite Java Developer January 2013 to April 2014 Project Title Supply Chain Visibility Description Supply Chain Visibility is a web application developed mainly for End to End Visibility of orders The purpose of this project is to increase product and shipment visibility from product origin to actual fulfillment at store locations This initiative will enable proactive monitoring for our users in their normal course of business and when exceptions occur In addition to electronic monitoring of events within the supply chain lifecycle this project will resolve gaps in visibility by providing operational reporting and access to analytical data The goals for this project include providing visibility for Shipment and RDC Visibility supporting improvements in carrier and vendor compliance by providing timely electronic data feeds and establishing executive and operational reporting Responsibilities Participated in requirements gathering and had done Analysis Design Development Integration Testing and Implementation Designed and developed the application using Agile Scrum methodology by breaking down the project to several sprints Prepared the LLD Low Level Design document and DDD Detailed Design Document document Developed SOA architecture based on the Restful Web Services Experience with WS creation unit tested using Junit and debugged using Rest Client and posterplugins Designed and developed the application using HTML 5 J Query Ajax Worked on AJAX to develop an interactive Web Application and JavaScript for Data Validations Implementing the Data Access object to connect the database through DAO Framework Conducted the performance testing using the J Probe tool to identify the memory leaks unused java objects Implemented Java Messaging Service JMS APIs to receive the file for LEAD Time application from TIBCO and send the processed to file back to TIBCO Developed code is analysed using Static code analysers like Check style PMD and Find bugs Extensively used Eclipse IDE while writing code used Sub Version for version control Performed the unit testing integration testing and system testing of the applications Coordinate with the QA team for the QA testing of the applications and defect fixes Used Jenkins deploys plugin to build the software packages Deployed the applications in Tomcat Server Environment Eclipse 36 Tomcat 60 Java 16 JavaScript JSP j Query Servest Restful Web Services JAXRS JAXB XML Poster Jenkins Opsware and IBM DB2 Java Developer JP Morgan Chase May 2011 to December 2012 Project Information One Information one is the portal used internally to keep track of the customers recorded information to provide offers rewards and emails This application needs some operations that need to be happened in the back end at the regular interval of time This had been achieved by using the Java Batch framework There are some Java batch jobs that will be triggered by the scheduler and gets executed at the regular interval of time Responsibilities Responsible for Analysis Design Development Integration Testing Implementation User Acceptance Testing and maintenance stage Involved in OO Analysis OOA and Design OOD and Identification of Components and preparing Technical Use Cases Involved in Documentation and Use case design using UML modelling include development of Class diagrams Sequence diagrams and Use case diagrams Designed several web pages using front end technologies like JSP HTML Java Script and CSS Used Java Message Service JMS for reliable and asynchronous exchange of important information such as statement of activities Extensively used ControlM job monitoring tool for scheduling and monitoring the Scheduled Jobs Responsible for deploying different modules of the project in Web Sphere application server Used struts validation framework for performing presentation tier validations Used Configuration Management tool CVS for version management Developed J Unit test classes to test the Services Implemented Log4j for logging and tracing Used Ant to compile and Build the Project streams Environment Java Struts 12 J2ee JDBC Servest JSP Edit plus RAD IDE Web Sphere CVS HTML JavaScript CSS Ant Log4j Skills ECLIPSE J2EE JAVA HIBERNATE SPRING",
    "unique_id": "aed74c3a-c7d2-4793-9d60-c0bdec08b928"
}