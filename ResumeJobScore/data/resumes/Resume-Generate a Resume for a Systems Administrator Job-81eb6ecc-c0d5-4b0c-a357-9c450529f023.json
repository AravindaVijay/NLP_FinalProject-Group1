{
    "clean_data": "SR PYTHON DEVELOPER SR span lPYTHONspan span lDEVELOPERspan SR PYTHON DEVELOPER BANK OF AMERICA USA Work Experience SR PYTHON DEVELOPER BANK OF AMERICA Charlotte NC December 2018 to Present Worked on serverside applications with Django using Python programming and automated the existing scripts for performance calculations using machine library like Numpy and SQL Alchemy for Insurance premium Handled database issues and connections with SQL and NoSQL databases like MongoDB by installing and configuring various packages in python Teradata MySQL  MySQL connector PyMongo and SQL Alchemy Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Building the REST API using Python Flask and Elasticsearch search engine to aggregate result data in a timely and scalable manner Experience with AgileScrum methodology SDLC and well versed in developing user stories designed collaborative business model Visio Integrated Hibernate ORM with SpringHibernate framework to facilitate DML and DQL queries and represent objectdatabase mapping Created functions in Lambda that aggregates the data from incoming events then stores resulting data in Amazon Dynamo DB and S3 Working on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQS and Jenkins CICD Developed full stack web applications using Python Flask ReactJS SQL HTMLCSS JavaScript and with an N tier architecture approach Included in the applications built are selfdesigned relational databases user role management and salted hashing password encryption for site security As part of product backlog grooming sessions created usercentered requirement specifications user stories Managed all project requirements in agile tools like Jira and Confluence Designed applications implementing MVC architecture in Pyramid Zope frame works and designed mobile search application system requirements and coded backend and frontend in Python Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events and Responsible for designing and developing REST web services in Python using flask and flaskrestful framework Created database using MySQL wrote several queries and used FLASK to extract data from database and Developed dynamic frontend and backend applications using Python Flask Frameworks Automated JIRA processes using Python and bash scripts Implementation under Red Hat and CentOS both locally and on Cloud and Developed entire frontend and backend modules using Python on Django Web Framework Created User Interface UI using JavaScript bootstrap Angularjs and HTML5CSS Worked on frontend frameworks like CSS Bootstrap for development of Web applications Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Build Cassandra queries for performing various CRUD operations like create update read and delete Created Database Objects like Tables Stored Procedures Views Triggers Rules Defaults user defined data types and functions Bootstrap is used as a mechanism to manage and organize the html page layout Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in LINUX environment and familiar with all of its commands Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like Kubernetes and Mesos Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Generated Python Django forms to record data of online users and used PyTest for writing test cases Worked in developing Webbased Applications using Python CSS HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML Angular JS and jQuery also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame PySpark urlib2 libraries Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS JavaScript and jQuery Implemented and enhanced CRUD operations for the applications using the MVC architecture of Rails framework and Ruby conducting code reviews Developed PythonKafka consumer code for archiving data for five minutes Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Python Full Stack Developer Devon Bank Chicago IL September 2015 to November 2016 Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Monitor service health check from Spring Boot Admin console using swaggered UI registered microservices Used Ajax and jQuery for transmitting JSON data objects between frontend and controllers and implemented AJAX for dynamic functionality of a webpages for front end applications Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used and DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Designed and developed Use Cases and Use Case scenarios Activity Diagrams Sequence Diagrams High Level and LowLevel Process Flow Diagrams OOAD using UML and Business Process Modeling Used Python Django and Pyramid frameworks to develop applications and responsible for both backend programming and frontend functionality using JavaScript Ajax AngularJS and other technologies Used both agile and waterfall methodology to manage requirements in an automated tool and defined requirements for solutions in multipleentity environments Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Developed Django based dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Used Hibernate framework for DAO layer to access the Oracle database Used JavaScript for clientside validations and involved in writing POJOs hbm and hibernatecfg files and configured the same for application development Different testing methodologies like unit testing Integration testing web application testing selenium testing was performed Used Django framework for application development Developed user interface using CSS HTML JavaScript and jQuery Ruby on rails Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings and used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Works in implementing Model View Control MVC architecture using serverside applications for developing web applications using Django Python Flask Python and DOJO jQuery while using HTMLCSSJS for serverside rendered applications Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Resolved ongoing problems and accurately documented progress of a project Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL  for database connectivity Designing web pages and Graphical user interfaces front end layouts on the web by using HTML DHTML CSS Bootstrap framework PHP XML JavaScript node Js and Angular JS Understanding of OpenShift Platform in managing Docker containers and Kubernates clusters Practical experience with working on MultipleEnvironments like Development Testing Production Good understanding of Jingo ORM and SqlAlchamy Good knowledge in CORE JAVA and OOPS concepts Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Good programming problem solving skills commitment result oriented with a quest zeal to learn new technologies DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Used web applications development using Django Python Flask Python and JQuery Ajax while using HTMLCSSJS for serverside rendered application Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures to deploy AWS MS Azure Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Deployed Docker contained Spring Boot micro services in to Spring EC2 container service using AWS admin console and used lambda to run applications in AWS console Automate report generation in MongoDB using JavaScript shell scripting Java added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked with team of developers on Python applications for RISK management Python Developer United Health Group Minneapolis MN August 2013 to August 2015 Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQL and Linux Implemented and tested many features for dashboard using Flask CSS and JavaScript Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Placed data into JSON files using Python to test Django websites and used Python scripts to update the content in database and manipulate files also wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Used Nodejs to create a fast chat server with efficiency and developed views and templates in Django to create a userfriendly website interface and also Constructed RESTful APIs using PHP Nodejs and MySQLPostgreSQL Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation and deployment of AWS EC2 environments for proof of concept of design assumptions Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos and used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Used python library Beautiful Soup for Web scraping to extract data for building graphs worked in MySQL database on simple queries and writing Stored Procedures for Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Introduced to encapsulate the existing structures used by Keymap and help S3 IndexKeymap scale infinitely Developed entire frontend and backend modules using Python on Django Web Framework Coordinate facilitated and participate in agile ceremonies such as product backlog grooming sprint planning daily standup sprint review and retrospective meetings Designed developed and bundled various small financial utilities using JAVA Hibernate XML parser SAX which was distributed to different development teams Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Designing ETL process and creation of ETL design and system design documents Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Architecting and deploying AWS EC2 and S3based environments Worked in Python on a SQL database Used Ajax for transmitting JSON data objects between frontend and controllers and Worked on configuring TCPIP network interface assigning static routes and hostnames Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Handy experience in developing web applications by using Python Django PHP C XML CSS HTML DHTML JavaScript and JQuery Good experience in Shell Scripting SQL Server UNIX Linux and Open stack Excellent Experience on various Python integrated IDEs such as Sublime Text Geany PyCharm Eclipse and NetBeans Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Strong expertise in development of webbased applications using Python Java HTML XML KML CSS DHTML JavaScript JSON Angular JS and jQuery Working knowledge of Python ORM libraries including Django ORM SQLAlchemy Experience in working with Python C PHP HTML DHTML XML CSS JavaScript JQuery Bootstrap JSON ReactJS Experienced in working with various Python Integrated Development Environments IDE like NetBeans PyCharm Eclipse Visual Studio Experienced in using Pig Hive Sqoop Oozie Zookeeper HBase and Cloudera Spark Manager knowledge of different Big data analytical and processing tools like Pig Hive Spark core and Streaming Experienced in Development testing and deployment of enterprise applications on Windows UNIX platforms using IDEs such as Eclipse Rational Application Developer RAD NetBeans Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Tested legacy code written in Python updated SQL quires in Teradata and PostgreSQL Data Base Designed and developed a horizontally scalable APIs using Python Flask designed Cassandra schema for the APIs and implemented monitoring and established best practices around using elastic search Created bean docker gem for easy creation of additional docker containers on Elastic Beanstalk instances for testing and diagnostics Used jQuery and AJAX calls for transmitting JSON data Designed and developed microservices using python kubernetes docker Django nodejs Designed and lead a team on storage service orchestration API activity to automate Netapp and Hitachi storage processes like Block provisioning using the REST calls using Django Rest Framework Django objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker",
    "entities": [
        "CSS HTML JavaScript",
        "Netapp",
        "Python Flask",
        "S3 Working",
        "AJAX",
        "AWS EC2",
        "MN",
        "Graphical",
        "Created UseCase",
        "Interfacing",
        "Kubernates clusters Practical",
        "Infrastructure Development and Operations",
        "Design Development and Deployment Testing and Implementation",
        "MultipleEnvironments",
        "Model View Control MVC",
        "XML",
        "DHTML",
        "Spring IoC",
        "Python C PHP",
        "Functional",
        "DevOps",
        "Hitachi",
        "Shell",
        "Visio Integrated Hibernate",
        "State",
        "JQuery Good",
        "SQL Procedures",
        "Amazon",
        "Creation",
        "Data ImportExport",
        "UserAcceptance",
        "Python",
        "Amazon AWS S3",
        "Developed",
        "Jenkins",
        "CSS Bootstrap",
        "Python Used React JS",
        "Pig Hive Sqoop Oozie Zookeeper HBase",
        "Django",
        "Utilized",
        "SqlAlchamy Good",
        "UML",
        "Project Status",
        "jQuery Ruby",
        "Virtual DOM React Props Lifecycle",
        "DQL",
        "Cleaned",
        "Python and Django Monitor",
        "Minneapolis",
        "Collaborated",
        "Shell Scripting",
        "jQuery Implemented",
        "Docker",
        "Mesos Developed CICD",
        "Spring Boot micro services",
        "S3based",
        "RDS",
        "SQL Alchemy for Insurance",
        "Views",
        "MVC",
        "Streaming Experienced",
        "Mesos",
        "GIT",
        "AWS MS Azure Collaborated",
        "JS",
        "HTML CSS",
        "API",
        "HTML CSS JavaScript",
        "LINUX",
        "Created",
        "Present Worked",
        "AWS",
        "Python Developer United Health Group",
        "jQuery Working",
        "HTML DHTML CSS Bootstrap",
        "JSX",
        "SAX",
        "HTML",
        "Amazon Web Services AWS Created",
        "Use Cases",
        "SQL",
        "Spring Boot Admin",
        "Flask CSS",
        "Jingo",
        "DML",
        "the React States and Events and Responsible",
        "Kubernetes",
        "Jenkins Ansible",
        "FLASK",
        "DB2 SQL Procedures",
        "PHP Nodejs",
        "CICD",
        "Amazon AWS",
        "Jenkins CICD Developed",
        "Python Django PHP C XML",
        "Pandas",
        "Python Integrated Development Environments",
        "SQS",
        "CRUD",
        "Ruby",
        "ETL",
        "Python Django Worked on Dockers RabbitMQ",
        "Pandas Data",
        "Build",
        "Djangos",
        "PySpark urlib2",
        "JavaScript",
        "JAVA Hibernate XML",
        "Eclipse Rational Application Developer",
        "Python Bootstrap CSS",
        "UI",
        "PHP XML JavaScript",
        "Utilized PyUnit",
        "Created Database Objects like",
        "MS Visio Created",
        "CloudFront IAM",
        "CSS",
        "SpringHibernate",
        "jQuery",
        "REST",
        "Introduced",
        "NetBeans",
        "HTMLCSSJS",
        "NoSQL",
        "Application",
        "PyTest",
        "Integration",
        "Teradata",
        "PythonTornado"
    ],
    "experience": "Experience SR PYTHON DEVELOPER BANK OF AMERICA Charlotte NC December 2018 to Present Worked on serverside applications with Django using Python programming and automated the existing scripts for performance calculations using machine library like Numpy and SQL Alchemy for Insurance premium Handled database issues and connections with SQL and NoSQL databases like MongoDB by installing and configuring various packages in python Teradata MySQL   MySQL connector PyMongo and SQL Alchemy Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Building the REST API using Python Flask and Elasticsearch search engine to aggregate result data in a timely and scalable manner Experience with AgileScrum methodology SDLC and well versed in developing user stories designed collaborative business model Visio Integrated Hibernate ORM with SpringHibernate framework to facilitate DML and DQL queries and represent objectdatabase mapping Created functions in Lambda that aggregates the data from incoming events then stores resulting data in Amazon Dynamo DB and S3 Working on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQS and Jenkins CICD Developed full stack web applications using Python Flask ReactJS SQL HTMLCSS JavaScript and with an N tier architecture approach Included in the applications built are selfdesigned relational databases user role management and salted hashing password encryption for site security As part of product backlog grooming sessions created usercentered requirement specifications user stories Managed all project requirements in agile tools like Jira and Confluence Designed applications implementing MVC architecture in Pyramid Zope frame works and designed mobile search application system requirements and coded backend and frontend in Python Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events and Responsible for designing and developing REST web services in Python using flask and flaskrestful framework Created database using MySQL wrote several queries and used FLASK to extract data from database and Developed dynamic frontend and backend applications using Python Flask Frameworks Automated JIRA processes using Python and bash scripts Implementation under Red Hat and CentOS both locally and on Cloud and Developed entire frontend and backend modules using Python on Django Web Framework Created User Interface UI using JavaScript bootstrap Angularjs and HTML5CSS Worked on frontend frameworks like CSS Bootstrap for development of Web applications Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Build Cassandra queries for performing various CRUD operations like create update read and delete Created Database Objects like Tables Stored Procedures Views Triggers Rules Defaults user defined data types and functions Bootstrap is used as a mechanism to manage and organize the html page layout Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in LINUX environment and familiar with all of its commands Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like Kubernetes and Mesos Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Generated Python Django forms to record data of online users and used PyTest for writing test cases Worked in developing Webbased Applications using Python CSS HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML Angular JS and jQuery also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame PySpark urlib2 libraries Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS JavaScript and jQuery Implemented and enhanced CRUD operations for the applications using the MVC architecture of Rails framework and Ruby conducting code reviews Developed PythonKafka consumer code for archiving data for five minutes Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Python Full Stack Developer Devon Bank Chicago IL September 2015 to November 2016 Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Monitor service health check from Spring Boot Admin console using swaggered UI registered microservices Used Ajax and jQuery for transmitting JSON data objects between frontend and controllers and implemented AJAX for dynamic functionality of a webpages for front end applications Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used and DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Designed and developed Use Cases and Use Case scenarios Activity Diagrams Sequence Diagrams High Level and LowLevel Process Flow Diagrams OOAD using UML and Business Process Modeling Used Python Django and Pyramid frameworks to develop applications and responsible for both backend programming and frontend functionality using JavaScript Ajax AngularJS and other technologies Used both agile and waterfall methodology to manage requirements in an automated tool and defined requirements for solutions in multipleentity environments Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Developed Django based dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Used Hibernate framework for DAO layer to access the Oracle database Used JavaScript for clientside validations and involved in writing POJOs hbm and hibernatecfg files and configured the same for application development Different testing methodologies like unit testing Integration testing web application testing selenium testing was performed Used Django framework for application development Developed user interface using CSS HTML JavaScript and jQuery Ruby on rails Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings and used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Works in implementing Model View Control MVC architecture using serverside applications for developing web applications using Django Python Flask Python and DOJO jQuery while using HTMLCSSJS for serverside rendered applications Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Resolved ongoing problems and accurately documented progress of a project Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL   for database connectivity Designing web pages and Graphical user interfaces front end layouts on the web by using HTML DHTML CSS Bootstrap framework PHP XML JavaScript node Js and Angular JS Understanding of OpenShift Platform in managing Docker containers and Kubernates clusters Practical experience with working on MultipleEnvironments like Development Testing Production Good understanding of Jingo ORM and SqlAlchamy Good knowledge in CORE JAVA and OOPS concepts Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Good programming problem solving skills commitment result oriented with a quest zeal to learn new technologies DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Used web applications development using Django Python Flask Python and JQuery Ajax while using HTMLCSSJS for serverside rendered application Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures to deploy AWS MS Azure Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Deployed Docker contained Spring Boot micro services in to Spring EC2 container service using AWS admin console and used lambda to run applications in AWS console Automate report generation in MongoDB using JavaScript shell scripting Java added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked with team of developers on Python applications for RISK management Python Developer United Health Group Minneapolis MN August 2013 to August 2015 Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQL and Linux Implemented and tested many features for dashboard using Flask CSS and JavaScript Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Placed data into JSON files using Python to test Django websites and used Python scripts to update the content in database and manipulate files also wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Used Nodejs to create a fast chat server with efficiency and developed views and templates in Django to create a userfriendly website interface and also Constructed RESTful APIs using PHP Nodejs and MySQLPostgreSQL Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation and deployment of AWS EC2 environments for proof of concept of design assumptions Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos and used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Used python library Beautiful Soup for Web scraping to extract data for building graphs worked in MySQL database on simple queries and writing Stored Procedures for Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Introduced to encapsulate the existing structures used by Keymap and help S3 IndexKeymap scale infinitely Developed entire frontend and backend modules using Python on Django Web Framework Coordinate facilitated and participate in agile ceremonies such as product backlog grooming sprint planning daily standup sprint review and retrospective meetings Designed developed and bundled various small financial utilities using JAVA Hibernate XML parser SAX which was distributed to different development teams Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Designing ETL process and creation of ETL design and system design documents Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Architecting and deploying AWS EC2 and S3based environments Worked in Python on a SQL database Used Ajax for transmitting JSON data objects between frontend and controllers and Worked on configuring TCPIP network interface assigning static routes and hostnames Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Handy experience in developing web applications by using Python Django PHP C XML CSS HTML DHTML JavaScript and JQuery Good experience in Shell Scripting SQL Server UNIX Linux and Open stack Excellent Experience on various Python integrated IDEs such as Sublime Text Geany PyCharm Eclipse and NetBeans Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Strong expertise in development of webbased applications using Python Java HTML XML KML CSS DHTML JavaScript JSON Angular JS and jQuery Working knowledge of Python ORM libraries including Django ORM SQLAlchemy Experience in working with Python C PHP HTML DHTML XML CSS JavaScript JQuery Bootstrap JSON ReactJS Experienced in working with various Python Integrated Development Environments IDE like NetBeans PyCharm Eclipse Visual Studio Experienced in using Pig Hive Sqoop Oozie Zookeeper HBase and Cloudera Spark Manager knowledge of different Big data analytical and processing tools like Pig Hive Spark core and Streaming Experienced in Development testing and deployment of enterprise applications on Windows UNIX platforms using IDEs such as Eclipse Rational Application Developer RAD NetBeans Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Tested legacy code written in Python updated SQL quires in Teradata and PostgreSQL Data Base Designed and developed a horizontally scalable APIs using Python Flask designed Cassandra schema for the APIs and implemented monitoring and established best practices around using elastic search Created bean docker gem for easy creation of additional docker containers on Elastic Beanstalk instances for testing and diagnostics Used jQuery and AJAX calls for transmitting JSON data Designed and developed microservices using python kubernetes docker Django nodejs Designed and lead a team on storage service orchestration API activity to automate Netapp and Hitachi storage processes like Block provisioning using the REST calls using Django Rest Framework Django objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker",
    "extracted_keywords": [
        "SR",
        "PYTHON",
        "DEVELOPER",
        "SR",
        "span",
        "lPYTHONspan",
        "span",
        "lDEVELOPERspan",
        "SR",
        "PYTHON",
        "DEVELOPER",
        "BANK",
        "AMERICA",
        "USA",
        "Work",
        "Experience",
        "SR",
        "PYTHON",
        "DEVELOPER",
        "BANK",
        "AMERICA",
        "Charlotte",
        "NC",
        "December",
        "Present",
        "serverside",
        "applications",
        "Django",
        "Python",
        "programming",
        "scripts",
        "performance",
        "calculations",
        "machine",
        "library",
        "Numpy",
        "SQL",
        "Alchemy",
        "Insurance",
        "premium",
        "database",
        "issues",
        "connections",
        "SQL",
        "NoSQL",
        "MongoDB",
        "packages",
        "python",
        "Teradata",
        "MySQL",
        "MySQL",
        "connector",
        "PyMongo",
        "SQL",
        "Alchemy",
        "Architected",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "React",
        "Webpack",
        "Redux",
        "ES67",
        "PostgreSQL",
        "database",
        "REST",
        "API",
        "Python",
        "Flask",
        "Elasticsearch",
        "search",
        "engine",
        "result",
        "data",
        "manner",
        "Experience",
        "AgileScrum",
        "methodology",
        "SDLC",
        "user",
        "stories",
        "business",
        "model",
        "Visio",
        "Integrated",
        "Hibernate",
        "ORM",
        "SpringHibernate",
        "framework",
        "DML",
        "DQL",
        "queries",
        "objectdatabase",
        "mapping",
        "functions",
        "Lambda",
        "data",
        "events",
        "data",
        "Amazon",
        "Dynamo",
        "DB",
        "S3",
        "Working",
        "AWS",
        "services",
        "S3",
        "EC2",
        "deployment",
        "services",
        "Lambda",
        "RDS",
        "DynamoDB",
        "NoSQL",
        "Beanstalk",
        "SQS",
        "Jenkins",
        "CICD",
        "stack",
        "web",
        "applications",
        "Python",
        "Flask",
        "ReactJS",
        "SQL",
        "HTMLCSS",
        "JavaScript",
        "N",
        "tier",
        "architecture",
        "approach",
        "applications",
        "databases",
        "user",
        "role",
        "management",
        "password",
        "encryption",
        "site",
        "security",
        "part",
        "product",
        "backlog",
        "sessions",
        "requirement",
        "specifications",
        "user",
        "stories",
        "project",
        "requirements",
        "tools",
        "Jira",
        "Confluence",
        "applications",
        "MVC",
        "architecture",
        "Pyramid",
        "Zope",
        "frame",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Python",
        "React",
        "JS",
        "components",
        "JSX",
        "React",
        "components",
        "DOM",
        "React",
        "Props",
        "Lifecycle",
        "methods",
        "React",
        "States",
        "Events",
        "REST",
        "web",
        "services",
        "Python",
        "flask",
        "framework",
        "database",
        "MySQL",
        "queries",
        "FLASK",
        "data",
        "database",
        "frontend",
        "applications",
        "Python",
        "Flask",
        "Frameworks",
        "Automated",
        "JIRA",
        "processes",
        "Python",
        "scripts",
        "Implementation",
        "Red",
        "Hat",
        "CentOS",
        "Cloud",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Created",
        "User",
        "Interface",
        "UI",
        "JavaScript",
        "bootstrap",
        "Angularjs",
        "HTML5CSS",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "millions",
        "database",
        "records",
        "basis",
        "errors",
        "data",
        "patterns",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Build",
        "Cassandra",
        "CRUD",
        "operations",
        "update",
        "read",
        "Created",
        "Database",
        "Tables",
        "Stored",
        "Procedures",
        "Views",
        "Triggers",
        "Rules",
        "Defaults",
        "user",
        "data",
        "types",
        "functions",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "development",
        "applications",
        "LINUX",
        "environment",
        "commands",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "familiarity",
        "technologies",
        "Kubernetes",
        "Mesos",
        "CICD",
        "system",
        "Jenkins",
        "Kubernetes",
        "container",
        "environment",
        "Kubernetes",
        "Docker",
        "runtime",
        "environment",
        "CICD",
        "system",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "Webbased",
        "Applications",
        "Python",
        "CSS",
        "HTML",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AJAX",
        "J2EE",
        "jQuery",
        "JSON",
        "jQuery",
        "UI",
        "XML",
        "JS",
        "jQuery",
        "Soap",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Data",
        "frame",
        "PySpark",
        "urlib2",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "CRUD",
        "operations",
        "applications",
        "MVC",
        "architecture",
        "Rails",
        "framework",
        "Ruby",
        "code",
        "reviews",
        "Developed",
        "PythonKafka",
        "consumer",
        "code",
        "data",
        "minutes",
        "Build",
        "application",
        "Python",
        "Django",
        "Dockers",
        "RabbitMQ",
        "Celery",
        "Jenkins",
        "Python",
        "Stack",
        "Developer",
        "Devon",
        "Bank",
        "Chicago",
        "IL",
        "September",
        "November",
        "Business",
        "logic",
        "implementation",
        "data",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Python",
        "Django",
        "Monitor",
        "service",
        "health",
        "check",
        "Spring",
        "Boot",
        "Admin",
        "console",
        "UI",
        "microservices",
        "Ajax",
        "jQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "AJAX",
        "functionality",
        "webpages",
        "end",
        "applications",
        "Views",
        "Templates",
        "Python",
        "website",
        "interface",
        "Djangos",
        "controller",
        "template",
        "language",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "EC2",
        "VPC",
        "EBS",
        "AMI",
        "SNS",
        "RDS",
        "EBS",
        "Cloud",
        "Watch",
        "Cloud",
        "Trail",
        "Cloud",
        "Formation",
        "AWS",
        "Config",
        "Auto",
        "CloudFront",
        "IAM",
        "DynamoDB",
        "Use",
        "Cases",
        "Use",
        "Case",
        "scenarios",
        "Activity",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "High",
        "Level",
        "LowLevel",
        "Process",
        "Flow",
        "Diagrams",
        "UML",
        "Business",
        "Process",
        "Modeling",
        "Python",
        "Django",
        "Pyramid",
        "frameworks",
        "applications",
        "programming",
        "frontend",
        "functionality",
        "JavaScript",
        "Ajax",
        "AngularJS",
        "technologies",
        "methodology",
        "requirements",
        "tool",
        "requirements",
        "solutions",
        "multipleentity",
        "environments",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "Expertise",
        "serverside",
        "technologies",
        "Restful",
        "APL",
        "MVC",
        "design",
        "patterns",
        "Developed",
        "Django",
        "dashboard",
        "custom",
        "look",
        "end",
        "user",
        "study",
        "Django",
        "admin",
        "site",
        "dashboard",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "serverside",
        "software",
        "modules",
        "user",
        "interface",
        "components",
        "Compute",
        "Cloud",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "PLSQL",
        "procedures",
        "functions",
        "packages",
        "data",
        "area",
        "data",
        "mart",
        "Hibernate",
        "framework",
        "DAO",
        "layer",
        "Oracle",
        "database",
        "JavaScript",
        "validations",
        "POJOs",
        "hbm",
        "hibernatecfg",
        "files",
        "application",
        "development",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "selenium",
        "testing",
        "Used",
        "Django",
        "framework",
        "application",
        "development",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "Ruby",
        "rails",
        "reduction",
        "cost",
        "optimization",
        "supplier",
        "selection",
        "CRM",
        "Applications",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "EC2",
        "VPC",
        "EBS",
        "AMI",
        "SNS",
        "RDS",
        "EBS",
        "Cloud",
        "Watch",
        "Cloud",
        "Trail",
        "Cloud",
        "Formation",
        "AWS",
        "Config",
        "Auto",
        "CloudFront",
        "IAM",
        "DynamoDB",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "Serializable",
        "strings",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "web",
        "applications",
        "Django",
        "Python",
        "Flask",
        "Python",
        "DOJO",
        "jQuery",
        "HTMLCSSJS",
        "serverside",
        "applications",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "Expertise",
        "serverside",
        "technologies",
        "Restful",
        "APL",
        "MVC",
        "design",
        "patterns",
        "quality",
        "data",
        "collection",
        "integrity",
        "data",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Collaborated",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "problems",
        "progress",
        "project",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "Designing",
        "web",
        "pages",
        "user",
        "interfaces",
        "layouts",
        "web",
        "HTML",
        "DHTML",
        "CSS",
        "Bootstrap",
        "framework",
        "PHP",
        "XML",
        "JavaScript",
        "node",
        "Js",
        "Angular",
        "JS",
        "Understanding",
        "OpenShift",
        "Platform",
        "Docker",
        "containers",
        "Kubernates",
        "experience",
        "MultipleEnvironments",
        "Development",
        "Testing",
        "Production",
        "understanding",
        "Jingo",
        "ORM",
        "SqlAlchamy",
        "knowledge",
        "CORE",
        "JAVA",
        "concepts",
        "application",
        "service",
        "components",
        "beans",
        "Spring",
        "IoC",
        "creation",
        "Hibernate",
        "mapping",
        "files",
        "generation",
        "database",
        "schema",
        "programming",
        "problem",
        "skills",
        "commitment",
        "result",
        "quest",
        "zeal",
        "technologies",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "web",
        "applications",
        "development",
        "Django",
        "Python",
        "Flask",
        "Python",
        "JQuery",
        "Ajax",
        "HTMLCSSJS",
        "serverside",
        "application",
        "support",
        "Application",
        "database",
        "team",
        "troubleshoot",
        "issues",
        "support",
        "contact",
        "AWS",
        "Support",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "API",
        "services",
        "PythonTornado",
        "NodeJS",
        "AMQP",
        "architectures",
        "AWS",
        "MS",
        "Azure",
        "Collaborated",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "Deployed",
        "Docker",
        "Spring",
        "Boot",
        "micro",
        "services",
        "Spring",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "AWS",
        "console",
        "Automate",
        "report",
        "generation",
        "MongoDB",
        "JavaScript",
        "shell",
        "scripting",
        "Java",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "Python",
        "Developer",
        "United",
        "Health",
        "Group",
        "Minneapolis",
        "MN",
        "August",
        "August",
        "partnerships",
        "business",
        "unit",
        "knowledge",
        "base",
        "business",
        "line",
        "business",
        "plan",
        "products",
        "processes",
        "Created",
        "UseCase",
        "diagrams",
        "State",
        "diagrams",
        "MS",
        "Visio",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "features",
        "dashboard",
        "Flask",
        "CSS",
        "JavaScript",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "Nodejs",
        "chat",
        "server",
        "efficiency",
        "views",
        "templates",
        "Django",
        "website",
        "interface",
        "APIs",
        "PHP",
        "Nodejs",
        "MySQLPostgreSQL",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "Creation",
        "deployment",
        "AWS",
        "EC2",
        "environments",
        "proof",
        "concept",
        "design",
        "assumptions",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "familiarity",
        "technologies",
        "kubernetes",
        "Mesos",
        "Bootstrap",
        "Angularjs",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "python",
        "library",
        "Beautiful",
        "Soup",
        "Web",
        "scraping",
        "data",
        "graphs",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "CICD",
        "system",
        "Jenkins",
        "Kubernetes",
        "container",
        "environment",
        "Kubernetes",
        "Docker",
        "runtime",
        "environment",
        "CICD",
        "system",
        "structures",
        "Keymap",
        "S3",
        "IndexKeymap",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Coordinate",
        "ceremonies",
        "product",
        "backlog",
        "grooming",
        "sprint",
        "standup",
        "sprint",
        "review",
        "meetings",
        "utilities",
        "Hibernate",
        "XML",
        "parser",
        "SAX",
        "development",
        "teams",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Designing",
        "ETL",
        "process",
        "creation",
        "ETL",
        "design",
        "system",
        "design",
        "documents",
        "Installation",
        "Python",
        "Linux",
        "test",
        "beds",
        "JSON",
        "REST",
        "Web",
        "services",
        "AWS",
        "EC2",
        "environments",
        "Python",
        "SQL",
        "database",
        "Ajax",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "TCPIP",
        "network",
        "interface",
        "routes",
        "hostnames",
        "presentations",
        "Project",
        "Status",
        "Current",
        "Open",
        "Issues",
        "Report",
        "Users",
        "Stakeholders",
        "groups",
        "meetings",
        "development",
        "testing",
        "team",
        "requirements",
        "updates",
        "development",
        "testing",
        "role",
        "planning",
        "testing",
        "system",
        "enhancements",
        "conversions",
        "project",
        "manager",
        "project",
        "experience",
        "web",
        "applications",
        "Python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Good",
        "experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "stack",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "Geany",
        "PyCharm",
        "Eclipse",
        "NetBeans",
        "databases",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "expertise",
        "development",
        "applications",
        "Python",
        "Java",
        "HTML",
        "XML",
        "KML",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "Angular",
        "JS",
        "jQuery",
        "Working",
        "knowledge",
        "Python",
        "ORM",
        "libraries",
        "Django",
        "ORM",
        "SQLAlchemy",
        "Experience",
        "Python",
        "C",
        "PHP",
        "HTML",
        "DHTML",
        "XML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "JSON",
        "ReactJS",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "IDE",
        "NetBeans",
        "PyCharm",
        "Eclipse",
        "Visual",
        "Studio",
        "Pig",
        "Hive",
        "Sqoop",
        "Oozie",
        "Zookeeper",
        "HBase",
        "Cloudera",
        "Spark",
        "Manager",
        "knowledge",
        "data",
        "processing",
        "tools",
        "Pig",
        "Hive",
        "Spark",
        "core",
        "Streaming",
        "Development",
        "testing",
        "deployment",
        "enterprise",
        "applications",
        "Windows",
        "UNIX",
        "platforms",
        "IDEs",
        "Eclipse",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "NetBeans",
        "Experience",
        "Infrastructure",
        "Development",
        "Operations",
        "Google",
        "App",
        "Engine",
        "AWS",
        "Cloud",
        "platforms",
        "legacy",
        "code",
        "Python",
        "SQL",
        "quires",
        "Teradata",
        "PostgreSQL",
        "Data",
        "Base",
        "APIs",
        "Python",
        "Flask",
        "Cassandra",
        "schema",
        "APIs",
        "monitoring",
        "practices",
        "search",
        "bean",
        "docker",
        "gem",
        "creation",
        "docker",
        "containers",
        "Beanstalk",
        "instances",
        "testing",
        "diagnostics",
        "jQuery",
        "AJAX",
        "data",
        "microservices",
        "python",
        "kubernetes",
        "docker",
        "Django",
        "team",
        "storage",
        "service",
        "orchestration",
        "API",
        "activity",
        "Netapp",
        "Hitachi",
        "storage",
        "processes",
        "Block",
        "provisioning",
        "REST",
        "calls",
        "Django",
        "Rest",
        "Framework",
        "Django",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:33:50.525351",
    "resume_data": "SR PYTHON DEVELOPER SR span lPYTHONspan span lDEVELOPERspan SR PYTHON DEVELOPER BANK OF AMERICA USA Work Experience SR PYTHON DEVELOPER BANK OF AMERICA Charlotte NC December 2018 to Present Worked on serverside applications with Django using Python programming and automated the existing scripts for performance calculations using machine library like Numpy and SQL Alchemy for Insurance premium Handled database issues and connections with SQL and NoSQL databases like MongoDB by installing and configuring various packages in python Teradata MySQL dB MySQL connector PyMongo and SQL Alchemy Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Building the REST API using Python Flask and Elasticsearch search engine to aggregate result data in a timely and scalable manner Experience with AgileScrum methodology SDLC and well versed in developing user stories designed collaborative business model Visio Integrated Hibernate ORM with SpringHibernate framework to facilitate DML and DQL queries and represent objectdatabase mapping Created functions in Lambda that aggregates the data from incoming events then stores resulting data in Amazon Dynamo DB and S3 Working on AWS services S3 EC2 and deployment services Lambda and RDS DynamoDB NoSQL Beanstalk SQS and Jenkins CICD Developed full stack web applications using Python Flask ReactJS SQL HTMLCSS JavaScript and with an N tier architecture approach Included in the applications built are selfdesigned relational databases user role management and salted hashing password encryption for site security As part of product backlog grooming sessions created usercentered requirement specifications user stories Managed all project requirements in agile tools like Jira and Confluence Designed applications implementing MVC architecture in Pyramid Zope frame works and designed mobile search application system requirements and coded backend and frontend in Python Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events and Responsible for designing and developing REST web services in Python using flask and flaskrestful framework Created database using MySQL wrote several queries and used FLASK to extract data from database and Developed dynamic frontend and backend applications using Python Flask Frameworks Automated JIRA processes using Python and bash scripts Implementation under Red Hat and CentOS both locally and on Cloud and Developed entire frontend and backend modules using Python on Django Web Framework Created User Interface UI using JavaScript bootstrap Angularjs and HTML5CSS Worked on frontend frameworks like CSS Bootstrap for development of Web applications Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Worked with millions of database records on a daily basis finding common errors and bad data patterns and fixing them Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Build Cassandra queries for performing various CRUD operations like create update read and delete Created Database Objects like Tables Stored Procedures Views Triggers Rules Defaults user defined data types and functions Bootstrap is used as a mechanism to manage and organize the html page layout Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in LINUX environment and familiar with all of its commands Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like Kubernetes and Mesos Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed the required XML Schema documents and implemented the framework for parsing XML documents Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Generated Python Django forms to record data of online users and used PyTest for writing test cases Worked in developing Webbased Applications using Python CSS HTML HTML5 CSS3 JavaScript AJAX J2EE jQuery JSON jQuery UI XML Angular JS and jQuery also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame PySpark urlib2 libraries Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS JavaScript and jQuery Implemented and enhanced CRUD operations for the applications using the MVC architecture of Rails framework and Ruby conducting code reviews Developed PythonKafka consumer code for archiving data for five minutes Build backend application with Python Django Worked on Dockers RabbitMQ Celery and Jenkins Python Full Stack Developer Devon Bank Chicago IL September 2015 to November 2016 Business logic implementation data exchange XML processing and graphics creation has been done using Python and Django Monitor service health check from Spring Boot Admin console using swaggered UI registered microservices Used Ajax and jQuery for transmitting JSON data objects between frontend and controllers and implemented AJAX for dynamic functionality of a webpages for front end applications Views and Templates were developed with Python and to create a userfriendly website interface Djangos view controller and template language is used and DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Designed and developed Use Cases and Use Case scenarios Activity Diagrams Sequence Diagrams High Level and LowLevel Process Flow Diagrams OOAD using UML and Business Process Modeling Used Python Django and Pyramid frameworks to develop applications and responsible for both backend programming and frontend functionality using JavaScript Ajax AngularJS and other technologies Used both agile and waterfall methodology to manage requirements in an automated tool and defined requirements for solutions in multipleentity environments Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Developed Django based dashboard with custom look and feel for end user has been created after a careful study of the Django admin site and dashboard Unit Test Python library was used for testing many programs on python and other codes Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon Web Services AWS Created PLSQL stored procedures functions and packages for moving the data from staging area to data mart Used Hibernate framework for DAO layer to access the Oracle database Used JavaScript for clientside validations and involved in writing POJOs hbm and hibernatecfg files and configured the same for application development Different testing methodologies like unit testing Integration testing web application testing selenium testing was performed Used Django framework for application development Developed user interface using CSS HTML JavaScript and jQuery Ruby on rails Assisted in reduction of cost and optimization of supplier selection for the CRM Applications Worked on AWS Cloud platform and its features which includes EC2 VPC EBS AMI SNS RDS EBS Cloud Watch Cloud Trail Cloud Formation AWS Config Auto scaling CloudFront IAM and DynamoDB Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings and used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Works in implementing Model View Control MVC architecture using serverside applications for developing web applications using Django Python Flask Python and DOJO jQuery while using HTMLCSSJS for serverside rendered applications Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Expertise in working with serverside technologies including databases Restful APL and MVC design patterns Ensured high quality data collection and maintaining the integrity of the data Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Resolved ongoing problems and accurately documented progress of a project Good experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter Pandas data frame network urllib2 MySQL dB for database connectivity Designing web pages and Graphical user interfaces front end layouts on the web by using HTML DHTML CSS Bootstrap framework PHP XML JavaScript node Js and Angular JS Understanding of OpenShift Platform in managing Docker containers and Kubernates clusters Practical experience with working on MultipleEnvironments like Development Testing Production Good understanding of Jingo ORM and SqlAlchamy Good knowledge in CORE JAVA and OOPS concepts Developed application service components and configured beans using Spring IoC creation of Hibernate mapping files and generation of database schema Good programming problem solving skills commitment result oriented with a quest zeal to learn new technologies DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Used web applications development using Django Python Flask Python and JQuery Ajax while using HTMLCSSJS for serverside rendered application Provided support to Application and database team troubleshoot issues encountered while providing support contact AWS Support whenever necessary Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in developing API services in PythonTornado NodeJS while leveraging AMQP and RabbitMQ for distributed architectures to deploy AWS MS Azure Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Deployed Docker contained Spring Boot micro services in to Spring EC2 container service using AWS admin console and used lambda to run applications in AWS console Automate report generation in MongoDB using JavaScript shell scripting Java added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked with team of developers on Python applications for RISK management Python Developer United Health Group Minneapolis MN August 2013 to August 2015 Developed strategic partnerships with the business unit to develop a solid knowledge base of the business line including the business plan products and processes Created UseCase diagrams and State diagrams using MS Visio Created entire application using Python Django MySQL and Linux Implemented and tested many features for dashboard using Flask CSS and JavaScript Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Placed data into JSON files using Python to test Django websites and used Python scripts to update the content in database and manipulate files also wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Used Nodejs to create a fast chat server with efficiency and developed views and templates in Django to create a userfriendly website interface and also Constructed RESTful APIs using PHP Nodejs and MySQLPostgreSQL Designed and managed API system deployment using fast http server and Amazon AWS architecture Creation and deployment of AWS EC2 environments for proof of concept of design assumptions Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos and used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Used python library Beautiful Soup for Web scraping to extract data for building graphs worked in MySQL database on simple queries and writing Stored Procedures for Developed CICD system with Jenkins on Kubernetes container environment utilizing Kubernetes and Docker for the runtime environment for the CICD system to build and test and deploy Introduced to encapsulate the existing structures used by Keymap and help S3 IndexKeymap scale infinitely Developed entire frontend and backend modules using Python on Django Web Framework Coordinate facilitated and participate in agile ceremonies such as product backlog grooming sprint planning daily standup sprint review and retrospective meetings Designed developed and bundled various small financial utilities using JAVA Hibernate XML parser SAX which was distributed to different development teams Used Python and Django creating graphics XML processing data exchange and business logic implementation Utilized PyUnit the Python unit test framework for all Python applications Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Designing ETL process and creation of ETL design and system design documents Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Architecting and deploying AWS EC2 and S3based environments Worked in Python on a SQL database Used Ajax for transmitting JSON data objects between frontend and controllers and Worked on configuring TCPIP network interface assigning static routes and hostnames Delivered presentations on Project Status and Current Open Issues Report to Users Stakeholders and other involved groups Conducted weekly meetings with the development and testing team to relay any changed requirements and updates on the development and testing Played a key role in the planning testing and implementing system enhancements and conversions Worked closely with project manager in handling the whole project Handy experience in developing web applications by using Python Django PHP C XML CSS HTML DHTML JavaScript and JQuery Good experience in Shell Scripting SQL Server UNIX Linux and Open stack Excellent Experience on various Python integrated IDEs such as Sublime Text Geany PyCharm Eclipse and NetBeans Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Strong expertise in development of webbased applications using Python Java HTML XML KML CSS DHTML JavaScript JSON Angular JS and jQuery Working knowledge of Python ORM libraries including Django ORM SQLAlchemy Experience in working with Python C PHP HTML DHTML XML CSS JavaScript JQuery Bootstrap JSON ReactJS Experienced in working with various Python Integrated Development Environments IDE like NetBeans PyCharm Eclipse Visual Studio Experienced in using Pig Hive Sqoop Oozie Zookeeper HBase and Cloudera Spark Manager knowledge of different Big data analytical and processing tools like Pig Hive Spark core and Streaming Experienced in Development testing and deployment of enterprise applications on Windows UNIX platforms using IDEs such as Eclipse Rational Application Developer RAD NetBeans Good Experience in Infrastructure Development and Operations involving Google App Engine and AWS Cloud platforms Tested legacy code written in Python updated SQL quires in Teradata and PostgreSQL Data Base Designed and developed a horizontally scalable APIs using Python Flask designed Cassandra schema for the APIs and implemented monitoring and established best practices around using elastic search Created bean docker gem for easy creation of additional docker containers on Elastic Beanstalk instances for testing and diagnostics Used jQuery and AJAX calls for transmitting JSON data Designed and developed microservices using python kubernetes docker Django nodejs Designed and lead a team on storage service orchestration API activity to automate Netapp and Hitachi storage processes like Block provisioning using the REST calls using Django Rest Framework Django objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker",
    "unique_id": "81eb6ecc-c0d5-4b0c-a357-9c450529f023"
}