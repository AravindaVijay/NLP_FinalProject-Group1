{
    "clean_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER SOUTHWEST AIRLINES Dallas TX Around 5 year of experience in software development in Python libraries used Beautiful Soup NumPy Skit learn SciPy matplotlib Pythontwitter Pandas data frame MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Strong background in programming committed to maintaining technical skills and to be uptodate with industry knowledge Have good knowledge on NoSQL databases like Cassandra and MongoDB and SQL databases like MySQL PostgreSQL and SQLite3 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS Bootstrap AngularJS JavaScript Python Django Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience with full software development lifecycle SDLC architecting scalable platforms objectoriented programming OOPs database design and agile methodologies Good experience of software development in Python libraries used Turtle Tkinter NumPy Skit learn matplotlib Pandas urllib2 MySQL dB for database connectivity and IDEs PyCharm Eclipse VS Code Good experience in developing web applications implementing MVT architecture using Django tasty pie Flask web application frameworks with good understanding of Django ORM and SQLAlchemy Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy PyQt Scapy SQLAlchemy Experience in working with Amazon Web Services AWS like EC2 S3 EBS VPC ELB Route53 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front cloud formation and Glacier Experienced in implementing Microservices Service Oriented Architecture SOA with XML based Web Services SOAPWSDL using Top Down and Bottom Up approach Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Experience in cross browser and crossdevice compatibility check and thoroughly performed unit testing using Jasmine Mocha JUnit and Karma Expertise in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Extensively worked with automation tools like Heroku Jenkins for continuous integration and continuous delivery CICD and to implement the EndtoEnd Automation Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB Expertise with agile development methods like agilescrum TDD BDD peer code reviews continuous integration Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Implemented REST APIs in Python using microframework like Flask with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Experienced in using Integrated Development Environment IDEs in PyDev PyScripter PyCharm Spider Python IDLE Brackets Eclipse JBuilder Sublime and NetBeans JDeveloper Eric Komodo Edit Komodo IDE Cloud9 IDE DrPython and NetBeans for debugging and worked with SublimeText2 Edit Plus Notepad Vim Editors for coding Work Experience PYTHON DEVELOPER SOUTHWEST AIRLINES Dallas TX June 2018 to Present Developed views and templates with Python and Django view controller and templating language to create a userfriendly to interface to perform at a highlevel Responsible for largescale Puppet implementation and maintenance Puppet manifests creation testing and implementation Created AWS Security Groups for deploying and configuring AWS EC2 instances also added support for Amazon AWS S3 cloud formation and RDS to host files and the database into Amazon Cloud Used Mongoose in order to access the MongoDB from Node JS and used Angular CLI and NPM for scaffolding the Angular Application Creating snapshots and Amazon machine images of the instances for backup and creating clone instances and performed configuration deployment and support of cloud services including Amazon Web Services Developed internal auxiliary web apps using Python Django framework with Angularjs and Bootstrap CSS HTML framework Set up configured and maintained multiple webapplication servers like IBM Web Sphere Apache Tomcat and WebLogic Experienced in Managing build files using ANT Created custom new columns depending up on the use case while ingesting data into Hadoop lake using PyTable PySpark PyMongo Pickle and Pyside Developed and maintained an infrastructure for a new project using Ansible Redis Postgres and Celery Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database with ETL and Teradata experience Wrote Python code to automate Jupyter Notebook to run selfcontained scripts on SAS server Worked on Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Proven ability in developing selenium automation framework like Page Objects Hybrid Frameworks Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Designing Celery and multithreading for scheduling the tasks and multiple activities Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Confluence Automated builds using Maven and scheduled automated nightly builds using Heroku and Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on microservicebased architecture using spring boot for developing the microservices Netflix components eureka ribbon spring cloud for supporting the cloud native environment Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks All microservices are written in Python utilizing distributed message passing via Kafka message broker with JSON as data exchange formats Created sites to organize client contracts and to summarize monthly financial data using Emberjs D3js and MySQL Utilized Python specific tools including Django Django Rest Framework Django SQLAlchemy Teradata Pandas Jupyter NumPy Writing Python scripts with Cloud Formation templates to automate installation of Auto scaling EC2 VPC DynamoDB cloud formation Beautiful soup and other services Performed troubleshooting fixed and deployed many Python bug fixes of the main applications that were sources of data for both devices and Lab Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Proficiency in API security frameworks token management and user access control including OAuth JWT etc Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Used spring configuration server for centralized configuration and Splunk for centralized logging Used Concourse and Jenkins for Microservices deployment Used Django frame and MYSQL for the backend work post sales customer feedback and complaint management system Working on SQL stored procedures that are used to access that data and deploy to SQL server database Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design and development Utilized Cloud Watch Events to collect data from other AWS resources and transfer them to SQS and SNS for alerting solar Accessed public datasets and use TensorFlow and SQLAlchemy to load process clean and transform data Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used the pythons modules NumPy Skit Learn matplotlib etc for generating complex graphical data creation of histograms etc Develop consumerbased features and applications using Python Django tasty pie pyramid Flask Web2py HTML jinja and other web technologies Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST based services and MongoDB Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed a fully automated continuous integration system using Git Confluence Gerrit Heroku Jenkins MySQL and custom tools developed in Python and Bash Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Tested applications using the principles of Unit testing Testdriven Development TDD Load Testing and Integration testing Implemented SOAP using web services to interact with various devices to pull realtime data on the network Wrote Python OO Design code for monitoring logging and debugging code optimization and Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Used JIRA for bug tracking and issue tracking and added several options to the application to choose algorithm for data and address generation Designed and maintained data bases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS PYTHON DEVELOPER INFOSYS IN October 2015 to December 2017 Developed automated testing framework for commandline based tests on Linux using Object Oriented Perl and for seleniumbased tests using Python Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages and achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Confluence Automated builds using Maven and scheduled automated nightly builds using Heroku and Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on microservicebased architecture using spring boot for developing the microservices Netflix components eureka ribbon spring cloud for supporting the cloud native environment Designing Celery and multithreading for scheduling the tasks and multiple activities Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Build an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 and cloud formation Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Heroku Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL DynamoDB and MySQL database Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Wrote scripts to Import and Export data to CSV EXCEL formats from different environments using Python and made a Celery action using REST API call Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Created Restful backend service deployed on Libode cloud VPSs using Flask web framework and SQLAlchemy ORM for data persistence Developed the OpenShift TestDrive for Admins Installation of OCP 35 Cluster management and Project OAUTH and SSO are used for authentication and Login services Developed the notification service by posting the request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Involved in migrating legacy applications to Cloud Native Developing microservices using Spring Boot Cloud Camel Eureka Discovery Config service Spring Data in to ePAAS Enterprise Pivotal Installed Wit be Python Jira confluence test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMI Track record of increasing responsibility in the business software design Microservices systems analysisdevelopment and full lifecycle project management Developed multithreaded web services using Cherry Pie bottlePy framework and leveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap NumPy jinja celery SciPy Matplotlib pythontwitter Pandas Data frame urllib2 libraries Prepared feature file for Cucumber framework and created step definitions and created runner file to run the Cucumber features Applying TensorFlow in various handson exercises using the command line Worked on migration of Splunk to AWS cloud instances Involved in standardizing Splunk forwarder deployment configuration and maintenance across UNIX and Windows platforms Developed rating and sharing single page application by using AngularJS Bootstrap Emberjs and React JS Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Web services Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed a fully automated continuous integration system using Git Confluence Gerrit Heroku Jenkins MySQL and custom tools developed in Python and Bash Added support for Apache web server and RDS to host staticmedia files and the database into Amazon Cloud Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Implemented Bash Perl Python scripting to Automate many daytoday tasks Designed and developed carrier selection and product selection web pages using HTML Struts Servlets Created RESTful web services for Catalog and Pricing with Jersey MySQL and MongoDB while working on Single nodeMulti Cluster setup using technology NoSQL and MongoDB while using MongoDB as a persistent store and Apache Kafka as a messaging layer for custom Essentially working to develop restful Apis and invoke Soap Apis in Expressjs and Hapijs validating Apis with swagger Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Developed views and templates with Django view controller and template to create a userfriendly website interface Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Server using CICD procedures like Jenkins on Scrumbasis Build custom transformations using AWS Glue Lambda and Kinesis helped reduce costs in ETL tool onpremise infrastructure PYTHON DEVELOPER SEPTEBER August 2013 to August 2013 2015 Used modules Beautiful Soup SciPy pythontwitter PyMongo Celery NumPy Jupyter matplotlib Urllib2 etc for generating complex graphical data creation of histograms etc Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Worked on monitoring developing and transforming data using SQL Server Integration Services SSIS and SQL Server Analysis Services SSAS Used Celery framework to develop a new feature to support parallel processes and complete multiple requests simultaneously Worked on the project for Master Data Management MDM team for designing and developing the ETL process in AWS glue and launching and extracting the data from MDM tool called Reltio Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop MapReduce Worked on PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and PyLint Used several Python libraries like Python NumPy Jupyter and matplotlib and was involved in environment code installation as well as the SVN implementation Used Terraform for managing the infrastructure through the terminal sessions and executing scripts in creating alarms and notifications for EC2 instances using AWS Cloud Watch Wrote Ansible Playbooks for various applications and deploying them in AWS using Terraform Deployed debugged and maintained complex distributed software stacks containing Apache Spark Hadoop HDFS and Python Notebook servers on cloudbased AWS system by optimizing the stacks for best computational performance and stability Design and development of user interfaces and client displays using JavaScript JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Generated automated documentation for the Python scripts using sphinx Designed and developed continuous integration using Python Flask GitHub Created methods get post put delete to make requests to the Node API server and tested Restful API using postman Developed Spark Streaming script to consume topics from distributed messaging source Kafka for realtime processing Involved in designing and deploying multitude applications utilizing almost all the AWS services Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Involved in packaging deployment and upgrade of different modules of SAS on JBoss App Server VB code Analysis and Sybase stored procedure converted into SQL Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Private VPN using Ubuntu Python Django Tasty Pie CherryPy Postgres Redis Bootstrap jQuery Mongo Fabric Git Tenjin Selenium Sphinx Nose Confluence Involved Developed dynamic web pages using Python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created functions in AWS Lambda to run python scripts and AWS Lambda using java to perform event driven processing Performed data cleaning and feature selection using MLlib package in PySpark and working with deep learning frameworks such as Caffe Neon etc Developed Test Cases and Test Scripts in selenium web driver with Java using Cucumber framework with build management tool Maven Installed and configured WebSphere Studio Application Developer WSAD to connect Central CVS and SVN repositories Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML jinja and other web technologies Worked on various Python Integrated Development Environments IDE like PyCharm Ipython Notebook Spyder PyDev NetBeans and Sublime Text Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Using SQLAlchemy with Flask and PostgreSQL as database for developing the web application Resolved performance related issues using efficient coding Develop dynamic webpages using HTML5 CSS3 JavaScript and AJAX Good knowledge on Python pickles Worked on Bug fixes Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Was responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term scalable architectural design decisions Built and maintained code libraries to support analytics using NumPy and SciPy Used Pygal and plotly for visualization of the data retrieved using Scrapy Worked on Object Oriented Design Programming concepts and unit testing using Pythons unit test library Jasmine and Karma Used AngularJS NodeJS ExpressJS MongoDB Couchbase Cassandra and various NodeJS testing frameworks for fullstack development on the Amazon Web Services AWS platform instances using Puppet Chef Configuration management Used AngularJS framework to bind HTML views to JavaScript objects models converted wireframes to web pages with behavioral design development BDD Involved in databasedriven web application development using a variety of frameworks such as Django on Python Used Pandas Data frame for analyzing data data structures manage large data files and converting Large CSV files to Parquet files Education Masters Skills Javascript Git MySQL",
    "entities": [
        "Amazon Web Services Developed",
        "MLlib",
        "Glacier Experienced",
        "TDD BDD",
        "Amazon EBS",
        "Amazon Cloud Python Object Oriented Design",
        "SNS",
        "Wrote Python OO Design",
        "PyTable PySpark PyMongo Pickle",
        "Java PHP Nodejs Python Ruby",
        "Nodejs",
        "Emberjs",
        "Sublime Text Created",
        "SQLAlchemy",
        "CloudWatch Created Terraform",
        "UNIX",
        "GitHub Nexus",
        "WebLogic Experienced",
        "Python Django Frameworks",
        "Working",
        "the Amazon Web Services AWS",
        "GIT Repository Setup",
        "OpenStack",
        "IBM",
        "ANT Created",
        "Amazon Web Services AWS",
        "Heroku",
        "Ubuntu Python Django Tasty Pie CherryPy Postgres Redis Bootstrap jQuery Mongo Fabric Git Tenjin Selenium",
        "Model View Control MVC",
        "Hadoop",
        "PyJamas",
        "XML",
        "SOAP",
        "Import and Export",
        "SSO",
        "Bash Added",
        "Sublime Text PyCharm Eclipse",
        "Bootstrap CSS",
        "SQL Developed",
        "Developed Restful Microservices",
        "Implemented Terraform",
        "Python Flask GitHub Created",
        "TX",
        "Amazon",
        "Turtle Tkinter NumPy Skit",
        "Maven Repository and Deployment",
        "AWS Lambda and",
        "ELK",
        "SSIS",
        "Python",
        "Project OAUTH",
        "Amazon AWS S3",
        "Developed Restful Micro Services",
        "Integrated Development Environment",
        "Dallas",
        "Bootstrap Emberjs",
        "Jenkins on Scrumbasis Build",
        "Puppet",
        "Testdriven Development TDD Load Testing and Integration",
        "Reltio Proficient",
        "Created AWS Security Groups",
        "Pytorch TensorFlow",
        "Develop",
        "Kubernetes Worked",
        "the Workflows Worklets Sessions Mappings Source Definitions Target",
        "Puppet Chef Configuration",
        "API RESTful Web Service",
        "Linux",
        "Created Data",
        "Kinesis",
        "Flask",
        "PySpark PyQT",
        "Automate",
        "Jenkins Built Jenkins",
        "VMWare API",
        "Docker",
        "Amazon SES",
        "Parquet",
        "RDS",
        "Python Notebook",
        "Celery",
        "CLI",
        "Bash Python Object Oriented Design",
        "MVC",
        "PythonDjango",
        "Django Curl XML JSON",
        "GIT",
        "Node JS",
        "Python on Django",
        "log analytics full text search",
        "CSV",
        "SQL Server Integration Services",
        "REDIS",
        "API",
        "Web Services",
        "Terraform",
        "QA",
        "Spring Data",
        "Business Users",
        "Created",
        "AI",
        "AWS",
        "SQL Server Analysis Services",
        "Libode",
        "Scrapy Worked on Object Oriented Design Programming",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "PySpark",
        "PyCharm",
        "SQL PostgreSQL Handson",
        "ELB",
        "React JS",
        "the EndtoEnd Automation Worked",
        "IDE DrPython",
        "Netflix",
        "HTML Struts Servlets Created",
        "SAS",
        "AWS SNS Involved",
        "RESTFUL",
        "SQL",
        "NLP",
        "Kubernetes",
        "NPM",
        "Packer Terraform Kubernetes AWS GCP Responsible",
        "Administrators",
        "Apache Spark Hadoop HDFS Hive MongoDB Expertise",
        "Including EC2 Route53 S3",
        "PyCharm Ipython Notebook Spyder",
        "Python OOP Worked",
        "CICD",
        "Created Restful",
        "WebSphere Studio Application Developer",
        "Pandas",
        "Python Integrated Development Environments",
        "MDM",
        "ETL",
        "SQS",
        "SCM",
        "Pandas Data",
        "Maven",
        "Performed",
        "Maven Installed",
        "Cluster",
        "JavaScript",
        "SQLAlchemy Excellent",
        "Pythons",
        "Jenkins Heroku Bamboo",
        "Data Layer and Search",
        "AWS Glue Lambda",
        "SVN",
        "Node API",
        "Present Developed",
        "Terraform Deployed",
        "AMAZON EMR",
        "PythonFlaskDjango",
        "AWS Lambda",
        "REST",
        "AJAX Good",
        "BDD Involved",
        "NetBeans",
        "Apache Spark Hadoop HDFS",
        "PHP",
        "NoSQL",
        "HTMLCSSjQuery",
        "Setup",
        "Software Development Life Cycle",
        "Master Data Management",
        "EBS",
        "Oracle SQLite PostgreSQL",
        "Teradata",
        "HTML CSS Bootstrap",
        "Django Jinja Oracle DB PostgreSQL",
        "Python Created",
        "Node",
        "Bash Developed",
        "Sublime Text PyCharm NetBeans Spyder",
        "Bash Created"
    ],
    "experience": "Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience with full software development lifecycle SDLC architecting scalable platforms objectoriented programming OOPs database design and agile methodologies Good experience of software development in Python libraries used Turtle Tkinter NumPy Skit learn matplotlib Pandas urllib2 MySQL dB for database connectivity and IDEs PyCharm Eclipse VS Code Good experience in developing web applications implementing MVT architecture using Django tasty pie Flask web application frameworks with good understanding of Django ORM and SQLAlchemy Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy PyQt Scapy SQLAlchemy Experience in working with Amazon Web Services AWS like EC2 S3 EBS VPC ELB Route53 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front cloud formation and Glacier Experienced in implementing Microservices Service Oriented Architecture SOA with XML based Web Services SOAPWSDL using Top Down and Bottom Up approach Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Experience in cross browser and crossdevice compatibility check and thoroughly performed unit testing using Jasmine Mocha JUnit and Karma Expertise in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Extensively worked with automation tools like Heroku Jenkins for continuous integration and continuous delivery CICD and to implement the EndtoEnd Automation Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB Expertise with agile development methods like agilescrum TDD BDD peer code reviews continuous integration Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Implemented REST APIs in Python using microframework like Flask with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Experienced in using Integrated Development Environment IDEs in PyDev PyScripter PyCharm Spider Python IDLE Brackets Eclipse JBuilder Sublime and NetBeans JDeveloper Eric Komodo Edit Komodo IDE Cloud9 IDE DrPython and NetBeans for debugging and worked with SublimeText2 Edit Plus Notepad Vim Editors for coding Work Experience PYTHON DEVELOPER SOUTHWEST AIRLINES Dallas TX June 2018 to Present Developed views and templates with Python and Django view controller and templating language to create a userfriendly to interface to perform at a highlevel Responsible for largescale Puppet implementation and maintenance Puppet manifests creation testing and implementation Created AWS Security Groups for deploying and configuring AWS EC2 instances also added support for Amazon AWS S3 cloud formation and RDS to host files and the database into Amazon Cloud Used Mongoose in order to access the MongoDB from Node JS and used Angular CLI and NPM for scaffolding the Angular Application Creating snapshots and Amazon machine images of the instances for backup and creating clone instances and performed configuration deployment and support of cloud services including Amazon Web Services Developed internal auxiliary web apps using Python Django framework with Angularjs and Bootstrap CSS HTML framework Set up configured and maintained multiple webapplication servers like IBM Web Sphere Apache Tomcat and WebLogic Experienced in Managing build files using ANT Created custom new columns depending up on the use case while ingesting data into Hadoop lake using PyTable PySpark PyMongo Pickle and Pyside Developed and maintained an infrastructure for a new project using Ansible Redis Postgres and Celery Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database with ETL and Teradata experience Wrote Python code to automate Jupyter Notebook to run selfcontained scripts on SAS server Worked on Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Proven ability in developing selenium automation framework like Page Objects Hybrid Frameworks Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Designing Celery and multithreading for scheduling the tasks and multiple activities Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Confluence Automated builds using Maven and scheduled automated nightly builds using Heroku and Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on microservicebased architecture using spring boot for developing the microservices Netflix components eureka ribbon spring cloud for supporting the cloud native environment Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks All microservices are written in Python utilizing distributed message passing via Kafka message broker with JSON as data exchange formats Created sites to organize client contracts and to summarize monthly financial data using Emberjs D3js and MySQL Utilized Python specific tools including Django Django Rest Framework Django SQLAlchemy Teradata Pandas Jupyter NumPy Writing Python scripts with Cloud Formation templates to automate installation of Auto scaling EC2 VPC DynamoDB cloud formation Beautiful soup and other services Performed troubleshooting fixed and deployed many Python bug fixes of the main applications that were sources of data for both devices and Lab Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Proficiency in API security frameworks token management and user access control including OAuth JWT etc Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Used spring configuration server for centralized configuration and Splunk for centralized logging Used Concourse and Jenkins for Microservices deployment Used Django frame and MYSQL for the backend work post sales customer feedback and complaint management system Working on SQL stored procedures that are used to access that data and deploy to SQL server database Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design and development Utilized Cloud Watch Events to collect data from other AWS resources and transfer them to SQS and SNS for alerting solar Accessed public datasets and use TensorFlow and SQLAlchemy to load process clean and transform data Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used the pythons modules NumPy Skit Learn matplotlib etc for generating complex graphical data creation of histograms etc Develop consumerbased features and applications using Python Django tasty pie pyramid Flask Web2py HTML jinja and other web technologies Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST based services and MongoDB Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed a fully automated continuous integration system using Git Confluence Gerrit Heroku Jenkins MySQL and custom tools developed in Python and Bash Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Tested applications using the principles of Unit testing Testdriven Development TDD Load Testing and Integration testing Implemented SOAP using web services to interact with various devices to pull realtime data on the network Wrote Python OO Design code for monitoring logging and debugging code optimization and Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Used JIRA for bug tracking and issue tracking and added several options to the application to choose algorithm for data and address generation Designed and maintained data bases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS PYTHON DEVELOPER INFOSYS IN October 2015 to December 2017 Developed automated testing framework for commandline based tests on Linux using Object Oriented Perl and for seleniumbased tests using Python Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages and achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Confluence Automated builds using Maven and scheduled automated nightly builds using Heroku and Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on microservicebased architecture using spring boot for developing the microservices Netflix components eureka ribbon spring cloud for supporting the cloud native environment Designing Celery and multithreading for scheduling the tasks and multiple activities Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Build an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 and cloud formation Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Heroku Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL DynamoDB and MySQL database Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Wrote scripts to Import and Export data to CSV EXCEL formats from different environments using Python and made a Celery action using REST API call Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Created Restful backend service deployed on Libode cloud VPSs using Flask web framework and SQLAlchemy ORM for data persistence Developed the OpenShift TestDrive for Admins Installation of OCP 35 Cluster management and Project OAUTH and SSO are used for authentication and Login services Developed the notification service by posting the request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Involved in migrating legacy applications to Cloud Native Developing microservices using Spring Boot Cloud Camel Eureka Discovery Config service Spring Data in to ePAAS Enterprise Pivotal Installed Wit be Python Jira confluence test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMI Track record of increasing responsibility in the business software design Microservices systems analysisdevelopment and full lifecycle project management Developed multithreaded web services using Cherry Pie bottlePy framework and leveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap NumPy jinja celery SciPy Matplotlib pythontwitter Pandas Data frame urllib2 libraries Prepared feature file for Cucumber framework and created step definitions and created runner file to run the Cucumber features Applying TensorFlow in various handson exercises using the command line Worked on migration of Splunk to AWS cloud instances Involved in standardizing Splunk forwarder deployment configuration and maintenance across UNIX and Windows platforms Developed rating and sharing single page application by using AngularJS Bootstrap Emberjs and React JS Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Web services Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed a fully automated continuous integration system using Git Confluence Gerrit Heroku Jenkins MySQL and custom tools developed in Python and Bash Added support for Apache web server and RDS to host staticmedia files and the database into Amazon Cloud Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Implemented Bash Perl Python scripting to Automate many daytoday tasks Designed and developed carrier selection and product selection web pages using HTML Struts Servlets Created RESTful web services for Catalog and Pricing with Jersey MySQL and MongoDB while working on Single nodeMulti Cluster setup using technology NoSQL and MongoDB while using MongoDB as a persistent store and Apache Kafka as a messaging layer for custom Essentially working to develop restful Apis and invoke Soap Apis in Expressjs and Hapijs validating Apis with swagger Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Developed views and templates with Django view controller and template to create a userfriendly website interface Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Server using CICD procedures like Jenkins on Scrumbasis Build custom transformations using AWS Glue Lambda and Kinesis helped reduce costs in ETL tool onpremise infrastructure PYTHON DEVELOPER SEPTEBER August 2013 to August 2013 2015 Used modules Beautiful Soup SciPy pythontwitter PyMongo Celery NumPy Jupyter matplotlib Urllib2 etc for generating complex graphical data creation of histograms etc Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Worked on monitoring developing and transforming data using SQL Server Integration Services SSIS and SQL Server Analysis Services SSAS Used Celery framework to develop a new feature to support parallel processes and complete multiple requests simultaneously Worked on the project for Master Data Management MDM team for designing and developing the ETL process in AWS glue and launching and extracting the data from MDM tool called Reltio Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop MapReduce Worked on PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and PyLint Used several Python libraries like Python NumPy Jupyter and matplotlib and was involved in environment code installation as well as the SVN implementation Used Terraform for managing the infrastructure through the terminal sessions and executing scripts in creating alarms and notifications for EC2 instances using AWS Cloud Watch Wrote Ansible Playbooks for various applications and deploying them in AWS using Terraform Deployed debugged and maintained complex distributed software stacks containing Apache Spark Hadoop HDFS and Python Notebook servers on cloudbased AWS system by optimizing the stacks for best computational performance and stability Design and development of user interfaces and client displays using JavaScript JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Generated automated documentation for the Python scripts using sphinx Designed and developed continuous integration using Python Flask GitHub Created methods get post put delete to make requests to the Node API server and tested Restful API using postman Developed Spark Streaming script to consume topics from distributed messaging source Kafka for realtime processing Involved in designing and deploying multitude applications utilizing almost all the AWS services Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Involved in packaging deployment and upgrade of different modules of SAS on JBoss App Server VB code Analysis and Sybase stored procedure converted into SQL Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Private VPN using Ubuntu Python Django Tasty Pie CherryPy Postgres Redis Bootstrap jQuery Mongo Fabric Git Tenjin Selenium Sphinx Nose Confluence Involved Developed dynamic web pages using Python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created functions in AWS Lambda to run python scripts and AWS Lambda using java to perform event driven processing Performed data cleaning and feature selection using MLlib package in PySpark and working with deep learning frameworks such as Caffe Neon etc Developed Test Cases and Test Scripts in selenium web driver with Java using Cucumber framework with build management tool Maven Installed and configured WebSphere Studio Application Developer WSAD to connect Central CVS and SVN repositories Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML jinja and other web technologies Worked on various Python Integrated Development Environments IDE like PyCharm Ipython Notebook Spyder PyDev NetBeans and Sublime Text Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Using SQLAlchemy with Flask and PostgreSQL as database for developing the web application Resolved performance related issues using efficient coding Develop dynamic webpages using HTML5 CSS3 JavaScript and AJAX Good knowledge on Python pickles Worked on Bug fixes Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Was responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term scalable architectural design decisions Built and maintained code libraries to support analytics using NumPy and SciPy Used Pygal and plotly for visualization of the data retrieved using Scrapy Worked on Object Oriented Design Programming concepts and unit testing using Pythons unit test library Jasmine and Karma Used AngularJS NodeJS ExpressJS MongoDB Couchbase Cassandra and various NodeJS testing frameworks for fullstack development on the Amazon Web Services AWS platform instances using Puppet Chef Configuration management Used AngularJS framework to bind HTML views to JavaScript objects models converted wireframes to web pages with behavioral design development BDD Involved in databasedriven web application development using a variety of frameworks such as Django on Python Used Pandas Data frame for analyzing data data structures manage large data files and converting Large CSV files to Parquet files Education Masters Skills Javascript Git MySQL",
    "extracted_keywords": [
        "PYTHON",
        "DEVELOPER",
        "lPYTHONspan",
        "span",
        "lDEVELOPERspan",
        "PYTHON",
        "DEVELOPER",
        "SOUTHWEST",
        "AIRLINES",
        "Dallas",
        "TX",
        "year",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "Skit",
        "SciPy",
        "matplotlib",
        "Pythontwitter",
        "Pandas",
        "data",
        "frame",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "PyCharm",
        "Strong",
        "background",
        "programming",
        "skills",
        "industry",
        "knowledge",
        "knowledge",
        "NoSQL",
        "databases",
        "Cassandra",
        "MongoDB",
        "SQL",
        "MySQL",
        "PostgreSQL",
        "experience",
        "system",
        "analysis",
        "design",
        "development",
        "implementation",
        "web",
        "application",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Python",
        "Django",
        "Experience",
        "Setup",
        "AWS",
        "EC2",
        "instance",
        "Amazon",
        "SES",
        "email",
        "delivery",
        "handson",
        "experience",
        "SCM",
        "tools",
        "GIT",
        "containers",
        "Docker",
        "Backend",
        "applications",
        "PythonFlaskDjango",
        "SQL",
        "PostgreSQL",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "Experience",
        "software",
        "development",
        "lifecycle",
        "SDLC",
        "platforms",
        "programming",
        "OOPs",
        "database",
        "design",
        "methodologies",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Turtle",
        "Tkinter",
        "NumPy",
        "Skit",
        "matplotlib",
        "Pandas",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "PyCharm",
        "Eclipse",
        "VS",
        "Code",
        "experience",
        "web",
        "applications",
        "MVT",
        "architecture",
        "Django",
        "pie",
        "Flask",
        "web",
        "application",
        "frameworks",
        "understanding",
        "Django",
        "ORM",
        "SQLAlchemy",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "Eclipse",
        "NetBeans",
        "Experience",
        "python",
        "libraries",
        "soup",
        "NumPy",
        "matplotlib",
        "SciPy",
        "PyQt",
        "Scapy",
        "SQLAlchemy",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "S3",
        "EBS",
        "VPC",
        "ELB",
        "Route53",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "identity",
        "access",
        "management",
        "AWS",
        "Cloud",
        "Amazon",
        "EBS",
        "Amazon",
        "Cloud",
        "cloud",
        "formation",
        "Glacier",
        "Microservices",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "XML",
        "Web",
        "Services",
        "SOAPWSDL",
        "Top",
        "Down",
        "Bottom",
        "approach",
        "Hands",
        "tools",
        "GitGitHub",
        "Ansible",
        "Artifactory",
        "Jenkins",
        "OpenStack",
        "Balance",
        "NodeProxy",
        "VMWare",
        "Open",
        "Source",
        "software",
        "testing",
        "delivery",
        "pipelines",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "Expertise",
        "test",
        "automation",
        "delivery",
        "web",
        "applications",
        "client",
        "server",
        "applications",
        "web",
        "servicesREST",
        "APIs",
        "Python",
        "Experience",
        "cross",
        "browser",
        "compatibility",
        "check",
        "unit",
        "testing",
        "Jasmine",
        "Mocha",
        "JUnit",
        "Karma",
        "Expertise",
        "design",
        "patterns",
        "MVC",
        "Django",
        "Flask",
        "application",
        "Apache",
        "tomcat",
        "server",
        "applications",
        "Docker",
        "Extensively",
        "automation",
        "tools",
        "Heroku",
        "Jenkins",
        "integration",
        "delivery",
        "CICD",
        "EndtoEnd",
        "Automation",
        "JIRA",
        "bug",
        "tracking",
        "communicating",
        "results",
        "Strong",
        "Experience",
        "data",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "HDFS",
        "Hive",
        "MongoDB",
        "Expertise",
        "development",
        "methods",
        "agilescrum",
        "TDD",
        "BDD",
        "peer",
        "code",
        "integration",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "Flask",
        "SQLAlchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "Integrated",
        "Development",
        "Environment",
        "IDEs",
        "PyDev",
        "PyScripter",
        "PyCharm",
        "Spider",
        "Python",
        "IDLE",
        "Brackets",
        "Eclipse",
        "JBuilder",
        "Sublime",
        "NetBeans",
        "JDeveloper",
        "Eric",
        "Komodo",
        "Edit",
        "Komodo",
        "IDE",
        "Cloud9",
        "IDE",
        "DrPython",
        "NetBeans",
        "debugging",
        "SublimeText2",
        "Edit",
        "Notepad",
        "Vim",
        "Editors",
        "Work",
        "Experience",
        "PYTHON",
        "DEVELOPER",
        "SOUTHWEST",
        "AIRLINES",
        "Dallas",
        "TX",
        "June",
        "Present",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "userfriendly",
        "highlevel",
        "largescale",
        "Puppet",
        "implementation",
        "maintenance",
        "Puppet",
        "manifests",
        "creation",
        "testing",
        "implementation",
        "AWS",
        "Security",
        "Groups",
        "AWS",
        "EC2",
        "instances",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "cloud",
        "formation",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Mongoose",
        "order",
        "MongoDB",
        "Node",
        "JS",
        "Angular",
        "CLI",
        "NPM",
        "Angular",
        "Application",
        "snapshots",
        "Amazon",
        "machine",
        "images",
        "instances",
        "backup",
        "instances",
        "configuration",
        "deployment",
        "support",
        "cloud",
        "services",
        "Amazon",
        "Web",
        "Services",
        "web",
        "apps",
        "Python",
        "Django",
        "framework",
        "Angularjs",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "Set",
        "webapplication",
        "servers",
        "IBM",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "WebLogic",
        "build",
        "files",
        "ANT",
        "custom",
        "columns",
        "use",
        "case",
        "data",
        "Hadoop",
        "lake",
        "PyTable",
        "PySpark",
        "PyMongo",
        "Pickle",
        "Pyside",
        "Developed",
        "infrastructure",
        "project",
        "Ansible",
        "Redis",
        "Postgres",
        "Celery",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "ETL",
        "Teradata",
        "experience",
        "Wrote",
        "Python",
        "code",
        "Jupyter",
        "Notebook",
        "scripts",
        "SAS",
        "server",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "Puppet",
        "CICD",
        "Process",
        "ability",
        "selenium",
        "automation",
        "framework",
        "Page",
        "Hybrid",
        "Frameworks",
        "Serverside",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Designing",
        "Celery",
        "tasks",
        "activities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "pie",
        "Web",
        "Framework",
        "Git",
        "Confluence",
        "Automated",
        "builds",
        "Maven",
        "builds",
        "Heroku",
        "Jenkins",
        "Jenkins",
        "pipeline",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "architecture",
        "spring",
        "boot",
        "microservices",
        "Netflix",
        "components",
        "ribbon",
        "spring",
        "cloud",
        "environment",
        "Python",
        "Boto3",
        "automation",
        "Ansible",
        "Terraform",
        "tasks",
        "EBS",
        "volumes",
        "AMIs",
        "scheduling",
        "Lambda",
        "functions",
        "AWS",
        "microservices",
        "Python",
        "message",
        "Kafka",
        "message",
        "broker",
        "JSON",
        "data",
        "exchange",
        "formats",
        "sites",
        "client",
        "contracts",
        "data",
        "Emberjs",
        "D3js",
        "MySQL",
        "Python",
        "tools",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "Django",
        "SQLAlchemy",
        "Teradata",
        "Pandas",
        "Jupyter",
        "NumPy",
        "Python",
        "scripts",
        "Cloud",
        "Formation",
        "installation",
        "Auto",
        "EC2",
        "VPC",
        "DynamoDB",
        "cloud",
        "Beautiful",
        "soup",
        "services",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "sources",
        "data",
        "devices",
        "Lab",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "project",
        "JIRA",
        "Agile",
        "Proficiency",
        "API",
        "security",
        "frameworks",
        "management",
        "user",
        "access",
        "control",
        "OAuth",
        "JWT",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Jinja",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "spring",
        "configuration",
        "server",
        "configuration",
        "Splunk",
        "Concourse",
        "Jenkins",
        "Microservices",
        "deployment",
        "Used",
        "Django",
        "frame",
        "MYSQL",
        "work",
        "post",
        "sales",
        "customer",
        "feedback",
        "complaint",
        "management",
        "system",
        "SQL",
        "procedures",
        "data",
        "SQL",
        "server",
        "database",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "Cloud",
        "Events",
        "data",
        "AWS",
        "resources",
        "SQS",
        "SNS",
        "datasets",
        "TensorFlow",
        "SQLAlchemy",
        "process",
        "data",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "pythons",
        "NumPy",
        "Skit",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "features",
        "applications",
        "Python",
        "Django",
        "pie",
        "pyramid",
        "Flask",
        "Web2py",
        "HTML",
        "jinja",
        "web",
        "technologies",
        "PHP",
        "unit",
        "test",
        "cases",
        "Data",
        "Layer",
        "Search",
        "server",
        "classes",
        "Django",
        "Curl",
        "XML",
        "REST",
        "services",
        "MongoDB",
        "Spinnaker",
        "platform",
        "MultiCloud",
        "Continuous",
        "Delivery",
        "Bake",
        "Test",
        "DeployContainer",
        "Pipelines",
        "Packer",
        "Terraform",
        "Kubernetes",
        "AWS",
        "ELK",
        "clusters",
        "Elasticsearch",
        "Logstash",
        "Graphite",
        "Kibana",
        "Kafka",
        "zookeeper",
        "Lambda",
        "functions",
        "python",
        "AWSs",
        "Lambda",
        "Kinesis",
        "Elastic",
        "Search",
        "scripts",
        "transformations",
        "analytics",
        "data",
        "sets",
        "AMAZON",
        "EMR",
        "clusters",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "Developed",
        "Restful",
        "Micro",
        "Services",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "integration",
        "system",
        "Git",
        "Confluence",
        "Gerrit",
        "Heroku",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Restful",
        "Microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Worked",
        "applications",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "NetBeans",
        "Spyder",
        "IntelliJ",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "NUMPY",
        "applications",
        "principles",
        "Unit",
        "testing",
        "Testdriven",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Integration",
        "testing",
        "SOAP",
        "web",
        "services",
        "devices",
        "data",
        "network",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "code",
        "optimization",
        "Installation",
        "Python",
        "Linux",
        "test",
        "beds",
        "JSON",
        "REST",
        "Web",
        "services",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "tracking",
        "options",
        "application",
        "algorithm",
        "data",
        "address",
        "generation",
        "data",
        "bases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "AWS",
        "Beanstalk",
        "web",
        "applications",
        "services",
        "Java",
        "PHP",
        "Nodejs",
        "Python",
        "Ruby",
        "Docker",
        "servers",
        "Apache",
        "IIS",
        "PYTHON",
        "DEVELOPER",
        "INFOSYS",
        "October",
        "December",
        "testing",
        "framework",
        "commandline",
        "tests",
        "Linux",
        "Object",
        "Oriented",
        "Perl",
        "tests",
        "Python",
        "Created",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "business",
        "process",
        "automation",
        "applications",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "pie",
        "Web",
        "Framework",
        "Git",
        "Confluence",
        "Automated",
        "builds",
        "Maven",
        "builds",
        "Heroku",
        "Jenkins",
        "Jenkins",
        "pipeline",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "architecture",
        "spring",
        "boot",
        "microservices",
        "Netflix",
        "components",
        "ribbon",
        "spring",
        "cloud",
        "environment",
        "Designing",
        "Celery",
        "tasks",
        "activities",
        "Chef",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Used",
        "Apache",
        "CouchDB",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "AWS",
        "REDIS",
        "server",
        "data",
        "analysis",
        "interaction",
        "Business",
        "Users",
        "UATSIT",
        "Developed",
        "Restful",
        "Microservices",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "cloud",
        "formation",
        "CICD",
        "pipeline",
        "dev",
        "QA",
        "prod",
        "environments",
        "Jenkins",
        "Heroku",
        "Bamboo",
        "Docker",
        "Designed",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Cloud",
        "Formation",
        "Cloud",
        "Watch",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "Worked",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Cassandra",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "DynamoDB",
        "MySQL",
        "database",
        "Created",
        "Data",
        "tables",
        "PySpark",
        "PyQT",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "APIs",
        "Python",
        "Flask",
        "SQLAlchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "Wrote",
        "scripts",
        "Import",
        "Export",
        "data",
        "CSV",
        "EXCEL",
        "formats",
        "environments",
        "Python",
        "Celery",
        "action",
        "REST",
        "API",
        "call",
        "Developing",
        "applications",
        "RESTFUL",
        "architecture",
        "Nodejs",
        "PHP",
        "languages",
        "backend",
        "service",
        "Libode",
        "cloud",
        "VPSs",
        "Flask",
        "web",
        "framework",
        "SQLAlchemy",
        "ORM",
        "data",
        "persistence",
        "OpenShift",
        "TestDrive",
        "Admins",
        "Installation",
        "OCP",
        "Cluster",
        "management",
        "Project",
        "OAUTH",
        "SSO",
        "authentication",
        "Login",
        "services",
        "notification",
        "service",
        "request",
        "AWS",
        "API",
        "Gateway",
        "response",
        "Lambda",
        "data",
        "DynamoDB",
        "notification",
        "AWS",
        "SNS",
        "legacy",
        "applications",
        "Cloud",
        "Native",
        "Developing",
        "microservices",
        "Spring",
        "Boot",
        "Cloud",
        "Camel",
        "Eureka",
        "Discovery",
        "Config",
        "service",
        "Spring",
        "Data",
        "Enterprise",
        "Pivotal",
        "Installed",
        "Wit",
        "Python",
        "Jira",
        "confluence",
        "test",
        "Rail",
        "part",
        "server",
        "setups",
        "AWS",
        "server",
        "deployment",
        "data",
        "processing",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "Nexus",
        "Maven",
        "AWS",
        "AMI",
        "Track",
        "record",
        "responsibility",
        "business",
        "software",
        "design",
        "Microservices",
        "systems",
        "analysisdevelopment",
        "lifecycle",
        "project",
        "management",
        "web",
        "services",
        "Cherry",
        "Pie",
        "bottlePy",
        "framework",
        "architectures",
        "RabbitMQ",
        "scalability",
        "performance",
        "building",
        "Soap",
        "NumPy",
        "jinja",
        "celery",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Data",
        "frame",
        "urllib2",
        "feature",
        "file",
        "Cucumber",
        "framework",
        "step",
        "definitions",
        "runner",
        "file",
        "Cucumber",
        "TensorFlow",
        "handson",
        "exercises",
        "command",
        "line",
        "migration",
        "Splunk",
        "AWS",
        "cloud",
        "instances",
        "Splunk",
        "forwarder",
        "deployment",
        "configuration",
        "maintenance",
        "UNIX",
        "Windows",
        "platforms",
        "rating",
        "page",
        "application",
        "Bootstrap",
        "Emberjs",
        "React",
        "JS",
        "Develop",
        "application",
        "features",
        "Django",
        "Framework",
        "performance",
        "SOAP",
        "Web",
        "services",
        "Restful",
        "Micro",
        "Services",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "integration",
        "system",
        "Git",
        "Confluence",
        "Gerrit",
        "Heroku",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "support",
        "Apache",
        "web",
        "server",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Restful",
        "Microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Worked",
        "applications",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "NetBeans",
        "Spyder",
        "IntelliJ",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "NUMPY",
        "POC",
        "application",
        "service",
        "architecture",
        "architecture",
        "Docker",
        "container",
        "technology",
        "Kubernetes",
        "REST",
        "API",
        "Bash",
        "Perl",
        "Python",
        "Automate",
        "daytoday",
        "tasks",
        "carrier",
        "selection",
        "product",
        "selection",
        "web",
        "pages",
        "HTML",
        "Struts",
        "Servlets",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Jersey",
        "MySQL",
        "MongoDB",
        "Single",
        "nodeMulti",
        "Cluster",
        "setup",
        "technology",
        "NoSQL",
        "MongoDB",
        "MongoDB",
        "store",
        "Apache",
        "Kafka",
        "layer",
        "custom",
        "Apis",
        "Soap",
        "Apis",
        "Expressjs",
        "Hapijs",
        "Apis",
        "swagger",
        "Used",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "GIT",
        "Source",
        "control",
        "repositories",
        "code",
        "reviews",
        "pullmerge",
        "requests",
        "reality",
        "solution",
        "form",
        "video",
        "Premiere",
        "Pro",
        "Pylatte",
        "Python",
        "Git",
        "Adobe",
        "Effects",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "website",
        "interface",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Development",
        "code",
        "Python",
        "code",
        "Companys",
        "Source",
        "control",
        "Bitbucket",
        "Companys",
        "Server",
        "CICD",
        "procedures",
        "Jenkins",
        "Scrumbasis",
        "Build",
        "custom",
        "transformations",
        "AWS",
        "Glue",
        "Lambda",
        "Kinesis",
        "costs",
        "ETL",
        "tool",
        "onpremise",
        "infrastructure",
        "PYTHON",
        "DEVELOPER",
        "SEPTEBER",
        "August",
        "August",
        "modules",
        "Beautiful",
        "Soup",
        "SciPy",
        "pythontwitter",
        "PyMongo",
        "Celery",
        "NumPy",
        "Jupyter",
        "matplotlib",
        "Urllib2",
        "data",
        "creation",
        "histograms",
        "Managed",
        "Container",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "source",
        "AI",
        "Pytorch",
        "TensorFlow",
        "Scikitlearn",
        "Apache",
        "Open",
        "Source",
        "Kafka",
        "Storm",
        "Spark",
        "NLP",
        "ML",
        "Algorithms",
        "data",
        "SQL",
        "Server",
        "Integration",
        "Services",
        "SSIS",
        "SQL",
        "Server",
        "Analysis",
        "Services",
        "SSAS",
        "Celery",
        "framework",
        "feature",
        "processes",
        "requests",
        "project",
        "Master",
        "Data",
        "Management",
        "MDM",
        "team",
        "ETL",
        "process",
        "AWS",
        "glue",
        "data",
        "MDM",
        "tool",
        "Reltio",
        "Proficient",
        "structures",
        "data",
        "range",
        "data",
        "science",
        "programming",
        "languages",
        "data",
        "tools",
        "R",
        "Python",
        "Spark",
        "SQL",
        "Scikit",
        "Learn",
        "Hadoop",
        "MapReduce",
        "PEP8",
        "standard",
        "program",
        "test",
        "cases",
        "validity",
        "effectiveness",
        "code",
        "PyChecker",
        "PyLint",
        "Python",
        "libraries",
        "Python",
        "NumPy",
        "Jupyter",
        "matplotlib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "Terraform",
        "infrastructure",
        "sessions",
        "scripts",
        "alarms",
        "notifications",
        "EC2",
        "instances",
        "AWS",
        "Cloud",
        "Watch",
        "Ansible",
        "Playbooks",
        "applications",
        "AWS",
        "Terraform",
        "Deployed",
        "software",
        "stacks",
        "Apache",
        "Spark",
        "Hadoop",
        "HDFS",
        "Python",
        "Notebook",
        "servers",
        "AWS",
        "system",
        "stacks",
        "performance",
        "stability",
        "Design",
        "development",
        "user",
        "interfaces",
        "client",
        "displays",
        "JavaScript",
        "JSP",
        "CSS",
        "issues",
        "Python",
        "code",
        "code",
        "enhancements",
        "code",
        "python",
        "libraries",
        "PyJamas",
        "Jython",
        "documentation",
        "Python",
        "scripts",
        "sphinx",
        "integration",
        "Python",
        "Flask",
        "GitHub",
        "methods",
        "post",
        "requests",
        "Node",
        "API",
        "server",
        "Restful",
        "API",
        "postman",
        "Developed",
        "Spark",
        "Streaming",
        "script",
        "topics",
        "source",
        "Kafka",
        "processing",
        "multitude",
        "applications",
        "AWS",
        "services",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Dynamo",
        "DB",
        "SNS",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Formation",
        "Developed",
        "Chef",
        "Cookbooks",
        "Apache",
        "Tomcat",
        "Jenkins",
        "deployment",
        "automation",
        "packaging",
        "deployment",
        "upgrade",
        "modules",
        "SAS",
        "JBoss",
        "App",
        "Server",
        "VB",
        "code",
        "Analysis",
        "Sybase",
        "procedure",
        "SQL",
        "Developed",
        "MySQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "database",
        "package",
        "VPN",
        "Ubuntu",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "CherryPy",
        "Postgres",
        "Redis",
        "Bootstrap",
        "jQuery",
        "Mongo",
        "Fabric",
        "Git",
        "Tenjin",
        "Selenium",
        "Sphinx",
        "Nose",
        "Confluence",
        "web",
        "pages",
        "Python",
        "Django",
        "Frameworks",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Installation",
        "PythonUnix",
        "test",
        "beds",
        "Apache",
        "Server",
        "Linux",
        "Platform",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Created",
        "functions",
        "AWS",
        "Lambda",
        "scripts",
        "AWS",
        "Lambda",
        "event",
        "Performed",
        "data",
        "cleaning",
        "feature",
        "selection",
        "MLlib",
        "package",
        "PySpark",
        "frameworks",
        "Caffe",
        "Neon",
        "Developed",
        "Test",
        "Cases",
        "Test",
        "Scripts",
        "selenium",
        "web",
        "driver",
        "Java",
        "Cucumber",
        "framework",
        "build",
        "management",
        "tool",
        "Maven",
        "Installed",
        "WebSphere",
        "Studio",
        "Application",
        "Developer",
        "WSAD",
        "Central",
        "CVS",
        "SVN",
        "repositories",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "jinja",
        "web",
        "technologies",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "IDE",
        "PyCharm",
        "Ipython",
        "Notebook",
        "Spyder",
        "PyDev",
        "NetBeans",
        "Sublime",
        "Text",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Worklets",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "SQLAlchemy",
        "Flask",
        "PostgreSQL",
        "database",
        "web",
        "application",
        "performance",
        "issues",
        "Develop",
        "webpages",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AJAX",
        "knowledge",
        "Python",
        "pickles",
        "Bug",
        "fixes",
        "Cassandra",
        "data",
        "store",
        "data",
        "time",
        "Oracle",
        "Cassandra",
        "Cassandra",
        "Spark",
        "streaming",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "code",
        "libraries",
        "analytics",
        "NumPy",
        "SciPy",
        "Pygal",
        "visualization",
        "data",
        "Scrapy",
        "Worked",
        "Object",
        "Oriented",
        "Design",
        "Programming",
        "concepts",
        "unit",
        "testing",
        "Pythons",
        "unit",
        "test",
        "library",
        "Jasmine",
        "Karma",
        "NodeJS",
        "ExpressJS",
        "Cassandra",
        "NodeJS",
        "testing",
        "frameworks",
        "development",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "platform",
        "instances",
        "Puppet",
        "Chef",
        "Configuration",
        "management",
        "framework",
        "HTML",
        "views",
        "JavaScript",
        "models",
        "wireframes",
        "web",
        "pages",
        "design",
        "development",
        "BDD",
        "web",
        "application",
        "development",
        "variety",
        "frameworks",
        "Django",
        "Python",
        "Pandas",
        "Data",
        "frame",
        "data",
        "data",
        "structures",
        "data",
        "files",
        "CSV",
        "files",
        "Parquet",
        "files",
        "Education",
        "Masters",
        "Skills",
        "Javascript",
        "Git",
        "MySQL"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:26:32.865042",
    "resume_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER SOUTHWEST AIRLINES Dallas TX Around 5 year of experience in software development in Python libraries used Beautiful Soup NumPy Skit learn SciPy matplotlib Pythontwitter Pandas data frame MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Strong background in programming committed to maintaining technical skills and to be uptodate with industry knowledge Have good knowledge on NoSQL databases like Cassandra and MongoDB and SQL databases like MySQL PostgreSQL and SQLite3 Extensive experience in system analysis design development and implementation of web based and clientserver application using HTML CSS Bootstrap AngularJS JavaScript Python Django Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience with full software development lifecycle SDLC architecting scalable platforms objectoriented programming OOPs database design and agile methodologies Good experience of software development in Python libraries used Turtle Tkinter NumPy Skit learn matplotlib Pandas urllib2 MySQL dB for database connectivity and IDEs PyCharm Eclipse VS Code Good experience in developing web applications implementing MVT architecture using Django tasty pie Flask web application frameworks with good understanding of Django ORM and SQLAlchemy Excellent Experience on various Python integrated IDEs such as Sublime Text PyCharm Eclipse and NetBeans Experience in working with several python libraries including Beautiful soup NumPy matplotlib SciPy PyQt Scapy SQLAlchemy Experience in working with Amazon Web Services AWS like EC2 S3 EBS VPC ELB Route53 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front cloud formation and Glacier Experienced in implementing Microservices Service Oriented Architecture SOA with XML based Web Services SOAPWSDL using Top Down and Bottom Up approach Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Experience in cross browser and crossdevice compatibility check and thoroughly performed unit testing using Jasmine Mocha JUnit and Karma Expertise in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Extensively worked with automation tools like Heroku Jenkins for continuous integration and continuous delivery CICD and to implement the EndtoEnd Automation Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB Expertise with agile development methods like agilescrum TDD BDD peer code reviews continuous integration Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Implemented REST APIs in Python using microframework like Flask with SQLAlchemy in the backend for management of data center resources on which OpenStack would be deployed Experienced in using Integrated Development Environment IDEs in PyDev PyScripter PyCharm Spider Python IDLE Brackets Eclipse JBuilder Sublime and NetBeans JDeveloper Eric Komodo Edit Komodo IDE Cloud9 IDE DrPython and NetBeans for debugging and worked with SublimeText2 Edit Plus Notepad Vim Editors for coding Work Experience PYTHON DEVELOPER SOUTHWEST AIRLINES Dallas TX June 2018 to Present Developed views and templates with Python and Django view controller and templating language to create a userfriendly to interface to perform at a highlevel Responsible for largescale Puppet implementation and maintenance Puppet manifests creation testing and implementation Created AWS Security Groups for deploying and configuring AWS EC2 instances also added support for Amazon AWS S3 cloud formation and RDS to host files and the database into Amazon Cloud Used Mongoose in order to access the MongoDB from Node JS and used Angular CLI and NPM for scaffolding the Angular Application Creating snapshots and Amazon machine images of the instances for backup and creating clone instances and performed configuration deployment and support of cloud services including Amazon Web Services Developed internal auxiliary web apps using Python Django framework with Angularjs and Bootstrap CSS HTML framework Set up configured and maintained multiple webapplication servers like IBM Web Sphere Apache Tomcat and WebLogic Experienced in Managing build files using ANT Created custom new columns depending up on the use case while ingesting data into Hadoop lake using PyTable PySpark PyMongo Pickle and Pyside Developed and maintained an infrastructure for a new project using Ansible Redis Postgres and Celery Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database with ETL and Teradata experience Wrote Python code to automate Jupyter Notebook to run selfcontained scripts on SAS server Worked on Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Proven ability in developing selenium automation framework like Page Objects Hybrid Frameworks Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django Designing Celery and multithreading for scheduling the tasks and multiple activities Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Confluence Automated builds using Maven and scheduled automated nightly builds using Heroku and Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on microservicebased architecture using spring boot for developing the microservices Netflix components eureka ribbon spring cloud for supporting the cloud native environment Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks All microservices are written in Python utilizing distributed message passing via Kafka message broker with JSON as data exchange formats Created sites to organize client contracts and to summarize monthly financial data using Emberjs D3js and MySQL Utilized Python specific tools including Django Django Rest Framework Django SQLAlchemy Teradata Pandas Jupyter NumPy Writing Python scripts with Cloud Formation templates to automate installation of Auto scaling EC2 VPC DynamoDB cloud formation Beautiful soup and other services Performed troubleshooting fixed and deployed many Python bug fixes of the main applications that were sources of data for both devices and Lab Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for the project monitored on JIRA Agile Proficiency in API security frameworks token management and user access control including OAuth JWT etc Managed developed and designed a dashboard control panel for customers and Administrators using Django Jinja Oracle DB PostgreSQL and VMWare API calls Used spring configuration server for centralized configuration and Splunk for centralized logging Used Concourse and Jenkins for Microservices deployment Used Django frame and MYSQL for the backend work post sales customer feedback and complaint management system Working on SQL stored procedures that are used to access that data and deploy to SQL server database Involved in various phases of Software Development Life Cycle SDLC such as requirements gathering modeling analysis design and development Utilized Cloud Watch Events to collect data from other AWS resources and transfer them to SQS and SNS for alerting solar Accessed public datasets and use TensorFlow and SQLAlchemy to load process clean and transform data Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Used the pythons modules NumPy Skit Learn matplotlib etc for generating complex graphical data creation of histograms etc Develop consumerbased features and applications using Python Django tasty pie pyramid Flask Web2py HTML jinja and other web technologies Written functional PHP unit test cases for Data Layer and Search server classes using Django Curl XML JSON REST based services and MongoDB Working on Spinnaker platform for MultiCloud Continuous Delivery Bake Test DeployContainer Pipelines using Packer Terraform Kubernetes AWS GCP Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed a fully automated continuous integration system using Git Confluence Gerrit Heroku Jenkins MySQL and custom tools developed in Python and Bash Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Tested applications using the principles of Unit testing Testdriven Development TDD Load Testing and Integration testing Implemented SOAP using web services to interact with various devices to pull realtime data on the network Wrote Python OO Design code for monitoring logging and debugging code optimization and Involved in Installation and setting up Python Linux test beds Worked with JSON based REST Web services Used JIRA for bug tracking and issue tracking and added several options to the application to choose algorithm for data and address generation Designed and maintained data bases using Python and developed Python based API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS PYTHON DEVELOPER INFOSYS IN October 2015 to December 2017 Developed automated testing framework for commandline based tests on Linux using Object Oriented Perl and for seleniumbased tests using Python Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages and achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Confluence Automated builds using Maven and scheduled automated nightly builds using Heroku and Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on microservicebased architecture using spring boot for developing the microservices Netflix components eureka ribbon spring cloud for supporting the cloud native environment Designing Celery and multithreading for scheduling the tasks and multiple activities Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Build an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 and cloud formation Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Heroku Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL DynamoDB and MySQL database Created Data tables utilizing PySpark PyQT to display customer and policy information and add delete update customer records Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Wrote scripts to Import and Export data to CSV EXCEL formats from different environments using Python and made a Celery action using REST API call Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Created Restful backend service deployed on Libode cloud VPSs using Flask web framework and SQLAlchemy ORM for data persistence Developed the OpenShift TestDrive for Admins Installation of OCP 35 Cluster management and Project OAUTH and SSO are used for authentication and Login services Developed the notification service by posting the request in AWS API Gateway Validating the response in Lambda by getting the data from DynamoDB and sending the notification through AWS SNS Involved in migrating legacy applications to Cloud Native Developing microservices using Spring Boot Cloud Camel Eureka Discovery Config service Spring Data in to ePAAS Enterprise Pivotal Installed Wit be Python Jira confluence test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMI Track record of increasing responsibility in the business software design Microservices systems analysisdevelopment and full lifecycle project management Developed multithreaded web services using Cherry Pie bottlePy framework and leveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap NumPy jinja celery SciPy Matplotlib pythontwitter Pandas Data frame urllib2 libraries Prepared feature file for Cucumber framework and created step definitions and created runner file to run the Cucumber features Applying TensorFlow in various handson exercises using the command line Worked on migration of Splunk to AWS cloud instances Involved in standardizing Splunk forwarder deployment configuration and maintenance across UNIX and Windows platforms Developed rating and sharing single page application by using AngularJS Bootstrap Emberjs and React JS Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Web services Developed Restful Micro Services using Flask and Django and deployed on AWS servers using EBS and EC2 Developed a fully automated continuous integration system using Git Confluence Gerrit Heroku Jenkins MySQL and custom tools developed in Python and Bash Added support for Apache web server and RDS to host staticmedia files and the database into Amazon Cloud Python Object Oriented Design code for manufacturing quality monitoring logging and debugging code optimization Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Implemented Bash Perl Python scripting to Automate many daytoday tasks Designed and developed carrier selection and product selection web pages using HTML Struts Servlets Created RESTful web services for Catalog and Pricing with Jersey MySQL and MongoDB while working on Single nodeMulti Cluster setup using technology NoSQL and MongoDB while using MongoDB as a persistent store and Apache Kafka as a messaging layer for custom Essentially working to develop restful Apis and invoke Soap Apis in Expressjs and Hapijs validating Apis with swagger Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Developed views and templates with Django view controller and template to create a userfriendly website interface Used Pandas API to put the data as time series and tabular format for local timestamp data manipulation and retrieval and storing it into MongoDB Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Server using CICD procedures like Jenkins on Scrumbasis Build custom transformations using AWS Glue Lambda and Kinesis helped reduce costs in ETL tool onpremise infrastructure PYTHON DEVELOPER SEPTEBER August 2013 to August 2013 2015 Used modules Beautiful Soup SciPy pythontwitter PyMongo Celery NumPy Jupyter matplotlib Urllib2 etc for generating complex graphical data creation of histograms etc Managed Container using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Worked on monitoring developing and transforming data using SQL Server Integration Services SSIS and SQL Server Analysis Services SSAS Used Celery framework to develop a new feature to support parallel processes and complete multiple requests simultaneously Worked on the project for Master Data Management MDM team for designing and developing the ETL process in AWS glue and launching and extracting the data from MDM tool called Reltio Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop MapReduce Worked on PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and PyLint Used several Python libraries like Python NumPy Jupyter and matplotlib and was involved in environment code installation as well as the SVN implementation Used Terraform for managing the infrastructure through the terminal sessions and executing scripts in creating alarms and notifications for EC2 instances using AWS Cloud Watch Wrote Ansible Playbooks for various applications and deploying them in AWS using Terraform Deployed debugged and maintained complex distributed software stacks containing Apache Spark Hadoop HDFS and Python Notebook servers on cloudbased AWS system by optimizing the stacks for best computational performance and stability Design and development of user interfaces and client displays using JavaScript JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Generated automated documentation for the Python scripts using sphinx Designed and developed continuous integration using Python Flask GitHub Created methods get post put delete to make requests to the Node API server and tested Restful API using postman Developed Spark Streaming script to consume topics from distributed messaging source Kafka for realtime processing Involved in designing and deploying multitude applications utilizing almost all the AWS services Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Involved in packaging deployment and upgrade of different modules of SAS on JBoss App Server VB code Analysis and Sybase stored procedure converted into SQL Developed and executed various MySQL database queries from Python using PythonMySQL connector and MySQL database package Private VPN using Ubuntu Python Django Tasty Pie CherryPy Postgres Redis Bootstrap jQuery Mongo Fabric Git Tenjin Selenium Sphinx Nose Confluence Involved Developed dynamic web pages using Python Django Frameworks and used Python and Django creating graphics XML processing data exchange and business logic implementation Installation and setting up PythonUnix test beds and supported Apache Server on Linux Platform Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created functions in AWS Lambda to run python scripts and AWS Lambda using java to perform event driven processing Performed data cleaning and feature selection using MLlib package in PySpark and working with deep learning frameworks such as Caffe Neon etc Developed Test Cases and Test Scripts in selenium web driver with Java using Cucumber framework with build management tool Maven Installed and configured WebSphere Studio Application Developer WSAD to connect Central CVS and SVN repositories Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML jinja and other web technologies Worked on various Python Integrated Development Environments IDE like PyCharm Ipython Notebook Spyder PyDev NetBeans and Sublime Text Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Worked on developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Using SQLAlchemy with Flask and PostgreSQL as database for developing the web application Resolved performance related issues using efficient coding Develop dynamic webpages using HTML5 CSS3 JavaScript and AJAX Good knowledge on Python pickles Worked on Bug fixes Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Was responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term scalable architectural design decisions Built and maintained code libraries to support analytics using NumPy and SciPy Used Pygal and plotly for visualization of the data retrieved using Scrapy Worked on Object Oriented Design Programming concepts and unit testing using Pythons unit test library Jasmine and Karma Used AngularJS NodeJS ExpressJS MongoDB Couchbase Cassandra and various NodeJS testing frameworks for fullstack development on the Amazon Web Services AWS platform instances using Puppet Chef Configuration management Used AngularJS framework to bind HTML views to JavaScript objects models converted wireframes to web pages with behavioral design development BDD Involved in databasedriven web application development using a variety of frameworks such as Django on Python Used Pandas Data frame for analyzing data data structures manage large data files and converting Large CSV files to Parquet files Education Masters Skills Javascript Git MySQL",
    "unique_id": "9dc0cc44-861f-47fc-b085-eab9711b3826"
}