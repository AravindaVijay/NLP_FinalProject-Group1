{
    "clean_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer United Airlines Chicago IL Around 7 years of full stack development experience in all phases of Software Development Life Cycle SDLC which includes Analysis Design Development Implementation and Testing of web based enterprise business applications using the JAVAJ2EE technologies Experience in developing Web Applications with various Open Source frameworks JSF 12 Spring Framework 203040 Web Flow Jakarta Struts Framework 111220 Struts Validation and Tiles Frameworks Extensive knowledge on the Spring Modules like Spring IOC and Dependency Injection Spring MVC Spring Batch Spring Web Flow Spring Security Authentication and Authorization Spring AOP for Code Modularity and Spring Boot Developed and deployed Micro Services based applications using Spring Boot along with Spring Rest and Node Js with Express and Hapijs Spring boot with Hibernate combination where it has a predefined MVC architecture which made me to run all batch jobs easily and quickly Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Well experienced on implementing SOA Service Oriented Architecture using Spring REST to create REST resources that include several components like Jersey Framework spring Boot JAXRS and used WADL for documenting REST APIS Worked on SOAP protocol using JAX WS and integrated Apache CXF AXIS2 for WSRemote Messaging WS Security WS Policy and other specifications and automated documentation using Swagger and WSDL Experienced in configuring and deploying applications on different servers such as Apache Tomcat Web logic IBM WebSphere JBoss Loaded and transformed large sets of structured semi structured and unstructured data using HadoopBig Data concepts Experience in developing Map Reduce Programs using Apache Hadoop for analyzing the big data as per the requirement Expertise to interact with relational databases using ORM frameworks like Hibernate Spring Data JPA IBatis MyBatis Java Persistence API JPA Hibernates second level cache Ehcache Exploring with the Spark for improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Have good knowledge on different databases like PostgreSQL MySQL DB2 Oracle 13c11g Microsoft SQL Server NoSQL DB Raven DB Mongo DB and Cassandra Couch DB Redis Dynamo DB and good experience in writing stored procedures functions and triggers using PLSQL in JDBC ODBC and in WebLogic server Experience in writing stored procedures triggers views and functions using PLSQL scripts and embedded DDL and DML statements in PLSQL blocks Experience in Developing User Interface UI Rich Web Applications using Front EndUser Interface UI Technologies like HTML45 XHTML DHTML CSS23using SASS and LESS Type Script Bootstrap and AJAX by managing all facets and pipelines of application Expertise in implementing the features of ES6 like arrows modules block scoping promises and enhanced object literals Experienced in working with MVVM design flow using clientside JavaScript framework Angular 2x4 X50 with NGRX Expertise in using shadow DOM which is a feature of Angular 5 to encapsulate visual behavior Good knowledge in providing support for passing messages between publishers and subscribers using observables as a part of Angular 5 Experience with features of Angular 4 like NgModules which configure the injector and the compiler and help organize related things together Proficient with Angular JS Backbone JS Ember JS Knockout JS Ext JS for customize front end app development and to achieve MVC design flow Well experienced in view rendering using jQuery React JS Handlebar JS and implementing React JS with Redux and Flux patterns to attain MVC functionality Well experienced in developing Dynamic Single Page Application SPA using MEAN MongoDB Express Angular Node full stack development tool Kit Good amount of hands on Experience in developing serverside JavaScript frameworks using Node JS Hapi JS Express JS to build event driven nonblocking IO model web applications Experience in installing dependencies using Package Managers like NPM BOWER and running automated task using Gulp Grunt and webpack for bundling minification loading images configuration Experience on UI testing with Karma Jasmine Protractor for Angular JS and Mocha Chai for React JS Unit tested web services using Junit JMeter Mockito Easy mock SpringJunitRunner Spock Test NG and hence achieved the goals of Test Driven Development TDD Well experienced in using various AWS Amazon Web Services Iaas Infrastructure as a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Expertise in using Microsoft Azure which is cloud computing service for building testing deploying and managing applications and services through a global network of Microsoft managed data centers Good Knowledge and Experience on implementing Spring Cloud Netflix OSS Stack for micro Services deployment Zuul for API Gateway for routing Hystix Circuit Breaker for latency and fault tolerance and Eureka for service registration Experience in applying JMS Java Messaging Service for reliable information exchange across Java applications using Apache Kafka RabbitMQ ActiveMQ and IBM MQ to communicate from Client to Server Good knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view using Elastic search ELK Knowledge of Elastic Search used for supporting distributed search by allowing start with one machine and extend further to other machines Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Implemented security functionality OAuth 20 Spring security SSL and site minder SSO secure authentication with LDAP OAuth2 for generating tokens in the application using Spring Security JWT for producing tokens Well experienced with build tools like Gradle Maven and ANT Implemented Docker container service build pipe line Jenkins Bamboo and GoCD Go Continuous Delivery to achieve Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Knowledge on various Docker components like Docker Engine Hub Machine Compose and Docker Registry Hands on experience in managing this Docker Container using Kubernetes with zero downtime deployment Used Kubernetes Linux container for deploying and scaling containerized applications Good practical experience with Javabased logging utility ie log4J and slf4j Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Good experience in using Software development methodologies like Agile Scrum Water Fall and Rational Application Development methodologies Experience in using Mule soft which is light weight Java based Enterprise Service Bus ESB which allows connecting applications together quickly and easily enabling them to exchange data Experience in using open source framework Apache Camel which for messageoriented middleware with a rulebased routing and mediation engine that provides a Java objectbased implementation of the Enterprise Integration Patterns EIP using an application programming interface to configure routing and mediation rules Expertise in working with JAVA8 features like Functional Interfaces Stream API Time API Transaction Management Exception Handling Collection API Lambda Expressions Work Experience Full Stack Developer United Airlines Chicago IL September 2018 to Present Description United airlines is a major united states airline with its headquarters at Chicago IL The airline operates over 5 400 flights daily Worked on whole Life cycle process of Software Development from the creation of Software Development Request SDR to Deployment which covers creation of design documents as well Worked in a team where some critical development requirements were handled without any additional support and met Qualitative delivery Responsibilities The backend use of Node JS Express JS MongoDB and Mongoose the complete MERN Stack to provide RESTful API Worked closely with internal clients to define business objectives project scope solution space and designdevelopment approach for various research applications Utilized Modernizer extensively to build HTML5CSS3 based page layouts that are crossbrowser compatible and standardscompliant Implemented client side Interface using React JS Build user interfaces differently by breaking them into components using React JS and used a real full featured programming language to render views with React JS Worked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using React JS Implemented application testability and diagnostics and fixing bugs with the help of REDUXReducers architecture Responsible for implementing UI mockups integrating third party react libraries and handlingcreating Redux store data Developed ReactRedux code using functional programming best practices to enable efficient pure function testing Experienced in working with Redux and Alt JS architecture Utilized createreactapp to launch product to stay update with the most current webpack and babel build configurations Handled Http Requests using Axios which supports Promise API functionality native to JS ES6 Extensively Used Jenkins as Continuous Integration tools to deploy the Spring Boot Microservices to Pivotal Cloud Foundry PCF using build pack Used Pivotal Cloud Foundry to quickly build deploy and update the applications Used JWT JSON web tokens mechanism for authentication and authorization security configurations using Node JS Used Node JS for the communication to the server through Restful API and added user validations permissions by using it Debugged the website using Chrome Developers tools and hardcoded the API into script for getting the information about merchants using Node Js Created and consumed RESTful API using Expresjs to provide centralized logic and reusable data retrieval build on top of Nodejs Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Spring JPA Involved in using Spring Data JPA Java Persistence API framework and JPA Specification criteria builder to work with dynamic queries in java Worked on writing SQL queries for PostgreSQL databases to build PLSQL functions store procedure triggers views and materialized views Utilized AWS S3 for images uploading and imageMagick for resizing for scalable performance Performed unit testing with Mocha and Chai JavaScript test framework Developed Unit test scripts using Junit and Spock Implemented logging using Log4j Designed and developed independent Microservices using Spring Boot Rest Controller model and are deployed on UNIX boxes Employed Spring Boot for initialize and bootstrapping the build configuration for the boot based web applications Development of cloud hosted web applications and REST APIs using Spring Boot with embedded Tomcat Extensively used Mocha and Chai JavaScript unit testing tools for testing JavaScript pages Worked with Babel and Webpack in application build and deployment processes Implemented testing with Junit Framework using Mockito Spring Junit Runner JMeter PowerMock and MockMVC Created plug ins for an inhouse data ingestion framework to extract data from multiple sources like Apache Kafka Database file systems and Messaging Queues Able to create and manage External Lookups in Splunk to match event data with description Configure and Install Splunk Enterprise and Apache Server for user and role authentication and SSO Created micro service plugin for service worker to read in info via RabbitMQ message bus to create and send SNS messages to AWS SNS topic Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul API Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Ran Log aggregations website Activity tracking and commit log for distributed system using Apache Kafka Deployed and monitored scalable infrastructure on Amazon web services specifically on AWS EC2 Used Cloud formation and launch configurations to automate repeatable provisioning of AWS resources for applications Environment React Babel Redux Axios Nodejs Webpack Pivotal cloud foundry Jenkins Docker Mongoose MongoDB Chai Mocha Spring boot Rabbit MQ Hibernate Apache kafka AWS Full Stack Developer Cerner Corporation Kansas City MO September 2017 to August 2018 Description Cerner corporation is an American supplier of Health information technology solutions services devices and hardware Cerners world headquarters campus is at north Kansas City MISSOURI My role is to analyze and modify all J2EEapplications and prepare required documents Responsibilities Coordinated with project managers business analyze new proposed ideas Requirements designed the integrated tool developed and implemented all the modules Developed User Interface using React JS HTML5 CSSCSS3SAAS Bootstrap 40 Redux MongoDB Responsible to style look and feel of the web page with LESS that extends CSS with dynamic behavior such as variable mixing operations and functions Implemented various screens for the front end using Reactjs and used various predefined components from NPM and Redux library Worked in using Reactjs Router Forms Animations Keys components Events and Flux concept Responsible for React UI and architecture Including Tree Building components library Table Grid and SlideView Implemented stable React components and standalone functions to be added to any future pages Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Nodejs Used Expressjs which is assertive fast essential and moderate web framework of Nodejs that helps manage a server and routes Postprocessors transpires tests etc based on build target Developed REST API services using Node JS Express JS BodyParse and other node modules to serve the web application with JSON data Developed readable and writable streams of Node JS to process the data from external means of the application Added ExcelBuilding to download the Tabular data in Excel Format using React Created a pipeline from Mongo DB cluster by configuring Mongoose Connector to sync with multiple sources like Elastic Search or another Mongo DB Used Pivotal Cloud Foundry the connectionservice binding details are injected from the deployed cloud platform itself Used a microservice architecture designed and developed RESTful web services using Apache CXF and Spring Boot framework Installed a single node Elasticsearch cluster to index MongoDB for use in a NodeJS Express on a native AWS EC2 Ubuntu 1404 instances Worked with build tools like Bower NPM and Grunt Maintaining and troubleshooting Cassandra Clusters this includes monitoring and performing troubleshooting as per requirements Designed developed and maintained PostgreSQL Data base architecture Used build tools to bundle the application through webpack and used Gulp for task automation of minification of Angular scripts Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration containerEKS focusing on highavailability fault tolerance and autoscaling Deploying the applications using Docker container services and building continuous integrationCI and continuous deploymentCD pipeline using Jenkins with GitHub Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch of the application data for analytics and visualization of the users login Employed the Single Sign On SSO authentication using Site Minder for logging to the application from different websites Developed unit test scripts using Karma and Jasmine for Angular 2 framework and Mocha for Node JS API end points Environment HTML5 CSS3 Express JS JavaScript React JS Redux Node JS Bootstrap REST API Load Balancer Mongoose Connector Mongo DB REST administrations Cassandra Docker Mocha Jasmine Karma Gulp SSO Authentication Web Pack Kubernetes Maven and Jenkins GIT Jenkins AWS Services Elastic Cloud ComputeEC2 Java DeveloperUI Developer California Bank Trust CA June 2015 to August 2017 Description National Bank Trust Company is one of the secured financial institutions that serves huge domain of customers Auto Billing System is a web application built on Spring MVC framework The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic recurring bill payment and Review Payments Responsibilities Developed and designed User Interface using JavaScript HTML CSS DOM XHTML AJAX Bootstrap Less AngularJS Created and enhanced websites for clients to increase online presence and sales by using some of the latest technologies including JavaScript CSS3 HTML JQuery UI handlebars Wrote application level code to perform clientside validation using jQuery and JavaScript Used Angular twoway binding and Implemented the search functionality for Internal Application using Angular JS Extensively used http service to make AJAX calls and consume JSON response across numerous services Involved in implementing the complete Application in the inbuild SOA Architecture with Angularjs Created a demo website running on a Nodejs using the Express framework Jade Angularjs for front end MVCtemplating Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Involved in Enhancement of existing application utilizing Angular JS created HTML navigation menu that is role based wherein menu items changes dynamically based on the values derived from the database in the form of XML Involved in the migration of YUI screens to intuitive EmberJS screens Worked with Core Java concepts like Collections Framework multithreading Memory management Used multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class Implemented REST web service calls using JSON JAXRS formats provided to be integrated on the front end Created both xml and java configuration files for setting up Apache CXF as JAXRS runtime Spring Data and Spring JDBC template technologies Used Spring ORM module to integrate with Hibernate Used ORM tool Hibernate along with spring framework to deal with database operations Involved in development of POJO classes and writing Hibernate query language HQL queries Implemented logging using log4j and Spring AOP Implemented various crossproject functionalities using Spring AOP Used Spring JTA Transaction manager to remove the dependencies on the container Implemented business layer of the application using Spring AOP Spring IOC Implemented the mechanism of logging and debugging with Log4j and JIRA Involved in Unit testing of the application using Junit Integrated Spring with Hibernate for data access from Oracle Database Creating and maintaining database links between different Oracle databases Used Hibernate mappings relationships between tables and entity classes to access and update information in the database Hibernate Query Language HQL was used to perform various queries in the database Involved in bug fixing during the System testing Joint System testing and User acceptance testing Deploying the applications and binding third party services like App Dynamics on Pivotal Cloud Foundry PCF Used Pivotal Cloud Foundry to quickly build deploy and update the applications Implemented Hibernate Second level of caching using Ehcache provider to get caching across session factory Involved in Application Development using various WebApplication Servers like Apache Tomcat Server IBM WebSphere Implemented code for marshall and unmarshall technique using JAXB to parse XML to string object and vice versa Documented the REST APIs using Swagger API for briefing the services involved in the application Implemented the function to send and receive AMQP messages on RabbitMQ synchronously and asynchronously and send JMS message on the edge device Developed test driven development code using JUnit and Mockito framework Used Karma Test runner and Jasmine Testing frameworks Primarily responsible for designing and implementing the application process flow with MuleSoft using Anypoint Studio and POST production support for all the APIs Java Developer Cloud Digital Media Hyderabad Telangana September 2012 to August 2014 Description This Project aims to help the employees of Cloud Digital Media to refer candidates for open positions in the organization Through this application admin can post new referral schemes for open positions in the organization and accordingly the employees can refer candidates and can get the benefit of cash rewards or gifts that are available under a referral scheme This project also has various reports which helps the admin to do a detailed analysis as per his criteria Responsibilities Implemented Model View Controller MVC2 Architecture using Jakarta Struts framework at presentation tier Used Struts frameworks and MVC design patterns to complete several projects with primarily focused on more complex areas of development including user interface design batch processing stored procedure development XML data exchange and integration Validated all forms using Struts validation framework Extensive use of Struts Framework for Controller components and view components Implemented Spring IOC for inter connection between modules in our application Created customized spring batch framework to run multiple processes step by step Implemented connection pooling framework to process claims concurrently with multiple threads using spring batch with different split conditions based on volume of claims Developed automated build files using Maven Created Data Access Objects to fetch data from database with SQL queries integrate them with IBatis Developed shell scripts used to monitor production applications start and stop custom Java applications in Linux environment Implemented batch processes for reporting applications and modules using Korn shell scripts on Oracle database Developed various helper classes which needed following core Java multithreaded programming and collection classes Categorized salient level rule to every business rules base on the business needs Use DROOLS as rules engine Extensively used Junit log4j for unit testing and logging Designed and coded application components in an agile environment Environment Struts Framework Spring IOC Spring Batch Maven Spring MVC iBatis SQL Linux Drools Multithreading Log4j Associate Software Engineer ICrea Infotech Hyderabad Telangana January 2012 to August 2012 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules with in this sub modules will maintain storing registering details of joining patient details and over all day activities maintains one database Responsibilities Developed the application using Java J2EE Structs JDBC Development resolving the issuesbugs Code suggestions Technical Issues and was involved in writing Stored Procedures Triggers and Cursors Created tables views Types complex join queries and functions and modifications to existing database structure as required for addition of new features Involved in Designing the Database Schema and writing the complex SQL queries Used Hibernate as the DAO layer to access the database Worked with Structs framework to design the MVC model for the application Worked on SOAP based Client and Server Web services Implemented Multithreading for handling multiple requests and for high performance Worked on the Java Collections API for handling the data objects between the business layers and the front end Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database and JAXB in the web services request data marshalling as well as unmarshaling process Used Java Messaging ServicesJMS for reliable and asynchronous exchange of important information Developed Unit test cases using JUnit Deployed application on Client Linux server Used ANT built tool for compiling and generating war file Developed web services for sending and getting data from different applications Used JDBC to access Oracle database for accessing the information Used Junit test cases for regression testing and integrated with ANT build Used Log4j to capture the log that includes runtime exceptions Worked closely with system analyst to understand the technical requirements of the project Created the design documents with use case diagram class diagrams and sequence diagrams using Rational Rose Environment Java J2EE Struct JDBC Hibernate JAXB SAXP XML Collections Multithreading SQL JMS Junit ANT Log4j Rational Rose Education Masters Skills Visual studio C Git Gradle Javascript Jenkins Json Php Svn Xml Bea Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxp Node Jquery React Nodejs Angular Additional Information Technical Skills Web Development HTML5 SASS CSS3 JavaScript PHP JSON JQUERY J2EE design pattern AJAX XML SOAP REST WADL WSDL JAXP JAXB JAXRS JAXWS S5 ES6 Databases MySQL ORACLE Mongo DB DB2 MS SQL SQL Server RDBMS Cassandra Couch DB Graph DB Amazon DynamoDB Programming Languages C C CORE JAVA J2EE SERVLETS JSP JDBC JAVA BEANS JSF JNDI EJB Data Structures SQL Operating System Windows Linux Unix MSDOS Software Tools Testing Tools BUILD Ant Bamboo GoCD Gradle Grunt Gulp Jenkins Maven Maven 2 Bower LOGGING Log4j Slf4j Commons Logging VERSION CONTROL Git SVN Clear Case Surround TESTING Protractor Jasmine along with Karma Mockito Mocha Selenium Spring JUnit 4 IDEs worked on Eclipse Sublime Text Net Beans IBM RAD Visual studio STS BEA Web Logic Workshop Frameworks AngularJS NodeJS BackboneJS D3 Struts JSF Spring MVC Hibernate iBatis JPA JDBC Application Servers Apache Tomcat Server BEA Web Logic IBM Web Sphere JBOSS Oracle Web Logic",
    "entities": [
        "Micro Services",
        "AMQP",
        "Responsibilities Developed",
        "Spring Security JWT",
        "Spark Context",
        "AJAX",
        "Hibernate iBatis",
        "SNS",
        "Eclipse Sublime Text Net Beans IBM",
        "Docker Engine Hub Machine Compose",
        "ANT Implemented Docker",
        "Cloud Digital Media",
        "Nodejs",
        "ISOMORPHIC",
        "Spock Test NG",
        "UNIX",
        "Drools Rule Engines",
        "External Lookups",
        "HTTP",
        "GitHub Implemented",
        "IBM",
        "Package Managers",
        "Rational Application Development",
        "SSO Created",
        "Requirements",
        "Ajax",
        "node",
        "Controller Advice",
        "Hadoop",
        "Express",
        "Developed User Interface",
        "XML",
        "Oracle Database Creating",
        "Telangana",
        "Hystix Circuit Breaker",
        "Hibernate Utility",
        "POST",
        "OAuth",
        "Auxiliary Services Each",
        "Anypoint Studio",
        "MS SQL SQL Server",
        "WebLogic",
        "JUnit",
        "Analysis Design Development Implementation and Testing",
        "Kansas City",
        "Review Payments Responsibilities Developed",
        "Dynamic Single Page Application",
        "Amazon",
        "NodeJS Express",
        "Grunt Maintaining",
        "JAVAJ2EE",
        "NGRX Expertise",
        "Jersey Framework",
        "Maven Created Data Access Objects",
        "JSF Spring",
        "Tabular",
        "API Worked",
        "Developed",
        "Nodejs Involved",
        "Node Js Created",
        "the Enterprise Integration Patterns EIP",
        "United Airlines",
        "Description Cerner",
        "Utilized",
        "Mockito",
        "Software Development Request",
        "Hapijs Spring",
        "Auto Billing System",
        "JIRA Involved",
        "Client",
        "Pivotal Functional Service",
        "MVCtemplating Configured Express",
        "DDL",
        "Amazon Web Services Iaas Infrastructure",
        "Hibernate Spring Data",
        "Cursors Created",
        "Redux MongoDB",
        "New Relic and Dyna Trace Strong",
        "Implemented Hibernate Second",
        "MVC iBatis",
        "Functional Interfaces Stream API Time API Transaction Management Exception Handling Collection API Lambda Expressions Work Experience Full Stack Developer",
        "WebApplication Servers",
        "Microsoft Azure",
        "Apache Camel",
        "HadoopBig Data",
        "Linux",
        "Programming Languages C C CORE",
        "Angular 5",
        "AWS Full Stack Developer Cerner Corporation",
        "MQ Hibernate Apache",
        "Docker",
        "DOM",
        "RDS",
        "Nodejs Used Expressjs",
        "SSL",
        "Junit Framework",
        "REDUXReducers architecture Responsible",
        "Hibernate Used",
        "Angular JS",
        "STS",
        "MVC",
        "Interface",
        "Spark",
        "React JS Worked",
        "Redux",
        "Java Hibernate Spring Jax Jaxb Jaxp",
        "ORACLE Mongo DB",
        "BRMS Business Rules Management System",
        "Node JS",
        "Rational Rose Environment",
        "Swagger and WSDL Experienced",
        "Cassandra Clusters",
        "the Java Collections API",
        "Exception Handler",
        "API",
        "Restful API",
        "micro Services",
        "Karma Mockito Mocha Selenium Spring JUnit 4",
        "POJO",
        "JTA Transaction",
        "Description National Bank Trust Company",
        "Spring Data",
        "Spring JDBC",
        "Types",
        "Splunk Development Configuration and Administration",
        "Created",
        "LDAP OAuth2",
        "AWS",
        "YUI",
        "React JS Implemented",
        "Singleton",
        "Responsibilities Implemented Model View Controller MVC2 Architecture",
        "XML Involved",
        "LESS Type Script Bootstrap",
        "React JS",
        "Hystrix Circuit Breaker",
        "Skills Visual",
        "java",
        "BodyParse",
        "SQL",
        "Spring Inversion of Control IOC",
        "IBatis Developed",
        "DML",
        "Implemented Spring IOC",
        "Internal Application",
        "Kubernetes",
        "NPM",
        "Angularjs Created",
        "Table Grid",
        "jQuery React",
        "Software Development",
        "Chicago",
        "JAXRS",
        "Developer California Bank Trust",
        "Zuul",
        "Hibernate Query Language HQL",
        "Hospital Management System",
        "Continuous Deployment",
        "React JS Unit",
        "Flux",
        "Pivotal Application Service Pivotal Container Service",
        "Angular 4",
        "Business Customers",
        "React Created",
        "JMS Java Messaging Service",
        "Jenkins GIT Jenkins AWS Services",
        "Joint System",
        "Apache Hadoop",
        "Maven",
        "Performed",
        "Node JS Express",
        "Site Minder",
        "Developed Unit",
        "JavaScript",
        "ANT",
        "UI",
        "Ehcache Exploring",
        "Selenium",
        "App Dynamics on Pivotal Cloud Foundry PCF",
        "Microsoft",
        "Created the design",
        "Utilized AWS S3",
        "Netflix Zuul API Gateway",
        "Employed Spring Boot",
        "Expertise",
        "Present Description United",
        "Karma Jasmine",
        "Mongoose Connector",
        "Responsibilities Coordinated",
        "jQuery",
        "JavaScript React",
        "REST",
        "the Spring Modules",
        "SOA Service Oriented Architecture",
        "UI Technologies",
        "HTML5CSS3",
        "Software Development Life Cycle",
        "EBS",
        "JSON JAXRS",
        "Node",
        "Bower NPM"
    ],
    "experience": "Experience in developing Web Applications with various Open Source frameworks JSF 12 Spring Framework 203040 Web Flow Jakarta Struts Framework 111220 Struts Validation and Tiles Frameworks Extensive knowledge on the Spring Modules like Spring IOC and Dependency Injection Spring MVC Spring Batch Spring Web Flow Spring Security Authentication and Authorization Spring AOP for Code Modularity and Spring Boot Developed and deployed Micro Services based applications using Spring Boot along with Spring Rest and Node Js with Express and Hapijs Spring boot with Hibernate combination where it has a predefined MVC architecture which made me to run all batch jobs easily and quickly Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Well experienced on implementing SOA Service Oriented Architecture using Spring REST to create REST resources that include several components like Jersey Framework spring Boot JAXRS and used WADL for documenting REST APIS Worked on SOAP protocol using JAX WS and integrated Apache CXF AXIS2 for WSRemote Messaging WS Security WS Policy and other specifications and automated documentation using Swagger and WSDL Experienced in configuring and deploying applications on different servers such as Apache Tomcat Web logic IBM WebSphere JBoss Loaded and transformed large sets of structured semi structured and unstructured data using HadoopBig Data concepts Experience in developing Map Reduce Programs using Apache Hadoop for analyzing the big data as per the requirement Expertise to interact with relational databases using ORM frameworks like Hibernate Spring Data JPA IBatis MyBatis Java Persistence API JPA Hibernates second level cache Ehcache Exploring with the Spark for improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Have good knowledge on different databases like PostgreSQL MySQL DB2 Oracle 13c11 g Microsoft SQL Server NoSQL DB Raven DB Mongo DB and Cassandra Couch DB Redis Dynamo DB and good experience in writing stored procedures functions and triggers using PLSQL in JDBC ODBC and in WebLogic server Experience in writing stored procedures triggers views and functions using PLSQL scripts and embedded DDL and DML statements in PLSQL blocks Experience in Developing User Interface UI Rich Web Applications using Front EndUser Interface UI Technologies like HTML45 XHTML DHTML CSS23using SASS and LESS Type Script Bootstrap and AJAX by managing all facets and pipelines of application Expertise in implementing the features of ES6 like arrows modules block scoping promises and enhanced object literals Experienced in working with MVVM design flow using clientside JavaScript framework Angular 2x4 X50 with NGRX Expertise in using shadow DOM which is a feature of Angular 5 to encapsulate visual behavior Good knowledge in providing support for passing messages between publishers and subscribers using observables as a part of Angular 5 Experience with features of Angular 4 like NgModules which configure the injector and the compiler and help organize related things together Proficient with Angular JS Backbone JS Ember JS Knockout JS Ext JS for customize front end app development and to achieve MVC design flow Well experienced in view rendering using jQuery React JS Handlebar JS and implementing React JS with Redux and Flux patterns to attain MVC functionality Well experienced in developing Dynamic Single Page Application SPA using MEAN MongoDB Express Angular Node full stack development tool Kit Good amount of hands on Experience in developing serverside JavaScript frameworks using Node JS Hapi JS Express JS to build event driven nonblocking IO model web applications Experience in installing dependencies using Package Managers like NPM BOWER and running automated task using Gulp Grunt and webpack for bundling minification loading images configuration Experience on UI testing with Karma Jasmine Protractor for Angular JS and Mocha Chai for React JS Unit tested web services using Junit JMeter Mockito Easy mock SpringJunitRunner Spock Test NG and hence achieved the goals of Test Driven Development TDD Well experienced in using various AWS Amazon Web Services Iaas Infrastructure as a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Expertise in using Microsoft Azure which is cloud computing service for building testing deploying and managing applications and services through a global network of Microsoft managed data centers Good Knowledge and Experience on implementing Spring Cloud Netflix OSS Stack for micro Services deployment Zuul for API Gateway for routing Hystix Circuit Breaker for latency and fault tolerance and Eureka for service registration Experience in applying JMS Java Messaging Service for reliable information exchange across Java applications using Apache Kafka RabbitMQ ActiveMQ and IBM MQ to communicate from Client to Server Good knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view using Elastic search ELK Knowledge of Elastic Search used for supporting distributed search by allowing start with one machine and extend further to other machines Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Implemented security functionality OAuth 20 Spring security SSL and site minder SSO secure authentication with LDAP OAuth2 for generating tokens in the application using Spring Security JWT for producing tokens Well experienced with build tools like Gradle Maven and ANT Implemented Docker container service build pipe line Jenkins Bamboo and GoCD Go Continuous Delivery to achieve Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Knowledge on various Docker components like Docker Engine Hub Machine Compose and Docker Registry Hands on experience in managing this Docker Container using Kubernetes with zero downtime deployment Used Kubernetes Linux container for deploying and scaling containerized applications Good practical experience with Javabased logging utility ie log4J and slf4j Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Good experience in using Software development methodologies like Agile Scrum Water Fall and Rational Application Development methodologies Experience in using Mule soft which is light weight Java based Enterprise Service Bus ESB which allows connecting applications together quickly and easily enabling them to exchange data Experience in using open source framework Apache Camel which for messageoriented middleware with a rulebased routing and mediation engine that provides a Java objectbased implementation of the Enterprise Integration Patterns EIP using an application programming interface to configure routing and mediation rules Expertise in working with JAVA8 features like Functional Interfaces Stream API Time API Transaction Management Exception Handling Collection API Lambda Expressions Work Experience Full Stack Developer United Airlines Chicago IL September 2018 to Present Description United airlines is a major united states airline with its headquarters at Chicago IL The airline operates over 5 400 flights daily Worked on whole Life cycle process of Software Development from the creation of Software Development Request SDR to Deployment which covers creation of design documents as well Worked in a team where some critical development requirements were handled without any additional support and met Qualitative delivery Responsibilities The backend use of Node JS Express JS MongoDB and Mongoose the complete MERN Stack to provide RESTful API Worked closely with internal clients to define business objectives project scope solution space and designdevelopment approach for various research applications Utilized Modernizer extensively to build HTML5CSS3 based page layouts that are crossbrowser compatible and standardscompliant Implemented client side Interface using React JS Build user interfaces differently by breaking them into components using React JS and used a real full featured programming language to render views with React JS Worked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using React JS Implemented application testability and diagnostics and fixing bugs with the help of REDUXReducers architecture Responsible for implementing UI mockups integrating third party react libraries and handlingcreating Redux store data Developed ReactRedux code using functional programming best practices to enable efficient pure function testing Experienced in working with Redux and Alt JS architecture Utilized createreactapp to launch product to stay update with the most current webpack and babel build configurations Handled Http Requests using Axios which supports Promise API functionality native to JS ES6 Extensively Used Jenkins as Continuous Integration tools to deploy the Spring Boot Microservices to Pivotal Cloud Foundry PCF using build pack Used Pivotal Cloud Foundry to quickly build deploy and update the applications Used JWT JSON web tokens mechanism for authentication and authorization security configurations using Node JS Used Node JS for the communication to the server through Restful API and added user validations permissions by using it Debugged the website using Chrome Developers tools and hardcoded the API into script for getting the information about merchants using Node Js Created and consumed RESTful API using Expresjs to provide centralized logic and reusable data retrieval build on top of Nodejs Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Spring JPA Involved in using Spring Data JPA Java Persistence API framework and JPA Specification criteria builder to work with dynamic queries in java Worked on writing SQL queries for PostgreSQL databases to build PLSQL functions store procedure triggers views and materialized views Utilized AWS S3 for images uploading and imageMagick for resizing for scalable performance Performed unit testing with Mocha and Chai JavaScript test framework Developed Unit test scripts using Junit and Spock Implemented logging using Log4j Designed and developed independent Microservices using Spring Boot Rest Controller model and are deployed on UNIX boxes Employed Spring Boot for initialize and bootstrapping the build configuration for the boot based web applications Development of cloud hosted web applications and REST APIs using Spring Boot with embedded Tomcat Extensively used Mocha and Chai JavaScript unit testing tools for testing JavaScript pages Worked with Babel and Webpack in application build and deployment processes Implemented testing with Junit Framework using Mockito Spring Junit Runner JMeter PowerMock and MockMVC Created plug ins for an inhouse data ingestion framework to extract data from multiple sources like Apache Kafka Database file systems and Messaging Queues Able to create and manage External Lookups in Splunk to match event data with description Configure and Install Splunk Enterprise and Apache Server for user and role authentication and SSO Created micro service plugin for service worker to read in info via RabbitMQ message bus to create and send SNS messages to AWS SNS topic Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul API Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Ran Log aggregations website Activity tracking and commit log for distributed system using Apache Kafka Deployed and monitored scalable infrastructure on Amazon web services specifically on AWS EC2 Used Cloud formation and launch configurations to automate repeatable provisioning of AWS resources for applications Environment React Babel Redux Axios Nodejs Webpack Pivotal cloud foundry Jenkins Docker Mongoose MongoDB Chai Mocha Spring boot Rabbit MQ Hibernate Apache kafka AWS Full Stack Developer Cerner Corporation Kansas City MO September 2017 to August 2018 Description Cerner corporation is an American supplier of Health information technology solutions services devices and hardware Cerners world headquarters campus is at north Kansas City MISSOURI My role is to analyze and modify all J2EEapplications and prepare required documents Responsibilities Coordinated with project managers business analyze new proposed ideas Requirements designed the integrated tool developed and implemented all the modules Developed User Interface using React JS HTML5 CSSCSS3SAAS Bootstrap 40 Redux MongoDB Responsible to style look and feel of the web page with LESS that extends CSS with dynamic behavior such as variable mixing operations and functions Implemented various screens for the front end using Reactjs and used various predefined components from NPM and Redux library Worked in using Reactjs Router Forms Animations Keys components Events and Flux concept Responsible for React UI and architecture Including Tree Building components library Table Grid and SlideView Implemented stable React components and standalone functions to be added to any future pages Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Nodejs Used Expressjs which is assertive fast essential and moderate web framework of Nodejs that helps manage a server and routes Postprocessors transpires tests etc based on build target Developed REST API services using Node JS Express JS BodyParse and other node modules to serve the web application with JSON data Developed readable and writable streams of Node JS to process the data from external means of the application Added ExcelBuilding to download the Tabular data in Excel Format using React Created a pipeline from Mongo DB cluster by configuring Mongoose Connector to sync with multiple sources like Elastic Search or another Mongo DB Used Pivotal Cloud Foundry the connectionservice binding details are injected from the deployed cloud platform itself Used a microservice architecture designed and developed RESTful web services using Apache CXF and Spring Boot framework Installed a single node Elasticsearch cluster to index MongoDB for use in a NodeJS Express on a native AWS EC2 Ubuntu 1404 instances Worked with build tools like Bower NPM and Grunt Maintaining and troubleshooting Cassandra Clusters this includes monitoring and performing troubleshooting as per requirements Designed developed and maintained PostgreSQL Data base architecture Used build tools to bundle the application through webpack and used Gulp for task automation of minification of Angular scripts Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration containerEKS focusing on highavailability fault tolerance and autoscaling Deploying the applications using Docker container services and building continuous integrationCI and continuous deploymentCD pipeline using Jenkins with GitHub Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch of the application data for analytics and visualization of the users login Employed the Single Sign On SSO authentication using Site Minder for logging to the application from different websites Developed unit test scripts using Karma and Jasmine for Angular 2 framework and Mocha for Node JS API end points Environment HTML5 CSS3 Express JS JavaScript React JS Redux Node JS Bootstrap REST API Load Balancer Mongoose Connector Mongo DB REST administrations Cassandra Docker Mocha Jasmine Karma Gulp SSO Authentication Web Pack Kubernetes Maven and Jenkins GIT Jenkins AWS Services Elastic Cloud ComputeEC2 Java DeveloperUI Developer California Bank Trust CA June 2015 to August 2017 Description National Bank Trust Company is one of the secured financial institutions that serves huge domain of customers Auto Billing System is a web application built on Spring MVC framework The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic recurring bill payment and Review Payments Responsibilities Developed and designed User Interface using JavaScript HTML CSS DOM XHTML AJAX Bootstrap Less AngularJS Created and enhanced websites for clients to increase online presence and sales by using some of the latest technologies including JavaScript CSS3 HTML JQuery UI handlebars Wrote application level code to perform clientside validation using jQuery and JavaScript Used Angular twoway binding and Implemented the search functionality for Internal Application using Angular JS Extensively used http service to make AJAX calls and consume JSON response across numerous services Involved in implementing the complete Application in the inbuild SOA Architecture with Angularjs Created a demo website running on a Nodejs using the Express framework Jade Angularjs for front end MVCtemplating Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Involved in Enhancement of existing application utilizing Angular JS created HTML navigation menu that is role based wherein menu items changes dynamically based on the values derived from the database in the form of XML Involved in the migration of YUI screens to intuitive EmberJS screens Worked with Core Java concepts like Collections Framework multithreading Memory management Used multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class Implemented REST web service calls using JSON JAXRS formats provided to be integrated on the front end Created both xml and java configuration files for setting up Apache CXF as JAXRS runtime Spring Data and Spring JDBC template technologies Used Spring ORM module to integrate with Hibernate Used ORM tool Hibernate along with spring framework to deal with database operations Involved in development of POJO classes and writing Hibernate query language HQL queries Implemented logging using log4j and Spring AOP Implemented various crossproject functionalities using Spring AOP Used Spring JTA Transaction manager to remove the dependencies on the container Implemented business layer of the application using Spring AOP Spring IOC Implemented the mechanism of logging and debugging with Log4j and JIRA Involved in Unit testing of the application using Junit Integrated Spring with Hibernate for data access from Oracle Database Creating and maintaining database links between different Oracle databases Used Hibernate mappings relationships between tables and entity classes to access and update information in the database Hibernate Query Language HQL was used to perform various queries in the database Involved in bug fixing during the System testing Joint System testing and User acceptance testing Deploying the applications and binding third party services like App Dynamics on Pivotal Cloud Foundry PCF Used Pivotal Cloud Foundry to quickly build deploy and update the applications Implemented Hibernate Second level of caching using Ehcache provider to get caching across session factory Involved in Application Development using various WebApplication Servers like Apache Tomcat Server IBM WebSphere Implemented code for marshall and unmarshall technique using JAXB to parse XML to string object and vice versa Documented the REST APIs using Swagger API for briefing the services involved in the application Implemented the function to send and receive AMQP messages on RabbitMQ synchronously and asynchronously and send JMS message on the edge device Developed test driven development code using JUnit and Mockito framework Used Karma Test runner and Jasmine Testing frameworks Primarily responsible for designing and implementing the application process flow with MuleSoft using Anypoint Studio and POST production support for all the APIs Java Developer Cloud Digital Media Hyderabad Telangana September 2012 to August 2014 Description This Project aims to help the employees of Cloud Digital Media to refer candidates for open positions in the organization Through this application admin can post new referral schemes for open positions in the organization and accordingly the employees can refer candidates and can get the benefit of cash rewards or gifts that are available under a referral scheme This project also has various reports which helps the admin to do a detailed analysis as per his criteria Responsibilities Implemented Model View Controller MVC2 Architecture using Jakarta Struts framework at presentation tier Used Struts frameworks and MVC design patterns to complete several projects with primarily focused on more complex areas of development including user interface design batch processing stored procedure development XML data exchange and integration Validated all forms using Struts validation framework Extensive use of Struts Framework for Controller components and view components Implemented Spring IOC for inter connection between modules in our application Created customized spring batch framework to run multiple processes step by step Implemented connection pooling framework to process claims concurrently with multiple threads using spring batch with different split conditions based on volume of claims Developed automated build files using Maven Created Data Access Objects to fetch data from database with SQL queries integrate them with IBatis Developed shell scripts used to monitor production applications start and stop custom Java applications in Linux environment Implemented batch processes for reporting applications and modules using Korn shell scripts on Oracle database Developed various helper classes which needed following core Java multithreaded programming and collection classes Categorized salient level rule to every business rules base on the business needs Use DROOLS as rules engine Extensively used Junit log4j for unit testing and logging Designed and coded application components in an agile environment Environment Struts Framework Spring IOC Spring Batch Maven Spring MVC iBatis SQL Linux Drools Multithreading Log4j Associate Software Engineer ICrea Infotech Hyderabad Telangana January 2012 to August 2012 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules with in this sub modules will maintain storing registering details of joining patient details and over all day activities maintains one database Responsibilities Developed the application using Java J2EE Structs JDBC Development resolving the issuesbugs Code suggestions Technical Issues and was involved in writing Stored Procedures Triggers and Cursors Created tables views Types complex join queries and functions and modifications to existing database structure as required for addition of new features Involved in Designing the Database Schema and writing the complex SQL queries Used Hibernate as the DAO layer to access the database Worked with Structs framework to design the MVC model for the application Worked on SOAP based Client and Server Web services Implemented Multithreading for handling multiple requests and for high performance Worked on the Java Collections API for handling the data objects between the business layers and the front end Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database and JAXB in the web services request data marshalling as well as unmarshaling process Used Java Messaging ServicesJMS for reliable and asynchronous exchange of important information Developed Unit test cases using JUnit Deployed application on Client Linux server Used ANT built tool for compiling and generating war file Developed web services for sending and getting data from different applications Used JDBC to access Oracle database for accessing the information Used Junit test cases for regression testing and integrated with ANT build Used Log4j to capture the log that includes runtime exceptions Worked closely with system analyst to understand the technical requirements of the project Created the design documents with use case diagram class diagrams and sequence diagrams using Rational Rose Environment Java J2EE Struct JDBC Hibernate JAXB SAXP XML Collections Multithreading SQL JMS Junit ANT Log4j Rational Rose Education Masters Skills Visual studio C Git Gradle Javascript Jenkins Json Php Svn Xml Bea Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxp Node Jquery React Nodejs Angular Additional Information Technical Skills Web Development HTML5 SASS CSS3 JavaScript PHP JSON JQUERY J2EE design pattern AJAX XML SOAP REST WADL WSDL JAXP JAXB JAXRS JAXWS S5 ES6 Databases MySQL ORACLE Mongo DB DB2 MS SQL SQL Server RDBMS Cassandra Couch DB Graph DB Amazon DynamoDB Programming Languages C C CORE JAVA J2EE SERVLETS JSP JDBC JAVA BEANS JSF JNDI EJB Data Structures SQL Operating System Windows Linux Unix MSDOS Software Tools Testing Tools BUILD Ant Bamboo GoCD Gradle Grunt Gulp Jenkins Maven Maven 2 Bower LOGGING Log4j Slf4j Commons Logging VERSION CONTROL Git SVN Clear Case Surround TESTING Protractor Jasmine along with Karma Mockito Mocha Selenium Spring JUnit 4 IDEs worked on Eclipse Sublime Text Net Beans IBM RAD Visual studio STS BEA Web Logic Workshop Frameworks AngularJS NodeJS BackboneJS D3 Struts JSF Spring MVC Hibernate iBatis JPA JDBC Application Servers Apache Tomcat Server BEA Web Logic IBM Web Sphere JBOSS Oracle Web Logic",
    "extracted_keywords": [
        "Stack",
        "Developer",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Developer",
        "United",
        "Airlines",
        "Chicago",
        "IL",
        "years",
        "stack",
        "development",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "web",
        "enterprise",
        "business",
        "applications",
        "JAVAJ2EE",
        "technologies",
        "Experience",
        "Web",
        "Applications",
        "Open",
        "Source",
        "JSF",
        "Spring",
        "Framework",
        "Web",
        "Flow",
        "Jakarta",
        "Struts",
        "Framework",
        "Struts",
        "Validation",
        "Tiles",
        "Frameworks",
        "knowledge",
        "Spring",
        "Modules",
        "Spring",
        "IOC",
        "Dependency",
        "Injection",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "Security",
        "Authentication",
        "Authorization",
        "Spring",
        "AOP",
        "Code",
        "Modularity",
        "Spring",
        "Boot",
        "Developed",
        "Micro",
        "Services",
        "applications",
        "Spring",
        "Boot",
        "Spring",
        "Rest",
        "Node",
        "Js",
        "Express",
        "Hapijs",
        "Spring",
        "boot",
        "Hibernate",
        "combination",
        "MVC",
        "architecture",
        "batch",
        "jobs",
        "exception",
        "handling",
        "Java",
        "Spring",
        "boot",
        "REST",
        "API",
        "use",
        "Exception",
        "Handler",
        "Controller",
        "Advice",
        "annotations",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "Spring",
        "REST",
        "REST",
        "resources",
        "components",
        "Jersey",
        "Framework",
        "spring",
        "Boot",
        "JAXRS",
        "WADL",
        "REST",
        "APIS",
        "SOAP",
        "protocol",
        "JAX",
        "WS",
        "Apache",
        "CXF",
        "AXIS2",
        "WSRemote",
        "Messaging",
        "WS",
        "Security",
        "WS",
        "Policy",
        "specifications",
        "documentation",
        "Swagger",
        "WSDL",
        "configuring",
        "applications",
        "servers",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Loaded",
        "sets",
        "data",
        "HadoopBig",
        "Data",
        "concepts",
        "Experience",
        "Map",
        "Reduce",
        "Programs",
        "Apache",
        "Hadoop",
        "data",
        "requirement",
        "Expertise",
        "databases",
        "ORM",
        "frameworks",
        "Hibernate",
        "Spring",
        "Data",
        "JPA",
        "IBatis",
        "MyBatis",
        "Java",
        "Persistence",
        "API",
        "JPA",
        "Hibernates",
        "level",
        "cache",
        "Ehcache",
        "Spark",
        "performance",
        "optimization",
        "algorithms",
        "Hadoop",
        "Spark",
        "Context",
        "SparkSQL",
        "Data",
        "Frame",
        "Pair",
        "RDDs",
        "Spark",
        "YARN",
        "knowledge",
        "databases",
        "PostgreSQL",
        "MySQL",
        "DB2",
        "Oracle",
        "13c11",
        "g",
        "Microsoft",
        "SQL",
        "Server",
        "NoSQL",
        "DB",
        "Raven",
        "DB",
        "Mongo",
        "DB",
        "Cassandra",
        "Couch",
        "DB",
        "Redis",
        "Dynamo",
        "DB",
        "experience",
        "procedures",
        "functions",
        "triggers",
        "PLSQL",
        "JDBC",
        "ODBC",
        "WebLogic",
        "server",
        "Experience",
        "procedures",
        "views",
        "functions",
        "PLSQL",
        "scripts",
        "DDL",
        "DML",
        "statements",
        "PLSQL",
        "blocks",
        "Experience",
        "User",
        "Interface",
        "UI",
        "Rich",
        "Web",
        "Applications",
        "Front",
        "EndUser",
        "Interface",
        "UI",
        "Technologies",
        "HTML45",
        "XHTML",
        "DHTML",
        "SASS",
        "Type",
        "Script",
        "Bootstrap",
        "AJAX",
        "facets",
        "pipelines",
        "application",
        "Expertise",
        "features",
        "arrows",
        "modules",
        "promises",
        "object",
        "literals",
        "MVVM",
        "design",
        "flow",
        "JavaScript",
        "framework",
        "Angular",
        "2x4",
        "X50",
        "NGRX",
        "Expertise",
        "shadow",
        "DOM",
        "feature",
        "Angular",
        "behavior",
        "knowledge",
        "support",
        "messages",
        "publishers",
        "subscribers",
        "observables",
        "part",
        "Angular",
        "Experience",
        "features",
        "Angular",
        "NgModules",
        "injector",
        "compiler",
        "things",
        "JS",
        "Backbone",
        "JS",
        "Ember",
        "JS",
        "Knockout",
        "JS",
        "Ext",
        "JS",
        "customize",
        "end",
        "app",
        "development",
        "MVC",
        "design",
        "flow",
        "view",
        "jQuery",
        "React",
        "JS",
        "Handlebar",
        "JS",
        "React",
        "JS",
        "Redux",
        "Flux",
        "patterns",
        "MVC",
        "functionality",
        "Dynamic",
        "Single",
        "Page",
        "Application",
        "SPA",
        "MEAN",
        "Express",
        "Angular",
        "Node",
        "stack",
        "development",
        "tool",
        "Kit",
        "amount",
        "hands",
        "Experience",
        "serverside",
        "JavaScript",
        "frameworks",
        "Node",
        "JS",
        "Hapi",
        "JS",
        "Express",
        "JS",
        "event",
        "IO",
        "model",
        "web",
        "applications",
        "Experience",
        "dependencies",
        "Package",
        "Managers",
        "NPM",
        "BOWER",
        "task",
        "Gulp",
        "Grunt",
        "minification",
        "loading",
        "images",
        "configuration",
        "Experience",
        "UI",
        "testing",
        "Karma",
        "Jasmine",
        "Protractor",
        "Angular",
        "JS",
        "Mocha",
        "Chai",
        "React",
        "JS",
        "Unit",
        "web",
        "services",
        "Junit",
        "JMeter",
        "Mockito",
        "Easy",
        "SpringJunitRunner",
        "Spock",
        "Test",
        "NG",
        "goals",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "Iaas",
        "Infrastructure",
        "Service",
        "Components",
        "EC2",
        "running",
        "applications",
        "machines",
        "S3",
        "Glacier",
        "term",
        "data",
        "EBS",
        "block",
        "level",
        "storage",
        "Elastic",
        "Cache",
        "Dynamo",
        "DB",
        "SQS",
        "message",
        "RDS",
        "database",
        "cloud",
        "Lambda",
        "server",
        "program",
        "functions",
        "Expertise",
        "Microsoft",
        "Azure",
        "computing",
        "service",
        "testing",
        "deploying",
        "managing",
        "applications",
        "services",
        "network",
        "Microsoft",
        "data",
        "centers",
        "Good",
        "Knowledge",
        "Experience",
        "Spring",
        "Cloud",
        "Netflix",
        "OSS",
        "Stack",
        "micro",
        "Services",
        "deployment",
        "Zuul",
        "API",
        "Gateway",
        "Hystix",
        "Circuit",
        "Breaker",
        "latency",
        "tolerance",
        "Eureka",
        "service",
        "registration",
        "Experience",
        "JMS",
        "Java",
        "Messaging",
        "Service",
        "information",
        "exchange",
        "Java",
        "applications",
        "Apache",
        "Kafka",
        "ActiveMQ",
        "IBM",
        "MQ",
        "Client",
        "Server",
        "knowledge",
        "Splunk",
        "architecture",
        "components",
        "Expert",
        "Splunk",
        "Development",
        "Configuration",
        "Administration",
        "Kibana",
        "search",
        "ELK",
        "Knowledge",
        "Elastic",
        "Search",
        "search",
        "start",
        "machine",
        "machines",
        "Hands",
        "experience",
        "implementation",
        "PCF",
        "Cloud",
        "Foundry",
        "Paas",
        "Platform",
        "Service",
        "services",
        "Pivotal",
        "Application",
        "Service",
        "Pivotal",
        "Container",
        "Service",
        "Pivotal",
        "Functional",
        "Service",
        "applications",
        "cloud",
        "security",
        "functionality",
        "OAuth",
        "Spring",
        "security",
        "SSL",
        "site",
        "minder",
        "SSO",
        "authentication",
        "LDAP",
        "OAuth2",
        "tokens",
        "application",
        "Spring",
        "Security",
        "JWT",
        "tokens",
        "build",
        "tools",
        "Gradle",
        "Maven",
        "ANT",
        "Implemented",
        "Docker",
        "container",
        "service",
        "build",
        "pipe",
        "line",
        "Jenkins",
        "Bamboo",
        "GoCD",
        "Continuous",
        "Delivery",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "cloud",
        "Knowledge",
        "Docker",
        "components",
        "Docker",
        "Engine",
        "Hub",
        "Machine",
        "Compose",
        "Docker",
        "Registry",
        "Hands",
        "experience",
        "Docker",
        "Container",
        "Kubernetes",
        "downtime",
        "deployment",
        "Kubernetes",
        "Linux",
        "container",
        "applications",
        "experience",
        "Javabased",
        "utility",
        "log4J",
        "slf4j",
        "knowledge",
        "Drools",
        "Rule",
        "Engines",
        "BRMS",
        "Business",
        "Rules",
        "Management",
        "System",
        "Experience",
        "Java",
        "Thread",
        "Dump",
        "Analysis",
        "thread",
        "dump",
        "techniques",
        "knowledge",
        "Application",
        "monitoring",
        "tools",
        "New",
        "Relic",
        "Dyna",
        "Trace",
        "Strong",
        "Knowledge",
        "integration",
        "testing",
        "testing",
        "applications",
        "Selenium",
        "Cucumber",
        "experience",
        "Software",
        "development",
        "methodologies",
        "Agile",
        "Scrum",
        "Water",
        "Fall",
        "Rational",
        "Application",
        "Development",
        "methodologies",
        "Experience",
        "Mule",
        "weight",
        "Java",
        "Enterprise",
        "Service",
        "Bus",
        "ESB",
        "applications",
        "data",
        "Experience",
        "source",
        "framework",
        "Apache",
        "Camel",
        "middleware",
        "routing",
        "mediation",
        "engine",
        "Java",
        "implementation",
        "Enterprise",
        "Integration",
        "Patterns",
        "EIP",
        "application",
        "programming",
        "interface",
        "configure",
        "routing",
        "mediation",
        "Expertise",
        "JAVA8",
        "features",
        "Interfaces",
        "Stream",
        "API",
        "Time",
        "API",
        "Transaction",
        "Management",
        "Exception",
        "Handling",
        "Collection",
        "API",
        "Lambda",
        "Expressions",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Developer",
        "United",
        "Airlines",
        "Chicago",
        "IL",
        "September",
        "Present",
        "Description",
        "United",
        "airlines",
        "united",
        "states",
        "airline",
        "headquarters",
        "Chicago",
        "IL",
        "airline",
        "flights",
        "Life",
        "cycle",
        "process",
        "Software",
        "Development",
        "creation",
        "Software",
        "Development",
        "Request",
        "SDR",
        "Deployment",
        "creation",
        "design",
        "documents",
        "team",
        "development",
        "requirements",
        "support",
        "Qualitative",
        "delivery",
        "Responsibilities",
        "use",
        "Node",
        "JS",
        "Express",
        "JS",
        "MongoDB",
        "MERN",
        "Stack",
        "API",
        "clients",
        "business",
        "objectives",
        "project",
        "scope",
        "solution",
        "space",
        "designdevelopment",
        "approach",
        "research",
        "applications",
        "Modernizer",
        "HTML5CSS3",
        "page",
        "layouts",
        "crossbrowser",
        "client",
        "side",
        "Interface",
        "React",
        "JS",
        "Build",
        "user",
        "interfaces",
        "components",
        "React",
        "JS",
        "programming",
        "language",
        "views",
        "React",
        "JS",
        "design",
        "ISOMORPHIC",
        "website",
        "Tablets",
        "users",
        "React",
        "JS",
        "application",
        "testability",
        "diagnostics",
        "bugs",
        "help",
        "REDUXReducers",
        "UI",
        "mockups",
        "party",
        "react",
        "libraries",
        "Redux",
        "store",
        "data",
        "Developed",
        "ReactRedux",
        "code",
        "programming",
        "practices",
        "function",
        "testing",
        "Redux",
        "Alt",
        "JS",
        "architecture",
        "createreactapp",
        "product",
        "update",
        "webpack",
        "babel",
        "build",
        "configurations",
        "Http",
        "Requests",
        "Axios",
        "Promise",
        "API",
        "functionality",
        "JS",
        "ES6",
        "Jenkins",
        "Continuous",
        "Integration",
        "tools",
        "Spring",
        "Boot",
        "Microservices",
        "Cloud",
        "Foundry",
        "PCF",
        "build",
        "pack",
        "Cloud",
        "Foundry",
        "deploy",
        "applications",
        "JWT",
        "JSON",
        "web",
        "tokens",
        "mechanism",
        "authentication",
        "authorization",
        "security",
        "configurations",
        "Node",
        "JS",
        "Node",
        "JS",
        "communication",
        "server",
        "API",
        "user",
        "permissions",
        "website",
        "Chrome",
        "Developers",
        "tools",
        "API",
        "script",
        "information",
        "merchants",
        "Node",
        "Js",
        "Created",
        "API",
        "Expresjs",
        "logic",
        "data",
        "retrieval",
        "build",
        "top",
        "Nodejs",
        "J2EE",
        "design",
        "Spring",
        "Inversion",
        "Control",
        "IOC",
        "architecture",
        "Spring",
        "JPA",
        "Spring",
        "Data",
        "JPA",
        "Java",
        "Persistence",
        "API",
        "framework",
        "JPA",
        "Specification",
        "criteria",
        "builder",
        "queries",
        "Worked",
        "SQL",
        "queries",
        "PostgreSQL",
        "PLSQL",
        "functions",
        "store",
        "procedure",
        "triggers",
        "views",
        "views",
        "AWS",
        "S3",
        "images",
        "performance",
        "Performed",
        "unit",
        "Mocha",
        "Chai",
        "JavaScript",
        "test",
        "framework",
        "Developed",
        "Unit",
        "test",
        "scripts",
        "Junit",
        "Spock",
        "Log4j",
        "Microservices",
        "Spring",
        "Boot",
        "Rest",
        "Controller",
        "model",
        "UNIX",
        "boxes",
        "Employed",
        "Spring",
        "Boot",
        "initialize",
        "build",
        "configuration",
        "boot",
        "web",
        "applications",
        "Development",
        "cloud",
        "web",
        "applications",
        "REST",
        "APIs",
        "Spring",
        "Boot",
        "Tomcat",
        "Mocha",
        "Chai",
        "JavaScript",
        "unit",
        "testing",
        "tools",
        "JavaScript",
        "pages",
        "Babel",
        "Webpack",
        "application",
        "build",
        "deployment",
        "processes",
        "testing",
        "Junit",
        "Framework",
        "Mockito",
        "Spring",
        "Junit",
        "Runner",
        "JMeter",
        "PowerMock",
        "MockMVC",
        "Created",
        "plug",
        "ins",
        "inhouse",
        "data",
        "ingestion",
        "framework",
        "data",
        "sources",
        "Apache",
        "Kafka",
        "Database",
        "file",
        "systems",
        "Queues",
        "External",
        "Lookups",
        "Splunk",
        "event",
        "data",
        "description",
        "Configure",
        "Install",
        "Splunk",
        "Enterprise",
        "Apache",
        "Server",
        "user",
        "role",
        "authentication",
        "SSO",
        "Created",
        "micro",
        "service",
        "plugin",
        "service",
        "worker",
        "info",
        "RabbitMQ",
        "message",
        "bus",
        "SNS",
        "messages",
        "AWS",
        "SNS",
        "topic",
        "Spring",
        "CloudNetflix",
        "OSS",
        "Stack",
        "Ribbon",
        "load",
        "Netflix",
        "Zuul",
        "API",
        "Gateway",
        "Eureka",
        "service",
        "registry",
        "proxy",
        "infrastructure",
        "Hystrix",
        "Circuit",
        "Breaker",
        "fault",
        "tolerance",
        "Ran",
        "Log",
        "aggregations",
        "Activity",
        "tracking",
        "log",
        "system",
        "Apache",
        "Kafka",
        "Deployed",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "EC2",
        "Cloud",
        "formation",
        "launch",
        "configurations",
        "provisioning",
        "AWS",
        "resources",
        "applications",
        "Environment",
        "React",
        "Babel",
        "Redux",
        "Axios",
        "Nodejs",
        "Webpack",
        "cloud",
        "foundry",
        "Jenkins",
        "Docker",
        "Mongoose",
        "Chai",
        "Mocha",
        "Spring",
        "boot",
        "Rabbit",
        "MQ",
        "Hibernate",
        "Apache",
        "AWS",
        "Full",
        "Stack",
        "Developer",
        "Cerner",
        "Corporation",
        "Kansas",
        "City",
        "MO",
        "September",
        "August",
        "Description",
        "Cerner",
        "corporation",
        "supplier",
        "Health",
        "information",
        "technology",
        "solutions",
        "services",
        "devices",
        "hardware",
        "Cerners",
        "world",
        "headquarters",
        "campus",
        "north",
        "Kansas",
        "City",
        "MISSOURI",
        "role",
        "J2EEapplications",
        "documents",
        "Responsibilities",
        "project",
        "managers",
        "business",
        "ideas",
        "Requirements",
        "tool",
        "modules",
        "Developed",
        "User",
        "Interface",
        "React",
        "JS",
        "HTML5",
        "CSSCSS3SAAS",
        "Bootstrap",
        "Redux",
        "MongoDB",
        "style",
        "web",
        "page",
        "CSS",
        "behavior",
        "mixing",
        "operations",
        "functions",
        "screens",
        "end",
        "Reactjs",
        "components",
        "NPM",
        "Redux",
        "library",
        "Reactjs",
        "Router",
        "Forms",
        "Animations",
        "Keys",
        "Events",
        "Flux",
        "concept",
        "React",
        "UI",
        "architecture",
        "Tree",
        "Building",
        "components",
        "library",
        "Table",
        "Grid",
        "React",
        "components",
        "functions",
        "pages",
        "dashboard",
        "calls",
        "Business",
        "Customers",
        "Count",
        "Flags",
        "Realtime",
        "graphs",
        "Analytical",
        "Reporting",
        "Nodejs",
        "Expressjs",
        "web",
        "framework",
        "Nodejs",
        "server",
        "Postprocessors",
        "tests",
        "build",
        "target",
        "Developed",
        "REST",
        "API",
        "services",
        "Node",
        "JS",
        "Express",
        "JS",
        "BodyParse",
        "node",
        "modules",
        "web",
        "application",
        "data",
        "streams",
        "Node",
        "JS",
        "data",
        "means",
        "application",
        "Added",
        "ExcelBuilding",
        "Tabular",
        "data",
        "Excel",
        "Format",
        "React",
        "pipeline",
        "Mongo",
        "DB",
        "cluster",
        "Mongoose",
        "Connector",
        "sources",
        "Elastic",
        "Search",
        "Mongo",
        "DB",
        "Cloud",
        "Foundry",
        "connectionservice",
        "details",
        "cloud",
        "platform",
        "microservice",
        "architecture",
        "web",
        "services",
        "Apache",
        "CXF",
        "Spring",
        "Boot",
        "framework",
        "node",
        "Elasticsearch",
        "cluster",
        "index",
        "MongoDB",
        "use",
        "NodeJS",
        "Express",
        "AWS",
        "EC2",
        "Ubuntu",
        "instances",
        "build",
        "tools",
        "Bower",
        "NPM",
        "Grunt",
        "Maintaining",
        "Cassandra",
        "Clusters",
        "troubleshooting",
        "requirements",
        "PostgreSQL",
        "Data",
        "base",
        "architecture",
        "build",
        "tools",
        "application",
        "webpack",
        "Gulp",
        "task",
        "automation",
        "minification",
        "scripts",
        "application",
        "AWS",
        "stack",
        "EC2",
        "Mongo",
        "DB",
        "Docker",
        "Kubernetes",
        "Orchestration",
        "containerEKS",
        "highavailability",
        "fault",
        "tolerance",
        "applications",
        "Docker",
        "container",
        "services",
        "integrationCI",
        "pipeline",
        "Jenkins",
        "GitHub",
        "Kibana",
        "logging",
        "monitoring",
        "Elasticsearch",
        "application",
        "data",
        "analytics",
        "visualization",
        "users",
        "Employed",
        "Sign",
        "SSO",
        "authentication",
        "Site",
        "Minder",
        "application",
        "websites",
        "unit",
        "test",
        "scripts",
        "Karma",
        "Jasmine",
        "Angular",
        "framework",
        "Mocha",
        "Node",
        "JS",
        "API",
        "end",
        "Environment",
        "HTML5",
        "CSS3",
        "Express",
        "JS",
        "JavaScript",
        "React",
        "JS",
        "Redux",
        "Node",
        "JS",
        "Bootstrap",
        "REST",
        "API",
        "Load",
        "Balancer",
        "Mongoose",
        "Connector",
        "Mongo",
        "DB",
        "REST",
        "administrations",
        "Cassandra",
        "Docker",
        "Mocha",
        "Jasmine",
        "Karma",
        "Gulp",
        "SSO",
        "Authentication",
        "Web",
        "Pack",
        "Kubernetes",
        "Maven",
        "Jenkins",
        "GIT",
        "Jenkins",
        "AWS",
        "Services",
        "Elastic",
        "Cloud",
        "ComputeEC2",
        "Java",
        "DeveloperUI",
        "Developer",
        "California",
        "Bank",
        "Trust",
        "CA",
        "June",
        "August",
        "Description",
        "National",
        "Bank",
        "Trust",
        "Company",
        "institutions",
        "domain",
        "customers",
        "Auto",
        "Billing",
        "System",
        "web",
        "application",
        "Spring",
        "MVC",
        "framework",
        "scope",
        "project",
        "design",
        "development",
        "Web",
        "application",
        "billing",
        "services",
        "application",
        "functionalities",
        "creation",
        "account",
        "payment",
        "bills",
        "bill",
        "payment",
        "Review",
        "Payments",
        "Responsibilities",
        "User",
        "Interface",
        "JavaScript",
        "HTML",
        "CSS",
        "DOM",
        "XHTML",
        "AJAX",
        "Bootstrap",
        "websites",
        "clients",
        "presence",
        "sales",
        "technologies",
        "JavaScript",
        "CSS3",
        "HTML",
        "JQuery",
        "UI",
        "handlebars",
        "Wrote",
        "application",
        "level",
        "code",
        "validation",
        "jQuery",
        "JavaScript",
        "twoway",
        "search",
        "functionality",
        "Internal",
        "Application",
        "Angular",
        "JS",
        "http",
        "service",
        "AJAX",
        "calls",
        "response",
        "services",
        "Application",
        "SOA",
        "Architecture",
        "Angularjs",
        "demo",
        "website",
        "Nodejs",
        "Express",
        "framework",
        "Jade",
        "Angularjs",
        "end",
        "Configured",
        "Express",
        "JS",
        "node",
        "http",
        "framework",
        "middlewares",
        "HTTP",
        "requests",
        "frontend",
        "web",
        "packs",
        "starter",
        "boiler",
        "plates",
        "Enhancement",
        "application",
        "Angular",
        "JS",
        "HTML",
        "navigation",
        "menu",
        "role",
        "menu",
        "items",
        "changes",
        "values",
        "database",
        "form",
        "XML",
        "migration",
        "YUI",
        "screens",
        "EmberJS",
        "screens",
        "Core",
        "Java",
        "concepts",
        "Collections",
        "Framework",
        "Memory",
        "management",
        "programming",
        "performance",
        "Singleton",
        "design",
        "pattern",
        "Hibernate",
        "Utility",
        "class",
        "REST",
        "web",
        "service",
        "JSON",
        "JAXRS",
        "formats",
        "end",
        "xml",
        "configuration",
        "files",
        "Apache",
        "CXF",
        "JAXRS",
        "runtime",
        "Spring",
        "Data",
        "Spring",
        "JDBC",
        "template",
        "technologies",
        "Spring",
        "ORM",
        "module",
        "Hibernate",
        "ORM",
        "tool",
        "Hibernate",
        "spring",
        "framework",
        "database",
        "operations",
        "development",
        "POJO",
        "classes",
        "Hibernate",
        "query",
        "language",
        "HQL",
        "queries",
        "log4j",
        "Spring",
        "AOP",
        "crossproject",
        "functionalities",
        "Spring",
        "AOP",
        "Spring",
        "JTA",
        "Transaction",
        "manager",
        "dependencies",
        "container",
        "business",
        "layer",
        "application",
        "Spring",
        "AOP",
        "Spring",
        "IOC",
        "mechanism",
        "Log4j",
        "JIRA",
        "Unit",
        "testing",
        "application",
        "Junit",
        "Integrated",
        "Spring",
        "Hibernate",
        "data",
        "access",
        "Oracle",
        "Database",
        "Creating",
        "database",
        "links",
        "Oracle",
        "Hibernate",
        "mappings",
        "relationships",
        "tables",
        "entity",
        "classes",
        "information",
        "database",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "queries",
        "database",
        "bug",
        "System",
        "Joint",
        "System",
        "testing",
        "User",
        "acceptance",
        "testing",
        "applications",
        "party",
        "services",
        "App",
        "Dynamics",
        "Cloud",
        "Foundry",
        "PCF",
        "Cloud",
        "Foundry",
        "deploy",
        "applications",
        "Hibernate",
        "level",
        "Ehcache",
        "provider",
        "session",
        "factory",
        "Application",
        "Development",
        "WebApplication",
        "Servers",
        "Apache",
        "Tomcat",
        "Server",
        "IBM",
        "WebSphere",
        "code",
        "marshall",
        "technique",
        "JAXB",
        "XML",
        "string",
        "object",
        "vice",
        "REST",
        "APIs",
        "Swagger",
        "API",
        "services",
        "application",
        "function",
        "AMQP",
        "messages",
        "RabbitMQ",
        "JMS",
        "message",
        "edge",
        "device",
        "test",
        "development",
        "code",
        "JUnit",
        "Mockito",
        "framework",
        "Karma",
        "Test",
        "runner",
        "Jasmine",
        "Testing",
        "frameworks",
        "application",
        "process",
        "flow",
        "MuleSoft",
        "Anypoint",
        "Studio",
        "POST",
        "production",
        "support",
        "APIs",
        "Java",
        "Developer",
        "Cloud",
        "Digital",
        "Media",
        "Hyderabad",
        "Telangana",
        "September",
        "August",
        "Description",
        "Project",
        "employees",
        "Cloud",
        "Digital",
        "Media",
        "candidates",
        "positions",
        "organization",
        "application",
        "admin",
        "schemes",
        "positions",
        "organization",
        "employees",
        "candidates",
        "benefit",
        "cash",
        "rewards",
        "gifts",
        "scheme",
        "project",
        "reports",
        "admin",
        "analysis",
        "criteria",
        "Responsibilities",
        "Model",
        "View",
        "Controller",
        "MVC2",
        "Architecture",
        "Jakarta",
        "Struts",
        "framework",
        "presentation",
        "tier",
        "Struts",
        "frameworks",
        "MVC",
        "design",
        "patterns",
        "projects",
        "areas",
        "development",
        "user",
        "interface",
        "design",
        "batch",
        "processing",
        "procedure",
        "development",
        "XML",
        "data",
        "exchange",
        "integration",
        "forms",
        "Struts",
        "validation",
        "framework",
        "use",
        "Struts",
        "Framework",
        "Controller",
        "components",
        "view",
        "components",
        "Spring",
        "IOC",
        "connection",
        "modules",
        "application",
        "spring",
        "batch",
        "framework",
        "processes",
        "step",
        "step",
        "connection",
        "framework",
        "process",
        "claims",
        "threads",
        "spring",
        "batch",
        "split",
        "conditions",
        "volume",
        "claims",
        "build",
        "files",
        "Maven",
        "Created",
        "Data",
        "Access",
        "data",
        "database",
        "SQL",
        "queries",
        "IBatis",
        "shell",
        "scripts",
        "production",
        "applications",
        "custom",
        "Java",
        "applications",
        "Linux",
        "environment",
        "batch",
        "processes",
        "applications",
        "modules",
        "Korn",
        "shell",
        "scripts",
        "Oracle",
        "database",
        "helper",
        "classes",
        "core",
        "Java",
        "programming",
        "collection",
        "classes",
        "salient",
        "level",
        "rule",
        "business",
        "rules",
        "base",
        "business",
        "Use",
        "DROOLS",
        "rules",
        "engine",
        "Junit",
        "log4j",
        "unit",
        "testing",
        "application",
        "components",
        "environment",
        "Environment",
        "Struts",
        "Framework",
        "Spring",
        "IOC",
        "Spring",
        "Batch",
        "Maven",
        "Spring",
        "MVC",
        "iBatis",
        "SQL",
        "Linux",
        "Drools",
        "Multithreading",
        "Log4j",
        "Associate",
        "Software",
        "Engineer",
        "ICrea",
        "Infotech",
        "Hyderabad",
        "Telangana",
        "January",
        "August",
        "Description",
        "Hospital",
        "Management",
        "System",
        "Super",
        "Specialty",
        "Hospital",
        "package",
        "activities",
        "servicing",
        "system",
        "package",
        "modules",
        "Administration",
        "Patient",
        "Care",
        "System",
        "Health",
        "Services",
        "Auxiliary",
        "Services",
        "module",
        "sub",
        "modules",
        "sub",
        "modules",
        "details",
        "details",
        "day",
        "activities",
        "database",
        "Responsibilities",
        "application",
        "Java",
        "J2EE",
        "JDBC",
        "Development",
        "issuesbugs",
        "Code",
        "suggestions",
        "Technical",
        "Issues",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "tables",
        "Types",
        "join",
        "queries",
        "functions",
        "modifications",
        "database",
        "structure",
        "addition",
        "features",
        "Designing",
        "Database",
        "Schema",
        "SQL",
        "queries",
        "Hibernate",
        "DAO",
        "layer",
        "database",
        "Structs",
        "framework",
        "MVC",
        "model",
        "application",
        "SOAP",
        "Client",
        "Server",
        "Web",
        "services",
        "Multithreading",
        "requests",
        "performance",
        "Java",
        "Collections",
        "API",
        "data",
        "objects",
        "business",
        "layers",
        "end",
        "JAXB",
        "SAXP",
        "XML",
        "Schema",
        "data",
        "XML",
        "format",
        "data",
        "XML",
        "format",
        "database",
        "JAXB",
        "web",
        "services",
        "data",
        "unmarshaling",
        "process",
        "Java",
        "Messaging",
        "ServicesJMS",
        "exchange",
        "information",
        "Developed",
        "Unit",
        "test",
        "cases",
        "JUnit",
        "application",
        "Client",
        "Linux",
        "server",
        "ANT",
        "tool",
        "war",
        "file",
        "web",
        "services",
        "data",
        "applications",
        "JDBC",
        "Oracle",
        "database",
        "information",
        "Junit",
        "test",
        "cases",
        "regression",
        "testing",
        "ANT",
        "Log4j",
        "log",
        "runtime",
        "exceptions",
        "system",
        "analyst",
        "requirements",
        "project",
        "design",
        "documents",
        "use",
        "case",
        "diagram",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "Rational",
        "Rose",
        "Environment",
        "Java",
        "J2EE",
        "Struct",
        "JDBC",
        "Hibernate",
        "JAXB",
        "SAXP",
        "XML",
        "Collections",
        "Multithreading",
        "SQL",
        "JMS",
        "Junit",
        "ANT",
        "Log4j",
        "Rational",
        "Rose",
        "Education",
        "Masters",
        "Skills",
        "Visual",
        "studio",
        "C",
        "Git",
        "Gradle",
        "Javascript",
        "Jenkins",
        "Json",
        "Php",
        "Svn",
        "Xml",
        "Bea",
        "Eclipse",
        "Ejb",
        "J2ee",
        "Java",
        "Hibernate",
        "Spring",
        "Jax",
        "Jaxb",
        "Jaxp",
        "Node",
        "Jquery",
        "React",
        "Nodejs",
        "Angular",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Web",
        "Development",
        "HTML5",
        "SASS",
        "CSS3",
        "JavaScript",
        "PHP",
        "JSON",
        "JQUERY",
        "J2EE",
        "design",
        "pattern",
        "AJAX",
        "XML",
        "SOAP",
        "REST",
        "WSDL",
        "JAXP",
        "JAXB",
        "JAXRS",
        "JAXWS",
        "S5",
        "ES6",
        "Databases",
        "MySQL",
        "ORACLE",
        "Mongo",
        "DB",
        "DB2",
        "MS",
        "SQL",
        "SQL",
        "Server",
        "RDBMS",
        "Cassandra",
        "Couch",
        "DB",
        "Graph",
        "DB",
        "Amazon",
        "DynamoDB",
        "Programming",
        "Languages",
        "C",
        "C",
        "CORE",
        "JAVA",
        "J2EE",
        "SERVLETS",
        "JSP",
        "JDBC",
        "JSF",
        "JNDI",
        "EJB",
        "Data",
        "Structures",
        "SQL",
        "Operating",
        "System",
        "Windows",
        "Linux",
        "Unix",
        "MSDOS",
        "Software",
        "Tools",
        "Testing",
        "Tools",
        "BUILD",
        "Ant",
        "Bamboo",
        "GoCD",
        "Gradle",
        "Grunt",
        "Gulp",
        "Jenkins",
        "Maven",
        "Maven",
        "Bower",
        "LOGGING",
        "Log4j",
        "Slf4j",
        "Commons",
        "Logging",
        "VERSION",
        "CONTROL",
        "Git",
        "SVN",
        "Clear",
        "Case",
        "Surround",
        "TESTING",
        "Protractor",
        "Jasmine",
        "Karma",
        "Mockito",
        "Mocha",
        "Selenium",
        "Spring",
        "JUnit",
        "IDEs",
        "Eclipse",
        "Sublime",
        "Text",
        "Net",
        "Beans",
        "IBM",
        "RAD",
        "Visual",
        "studio",
        "STS",
        "BEA",
        "Web",
        "Logic",
        "Workshop",
        "Frameworks",
        "NodeJS",
        "BackboneJS",
        "D3",
        "Struts",
        "JSF",
        "Spring",
        "MVC",
        "Hibernate",
        "iBatis",
        "JPA",
        "JDBC",
        "Application",
        "Servers",
        "Apache",
        "Tomcat",
        "Server",
        "BEA",
        "Web",
        "Logic",
        "IBM",
        "Web",
        "Sphere",
        "JBOSS",
        "Oracle",
        "Web",
        "Logic"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:30:08.808996",
    "resume_data": "Full Stack Developer Full Stack span lDeveloperspan Full Stack Developer United Airlines Chicago IL Around 7 years of full stack development experience in all phases of Software Development Life Cycle SDLC which includes Analysis Design Development Implementation and Testing of web based enterprise business applications using the JAVAJ2EE technologies Experience in developing Web Applications with various Open Source frameworks JSF 12 Spring Framework 203040 Web Flow Jakarta Struts Framework 111220 Struts Validation and Tiles Frameworks Extensive knowledge on the Spring Modules like Spring IOC and Dependency Injection Spring MVC Spring Batch Spring Web Flow Spring Security Authentication and Authorization Spring AOP for Code Modularity and Spring Boot Developed and deployed Micro Services based applications using Spring Boot along with Spring Rest and Node Js with Express and Hapijs Spring boot with Hibernate combination where it has a predefined MVC architecture which made me to run all batch jobs easily and quickly Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Well experienced on implementing SOA Service Oriented Architecture using Spring REST to create REST resources that include several components like Jersey Framework spring Boot JAXRS and used WADL for documenting REST APIS Worked on SOAP protocol using JAX WS and integrated Apache CXF AXIS2 for WSRemote Messaging WS Security WS Policy and other specifications and automated documentation using Swagger and WSDL Experienced in configuring and deploying applications on different servers such as Apache Tomcat Web logic IBM WebSphere JBoss Loaded and transformed large sets of structured semi structured and unstructured data using HadoopBig Data concepts Experience in developing Map Reduce Programs using Apache Hadoop for analyzing the big data as per the requirement Expertise to interact with relational databases using ORM frameworks like Hibernate Spring Data JPA IBatis MyBatis Java Persistence API JPA Hibernates second level cache Ehcache Exploring with the Spark for improving the performance and optimization of the existing algorithms in Hadoop using Spark Context SparkSQL Data Frame Pair RDDs Spark YARN Have good knowledge on different databases like PostgreSQL MySQL DB2 Oracle 13c11g Microsoft SQL Server NoSQL DB Raven DB Mongo DB and Cassandra Couch DB Redis Dynamo DB and good experience in writing stored procedures functions and triggers using PLSQL in JDBC ODBC and in WebLogic server Experience in writing stored procedures triggers views and functions using PLSQL scripts and embedded DDL and DML statements in PLSQL blocks Experience in Developing User Interface UI Rich Web Applications using Front EndUser Interface UI Technologies like HTML45 XHTML DHTML CSS23using SASS and LESS Type Script Bootstrap and AJAX by managing all facets and pipelines of application Expertise in implementing the features of ES6 like arrows modules block scoping promises and enhanced object literals Experienced in working with MVVM design flow using clientside JavaScript framework Angular 2x4 X50 with NGRX Expertise in using shadow DOM which is a feature of Angular 5 to encapsulate visual behavior Good knowledge in providing support for passing messages between publishers and subscribers using observables as a part of Angular 5 Experience with features of Angular 4 like NgModules which configure the injector and the compiler and help organize related things together Proficient with Angular JS Backbone JS Ember JS Knockout JS Ext JS for customize front end app development and to achieve MVC design flow Well experienced in view rendering using jQuery React JS Handlebar JS and implementing React JS with Redux and Flux patterns to attain MVC functionality Well experienced in developing Dynamic Single Page Application SPA using MEAN MongoDB Express Angular Node full stack development tool Kit Good amount of hands on Experience in developing serverside JavaScript frameworks using Node JS Hapi JS Express JS to build event driven nonblocking IO model web applications Experience in installing dependencies using Package Managers like NPM BOWER and running automated task using Gulp Grunt and webpack for bundling minification loading images configuration Experience on UI testing with Karma Jasmine Protractor for Angular JS and Mocha Chai for React JS Unit tested web services using Junit JMeter Mockito Easy mock SpringJunitRunner Spock Test NG and hence achieved the goals of Test Driven Development TDD Well experienced in using various AWS Amazon Web Services Iaas Infrastructure as a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Expertise in using Microsoft Azure which is cloud computing service for building testing deploying and managing applications and services through a global network of Microsoft managed data centers Good Knowledge and Experience on implementing Spring Cloud Netflix OSS Stack for micro Services deployment Zuul for API Gateway for routing Hystix Circuit Breaker for latency and fault tolerance and Eureka for service registration Experience in applying JMS Java Messaging Service for reliable information exchange across Java applications using Apache Kafka RabbitMQ ActiveMQ and IBM MQ to communicate from Client to Server Good knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view using Elastic search ELK Knowledge of Elastic Search used for supporting distributed search by allowing start with one machine and extend further to other machines Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Implemented security functionality OAuth 20 Spring security SSL and site minder SSO secure authentication with LDAP OAuth2 for generating tokens in the application using Spring Security JWT for producing tokens Well experienced with build tools like Gradle Maven and ANT Implemented Docker container service build pipe line Jenkins Bamboo and GoCD Go Continuous Delivery to achieve Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Knowledge on various Docker components like Docker Engine Hub Machine Compose and Docker Registry Hands on experience in managing this Docker Container using Kubernetes with zero downtime deployment Used Kubernetes Linux container for deploying and scaling containerized applications Good practical experience with Javabased logging utility ie log4J and slf4j Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Good experience in using Software development methodologies like Agile Scrum Water Fall and Rational Application Development methodologies Experience in using Mule soft which is light weight Java based Enterprise Service Bus ESB which allows connecting applications together quickly and easily enabling them to exchange data Experience in using open source framework Apache Camel which for messageoriented middleware with a rulebased routing and mediation engine that provides a Java objectbased implementation of the Enterprise Integration Patterns EIP using an application programming interface to configure routing and mediation rules Expertise in working with JAVA8 features like Functional Interfaces Stream API Time API Transaction Management Exception Handling Collection API Lambda Expressions Work Experience Full Stack Developer United Airlines Chicago IL September 2018 to Present Description United airlines is a major united states airline with its headquarters at Chicago IL The airline operates over 5 400 flights daily Worked on whole Life cycle process of Software Development from the creation of Software Development Request SDR to Deployment which covers creation of design documents as well Worked in a team where some critical development requirements were handled without any additional support and met Qualitative delivery Responsibilities The backend use of Node JS Express JS MongoDB and Mongoose the complete MERN Stack to provide RESTful API Worked closely with internal clients to define business objectives project scope solution space and designdevelopment approach for various research applications Utilized Modernizer extensively to build HTML5CSS3 based page layouts that are crossbrowser compatible and standardscompliant Implemented client side Interface using React JS Build user interfaces differently by breaking them into components using React JS and used a real full featured programming language to render views with React JS Worked on responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop Tablets and mobile users using React JS Implemented application testability and diagnostics and fixing bugs with the help of REDUXReducers architecture Responsible for implementing UI mockups integrating third party react libraries and handlingcreating Redux store data Developed ReactRedux code using functional programming best practices to enable efficient pure function testing Experienced in working with Redux and Alt JS architecture Utilized createreactapp to launch product to stay update with the most current webpack and babel build configurations Handled Http Requests using Axios which supports Promise API functionality native to JS ES6 Extensively Used Jenkins as Continuous Integration tools to deploy the Spring Boot Microservices to Pivotal Cloud Foundry PCF using build pack Used Pivotal Cloud Foundry to quickly build deploy and update the applications Used JWT JSON web tokens mechanism for authentication and authorization security configurations using Node JS Used Node JS for the communication to the server through Restful API and added user validations permissions by using it Debugged the website using Chrome Developers tools and hardcoded the API into script for getting the information about merchants using Node Js Created and consumed RESTful API using Expresjs to provide centralized logic and reusable data retrieval build on top of Nodejs Involved in multitiered J2EE design utilizing Spring Inversion of Control IOC architecture and Spring JPA Involved in using Spring Data JPA Java Persistence API framework and JPA Specification criteria builder to work with dynamic queries in java Worked on writing SQL queries for PostgreSQL databases to build PLSQL functions store procedure triggers views and materialized views Utilized AWS S3 for images uploading and imageMagick for resizing for scalable performance Performed unit testing with Mocha and Chai JavaScript test framework Developed Unit test scripts using Junit and Spock Implemented logging using Log4j Designed and developed independent Microservices using Spring Boot Rest Controller model and are deployed on UNIX boxes Employed Spring Boot for initialize and bootstrapping the build configuration for the boot based web applications Development of cloud hosted web applications and REST APIs using Spring Boot with embedded Tomcat Extensively used Mocha and Chai JavaScript unit testing tools for testing JavaScript pages Worked with Babel and Webpack in application build and deployment processes Implemented testing with Junit Framework using Mockito Spring Junit Runner JMeter PowerMock and MockMVC Created plug ins for an inhouse data ingestion framework to extract data from multiple sources like Apache Kafka Database file systems and Messaging Queues Able to create and manage External Lookups in Splunk to match event data with description Configure and Install Splunk Enterprise and Apache Server for user and role authentication and SSO Created micro service plugin for service worker to read in info via RabbitMQ message bus to create and send SNS messages to AWS SNS topic Implemented Spring CloudNetflix OSS Stack along with using Ribbon for clientside load balancing Netflix Zuul API Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance Ran Log aggregations website Activity tracking and commit log for distributed system using Apache Kafka Deployed and monitored scalable infrastructure on Amazon web services specifically on AWS EC2 Used Cloud formation and launch configurations to automate repeatable provisioning of AWS resources for applications Environment React Babel Redux Axios Nodejs Webpack Pivotal cloud foundry Jenkins Docker Mongoose MongoDB Chai Mocha Spring boot Rabbit MQ Hibernate Apache kafka AWS Full Stack Developer Cerner Corporation Kansas City MO September 2017 to August 2018 Description Cerner corporation is an American supplier of Health information technology solutions services devices and hardware Cerners world headquarters campus is at north Kansas City MISSOURI My role is to analyze and modify all J2EEapplications and prepare required documents Responsibilities Coordinated with project managers business analyze new proposed ideas Requirements designed the integrated tool developed and implemented all the modules Developed User Interface using React JS HTML5 CSSCSS3SAAS Bootstrap 40 Redux MongoDB Responsible to style look and feel of the web page with LESS that extends CSS with dynamic behavior such as variable mixing operations and functions Implemented various screens for the front end using Reactjs and used various predefined components from NPM and Redux library Worked in using Reactjs Router Forms Animations Keys components Events and Flux concept Responsible for React UI and architecture Including Tree Building components library Table Grid and SlideView Implemented stable React components and standalone functions to be added to any future pages Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using Nodejs Used Expressjs which is assertive fast essential and moderate web framework of Nodejs that helps manage a server and routes Postprocessors transpires tests etc based on build target Developed REST API services using Node JS Express JS BodyParse and other node modules to serve the web application with JSON data Developed readable and writable streams of Node JS to process the data from external means of the application Added ExcelBuilding to download the Tabular data in Excel Format using React Created a pipeline from Mongo DB cluster by configuring Mongoose Connector to sync with multiple sources like Elastic Search or another Mongo DB Used Pivotal Cloud Foundry the connectionservice binding details are injected from the deployed cloud platform itself Used a microservice architecture designed and developed RESTful web services using Apache CXF and Spring Boot framework Installed a single node Elasticsearch cluster to index MongoDB for use in a NodeJS Express on a native AWS EC2 Ubuntu 1404 instances Worked with build tools like Bower NPM and Grunt Maintaining and troubleshooting Cassandra Clusters this includes monitoring and performing troubleshooting as per requirements Designed developed and maintained PostgreSQL Data base architecture Used build tools to bundle the application through webpack and used Gulp for task automation of minification of Angular scripts Designed built and deployed application using the AWS stack Including EC2 Mongo DB Docker Kubernetes Orchestration containerEKS focusing on highavailability fault tolerance and autoscaling Deploying the applications using Docker container services and building continuous integrationCI and continuous deploymentCD pipeline using Jenkins with GitHub Implemented Kibana for centralized logging and monitoring that builds on Elasticsearch of the application data for analytics and visualization of the users login Employed the Single Sign On SSO authentication using Site Minder for logging to the application from different websites Developed unit test scripts using Karma and Jasmine for Angular 2 framework and Mocha for Node JS API end points Environment HTML5 CSS3 Express JS JavaScript React JS Redux Node JS Bootstrap REST API Load Balancer Mongoose Connector Mongo DB REST administrations Cassandra Docker Mocha Jasmine Karma Gulp SSO Authentication Web Pack Kubernetes Maven and Jenkins GIT Jenkins AWS Services Elastic Cloud ComputeEC2 Java DeveloperUI Developer California Bank Trust CA June 2015 to August 2017 Description National Bank Trust Company is one of the secured financial institutions that serves huge domain of customers Auto Billing System is a web application built on Spring MVC framework The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic recurring bill payment and Review Payments Responsibilities Developed and designed User Interface using JavaScript HTML CSS DOM XHTML AJAX Bootstrap Less AngularJS Created and enhanced websites for clients to increase online presence and sales by using some of the latest technologies including JavaScript CSS3 HTML JQuery UI handlebars Wrote application level code to perform clientside validation using jQuery and JavaScript Used Angular twoway binding and Implemented the search functionality for Internal Application using Angular JS Extensively used http service to make AJAX calls and consume JSON response across numerous services Involved in implementing the complete Application in the inbuild SOA Architecture with Angularjs Created a demo website running on a Nodejs using the Express framework Jade Angularjs for front end MVCtemplating Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Involved in Enhancement of existing application utilizing Angular JS created HTML navigation menu that is role based wherein menu items changes dynamically based on the values derived from the database in the form of XML Involved in the migration of YUI screens to intuitive EmberJS screens Worked with Core Java concepts like Collections Framework multithreading Memory management Used multithreading in programming to improve overall performance using Singleton design pattern in Hibernate Utility class Implemented REST web service calls using JSON JAXRS formats provided to be integrated on the front end Created both xml and java configuration files for setting up Apache CXF as JAXRS runtime Spring Data and Spring JDBC template technologies Used Spring ORM module to integrate with Hibernate Used ORM tool Hibernate along with spring framework to deal with database operations Involved in development of POJO classes and writing Hibernate query language HQL queries Implemented logging using log4j and Spring AOP Implemented various crossproject functionalities using Spring AOP Used Spring JTA Transaction manager to remove the dependencies on the container Implemented business layer of the application using Spring AOP Spring IOC Implemented the mechanism of logging and debugging with Log4j and JIRA Involved in Unit testing of the application using Junit Integrated Spring with Hibernate for data access from Oracle Database Creating and maintaining database links between different Oracle databases Used Hibernate mappings relationships between tables and entity classes to access and update information in the database Hibernate Query Language HQL was used to perform various queries in the database Involved in bug fixing during the System testing Joint System testing and User acceptance testing Deploying the applications and binding third party services like App Dynamics on Pivotal Cloud Foundry PCF Used Pivotal Cloud Foundry to quickly build deploy and update the applications Implemented Hibernate Second level of caching using Ehcache provider to get caching across session factory Involved in Application Development using various WebApplication Servers like Apache Tomcat Server IBM WebSphere Implemented code for marshall and unmarshall technique using JAXB to parse XML to string object and vice versa Documented the REST APIs using Swagger API for briefing the services involved in the application Implemented the function to send and receive AMQP messages on RabbitMQ synchronously and asynchronously and send JMS message on the edge device Developed test driven development code using JUnit and Mockito framework Used Karma Test runner and Jasmine Testing frameworks Primarily responsible for designing and implementing the application process flow with MuleSoft using Anypoint Studio and POST production support for all the APIs Java Developer Cloud Digital Media Hyderabad Telangana September 2012 to August 2014 Description This Project aims to help the employees of Cloud Digital Media to refer candidates for open positions in the organization Through this application admin can post new referral schemes for open positions in the organization and accordingly the employees can refer candidates and can get the benefit of cash rewards or gifts that are available under a referral scheme This project also has various reports which helps the admin to do a detailed analysis as per his criteria Responsibilities Implemented Model View Controller MVC2 Architecture using Jakarta Struts framework at presentation tier Used Struts frameworks and MVC design patterns to complete several projects with primarily focused on more complex areas of development including user interface design batch processing stored procedure development XML data exchange and integration Validated all forms using Struts validation framework Extensive use of Struts Framework for Controller components and view components Implemented Spring IOC for inter connection between modules in our application Created customized spring batch framework to run multiple processes step by step Implemented connection pooling framework to process claims concurrently with multiple threads using spring batch with different split conditions based on volume of claims Developed automated build files using Maven Created Data Access Objects to fetch data from database with SQL queries integrate them with IBatis Developed shell scripts used to monitor production applications start and stop custom Java applications in Linux environment Implemented batch processes for reporting applications and modules using Korn shell scripts on Oracle database Developed various helper classes which needed following core Java multithreaded programming and collection classes Categorized salient level rule to every business rules base on the business needs Use DROOLS as rules engine Extensively used Junit log4j for unit testing and logging Designed and coded application components in an agile environment Environment Struts Framework Spring IOC Spring Batch Maven Spring MVC iBatis SQL Linux Drools Multithreading Log4j Associate Software Engineer ICrea Infotech Hyderabad Telangana January 2012 to August 2012 Description This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital This package is used to computerize the activities of a servicing system This package contains four modules They are Administration Patient Care System Health Services and Auxiliary Services Each module is having sub modules with in this sub modules will maintain storing registering details of joining patient details and over all day activities maintains one database Responsibilities Developed the application using Java J2EE Structs JDBC Development resolving the issuesbugs Code suggestions Technical Issues and was involved in writing Stored Procedures Triggers and Cursors Created tables views Types complex join queries and functions and modifications to existing database structure as required for addition of new features Involved in Designing the Database Schema and writing the complex SQL queries Used Hibernate as the DAO layer to access the database Worked with Structs framework to design the MVC model for the application Worked on SOAP based Client and Server Web services Implemented Multithreading for handling multiple requests and for high performance Worked on the Java Collections API for handling the data objects between the business layers and the front end Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database and JAXB in the web services request data marshalling as well as unmarshaling process Used Java Messaging ServicesJMS for reliable and asynchronous exchange of important information Developed Unit test cases using JUnit Deployed application on Client Linux server Used ANT built tool for compiling and generating war file Developed web services for sending and getting data from different applications Used JDBC to access Oracle database for accessing the information Used Junit test cases for regression testing and integrated with ANT build Used Log4j to capture the log that includes runtime exceptions Worked closely with system analyst to understand the technical requirements of the project Created the design documents with use case diagram class diagrams and sequence diagrams using Rational Rose Environment Java J2EE Struct JDBC Hibernate JAXB SAXP XML Collections Multithreading SQL JMS Junit ANT Log4j Rational Rose Education Masters Skills Visual studio C Git Gradle Javascript Jenkins Json Php Svn Xml Bea Eclipse Ejb J2ee Java Hibernate Spring Jax Jaxb Jaxp Node Jquery React Nodejs Angular Additional Information Technical Skills Web Development HTML5 SASS CSS3 JavaScript PHP JSON JQUERY J2EE design pattern AJAX XML SOAP REST WADL WSDL JAXP JAXB JAXRS JAXWS S5 ES6 Databases MySQL ORACLE Mongo DB DB2 MS SQL SQL Server RDBMS Cassandra Couch DB Graph DB Amazon DynamoDB Programming Languages C C CORE JAVA J2EE SERVLETS JSP JDBC JAVA BEANS JSF JNDI EJB Data Structures SQL Operating System Windows Linux Unix MSDOS Software Tools Testing Tools BUILD Ant Bamboo GoCD Gradle Grunt Gulp Jenkins Maven Maven 2 Bower LOGGING Log4j Slf4j Commons Logging VERSION CONTROL Git SVN Clear Case Surround TESTING Protractor Jasmine along with Karma Mockito Mocha Selenium Spring JUnit 4 IDEs worked on Eclipse Sublime Text Net Beans IBM RAD Visual studio STS BEA Web Logic Workshop Frameworks AngularJS NodeJS BackboneJS D3 Struts JSF Spring MVC Hibernate iBatis JPA JDBC Application Servers Apache Tomcat Server BEA Web Logic IBM Web Sphere JBOSS Oracle Web Logic",
    "unique_id": "3a553b16-ce51-43f2-b097-1557cb30bb14"
}