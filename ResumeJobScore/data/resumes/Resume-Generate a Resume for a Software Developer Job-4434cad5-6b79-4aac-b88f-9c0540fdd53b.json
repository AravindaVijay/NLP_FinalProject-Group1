{
    "clean_data": "Python developer span lPythonspan span ldeveloperspan Python developer Master Card New York NY Around 5 years of experience as a WebApplication Developer and Cloud Engineer as coding with analytical programming using Python Django HTML CSS JavaScript Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Strong knowledge experience in creating Jenkins CI pipelines and good experience in automating deployment pipelines Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Indepth experience in LAMP Linux Apache MySQL Python Architecture Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Experienced with integration of MongoDB and Casandra databases Experience in Python open stack APIs Experience with UML diagrams Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Handson experience in Unix and Linux Kernels Hands on experience in SVN Git JIRA Bugzilla Hands on experience with version control tools such as SVN GitHub GitLab Experience in SASSTAT with linear and logistic regression Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Strong knowledge experience in creating Jenkins CI pipelines and good experience in automating deployment pipelines Worked on Microservices for Continuous Delivery environment using Docker and Jenkins Developed existing network mapping microservices using python nmap and deployed it on kubernetes Experience in Kubernetes which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Worked on real time data integration usingkafka Spark streaming Used Build Tool Maven for Developing Kafka Ingestion and Spark Scala project Built Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code Experience in designing the project workflowspipelines using Jenkins as CI tool Achieved continuous deployment using IBM uDeploy Integrated uDeploy with nexus and Jenkins to achieve CD Hands on experience with installation and configuration of Apache Tomcat server Experience in writing SQL Sub Queries Stored Procedures Triggers Cursors and Functions Good experience with python frameworks like Flask and WebApp2 Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Hands on experience with installation and configuration of Apache Tomcat server Work Experience Python developer Master Card New York NY November 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming MVC architecture using serverside applications like Django andFlask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Developed existing network mapping microservices using python nmap and deployed it on kubernetes Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs toKafka topics Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment microservices Lambda Dynamo DB Python 34 Django API Gateway Java J2EE REST API Kafka Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Cloud Engineer Python Developer Rocket Software Boston MA May 2017 to October 2017 Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Experienced in containerbased deployments using Docker Docker Hub and Docker registries and Kubernetes Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django17Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse jQuery Kubernets Ansible JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer TMobile Bellevue WA January 2016 to December 2016 Responsibilities Built database Model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Responsible for designing developing testing deploying and maintaining the web application Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client webbased application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Experience in using containers like Docker Environment Python 2x and 3x Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Napier Healthcare Solutions India Ltd February 2014 to November 2015 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective webbased applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Education Masters Skills Css 4 years Django 4 years Html 4 years Mysql 4 years Python 4 years PHP Javascript Android Git ASP",
    "entities": [
        "GUI",
        "Master Card New York",
        "UNIX",
        "Agile Software Methodology",
        "HTTP",
        "SQL Profiler and Analytics",
        "JSON",
        "LAMP Linux",
        "GIT Repository Setup",
        "IBM",
        "Heroku",
        "TestDriven Development TDD",
        "Indepth",
        "Design Development and Deployment Testing and Implementation",
        "Software Configuration Management",
        "Python 3627 Django 1718",
        "jQuery Created",
        "Bootstrap Implemented RESTful WebServices",
        "ONCORE",
        "Shell",
        "Implemented Terraform",
        "Amazon",
        "Maven Repository and Deployment",
        "Maven Builds Launched Kubernetes",
        "WebSphere",
        "SDLC Software Development Life Cycle Software Testing Life Cycle STLC",
        "Stored Procedures",
        "Developed",
        "Jenkins",
        "NetBeans Handson",
        "CSS Bootstrap",
        "Automation Test",
        "Puppet",
        "UML",
        "SQL PLSQL",
        "Created Git",
        "Bash Python",
        "ANSIBLE",
        "Technologies",
        "DjangoREST",
        "Develop",
        "the Workflows Worklets Sessions Mappings Source Definitions Target",
        "SVN Configured",
        "Installed and Administered Jenkins CI",
        "Flask",
        "Collaborated",
        "Automate",
        "Created Unit",
        "MVC",
        "Spark",
        "Done POC",
        "Integration Testing",
        "GIT",
        "linear",
        "API",
        "Lambda Hands",
        "QA",
        "IAM",
        "Present Responsibilities Designed",
        "GitHub Involved",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "Built Jenkins",
        "AWS",
        "the Application Experience",
        "Oracle",
        "SNS Implemented",
        "UNIX Developed",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "Performed Unit",
        "SQL",
        "OLTP",
        "GitHub",
        "lPythonspan",
        "Nginx",
        "Kubernetes",
        "WebApplication Developer",
        "Ant",
        "SSH",
        "CI",
        "MVW",
        "Amazon AWS",
        "Apache Cassandra Created Terraform",
        "CRUD",
        "GIT Experienced",
        "Maven",
        "SQL Server Expertise",
        "Performed",
        "SQL Sub Queries Stored Procedures Triggers Cursors",
        "Build",
        "Djangos",
        "JavaScript",
        "UI",
        "Front",
        "Created Business Logic",
        "SVN",
        "Expertise",
        "CSS",
        "Tomcat",
        "AWS Experienced",
        "Jenkins Integration",
        "Integration",
        "MFA",
        "Node"
    ],
    "experience": "Experience in Python open stack APIs Experience with UML diagrams Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Handson experience in Unix and Linux Kernels Hands on experience in SVN Git JIRA Bugzilla Hands on experience with version control tools such as SVN GitHub GitLab Experience in SASSTAT with linear and logistic regression Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Strong knowledge experience in creating Jenkins CI pipelines and good experience in automating deployment pipelines Worked on Microservices for Continuous Delivery environment using Docker and Jenkins Developed existing network mapping microservices using python nmap and deployed it on kubernetes Experience in Kubernetes which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Worked on real time data integration usingkafka Spark streaming Used Build Tool Maven for Developing Kafka Ingestion and Spark Scala project Built Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code Experience in designing the project workflowspipelines using Jenkins as CI tool Achieved continuous deployment using IBM uDeploy Integrated uDeploy with nexus and Jenkins to achieve CD Hands on experience with installation and configuration of Apache Tomcat server Experience in writing SQL Sub Queries Stored Procedures Triggers Cursors and Functions Good experience with python frameworks like Flask and WebApp2 Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Hands on experience with installation and configuration of Apache Tomcat server Work Experience Python developer Master Card New York NY November 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming MVC architecture using serverside applications like Django andFlask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Developed existing network mapping microservices using python nmap and deployed it on kubernetes Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs toKafka topics Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment microservices Lambda Dynamo DB Python 34 Django API Gateway Java J2EE REST API Kafka Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Cloud Engineer Python Developer Rocket Software Boston MA May 2017 to October 2017 Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Experienced in containerbased deployments using Docker Docker Hub and Docker registries and Kubernetes Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django17Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse jQuery Kubernets Ansible JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer TMobile Bellevue WA January 2016 to December 2016 Responsibilities Built database Model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Responsible for designing developing testing deploying and maintaining the web application Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client webbased application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Experience in using containers like Docker Environment Python 2x and 3x Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Napier Healthcare Solutions India Ltd February 2014 to November 2015 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective webbased applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Education Masters Skills Css 4 years Django 4 years Html 4 years Mysql 4 years Python 4 years PHP Javascript Android Git ASP",
    "extracted_keywords": [
        "developer",
        "span",
        "lPythonspan",
        "span",
        "ldeveloperspan",
        "Python",
        "developer",
        "Master",
        "Card",
        "New",
        "York",
        "NY",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "Cloud",
        "Engineer",
        "programming",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "processes",
        "packaging",
        "deploying",
        "Application",
        "configurations",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "python",
        "Django",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTML",
        "CSS",
        "jQuery",
        "data",
        "visualization",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "JavaScript",
        "jQuery",
        "Node",
        "JS",
        "Ansible",
        "Ansible",
        "Tower",
        "Configuration",
        "management",
        "tool",
        "tasks",
        "applications",
        "change",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JSON",
        "Angularjs",
        "Nodejs",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "designing",
        "developing",
        "Automation",
        "Test",
        "cases",
        "Selenium",
        "WebDriver",
        "Java",
        "TestNG",
        "Development",
        "Quality",
        "Assurance",
        "Management",
        "teams",
        "cross",
        "communication",
        "approval",
        "production",
        "knowledge",
        "experience",
        "Jenkins",
        "CI",
        "pipelines",
        "experience",
        "deployment",
        "pipelines",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "experience",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "Python",
        "Architecture",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Server",
        "Tomcat",
        "Nginx",
        "WebLogic",
        "g",
        "WebSphere",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "integration",
        "MongoDB",
        "Casandra",
        "Experience",
        "Python",
        "stack",
        "APIs",
        "Experience",
        "UML",
        "diagrams",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "Pycharm",
        "Eclipse",
        "NetBeans",
        "Handson",
        "experience",
        "Unix",
        "Linux",
        "Kernels",
        "Hands",
        "experience",
        "SVN",
        "Git",
        "JIRA",
        "Bugzilla",
        "Hands",
        "experience",
        "version",
        "control",
        "tools",
        "SVN",
        "GitHub",
        "GitLab",
        "Experience",
        "SASSTAT",
        "regression",
        "knowledge",
        "stages",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "Cycle",
        "STLC",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "Experience",
        "CI",
        "tools",
        "Hudson",
        "Build",
        "Forge",
        "Jenkins",
        "knowledge",
        "experience",
        "Jenkins",
        "CI",
        "pipelines",
        "experience",
        "deployment",
        "pipelines",
        "Microservices",
        "Continuous",
        "Delivery",
        "environment",
        "Docker",
        "Jenkins",
        "network",
        "mapping",
        "microservices",
        "python",
        "nmap",
        "kubernetes",
        "Experience",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "time",
        "data",
        "integration",
        "Spark",
        "streaming",
        "Build",
        "Tool",
        "Maven",
        "Kafka",
        "Ingestion",
        "Spark",
        "Scala",
        "project",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "terraform",
        "code",
        "Experience",
        "project",
        "workflowspipelines",
        "Jenkins",
        "CI",
        "tool",
        "deployment",
        "IBM",
        "uDeploy",
        "Integrated",
        "uDeploy",
        "nexus",
        "Jenkins",
        "CD",
        "Hands",
        "experience",
        "installation",
        "configuration",
        "Apache",
        "Tomcat",
        "server",
        "Experience",
        "SQL",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "experience",
        "frameworks",
        "Flask",
        "WebApp2",
        "Experience",
        "List",
        "Comprehensions",
        "functions",
        "Map",
        "Filter",
        "Lambda",
        "Hands",
        "experience",
        "installation",
        "configuration",
        "Apache",
        "Tomcat",
        "server",
        "Work",
        "Experience",
        "Python",
        "developer",
        "Master",
        "Card",
        "New",
        "York",
        "NY",
        "November",
        "Present",
        "Responsibilities",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "andFlask",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "Microservices",
        "cloud",
        "foundry",
        "domains",
        "Hands",
        "experience",
        "Business",
        "data",
        "centre",
        "environment",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "databases",
        "AWS",
        "S3bucket",
        "instance",
        "backups",
        "S3",
        "bucket",
        "network",
        "mapping",
        "microservices",
        "python",
        "nmap",
        "kubernetes",
        "Performed",
        "S3",
        "creation",
        "policies",
        "IAM",
        "role",
        "polices",
        "MFA",
        "JSON",
        "template",
        "service",
        "application",
        "deployments",
        "ANSIBLE",
        "CentOS",
        "RHEL",
        "AWS",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Understanding",
        "configuration",
        "Cloud",
        "Trail",
        "cloudsecurity",
        "VPC",
        "Security",
        "Groups",
        "cloudpermission",
        "systemsIAM",
        "Experience",
        "Installing",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "Puppet",
        "CICD",
        "Process",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "Configured",
        "Jenkins",
        "CI",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "Done",
        "POC",
        "Kafka",
        "Spark",
        "Streaming",
        "data",
        "application",
        "analytics",
        "application",
        "Wrote",
        "Kafka",
        "producers",
        "data",
        "rest",
        "APIs",
        "topics",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "Environment",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Environment",
        "Lambda",
        "Dynamo",
        "DB",
        "Python",
        "Django",
        "API",
        "Gateway",
        "Java",
        "J2EE",
        "REST",
        "API",
        "Kafka",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "CloudWatch",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Cloud",
        "Engineer",
        "Python",
        "Developer",
        "Rocket",
        "Software",
        "Boston",
        "MA",
        "May",
        "October",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "Flask",
        "Web2py",
        "HTML",
        "web",
        "technologies",
        "web",
        "applications",
        "Flask",
        "frame",
        "works",
        "MVC",
        "architecture",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Experience",
        "collections",
        "Python",
        "user",
        "objects",
        "Python",
        "OS",
        "module",
        "UNIX",
        "environment",
        "job",
        "cloning",
        "deployment",
        "groups",
        "environment",
        "Workflows",
        "Worklets",
        "Sessions",
        "Mappings",
        "Source",
        "Definitions",
        "Target",
        "definitions",
        "environments",
        "Bash",
        "Perl",
        "Python",
        "Automate",
        "daytoday",
        "usage",
        "SQL",
        "Profiler",
        "Analytics",
        "query",
        "optimization",
        "maintenance",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Jenkins",
        "Continuous",
        "Integration",
        "builds",
        "deployments",
        "Build",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "terraform",
        "code",
        "Installed",
        "Administered",
        "Jenkins",
        "CI",
        "Maven",
        "Builds",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "deployments",
        "Docker",
        "Docker",
        "Hub",
        "Docker",
        "registries",
        "Kubernetes",
        "Jenkins",
        "configuring",
        "integrationCI",
        "End",
        "End",
        "automation",
        "build",
        "deployments",
        "applications",
        "CI",
        "tools",
        "Jenkins",
        "Integration",
        "data",
        "storage",
        "solutions",
        "Django",
        "ORM",
        "system",
        "Used",
        "Unit",
        "Test",
        "Python",
        "library",
        "programs",
        "python",
        "codes",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "Wrote",
        "Stored",
        "Procedures",
        "SQL",
        "Scripts",
        "Python",
        "data",
        "team",
        "QA",
        "DB",
        "standards",
        "features",
        "dashboard",
        "CSS",
        "JavaScript",
        "Django",
        "Bootstrap",
        "RESTful",
        "WebServices",
        "data",
        "systems",
        "Environment",
        "Python",
        "SQL",
        "Java",
        "Script",
        "Linux",
        "Shell",
        "Scripting",
        "Mongo",
        "DB",
        "HTML",
        "Angular",
        "JS",
        "Eclipse",
        "jQuery",
        "Kubernets",
        "Ansible",
        "JSON",
        "XML",
        "CSS",
        "MySQL",
        "Bootstrap",
        "Amazon",
        "s3",
        "Python",
        "Developer",
        "TMobile",
        "Bellevue",
        "WA",
        "January",
        "December",
        "Responsibilities",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "testing",
        "web",
        "application",
        "Python",
        "OOD",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Wrote",
        "Python",
        "modules",
        "Apache",
        "Cassandra",
        "instance",
        "Created",
        "Unit",
        "test",
        "regression",
        "test",
        "framework",
        "workingnew",
        "code",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "UNIX",
        "Angularjs",
        "client",
        "application",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "Python",
        "stock",
        "APIs",
        "databases",
        "MySQL",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "package",
        "automation",
        "framework",
        "Python",
        "Shell",
        "scripting",
        "troubleshooting",
        "issues",
        "bugs",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "services",
        "format",
        "Git",
        "repository",
        "project",
        "GitHub",
        "applications",
        "JIRA",
        "methodology",
        "daytoday",
        "meetings",
        "developers",
        "users",
        "QA",
        "testing",
        "Application",
        "Experience",
        "containers",
        "Docker",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "AJAX",
        "Tomcat",
        "Apache",
        "HTTP",
        "Angularjs",
        "JSON",
        "Restful",
        "XML",
        "JavaScript",
        "Shell",
        "Scripting",
        "GIT",
        "Hub",
        "MYSQL",
        "Cassandra",
        "JIRA",
        "Python",
        "Developer",
        "Napier",
        "Healthcare",
        "Solutions",
        "India",
        "Ltd",
        "February",
        "November",
        "Responsibilities",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "largescale",
        "hightraffic",
        "Python",
        "web",
        "applications",
        "features",
        "core",
        "functionality",
        "platforms",
        "services",
        "support",
        "host",
        "production",
        "QA",
        "development",
        "OLTP",
        "hundreds",
        "store",
        "Installation",
        "migrating",
        "patching",
        "DB2",
        "Oracle",
        "SQL",
        "Server",
        "Expertise",
        "database",
        "connections",
        "Python",
        "packages",
        "MySQL",
        "Python",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "delivery",
        "code",
        "principles",
        "TestDriven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "channels",
        "Django",
        "Used",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behaviour",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "expressions",
        "pattern",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Skilled",
        "Collections",
        "Python",
        "user",
        "objects",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "skills",
        "user",
        "applications",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Bugzilla",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Shell",
        "Scripting",
        "Education",
        "Masters",
        "Skills",
        "Css",
        "years",
        "Django",
        "years",
        "Html",
        "years",
        "Mysql",
        "years",
        "Python",
        "years",
        "PHP",
        "Javascript",
        "Android",
        "Git",
        "ASP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:54:53.256843",
    "resume_data": "Python developer span lPythonspan span ldeveloperspan Python developer Master Card New York NY Around 5 years of experience as a WebApplication Developer and Cloud Engineer as coding with analytical programming using Python Django HTML CSS JavaScript Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Experienced in understanding principles and best practices of Software Configuration Management SCM processes which include compiling packaging deploying and Application configurations Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Created a python Django webbased application using Python scripting for data processing and MySQL for database HTML CSS jQuery for data visualization Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Expertise in MVW frameworks like Django Angular JS JavaScript jQuery and Node JS Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Strong knowledge experience in creating Jenkins CI pipelines and good experience in automating deployment pipelines Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Indepth experience in LAMP Linux Apache MySQL Python Architecture Good knowledge in working with application server Apache Server Tomcat 60 70 80 Nginx WebLogic 100 103 11g WebSphere 70 85 Performed Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Experienced with integration of MongoDB and Casandra databases Experience in Python open stack APIs Experience with UML diagrams Experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Handson experience in Unix and Linux Kernels Hands on experience in SVN Git JIRA Bugzilla Hands on experience with version control tools such as SVN GitHub GitLab Experience in SASSTAT with linear and logistic regression Good knowledge in various stages of SDLC Software Development Life Cycle Software Testing Life Cycle STLC and QA methodologies from project definition to postdeployment documentation Experience in using CI tools Hudson Build Forge and Jenkins for automated builds Strong knowledge experience in creating Jenkins CI pipelines and good experience in automating deployment pipelines Worked on Microservices for Continuous Delivery environment using Docker and Jenkins Developed existing network mapping microservices using python nmap and deployed it on kubernetes Experience in Kubernetes which provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Worked on real time data integration usingkafka Spark streaming Used Build Tool Maven for Developing Kafka Ingestion and Spark Scala project Built Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code Experience in designing the project workflowspipelines using Jenkins as CI tool Achieved continuous deployment using IBM uDeploy Integrated uDeploy with nexus and Jenkins to achieve CD Hands on experience with installation and configuration of Apache Tomcat server Experience in writing SQL Sub Queries Stored Procedures Triggers Cursors and Functions Good experience with python frameworks like Flask and WebApp2 Have Experience in List Comprehensions and python inbuilt functions such as Map Filter and Lambda Hands on experience with installation and configuration of Apache Tomcat server Work Experience Python developer Master Card New York NY November 2017 to Present Responsibilities Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming MVC architecture using serverside applications like Django andFlask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Deployed and monitored Microservices using pivotal cloud foundry also managed domains and routes Hands on experience in migrating Business from a physical data centre environment to AWS Experienced in setting up EC2 instances security groups and Setting up databases in AWS using S3bucket and configuring instance backups to S3 bucket Developed existing network mapping microservices using python nmap and deployed it on kubernetes Performed S3 buckets creation policies on IAM role based polices MFA and customizing the JSON template Automated various service and application deployments with ANSIBLE on CentOS and RHEL in AWS Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Understanding of securecloud configuration Cloud Trail cloudsecurity technologies VPC Security Groups etc and cloudpermission systemsIAM Experience in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Extensive use of version controlling systems like GIT and SVN Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Done POC using Kafka and Spark Streaming to fetch data from ONCORE application into our analytics application Wrote Kafka producers to stream the data from external rest APIs toKafka topics Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Used Python Library Beautiful Soup 4 for Web Scraping to extract data for building graphs Used AngularJS as the development framework to build a singlepage application Environment Amazon Web Services AWS Cloud Environment microservices Lambda Dynamo DB Python 34 Django API Gateway Java J2EE REST API Kafka Spring framework AngularJS HTML Amazon S3 CloudWatch eclipse MSSQL Server GIT Jira Jenkins Confluence Cloud Engineer Python Developer Rocket Software Boston MA May 2017 to October 2017 Responsibilities Used Django Framework in developing web applications to implement the model view control architecture Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Develop consumerbased features and applications using Python Django pyramid Flask Web2py HTML and other web technologies Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Experience in using collections in Python for manipulating and looping through different user defined objects With using of Python OS module on UNIX environment made job cloning and forking Created deployment groups in one environment for the Workflows Worklets Sessions Mappings Source Definitions Target definitions and imported them to other environments Implemented Bash Perl Python scripting to Automate many daytoday tasks Extensive usage of SQL Profiler and Analytics for query optimization and maintenance Created Business Logic using Python to create Planning and Tracking functions Used web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Experienced in containerbased deployments using Docker Docker Hub and Docker registries and Kubernetes Extensively worked on Jenkins by installing configuring and maintaining for Continuous integrationCI and for End to End automation for all build and deployments Deploy third partys applications using various CI tools like Jenkins Integration of data storage solutions using Django ORM system for MongoDB Used Unit Test Python library for testing many programs on python and other codes Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Wrote Stored Procedures in SQL and Scripts in Python for data loading Collaborated with team of QA to build and populate DB and to ensure the standards Developed and Tested features of dashboard using CSS JavaScript Django and Bootstrap Implemented RESTful WebServices for sending and receiving the data between multiple systems Environment Python 3427 Django17Java 17 SQL Java Script Linux Shell Scripting Mongo DB HTML Angular JS Eclipse jQuery Kubernets Ansible JSON XML CSS MySQL Bootstrap Amazon s3 AWS Python Developer TMobile Bellevue WA January 2016 to December 2016 Responsibilities Built database Model Views and APIs using Python for interactive webbased solutions Placed data into JSON files using Python to test Django websites Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Responsible for designing developing testing deploying and maintaining the web application Involved in Python OOD code for quality logging monitoring and debugging code optimization Wrote Python modules to view and connect the Apache Cassandra instance Created Unit test regression test framework for workingnew code Installed and maintained web servers Tomcat and Apache HTTP in UNIX Developed efficient Angularjs for client webbased application Designed and developed the UI for the website with HTML XHTML CSS Java Script and AJAX Involved in working with Python open stock APIs Responsible for managing large databases using MySQL Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL db package Developed and designed automation framework using Python and Shell scripting Involved in debugging and troubleshooting issues and fixed many bugs in two of the main applications which are main source of data for customers and internal customer service team Implemented SOAPRESTful web services in JSON format Created Git repository and added the project to GitHub Involved in debugging the applications monitored on JIRA using agile methodology Attended many daytoday meetings with developers and users and performed QA testing on the Application Experience in using containers like Docker Environment Python 2x and 3x Django 14 HTML CSS AJAX Tomcat Apache HTTP Angularjs JSON Restful XML JavaScript Shell Scripting GIT Hub MYSQL Cassandra JIRA Python Developer Napier Healthcare Solutions India Ltd February 2014 to November 2015 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Worked on largescale hightraffic Python web applications to define and implement new features enhance core functionality and integrate with other platforms and services Provided 24x7 support for several host production QA and development OLTP databases as well as hundreds of offsite store databases Installation configuring upgrading migrating and patching of DB2 Oracle and SQL Server Expertise in establishing database connections for Python by configuring packages like MySQL Python Handled potential points of failure through error handling and communication of failure Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Worked on installing and setting up the channels by using Django Used JavaScript and JSON to update a portion of a webpage Develop consumerbased features and applications using Python Django HTML Behaviour Driven Development BDD and pairbased programming Used many regular expressions to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Special skills in developing user friendly simple yet effective webbased applications Deployed the project into Heroku using GIT version control system Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Bugzilla JQuery CSS Bootstrap Mongo DB MS SQL Server Eclipse Git GitHub Linux Shell Scripting Education Masters Skills Css 4 years Django 4 years Html 4 years Mysql 4 years Python 4 years PHP Javascript Android Git ASP",
    "unique_id": "4434cad5-6b79-4aac-b88f-9c0540fdd53b"
}