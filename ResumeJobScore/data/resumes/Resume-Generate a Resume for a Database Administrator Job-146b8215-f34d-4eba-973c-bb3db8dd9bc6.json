{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Cincinnati Childrens Hospital Python Developer Cincinnati OH Extensive experience as a WebApplication Developer and Cloud Engineer as coding with analytical programming using Python Django HTML CSS JavaScript Actively involved in each phase of software Development life cycle SDLC experience in Agile Software Methodology Experience in developing web applications by following Model View Control MVC Architecture using server side applications Django Flask Web2Py and Pyramid Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle Pyside SciPy PyTables Expert in STL containers Design Patterns Socket programming Multithreading Used PyQt to provide GUI for the user to create and perform operations view reports based on client data Experienced in designing web pages and Graphical user interfaces front end layouts on the web by using HTML DHTML CSS Bootstrap framework PHP XML JavaScript node Js and Angular Js Knowledge in Using Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Expertise in usage of pythonDjango Framework for developing web applications Experience with GUI frameworks such as PyJamas Python Good experience with python frameworks like Flask and WebApp2 Experience and understanding of React Redux life cycle with components and rendering to DOM Expertise in developing webbased applications using libraries and frameworks like Angularjs Bootstrap JQuery Knockoutjs Nodejs Backbonejs and Reactjs Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experience on Python scripts to parse XML documents and load the data in database Good knowledge in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Experience object oriented programming OOP concepts using Python C and PHP Good experience with JDBC to perform operations such as CR UD operations and writing complex queries with Oracle 10g11g Good experience in Core Java concepts like object oriented programming MultiThreading and Exception Handling and knowledge in client server environment Good experience in ORM mapping using SQL Alchemy Experienced with integration of MongoDB and Cassandra databases Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience in Python open stack APIs Experience with UML diagrams Expertise in building strong websites confirming Web 30 standards using Yahoo User Interface YUI compressor jshint eslint JQuery HTML CSS to develop valid code and tablefree sties Good hands on experience with JSON based REST web services Good experience in using Shell scripting for automation by following Python PEP Experience in utilizing SAS procedures Macros and other SAS application for data extraction data loading cleaning and reporting Performed mapping of JSONXML formatted data with relational databases like MySQL PostgreSQL and SQLite Hands on experience with installation and configuration of Apache Tomcat server Good knowledge in developing ColdFusion components custom tags and modified CF objects Expertise in full life cycle application development and good experience in Unit testing and Test Driven Development TDD and Behavior driven Development Hands on experience with continuous integration and automation using Jenkins Hands on experience with version control tools such as SVN GitHub and GitLab Work Experience Python Developer Cincinnati Childrens Hospital Python Developer June 2017 to Present Sr Python developer Responsibilities Experience working in a fast paced scrum environment Writing backend programming in Python and used the Django Framework to develop the application Designed base project structure and different modules using Microservices architecture Developed Shared Services Event and Data processors using Lambda functions Implemented AWS API Gateway Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Developed consumer based features and applications using Python and Django in test driven Development Configured Cloud Formation AWS IOT and IAM Developed dynamic web pages monitoring and notification tools using Python Django Pyramid Frameworks and Used Python Library Beautiful Soup for web scrapping Accessed database objects using Django Database APIs Developed internal auxiliary web apps using Python Flask Web2Py framework along with Bootstrap CSS HTML framework Developed S3 and Cloud Watch clients for data operations Used AJAX and JQuery for transmitting JSON data objects between frontend and controllers Involved in UI development for the application using HTML5 CSS3 Reactjs and Angularjs Developed user interface solutions using a Django and Pyramid web framework Used Python scripts to update content in the database and manipulate files Developed views and templates with Python and Flask to create a userfriendly website interface Used Flask framework for application development Used ECMAScript 6 ReactJS Flux Babel Node and WebPack to create a SPA Created entire application using Python Flask MySQL and Linux Developed methods for Create Read Update and Delete CRUD in Active Record Implemented Lambda to configure Dynamo DB Autoscaling feature Implemented Data Access Layer to access AWS DynamoDB data Created Python and Bash tools to increase efficiency of application system Created Device Simulator using Spring Boot Utilized Python libraries like wxPython NumPy Twisted PyQT Web2py Pygal Plotly Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Did code reviews and implemented best practices Used Git and Bit Bucket server for source repository Built up a completely computerized ceaseless reconciliation framework utilizing Git Gerrit Jenkins MySQL and custom devices created in Python and Bash Involved in creating a reusable component using Reactjs and Redux for DOM Manipulation Developed entire front end and back end modules using Python on Django WSGI Pyramid Web Framework Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented MVC architecture in developing the web application with the help of Django framework Designed and created backend data access modules using PLSQL stored procedures and Oracle Wrote unit test cases for Controller Service and DAO layers Developed front end using Angularjs Reactjs Nodejs Bootstrap backbonejs JavaScript where back end is java with REST webservices Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Extensive knowledge in database transactions management for database related changes by integrating JDBC Hibernate with Spring Boot Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Amazon Web Services AWS Cloud Environment Lambda Python 36 35 DynamoDB API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch Gradle eclipse MSSQL Server GIT Jira Jenkins Confluence Sr Python Developer PlantOS March 2016 to May 2017 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Writing backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and AngularJS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Automated JIRA processes using Python and bash scripts Developed rating and sharing single page application by using Angularjs Bootstrap Nodejs and Reactjs Developed consumer based features and applications using Python and Django in test driven Development Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Used JQuery to make the frontend components interact with the Javascript functions to add dynamism to the web pages at the client side Created the Application using Reactjs and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Worked on changes to open stack and AWS to accommodate largescale data center deployment Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Developed Spark scripts by using Scala shell commands as per the requirement Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Creating invitation flow for customers to use the client portal for monitoring applications API Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Improved code reuse and performance by making effective use of various design patterns Environment Python 35 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 AWS Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Python Developer Cybermatriks systems October 2012 to June 2015 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Rewrite existing PythonDjango modules to deliver certain format of data Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Special skills in developing user friendly simple yet effective web based applications Designed Frontend with in object oriented JavaScript Framework like JQuery Deployed the project into Heroku using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Education Masters Skills DJANGO 5 years Git 5 years BOOTSTRAP 5 years PYTHON 5 years XML 5 years Additional Information Technical Skills Frameworks Django web2py pyramid Flask Struts pylons and CSS Bootstrap Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML Angular JS Programming Languages C C UML design Python36 35 27 Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap JQuery Numpy matPlotLib Pickle PySide Scipy wxPython PyTables pdb Version Control GIT GitHub SVN CVS Bitbucket Databases Oracle MySQL PostgreSQL MongoDB IDEs Development Tools Py Charm and Sublime Text Web Services AWS Rackspace Cloud Amazon S3 Operating Systems Windows Red hat Linux MAC OSX Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall",
    "entities": [
        "Python Flask",
        "AJAX",
        "Test Driven Development TDD",
        "GUI",
        "AWS Jenkins Mongo DB Elastic",
        "Nodejs",
        "Graphical",
        "Development Performed Unit",
        "UNIX",
        "Agile Software Methodology",
        "Developed Spark",
        "DOM Expertise",
        "PyJamas Python Good",
        "Developed Shared Services Event",
        "Amazon SQS",
        "LAMP Linux",
        "Heroku",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "SOAP",
        "GitLab Work Experience Python Developer Cincinnati Childrens Hospital Python Developer",
        "Bootstrap CSS",
        "PHP Good",
        "Shell",
        "Reactjs",
        "CSS Bootstrap Technologies",
        "Apache Spark",
        "Amazon",
        "STL",
        "Angularjs Reactjs",
        "Python",
        "Stored Procedures",
        "DAO",
        "Jenkins",
        "Bash",
        "Model View Control MVC Architecture",
        "CSS Bootstrap",
        "SPA Created",
        "JS Programming Languages C C UML",
        "JQuery Deployed",
        "Jenkins Hands",
        "Django",
        "Controller Service",
        "MultiThreading",
        "UML",
        "WebPack",
        "Waterfall",
        "Bash Python",
        "SQL Alchemy Experienced",
        "PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2",
        "Bash Involved",
        "PythonPHP",
        "Develop",
        "SQLite Hands",
        "Flask",
        "CR UD",
        "SVN GitHub",
        "Spark Streaming",
        "Implemented Data Access Layer",
        "MS",
        "PyQt",
        "HerokuJenkins",
        "MVC",
        "PythonDjango",
        "PythonPHP Architecture",
        "GIT",
        "Sublime Text Web Services AWS",
        "SNS Worked",
        "Amazon Web Services AWS EC2 AWS S3 Auto",
        "AWS",
        "AWS Special",
        "WAMP Windows Apache",
        "Oracle Wrote",
        "Oracle",
        "HTML DHTML CSS Bootstrap",
        "API Created",
        "Developer Cincinnati Childrens Hospital Python",
        "SAS",
        "Secured Web services",
        "Performed Unit",
        "Yahoo User Interface YUI",
        "SQL",
        "Python PEP Experience",
        "lPythonspan",
        "React Redux",
        "WebApplication Developer",
        "Created the Application using Reactjs",
        "Integration Testing GUI",
        "Nodejs Bootstrap",
        "CRUD",
        "Build",
        "NumPy SQL Alchemy",
        "Djangos",
        "UI",
        "PHP XML JavaScript",
        "Additional Information Technical Skills Frameworks Django",
        "Expertise",
        "DB Autoscaling",
        "Created Device Simulator",
        "REST",
        "ColdFusion",
        "NetBeans",
        "Integration",
        "JQuery",
        "Rspec Worked"
    ],
    "experience": "Experience in developing web applications by following Model View Control MVC Architecture using server side applications Django Flask Web2Py and Pyramid Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle Pyside SciPy PyTables Expert in STL containers Design Patterns Socket programming Multithreading Used PyQt to provide GUI for the user to create and perform operations view reports based on client data Experienced in designing web pages and Graphical user interfaces front end layouts on the web by using HTML DHTML CSS Bootstrap framework PHP XML JavaScript node Js and Angular Js Knowledge in Using Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Expertise in usage of pythonDjango Framework for developing web applications Experience with GUI frameworks such as PyJamas Python Good experience with python frameworks like Flask and WebApp2 Experience and understanding of React Redux life cycle with components and rendering to DOM Expertise in developing webbased applications using libraries and frameworks like Angularjs Bootstrap JQuery Knockoutjs Nodejs Backbonejs and Reactjs Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experience on Python scripts to parse XML documents and load the data in database Good knowledge in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Experience object oriented programming OOP concepts using Python C and PHP Good experience with JDBC to perform operations such as CR UD operations and writing complex queries with Oracle 10g11 g Good experience in Core Java concepts like object oriented programming MultiThreading and Exception Handling and knowledge in client server environment Good experience in ORM mapping using SQL Alchemy Experienced with integration of MongoDB and Cassandra databases Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience in Python open stack APIs Experience with UML diagrams Expertise in building strong websites confirming Web 30 standards using Yahoo User Interface YUI compressor jshint eslint JQuery HTML CSS to develop valid code and tablefree sties Good hands on experience with JSON based REST web services Good experience in using Shell scripting for automation by following Python PEP Experience in utilizing SAS procedures Macros and other SAS application for data extraction data loading cleaning and reporting Performed mapping of JSONXML formatted data with relational databases like MySQL PostgreSQL and SQLite Hands on experience with installation and configuration of Apache Tomcat server Good knowledge in developing ColdFusion components custom tags and modified CF objects Expertise in full life cycle application development and good experience in Unit testing and Test Driven Development TDD and Behavior driven Development Hands on experience with continuous integration and automation using Jenkins Hands on experience with version control tools such as SVN GitHub and GitLab Work Experience Python Developer Cincinnati Childrens Hospital Python Developer June 2017 to Present Sr Python developer Responsibilities Experience working in a fast paced scrum environment Writing backend programming in Python and used the Django Framework to develop the application Designed base project structure and different modules using Microservices architecture Developed Shared Services Event and Data processors using Lambda functions Implemented AWS API Gateway Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Developed consumer based features and applications using Python and Django in test driven Development Configured Cloud Formation AWS IOT and IAM Developed dynamic web pages monitoring and notification tools using Python Django Pyramid Frameworks and Used Python Library Beautiful Soup for web scrapping Accessed database objects using Django Database APIs Developed internal auxiliary web apps using Python Flask Web2Py framework along with Bootstrap CSS HTML framework Developed S3 and Cloud Watch clients for data operations Used AJAX and JQuery for transmitting JSON data objects between frontend and controllers Involved in UI development for the application using HTML5 CSS3 Reactjs and Angularjs Developed user interface solutions using a Django and Pyramid web framework Used Python scripts to update content in the database and manipulate files Developed views and templates with Python and Flask to create a userfriendly website interface Used Flask framework for application development Used ECMAScript 6 ReactJS Flux Babel Node and WebPack to create a SPA Created entire application using Python Flask MySQL and Linux Developed methods for Create Read Update and Delete CRUD in Active Record Implemented Lambda to configure Dynamo DB Autoscaling feature Implemented Data Access Layer to access AWS DynamoDB data Created Python and Bash tools to increase efficiency of application system Created Device Simulator using Spring Boot Utilized Python libraries like wxPython NumPy Twisted PyQT Web2py Pygal Plotly Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Did code reviews and implemented best practices Used Git and Bit Bucket server for source repository Built up a completely computerized ceaseless reconciliation framework utilizing Git Gerrit Jenkins MySQL and custom devices created in Python and Bash Involved in creating a reusable component using Reactjs and Redux for DOM Manipulation Developed entire front end and back end modules using Python on Django WSGI Pyramid Web Framework Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented MVC architecture in developing the web application with the help of Django framework Designed and created backend data access modules using PLSQL stored procedures and Oracle Wrote unit test cases for Controller Service and DAO layers Developed front end using Angularjs Reactjs Nodejs Bootstrap backbonejs JavaScript where back end is java with REST webservices Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Extensive knowledge in database transactions management for database related changes by integrating JDBC Hibernate with Spring Boot Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Amazon Web Services AWS Cloud Environment Lambda Python 36 35 DynamoDB API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch Gradle eclipse MSSQL Server GIT Jira Jenkins Confluence Sr Python Developer PlantOS March 2016 to May 2017 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Writing backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and AngularJS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Automated JIRA processes using Python and bash scripts Developed rating and sharing single page application by using Angularjs Bootstrap Nodejs and Reactjs Developed consumer based features and applications using Python and Django in test driven Development Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Used JQuery to make the frontend components interact with the Javascript functions to add dynamism to the web pages at the client side Created the Application using Reactjs and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Worked on changes to open stack and AWS to accommodate largescale data center deployment Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Developed Spark scripts by using Scala shell commands as per the requirement Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Creating invitation flow for customers to use the client portal for monitoring applications API Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Improved code reuse and performance by making effective use of various design patterns Environment Python 35 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 AWS Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Python Developer Cybermatriks systems October 2012 to June 2015 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Rewrite existing PythonDjango modules to deliver certain format of data Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Special skills in developing user friendly simple yet effective web based applications Designed Frontend with in object oriented JavaScript Framework like JQuery Deployed the project into Heroku using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Education Masters Skills DJANGO 5 years Git 5 years BOOTSTRAP 5 years PYTHON 5 years XML 5 years Additional Information Technical Skills Frameworks Django web2py pyramid Flask Struts pylons and CSS Bootstrap Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML Angular JS Programming Languages C C UML design Python36 35 27 Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap JQuery Numpy matPlotLib Pickle PySide Scipy wxPython PyTables pdb Version Control GIT GitHub SVN CVS Bitbucket Databases Oracle MySQL PostgreSQL MongoDB IDEs Development Tools Py Charm and Sublime Text Web Services AWS Rackspace Cloud Amazon S3 Operating Systems Windows Red hat Linux MAC OSX Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Cincinnati",
        "Childrens",
        "Hospital",
        "Python",
        "Developer",
        "Cincinnati",
        "OH",
        "experience",
        "WebApplication",
        "Developer",
        "Cloud",
        "Engineer",
        "programming",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "phase",
        "software",
        "Development",
        "life",
        "cycle",
        "SDLC",
        "experience",
        "Agile",
        "Software",
        "Methodology",
        "Experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "Architecture",
        "server",
        "side",
        "applications",
        "Django",
        "Flask",
        "Web2Py",
        "Pyramid",
        "Excellent",
        "Experience",
        "Python",
        "IDEs",
        "Sublime",
        "Text",
        "Pycharm",
        "Eclipse",
        "NetBeans",
        "Experience",
        "python",
        "packages",
        "NumPy",
        "SQL",
        "Alchemy",
        "matPlotlib",
        "soup",
        "pickle",
        "Pyside",
        "SciPy",
        "PyTables",
        "Expert",
        "STL",
        "containers",
        "Design",
        "Patterns",
        "Socket",
        "programming",
        "Multithreading",
        "PyQt",
        "GUI",
        "user",
        "operations",
        "view",
        "reports",
        "client",
        "data",
        "designing",
        "web",
        "pages",
        "user",
        "interfaces",
        "layouts",
        "web",
        "HTML",
        "DHTML",
        "CSS",
        "Bootstrap",
        "framework",
        "PHP",
        "XML",
        "JavaScript",
        "node",
        "Js",
        "Angular",
        "Js",
        "Knowledge",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "Expertise",
        "usage",
        "pythonDjango",
        "Framework",
        "web",
        "applications",
        "Experience",
        "GUI",
        "frameworks",
        "PyJamas",
        "Python",
        "experience",
        "frameworks",
        "Flask",
        "WebApp2",
        "Experience",
        "understanding",
        "React",
        "Redux",
        "life",
        "cycle",
        "components",
        "DOM",
        "Expertise",
        "applications",
        "libraries",
        "frameworks",
        "Angularjs",
        "Bootstrap",
        "JQuery",
        "Knockoutjs",
        "Nodejs",
        "Backbonejs",
        "Reactjs",
        "Hands",
        "experience",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Experience",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "knowledge",
        "database",
        "connections",
        "Java",
        "Python",
        "packages",
        "JDBC",
        "MySQL",
        "Python",
        "Experience",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "experience",
        "JDBC",
        "operations",
        "CR",
        "UD",
        "operations",
        "queries",
        "Oracle",
        "g",
        "experience",
        "Core",
        "Java",
        "concepts",
        "object",
        "programming",
        "MultiThreading",
        "Exception",
        "Handling",
        "knowledge",
        "client",
        "server",
        "environment",
        "experience",
        "ORM",
        "mapping",
        "SQL",
        "Alchemy",
        "integration",
        "MongoDB",
        "Cassandra",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "Experience",
        "Python",
        "stack",
        "APIs",
        "Experience",
        "UML",
        "diagrams",
        "Expertise",
        "websites",
        "Web",
        "standards",
        "Yahoo",
        "User",
        "Interface",
        "YUI",
        "compressor",
        "jshint",
        "eslint",
        "JQuery",
        "HTML",
        "CSS",
        "code",
        "tablefree",
        "hands",
        "experience",
        "JSON",
        "REST",
        "web",
        "services",
        "experience",
        "Shell",
        "scripting",
        "automation",
        "Python",
        "PEP",
        "Experience",
        "SAS",
        "procedures",
        "Macros",
        "SAS",
        "application",
        "data",
        "extraction",
        "data",
        "loading",
        "cleaning",
        "Performed",
        "mapping",
        "JSONXML",
        "data",
        "databases",
        "MySQL",
        "PostgreSQL",
        "SQLite",
        "Hands",
        "experience",
        "installation",
        "configuration",
        "Apache",
        "Tomcat",
        "server",
        "knowledge",
        "ColdFusion",
        "components",
        "custom",
        "tags",
        "CF",
        "Expertise",
        "life",
        "cycle",
        "application",
        "development",
        "experience",
        "Unit",
        "testing",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Behavior",
        "Development",
        "Hands",
        "experience",
        "integration",
        "automation",
        "Jenkins",
        "Hands",
        "experience",
        "version",
        "control",
        "tools",
        "SVN",
        "GitHub",
        "GitLab",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Cincinnati",
        "Childrens",
        "Hospital",
        "Python",
        "Developer",
        "June",
        "Present",
        "Sr",
        "Python",
        "developer",
        "Responsibilities",
        "Experience",
        "scrum",
        "environment",
        "programming",
        "Python",
        "Django",
        "Framework",
        "application",
        "base",
        "project",
        "structure",
        "modules",
        "Microservices",
        "architecture",
        "Shared",
        "Services",
        "Event",
        "Data",
        "processors",
        "Lambda",
        "functions",
        "AWS",
        "API",
        "Gateway",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JQuery",
        "Developed",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Configured",
        "Cloud",
        "Formation",
        "IOT",
        "IAM",
        "web",
        "pages",
        "monitoring",
        "notification",
        "tools",
        "Python",
        "Django",
        "Pyramid",
        "Frameworks",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "database",
        "objects",
        "Django",
        "Database",
        "APIs",
        "web",
        "apps",
        "Python",
        "Flask",
        "Web2Py",
        "framework",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "S3",
        "Cloud",
        "Watch",
        "clients",
        "data",
        "operations",
        "AJAX",
        "JQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "UI",
        "development",
        "application",
        "HTML5",
        "CSS3",
        "Reactjs",
        "Angularjs",
        "Developed",
        "user",
        "interface",
        "solutions",
        "Django",
        "Pyramid",
        "web",
        "framework",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "views",
        "templates",
        "Python",
        "Flask",
        "website",
        "interface",
        "Flask",
        "framework",
        "application",
        "development",
        "ECMAScript",
        "ReactJS",
        "Flux",
        "Babel",
        "Node",
        "WebPack",
        "SPA",
        "application",
        "Python",
        "Flask",
        "MySQL",
        "Linux",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Lambda",
        "Dynamo",
        "DB",
        "Autoscaling",
        "feature",
        "Data",
        "Access",
        "Layer",
        "AWS",
        "data",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "application",
        "system",
        "Device",
        "Simulator",
        "Spring",
        "Boot",
        "Python",
        "wxPython",
        "NumPy",
        "Twisted",
        "PyQT",
        "Web2py",
        "Pygal",
        "components",
        "Python",
        "Django",
        "framework",
        "code",
        "python",
        "manipulate",
        "data",
        "code",
        "reviews",
        "practices",
        "Git",
        "Bit",
        "Bucket",
        "server",
        "source",
        "repository",
        "ceaseless",
        "reconciliation",
        "framework",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "devices",
        "Python",
        "Bash",
        "component",
        "Reactjs",
        "Redux",
        "DOM",
        "Manipulation",
        "end",
        "end",
        "modules",
        "Python",
        "Django",
        "WSGI",
        "Pyramid",
        "Web",
        "Framework",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "Wrote",
        "unit",
        "test",
        "cases",
        "Controller",
        "Service",
        "DAO",
        "layers",
        "end",
        "Angularjs",
        "Reactjs",
        "Nodejs",
        "Bootstrap",
        "backbonejs",
        "JavaScript",
        "end",
        "REST",
        "webservices",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "knowledge",
        "database",
        "transactions",
        "management",
        "database",
        "changes",
        "JDBC",
        "Hibernate",
        "Spring",
        "Boot",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "Environment",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "Environment",
        "Lambda",
        "Python",
        "DynamoDB",
        "API",
        "Gateway",
        "Java",
        "J2EE",
        "REST",
        "API",
        "Spring",
        "framework",
        "HTML",
        "Amazon",
        "S3",
        "CloudWatch",
        "Gradle",
        "eclipse",
        "MSSQL",
        "Server",
        "GIT",
        "Jira",
        "Jenkins",
        "Confluence",
        "Sr",
        "Python",
        "Developer",
        "March",
        "May",
        "Responsibilities",
        "Agile",
        "Methodologies",
        "lifecycle",
        "development",
        "project",
        "programming",
        "Python",
        "Django",
        "Framework",
        "application",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JQuery",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "communication",
        "client",
        "server",
        "Secured",
        "Web",
        "services",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "JQuery",
        "Used",
        "JavaScript",
        "XML",
        "portion",
        "webpage",
        "JIRA",
        "processes",
        "Python",
        "bash",
        "scripts",
        "rating",
        "page",
        "application",
        "Angularjs",
        "Bootstrap",
        "Nodejs",
        "Reactjs",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Rspec",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "JQuery",
        "frontend",
        "components",
        "Javascript",
        "functions",
        "dynamism",
        "web",
        "pages",
        "client",
        "side",
        "Application",
        "Reactjs",
        "Nodejs",
        "NPM",
        "gulp",
        "directories",
        "view",
        "flux",
        "URLs",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "changes",
        "stack",
        "AWS",
        "largescale",
        "data",
        "center",
        "deployment",
        "Develop",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "implementation",
        "Apache",
        "Spark",
        "Spark",
        "Streaming",
        "applications",
        "scale",
        "data",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "Amazon",
        "Cloud",
        "EC2",
        "Amazon",
        "SQS",
        "project",
        "history",
        "Spark",
        "scripts",
        "Scala",
        "shell",
        "commands",
        "requirement",
        "Experience",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Worked",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "index",
        "searchquery",
        "number",
        "documents",
        "search",
        "invitation",
        "flow",
        "customers",
        "client",
        "portal",
        "applications",
        "API",
        "environment",
        "settings",
        "deployment",
        "checks",
        "code",
        "base",
        "checks",
        "packages",
        "patch",
        "soup",
        "b4",
        "unit",
        "testing",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "Environment",
        "Python",
        "Java",
        "Django",
        "HTML5",
        "CSS3",
        "XML",
        "JSON",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Puppet",
        "Postgre",
        "SQL",
        "Amazon",
        "s3",
        "AWS",
        "Jenkins",
        "Mongo",
        "DB",
        "search",
        "TSQL",
        "Beautiful",
        "soup",
        "TFS",
        "nose",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Python",
        "Developer",
        "Cybermatriks",
        "systems",
        "October",
        "June",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Django",
        "Framework",
        "application",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "JavaScript",
        "JSON",
        "portion",
        "webpage",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "project",
        "JIRA",
        "Agile",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "deployment",
        "project",
        "AWS",
        "skills",
        "user",
        "web",
        "applications",
        "Frontend",
        "object",
        "JavaScript",
        "Framework",
        "JQuery",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "expressions",
        "order",
        "pattern",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Skilled",
        "Collections",
        "Python",
        "user",
        "objects",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "support",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "TSQL",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Education",
        "Masters",
        "Skills",
        "DJANGO",
        "years",
        "Git",
        "years",
        "BOOTSTRAP",
        "years",
        "PYTHON",
        "years",
        "XML",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Frameworks",
        "Django",
        "web2py",
        "pyramid",
        "Flask",
        "Struts",
        "pylons",
        "CSS",
        "Bootstrap",
        "Technologies",
        "HTML",
        "CSS",
        "DOM",
        "SAX",
        "Java",
        "Script",
        "JQuery",
        "AJAX",
        "XML",
        "JS",
        "Programming",
        "Languages",
        "C",
        "C",
        "UML",
        "design",
        "Python36",
        "Java",
        "SQL",
        "PLSQL",
        "Python",
        "Python",
        "Django",
        "Flask",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "JQuery",
        "Numpy",
        "matPlotLib",
        "Pickle",
        "PySide",
        "Scipy",
        "wxPython",
        "PyTables",
        "pdb",
        "Version",
        "Control",
        "GIT",
        "GitHub",
        "SVN",
        "CVS",
        "Bitbucket",
        "Oracle",
        "MySQL",
        "PostgreSQL",
        "IDEs",
        "Development",
        "Tools",
        "Py",
        "Charm",
        "Sublime",
        "Text",
        "Web",
        "Services",
        "AWS",
        "Rackspace",
        "Cloud",
        "Amazon",
        "S3",
        "Operating",
        "Systems",
        "Windows",
        "Red",
        "hat",
        "Linux",
        "MAC",
        "OSX",
        "Protocols",
        "HTTPHTTPS",
        "SOAP",
        "SNMP",
        "SMTP",
        "REST",
        "Deployment",
        "Tools",
        "Heroku",
        "Jenkins",
        "Tracking",
        "Tools",
        "Bugzilla",
        "JIRA",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:52:09.816254",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Cincinnati Childrens Hospital Python Developer Cincinnati OH Extensive experience as a WebApplication Developer and Cloud Engineer as coding with analytical programming using Python Django HTML CSS JavaScript Actively involved in each phase of software Development life cycle SDLC experience in Agile Software Methodology Experience in developing web applications by following Model View Control MVC Architecture using server side applications Django Flask Web2Py and Pyramid Excellent Experience on various Python integrated IDEs such as Sublime Text Pycharm Eclipse NetBeans Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle Pyside SciPy PyTables Expert in STL containers Design Patterns Socket programming Multithreading Used PyQt to provide GUI for the user to create and perform operations view reports based on client data Experienced in designing web pages and Graphical user interfaces front end layouts on the web by using HTML DHTML CSS Bootstrap framework PHP XML JavaScript node Js and Angular Js Knowledge in Using Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Expertise in usage of pythonDjango Framework for developing web applications Experience with GUI frameworks such as PyJamas Python Good experience with python frameworks like Flask and WebApp2 Experience and understanding of React Redux life cycle with components and rendering to DOM Expertise in developing webbased applications using libraries and frameworks like Angularjs Bootstrap JQuery Knockoutjs Nodejs Backbonejs and Reactjs Hands on experience working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Experience on Python scripts to parse XML documents and load the data in database Good knowledge in establishing database connections for Java and Python by configuring packages like JDBC MySQL Python Experience object oriented programming OOP concepts using Python C and PHP Good experience with JDBC to perform operations such as CR UD operations and writing complex queries with Oracle 10g11g Good experience in Core Java concepts like object oriented programming MultiThreading and Exception Handling and knowledge in client server environment Good experience in ORM mapping using SQL Alchemy Experienced with integration of MongoDB and Cassandra databases Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experience in Python open stack APIs Experience with UML diagrams Expertise in building strong websites confirming Web 30 standards using Yahoo User Interface YUI compressor jshint eslint JQuery HTML CSS to develop valid code and tablefree sties Good hands on experience with JSON based REST web services Good experience in using Shell scripting for automation by following Python PEP Experience in utilizing SAS procedures Macros and other SAS application for data extraction data loading cleaning and reporting Performed mapping of JSONXML formatted data with relational databases like MySQL PostgreSQL and SQLite Hands on experience with installation and configuration of Apache Tomcat server Good knowledge in developing ColdFusion components custom tags and modified CF objects Expertise in full life cycle application development and good experience in Unit testing and Test Driven Development TDD and Behavior driven Development Hands on experience with continuous integration and automation using Jenkins Hands on experience with version control tools such as SVN GitHub and GitLab Work Experience Python Developer Cincinnati Childrens Hospital Python Developer June 2017 to Present Sr Python developer Responsibilities Experience working in a fast paced scrum environment Writing backend programming in Python and used the Django Framework to develop the application Designed base project structure and different modules using Microservices architecture Developed Shared Services Event and Data processors using Lambda functions Implemented AWS API Gateway Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Developed consumer based features and applications using Python and Django in test driven Development Configured Cloud Formation AWS IOT and IAM Developed dynamic web pages monitoring and notification tools using Python Django Pyramid Frameworks and Used Python Library Beautiful Soup for web scrapping Accessed database objects using Django Database APIs Developed internal auxiliary web apps using Python Flask Web2Py framework along with Bootstrap CSS HTML framework Developed S3 and Cloud Watch clients for data operations Used AJAX and JQuery for transmitting JSON data objects between frontend and controllers Involved in UI development for the application using HTML5 CSS3 Reactjs and Angularjs Developed user interface solutions using a Django and Pyramid web framework Used Python scripts to update content in the database and manipulate files Developed views and templates with Python and Flask to create a userfriendly website interface Used Flask framework for application development Used ECMAScript 6 ReactJS Flux Babel Node and WebPack to create a SPA Created entire application using Python Flask MySQL and Linux Developed methods for Create Read Update and Delete CRUD in Active Record Implemented Lambda to configure Dynamo DB Autoscaling feature Implemented Data Access Layer to access AWS DynamoDB data Created Python and Bash tools to increase efficiency of application system Created Device Simulator using Spring Boot Utilized Python libraries like wxPython NumPy Twisted PyQT Web2py Pygal Plotly Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Did code reviews and implemented best practices Used Git and Bit Bucket server for source repository Built up a completely computerized ceaseless reconciliation framework utilizing Git Gerrit Jenkins MySQL and custom devices created in Python and Bash Involved in creating a reusable component using Reactjs and Redux for DOM Manipulation Developed entire front end and back end modules using Python on Django WSGI Pyramid Web Framework Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented MVC architecture in developing the web application with the help of Django framework Designed and created backend data access modules using PLSQL stored procedures and Oracle Wrote unit test cases for Controller Service and DAO layers Developed front end using Angularjs Reactjs Nodejs Bootstrap backbonejs JavaScript where back end is java with REST webservices Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Extensive knowledge in database transactions management for database related changes by integrating JDBC Hibernate with Spring Boot Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Environment Amazon Web Services AWS Cloud Environment Lambda Python 36 35 DynamoDB API Gateway Java J2EE REST API Spring framework AngularJS HTML Amazon S3 CloudWatch Gradle eclipse MSSQL Server GIT Jira Jenkins Confluence Sr Python Developer PlantOS March 2016 to May 2017 Responsibilities Followed Agile Methodologies to manage full lifecycle development of the project Writing backend programming in Python and used the Django Framework to develop the application Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML5 CSS3 JavaScript JQuery and AngularJS Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and JQuery Used JavaScript and XML to update a portion of a webpage Automated JIRA processes using Python and bash scripts Developed rating and sharing single page application by using Angularjs Bootstrap Nodejs and Reactjs Developed consumer based features and applications using Python and Django in test driven Development Performed Unit testing Integration Testing GUI and web application testing using Rspec Worked on Jenkins continuous integration tool for deployment of project Used JQuery to make the frontend components interact with the Javascript functions to add dynamism to the web pages at the client side Created the Application using Reactjs and Nodejs libraries NPM gulp directories to generate desired view and flux to root the URLs properly Developed views and templates with Python and Djangos view controller and templating language to created userfriendly website interface Worked on changes to open stack and AWS to accommodate largescale data center deployment Develop remote integration with third party platforms by using RESTful web services and Successful implementation of Apache Spark and Spark Streaming applications for large scale data Using Amazon EC2 command line interface along with Bash Python to automate repetitive work Used Amazon Cloud EC2 along with Amazon SQS to upload and retrieve project history Developed Spark scripts by using Scala shell commands as per the requirement Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Worked on front end frame works like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployed the project into Jenkins using GIT version control system Learned to index and searchquery large number of documents inside Elastic search Creating invitation flow for customers to use the client portal for monitoring applications API Created the environment specific settings for a new deployment and update the deployment specific conditional checks in code base to use specific checks Used advanced packages like Mock patch and beautiful soup b4 to perform unit testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Improved code reuse and performance by making effective use of various design patterns Environment Python 35 34 27 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 AWS Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Python Developer Cybermatriks systems October 2012 to June 2015 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used the Django Framework to develop the application Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used JavaScript and JSON to update a portion of a webpage Develop consumer based features and applications using Python Django HTML Behavior Driven Development BDD and pair based programming Rewrite existing PythonDjango modules to deliver certain format of data Responsible for debugging the project monitored on JIRA Agile Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Special skills in developing user friendly simple yet effective web based applications Designed Frontend with in object oriented JavaScript Framework like JQuery Deployed the project into Heroku using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Used many regular expressions in order to match the pattern with the existing one Build SQL queries for performing various CRUD operations like create update read and delete Skilled in using Collections in Python for manipulating and looping through different user defined objects Performed Unit testing Integration testing web application testing Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Mongo DB MS SQL Server TSQL JavaScript Eclipse Git GitHub AWS Linux Shell Scripting Education Masters Skills DJANGO 5 years Git 5 years BOOTSTRAP 5 years PYTHON 5 years XML 5 years Additional Information Technical Skills Frameworks Django web2py pyramid Flask Struts pylons and CSS Bootstrap Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML Angular JS Programming Languages C C UML design Python36 35 27 Java SQL and PLSQL Python Libraries Python Django Flask Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap JQuery Numpy matPlotLib Pickle PySide Scipy wxPython PyTables pdb Version Control GIT GitHub SVN CVS Bitbucket Databases Oracle MySQL PostgreSQL MongoDB IDEs Development Tools Py Charm and Sublime Text Web Services AWS Rackspace Cloud Amazon S3 Operating Systems Windows Red hat Linux MAC OSX Protocols TCPIP HTTPHTTPS SOAP SNMP SMTP REST Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA Methodologies Agile Scrum and Waterfall",
    "unique_id": "146b8215-f34d-4eba-973c-bb3db8dd9bc6"
}