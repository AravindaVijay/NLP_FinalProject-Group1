{
    "clean_data": "JAVA DEVELOPER span lJAVAspan span lDEVELOPERspan JAVA DEVELOPER Palo Alto CA CA Over 4 years of experience in IT industry and worked in different phases on system development including analysis design development documentation implementing and testing using Java Stack Technologies and implementation of projects using various methodologies like Waterfall Agile and RUP Hands on experience in the implementation of Core Java 8 concepts like Streams API Lambda functions Generics Time API Functional Interfaces Multithreading Transaction Management Exception Handling Concurrency File handling IO Generics and Collection API Proficient in design and rapid development of web applications using JavaJ2EE like Hibernate Spring Struts JSP JNDI Servlets JPA WebSphere Commerce RMI Multithreading JDBC Java Beans EJB Entity Session Message Driven Bean XML JMS Java Mail Mutation Testing JUNITs and web services like SOA WSD and UDDI Experience in designing and developing User Interface UI applications and professional web applications using Restful Web Services SOAP IBM BPM Jasper Reports Server Extjs Eclipse NetBeans Visual Source Safe CVS SVN ICE faces HTML5 XHTML XML XSL XSLT AJAX JavaScript and CSS3 JSF JSTL Servlets and Angular JS with client scripting and serverside scripting languages like JavaScript jQuery JSON JSF JSP Strong experience in using various IDEs tools like NetBeans Eclipse IntelliJ BlueJ JBuilder Rational Application Developer RAD and JDeveloper for application development Experience in implementing open source frameworks like Hibernate JPA Ibatis ORM Frameworks and Struts frameworks and experience in mapping ObjectOriented domain model with relational databases Excellent experience in SOA based integration using Web services technologies such as SOAP Simple object access protocol REST Representational State Transfer and WSDL Web Services Description Language Experience with AJAX REST and JSON working with JavaScript frameworks like Bootstrap Nodejs and Angular JS Strong handson experience with Spring MVC Controllers Spring Boot Validators Spring Annotations Spring tag library Inversion Of Control IOC Spring LDAP Spring Batch Spring Cache Spring Integration Spring Scheduler Application Context configuration Spring Aspect Oriented Programming AOP Spring DAO JDBC JTA IO Hibernate Spring Microservices Spring REST Spring Eureka with Thymeleaf Spring Web flow Spring Ribbon Spring Netflix Zuul Spring Security along with Hibernate as the backend ORM tool for implementation of persistence layer and mapping of POJOs Excellence experience in Azure cloud computing mostly for building testing webservices like SaaS PaaS and IaaS Experience and indepth Knowledge of understanding in the strategy and practical implementation of AWS CloudSpecific technologies including S3 EC2 Virtual Private Cloud VPC Relational Database Service RDS Simple Queue Service SQS Elastic Block Store EBS Simple Notification Service SNS Cloud Front Cloud Formation Elastic Load Balancing AWS Identity and access management Elastic Cache Cloud Watch RedShift AWS Lambda SNS Dynamo DB Strong experience of using open source technologies including React Node JS Spring Angular jQuery Apache Storm Elastic Search Redis Mongo DB Bootstrap Junit etc Proficient in NoSQL transactional databases like Cassandra Mongo dB and big data technologies like SparkStorm Kafka and Hadoop Map Reduce Experience in implementing security models OAUTH2 and SAML for authenticationauthorization using Spring Security and IAM Cloud Security Proficient experience with SQL Server Oracle DB2 and MySQL as backend Databases Extensively used database tools like TOAD and SQL Developer Knowledge in Database Programming with Stored Procedures Triggers Functions using SQL PLSQL and Oracle Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS and experience with build tools like ANT Maven Gradle and logging tools like Log4J and DevOps tools such as Chef Puppet Ansible Jenkins GIT Experience in JUnit Mockito Spock Testing for unit testing and Selenium Web Driver Cucumber Behavior Driven Development testing for Integration testing Experience in Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application to AWS Strong command in leading Frameworks Team such as Angularjs backbonejs bootstrapjs D3Js ReactJs and NodeJS Expertise with servers using Apache Tomcat HTTP Server Web Sphere Web Logic and JBOSS Application server Experience in building high performance and scalable solutions using various Hadoop ecosystem tools like Pig Hive Sqoop Spark Solr and Kafka Hands on experience in installing configuring and using Hadoop ecosystem components like Hadoop MapReduce HDFS HBase Oozie Hive Sqoop Pig Zookeeper and Apache Storm Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Extensive experience in Test Driven Development TDD and actively involved in Requirement gathering Analysis Design Reviews Coding Code Reviews Unit and Integration Testing Experience in implementing various design patterns including Data Access Object Session Facade Business Delegate Service Locator MVC Data Transfer Object and Singleton Expertise in creating Conceptual Data Models Use Case Diagrams Class Diagrams and State Diagrams Work Experience JAVA DEVELOPER TESLA Palo Alto CA December 2018 to Present Involved in design and development as a J2SE and J2EE Software developer on an Agile platform to development processes on Software Development life cycle SDLC Prepared the Java 8 development structure for MyEclipse and Replaced the Joda library using streams and lambda expressions Used the stream feature of Java 8 for aggregate operation and pipelining Backend application code developed using Java 8 and Spring Boot Services to consume the data from the Database and from the other applications Implementation of the markup of the project using HTML CSS Bootstrap and created different modules in the application and applied AngularJS to enhance the user interface for making restful API calls and data binding Used IBM Integration Bus IIB to connect to TSQL stored procedures and connect it with Java component to write custom business logic Involved in deploying the ESL portal application on IBM WebSphere portal server Used SAML for SSO login to access the web service provided and OAuth for authorizing the user to the application Involved in identifying job dependencies to design workflow for Oozie and resource management for YARN Worked with NPM package manager tools and created reusable templates using Angular directives Programmed in Angular 4 to upload post filesimages to the AWS S3 browser from the Frontend by installing NPM package of AWSSDK Used JPA and Hibernate for dataobject mapping to enable persistence of the data Implemented DAO classes separately to modularize the data access component Used JPA tool for generating entities from database Worked on serverside web applications using Nodejs and involved in Construction of UI using jQuery AngularJS Ext JS ReactJS Bootstrap and JavaScript Involved in designing developing and testing the web application by using the HTML5 CSS3 Bootstrap NodeJS and ReactJS Developed and implemented UI controls and APIs with ExtJS and Coded the frontend Ajax framework components using Web 20 JavaScript library ExtJS Used ReactRouter to turn application into Single Page Application Used Spark API over Cloudera Hadoop YARN to perform analytics on data in Hive Worked on Deployment Automation of all microservices to pull image from private Docker registry and deploy to Kubernetes Cluster Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Built realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite Worked to integrate the enterprise application technologies with existing JVM environment used in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and JENKI Used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Implemented Single Sign On and policybased authentication using Site Minder security framework Worked on design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Involved in Rule project design Orchestrate Authorization debugging for launch configuration for rule project analysis reporting execution and publish to JRules team server Implemented Docker container service build pipe line like Jenkins Bamboo and GoCD for Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Implemented continuous deployment system with Jenkins Code Deploy Ops Works and Packer for deployment of Java Applications Used Spring MVC framework to enable the interactions between JSPView layer and implemented different design patterns with J2EE XML technology and involved in handling transactions using Spring Declarative Transaction Management Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database Involved in development of java components by using Hibernate and Spring to persist the data in DB Involved in ORM mappings for associations Inheritance fetching strategy performing CRUD operations and managing second level cache using Hibernate Used SOA Integration service for Data Integration Service Functional Integration Service and used SOAPUI for the functional testing inspection and invocation of Spring based Web services Migration of current search process from Database to Solr search engine Designing new components to fit in the already existing architecture using core Java multithreading different design patterns like factory method Abstract factory pattern Singleton while developing webbased Applications using REST Web services Implemented Oracle SQL Queries PLSQL stored procedures functions triggers sequences and builtin functions to retrieve and update data from the databases Created rulebased decision services using BRMS ILOG JRules framework and developed specialized search system using MongoDB AngularJS Java Servlets JUnit and Maven Used Microservices to communicate using synchronous protocols HTTP and REST for implementing SOAP Deployed the application on Amazon web Services AWS using Elastic Cloud Computing EC2 and Elastic Container Services ECS instances Used Angular to build custom reusable components to use across the application pages Project migration into cloud environment using AWS Docker container JAVA DEVELOPER PAYPAL India May 2017 to November 2018 Involved in SDLC Requirements gathering Analysis Design Development and Testing of application using AGILE methodology SCRUM Involved in design discussions and understanding of business requirements and identify the relevant functional and technical requirements Participated in requirement gathering and framework implementation sessions through methodology using Rally Agile Development Software Multithreading was used to process data in chunks to improve performance Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator and Singleton Used React JS to create controllers to handle events triggered by clients and send request to server Used React JS for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts Involved in building a high efficiency Web Application using React and Node JS Developed interactive web pages using HTML CSS and JS and used Bootstrap for cross browser compatibility Worked on responsive design and developed a responsive website that could be served to Tablets and mobile users using ReactJS Designed developed and architected middle tier Restful Web API layer for the mobile applications Wrote a Scala library that allows data scientists to manipulate data structures more easily As part of the library native data structures like Spark Data frames were extended to support new functionality Developed Spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed the application using Spring Framework that leverages Model View Layer MVC architecture Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Spring Security is used for Authorization like Method Level Authorization and URL Level Authorization Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via XML response and updating the HTML pages Used Web services SOAP for transmission of large blocks of data over HTTP Used XML Web Services using SOAP protocol to transfer data from one application to other which is remote Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Configured Hibernate objects as Spring Beans in the Spring Configuration File Configured the Hibernate configuration files to persist the data to the Oracle 11g Database Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Used SOAP UI for testing the web services AppDynamics for application health and Mockito for testing Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Used Log4j framework to logtrack application Created continuous integration builds using Jenkins and deployed on JBoss Created CICD pipelines and setup auto trigger auto build and auto deployment with the help of the CICD tool like Jenkins JAVA DEVELOPER FACEBOOK India January 2015 to April 2017 Actively involved in Analysis Design Development System Testing and User Acceptance Testing Used Agile approaches Including TestDriven Development TDD and Scrum Designed and developed UI using spring view component HTML5 CSS3 Bootstrap AngularJS and Vuejs Built custom UI widgets directives filters and Application logic using AngularJS MVC Architecture Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 40 Design coded and tested key modules of the project using java oops concepts Used most of the new features of Java 8 like lambda expressions functional interfaces Method references and stream API Used Spring and Hibernate for implementing IOC AOP and ORM for back end tiers Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Developed Hibernate with Spring Integration as the data abstraction to interact with the database of MongoDB and used Hibernate objectrelationalmapping ORM solution and technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Multithreading and Concurrency and implemented threads while preparing and generating mails Used a Microservice architecture with Spring Bootbased services interacting through REST and Apache Kafka Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Created RESTful web services using Spring RESTful API sending JSON data between Frontend middle tier Controller Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in Oracle DB and NoSQL DB Used Continuous delivery Continuous Integration tools Docker Jenkins to deploy this application to AWS and used GIT for version control of code for incremental development and JIRA as a defect tracking tool and Maven as a building tool Used SonarQube for continuous inspection of code quality Wrote JUnit test cases to test the application Logging framework Log4J is used for log messages Implemented log4j for application logging and to troubleshoot issues in debug mode Education Masters",
    "entities": [
        "lJAVAspan",
        "ExtJS",
        "Database Created",
        "Spring Bootbased",
        "Spring Framework",
        "Hibernate JPA Ibatis ORM Frameworks",
        "Test Driven Development TDD",
        "ESL",
        "Analysis Design Development System Testing",
        "ORM",
        "Data Access Object Session Facade Business Delegate Service",
        "Nodejs",
        "AWS CloudSpecific",
        "Implemented Docker",
        "J2EE XML",
        "Component",
        "Created Stacks",
        "HTTP",
        "Inversion Of Control IOC Spring",
        "JTA",
        "Used SOAP UI",
        "JBuilder Rational Application Developer RAD",
        "Java Stack Technologies",
        "Elastic Container Services",
        "IBM",
        "Hive Worked on Deployment Automation",
        "Hibernate Session Factory",
        "WSD",
        "SVN Subversion",
        "XSLT AJAX JavaScript",
        "Hadoop",
        "XML",
        "SOAP",
        "Used React JS",
        "OAuth",
        "JUnit",
        "Criteria Developed Hibernate",
        "DevOps",
        "BRMS ILOG JRules",
        "NodeJS Expertise",
        "JavaJ2EE",
        "DB Involved",
        "Oracle Strong",
        "ReactRouter",
        "FACEBOOK India",
        "Amazon",
        "SparkStorm Kafka",
        "Azure",
        "ELK",
        "Cloudera Hadoop",
        "WebSphere",
        "Oracle SQL Queries",
        "DAO",
        "AWS Docker",
        "JPA",
        "Oracle Relational",
        "AWS Infrastructure",
        "AWS S3",
        "Spark Data",
        "Continuous",
        "Mockito",
        "Expression Query",
        "IO Generics and Collection API Proficient",
        "SOA",
        "AGILE",
        "Spring Security",
        "JavaScript Involved",
        "Maven Used Microservices",
        "JSPView",
        "ObjectOriented",
        "SonarQube",
        "Frameworks Team",
        "Angular 40 Design",
        "Hibernate Spring Microservices",
        "SOAPHTTP",
        "MVC",
        "Agile",
        "Joda",
        "Integration Testing",
        "GIT",
        "Jenkins Code Deploy Ops Works",
        "ANT Maven Gradle",
        "Data Integration Service Functional Integration Service",
        "Waterfall Agile and RUP Hands",
        "HTML CSS",
        "JS",
        "API",
        "Database",
        "Orchestrate Authorization",
        "Virtual DOM JSX React Native concepts Involved",
        "Chef Puppet Ansible Jenkins GIT",
        "Created",
        "AWS",
        "Rally Agile Development Software Multithreading",
        "Coded",
        "Singleton",
        "JBOSS Application",
        "Spring Declarative Transaction Management Worked",
        "Oracle DB",
        "Backbone JS",
        "Web Application using React",
        "Construction of UI",
        "Singleton Expertise",
        "java",
        "HTML",
        "Oozie",
        "Bootstrap Nodejs",
        "SQL",
        "AWS Strong",
        "NetBeans Visual Source Safe CVS SVN",
        "Kubernetes Cluster Installed Kafka",
        "Bootstrap",
        "MVC Architecture",
        "NPM",
        "Software Development",
        "JavaScript Unit",
        "JUnit Mockito Spock",
        "Hadoop MapReduce HDFS HBase Oozie Hive Sqoop",
        "CICD",
        "JBoss Created CICD",
        "Pig Hive Sqoop Spark",
        "UDDI",
        "Continuous Deployment",
        "CRUD",
        "Backend",
        "Session Faade Business Delegate Service Locator",
        "JAVA",
        "SQL Server Oracle DB2",
        "Spring Boot Services",
        "Maven",
        "Site Minder",
        "JavaScript",
        "UI",
        "HQL Named Parameters Named Queries",
        "Continuous Integration",
        "Used IBM Integration Bus IIB",
        "Ext JS",
        "Kafka System",
        "Conceptual Data Models Use Case Diagrams Class Diagrams",
        "J2EE Software",
        "SVN",
        "Spring MVC Controllers",
        "jQuery",
        "Restful Web Services",
        "MVC Object Orient Design Singleton Factory",
        "AppDynamics",
        "REST",
        "NetBeans",
        "Present Involved",
        "NoSQL",
        "SQL Developer Knowledge",
        "Amazon web Services AWS",
        "Application",
        "TOAD",
        "Monitoring",
        "Single Page Application",
        "JENKI Used Orchestration",
        "HTML CSS Bootstrap",
        "Node"
    ],
    "experience": "Experience in designing and developing User Interface UI applications and professional web applications using Restful Web Services SOAP IBM BPM Jasper Reports Server Extjs Eclipse NetBeans Visual Source Safe CVS SVN ICE faces HTML5 XHTML XML XSL XSLT AJAX JavaScript and CSS3 JSF JSTL Servlets and Angular JS with client scripting and serverside scripting languages like JavaScript jQuery JSON JSF JSP Strong experience in using various IDEs tools like NetBeans Eclipse IntelliJ BlueJ JBuilder Rational Application Developer RAD and JDeveloper for application development Experience in implementing open source frameworks like Hibernate JPA Ibatis ORM Frameworks and Struts frameworks and experience in mapping ObjectOriented domain model with relational databases Excellent experience in SOA based integration using Web services technologies such as SOAP Simple object access protocol REST Representational State Transfer and WSDL Web Services Description Language Experience with AJAX REST and JSON working with JavaScript frameworks like Bootstrap Nodejs and Angular JS Strong handson experience with Spring MVC Controllers Spring Boot Validators Spring Annotations Spring tag library Inversion Of Control IOC Spring LDAP Spring Batch Spring Cache Spring Integration Spring Scheduler Application Context configuration Spring Aspect Oriented Programming AOP Spring DAO JDBC JTA IO Hibernate Spring Microservices Spring REST Spring Eureka with Thymeleaf Spring Web flow Spring Ribbon Spring Netflix Zuul Spring Security along with Hibernate as the backend ORM tool for implementation of persistence layer and mapping of POJOs Excellence experience in Azure cloud computing mostly for building testing webservices like SaaS PaaS and IaaS Experience and indepth Knowledge of understanding in the strategy and practical implementation of AWS CloudSpecific technologies including S3 EC2 Virtual Private Cloud VPC Relational Database Service RDS Simple Queue Service SQS Elastic Block Store EBS Simple Notification Service SNS Cloud Front Cloud Formation Elastic Load Balancing AWS Identity and access management Elastic Cache Cloud Watch RedShift AWS Lambda SNS Dynamo DB Strong experience of using open source technologies including React Node JS Spring Angular jQuery Apache Storm Elastic Search Redis Mongo DB Bootstrap Junit etc Proficient in NoSQL transactional databases like Cassandra Mongo dB and big data technologies like SparkStorm Kafka and Hadoop Map Reduce Experience in implementing security models OAUTH2 and SAML for authenticationauthorization using Spring Security and IAM Cloud Security Proficient experience with SQL Server Oracle DB2 and MySQL as backend Databases Extensively used database tools like TOAD and SQL Developer Knowledge in Database Programming with Stored Procedures Triggers Functions using SQL PLSQL and Oracle Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS and experience with build tools like ANT Maven Gradle and logging tools like Log4J and DevOps tools such as Chef Puppet Ansible Jenkins GIT Experience in JUnit Mockito Spock Testing for unit testing and Selenium Web Driver Cucumber Behavior Driven Development testing for Integration testing Experience in Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application to AWS Strong command in leading Frameworks Team such as Angularjs backbonejs bootstrapjs D3Js ReactJs and NodeJS Expertise with servers using Apache Tomcat HTTP Server Web Sphere Web Logic and JBOSS Application server Experience in building high performance and scalable solutions using various Hadoop ecosystem tools like Pig Hive Sqoop Spark Solr and Kafka Hands on experience in installing configuring and using Hadoop ecosystem components like Hadoop MapReduce HDFS HBase Oozie Hive Sqoop Pig Zookeeper and Apache Storm Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Extensive experience in Test Driven Development TDD and actively involved in Requirement gathering Analysis Design Reviews Coding Code Reviews Unit and Integration Testing Experience in implementing various design patterns including Data Access Object Session Facade Business Delegate Service Locator MVC Data Transfer Object and Singleton Expertise in creating Conceptual Data Models Use Case Diagrams Class Diagrams and State Diagrams Work Experience JAVA DEVELOPER TESLA Palo Alto CA December 2018 to Present Involved in design and development as a J2SE and J2EE Software developer on an Agile platform to development processes on Software Development life cycle SDLC Prepared the Java 8 development structure for MyEclipse and Replaced the Joda library using streams and lambda expressions Used the stream feature of Java 8 for aggregate operation and pipelining Backend application code developed using Java 8 and Spring Boot Services to consume the data from the Database and from the other applications Implementation of the markup of the project using HTML CSS Bootstrap and created different modules in the application and applied AngularJS to enhance the user interface for making restful API calls and data binding Used IBM Integration Bus IIB to connect to TSQL stored procedures and connect it with Java component to write custom business logic Involved in deploying the ESL portal application on IBM WebSphere portal server Used SAML for SSO login to access the web service provided and OAuth for authorizing the user to the application Involved in identifying job dependencies to design workflow for Oozie and resource management for YARN Worked with NPM package manager tools and created reusable templates using Angular directives Programmed in Angular 4 to upload post filesimages to the AWS S3 browser from the Frontend by installing NPM package of AWSSDK Used JPA and Hibernate for dataobject mapping to enable persistence of the data Implemented DAO classes separately to modularize the data access component Used JPA tool for generating entities from database Worked on serverside web applications using Nodejs and involved in Construction of UI using jQuery AngularJS Ext JS ReactJS Bootstrap and JavaScript Involved in designing developing and testing the web application by using the HTML5 CSS3 Bootstrap NodeJS and ReactJS Developed and implemented UI controls and APIs with ExtJS and Coded the frontend Ajax framework components using Web 20 JavaScript library ExtJS Used ReactRouter to turn application into Single Page Application Used Spark API over Cloudera Hadoop YARN to perform analytics on data in Hive Worked on Deployment Automation of all microservices to pull image from private Docker registry and deploy to Kubernetes Cluster Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Built realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite Worked to integrate the enterprise application technologies with existing JVM environment used in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and JENKI Used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Implemented Single Sign On and policybased authentication using Site Minder security framework Worked on design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Involved in Rule project design Orchestrate Authorization debugging for launch configuration for rule project analysis reporting execution and publish to JRules team server Implemented Docker container service build pipe line like Jenkins Bamboo and GoCD for Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Implemented continuous deployment system with Jenkins Code Deploy Ops Works and Packer for deployment of Java Applications Used Spring MVC framework to enable the interactions between JSPView layer and implemented different design patterns with J2EE XML technology and involved in handling transactions using Spring Declarative Transaction Management Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database Involved in development of java components by using Hibernate and Spring to persist the data in DB Involved in ORM mappings for associations Inheritance fetching strategy performing CRUD operations and managing second level cache using Hibernate Used SOA Integration service for Data Integration Service Functional Integration Service and used SOAPUI for the functional testing inspection and invocation of Spring based Web services Migration of current search process from Database to Solr search engine Designing new components to fit in the already existing architecture using core Java multithreading different design patterns like factory method Abstract factory pattern Singleton while developing webbased Applications using REST Web services Implemented Oracle SQL Queries PLSQL stored procedures functions triggers sequences and builtin functions to retrieve and update data from the databases Created rulebased decision services using BRMS ILOG JRules framework and developed specialized search system using MongoDB AngularJS Java Servlets JUnit and Maven Used Microservices to communicate using synchronous protocols HTTP and REST for implementing SOAP Deployed the application on Amazon web Services AWS using Elastic Cloud Computing EC2 and Elastic Container Services ECS instances Used Angular to build custom reusable components to use across the application pages Project migration into cloud environment using AWS Docker container JAVA DEVELOPER PAYPAL India May 2017 to November 2018 Involved in SDLC Requirements gathering Analysis Design Development and Testing of application using AGILE methodology SCRUM Involved in design discussions and understanding of business requirements and identify the relevant functional and technical requirements Participated in requirement gathering and framework implementation sessions through methodology using Rally Agile Development Software Multithreading was used to process data in chunks to improve performance Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator and Singleton Used React JS to create controllers to handle events triggered by clients and send request to server Used React JS for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts Involved in building a high efficiency Web Application using React and Node JS Developed interactive web pages using HTML CSS and JS and used Bootstrap for cross browser compatibility Worked on responsive design and developed a responsive website that could be served to Tablets and mobile users using ReactJS Designed developed and architected middle tier Restful Web API layer for the mobile applications Wrote a Scala library that allows data scientists to manipulate data structures more easily As part of the library native data structures like Spark Data frames were extended to support new functionality Developed Spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed the application using Spring Framework that leverages Model View Layer MVC architecture Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Spring Security is used for Authorization like Method Level Authorization and URL Level Authorization Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via XML response and updating the HTML pages Used Web services SOAP for transmission of large blocks of data over HTTP Used XML Web Services using SOAP protocol to transfer data from one application to other which is remote Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Configured Hibernate objects as Spring Beans in the Spring Configuration File Configured the Hibernate configuration files to persist the data to the Oracle 11 g Database Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Used SOAP UI for testing the web services AppDynamics for application health and Mockito for testing Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Used Log4j framework to logtrack application Created continuous integration builds using Jenkins and deployed on JBoss Created CICD pipelines and setup auto trigger auto build and auto deployment with the help of the CICD tool like Jenkins JAVA DEVELOPER FACEBOOK India January 2015 to April 2017 Actively involved in Analysis Design Development System Testing and User Acceptance Testing Used Agile approaches Including TestDriven Development TDD and Scrum Designed and developed UI using spring view component HTML5 CSS3 Bootstrap AngularJS and Vuejs Built custom UI widgets directives filters and Application logic using AngularJS MVC Architecture Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 40 Design coded and tested key modules of the project using java oops concepts Used most of the new features of Java 8 like lambda expressions functional interfaces Method references and stream API Used Spring and Hibernate for implementing IOC AOP and ORM for back end tiers Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Developed Hibernate with Spring Integration as the data abstraction to interact with the database of MongoDB and used Hibernate objectrelationalmapping ORM solution and technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Multithreading and Concurrency and implemented threads while preparing and generating mails Used a Microservice architecture with Spring Bootbased services interacting through REST and Apache Kafka Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Created RESTful web services using Spring RESTful API sending JSON data between Frontend middle tier Controller Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in Oracle DB and NoSQL DB Used Continuous delivery Continuous Integration tools Docker Jenkins to deploy this application to AWS and used GIT for version control of code for incremental development and JIRA as a defect tracking tool and Maven as a building tool Used SonarQube for continuous inspection of code quality Wrote JUnit test cases to test the application Logging framework Log4J is used for log messages Implemented log4j for application logging and to troubleshoot issues in debug mode Education Masters",
    "extracted_keywords": [
        "DEVELOPER",
        "lJAVAspan",
        "span",
        "lDEVELOPERspan",
        "DEVELOPER",
        "Palo",
        "Alto",
        "CA",
        "CA",
        "years",
        "experience",
        "IT",
        "industry",
        "phases",
        "system",
        "development",
        "analysis",
        "design",
        "development",
        "documentation",
        "testing",
        "Java",
        "Stack",
        "Technologies",
        "implementation",
        "projects",
        "methodologies",
        "Waterfall",
        "Agile",
        "RUP",
        "Hands",
        "experience",
        "implementation",
        "Core",
        "Java",
        "concepts",
        "Streams",
        "API",
        "Lambda",
        "functions",
        "Generics",
        "Time",
        "API",
        "Functional",
        "Interfaces",
        "Multithreading",
        "Transaction",
        "Management",
        "Exception",
        "Handling",
        "Concurrency",
        "File",
        "IO",
        "Generics",
        "Collection",
        "API",
        "Proficient",
        "design",
        "development",
        "web",
        "applications",
        "JavaJ2EE",
        "Hibernate",
        "Spring",
        "Struts",
        "JSP",
        "JNDI",
        "Servlets",
        "JPA",
        "WebSphere",
        "Commerce",
        "RMI",
        "JDBC",
        "Java",
        "Beans",
        "EJB",
        "Entity",
        "Session",
        "Message",
        "Driven",
        "Bean",
        "XML",
        "JMS",
        "Java",
        "Mail",
        "Mutation",
        "Testing",
        "JUNITs",
        "web",
        "services",
        "SOA",
        "WSD",
        "UDDI",
        "Experience",
        "User",
        "Interface",
        "UI",
        "applications",
        "web",
        "applications",
        "Restful",
        "Web",
        "Services",
        "SOAP",
        "IBM",
        "BPM",
        "Jasper",
        "Reports",
        "Server",
        "Extjs",
        "Eclipse",
        "NetBeans",
        "Visual",
        "Source",
        "Safe",
        "CVS",
        "SVN",
        "ICE",
        "HTML5",
        "XHTML",
        "XML",
        "XSL",
        "XSLT",
        "AJAX",
        "JavaScript",
        "CSS3",
        "JSF",
        "JSTL",
        "Servlets",
        "Angular",
        "JS",
        "client",
        "scripting",
        "scripting",
        "languages",
        "JavaScript",
        "jQuery",
        "JSON",
        "JSF",
        "JSP",
        "Strong",
        "experience",
        "IDEs",
        "tools",
        "NetBeans",
        "Eclipse",
        "BlueJ",
        "JBuilder",
        "Rational",
        "Application",
        "Developer",
        "RAD",
        "JDeveloper",
        "application",
        "development",
        "Experience",
        "source",
        "frameworks",
        "Hibernate",
        "JPA",
        "Ibatis",
        "ORM",
        "Frameworks",
        "Struts",
        "frameworks",
        "experience",
        "mapping",
        "ObjectOriented",
        "domain",
        "model",
        "databases",
        "experience",
        "SOA",
        "integration",
        "Web",
        "services",
        "technologies",
        "object",
        "access",
        "protocol",
        "REST",
        "Representational",
        "State",
        "Transfer",
        "WSDL",
        "Web",
        "Services",
        "Description",
        "Language",
        "Experience",
        "AJAX",
        "REST",
        "JSON",
        "JavaScript",
        "frameworks",
        "Bootstrap",
        "Nodejs",
        "Angular",
        "JS",
        "Strong",
        "handson",
        "experience",
        "Spring",
        "MVC",
        "Controllers",
        "Spring",
        "Boot",
        "Validators",
        "Spring",
        "Annotations",
        "Spring",
        "tag",
        "library",
        "Inversion",
        "Control",
        "IOC",
        "Spring",
        "LDAP",
        "Spring",
        "Batch",
        "Spring",
        "Cache",
        "Spring",
        "Integration",
        "Spring",
        "Scheduler",
        "Application",
        "Context",
        "configuration",
        "Spring",
        "Aspect",
        "Oriented",
        "Programming",
        "AOP",
        "Spring",
        "DAO",
        "JDBC",
        "JTA",
        "IO",
        "Hibernate",
        "Spring",
        "Microservices",
        "Spring",
        "REST",
        "Spring",
        "Eureka",
        "Thymeleaf",
        "Spring",
        "Web",
        "flow",
        "Spring",
        "Ribbon",
        "Spring",
        "Netflix",
        "Zuul",
        "Spring",
        "Security",
        "Hibernate",
        "ORM",
        "tool",
        "implementation",
        "persistence",
        "layer",
        "mapping",
        "POJOs",
        "Excellence",
        "experience",
        "cloud",
        "computing",
        "testing",
        "webservices",
        "SaaS",
        "PaaS",
        "IaaS",
        "Experience",
        "Knowledge",
        "understanding",
        "strategy",
        "implementation",
        "AWS",
        "CloudSpecific",
        "technologies",
        "S3",
        "EC2",
        "Virtual",
        "Cloud",
        "VPC",
        "Relational",
        "Database",
        "Service",
        "RDS",
        "Simple",
        "Queue",
        "Service",
        "SQS",
        "Elastic",
        "Block",
        "Store",
        "EBS",
        "Simple",
        "Notification",
        "Service",
        "SNS",
        "Cloud",
        "Front",
        "Cloud",
        "Formation",
        "Elastic",
        "Load",
        "Balancing",
        "AWS",
        "Identity",
        "access",
        "management",
        "Elastic",
        "Cache",
        "Cloud",
        "Watch",
        "RedShift",
        "AWS",
        "Lambda",
        "SNS",
        "Dynamo",
        "DB",
        "Strong",
        "experience",
        "source",
        "technologies",
        "React",
        "Node",
        "JS",
        "Spring",
        "Angular",
        "jQuery",
        "Apache",
        "Storm",
        "Elastic",
        "Search",
        "Redis",
        "Mongo",
        "DB",
        "Bootstrap",
        "Junit",
        "Proficient",
        "NoSQL",
        "databases",
        "Cassandra",
        "Mongo",
        "data",
        "technologies",
        "SparkStorm",
        "Kafka",
        "Hadoop",
        "Map",
        "Reduce",
        "Experience",
        "security",
        "models",
        "OAUTH2",
        "SAML",
        "authenticationauthorization",
        "Spring",
        "Security",
        "IAM",
        "Cloud",
        "Security",
        "Proficient",
        "experience",
        "SQL",
        "Server",
        "Oracle",
        "DB2",
        "MySQL",
        "Databases",
        "database",
        "tools",
        "TOAD",
        "SQL",
        "Developer",
        "Knowledge",
        "Database",
        "Programming",
        "Stored",
        "Procedures",
        "Triggers",
        "Functions",
        "SQL",
        "PLSQL",
        "Oracle",
        "knowledge",
        "JavaScript",
        "Unit",
        "testing",
        "Jasmin",
        "Karma",
        "Protractor",
        "Angular",
        "JS",
        "Mocha",
        "Chai",
        "React",
        "JS",
        "Backbone",
        "JS",
        "experience",
        "build",
        "tools",
        "ANT",
        "Maven",
        "Gradle",
        "tools",
        "DevOps",
        "tools",
        "Chef",
        "Puppet",
        "Ansible",
        "Jenkins",
        "GIT",
        "Experience",
        "JUnit",
        "Mockito",
        "Spock",
        "Testing",
        "unit",
        "testing",
        "Selenium",
        "Web",
        "Driver",
        "Cucumber",
        "Behavior",
        "Driven",
        "Development",
        "testing",
        "Integration",
        "testing",
        "Experience",
        "delivery",
        "Continuous",
        "Integration",
        "CDCI",
        "tools",
        "Docker",
        "Jenkins",
        "application",
        "AWS",
        "command",
        "Frameworks",
        "Team",
        "Angularjs",
        "backbonejs",
        "bootstrapjs",
        "D3Js",
        "ReactJs",
        "NodeJS",
        "Expertise",
        "servers",
        "Apache",
        "Tomcat",
        "HTTP",
        "Server",
        "Web",
        "Sphere",
        "Web",
        "Logic",
        "JBOSS",
        "Application",
        "server",
        "Experience",
        "performance",
        "solutions",
        "Hadoop",
        "ecosystem",
        "tools",
        "Pig",
        "Hive",
        "Sqoop",
        "Spark",
        "Solr",
        "Kafka",
        "Hands",
        "experience",
        "configuring",
        "Hadoop",
        "ecosystem",
        "components",
        "Hadoop",
        "MapReduce",
        "HDFS",
        "HBase",
        "Oozie",
        "Hive",
        "Sqoop",
        "Pig",
        "Zookeeper",
        "Apache",
        "Storm",
        "Expertise",
        "design",
        "development",
        "web",
        "enterprise",
        "applications",
        "Type",
        "technologies",
        "Scala",
        "Akka",
        "Play",
        "framework",
        "Slick",
        "experience",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Requirement",
        "Analysis",
        "Design",
        "Reviews",
        "Coding",
        "Code",
        "Reviews",
        "Unit",
        "Integration",
        "Testing",
        "Experience",
        "design",
        "patterns",
        "Data",
        "Access",
        "Object",
        "Session",
        "Facade",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "MVC",
        "Data",
        "Transfer",
        "Object",
        "Singleton",
        "Expertise",
        "Conceptual",
        "Data",
        "Models",
        "Use",
        "Case",
        "Diagrams",
        "Class",
        "Diagrams",
        "State",
        "Diagrams",
        "Work",
        "Experience",
        "DEVELOPER",
        "TESLA",
        "Palo",
        "Alto",
        "CA",
        "December",
        "Present",
        "design",
        "development",
        "J2SE",
        "J2EE",
        "Software",
        "developer",
        "platform",
        "development",
        "processes",
        "Software",
        "Development",
        "life",
        "cycle",
        "SDLC",
        "Java",
        "development",
        "structure",
        "MyEclipse",
        "Joda",
        "library",
        "streams",
        "expressions",
        "stream",
        "feature",
        "Java",
        "operation",
        "Backend",
        "application",
        "code",
        "Java",
        "Spring",
        "Boot",
        "Services",
        "data",
        "Database",
        "applications",
        "Implementation",
        "markup",
        "project",
        "HTML",
        "CSS",
        "Bootstrap",
        "modules",
        "application",
        "user",
        "interface",
        "API",
        "calls",
        "data",
        "IBM",
        "Integration",
        "Bus",
        "IIB",
        "TSQL",
        "procedures",
        "Java",
        "component",
        "custom",
        "business",
        "logic",
        "ESL",
        "application",
        "IBM",
        "WebSphere",
        "server",
        "SAML",
        "SSO",
        "login",
        "web",
        "service",
        "OAuth",
        "user",
        "application",
        "job",
        "dependencies",
        "workflow",
        "Oozie",
        "resource",
        "management",
        "YARN",
        "NPM",
        "package",
        "manager",
        "tools",
        "templates",
        "directives",
        "Angular",
        "post",
        "filesimages",
        "AWS",
        "S3",
        "browser",
        "Frontend",
        "NPM",
        "package",
        "AWSSDK",
        "JPA",
        "Hibernate",
        "mapping",
        "persistence",
        "data",
        "DAO",
        "classes",
        "data",
        "access",
        "component",
        "JPA",
        "tool",
        "entities",
        "database",
        "serverside",
        "web",
        "applications",
        "Nodejs",
        "Construction",
        "UI",
        "jQuery",
        "Ext",
        "JS",
        "ReactJS",
        "Bootstrap",
        "JavaScript",
        "web",
        "application",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "NodeJS",
        "ReactJS",
        "UI",
        "controls",
        "APIs",
        "ExtJS",
        "framework",
        "components",
        "Web",
        "JavaScript",
        "library",
        "ExtJS",
        "ReactRouter",
        "application",
        "Single",
        "Page",
        "Application",
        "Spark",
        "API",
        "Cloudera",
        "Hadoop",
        "YARN",
        "analytics",
        "data",
        "Hive",
        "Worked",
        "Deployment",
        "Automation",
        "microservices",
        "image",
        "Docker",
        "registry",
        "Kubernetes",
        "Cluster",
        "Installed",
        "Kafka",
        "manager",
        "consumer",
        "logs",
        "Kafka",
        "Metrics",
        "topics",
        "Partitions",
        "analytics",
        "purpose",
        "Spring",
        "CloudNetflix",
        "OSS",
        "stack",
        "microservices",
        "deployment",
        "auto",
        "configurations",
        "Eureka",
        "Service",
        "Discovery",
        "Server",
        "Ribbon",
        "Dynamic",
        "Routing",
        "Load",
        "Balancer",
        "Hystrix",
        "Circuit",
        "Breaker",
        "Zuul",
        "Edge",
        "proxy",
        "Monitoring",
        "log",
        "ELK",
        "dashboard",
        "applications",
        "visualization",
        "analytics",
        "Apache",
        "Web",
        "servers",
        "Elastic",
        "Search",
        "Logstash",
        "Kibana",
        "ELK",
        "D3JS",
        "Grafana",
        "Splunk",
        "Graphite",
        "enterprise",
        "application",
        "technologies",
        "JVM",
        "environment",
        "integration",
        "tools",
        "Spring",
        "Integration",
        "Mule",
        "ESB",
        "Apache",
        "CXF",
        "Apache",
        "Kafka",
        "JENKI",
        "Used",
        "Orchestration",
        "container",
        "Kubernetes",
        "load",
        "tasks",
        "computer",
        "cluster",
        "load",
        "balancers",
        "API",
        "services",
        "version",
        "control",
        "software",
        "SVN",
        "GIT",
        "GIT",
        "LAB",
        "CVS",
        "Big",
        "Bucket",
        "code",
        "repositories",
        "Sign",
        "authentication",
        "Site",
        "Minder",
        "security",
        "framework",
        "design",
        "patterns",
        "MVC",
        "Object",
        "Orient",
        "Design",
        "Singleton",
        "Factory",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "Visitor",
        "Observer",
        "Decorator",
        "Front",
        "Controller",
        "Data",
        "Access",
        "Object",
        "Rule",
        "project",
        "design",
        "Orchestrate",
        "Authorization",
        "debugging",
        "launch",
        "configuration",
        "rule",
        "project",
        "analysis",
        "reporting",
        "execution",
        "JRules",
        "team",
        "server",
        "Docker",
        "container",
        "service",
        "build",
        "pipe",
        "line",
        "Jenkins",
        "Bamboo",
        "GoCD",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "cloud",
        "onpremises",
        "deployment",
        "system",
        "Jenkins",
        "Code",
        "Deploy",
        "Ops",
        "Works",
        "Packer",
        "deployment",
        "Java",
        "Applications",
        "Spring",
        "MVC",
        "framework",
        "interactions",
        "JSPView",
        "layer",
        "design",
        "patterns",
        "J2EE",
        "XML",
        "technology",
        "transactions",
        "Spring",
        "Declarative",
        "Transaction",
        "Management",
        "JAXB",
        "SAXP",
        "XML",
        "Schema",
        "data",
        "XML",
        "format",
        "data",
        "XML",
        "format",
        "database",
        "development",
        "components",
        "Hibernate",
        "Spring",
        "data",
        "DB",
        "ORM",
        "mappings",
        "associations",
        "Inheritance",
        "strategy",
        "CRUD",
        "operations",
        "level",
        "cache",
        "Hibernate",
        "SOA",
        "Integration",
        "service",
        "Data",
        "Integration",
        "Service",
        "Functional",
        "Integration",
        "Service",
        "SOAPUI",
        "testing",
        "inspection",
        "invocation",
        "Spring",
        "Web",
        "services",
        "Migration",
        "search",
        "process",
        "Database",
        "Solr",
        "search",
        "engine",
        "components",
        "architecture",
        "core",
        "Java",
        "design",
        "patterns",
        "factory",
        "method",
        "factory",
        "pattern",
        "Singleton",
        "Applications",
        "REST",
        "Web",
        "services",
        "Oracle",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "sequences",
        "builtin",
        "functions",
        "data",
        "databases",
        "decision",
        "services",
        "BRMS",
        "JRules",
        "framework",
        "search",
        "system",
        "MongoDB",
        "AngularJS",
        "Java",
        "Servlets",
        "JUnit",
        "Maven",
        "Microservices",
        "protocols",
        "HTTP",
        "REST",
        "SOAP",
        "application",
        "Amazon",
        "web",
        "Services",
        "AWS",
        "Cloud",
        "Computing",
        "EC2",
        "Elastic",
        "Container",
        "Services",
        "ECS",
        "instances",
        "Angular",
        "custom",
        "components",
        "application",
        "pages",
        "Project",
        "migration",
        "cloud",
        "environment",
        "AWS",
        "Docker",
        "container",
        "DEVELOPER",
        "India",
        "May",
        "November",
        "SDLC",
        "Requirements",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "application",
        "methodology",
        "design",
        "discussions",
        "understanding",
        "business",
        "requirements",
        "requirements",
        "requirement",
        "gathering",
        "framework",
        "implementation",
        "sessions",
        "methodology",
        "Rally",
        "Agile",
        "Development",
        "Software",
        "Multithreading",
        "data",
        "chunks",
        "performance",
        "practices",
        "casting",
        "generics",
        "Hash",
        "Map",
        "Collections",
        "comparator",
        "list",
        "application",
        "J2EE",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "Singleton",
        "React",
        "JS",
        "controllers",
        "events",
        "clients",
        "request",
        "React",
        "JS",
        "UIs",
        "Oneway",
        "data",
        "DOM",
        "JSX",
        "React",
        "concepts",
        "efficiency",
        "Web",
        "Application",
        "React",
        "Node",
        "JS",
        "web",
        "pages",
        "HTML",
        "CSS",
        "JS",
        "Bootstrap",
        "cross",
        "browser",
        "compatibility",
        "design",
        "website",
        "Tablets",
        "users",
        "ReactJS",
        "tier",
        "Restful",
        "Web",
        "API",
        "layer",
        "applications",
        "Scala",
        "library",
        "data",
        "scientists",
        "data",
        "structures",
        "part",
        "library",
        "data",
        "structures",
        "Spark",
        "Data",
        "frames",
        "functionality",
        "Developed",
        "Spring",
        "presentation",
        "layer",
        "hibernate",
        "DAO",
        "layer",
        "Spring",
        "Dependency",
        "injection",
        "ORM",
        "Web",
        "modules",
        "application",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Layer",
        "MVC",
        "architecture",
        "Spring",
        "Batch",
        "spring",
        "batch",
        "jobs",
        "requirements",
        "reliability",
        "robustness",
        "traceability",
        "processing",
        "amount",
        "data",
        "Spring",
        "Security",
        "Authorization",
        "Method",
        "Level",
        "Authorization",
        "URL",
        "Level",
        "Authorization",
        "Spring",
        "Transaction",
        "degree",
        "isolation",
        "transactions",
        "transaction",
        "scope",
        "transaction",
        "transaction",
        "Wrote",
        "code",
        "Web",
        "Services",
        "JAXWS",
        "system",
        "SOAPHTTP",
        "call",
        "data",
        "web",
        "services",
        "XML",
        "response",
        "HTML",
        "pages",
        "Web",
        "services",
        "SOAP",
        "transmission",
        "blocks",
        "data",
        "HTTP",
        "XML",
        "Web",
        "Services",
        "protocol",
        "data",
        "application",
        "Cloud",
        "Foundry",
        "access",
        "controls",
        "roles",
        "permissions",
        "users",
        "spaces",
        "access",
        "Configured",
        "Hibernate",
        "Spring",
        "Beans",
        "Spring",
        "Configuration",
        "File",
        "Hibernate",
        "configuration",
        "files",
        "data",
        "Oracle",
        "g",
        "Database",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "store",
        "images",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "version",
        "control",
        "repository",
        "SVN",
        "Subversion",
        "apache",
        "JIRA",
        "issue",
        "Maven",
        "build",
        "tool",
        "dependencies",
        "application",
        "SOAP",
        "UI",
        "web",
        "services",
        "AppDynamics",
        "application",
        "health",
        "Mockito",
        "procedures",
        "applications",
        "part",
        "scheduling",
        "mechanisms",
        "Log4j",
        "framework",
        "application",
        "integration",
        "Jenkins",
        "JBoss",
        "Created",
        "CICD",
        "pipelines",
        "setup",
        "auto",
        "trigger",
        "auto",
        "build",
        "auto",
        "deployment",
        "help",
        "CICD",
        "tool",
        "Jenkins",
        "DEVELOPER",
        "India",
        "January",
        "April",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "approaches",
        "TestDriven",
        "Development",
        "TDD",
        "Scrum",
        "Designed",
        "UI",
        "spring",
        "view",
        "component",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "AngularJS",
        "Vuejs",
        "custom",
        "UI",
        "directives",
        "filters",
        "Application",
        "logic",
        "MVC",
        "Architecture",
        "Created",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "Component",
        "architecture",
        "Angular",
        "Design",
        "modules",
        "project",
        "oops",
        "concepts",
        "features",
        "Java",
        "expressions",
        "interfaces",
        "Method",
        "references",
        "stream",
        "API",
        "Spring",
        "Hibernate",
        "IOC",
        "AOP",
        "ORM",
        "end",
        "tiers",
        "Hibernate",
        "Template",
        "extent",
        "use",
        "HQL",
        "Parameters",
        "Queries",
        "interfaces",
        "Expression",
        "Query",
        "Criteria",
        "Developed",
        "Hibernate",
        "Spring",
        "Integration",
        "data",
        "abstraction",
        "database",
        "MongoDB",
        "Hibernate",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Multithreading",
        "Concurrency",
        "threads",
        "generating",
        "mails",
        "Microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "REST",
        "Apache",
        "Kafka",
        "Spring",
        "Boot",
        "microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "Stacks",
        "Amazon",
        "Cloud",
        "Formation",
        "AWS",
        "Infrastructure",
        "resources",
        "AWS",
        "Lambda",
        "code",
        "AWS",
        "web",
        "services",
        "Spring",
        "API",
        "data",
        "tier",
        "Controller",
        "Responsible",
        "Configuring",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "project",
        "messages",
        "Kafka",
        "topic",
        "conversation",
        "JSON",
        "String",
        "data",
        "format",
        "Oracle",
        "DB",
        "NoSQL",
        "DB",
        "delivery",
        "Continuous",
        "Integration",
        "tools",
        "Docker",
        "Jenkins",
        "application",
        "AWS",
        "GIT",
        "version",
        "control",
        "code",
        "development",
        "JIRA",
        "tracking",
        "tool",
        "Maven",
        "building",
        "tool",
        "SonarQube",
        "inspection",
        "code",
        "quality",
        "Wrote",
        "JUnit",
        "test",
        "cases",
        "application",
        "framework",
        "Log4J",
        "log",
        "messages",
        "log4j",
        "application",
        "logging",
        "issues",
        "debug",
        "mode",
        "Education",
        "Masters"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:47:19.996214",
    "resume_data": "JAVA DEVELOPER span lJAVAspan span lDEVELOPERspan JAVA DEVELOPER Palo Alto CA CA Over 4 years of experience in IT industry and worked in different phases on system development including analysis design development documentation implementing and testing using Java Stack Technologies and implementation of projects using various methodologies like Waterfall Agile and RUP Hands on experience in the implementation of Core Java 8 concepts like Streams API Lambda functions Generics Time API Functional Interfaces Multithreading Transaction Management Exception Handling Concurrency File handling IO Generics and Collection API Proficient in design and rapid development of web applications using JavaJ2EE like Hibernate Spring Struts JSP JNDI Servlets JPA WebSphere Commerce RMI Multithreading JDBC Java Beans EJB Entity Session Message Driven Bean XML JMS Java Mail Mutation Testing JUNITs and web services like SOA WSD and UDDI Experience in designing and developing User Interface UI applications and professional web applications using Restful Web Services SOAP IBM BPM Jasper Reports Server Extjs Eclipse NetBeans Visual Source Safe CVS SVN ICE faces HTML5 XHTML XML XSL XSLT AJAX JavaScript and CSS3 JSF JSTL Servlets and Angular JS with client scripting and serverside scripting languages like JavaScript jQuery JSON JSF JSP Strong experience in using various IDEs tools like NetBeans Eclipse IntelliJ BlueJ JBuilder Rational Application Developer RAD and JDeveloper for application development Experience in implementing open source frameworks like Hibernate JPA Ibatis ORM Frameworks and Struts frameworks and experience in mapping ObjectOriented domain model with relational databases Excellent experience in SOA based integration using Web services technologies such as SOAP Simple object access protocol REST Representational State Transfer and WSDL Web Services Description Language Experience with AJAX REST and JSON working with JavaScript frameworks like Bootstrap Nodejs and Angular JS Strong handson experience with Spring MVC Controllers Spring Boot Validators Spring Annotations Spring tag library Inversion Of Control IOC Spring LDAP Spring Batch Spring Cache Spring Integration Spring Scheduler Application Context configuration Spring Aspect Oriented Programming AOP Spring DAO JDBC JTA IO Hibernate Spring Microservices Spring REST Spring Eureka with Thymeleaf Spring Web flow Spring Ribbon Spring Netflix Zuul Spring Security along with Hibernate as the backend ORM tool for implementation of persistence layer and mapping of POJOs Excellence experience in Azure cloud computing mostly for building testing webservices like SaaS PaaS and IaaS Experience and indepth Knowledge of understanding in the strategy and practical implementation of AWS CloudSpecific technologies including S3 EC2 Virtual Private Cloud VPC Relational Database Service RDS Simple Queue Service SQS Elastic Block Store EBS Simple Notification Service SNS Cloud Front Cloud Formation Elastic Load Balancing AWS Identity and access management Elastic Cache Cloud Watch RedShift AWS Lambda SNS Dynamo DB Strong experience of using open source technologies including React Node JS Spring Angular jQuery Apache Storm Elastic Search Redis Mongo DB Bootstrap Junit etc Proficient in NoSQL transactional databases like Cassandra Mongo dB and big data technologies like SparkStorm Kafka and Hadoop Map Reduce Experience in implementing security models OAUTH2 and SAML for authenticationauthorization using Spring Security and IAM Cloud Security Proficient experience with SQL Server Oracle DB2 and MySQL as backend Databases Extensively used database tools like TOAD and SQL Developer Knowledge in Database Programming with Stored Procedures Triggers Functions using SQL PLSQL and Oracle Strong knowledge on JavaScript Unit testing with Jasmin Karma Protractor for Angular JS Mocha and Chai React JS and Backbone JS and experience with build tools like ANT Maven Gradle and logging tools like Log4J and DevOps tools such as Chef Puppet Ansible Jenkins GIT Experience in JUnit Mockito Spock Testing for unit testing and Selenium Web Driver Cucumber Behavior Driven Development testing for Integration testing Experience in Continuous delivery Continuous Integration CDCI tools Docker Jenkins to deploy this application to AWS Strong command in leading Frameworks Team such as Angularjs backbonejs bootstrapjs D3Js ReactJs and NodeJS Expertise with servers using Apache Tomcat HTTP Server Web Sphere Web Logic and JBOSS Application server Experience in building high performance and scalable solutions using various Hadoop ecosystem tools like Pig Hive Sqoop Spark Solr and Kafka Hands on experience in installing configuring and using Hadoop ecosystem components like Hadoop MapReduce HDFS HBase Oozie Hive Sqoop Pig Zookeeper and Apache Storm Expertise in design and development of various web and enterprise applications using Type safe technologies like Scala Akka Play framework Slick Extensive experience in Test Driven Development TDD and actively involved in Requirement gathering Analysis Design Reviews Coding Code Reviews Unit and Integration Testing Experience in implementing various design patterns including Data Access Object Session Facade Business Delegate Service Locator MVC Data Transfer Object and Singleton Expertise in creating Conceptual Data Models Use Case Diagrams Class Diagrams and State Diagrams Work Experience JAVA DEVELOPER TESLA Palo Alto CA December 2018 to Present Involved in design and development as a J2SE and J2EE Software developer on an Agile platform to development processes on Software Development life cycle SDLC Prepared the Java 8 development structure for MyEclipse and Replaced the Joda library using streams and lambda expressions Used the stream feature of Java 8 for aggregate operation and pipelining Backend application code developed using Java 8 and Spring Boot Services to consume the data from the Database and from the other applications Implementation of the markup of the project using HTML CSS Bootstrap and created different modules in the application and applied AngularJS to enhance the user interface for making restful API calls and data binding Used IBM Integration Bus IIB to connect to TSQL stored procedures and connect it with Java component to write custom business logic Involved in deploying the ESL portal application on IBM WebSphere portal server Used SAML for SSO login to access the web service provided and OAuth for authorizing the user to the application Involved in identifying job dependencies to design workflow for Oozie and resource management for YARN Worked with NPM package manager tools and created reusable templates using Angular directives Programmed in Angular 4 to upload post filesimages to the AWS S3 browser from the Frontend by installing NPM package of AWSSDK Used JPA and Hibernate for dataobject mapping to enable persistence of the data Implemented DAO classes separately to modularize the data access component Used JPA tool for generating entities from database Worked on serverside web applications using Nodejs and involved in Construction of UI using jQuery AngularJS Ext JS ReactJS Bootstrap and JavaScript Involved in designing developing and testing the web application by using the HTML5 CSS3 Bootstrap NodeJS and ReactJS Developed and implemented UI controls and APIs with ExtJS and Coded the frontend Ajax framework components using Web 20 JavaScript library ExtJS Used ReactRouter to turn application into Single Page Application Used Spark API over Cloudera Hadoop YARN to perform analytics on data in Hive Worked on Deployment Automation of all microservices to pull image from private Docker registry and deploy to Kubernetes Cluster Installed Kafka manager for consumer logs and for monitoring Kafka Metrics also this has been used for adding topics Partitions to build realtime analytics purpose Worked on Spring CloudNetflix OSS stack for microservices deployment and auto configurations like Eureka Service Discovery Server Ribbon Dynamic Routing and Load Balancer Hystrix Circuit Breaker Zuul Edge proxy and Monitoring and centralized log analyses ELK Built realtime dashboard applications for visualization and analytics on Apache Web servers using Elastic Search Logstash and Kibana 40 ELK D3JS Grafana Splunk Graphite Worked to integrate the enterprise application technologies with existing JVM environment used in integration tools like Spring Integration Mule ESB Apache CXF Apache Kafka and JENKI Used Orchestration container Kubernetes for load balancing and to schedule the tasks across the computer cluster and load balancers for backend API services Used various version control software such as SVN GIT GIT LAB CVS Big Bucket for maintaining code repositories Implemented Single Sign On and policybased authentication using Site Minder security framework Worked on design patterns like MVC Object Orient Design Singleton Factory Session Facade Service Locator Visitor Observer Decorator Front Controller Data Access Object Involved in Rule project design Orchestrate Authorization debugging for launch configuration for rule project analysis reporting execution and publish to JRules team server Implemented Docker container service build pipe line like Jenkins Bamboo and GoCD for Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Implemented continuous deployment system with Jenkins Code Deploy Ops Works and Packer for deployment of Java Applications Used Spring MVC framework to enable the interactions between JSPView layer and implemented different design patterns with J2EE XML technology and involved in handling transactions using Spring Declarative Transaction Management Worked with JAXB SAXP and XML Schema for exporting data into XML format and importing data from XML format to database Involved in development of java components by using Hibernate and Spring to persist the data in DB Involved in ORM mappings for associations Inheritance fetching strategy performing CRUD operations and managing second level cache using Hibernate Used SOA Integration service for Data Integration Service Functional Integration Service and used SOAPUI for the functional testing inspection and invocation of Spring based Web services Migration of current search process from Database to Solr search engine Designing new components to fit in the already existing architecture using core Java multithreading different design patterns like factory method Abstract factory pattern Singleton while developing webbased Applications using REST Web services Implemented Oracle SQL Queries PLSQL stored procedures functions triggers sequences and builtin functions to retrieve and update data from the databases Created rulebased decision services using BRMS ILOG JRules framework and developed specialized search system using MongoDB AngularJS Java Servlets JUnit and Maven Used Microservices to communicate using synchronous protocols HTTP and REST for implementing SOAP Deployed the application on Amazon web Services AWS using Elastic Cloud Computing EC2 and Elastic Container Services ECS instances Used Angular to build custom reusable components to use across the application pages Project migration into cloud environment using AWS Docker container JAVA DEVELOPER PAYPAL India May 2017 to November 2018 Involved in SDLC Requirements gathering Analysis Design Development and Testing of application using AGILE methodology SCRUM Involved in design discussions and understanding of business requirements and identify the relevant functional and technical requirements Participated in requirement gathering and framework implementation sessions through methodology using Rally Agile Development Software Multithreading was used to process data in chunks to improve performance Followed the best practices in coding like removing unnecessary casting using generics in Hash Map caching Collections like sort comparator list set Designed the application using the J2EE design patterns such as Session Faade Business Delegate Service Locator and Singleton Used React JS to create controllers to handle events triggered by clients and send request to server Used React JS for creating interactive UIs using Oneway data flow Virtual DOM JSX React Native concepts Involved in building a high efficiency Web Application using React and Node JS Developed interactive web pages using HTML CSS and JS and used Bootstrap for cross browser compatibility Worked on responsive design and developed a responsive website that could be served to Tablets and mobile users using ReactJS Designed developed and architected middle tier Restful Web API layer for the mobile applications Wrote a Scala library that allows data scientists to manipulate data structures more easily As part of the library native data structures like Spark Data frames were extended to support new functionality Developed Spring based presentation layer hibernate based DAO layer and integrated them using Spring Dependency injection ORM and Web modules Developed the application using Spring Framework that leverages Model View Layer MVC architecture Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amount of data Spring Security is used for Authorization like Method Level Authorization and URL Level Authorization Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction Wrote code Web Services JAXWS for external system via SOAPHTTP call and to fetch data from web services via XML response and updating the HTML pages Used Web services SOAP for transmission of large blocks of data over HTTP Used XML Web Services using SOAP protocol to transfer data from one application to other which is remote Used Pivotal Cloud Foundry to rolebased access controls applying and enforcing roles and permissions to ensure that users can only view and affect the spaces for which they have been granted access Configured Hibernate objects as Spring Beans in the Spring Configuration File Configured the Hibernate configuration files to persist the data to the Oracle 11g Database Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Used SOAP UI for testing the web services AppDynamics for application health and Mockito for testing Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Used Log4j framework to logtrack application Created continuous integration builds using Jenkins and deployed on JBoss Created CICD pipelines and setup auto trigger auto build and auto deployment with the help of the CICD tool like Jenkins JAVA DEVELOPER FACEBOOK India January 2015 to April 2017 Actively involved in Analysis Design Development System Testing and User Acceptance Testing Used Agile approaches Including TestDriven Development TDD and Scrum Designed and developed UI using spring view component HTML5 CSS3 Bootstrap AngularJS and Vuejs Built custom UI widgets directives filters and Application logic using AngularJS MVC Architecture Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 40 Design coded and tested key modules of the project using java oops concepts Used most of the new features of Java 8 like lambda expressions functional interfaces Method references and stream API Used Spring and Hibernate for implementing IOC AOP and ORM for back end tiers Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Developed Hibernate with Spring Integration as the data abstraction to interact with the database of MongoDB and used Hibernate objectrelationalmapping ORM solution and technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used Multithreading and Concurrency and implemented threads while preparing and generating mails Used a Microservice architecture with Spring Bootbased services interacting through REST and Apache Kafka Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Created RESTful web services using Spring RESTful API sending JSON data between Frontend middle tier Controller Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in Oracle DB and NoSQL DB Used Continuous delivery Continuous Integration tools Docker Jenkins to deploy this application to AWS and used GIT for version control of code for incremental development and JIRA as a defect tracking tool and Maven as a building tool Used SonarQube for continuous inspection of code quality Wrote JUnit test cases to test the application Logging framework Log4J is used for log messages Implemented log4j for application logging and to troubleshoot issues in debug mode Education Masters",
    "unique_id": "91d3f7e1-c081-4341-8658-6567f01aa902"
}