{
    "clean_data": "Full MEAN Stack Developer Full MEAN Stack span lDeveloperspan Full MEAN Stack Developer Cisco Systems San Jose CA Work Experience Full MEAN Stack Developer Cisco Systems Bengaluru Karnataka May 2018 to Present Project Title Digitized Acquisition Integration Migration DAIM Role Full MEAN Stack Developer Environment Angular 60 NodeJS MongoDB ExpressJS Docker Description Digitized Acquisition Integration Migration DAIM is a platform that would help Cisco migrate all the contracts subscriptions from acquired companies to Ciscos subscription based platform by using predefined mapping logic and business criteria Responsibilities Create single codebase for a NodeJS Angular application Develop REST API in NodeJS to be consumed by client Develop Angular 6 based reusable components Configure docker container to be deployed in Ciscos cloud Write unit test cases at server side NodeJS using mocha chai Write unit test cases at client side Angular 6 using Jasmine karma Write Grunt jobstasks tasks to run unit test cases minify files in NodeJS application Integrate with APIs exposed by the legacy and the new systems Write integration test cases to validate the APIs from other systems Write schedulers using nodescheduler library so that system will itself by pulling the data from legacy system and push the data to new system at a given time of the day in a week Use GIT for version control Integrate with nodemailer to send out emails to customer based on the given time in NodeJS scheduler at regular intervals Analyze and debug the logs on the server and fix any issues found in the system Interact with sales team on daily basis to find out issues in migrated contracts Java MEAN Stack Developer Cisco Systems Bengaluru Karnataka August 2013 to April 2018 Project Title Cisco Collaborative Knowledge Role Software Engineer Environment Springs NodeJS MongoDB EmberJS Apache Kafka 08 Elasticsearch Description Cisco learning workplace Changing to meet the needs of the new digital economy RealTime Knowledge Experts and Analytics knowledge learning speed and flexibility to solve real world business challenges reimagine the way individuals work learn share ideas and innovate together Bestinclass digital experiences and digital tools to access experts knowledge and learning in realtime make smarter business decisions securely anytime anywhere Responsibilities Used Spring IOC Inversion of ControlDI Dependency Injection to wire the object dependencies across the application Involved in Analysis Design Development Integration and Testing of application modules and followed AGILESCRUM methodology Participated in Estimation size of Backlog Items Daily Scrum and Translation of backlog items into engineering design and logical units of work tasks Used Jenkins continuous integration tool to do the deployments Developed REST API both in Java NodeJS in a microservices architecture to make the components exchange data Developed a NodeJS application module from scratch which takes data from upstream components and pushes data to MYSQL using mysql npm Written Grunt jobstasks tasks to run unit test cases minify files for both Java NodeJS applications Used Spring Dependency Injection properties to provide loose coupling between layers Prepared Test Cases to perform Unit and Integration Testing as part of TDD TestDriven Development process Used junit for Java and MOCHA npm module for NodeJS unit test cases Implemented the log functionality by using Log4j and internal logging APIs Written ElasticSearch 132 queries to perform a fulltext search partial text search and analytics Written MongoDB aggregations queries for high performance of application Integrated existing NodeJS or Java microservices with Kafka Connector to act as publisher or subscriber to a particular Kafka topic Analyze Kafka logs to fix failures at application level and to increase or decrease number of partitions for a Kafka topic based on load to improve performance by altering partitions per topic Developed screens using Ember MVC Architecture and integrated with REST API calls to project data on UI Used Maven build tools and GIT for version control Responsible for productions support and analyzing the Kibana logs for application errors Written migrations scripts using Ruby to move data from Mysql Database to MongoElasticsearch Worked on performance issues to make sure that application will support more than 80 K users Education Bachelor of Technology in Auroras Scientific Technological Research Academy JNTU Hyderabad Telangana Skills Angular 2 years Java 5 years Nodejs 4 years Mongodb 3 years Elasticsearch 2 years Apache kafka 2 years",
    "entities": [
        "GIT",
        "TDD TestDriven Development",
        "Mysql Database",
        "Auroras Scientific Technological Research Academy",
        "Prepared Test Cases",
        "Ruby",
        "Maven",
        "Present Project Title Digitized Acquisition Integration Migration",
        "Backlog Items Daily Scrum and Translation",
        "Cisco",
        "Angular 6",
        "UI",
        "Involved in Analysis Design Development Integration and Testing",
        "Ember MVC Architecture",
        "Apache",
        "San Jose",
        "REST API",
        "Ciscos",
        "Log4j",
        "AGILESCRUM",
        "Stack Developer Cisco Systems",
        "NodeJS",
        "Configure",
        "Project Title Cisco Collaborative Knowledge Role Software Engineer Environment Springs NodeJS MongoDB",
        "NodeJS Angular application Develop REST API"
    ],
    "experience": "Experience Full MEAN Stack Developer Cisco Systems Bengaluru Karnataka May 2018 to Present Project Title Digitized Acquisition Integration Migration DAIM Role Full MEAN Stack Developer Environment Angular 60 NodeJS MongoDB ExpressJS Docker Description Digitized Acquisition Integration Migration DAIM is a platform that would help Cisco migrate all the contracts subscriptions from acquired companies to Ciscos subscription based platform by using predefined mapping logic and business criteria Responsibilities Create single codebase for a NodeJS Angular application Develop REST API in NodeJS to be consumed by client Develop Angular 6 based reusable components Configure docker container to be deployed in Ciscos cloud Write unit test cases at server side NodeJS using mocha chai Write unit test cases at client side Angular 6 using Jasmine karma Write Grunt jobstasks tasks to run unit test cases minify files in NodeJS application Integrate with APIs exposed by the legacy and the new systems Write integration test cases to validate the APIs from other systems Write schedulers using nodescheduler library so that system will itself by pulling the data from legacy system and push the data to new system at a given time of the day in a week Use GIT for version control Integrate with nodemailer to send out emails to customer based on the given time in NodeJS scheduler at regular intervals Analyze and debug the logs on the server and fix any issues found in the system Interact with sales team on daily basis to find out issues in migrated contracts Java MEAN Stack Developer Cisco Systems Bengaluru Karnataka August 2013 to April 2018 Project Title Cisco Collaborative Knowledge Role Software Engineer Environment Springs NodeJS MongoDB EmberJS Apache Kafka 08 Elasticsearch Description Cisco learning workplace Changing to meet the needs of the new digital economy RealTime Knowledge Experts and Analytics knowledge learning speed and flexibility to solve real world business challenges reimagine the way individuals work learn share ideas and innovate together Bestinclass digital experiences and digital tools to access experts knowledge and learning in realtime make smarter business decisions securely anytime anywhere Responsibilities Used Spring IOC Inversion of ControlDI Dependency Injection to wire the object dependencies across the application Involved in Analysis Design Development Integration and Testing of application modules and followed AGILESCRUM methodology Participated in Estimation size of Backlog Items Daily Scrum and Translation of backlog items into engineering design and logical units of work tasks Used Jenkins continuous integration tool to do the deployments Developed REST API both in Java NodeJS in a microservices architecture to make the components exchange data Developed a NodeJS application module from scratch which takes data from upstream components and pushes data to MYSQL using mysql npm Written Grunt jobstasks tasks to run unit test cases minify files for both Java NodeJS applications Used Spring Dependency Injection properties to provide loose coupling between layers Prepared Test Cases to perform Unit and Integration Testing as part of TDD TestDriven Development process Used junit for Java and MOCHA npm module for NodeJS unit test cases Implemented the log functionality by using Log4j and internal logging APIs Written ElasticSearch 132 queries to perform a fulltext search partial text search and analytics Written MongoDB aggregations queries for high performance of application Integrated existing NodeJS or Java microservices with Kafka Connector to act as publisher or subscriber to a particular Kafka topic Analyze Kafka logs to fix failures at application level and to increase or decrease number of partitions for a Kafka topic based on load to improve performance by altering partitions per topic Developed screens using Ember MVC Architecture and integrated with REST API calls to project data on UI Used Maven build tools and GIT for version control Responsible for productions support and analyzing the Kibana logs for application errors Written migrations scripts using Ruby to move data from Mysql Database to MongoElasticsearch Worked on performance issues to make sure that application will support more than 80 K users Education Bachelor of Technology in Auroras Scientific Technological Research Academy JNTU Hyderabad Telangana Skills Angular 2 years Java 5 years Nodejs 4 years Mongodb 3 years Elasticsearch 2 years Apache kafka 2 years",
    "extracted_keywords": [
        "MEAN",
        "Stack",
        "Developer",
        "MEAN",
        "Stack",
        "span",
        "lDeveloperspan",
        "MEAN",
        "Stack",
        "Developer",
        "Cisco",
        "Systems",
        "San",
        "Jose",
        "CA",
        "Work",
        "Experience",
        "MEAN",
        "Stack",
        "Developer",
        "Cisco",
        "Systems",
        "Bengaluru",
        "Karnataka",
        "May",
        "Present",
        "Project",
        "Title",
        "Digitized",
        "Acquisition",
        "Integration",
        "Migration",
        "DAIM",
        "Role",
        "MEAN",
        "Stack",
        "Developer",
        "Environment",
        "Angular",
        "NodeJS",
        "ExpressJS",
        "Docker",
        "Description",
        "Digitized",
        "Acquisition",
        "Integration",
        "Migration",
        "DAIM",
        "platform",
        "Cisco",
        "contracts",
        "subscriptions",
        "companies",
        "Ciscos",
        "subscription",
        "platform",
        "mapping",
        "logic",
        "business",
        "criteria",
        "Responsibilities",
        "codebase",
        "NodeJS",
        "Angular",
        "application",
        "Develop",
        "REST",
        "API",
        "NodeJS",
        "client",
        "Develop",
        "Angular",
        "components",
        "Configure",
        "docker",
        "container",
        "Ciscos",
        "cloud",
        "Write",
        "unit",
        "test",
        "cases",
        "server",
        "side",
        "NodeJS",
        "mocha",
        "chai",
        "Write",
        "unit",
        "test",
        "cases",
        "client",
        "side",
        "Angular",
        "Jasmine",
        "karma",
        "Write",
        "Grunt",
        "jobstasks",
        "tasks",
        "unit",
        "test",
        "cases",
        "files",
        "NodeJS",
        "application",
        "APIs",
        "legacy",
        "systems",
        "integration",
        "test",
        "cases",
        "APIs",
        "systems",
        "Write",
        "schedulers",
        "nodescheduler",
        "library",
        "system",
        "data",
        "legacy",
        "system",
        "data",
        "system",
        "time",
        "day",
        "week",
        "GIT",
        "version",
        "control",
        "emails",
        "customer",
        "time",
        "NodeJS",
        "scheduler",
        "intervals",
        "Analyze",
        "logs",
        "server",
        "issues",
        "system",
        "Interact",
        "sales",
        "team",
        "basis",
        "issues",
        "contracts",
        "Java",
        "MEAN",
        "Stack",
        "Developer",
        "Cisco",
        "Systems",
        "Bengaluru",
        "Karnataka",
        "August",
        "April",
        "Project",
        "Title",
        "Cisco",
        "Collaborative",
        "Knowledge",
        "Role",
        "Software",
        "Engineer",
        "Environment",
        "Springs",
        "NodeJS",
        "EmberJS",
        "Apache",
        "Kafka",
        "Elasticsearch",
        "Description",
        "Cisco",
        "workplace",
        "needs",
        "economy",
        "RealTime",
        "Knowledge",
        "Experts",
        "Analytics",
        "knowledge",
        "speed",
        "flexibility",
        "world",
        "business",
        "challenges",
        "way",
        "individuals",
        "share",
        "ideas",
        "Bestinclass",
        "experiences",
        "tools",
        "experts",
        "knowledge",
        "realtime",
        "business",
        "decisions",
        "Responsibilities",
        "Spring",
        "IOC",
        "Inversion",
        "ControlDI",
        "Dependency",
        "Injection",
        "object",
        "dependencies",
        "application",
        "Analysis",
        "Design",
        "Development",
        "Integration",
        "Testing",
        "application",
        "modules",
        "AGILESCRUM",
        "methodology",
        "Estimation",
        "size",
        "Backlog",
        "Items",
        "Daily",
        "Scrum",
        "Translation",
        "backlog",
        "items",
        "engineering",
        "design",
        "units",
        "work",
        "tasks",
        "Jenkins",
        "integration",
        "tool",
        "deployments",
        "REST",
        "API",
        "Java",
        "NodeJS",
        "microservices",
        "architecture",
        "components",
        "exchange",
        "data",
        "NodeJS",
        "application",
        "module",
        "scratch",
        "data",
        "components",
        "data",
        "MYSQL",
        "mysql",
        "npm",
        "Written",
        "Grunt",
        "tasks",
        "unit",
        "test",
        "cases",
        "files",
        "Java",
        "NodeJS",
        "applications",
        "Spring",
        "Dependency",
        "Injection",
        "properties",
        "coupling",
        "layers",
        "Prepared",
        "Test",
        "Cases",
        "Unit",
        "Integration",
        "Testing",
        "part",
        "TDD",
        "TestDriven",
        "Development",
        "process",
        "junit",
        "Java",
        "MOCHA",
        "npm",
        "module",
        "NodeJS",
        "unit",
        "test",
        "cases",
        "log",
        "functionality",
        "Log4j",
        "APIs",
        "Written",
        "ElasticSearch",
        "queries",
        "fulltext",
        "search",
        "text",
        "search",
        "analytics",
        "MongoDB",
        "aggregations",
        "performance",
        "application",
        "Integrated",
        "NodeJS",
        "Java",
        "microservices",
        "Kafka",
        "Connector",
        "publisher",
        "subscriber",
        "Kafka",
        "topic",
        "Analyze",
        "Kafka",
        "failures",
        "application",
        "level",
        "number",
        "partitions",
        "Kafka",
        "topic",
        "load",
        "performance",
        "partitions",
        "topic",
        "screens",
        "Ember",
        "MVC",
        "Architecture",
        "REST",
        "API",
        "data",
        "UI",
        "Maven",
        "tools",
        "GIT",
        "version",
        "control",
        "productions",
        "support",
        "Kibana",
        "logs",
        "application",
        "errors",
        "migrations",
        "scripts",
        "Ruby",
        "data",
        "Mysql",
        "Database",
        "MongoElasticsearch",
        "performance",
        "issues",
        "application",
        "K",
        "users",
        "Education",
        "Bachelor",
        "Technology",
        "Auroras",
        "Scientific",
        "Technological",
        "Research",
        "Academy",
        "JNTU",
        "Hyderabad",
        "Telangana",
        "Skills",
        "Angular",
        "years",
        "Java",
        "years",
        "Nodejs",
        "years",
        "Mongodb",
        "years",
        "Elasticsearch",
        "years",
        "Apache",
        "years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:30:28.590532",
    "resume_data": "Full MEAN Stack Developer Full MEAN Stack span lDeveloperspan Full MEAN Stack Developer Cisco Systems San Jose CA Work Experience Full MEAN Stack Developer Cisco Systems Bengaluru Karnataka May 2018 to Present Project Title Digitized Acquisition Integration Migration DAIM Role Full MEAN Stack Developer Environment Angular 60 NodeJS MongoDB ExpressJS Docker Description Digitized Acquisition Integration Migration DAIM is a platform that would help Cisco migrate all the contracts subscriptions from acquired companies to Ciscos subscription based platform by using predefined mapping logic and business criteria Responsibilities Create single codebase for a NodeJS Angular application Develop REST API in NodeJS to be consumed by client Develop Angular 6 based reusable components Configure docker container to be deployed in Ciscos cloud Write unit test cases at server side NodeJS using mocha chai Write unit test cases at client side Angular 6 using Jasmine karma Write Grunt jobstasks tasks to run unit test cases minify files in NodeJS application Integrate with APIs exposed by the legacy and the new systems Write integration test cases to validate the APIs from other systems Write schedulers using nodescheduler library so that system will itself by pulling the data from legacy system and push the data to new system at a given time of the day in a week Use GIT for version control Integrate with nodemailer to send out emails to customer based on the given time in NodeJS scheduler at regular intervals Analyze and debug the logs on the server and fix any issues found in the system Interact with sales team on daily basis to find out issues in migrated contracts Java MEAN Stack Developer Cisco Systems Bengaluru Karnataka August 2013 to April 2018 Project Title Cisco Collaborative Knowledge Role Software Engineer Environment Springs NodeJS MongoDB EmberJS Apache Kafka 08 Elasticsearch Description Cisco learning workplace Changing to meet the needs of the new digital economy RealTime Knowledge Experts and Analytics knowledge learning speed and flexibility to solve real world business challenges reimagine the way individuals work learn share ideas and innovate together Bestinclass digital experiences and digital tools to access experts knowledge and learning in realtime make smarter business decisions securely anytime anywhere Responsibilities Used Spring IOC Inversion of ControlDI Dependency Injection to wire the object dependencies across the application Involved in Analysis Design Development Integration and Testing of application modules and followed AGILESCRUM methodology Participated in Estimation size of Backlog Items Daily Scrum and Translation of backlog items into engineering design and logical units of work tasks Used Jenkins continuous integration tool to do the deployments Developed REST API both in Java NodeJS in a microservices architecture to make the components exchange data Developed a NodeJS application module from scratch which takes data from upstream components and pushes data to MYSQL using mysql npm Written Grunt jobstasks tasks to run unit test cases minify files for both Java NodeJS applications Used Spring Dependency Injection properties to provide loose coupling between layers Prepared Test Cases to perform Unit and Integration Testing as part of TDD TestDriven Development process Used junit for Java and MOCHA npm module for NodeJS unit test cases Implemented the log functionality by using Log4j and internal logging APIs Written ElasticSearch 132 queries to perform a fulltext search partial text search and analytics Written MongoDB aggregations queries for high performance of application Integrated existing NodeJS or Java microservices with Kafka Connector to act as publisher or subscriber to a particular Kafka topic Analyze Kafka logs to fix failures at application level and to increase or decrease number of partitions for a Kafka topic based on load to improve performance by altering partitions per topic Developed screens using Ember MVC Architecture and integrated with REST API calls to project data on UI Used Maven build tools and GIT for version control Responsible for productions support and analyzing the Kibana logs for application errors Written migrations scripts using Ruby to move data from Mysql Database to MongoElasticsearch Worked on performance issues to make sure that application will support more than 80 K users Education Bachelor of Technology in Auroras Scientific Technological Research Academy JNTU Hyderabad Telangana Skills Angular 2 years Java 5 years Nodejs 4 years Mongodb 3 years Elasticsearch 2 years Apache kafka 2 years",
    "unique_id": "e75f1e34-d958-4473-8edb-24266aa315db"
}