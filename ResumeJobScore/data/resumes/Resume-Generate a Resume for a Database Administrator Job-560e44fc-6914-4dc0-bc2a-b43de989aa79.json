{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer JP Morgan Chase Columbus OH Extensive experience in developing webbased applications software development and design using Python 3427 Django 1918 XML CSS3 HTML5 DHTML JavaScript jQuery AngularJS Experienced in MVC frameworks like Django AngularJS JavaScript jQuery ReactJS and Nodejs Flask and Pyramid well versed in Django ORM and SQL Alchemy and Extensive use of Linux Ubuntu SSH FlaskDjango Experience in implementing serverside technologies with restful API and MVC design patterns using Django framework Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Great knowledge of continuous integration and deployment using Jenkins docker Extensive experience with Amazon Web Services AWS OpenStack Docker Puppet Chef Ansible AWS Cloud Formation AWS Cloud Front and Experience in using containers like Docker and familiar with Jenkins Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Good working experience in processing large datasets with Spark using Scala and Pyspark and Familiar with JSON based REST Web services Experience in designing and configuring secure VPC through private and public networks in AWS and created various subnets for servers Experience in Agile development methodology waterfall and TDD test driven development Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Knowledge of advanced level programming in CC including thread synchronization Multithreading multiprocessing and concurrency Hands on experience with GO Language and its Builtin concurrency features such as goroutines channels and select statement Good experience in Shell Scripting SQL Server Unix and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Hands on experience in installing configuring and using Hadoop components like Hadoop MapReduce HDFS HBase Hive Sqoop Pig Zookeeper and Flume Asset in queueing architectures with RabbitMQ for scalability performance and building Experience in building and understanding Natural Language Processing NLP Programs Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Pyspark Expertise in working with GUI frameworksPyjamas Jytho guidata  PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in working with the JavaScript prototype JS and various MVC JavaScript frameworks Backbonejs and ReactJS Working knowledge on Hadoop Spark and Big data Technologies Experience with Version Control systems with SVN CVS and GIT Experience in NodeJS Unit Testing using Mocha and Angular EndEnd testing using Jasmine Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on My SQL and PostgreSQL database Experience using python libraries for machine learning like pandas numpy matplotlib sklearn scipy to Loading the dataset summarizing the dataset visualizing the dataset evaluating some algorithms and making some predictions Experience in performing data enrichment cleansing analytics aggregations using Hive and Pig Experience with Test Driven development like JUNIT TestNG Mockito Selenium Cucumber Experience in Web development with Python and Django SQL ETL Linux Asynchronous task queues with Celery and RabbitMQ Extensive experience in working IDE tools like Eclipse Net Beans RAD WID Web Sphere Integration Designer Experiences in writing ANT Maven build scripts and configuring and using Log4j for System Logging Expertise in ObjectOriented design and coding Good knowledge of various Design Patterns and UML and Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Have good idea about tools like Bugzilla Jira Confluence and Axosoft and Design the front end of company website with CSS Sass and Bootstrap and implemented Web Services based on SOA architecture with Restful Handson experience in Unix and Linux Kernels file validations file downloads workflow executions Good experience in working with Amazon Web Services like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Hands on Experience on Docker Hub Docker Engine Hub machine Compose and Docker Registry Creating Docker Images and handling multiple images primarily for middleware installations and domain configuration Experience on complete software development life cycle SDLC with software development models like JIRA Agile Scrum Model Prototype model RUP Waterfall model Work Experience Sr Python Developer JP Morgan Chase Columbus OH January 2017 to Present Responsibilities Designed front end using UI HTML Bootstrap NodeJS underscore JS AngularJS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Developed Merge jobs in Python to extract and load data into MySQL database and Worked on MYSQL data lineage process to map source to target DB table and column mappings using Python Have utilized Python libraries such as Numpy and Pandas for processing tabular format data Installing and automation of application using configuration management tools Puppet and Chef and Creating and configuring virtual development environments with Chef and Virtual Box Involved in the development of the applications using Python 33 HTML5 CSS3 AJAX JSON and jQuery Worked with search business and search team to implement dynamic rule updates to search using Elasticsearch Built various graphs for business decision making using Python mat plot lib library Involved in MVC frameworks like Django Angularjs ReactJS JavaScript and Nodejs and had analyzed the SQL scripts and designed the solution to implement using Pyspark Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances Developed Microservices using GO language and developed corresponding test cases Develop C API for web backend functionality to replace use of legacy mainframe system Designed and developed the application using Agile Methodology and followed TDD and Scrum Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector My SQLdb package to retrieve information Built reusable and customizable components for the new website using ReactJS and ReactRoutes to create a single page web application Involved in development of business logic by backend python programming to achieve optimal results Worked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container ServiceDocker Wrote python code within the Hadoop framework to solve Natural Language Processing NLP problems Designed a tool called netconf Network configuration which automatically configures network switches by parsing XML files Developed Self Service transaction metrics dashboard using Angular NodeJS and GO Language Exported the analyzed data to the relational databases using Sqoop to further visualize and generate reports Installed and configured Hive and written Hive UDFs Used Vagrant to implement environment for microservices deployments and testing in Docker images Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ Analyzed data by performing Hive queries and running Pig Scripts to study transactional behaviour of policies and plans Worked on project scaffolding using yeoman grunt bower NodeJS Successfully migrated the Django database from SQLite to MySQL to PostgreSQL and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Wrote and executed various RDBMS MYSQL database queries from Python using PythonMySQL connector and MySQLdb package Used Pandas API to put the data as time series and tabular format for data manipulation and retrieval Developed API to Integrate with Amazon EC2 cloud based architecture in AWS including creating machine Images Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Developed python code for different tasks dependencies SLA watcher and time sensor for workflow management and automation using Airflow tool Designed release management reporting tool using NodeJS and GO Language Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Developed web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Created Python tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Implemented Microservices using Pivotal Cloud Foundry PCF platform build upon Spring Boot Services Maintained PostgreSQL objects like packages triggers procedures etc Implemented Backbone JS for creation of networking applications using JavaScript Used Heroku for continuous integration and deployed the project using GIT version control Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Created Airflow Scheduling scripts in Python Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created Automation test framework using Selenium Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using Pyspark Worked on Jenkins continuous integration tool for deployment of project ExportedImported data between different data sources using SQL Server Management Studio Worked on cross browser compilation and Responsive Web Design using HTML5 CSS3 and Bootstrap Developed applications using RESTful architecture using Nodejs and Python as backend languages and Used Numpy for Numerical analysis Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Used advanced packages like Mock patch and BeautifulSoup bs4 to perform unit testing Spearheaded adoption of Responsive web design principles and converted existing websites to Responsive websites by using Bootstrap Designed and developed middleware using RESTful web services based on a centralized schemaWrote Python scripts to parse JSON documents and load the data in database Developed various generic JavaScript functions used for validations Worked on AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications Worked with multiple development teams to troubleshot and resolve issues Used bean_docker for easy creation of additional docker containers on Elastic Beanstalk instances for testing and diagnostics Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon Web Services focusing on highavailability fault tolerance and autoscaling Creating S3 buckets and managing policies for S3 buckets and Utilized S3 bucket and backup on AWS Configured AWS RDS Aurora database users to allow each individual user privileges to perform their related tasks Developed scripts for build deployment maintenance and related tasks using Jenkins Docker in AWS Converted our staging and Production environment from a handful AMIs to a single bare metal host running Docker Created an automation unit and regression testing suites for the Rest API and batch jobs using Junit and TestNG Python Developer Liberty Mutual Boston MA February 2015 to December 2016 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework with GIT Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript AngularJS JQuery and implemented CSS framework Implemented ChefPuppet scripts for running and deploying applications on to the Cloud Foundry and had utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed automated the process of installation and configuration of secure Data Stax Enterprise Cassandra using chef Generating various capacity planning reports graphical using Python packages like Numpy scipy and matplotlib Used Pandas library for statistics Analysis Numpy for Numerical analysis Integrated AWS with internal DNS configure AWS Virtual Private Cloud to support application development and production Designed UML diagrams using Magic Draw to generate C code on the fly Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager Designed and developed data management system using MySQL Built application logic using Python Used Python Library Beautiful Soup for web scrapping and used MongoDB for implementation of automated scripts to back up the old records and transfer these backup files using ftplib library Supported in setting up QA environment and updating configurations for implementing scripts with Pig and Sqoop Built and maintained scalable data pipelines using the Hadoop ecosystem and other open source components like Hive Designed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Involved in database development with Python SQL MySQL PostgreSQL MongoDB Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed python code using version control tools like Github and SVN on vagrant machines Designated UI architecture for the internal web application and worked with designers to construct UI using ReactJS Used Hive and created Hive tables and involved in data loading and writing Hive UDFs Involved in importing and exporting data into HDFS and Hive using Sqoop Developed API services in Python NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Developed automated process for builds and deployments Jenkins Ant Maven Shell Script Responsible for gathering requirements system analysis design development testing and deployment Automated different workflows which are initiated manually with Python scripts and Unix shell scripting Performed Flow Control response to FrontEnd Request using PYTHONPostgreSQL Wrote programs for performance calculations using NumPy and SQLAlchemy and had used Python and Django creating graphics XML processing data exchange and business logic implementation Maintained multiple copies of data in different database servers using MongoDB Replication concept and had developed Spark code using Scala and SparkSQL for faster testing and processing of data Worked on Element Tree XML API in python to parse XML documents and load the data in database Developed intranet portal for managing Amazon EC2 servers using Python Tornado and MongoDB Developed webbased applications using Python Django XML CSS HTML JavaScript AngularJS and jQuery Worked on Python OpenStack APIs and used NumPy for Numerical analysis and had developed Wrapper in Python for instantiating multithreaded application Automated RabbitMQ cluster installations and configuration using Python Worked on AngularJS to create single page applications SPA using its features like routers Controllers Services Directives Developed web applications and RESTful web services and APIs using Python Django and PHP Automated AWS S3 data upload download using Python scripts and had created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Developed web GUI involving HTML NodeJS JavaScript under MVC architecture and had developed backend of the application with Python Django Oracle DB Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked on loading data from excel into Oracle Table using external tables Written complex SQLs using joins sub queries and correlated sub queries in Oracle to generate business reports accordingly Installation and setting up PythonDjangoMySQL in AWS and EC2 cloud platform Managed Ubuntu Linux and Windows virtual servers on AWS EC2 using OpenSource Chef Server Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python sdk Worked on AWS cloud watch for monitoring the application infrastructure and used AWS email services for notifying Migrated applications from internal data center to AWS Skilled in using collections in Python for manipulating and looping through different user defined objects Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Developed entire frontend and backend modules using Python on Django Web Framework Used Django for framework for accessing various consumer Data from various sources Designed and managed API system deployment using fast http server and Amazon AWS architecture Python Developer Cardinal Health Dublin OH November 2013 to December 2014 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Involved in the design development and testing phases of application using AGILE methodology Maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on development of SQL and stored procedures trigger and function on MYSQL Migrated ETL processes from RDBMS to Hive to test the easy data manipulation Developed server based web traffic statistical analysis tool using Flask Pandas Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Created RESTful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Developed rich UI web application using javascript libraries like JQuery UI data grid Jscolor high charts Used MySQL as backend database and MySQL dB of python as database connector to interact with MySQL server Developed applications using MongoDB Redis and MySQL and was also involved in writing application level code to interact with APIs Web Services using JSON Developed entire frontend and backend modules using Python on Django Web Framework and had used MVC architecture for developing the application Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved use cases class diagrams activity diagrams and collaboration diagrams in UML Python Developer Wipro IN August 2012 to October 2013 Responsibilities Understood the several Processor components and analyzed the data in design database and had maintained the data with various levels of access privileges Coordinated with the design team members to provide the data in required format and had collected the several usage models and functions from the team members Developed and maintained of the tool that abstracts the information for the user and had developed XMLs for several components which maintains data for several registers Developed data structures xml parsing using Python for extracting useful data from the design data base Used advance features like pickleunpickle in python for sharing the information across the applications Represented the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Developed Python APIs and harassers that works both in Linux and windows and maintaining them using the revision control SVN Developed packages to move large amount of data to report database using partition exchange data loading using oracle SQL Loader scripts to load data and also loaded data from a single flat file to multiple tables Extensively worked on Database using MySQL Strong backend designing and written extensive backend code on the serverside using PLSQL including packaged procedures functions and SQLPLUS Developed API using Hibernate to interact with the MySQL database also created distributed MySQL coherence domains configuration and system design based on oracle coherence Produced SQL queries to provide data as requested by clients from MySQL database Was Involved in optimizing MySQL queries figuring out fast and efficient ways for them Used Oracle Migration Workbench to migrate MySQL database to Oracle Database Created SQL Scripts for data loads and Upgrades for data migrations and data validations Used Spring Core Annotations for Dependency Injection Created REST web services using Spring for UI to interface with backend Called REST web services through AngularJS services to get JSON Object and modified the response object to display in UI Used the REST Templates in the spring services to call the REST web services Consumed SOAP and Restful web services for communicating with other applications Used JSP HTML CSS and JavaScript for content layout and presentation Education Bachelors in Computer Science in Computer Science Gujarat Technological University 2012",
    "entities": [
        "Responsive Web Design",
        "Hive UDFs Involved",
        "AJAX",
        "JVM Parameters Created Python",
        "IDE",
        "Wrote Python OO Design",
        "ExportedImported",
        "Spearheaded",
        "GUI",
        "jQuery Worked",
        "Nodejs",
        "ReactRoutes",
        "HDFS",
        "HTML NodeJS",
        "REST JSON",
        "Python Developer Cardinal Health",
        "Created Automation",
        "Amazon Web Services AWS",
        "Panda",
        "Heroku",
        "Utilized S3",
        "Hadoop",
        "Agile Methodology",
        "XML",
        "GO Language",
        "Hadoop MapReduce HDFS HBase Hive",
        "JQuery UI",
        "Builtin",
        "DevOps",
        "jQuery Worked on Python",
        "CC",
        "Automated",
        "API Integration Implemented Microservices",
        "Amazon",
        "Python SQL MySQL PostgreSQL MongoDB",
        "Python Django Oracle DB Used Test",
        "Python",
        "Created RESTful",
        "Bootstrap Designed",
        "Sub Queries Stored Procedures Triggers Cursors and Functions on My SQL",
        "Test Driven",
        "Developed",
        "Mongo",
        "Natural Language Processing NLP Programs Experienced",
        "Linux Ubuntu SSH FlaskDjango",
        "SparkSQL",
        "Version Control",
        "Active Records Involved",
        "PyWebkitGtk",
        "Django",
        "Utilized",
        "AWS Converted",
        "Python Unit",
        "Puppet",
        "UML",
        "FrontEnd Request",
        "Restful",
        "Complete Software",
        "RUP Waterfall",
        "SOA",
        "AGILE",
        "API RESTful Web Service",
        "Linux",
        "Upgrades",
        "CSS Sass",
        "Data Extraction Transformation",
        "Performed Flow Control",
        "ObjectOriented",
        "Built",
        "Worked",
        "Shell Scripting",
        "Docker",
        "Celery",
        "Oracle Table",
        "ChefPuppet",
        "PyQt",
        "Designated UI",
        "MVC",
        "Flask SQL Alchemy",
        "AWS EC2 Wrote",
        "Spark",
        "Redux",
        "Restful Handson",
        "GIT",
        "Created Airflow Scheduling",
        "JS",
        "API",
        "UI HTML Bootstrap",
        "Developed Microservices",
        "Database",
        "Pyspark Implemented AWS",
        "Sqoop",
        "QA",
        "Computer Science in Computer Science Gujarat Technological University",
        "Nodejs Flask",
        "Present Responsibilities Designed",
        "Scala",
        "AWS",
        "AWS Configured AWS RDS Aurora",
        "Data Stax Enterprise Cassandra",
        "Coordinated",
        "Jenkins Experience",
        "Pyspark",
        "TestNG Python Developer Liberty Mutual",
        "React JS",
        "ELB",
        "UML Python Developer Wipro",
        "AWS Skilled",
        "SQL",
        "OpenStack Docker Puppet Chef Ansible AWS Cloud Formation",
        "OpenSource Chef Server Build",
        "Amazon Web Services",
        "Development of Isomorphic",
        "lPythonspan",
        "Github",
        "Jenkins Ansible",
        "CSV Parsing",
        "SQL Alchemy",
        "Hive Designed",
        "Images Used Celery",
        "SVN CVS",
        "Hive",
        "CICD",
        "JUNIT",
        "Amazon AWS",
        "Python Implemented",
        "Consumed SOAP",
        "Stored Procedures Tables Views Sequences Cursors Packages and Triggers Developed",
        "Pandas",
        "NPM Node Package",
        "SQLite",
        "CRUD",
        "the Cloud Foundry",
        "netconf Network",
        "NodeJS Successfully",
        "Spring Boot Services",
        "SQLPLUS Developed API using Hibernate",
        "AWS Cloud Architecture Hands",
        "Controllers Services",
        "Compose and Docker Registry Creating Docker Images",
        "JavaScript",
        "ANT",
        "Puppet and Chef and Creating",
        "UI",
        "Develop C API",
        "SMTP",
        "SVN",
        "NodeJS Unit Testing",
        "CSS",
        "Oracle Migration Workbench",
        "Processor",
        "Hadoop Spark",
        "Wrapper in Python",
        "Boston",
        "REST",
        "SQL Server Management Studio Worked",
        "SPA",
        "Oracle Database Created",
        "TDD",
        "NoSQL",
        "Pyspark Expertise",
        "Oracle SQLite PostgreSQL",
        "Developed Self Service",
        "JQuery",
        "Cassandra Configuration",
        "Installation",
        "Used Spring Core Annotations for Dependency Injection Created",
        "DNS"
    ],
    "experience": "Experience in implementing serverside technologies with restful API and MVC design patterns using Django framework Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Great knowledge of continuous integration and deployment using Jenkins docker Extensive experience with Amazon Web Services AWS OpenStack Docker Puppet Chef Ansible AWS Cloud Formation AWS Cloud Front and Experience in using containers like Docker and familiar with Jenkins Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Good working experience in processing large datasets with Spark using Scala and Pyspark and Familiar with JSON based REST Web services Experience in designing and configuring secure VPC through private and public networks in AWS and created various subnets for servers Experience in Agile development methodology waterfall and TDD test driven development Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Knowledge of advanced level programming in CC including thread synchronization Multithreading multiprocessing and concurrency Hands on experience with GO Language and its Builtin concurrency features such as goroutines channels and select statement Good experience in Shell Scripting SQL Server Unix and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Hands on experience in installing configuring and using Hadoop components like Hadoop MapReduce HDFS HBase Hive Sqoop Pig Zookeeper and Flume Asset in queueing architectures with RabbitMQ for scalability performance and building Experience in building and understanding Natural Language Processing NLP Programs Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Pyspark Expertise in working with GUI frameworksPyjamas Jytho guidata   PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in working with the JavaScript prototype JS and various MVC JavaScript frameworks Backbonejs and ReactJS Working knowledge on Hadoop Spark and Big data Technologies Experience with Version Control systems with SVN CVS and GIT Experience in NodeJS Unit Testing using Mocha and Angular EndEnd testing using Jasmine Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on My SQL and PostgreSQL database Experience using python libraries for machine learning like pandas numpy matplotlib sklearn scipy to Loading the dataset summarizing the dataset visualizing the dataset evaluating some algorithms and making some predictions Experience in performing data enrichment cleansing analytics aggregations using Hive and Pig Experience with Test Driven development like JUNIT TestNG Mockito Selenium Cucumber Experience in Web development with Python and Django SQL ETL Linux Asynchronous task queues with Celery and RabbitMQ Extensive experience in working IDE tools like Eclipse Net Beans RAD WID Web Sphere Integration Designer Experiences in writing ANT Maven build scripts and configuring and using Log4j for System Logging Expertise in ObjectOriented design and coding Good knowledge of various Design Patterns and UML and Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Have good idea about tools like Bugzilla Jira Confluence and Axosoft and Design the front end of company website with CSS Sass and Bootstrap and implemented Web Services based on SOA architecture with Restful Handson experience in Unix and Linux Kernels file validations file downloads workflow executions Good experience in working with Amazon Web Services like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Hands on Experience on Docker Hub Docker Engine Hub machine Compose and Docker Registry Creating Docker Images and handling multiple images primarily for middleware installations and domain configuration Experience on complete software development life cycle SDLC with software development models like JIRA Agile Scrum Model Prototype model RUP Waterfall model Work Experience Sr Python Developer JP Morgan Chase Columbus OH January 2017 to Present Responsibilities Designed front end using UI HTML Bootstrap NodeJS underscore JS AngularJS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Developed Merge jobs in Python to extract and load data into MySQL database and Worked on MYSQL data lineage process to map source to target DB table and column mappings using Python Have utilized Python libraries such as Numpy and Pandas for processing tabular format data Installing and automation of application using configuration management tools Puppet and Chef and Creating and configuring virtual development environments with Chef and Virtual Box Involved in the development of the applications using Python 33 HTML5 CSS3 AJAX JSON and jQuery Worked with search business and search team to implement dynamic rule updates to search using Elasticsearch Built various graphs for business decision making using Python mat plot lib library Involved in MVC frameworks like Django Angularjs ReactJS JavaScript and Nodejs and had analyzed the SQL scripts and designed the solution to implement using Pyspark Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances Developed Microservices using GO language and developed corresponding test cases Develop C API for web backend functionality to replace use of legacy mainframe system Designed and developed the application using Agile Methodology and followed TDD and Scrum Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector My SQLdb package to retrieve information Built reusable and customizable components for the new website using ReactJS and ReactRoutes to create a single page web application Involved in development of business logic by backend python programming to achieve optimal results Worked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container ServiceDocker Wrote python code within the Hadoop framework to solve Natural Language Processing NLP problems Designed a tool called netconf Network configuration which automatically configures network switches by parsing XML files Developed Self Service transaction metrics dashboard using Angular NodeJS and GO Language Exported the analyzed data to the relational databases using Sqoop to further visualize and generate reports Installed and configured Hive and written Hive UDFs Used Vagrant to implement environment for microservices deployments and testing in Docker images Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ Analyzed data by performing Hive queries and running Pig Scripts to study transactional behaviour of policies and plans Worked on project scaffolding using yeoman grunt bower NodeJS Successfully migrated the Django database from SQLite to MySQL to PostgreSQL and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Wrote and executed various RDBMS MYSQL database queries from Python using PythonMySQL connector and MySQLdb package Used Pandas API to put the data as time series and tabular format for data manipulation and retrieval Developed API to Integrate with Amazon EC2 cloud based architecture in AWS including creating machine Images Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Developed python code for different tasks dependencies SLA watcher and time sensor for workflow management and automation using Airflow tool Designed release management reporting tool using NodeJS and GO Language Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Developed web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Created Python tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Implemented Microservices using Pivotal Cloud Foundry PCF platform build upon Spring Boot Services Maintained PostgreSQL objects like packages triggers procedures etc Implemented Backbone JS for creation of networking applications using JavaScript Used Heroku for continuous integration and deployed the project using GIT version control Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Created Airflow Scheduling scripts in Python Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created Automation test framework using Selenium Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using Pyspark Worked on Jenkins continuous integration tool for deployment of project ExportedImported data between different data sources using SQL Server Management Studio Worked on cross browser compilation and Responsive Web Design using HTML5 CSS3 and Bootstrap Developed applications using RESTful architecture using Nodejs and Python as backend languages and Used Numpy for Numerical analysis Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Used advanced packages like Mock patch and BeautifulSoup bs4 to perform unit testing Spearheaded adoption of Responsive web design principles and converted existing websites to Responsive websites by using Bootstrap Designed and developed middleware using RESTful web services based on a centralized schemaWrote Python scripts to parse JSON documents and load the data in database Developed various generic JavaScript functions used for validations Worked on AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications Worked with multiple development teams to troubleshot and resolve issues Used bean_docker for easy creation of additional docker containers on Elastic Beanstalk instances for testing and diagnostics Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon Web Services focusing on highavailability fault tolerance and autoscaling Creating S3 buckets and managing policies for S3 buckets and Utilized S3 bucket and backup on AWS Configured AWS RDS Aurora database users to allow each individual user privileges to perform their related tasks Developed scripts for build deployment maintenance and related tasks using Jenkins Docker in AWS Converted our staging and Production environment from a handful AMIs to a single bare metal host running Docker Created an automation unit and regression testing suites for the Rest API and batch jobs using Junit and TestNG Python Developer Liberty Mutual Boston MA February 2015 to December 2016 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework with GIT Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript AngularJS JQuery and implemented CSS framework Implemented ChefPuppet scripts for running and deploying applications on to the Cloud Foundry and had utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed automated the process of installation and configuration of secure Data Stax Enterprise Cassandra using chef Generating various capacity planning reports graphical using Python packages like Numpy scipy and matplotlib Used Pandas library for statistics Analysis Numpy for Numerical analysis Integrated AWS with internal DNS configure AWS Virtual Private Cloud to support application development and production Designed UML diagrams using Magic Draw to generate C code on the fly Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager Designed and developed data management system using MySQL Built application logic using Python Used Python Library Beautiful Soup for web scrapping and used MongoDB for implementation of automated scripts to back up the old records and transfer these backup files using ftplib library Supported in setting up QA environment and updating configurations for implementing scripts with Pig and Sqoop Built and maintained scalable data pipelines using the Hadoop ecosystem and other open source components like Hive Designed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Involved in database development with Python SQL MySQL PostgreSQL MongoDB Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed python code using version control tools like Github and SVN on vagrant machines Designated UI architecture for the internal web application and worked with designers to construct UI using ReactJS Used Hive and created Hive tables and involved in data loading and writing Hive UDFs Involved in importing and exporting data into HDFS and Hive using Sqoop Developed API services in Python NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Developed automated process for builds and deployments Jenkins Ant Maven Shell Script Responsible for gathering requirements system analysis design development testing and deployment Automated different workflows which are initiated manually with Python scripts and Unix shell scripting Performed Flow Control response to FrontEnd Request using PYTHONPostgreSQL Wrote programs for performance calculations using NumPy and SQLAlchemy and had used Python and Django creating graphics XML processing data exchange and business logic implementation Maintained multiple copies of data in different database servers using MongoDB Replication concept and had developed Spark code using Scala and SparkSQL for faster testing and processing of data Worked on Element Tree XML API in python to parse XML documents and load the data in database Developed intranet portal for managing Amazon EC2 servers using Python Tornado and MongoDB Developed webbased applications using Python Django XML CSS HTML JavaScript AngularJS and jQuery Worked on Python OpenStack APIs and used NumPy for Numerical analysis and had developed Wrapper in Python for instantiating multithreaded application Automated RabbitMQ cluster installations and configuration using Python Worked on AngularJS to create single page applications SPA using its features like routers Controllers Services Directives Developed web applications and RESTful web services and APIs using Python Django and PHP Automated AWS S3 data upload download using Python scripts and had created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Developed web GUI involving HTML NodeJS JavaScript under MVC architecture and had developed backend of the application with Python Django Oracle DB Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked on loading data from excel into Oracle Table using external tables Written complex SQLs using joins sub queries and correlated sub queries in Oracle to generate business reports accordingly Installation and setting up PythonDjangoMySQL in AWS and EC2 cloud platform Managed Ubuntu Linux and Windows virtual servers on AWS EC2 using OpenSource Chef Server Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python sdk Worked on AWS cloud watch for monitoring the application infrastructure and used AWS email services for notifying Migrated applications from internal data center to AWS Skilled in using collections in Python for manipulating and looping through different user defined objects Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Developed entire frontend and backend modules using Python on Django Web Framework Used Django for framework for accessing various consumer Data from various sources Designed and managed API system deployment using fast http server and Amazon AWS architecture Python Developer Cardinal Health Dublin OH November 2013 to December 2014 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Involved in the design development and testing phases of application using AGILE methodology Maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on development of SQL and stored procedures trigger and function on MYSQL Migrated ETL processes from RDBMS to Hive to test the easy data manipulation Developed server based web traffic statistical analysis tool using Flask Pandas Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Created RESTful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Developed rich UI web application using javascript libraries like JQuery UI data grid Jscolor high charts Used MySQL as backend database and MySQL dB of python as database connector to interact with MySQL server Developed applications using MongoDB Redis and MySQL and was also involved in writing application level code to interact with APIs Web Services using JSON Developed entire frontend and backend modules using Python on Django Web Framework and had used MVC architecture for developing the application Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved use cases class diagrams activity diagrams and collaboration diagrams in UML Python Developer Wipro IN August 2012 to October 2013 Responsibilities Understood the several Processor components and analyzed the data in design database and had maintained the data with various levels of access privileges Coordinated with the design team members to provide the data in required format and had collected the several usage models and functions from the team members Developed and maintained of the tool that abstracts the information for the user and had developed XMLs for several components which maintains data for several registers Developed data structures xml parsing using Python for extracting useful data from the design data base Used advance features like pickleunpickle in python for sharing the information across the applications Represented the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Developed Python APIs and harassers that works both in Linux and windows and maintaining them using the revision control SVN Developed packages to move large amount of data to report database using partition exchange data loading using oracle SQL Loader scripts to load data and also loaded data from a single flat file to multiple tables Extensively worked on Database using MySQL Strong backend designing and written extensive backend code on the serverside using PLSQL including packaged procedures functions and SQLPLUS Developed API using Hibernate to interact with the MySQL database also created distributed MySQL coherence domains configuration and system design based on oracle coherence Produced SQL queries to provide data as requested by clients from MySQL database Was Involved in optimizing MySQL queries figuring out fast and efficient ways for them Used Oracle Migration Workbench to migrate MySQL database to Oracle Database Created SQL Scripts for data loads and Upgrades for data migrations and data validations Used Spring Core Annotations for Dependency Injection Created REST web services using Spring for UI to interface with backend Called REST web services through AngularJS services to get JSON Object and modified the response object to display in UI Used the REST Templates in the spring services to call the REST web services Consumed SOAP and Restful web services for communicating with other applications Used JSP HTML CSS and JavaScript for content layout and presentation Education Bachelors in Computer Science in Computer Science Gujarat Technological University 2012",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "JP",
        "Morgan",
        "Chase",
        "Columbus",
        "OH",
        "experience",
        "applications",
        "software",
        "development",
        "design",
        "Python",
        "Django",
        "XML",
        "CSS3",
        "HTML5",
        "DHTML",
        "JavaScript",
        "jQuery",
        "AngularJS",
        "MVC",
        "frameworks",
        "Django",
        "JavaScript",
        "jQuery",
        "ReactJS",
        "Nodejs",
        "Flask",
        "Pyramid",
        "Django",
        "ORM",
        "SQL",
        "Alchemy",
        "use",
        "Linux",
        "Ubuntu",
        "SSH",
        "FlaskDjango",
        "Experience",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "Django",
        "framework",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "knowledge",
        "integration",
        "deployment",
        "Jenkins",
        "docker",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "OpenStack",
        "Docker",
        "Puppet",
        "Chef",
        "Ansible",
        "AWS",
        "Cloud",
        "Formation",
        "Cloud",
        "Front",
        "Experience",
        "containers",
        "Docker",
        "Jenkins",
        "Experience",
        "applications",
        "amazon",
        "web",
        "services",
        "EC2",
        "Cloud",
        "Search",
        "Elastic",
        "Load",
        "balancer",
        "ELB",
        "S3",
        "Cloud",
        "Front",
        "Good",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "Pyspark",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Experience",
        "designing",
        "VPC",
        "networks",
        "AWS",
        "subnets",
        "servers",
        "Experience",
        "development",
        "methodology",
        "waterfall",
        "TDD",
        "test",
        "development",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Couch",
        "DB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "Knowledge",
        "level",
        "programming",
        "CC",
        "thread",
        "synchronization",
        "Multithreading",
        "concurrency",
        "Hands",
        "experience",
        "GO",
        "Language",
        "Builtin",
        "concurrency",
        "features",
        "goroutines",
        "channels",
        "statement",
        "experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "Unix",
        "Linux",
        "Open",
        "stock",
        "Expertise",
        "python",
        "focus",
        "DevOps",
        "tools",
        "CICD",
        "AWS",
        "Cloud",
        "Architecture",
        "Hands",
        "experience",
        "configuring",
        "Hadoop",
        "components",
        "Hadoop",
        "MapReduce",
        "HDFS",
        "HBase",
        "Hive",
        "Sqoop",
        "Pig",
        "Zookeeper",
        "Flume",
        "Asset",
        "architectures",
        "RabbitMQ",
        "scalability",
        "performance",
        "Experience",
        "building",
        "Natural",
        "Language",
        "Processing",
        "NLP",
        "Programs",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "working",
        "experience",
        "datasets",
        "Spark",
        "Scala",
        "Pyspark",
        "Expertise",
        "GUI",
        "Jytho",
        "PyQt",
        "PyWebkitGtk",
        "Elasticsearch",
        "Log",
        "stash",
        "Kibana",
        "ELK",
        "Expertise",
        "JavaScript",
        "prototype",
        "JS",
        "MVC",
        "JavaScript",
        "Backbonejs",
        "knowledge",
        "Hadoop",
        "Spark",
        "data",
        "Technologies",
        "Experience",
        "Version",
        "Control",
        "systems",
        "SVN",
        "CVS",
        "GIT",
        "Experience",
        "NodeJS",
        "Unit",
        "Testing",
        "Mocha",
        "Angular",
        "EndEnd",
        "testing",
        "Jasmine",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "SQL",
        "PostgreSQL",
        "database",
        "Experience",
        "libraries",
        "machine",
        "learning",
        "pandas",
        "numpy",
        "matplotlib",
        "dataset",
        "dataset",
        "dataset",
        "algorithms",
        "predictions",
        "data",
        "enrichment",
        "cleansing",
        "analytics",
        "aggregations",
        "Hive",
        "Pig",
        "Experience",
        "Test",
        "development",
        "JUNIT",
        "TestNG",
        "Mockito",
        "Selenium",
        "Cucumber",
        "Experience",
        "Web",
        "development",
        "Python",
        "Django",
        "SQL",
        "ETL",
        "Linux",
        "task",
        "queues",
        "Celery",
        "experience",
        "IDE",
        "tools",
        "Eclipse",
        "Net",
        "Beans",
        "RAD",
        "WID",
        "Web",
        "Sphere",
        "Integration",
        "Designer",
        "Experiences",
        "ANT",
        "Maven",
        "scripts",
        "Log4j",
        "System",
        "Logging",
        "Expertise",
        "ObjectOriented",
        "design",
        "knowledge",
        "Design",
        "Patterns",
        "UML",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "idea",
        "tools",
        "Bugzilla",
        "Jira",
        "Confluence",
        "Axosoft",
        "Design",
        "end",
        "company",
        "website",
        "CSS",
        "Sass",
        "Bootstrap",
        "Web",
        "Services",
        "SOA",
        "architecture",
        "Restful",
        "Handson",
        "experience",
        "Unix",
        "Linux",
        "Kernels",
        "file",
        "validations",
        "file",
        "downloads",
        "executions",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "clouds",
        "VPCs",
        "Storage",
        "models",
        "EBS",
        "S3",
        "instance",
        "storage",
        "Elastic",
        "Load",
        "Balancers",
        "Hands",
        "Experience",
        "Docker",
        "Hub",
        "Docker",
        "Engine",
        "Hub",
        "machine",
        "Compose",
        "Docker",
        "Registry",
        "Creating",
        "Docker",
        "Images",
        "images",
        "middleware",
        "installations",
        "domain",
        "configuration",
        "Experience",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "software",
        "development",
        "models",
        "JIRA",
        "Agile",
        "Scrum",
        "Model",
        "Prototype",
        "model",
        "RUP",
        "Waterfall",
        "model",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "JP",
        "Morgan",
        "Chase",
        "Columbus",
        "OH",
        "January",
        "Present",
        "Responsibilities",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "NodeJS",
        "JS",
        "AngularJS",
        "CSS",
        "JavaScript",
        "Strong",
        "Expertise",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "MYSQL",
        "data",
        "lineage",
        "process",
        "source",
        "DB",
        "table",
        "column",
        "mappings",
        "Python",
        "Python",
        "libraries",
        "Numpy",
        "Pandas",
        "format",
        "data",
        "Installing",
        "automation",
        "application",
        "configuration",
        "management",
        "Puppet",
        "Chef",
        "Creating",
        "development",
        "environments",
        "Chef",
        "Virtual",
        "Box",
        "development",
        "applications",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "jQuery",
        "search",
        "business",
        "search",
        "team",
        "rule",
        "updates",
        "Elasticsearch",
        "graphs",
        "business",
        "decision",
        "Python",
        "mat",
        "plot",
        "lib",
        "library",
        "MVC",
        "frameworks",
        "Django",
        "Angularjs",
        "ReactJS",
        "JavaScript",
        "Nodejs",
        "SQL",
        "scripts",
        "solution",
        "Pyspark",
        "AWS",
        "solutions",
        "E2C",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "volumes",
        "EC2",
        "instances",
        "Microservices",
        "GO",
        "language",
        "test",
        "cases",
        "Develop",
        "C",
        "API",
        "web",
        "functionality",
        "use",
        "legacy",
        "mainframe",
        "system",
        "application",
        "Agile",
        "Methodology",
        "TDD",
        "Scrum",
        "Managed",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "package",
        "information",
        "components",
        "website",
        "ReactJS",
        "ReactRoutes",
        "page",
        "web",
        "application",
        "development",
        "business",
        "logic",
        "python",
        "programming",
        "results",
        "AWS",
        "services",
        "websites",
        "Web",
        "Apps",
        "EC2",
        "Elastic",
        "Beanstalk",
        "Elastic",
        "Container",
        "ServiceDocker",
        "python",
        "code",
        "Hadoop",
        "framework",
        "Natural",
        "Language",
        "Processing",
        "NLP",
        "problems",
        "tool",
        "netconf",
        "Network",
        "configuration",
        "network",
        "switches",
        "XML",
        "files",
        "Developed",
        "Self",
        "Service",
        "transaction",
        "metrics",
        "dashboard",
        "Angular",
        "NodeJS",
        "GO",
        "Language",
        "data",
        "databases",
        "Sqoop",
        "reports",
        "Hive",
        "Hive",
        "UDFs",
        "Vagrant",
        "environment",
        "microservices",
        "deployments",
        "testing",
        "Docker",
        "images",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "Mongo",
        "DB",
        "intelliJ",
        "data",
        "Hive",
        "queries",
        "Pig",
        "Scripts",
        "behaviour",
        "policies",
        "plans",
        "project",
        "yeoman",
        "grunt",
        "bower",
        "NodeJS",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "CSV",
        "data",
        "approach",
        "AWS",
        "EC2",
        "Wrote",
        "RDBMS",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "package",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "data",
        "manipulation",
        "retrieval",
        "API",
        "Amazon",
        "EC2",
        "cloud",
        "architecture",
        "AWS",
        "machine",
        "Images",
        "Celery",
        "task",
        "queue",
        "Redis",
        "broker",
        "tasks",
        "code",
        "tasks",
        "dependencies",
        "SLA",
        "watcher",
        "time",
        "sensor",
        "workflow",
        "management",
        "automation",
        "Airflow",
        "tool",
        "release",
        "management",
        "reporting",
        "tool",
        "NodeJS",
        "GO",
        "Language",
        "Used",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Developed",
        "web",
        "applications",
        "MongoDB",
        "background",
        "processes",
        "Resque",
        "Redis",
        "Worked",
        "performance",
        "tuning",
        "cluster",
        "Cassandra",
        "Configuration",
        "file",
        "JVM",
        "Parameters",
        "Python",
        "tools",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Microservices",
        "Cloud",
        "Foundry",
        "PCF",
        "platform",
        "Spring",
        "Boot",
        "Services",
        "PostgreSQL",
        "objects",
        "packages",
        "procedures",
        "Backbone",
        "JS",
        "creation",
        "networking",
        "applications",
        "JavaScript",
        "Used",
        "Heroku",
        "integration",
        "project",
        "GIT",
        "version",
        "control",
        "Strong",
        "Socket",
        "programming",
        "experience",
        "Python",
        "networking",
        "operations",
        "race",
        "route",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "Airflow",
        "Scheduling",
        "scripts",
        "Python",
        "Developed",
        "Python",
        "scripts",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Created",
        "Automation",
        "test",
        "framework",
        "Selenium",
        "Managed",
        "Hadoop",
        "log",
        "file",
        "SQL",
        "scripts",
        "solution",
        "process",
        "Pyspark",
        "Worked",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "ExportedImported",
        "data",
        "data",
        "sources",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "cross",
        "browser",
        "compilation",
        "Responsive",
        "Web",
        "Design",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "applications",
        "architecture",
        "Nodejs",
        "Python",
        "languages",
        "Numpy",
        "Numerical",
        "analysis",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "software",
        "developers",
        "DevOps",
        "software",
        "system",
        "problems",
        "packages",
        "patch",
        "BeautifulSoup",
        "bs4",
        "unit",
        "testing",
        "adoption",
        "Responsive",
        "web",
        "design",
        "principles",
        "websites",
        "websites",
        "Bootstrap",
        "middleware",
        "web",
        "services",
        "schemaWrote",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "JavaScript",
        "functions",
        "validations",
        "AWS",
        "data",
        "pipeline",
        "Data",
        "Extraction",
        "Transformation",
        "Loading",
        "data",
        "sources",
        "Ansible",
        "servers",
        "buildconfiguration",
        "servers",
        "AWS",
        "servers",
        "roles",
        "deployment",
        "web",
        "applications",
        "development",
        "teams",
        "issues",
        "bean_docker",
        "creation",
        "docker",
        "containers",
        "Beanstalk",
        "instances",
        "testing",
        "diagnostics",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "multitude",
        "applications",
        "Amazon",
        "Web",
        "Services",
        "highavailability",
        "fault",
        "tolerance",
        "S3",
        "buckets",
        "policies",
        "S3",
        "buckets",
        "S3",
        "bucket",
        "backup",
        "AWS",
        "AWS",
        "RDS",
        "Aurora",
        "database",
        "users",
        "user",
        "privileges",
        "tasks",
        "scripts",
        "build",
        "deployment",
        "maintenance",
        "tasks",
        "Jenkins",
        "Docker",
        "AWS",
        "staging",
        "Production",
        "environment",
        "AMIs",
        "metal",
        "host",
        "Docker",
        "automation",
        "unit",
        "regression",
        "testing",
        "suites",
        "Rest",
        "API",
        "batch",
        "jobs",
        "Junit",
        "TestNG",
        "Python",
        "Developer",
        "Liberty",
        "Mutual",
        "Boston",
        "MA",
        "February",
        "December",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "GIT",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "JQuery",
        "CSS",
        "framework",
        "ChefPuppet",
        "scripts",
        "applications",
        "Cloud",
        "Foundry",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Designed",
        "process",
        "installation",
        "configuration",
        "Data",
        "Stax",
        "Enterprise",
        "Cassandra",
        "chef",
        "capacity",
        "planning",
        "reports",
        "Python",
        "packages",
        "Numpy",
        "scipy",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "AWS",
        "DNS",
        "configure",
        "Virtual",
        "Cloud",
        "application",
        "development",
        "production",
        "UML",
        "diagrams",
        "Magic",
        "Draw",
        "C",
        "code",
        "fly",
        "screens",
        "end",
        "React",
        "JS",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "Designed",
        "data",
        "management",
        "system",
        "MySQL",
        "application",
        "logic",
        "Python",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "scrapping",
        "MongoDB",
        "implementation",
        "scripts",
        "records",
        "files",
        "ftplib",
        "library",
        "QA",
        "environment",
        "configurations",
        "scripts",
        "Pig",
        "Sqoop",
        "data",
        "pipelines",
        "Hadoop",
        "ecosystem",
        "source",
        "components",
        "Hive",
        "Designed",
        "solutions",
        "Docker",
        "Jenkins",
        "Git",
        "Puppet",
        "microservices",
        "deployment",
        "database",
        "development",
        "Python",
        "SQL",
        "MySQL",
        "PostgreSQL",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "python",
        "code",
        "version",
        "control",
        "tools",
        "Github",
        "SVN",
        "machines",
        "UI",
        "architecture",
        "web",
        "application",
        "designers",
        "UI",
        "ReactJS",
        "Hive",
        "Hive",
        "tables",
        "data",
        "loading",
        "Hive",
        "UDFs",
        "data",
        "HDFS",
        "Hive",
        "Sqoop",
        "Developed",
        "API",
        "services",
        "Python",
        "NodeJS",
        "AMQP",
        "architectures",
        "process",
        "builds",
        "Jenkins",
        "Ant",
        "Maven",
        "Shell",
        "Script",
        "Responsible",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "workflows",
        "Python",
        "scripts",
        "Unix",
        "shell",
        "Performed",
        "Flow",
        "Control",
        "response",
        "FrontEnd",
        "Request",
        "PYTHONPostgreSQL",
        "Wrote",
        "programs",
        "performance",
        "calculations",
        "NumPy",
        "SQLAlchemy",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "copies",
        "data",
        "database",
        "servers",
        "MongoDB",
        "Replication",
        "concept",
        "Spark",
        "code",
        "Scala",
        "SparkSQL",
        "testing",
        "processing",
        "data",
        "Element",
        "Tree",
        "XML",
        "API",
        "python",
        "XML",
        "documents",
        "data",
        "database",
        "intranet",
        "portal",
        "Amazon",
        "EC2",
        "servers",
        "Python",
        "Tornado",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "AngularJS",
        "jQuery",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "Numerical",
        "analysis",
        "Wrapper",
        "Python",
        "application",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "Python",
        "Worked",
        "page",
        "applications",
        "SPA",
        "features",
        "routers",
        "Controllers",
        "Services",
        "Directives",
        "Developed",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Django",
        "PHP",
        "Automated",
        "AWS",
        "S3",
        "data",
        "upload",
        "download",
        "Python",
        "scripts",
        "database",
        "objects",
        "Procedures",
        "Tables",
        "Views",
        "Sequences",
        "Cursors",
        "Packages",
        "Triggers",
        "web",
        "GUI",
        "HTML",
        "NodeJS",
        "JavaScript",
        "MVC",
        "architecture",
        "backend",
        "application",
        "Python",
        "Django",
        "Oracle",
        "DB",
        "Used",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "loading",
        "data",
        "excel",
        "Oracle",
        "Table",
        "tables",
        "SQLs",
        "joins",
        "sub",
        "queries",
        "sub",
        "Oracle",
        "business",
        "reports",
        "Installation",
        "PythonDjangoMySQL",
        "AWS",
        "EC2",
        "cloud",
        "platform",
        "Managed",
        "Ubuntu",
        "Linux",
        "Windows",
        "servers",
        "AWS",
        "EC2",
        "OpenSource",
        "Chef",
        "Server",
        "Build",
        "scripts",
        "AWS",
        "cloud",
        "EC2",
        "auto",
        "scaling",
        "load",
        "balancer",
        "python",
        "sdk",
        "AWS",
        "cloud",
        "application",
        "infrastructure",
        "AWS",
        "email",
        "services",
        "applications",
        "data",
        "center",
        "AWS",
        "collections",
        "Python",
        "user",
        "objects",
        "methodologies",
        "quality",
        "deliverables",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Django",
        "framework",
        "consumer",
        "Data",
        "sources",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "Python",
        "Developer",
        "Cardinal",
        "Health",
        "Dublin",
        "OH",
        "November",
        "December",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "design",
        "development",
        "phases",
        "application",
        "methodology",
        "databases",
        "Python",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "development",
        "SQL",
        "procedures",
        "trigger",
        "function",
        "MYSQL",
        "ETL",
        "processes",
        "RDBMS",
        "Hive",
        "data",
        "manipulation",
        "server",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "documents",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "servers",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "UI",
        "web",
        "application",
        "javascript",
        "libraries",
        "JQuery",
        "UI",
        "data",
        "grid",
        "Jscolor",
        "charts",
        "MySQL",
        "database",
        "MySQL",
        "dB",
        "python",
        "database",
        "connector",
        "MySQL",
        "server",
        "applications",
        "Redis",
        "MySQL",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "MVC",
        "architecture",
        "application",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "use",
        "cases",
        "class",
        "diagrams",
        "activity",
        "diagrams",
        "collaboration",
        "diagrams",
        "UML",
        "Python",
        "Developer",
        "Wipro",
        "August",
        "October",
        "Responsibilities",
        "Processor",
        "components",
        "data",
        "design",
        "database",
        "data",
        "levels",
        "access",
        "privileges",
        "design",
        "team",
        "members",
        "data",
        "format",
        "usage",
        "models",
        "functions",
        "team",
        "members",
        "tool",
        "information",
        "user",
        "XMLs",
        "components",
        "data",
        "registers",
        "data",
        "structures",
        "Python",
        "data",
        "design",
        "data",
        "base",
        "advance",
        "features",
        "pickleunpickle",
        "python",
        "information",
        "applications",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "Developed",
        "Python",
        "APIs",
        "harassers",
        "Linux",
        "windows",
        "revision",
        "control",
        "SVN",
        "packages",
        "amount",
        "data",
        "database",
        "partition",
        "exchange",
        "data",
        "loading",
        "oracle",
        "SQL",
        "Loader",
        "data",
        "data",
        "file",
        "tables",
        "Database",
        "MySQL",
        "Strong",
        "backend",
        "designing",
        "code",
        "serverside",
        "PLSQL",
        "procedures",
        "functions",
        "SQLPLUS",
        "Developed",
        "API",
        "Hibernate",
        "MySQL",
        "database",
        "MySQL",
        "coherence",
        "domains",
        "configuration",
        "system",
        "design",
        "oracle",
        "coherence",
        "SQL",
        "data",
        "clients",
        "MySQL",
        "database",
        "MySQL",
        "queries",
        "ways",
        "Oracle",
        "Migration",
        "Workbench",
        "MySQL",
        "database",
        "Oracle",
        "Database",
        "SQL",
        "Scripts",
        "data",
        "loads",
        "Upgrades",
        "data",
        "migrations",
        "data",
        "validations",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Created",
        "REST",
        "web",
        "services",
        "Spring",
        "UI",
        "REST",
        "web",
        "services",
        "services",
        "JSON",
        "Object",
        "response",
        "UI",
        "REST",
        "Templates",
        "spring",
        "services",
        "REST",
        "web",
        "services",
        "SOAP",
        "web",
        "services",
        "applications",
        "JSP",
        "HTML",
        "CSS",
        "JavaScript",
        "content",
        "layout",
        "presentation",
        "Education",
        "Bachelors",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "Gujarat",
        "Technological",
        "University"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:38:43.322923",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer JP Morgan Chase Columbus OH Extensive experience in developing webbased applications software development and design using Python 3427 Django 1918 XML CSS3 HTML5 DHTML JavaScript jQuery AngularJS Experienced in MVC frameworks like Django AngularJS JavaScript jQuery ReactJS and Nodejs Flask and Pyramid well versed in Django ORM and SQL Alchemy and Extensive use of Linux Ubuntu SSH FlaskDjango Experience in implementing serverside technologies with restful API and MVC design patterns using Django framework Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Great knowledge of continuous integration and deployment using Jenkins docker Extensive experience with Amazon Web Services AWS OpenStack Docker Puppet Chef Ansible AWS Cloud Formation AWS Cloud Front and Experience in using containers like Docker and familiar with Jenkins Experience in developing applications using amazon web services like EC2 Cloud Search Elastic Load balancer ELB S3 Cloud Front Good working experience in processing large datasets with Spark using Scala and Pyspark and Familiar with JSON based REST Web services Experience in designing and configuring secure VPC through private and public networks in AWS and created various subnets for servers Experience in Agile development methodology waterfall and TDD test driven development Experienced in NoSQL technologies like MongoDB Couch DB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Knowledge of advanced level programming in CC including thread synchronization Multithreading multiprocessing and concurrency Hands on experience with GO Language and its Builtin concurrency features such as goroutines channels and select statement Good experience in Shell Scripting SQL Server Unix and Linux Open stock and Expertise python scripting with focus on DevOps tools CICD and AWS Cloud Architecture Hands on experience in installing configuring and using Hadoop components like Hadoop MapReduce HDFS HBase Hive Sqoop Pig Zookeeper and Flume Asset in queueing architectures with RabbitMQ for scalability performance and building Experience in building and understanding Natural Language Processing NLP Programs Experienced in developing Web Services with Python programming language and Good working experience in processing large datasets with Spark using Scala and Pyspark Expertise in working with GUI frameworksPyjamas Jytho guidata PyGUI PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in working with the JavaScript prototype JS and various MVC JavaScript frameworks Backbonejs and ReactJS Working knowledge on Hadoop Spark and Big data Technologies Experience with Version Control systems with SVN CVS and GIT Experience in NodeJS Unit Testing using Mocha and Angular EndEnd testing using Jasmine Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on My SQL and PostgreSQL database Experience using python libraries for machine learning like pandas numpy matplotlib sklearn scipy to Loading the dataset summarizing the dataset visualizing the dataset evaluating some algorithms and making some predictions Experience in performing data enrichment cleansing analytics aggregations using Hive and Pig Experience with Test Driven development like JUNIT TestNG Mockito Selenium Cucumber Experience in Web development with Python and Django SQL ETL Linux Asynchronous task queues with Celery and RabbitMQ Extensive experience in working IDE tools like Eclipse Net Beans RAD WID Web Sphere Integration Designer Experiences in writing ANT Maven build scripts and configuring and using Log4j for System Logging Expertise in ObjectOriented design and coding Good knowledge of various Design Patterns and UML and Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Have good idea about tools like Bugzilla Jira Confluence and Axosoft and Design the front end of company website with CSS Sass and Bootstrap and implemented Web Services based on SOA architecture with Restful Handson experience in Unix and Linux Kernels file validations file downloads workflow executions Good experience in working with Amazon Web Services like EC2 Virtual private clouds VPCs Storage models EBS S3 instance storage Elastic Load Balancers ELBs Hands on Experience on Docker Hub Docker Engine Hub machine Compose and Docker Registry Creating Docker Images and handling multiple images primarily for middleware installations and domain configuration Experience on complete software development life cycle SDLC with software development models like JIRA Agile Scrum Model Prototype model RUP Waterfall model Work Experience Sr Python Developer JP Morgan Chase Columbus OH January 2017 to Present Responsibilities Designed front end using UI HTML Bootstrap NodeJS underscore JS AngularJS CSS and JavaScript and Strong Expertise in working with serverside technologies including databases restful API and MVC design patterns Developed Merge jobs in Python to extract and load data into MySQL database and Worked on MYSQL data lineage process to map source to target DB table and column mappings using Python Have utilized Python libraries such as Numpy and Pandas for processing tabular format data Installing and automation of application using configuration management tools Puppet and Chef and Creating and configuring virtual development environments with Chef and Virtual Box Involved in the development of the applications using Python 33 HTML5 CSS3 AJAX JSON and jQuery Worked with search business and search team to implement dynamic rule updates to search using Elasticsearch Built various graphs for business decision making using Python mat plot lib library Involved in MVC frameworks like Django Angularjs ReactJS JavaScript and Nodejs and had analyzed the SQL scripts and designed the solution to implement using Pyspark Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances Developed Microservices using GO language and developed corresponding test cases Develop C API for web backend functionality to replace use of legacy mainframe system Designed and developed the application using Agile Methodology and followed TDD and Scrum Managed datasets using Panda data frames and MySQL queried MYSQL database queries from Python using PythonMySQL connector My SQLdb package to retrieve information Built reusable and customizable components for the new website using ReactJS and ReactRoutes to create a single page web application Involved in development of business logic by backend python programming to achieve optimal results Worked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container ServiceDocker Wrote python code within the Hadoop framework to solve Natural Language Processing NLP problems Designed a tool called netconf Network configuration which automatically configures network switches by parsing XML files Developed Self Service transaction metrics dashboard using Angular NodeJS and GO Language Exported the analyzed data to the relational databases using Sqoop to further visualize and generate reports Installed and configured Hive and written Hive UDFs Used Vagrant to implement environment for microservices deployments and testing in Docker images Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ Analyzed data by performing Hive queries and running Pig Scripts to study transactional behaviour of policies and plans Worked on project scaffolding using yeoman grunt bower NodeJS Successfully migrated the Django database from SQLite to MySQL to PostgreSQL and Designed developed and deployed CSV Parsing using the big data approach on AWS EC2 Wrote and executed various RDBMS MYSQL database queries from Python using PythonMySQL connector and MySQLdb package Used Pandas API to put the data as time series and tabular format for data manipulation and retrieval Developed API to Integrate with Amazon EC2 cloud based architecture in AWS including creating machine Images Used Celery as task queue and RabbitMQ Redis as messaging broker to execute asynchronous tasks Developed python code for different tasks dependencies SLA watcher and time sensor for workflow management and automation using Airflow tool Designed release management reporting tool using NodeJS and GO Language Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Developed web applications using MongoDB and background processes using Resque and Redis and Worked on performance tuning of cluster using Cassandra Configuration file and JVM Parameters Created Python tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Implemented Microservices using Pivotal Cloud Foundry PCF platform build upon Spring Boot Services Maintained PostgreSQL objects like packages triggers procedures etc Implemented Backbone JS for creation of networking applications using JavaScript Used Heroku for continuous integration and deployed the project using GIT version control Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Created Airflow Scheduling scripts in Python Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created Automation test framework using Selenium Managed and reviewed Hadoop log file and worked in analyzing SQL scripts and designed the solution for the process using Pyspark Worked on Jenkins continuous integration tool for deployment of project ExportedImported data between different data sources using SQL Server Management Studio Worked on cross browser compilation and Responsive Web Design using HTML5 CSS3 and Bootstrap Developed applications using RESTful architecture using Nodejs and Python as backend languages and Used Numpy for Numerical analysis Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Used advanced packages like Mock patch and BeautifulSoup bs4 to perform unit testing Spearheaded adoption of Responsive web design principles and converted existing websites to Responsive websites by using Bootstrap Designed and developed middleware using RESTful web services based on a centralized schemaWrote Python scripts to parse JSON documents and load the data in database Developed various generic JavaScript functions used for validations Worked on AWS data pipeline for Data Extraction Transformation and Loading from the homogeneous or heterogeneous data sources Implemented Ansible to manage all existing servers and automate the buildconfiguration of new servers Implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications Worked with multiple development teams to troubleshot and resolve issues Used bean_docker for easy creation of additional docker containers on Elastic Beanstalk instances for testing and diagnostics Designed configured and deployed Amazon Web Services AWS for a multitude of applications utilizing the Amazon Web Services focusing on highavailability fault tolerance and autoscaling Creating S3 buckets and managing policies for S3 buckets and Utilized S3 bucket and backup on AWS Configured AWS RDS Aurora database users to allow each individual user privileges to perform their related tasks Developed scripts for build deployment maintenance and related tasks using Jenkins Docker in AWS Converted our staging and Production environment from a handful AMIs to a single bare metal host running Docker Created an automation unit and regression testing suites for the Rest API and batch jobs using Junit and TestNG Python Developer Liberty Mutual Boston MA February 2015 to December 2016 Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework with GIT Designed and managed API system deployment using fast http server and Amazon AWS architecture Designed the user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript AngularJS JQuery and implemented CSS framework Implemented ChefPuppet scripts for running and deploying applications on to the Cloud Foundry and had utilized continuous integration and automated deployments with Jenkins Ansible and Docker Designed automated the process of installation and configuration of secure Data Stax Enterprise Cassandra using chef Generating various capacity planning reports graphical using Python packages like Numpy scipy and matplotlib Used Pandas library for statistics Analysis Numpy for Numerical analysis Integrated AWS with internal DNS configure AWS Virtual Private Cloud to support application development and production Designed UML diagrams using Magic Draw to generate C code on the fly Developed various screens for the front end using React JS and used various predefined components from NPM Node Package Manager Designed and developed data management system using MySQL Built application logic using Python Used Python Library Beautiful Soup for web scrapping and used MongoDB for implementation of automated scripts to back up the old records and transfer these backup files using ftplib library Supported in setting up QA environment and updating configurations for implementing scripts with Pig and Sqoop Built and maintained scalable data pipelines using the Hadoop ecosystem and other open source components like Hive Designed implemented and maintained solutions for using Docker Jenkins Git and Puppet for microservices and continuous deployment Involved in database development with Python SQL MySQL PostgreSQL MongoDB Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Developed python code using version control tools like Github and SVN on vagrant machines Designated UI architecture for the internal web application and worked with designers to construct UI using ReactJS Used Hive and created Hive tables and involved in data loading and writing Hive UDFs Involved in importing and exporting data into HDFS and Hive using Sqoop Developed API services in Python NodeJS while leveraging AMQP and RabbitMQ for distributed architectures Developed automated process for builds and deployments Jenkins Ant Maven Shell Script Responsible for gathering requirements system analysis design development testing and deployment Automated different workflows which are initiated manually with Python scripts and Unix shell scripting Performed Flow Control response to FrontEnd Request using PYTHONPostgreSQL Wrote programs for performance calculations using NumPy and SQLAlchemy and had used Python and Django creating graphics XML processing data exchange and business logic implementation Maintained multiple copies of data in different database servers using MongoDB Replication concept and had developed Spark code using Scala and SparkSQL for faster testing and processing of data Worked on Element Tree XML API in python to parse XML documents and load the data in database Developed intranet portal for managing Amazon EC2 servers using Python Tornado and MongoDB Developed webbased applications using Python Django XML CSS HTML JavaScript AngularJS and jQuery Worked on Python OpenStack APIs and used NumPy for Numerical analysis and had developed Wrapper in Python for instantiating multithreaded application Automated RabbitMQ cluster installations and configuration using Python Worked on AngularJS to create single page applications SPA using its features like routers Controllers Services Directives Developed web applications and RESTful web services and APIs using Python Django and PHP Automated AWS S3 data upload download using Python scripts and had created database objects like Stored Procedures Tables Views Sequences Cursors Packages and Triggers Developed web GUI involving HTML NodeJS JavaScript under MVC architecture and had developed backend of the application with Python Django Oracle DB Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Worked on loading data from excel into Oracle Table using external tables Written complex SQLs using joins sub queries and correlated sub queries in Oracle to generate business reports accordingly Installation and setting up PythonDjangoMySQL in AWS and EC2 cloud platform Managed Ubuntu Linux and Windows virtual servers on AWS EC2 using OpenSource Chef Server Build scripts on AWS cloud for scheduling EC2 auto scaling load balancer with python sdk Worked on AWS cloud watch for monitoring the application infrastructure and used AWS email services for notifying Migrated applications from internal data center to AWS Skilled in using collections in Python for manipulating and looping through different user defined objects Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Developed entire frontend and backend modules using Python on Django Web Framework Used Django for framework for accessing various consumer Data from various sources Designed and managed API system deployment using fast http server and Amazon AWS architecture Python Developer Cardinal Health Dublin OH November 2013 to December 2014 Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Involved in the design development and testing phases of application using AGILE methodology Maintained databases using Python and developed Python based API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on development of SQL and stored procedures trigger and function on MYSQL Migrated ETL processes from RDBMS to Hive to test the easy data manipulation Developed server based web traffic statistical analysis tool using Flask Pandas Used Python and Django creating graphics XML processing of documents data exchange and business logic implementation between servers Created RESTful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Developed rich UI web application using javascript libraries like JQuery UI data grid Jscolor high charts Used MySQL as backend database and MySQL dB of python as database connector to interact with MySQL server Developed applications using MongoDB Redis and MySQL and was also involved in writing application level code to interact with APIs Web Services using JSON Developed entire frontend and backend modules using Python on Django Web Framework and had used MVC architecture for developing the application Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Involved use cases class diagrams activity diagrams and collaboration diagrams in UML Python Developer Wipro IN August 2012 to October 2013 Responsibilities Understood the several Processor components and analyzed the data in design database and had maintained the data with various levels of access privileges Coordinated with the design team members to provide the data in required format and had collected the several usage models and functions from the team members Developed and maintained of the tool that abstracts the information for the user and had developed XMLs for several components which maintains data for several registers Developed data structures xml parsing using Python for extracting useful data from the design data base Used advance features like pickleunpickle in python for sharing the information across the applications Represented the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Developed Python APIs and harassers that works both in Linux and windows and maintaining them using the revision control SVN Developed packages to move large amount of data to report database using partition exchange data loading using oracle SQL Loader scripts to load data and also loaded data from a single flat file to multiple tables Extensively worked on Database using MySQL Strong backend designing and written extensive backend code on the serverside using PLSQL including packaged procedures functions and SQLPLUS Developed API using Hibernate to interact with the MySQL database also created distributed MySQL coherence domains configuration and system design based on oracle coherence Produced SQL queries to provide data as requested by clients from MySQL database Was Involved in optimizing MySQL queries figuring out fast and efficient ways for them Used Oracle Migration Workbench to migrate MySQL database to Oracle Database Created SQL Scripts for data loads and Upgrades for data migrations and data validations Used Spring Core Annotations for Dependency Injection Created REST web services using Spring for UI to interface with backend Called REST web services through AngularJS services to get JSON Object and modified the response object to display in UI Used the REST Templates in the spring services to call the REST web services Consumed SOAP and Restful web services for communicating with other applications Used JSP HTML CSS and JavaScript for content layout and presentation Education Bachelors in Computer Science in Computer Science Gujarat Technological University 2012",
    "unique_id": "560e44fc-6914-4dc0-bc2a-b43de989aa79"
}