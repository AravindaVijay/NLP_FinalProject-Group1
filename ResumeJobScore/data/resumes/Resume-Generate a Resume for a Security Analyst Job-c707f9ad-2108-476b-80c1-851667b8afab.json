{
    "clean_data": "Java J2EE Developer span lJavaspan J2EE span lDeveloperspan Java J2EE Developer Java SD 8 years of experience in working with the web based applications hands on experience in the analysis design patterns development client and server applications implementing and testing with the use of Java and Core Java Experienced in all phases of Software development life cycle SDLC including analysis design coding and testing expertise in integration using J2EE architecture Have very strong interpersonal skills and the ability to work independently and with the group can learn quickly and easily adaptable to the working environment Authorized to work in the US for any employer Work Experience Java J2EE Developer Harris Corporation Melbourne FL November 2016 to Present Responsibilities Actively involved in software development life cycle starting from requirements gathering and performing Object Oriented Analysis Followed Agile SCRUM methodology and used Test Driven Development TDD Experience working with RSpec and Cucumber in a TDD and BDD test driven environment Involved in group meetings with Managers Team Members in designing implementing and testing Involved in writing UNIX Shell and Perl scripts for automation of deployments to Application server Used SOAPUI for the functional testing and inspection and invocation of Spring based Web Services Designed and Developed the Automation Testing Framework using Java Selenium Web Driver and TestNG Automation Framework Automated test cases using Selenium Involved in automation infrastructure development using selenium Designed and implemented Product search Java Spring boot service to fetch the data from Elastic help of Elastic native queries Used Microservices architecture with Spring Boot based service through REST Involved actively performance tunings in Java spring boot layer elastic side and production issues Used SOAPUI for the functional testing and inspection and invocation of spring based Web Services Did performance and load testing by using JMeter Involved in testing and quality assurance Setup JMeter for analyzing and measuring performance on web services Writing Scala classes to interact with the database Deploy and manage applications to Tomcat servers Deploy and manage applications on JBOSSTomcat J2EE server Managed the codebase using GIT Worked with Java Transaction Management to work on multiple databases Developed user interface using JSF HTML5 AngularJS jQuery and performed clientside validations using Java Script AJAX and CSS Involved in running Hadoop jobs for processing millions of records of text data Identified usability and develop functional and smooth easytooperate and eyecatching web applications using EXT JS Angular JS and react JS Involved in creating a reusable component using React JS for DOM manipulation Extensively used Core Java such as MultiThreading Exceptions and Collections Implemented wizard using Responsive Web Design Migrating application to AWS Platform Use Amazon Cloud Watch metrics to monitor the health and utilization of AWS resources Design applications on AWS taking advantage of disaster recovery design guidelines Application deployment and data migration on AWS Used Scala for coding the components in Play and Akka Worked on handling all the requests to the systems using Play framework MVC framework Developed shell scripts python scripts to check the health of Hadoop Daemons and schedule jobs Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Wrote Python scripts to parse XML documents and load the data in database Built main applications in Python Django leveraging technologies such as Tasty pie Angularjs Backbonejs and EmberJS Implementation design of bean orchestration using Apache Camel Developed Restful Web Services using Spring Boot and configured Cucumber as testing tool Used Design Patterns like Singleton Factory Session Facade and DAO Handled HP Fortify issues Sonar PMD Worked on Single nodeMulticluster setup using technology NoSQL and MongoDB Update the data from PostgreSQL database automatically by the time detective function Implemented Model View Controller MVC architecture Using Spring framework at the Web tier level to isolate each layer of the application to avoid the complexity of integration and ease of maintenance Developed Form Beans and Action Classes to model views and clientside functionality Built centralized logging to enable better debugging using Elastic Search Log stash and Kibana Efficiently handled periodic exporting of SQL data into Elastic search Experience in implementing J2EE Design Patterns like MVC Session Facade DAO and Singleton Used Maven to build test and deploying purposes Used clear case version control for source code Involved in debugging the application modules Deployed application using AWS services Used Log4j for logging and debugging and used JUnit extensively for testing Used Web Sphere Application Server for deploying various components of application Environment Java J2EE CICD Spring JSF Prime faces 32 Web Services Microservices Restful SoapUI Cucumber Apache CAMEL Tomcat JMeter JUnit JBPM DROOLS cloud Hadoop IBM Web Sphere App Server AWS Elastic searchNoSQL Scala IBM Clear case IBM Clear Quest MongoDB HTML5 PYTHON CSS Perl512 IBM RAD JavaScript Bootstrap jQuery AngularJS ReactJS Maven AJAX XML XSLT Java Beans Responsive Web Design UML Design Patterns log4j Agile Methodology Full Stack Java Developer Landstar System Jacksonville FL January 2016 to September 2016 Roles Responsibilities Involved in Requirements gathering Analysis Design Development and Testing of application developed using AGILE SCRUM methodology Architected designed and implemented a SPA Single Page Application in Angular JS which consume JSON from a Spring MVC using Spring Security to secure the Application Implemented nested views and routing using Angular UI Router as per the requirement GUI was developed using JSP HTML and Angular JS and created reusable components in Angular JS using Custom Directives Filters Services and Partials Exposed RESTful web services using JAXRS Implemented Angular promises to handle asynchronous communication with our Restful API for various requirements Developed pages using Angular JS directives expressions routing capabilities for bookmarking filters validations and Angular UI components such as grid buttons carousels date pickers modal dialogs and other input components Used Angular JS Routing for navigation between nested HTML views in the application and created Angular Js custom directives that were used along with HTML elements for DOM manipulation Performed unit testing using Karma Jasmine at Server side and Mocha in client side following test driven development TDD Mainly involved in development and maintenance of the website using Python HTML5 CSS AJAX JQuery DOJO JavaScript Angular JS Involved in the preparation of use case sequence diagrams class diagrams activity diagrams etc using Rational Rose Involved in developing reusable core libraries using core java Classes and Interfaces Used Express JS to route different endpoints made RESTful WEB SERVIVES to manipulate data in MySQL Worked with Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Created ant build files to create the WAR files and involved in development of the system using the Spring MVC framework Involved in development of Hibernate objects in order to persist data into the database Responsible in writing SQL scripts and creating backend database table for complex business operations Participated in consuming webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Developed queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Worked on Mongo DB concepts such as locking transactions indexes sharing replication schema design Used Angular JS Routing for navigation between nested HTML views in the application and created Angular Js custom directives that were used along with HTML elements for DOM manipulation Used Log4j API for logging in development testing and production environments configured to send email notifications Implemented version controlling using GIT and used Jenkins for continuous integration Configure REST controllers view resolver components and implemented transaction management using Spring declarative transaction management with Spring AOP concepts Wrote build deployment scripts using Maven on UNIX environment and integrated using Jenkins Used GIT for version control and used eclipse as the IDE for developing the application Used Rational Clear Quest for defect fixing Involved in guiding mentoring new contractors to understand the application Coordinated with QA lead for development of test plan TDD test cases test code and actual testing responsible for defects allocation and resolution of those defects and used selenium Environment J2EE JDK HTML CSS Ajax Angular UI JQuery Express Js JavaScript AngularJS Nodejs Bootstrap Spring Hibernate PLSQL AWS Web Services SOAP JMS RESTful Multithreading WebSphere 8 Apache Maven MongoDB JMS UI Developer ATT Middletown NJ June 2014 to December 2015 Roles Responsibilities Worked on an Agile Scrum Development Team to deliver regular updates to business team and project managers Used HTML CSS and JavaScript for designing web application layout and form Worked on local Storage to store retrieve insensitive user data during transition between the different pages Involved in designing the web pages using HTML 5 CSS3 JavaScript and Sencha EXTJS SASS Mongo DB Developed the application following MVVM architecture by developing models view models in the application Developed the views using various EXTJS layouts and used various components such as grids panels inputs etc Configured Ajax requests to load the data from the server using EXT AJAX and took part in testing the application Responsible for refactoring existing jQueryAjax frontend web application into EXTJS Configured Sencha CMD to compile build and create production ready code for the application deployment Used Web Developer tools Firebug and IE developer toolbar for debugging and to check the browser compatibility and Responsible in implementing CRUD operation using Spring Jersey based JAXRS implementation Developed Spring Data Mongo repositories for performing data retrievals from Mongo db Performed Java Classes to Mongo  collection and document mappings using Spring Data Configure and monitor numerous MongoDB and NoSQL instances MongoDB Schema Design using DB Ref Manual Ref Embedded Data Model Design Performed end to end testing using Selenium web driver Jbehave and Testing Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon web Services AWS Developed scripts for build deployment maintenance and related tasks using Jenkins Docker and Maven Used GitHub as a version control and JIRA for tracking bugs Took part in setting up builds and deployments using Teamcity Environment HTML5 CSS3 JavaScript Sencha EXTJS 5 MongoDB Agile SASS Firebug REST web service Spring Web Matrix HP Quality Center AWS Jenkins Docker Maven GitHub Jira Team City Sr JavaJ2EE Developer American Family Insurance Madison WI January 2013 to December 2014 Roles Responsibilities Involved in various phases of Software Development Life cycle SDLC of the application like requirement gathering Design Analysis and code development using Agile Scrum methodology Developed Object diagrams Class Diagrams and Sequence diagrams using UML Used HTML JSPs JavaScript CSS as a front end GUI with middle tier framework as Hibernate using HQL and Struts using MVC framework Traded data with web server using AJAX without reloading the web page and used JDBC to manipulate the data on the System database Server Developed custom tags JSTL to support custom user interfaces Created Stateless and Stateful session beans for accessing and mutating Entity beans and used JMS to communicate between the components and configured on the server Designed SOA implementations by Using Web ServicesWSDL UDDI and SOAP for getting credit card information from third party vendors Designed and implemented XML parsing for XML order conformations used JSF framework in developing user interfaces using JSF UI components validator Events and listeners Used DOM for parsing the XML XSLT Document and used JAXB parser for parsing the valid XML files Created Managed bean used to instantiate backing beans used in a JSF application and stores them in a Scope Designed various tables required for the project in Oracle database and used the Stored Procedures in the application Developing in built traditional java web application using JSF and RICHFACES and created database pool multipool data source and mapped them to roles Framework leverages JSF features like Event handling Validation mechanisms and state management Have written PLSQL stored procedures and involved in performance tuning of complex queries Monitored the error logs using Log4j and fixed the problems and used JNDI to read the details of the login users Used MultiThreading to overcome the errors in the process of transactions and used JUnit to do unit testing for the modules developed Developed the different components of the application such as JSPs Servlets and DAO and used build ANT scripts and deployed the application on Web sphere Application Server Environment Java16 JDBC Servlets 25 J2EE JSP JSF 20 JavaScript Rich faces Hibernate 32 Struts 20 DAO CSS HTML XML AJAX DOM JUnit JTA ANT JMS PLSQL Apache Axis SOA MVC Web Services IBM WebSphere 7 Oracle 10g log4j JNDI Eclipse J2EE Java Developer Arvind Mills IN June 2009 to November 2012 Roles Responsibilities Performed analysis for the client requirements based on the developed detailed design documents Involved in analysis design and development of project and implemented OOPS concepts Involved in designing the user interfaces using JSP and used the Spring MVC framework for developing the web applications Implemented Spring for cross cutting concerns and IOC pattern and also configured Hibernate 20 for the application Designed application with HTML JSP AjaxJQuery Struts Taglibraries Designed custom JSP tags for rolebased sorting and filtering Used Hibernate in data access layer to access and update information in the database and used Hibernate Query Language HQL to query the database for complex data Developed serverside services using Java multithreading Struts MVC Java Springs Web Services SOAP AXIS Configured hibernate with spring and used Spring JDBC while dealing with the database Involved in using web services WSDL and SOAP for getting credit card information from third party and implemented Business processes like user authentication transfer of services Used Soap UI for load testing the Web services and involved in creation of various DOA Data Access Objects Deployed the application on to Web sphere application server Used AJAX4 JSF components for AJAX functionality in UI screens and Used JMS JAVA Messaging Service for reliable and asynchronous exchange of important information Used XML parser APIs such as JAXP and JAXB in the web services request response data marshalling as well as unmarshalling process Used log4j API for logging application flow and debugging Used CVS for version control across common source code used by developers and Developed JUnit test cases for all the developed modules Used Tortoise CVS as a code repository to manage project code and used JIRA as a defect tracking system for the application Responsible for application setup and configuration in the development QA and Production environment and preparation of the timely builds using ANT releases and deployment on Tomcat Server for web applications and web portals respectively Extensively involved team player in troubleshooting bug fixes change requests and enhancements for the webservice Environment JDK 15 Hibernate 20 Struts Spring 20 JSP Servlets JMS XML SOAP WSDL JDBC JavaScript UML HTML JNDI CVS log4j Web sphere Application server Oracle 10g Rational Rose Eclipse Education B Tech JNTU Hyderabad Hyderabad Telangana Skills AJAX 8 years Database 8 years Java 8 years JavaScript 8 years user interface 8 years Java J2Ee Rest Spring Soap Hibernate Angular J2Ee Core Java JEE Angularjs AWS MVC JSP Additional Information TECHNICAL PROFICIENCY Category ExpertiseTools Java Technologies JDK 15161718 Servlets 2530 JSP 1220 HTML EJB 2030 JDBC 20 JNDI ANT JMS Swing XMLDTD Schema Java Beans JAXP DOMSAXWeb services SOAPWSDL AJAX JQuery framework Frameworks Struts 1220 JSF 1220 Spring 3041 Hibernate 2030 Development Tools Eclipse Ant Maven Toad 85 SQL Developer Web logic Workshop 81 My Eclipse 8 WebSphere Studio Application Developer 51 RAD 60 Log4j JUnit WebSphere Message Broker Toolkit WebSphere MQ JIRA Web Application Servers IBM Web sphere Application Server 81 Web logic 10x Tomcat 70 JBoss 7 Apache Front End UI AngularJS HTML 4015 XML JavaScript JQuery CSS 23 Bootstrap AJAX SASS Selenium Cucumber Database Oracle 10g9x8x DB2 SQL Server My SQL Mongo DB AWS Operating System Windows Linux UbuntuUnix Version Controls CVS SVN GIT",
    "entities": [
        "Used Hibernate",
        "Design Analysis",
        "AJAX",
        "Oracle 10g",
        "IDE",
        "Test Driven Development TDD",
        "Angular UI Router",
        "GUI",
        "Object Oriented Analysis Followed Agile",
        "SQL Developer",
        "Maven AJAX XML",
        "Created Stateless",
        "UNIX",
        "JMS",
        "EXTJS",
        "HP Fortify",
        "Developed Form Beans and Action Classes",
        "IBM",
        "Spring Jersey",
        "CVS",
        "IE",
        "Hadoop Daemons",
        "Hadoop",
        "DOA Data Access Objects",
        "XML",
        "SOAP",
        "Telangana",
        "Amazon web Services AWS Developed",
        "MySQL Worked",
        "JUnit",
        "JSF HTML5",
        "TestNG Automation Framework Automated",
        "MVC JSP Additional Information TECHNICAL PROFICIENCY",
        "Jbehave",
        "SPA Single Page Application",
        "Developed",
        "DAO",
        "Mongo",
        "Rational Rose Involved",
        "Teamcity Environment HTML5",
        "UML",
        "Servlets",
        "Sequence",
        "Used Web Sphere Application Server",
        "Monitored",
        "SOA",
        "AGILE",
        "Spring Security",
        "EXT AJAX",
        "JNDI",
        "Update",
        "JSP",
        "RICHFACES",
        "Angular UI",
        "IOC",
        "DOM",
        "Application Implemented",
        "Nodejs Bootstrap Spring Hibernate PLSQL AWS Web Services SOAP",
        "Angular JS",
        "EXT",
        "MVC",
        "GIT",
        "IBM Clear",
        "Present Responsibilities Actively",
        "Developed Spring Data Mongo",
        "JavaScript Rich",
        "RSpec",
        "Web Services",
        "US",
        "QA",
        "JS Involved",
        "BDD",
        "AWS",
        "Perl",
        "Server",
        "Oracle",
        "WebSphere 7 Oracle",
        "Singleton",
        "JSF",
        "React JS",
        "JSF UI",
        "Software Development Life",
        "Tomcat Server",
        "SQL",
        "GitHub",
        "JAXRS",
        "Created Managed",
        "Used Rational Clear Quest",
        "WebSphere Studio Application Developer",
        "Responsive Web Design Migrating",
        "SQS",
        "UNIX Shell",
        "CRUD",
        "Hibernate Query Language",
        "FL",
        "Spring AOP",
        "Maven",
        "Djangos",
        "Web Services Designed",
        "JavaScript",
        "ANT",
        "UI",
        "Selenium",
        "Interfaces Used Express",
        "REST Involved",
        "Custom Directives Filters Services",
        "Java Transaction Management",
        "SVN",
        "CSS",
        "jQuery",
        "CSS Involved",
        "MultiThreading Exceptions",
        "TDD",
        "NoSQL",
        "Application",
        "JAXRS Implemented Angular",
        "GitHub Jira Team City Sr JavaJ2EE Developer American Family Insurance Madison WI",
        "IBM Clear Quest",
        "Mongo DB",
        "Python HTML5 CSS AJAX",
        "Managers Team Members"
    ],
    "experience": "Experience Java J2EE Developer Harris Corporation Melbourne FL November 2016 to Present Responsibilities Actively involved in software development life cycle starting from requirements gathering and performing Object Oriented Analysis Followed Agile SCRUM methodology and used Test Driven Development TDD Experience working with RSpec and Cucumber in a TDD and BDD test driven environment Involved in group meetings with Managers Team Members in designing implementing and testing Involved in writing UNIX Shell and Perl scripts for automation of deployments to Application server Used SOAPUI for the functional testing and inspection and invocation of Spring based Web Services Designed and Developed the Automation Testing Framework using Java Selenium Web Driver and TestNG Automation Framework Automated test cases using Selenium Involved in automation infrastructure development using selenium Designed and implemented Product search Java Spring boot service to fetch the data from Elastic help of Elastic native queries Used Microservices architecture with Spring Boot based service through REST Involved actively performance tunings in Java spring boot layer elastic side and production issues Used SOAPUI for the functional testing and inspection and invocation of spring based Web Services Did performance and load testing by using JMeter Involved in testing and quality assurance Setup JMeter for analyzing and measuring performance on web services Writing Scala classes to interact with the database Deploy and manage applications to Tomcat servers Deploy and manage applications on JBOSSTomcat J2EE server Managed the codebase using GIT Worked with Java Transaction Management to work on multiple databases Developed user interface using JSF HTML5 AngularJS jQuery and performed clientside validations using Java Script AJAX and CSS Involved in running Hadoop jobs for processing millions of records of text data Identified usability and develop functional and smooth easytooperate and eyecatching web applications using EXT JS Angular JS and react JS Involved in creating a reusable component using React JS for DOM manipulation Extensively used Core Java such as MultiThreading Exceptions and Collections Implemented wizard using Responsive Web Design Migrating application to AWS Platform Use Amazon Cloud Watch metrics to monitor the health and utilization of AWS resources Design applications on AWS taking advantage of disaster recovery design guidelines Application deployment and data migration on AWS Used Scala for coding the components in Play and Akka Worked on handling all the requests to the systems using Play framework MVC framework Developed shell scripts python scripts to check the health of Hadoop Daemons and schedule jobs Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Wrote Python scripts to parse XML documents and load the data in database Built main applications in Python Django leveraging technologies such as Tasty pie Angularjs Backbonejs and EmberJS Implementation design of bean orchestration using Apache Camel Developed Restful Web Services using Spring Boot and configured Cucumber as testing tool Used Design Patterns like Singleton Factory Session Facade and DAO Handled HP Fortify issues Sonar PMD Worked on Single nodeMulticluster setup using technology NoSQL and MongoDB Update the data from PostgreSQL database automatically by the time detective function Implemented Model View Controller MVC architecture Using Spring framework at the Web tier level to isolate each layer of the application to avoid the complexity of integration and ease of maintenance Developed Form Beans and Action Classes to model views and clientside functionality Built centralized logging to enable better debugging using Elastic Search Log stash and Kibana Efficiently handled periodic exporting of SQL data into Elastic search Experience in implementing J2EE Design Patterns like MVC Session Facade DAO and Singleton Used Maven to build test and deploying purposes Used clear case version control for source code Involved in debugging the application modules Deployed application using AWS services Used Log4j for logging and debugging and used JUnit extensively for testing Used Web Sphere Application Server for deploying various components of application Environment Java J2EE CICD Spring JSF Prime faces 32 Web Services Microservices Restful SoapUI Cucumber Apache CAMEL Tomcat JMeter JUnit JBPM DROOLS cloud Hadoop IBM Web Sphere App Server AWS Elastic searchNoSQL Scala IBM Clear case IBM Clear Quest MongoDB HTML5 PYTHON CSS Perl512 IBM RAD JavaScript Bootstrap jQuery AngularJS ReactJS Maven AJAX XML XSLT Java Beans Responsive Web Design UML Design Patterns log4j Agile Methodology Full Stack Java Developer Landstar System Jacksonville FL January 2016 to September 2016 Roles Responsibilities Involved in Requirements gathering Analysis Design Development and Testing of application developed using AGILE SCRUM methodology Architected designed and implemented a SPA Single Page Application in Angular JS which consume JSON from a Spring MVC using Spring Security to secure the Application Implemented nested views and routing using Angular UI Router as per the requirement GUI was developed using JSP HTML and Angular JS and created reusable components in Angular JS using Custom Directives Filters Services and Partials Exposed RESTful web services using JAXRS Implemented Angular promises to handle asynchronous communication with our Restful API for various requirements Developed pages using Angular JS directives expressions routing capabilities for bookmarking filters validations and Angular UI components such as grid buttons carousels date pickers modal dialogs and other input components Used Angular JS Routing for navigation between nested HTML views in the application and created Angular Js custom directives that were used along with HTML elements for DOM manipulation Performed unit testing using Karma Jasmine at Server side and Mocha in client side following test driven development TDD Mainly involved in development and maintenance of the website using Python HTML5 CSS AJAX JQuery DOJO JavaScript Angular JS Involved in the preparation of use case sequence diagrams class diagrams activity diagrams etc using Rational Rose Involved in developing reusable core libraries using core java Classes and Interfaces Used Express JS to route different endpoints made RESTful WEB SERVIVES to manipulate data in MySQL Worked with Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Created ant build files to create the WAR files and involved in development of the system using the Spring MVC framework Involved in development of Hibernate objects in order to persist data into the database Responsible in writing SQL scripts and creating backend database table for complex business operations Participated in consuming webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Developed queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Worked on Mongo DB concepts such as locking transactions indexes sharing replication schema design Used Angular JS Routing for navigation between nested HTML views in the application and created Angular Js custom directives that were used along with HTML elements for DOM manipulation Used Log4j API for logging in development testing and production environments configured to send email notifications Implemented version controlling using GIT and used Jenkins for continuous integration Configure REST controllers view resolver components and implemented transaction management using Spring declarative transaction management with Spring AOP concepts Wrote build deployment scripts using Maven on UNIX environment and integrated using Jenkins Used GIT for version control and used eclipse as the IDE for developing the application Used Rational Clear Quest for defect fixing Involved in guiding mentoring new contractors to understand the application Coordinated with QA lead for development of test plan TDD test cases test code and actual testing responsible for defects allocation and resolution of those defects and used selenium Environment J2EE JDK HTML CSS Ajax Angular UI JQuery Express Js JavaScript AngularJS Nodejs Bootstrap Spring Hibernate PLSQL AWS Web Services SOAP JMS RESTful Multithreading WebSphere 8 Apache Maven MongoDB JMS UI Developer ATT Middletown NJ June 2014 to December 2015 Roles Responsibilities Worked on an Agile Scrum Development Team to deliver regular updates to business team and project managers Used HTML CSS and JavaScript for designing web application layout and form Worked on local Storage to store retrieve insensitive user data during transition between the different pages Involved in designing the web pages using HTML 5 CSS3 JavaScript and Sencha EXTJS SASS Mongo DB Developed the application following MVVM architecture by developing models view models in the application Developed the views using various EXTJS layouts and used various components such as grids panels inputs etc Configured Ajax requests to load the data from the server using EXT AJAX and took part in testing the application Responsible for refactoring existing jQueryAjax frontend web application into EXTJS Configured Sencha CMD to compile build and create production ready code for the application deployment Used Web Developer tools Firebug and IE developer toolbar for debugging and to check the browser compatibility and Responsible in implementing CRUD operation using Spring Jersey based JAXRS implementation Developed Spring Data Mongo repositories for performing data retrievals from Mongo db Performed Java Classes to Mongo   collection and document mappings using Spring Data Configure and monitor numerous MongoDB and NoSQL instances MongoDB Schema Design using DB Ref Manual Ref Embedded Data Model Design Performed end to end testing using Selenium web driver Jbehave and Testing Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon web Services AWS Developed scripts for build deployment maintenance and related tasks using Jenkins Docker and Maven Used GitHub as a version control and JIRA for tracking bugs Took part in setting up builds and deployments using Teamcity Environment HTML5 CSS3 JavaScript Sencha EXTJS 5 MongoDB Agile SASS Firebug REST web service Spring Web Matrix HP Quality Center AWS Jenkins Docker Maven GitHub Jira Team City Sr JavaJ2EE Developer American Family Insurance Madison WI January 2013 to December 2014 Roles Responsibilities Involved in various phases of Software Development Life cycle SDLC of the application like requirement gathering Design Analysis and code development using Agile Scrum methodology Developed Object diagrams Class Diagrams and Sequence diagrams using UML Used HTML JSPs JavaScript CSS as a front end GUI with middle tier framework as Hibernate using HQL and Struts using MVC framework Traded data with web server using AJAX without reloading the web page and used JDBC to manipulate the data on the System database Server Developed custom tags JSTL to support custom user interfaces Created Stateless and Stateful session beans for accessing and mutating Entity beans and used JMS to communicate between the components and configured on the server Designed SOA implementations by Using Web ServicesWSDL UDDI and SOAP for getting credit card information from third party vendors Designed and implemented XML parsing for XML order conformations used JSF framework in developing user interfaces using JSF UI components validator Events and listeners Used DOM for parsing the XML XSLT Document and used JAXB parser for parsing the valid XML files Created Managed bean used to instantiate backing beans used in a JSF application and stores them in a Scope Designed various tables required for the project in Oracle database and used the Stored Procedures in the application Developing in built traditional java web application using JSF and RICHFACES and created database pool multipool data source and mapped them to roles Framework leverages JSF features like Event handling Validation mechanisms and state management Have written PLSQL stored procedures and involved in performance tuning of complex queries Monitored the error logs using Log4j and fixed the problems and used JNDI to read the details of the login users Used MultiThreading to overcome the errors in the process of transactions and used JUnit to do unit testing for the modules developed Developed the different components of the application such as JSPs Servlets and DAO and used build ANT scripts and deployed the application on Web sphere Application Server Environment Java16 JDBC Servlets 25 J2EE JSP JSF 20 JavaScript Rich faces Hibernate 32 Struts 20 DAO CSS HTML XML AJAX DOM JUnit JTA ANT JMS PLSQL Apache Axis SOA MVC Web Services IBM WebSphere 7 Oracle 10 g log4j JNDI Eclipse J2EE Java Developer Arvind Mills IN June 2009 to November 2012 Roles Responsibilities Performed analysis for the client requirements based on the developed detailed design documents Involved in analysis design and development of project and implemented OOPS concepts Involved in designing the user interfaces using JSP and used the Spring MVC framework for developing the web applications Implemented Spring for cross cutting concerns and IOC pattern and also configured Hibernate 20 for the application Designed application with HTML JSP AjaxJQuery Struts Taglibraries Designed custom JSP tags for rolebased sorting and filtering Used Hibernate in data access layer to access and update information in the database and used Hibernate Query Language HQL to query the database for complex data Developed serverside services using Java multithreading Struts MVC Java Springs Web Services SOAP AXIS Configured hibernate with spring and used Spring JDBC while dealing with the database Involved in using web services WSDL and SOAP for getting credit card information from third party and implemented Business processes like user authentication transfer of services Used Soap UI for load testing the Web services and involved in creation of various DOA Data Access Objects Deployed the application on to Web sphere application server Used AJAX4 JSF components for AJAX functionality in UI screens and Used JMS JAVA Messaging Service for reliable and asynchronous exchange of important information Used XML parser APIs such as JAXP and JAXB in the web services request response data marshalling as well as unmarshalling process Used log4j API for logging application flow and debugging Used CVS for version control across common source code used by developers and Developed JUnit test cases for all the developed modules Used Tortoise CVS as a code repository to manage project code and used JIRA as a defect tracking system for the application Responsible for application setup and configuration in the development QA and Production environment and preparation of the timely builds using ANT releases and deployment on Tomcat Server for web applications and web portals respectively Extensively involved team player in troubleshooting bug fixes change requests and enhancements for the webservice Environment JDK 15 Hibernate 20 Struts Spring 20 JSP Servlets JMS XML SOAP WSDL JDBC JavaScript UML HTML JNDI CVS log4j Web sphere Application server Oracle 10 g Rational Rose Eclipse Education B Tech JNTU Hyderabad Hyderabad Telangana Skills AJAX 8 years Database 8 years Java 8 years JavaScript 8 years user interface 8 years Java J2Ee Rest Spring Soap Hibernate Angular J2Ee Core Java JEE Angularjs AWS MVC JSP Additional Information TECHNICAL PROFICIENCY Category ExpertiseTools Java Technologies JDK 15161718 Servlets 2530 JSP 1220 HTML EJB 2030 JDBC 20 JNDI ANT JMS Swing XMLDTD Schema Java Beans JAXP DOMSAXWeb services SOAPWSDL AJAX JQuery framework Frameworks Struts 1220 JSF 1220 Spring 3041 Hibernate 2030 Development Tools Eclipse Ant Maven Toad 85 SQL Developer Web logic Workshop 81 My Eclipse 8 WebSphere Studio Application Developer 51 RAD 60 Log4j JUnit WebSphere Message Broker Toolkit WebSphere MQ JIRA Web Application Servers IBM Web sphere Application Server 81 Web logic 10x Tomcat 70 JBoss 7 Apache Front End UI AngularJS HTML 4015 XML JavaScript JQuery CSS 23 Bootstrap AJAX SASS Selenium Cucumber Database Oracle 10g9x8x DB2 SQL Server My SQL Mongo DB AWS Operating System Windows Linux UbuntuUnix Version Controls CVS SVN GIT",
    "extracted_keywords": [
        "Java",
        "J2EE",
        "Developer",
        "lJavaspan",
        "J2EE",
        "span",
        "lDeveloperspan",
        "Java",
        "J2EE",
        "Developer",
        "Java",
        "SD",
        "years",
        "experience",
        "web",
        "applications",
        "hands",
        "experience",
        "analysis",
        "design",
        "patterns",
        "development",
        "client",
        "server",
        "applications",
        "use",
        "Java",
        "Core",
        "Java",
        "phases",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "analysis",
        "design",
        "testing",
        "expertise",
        "integration",
        "J2EE",
        "architecture",
        "skills",
        "ability",
        "group",
        "environment",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "J2EE",
        "Developer",
        "Harris",
        "Corporation",
        "Melbourne",
        "FL",
        "November",
        "Present",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "requirements",
        "Object",
        "Oriented",
        "Analysis",
        "methodology",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Experience",
        "RSpec",
        "Cucumber",
        "TDD",
        "BDD",
        "test",
        "environment",
        "group",
        "meetings",
        "Managers",
        "Team",
        "Members",
        "testing",
        "UNIX",
        "Shell",
        "Perl",
        "scripts",
        "automation",
        "deployments",
        "Application",
        "server",
        "SOAPUI",
        "testing",
        "inspection",
        "invocation",
        "Spring",
        "Web",
        "Services",
        "Automation",
        "Testing",
        "Framework",
        "Java",
        "Selenium",
        "Web",
        "Driver",
        "TestNG",
        "Automation",
        "Framework",
        "test",
        "cases",
        "Selenium",
        "automation",
        "infrastructure",
        "development",
        "selenium",
        "Product",
        "search",
        "Java",
        "Spring",
        "boot",
        "service",
        "data",
        "help",
        "queries",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "service",
        "REST",
        "tunings",
        "Java",
        "spring",
        "boot",
        "layer",
        "side",
        "production",
        "issues",
        "SOAPUI",
        "testing",
        "inspection",
        "invocation",
        "spring",
        "Web",
        "Services",
        "performance",
        "load",
        "testing",
        "JMeter",
        "testing",
        "quality",
        "assurance",
        "Setup",
        "JMeter",
        "performance",
        "web",
        "services",
        "Scala",
        "classes",
        "database",
        "applications",
        "Tomcat",
        "servers",
        "applications",
        "JBOSSTomcat",
        "J2EE",
        "server",
        "codebase",
        "GIT",
        "Worked",
        "Java",
        "Transaction",
        "Management",
        "databases",
        "user",
        "interface",
        "JSF",
        "HTML5",
        "jQuery",
        "validations",
        "Java",
        "Script",
        "AJAX",
        "CSS",
        "Hadoop",
        "jobs",
        "millions",
        "records",
        "text",
        "data",
        "usability",
        "easytooperate",
        "web",
        "applications",
        "EXT",
        "JS",
        "Angular",
        "JS",
        "JS",
        "component",
        "React",
        "JS",
        "DOM",
        "manipulation",
        "Core",
        "Java",
        "MultiThreading",
        "Exceptions",
        "Collections",
        "wizard",
        "Responsive",
        "Web",
        "Design",
        "Migrating",
        "application",
        "AWS",
        "Platform",
        "Use",
        "Amazon",
        "Cloud",
        "Watch",
        "metrics",
        "health",
        "utilization",
        "AWS",
        "Design",
        "applications",
        "AWS",
        "advantage",
        "disaster",
        "recovery",
        "design",
        "guidelines",
        "Application",
        "deployment",
        "data",
        "migration",
        "AWS",
        "Scala",
        "components",
        "Play",
        "Akka",
        "requests",
        "systems",
        "Play",
        "framework",
        "MVC",
        "framework",
        "Developed",
        "shell",
        "scripts",
        "scripts",
        "health",
        "Hadoop",
        "Daemons",
        "schedule",
        "jobs",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "applications",
        "Python",
        "Django",
        "technologies",
        "Tasty",
        "pie",
        "Angularjs",
        "Backbonejs",
        "EmberJS",
        "Implementation",
        "design",
        "bean",
        "orchestration",
        "Apache",
        "Camel",
        "Developed",
        "Restful",
        "Web",
        "Services",
        "Spring",
        "Boot",
        "Cucumber",
        "testing",
        "tool",
        "Design",
        "Patterns",
        "Singleton",
        "Factory",
        "Session",
        "Facade",
        "DAO",
        "HP",
        "Fortify",
        "Sonar",
        "PMD",
        "nodeMulticluster",
        "setup",
        "technology",
        "NoSQL",
        "MongoDB",
        "data",
        "PostgreSQL",
        "database",
        "time",
        "detective",
        "function",
        "Model",
        "View",
        "Controller",
        "MVC",
        "architecture",
        "Spring",
        "framework",
        "Web",
        "tier",
        "level",
        "layer",
        "application",
        "complexity",
        "integration",
        "ease",
        "maintenance",
        "Form",
        "Beans",
        "Action",
        "Classes",
        "model",
        "views",
        "functionality",
        "logging",
        "debugging",
        "Elastic",
        "Search",
        "Log",
        "stash",
        "Kibana",
        "exporting",
        "SQL",
        "data",
        "search",
        "Experience",
        "J2EE",
        "Design",
        "Patterns",
        "MVC",
        "Session",
        "Facade",
        "DAO",
        "Singleton",
        "Maven",
        "test",
        "purposes",
        "case",
        "version",
        "control",
        "source",
        "code",
        "application",
        "modules",
        "application",
        "AWS",
        "services",
        "Log4j",
        "JUnit",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "components",
        "application",
        "Environment",
        "Java",
        "J2EE",
        "CICD",
        "Spring",
        "JSF",
        "Prime",
        "Web",
        "Services",
        "Microservices",
        "Restful",
        "SoapUI",
        "Cucumber",
        "Apache",
        "CAMEL",
        "Tomcat",
        "JMeter",
        "JUnit",
        "JBPM",
        "DROOLS",
        "cloud",
        "Hadoop",
        "IBM",
        "Web",
        "Sphere",
        "App",
        "Server",
        "AWS",
        "searchNoSQL",
        "Scala",
        "IBM",
        "Clear",
        "case",
        "IBM",
        "Clear",
        "Quest",
        "MongoDB",
        "HTML5",
        "PYTHON",
        "CSS",
        "Perl512",
        "IBM",
        "RAD",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "ReactJS",
        "Maven",
        "AJAX",
        "XML",
        "XSLT",
        "Java",
        "Beans",
        "Responsive",
        "Web",
        "Design",
        "UML",
        "Design",
        "Patterns",
        "log4j",
        "Agile",
        "Methodology",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "Landstar",
        "System",
        "Jacksonville",
        "FL",
        "January",
        "September",
        "Roles",
        "Responsibilities",
        "Requirements",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "application",
        "AGILE",
        "SCRUM",
        "methodology",
        "SPA",
        "Single",
        "Page",
        "Application",
        "Angular",
        "JS",
        "JSON",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Application",
        "views",
        "Angular",
        "UI",
        "Router",
        "requirement",
        "GUI",
        "JSP",
        "HTML",
        "Angular",
        "JS",
        "components",
        "Angular",
        "JS",
        "Custom",
        "Directives",
        "Filters",
        "Services",
        "Partials",
        "web",
        "services",
        "JAXRS",
        "Angular",
        "promises",
        "communication",
        "API",
        "requirements",
        "pages",
        "Angular",
        "JS",
        "directives",
        "expressions",
        "capabilities",
        "filters",
        "validations",
        "Angular",
        "UI",
        "components",
        "grid",
        "buttons",
        "carousels",
        "date",
        "pickers",
        "dialogs",
        "input",
        "components",
        "JS",
        "Routing",
        "navigation",
        "HTML",
        "views",
        "application",
        "Angular",
        "Js",
        "custom",
        "directives",
        "HTML",
        "elements",
        "DOM",
        "manipulation",
        "Performed",
        "unit",
        "testing",
        "Karma",
        "Jasmine",
        "Server",
        "side",
        "Mocha",
        "client",
        "side",
        "test",
        "development",
        "TDD",
        "development",
        "maintenance",
        "website",
        "Python",
        "HTML5",
        "CSS",
        "AJAX",
        "JQuery",
        "DOJO",
        "JavaScript",
        "Angular",
        "JS",
        "preparation",
        "use",
        "case",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "activity",
        "diagrams",
        "Rational",
        "Rose",
        "core",
        "libraries",
        "core",
        "java",
        "Classes",
        "Interfaces",
        "Express",
        "JS",
        "endpoints",
        "WEB",
        "SERVIVES",
        "data",
        "MySQL",
        "Mongo",
        "DB",
        "concern",
        "loss",
        "data",
        "system",
        "failures",
        "read",
        "preferences",
        "Mongo",
        "DB",
        "replica",
        "build",
        "files",
        "WAR",
        "files",
        "development",
        "system",
        "Spring",
        "MVC",
        "framework",
        "development",
        "Hibernate",
        "order",
        "data",
        "database",
        "SQL",
        "scripts",
        "database",
        "table",
        "business",
        "operations",
        "webservices",
        "SOAP",
        "business",
        "application",
        "legacy",
        "applications",
        "applications",
        "queues",
        "AWS",
        "SQS",
        "JMS",
        "services",
        "events",
        "logic",
        "events",
        "Mongo",
        "DB",
        "concepts",
        "transactions",
        "indexes",
        "replication",
        "schema",
        "design",
        "JS",
        "Routing",
        "navigation",
        "HTML",
        "views",
        "application",
        "Angular",
        "Js",
        "custom",
        "directives",
        "HTML",
        "elements",
        "DOM",
        "manipulation",
        "Log4j",
        "API",
        "development",
        "testing",
        "production",
        "environments",
        "email",
        "notifications",
        "version",
        "GIT",
        "Jenkins",
        "integration",
        "Configure",
        "REST",
        "controllers",
        "resolver",
        "components",
        "transaction",
        "management",
        "Spring",
        "transaction",
        "management",
        "Spring",
        "AOP",
        "concepts",
        "Wrote",
        "deployment",
        "scripts",
        "Maven",
        "UNIX",
        "environment",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "eclipse",
        "IDE",
        "application",
        "Rational",
        "Clear",
        "Quest",
        "defect",
        "fixing",
        "contractors",
        "application",
        "QA",
        "lead",
        "development",
        "test",
        "plan",
        "TDD",
        "test",
        "cases",
        "code",
        "testing",
        "defects",
        "allocation",
        "resolution",
        "defects",
        "selenium",
        "Environment",
        "J2EE",
        "JDK",
        "HTML",
        "CSS",
        "Ajax",
        "Angular",
        "UI",
        "JQuery",
        "Express",
        "Js",
        "JavaScript",
        "Nodejs",
        "Bootstrap",
        "Spring",
        "Hibernate",
        "PLSQL",
        "AWS",
        "Web",
        "Services",
        "JMS",
        "Multithreading",
        "WebSphere",
        "Apache",
        "Maven",
        "MongoDB",
        "JMS",
        "UI",
        "Developer",
        "ATT",
        "Middletown",
        "NJ",
        "June",
        "December",
        "Roles",
        "Responsibilities",
        "Agile",
        "Scrum",
        "Development",
        "Team",
        "updates",
        "business",
        "team",
        "project",
        "managers",
        "HTML",
        "CSS",
        "JavaScript",
        "web",
        "application",
        "layout",
        "Storage",
        "user",
        "data",
        "transition",
        "pages",
        "web",
        "pages",
        "HTML",
        "CSS3",
        "JavaScript",
        "Sencha",
        "EXTJS",
        "SASS",
        "Mongo",
        "DB",
        "application",
        "MVVM",
        "architecture",
        "models",
        "models",
        "application",
        "views",
        "EXTJS",
        "layouts",
        "components",
        "grids",
        "panels",
        "requests",
        "data",
        "server",
        "EXT",
        "AJAX",
        "part",
        "application",
        "frontend",
        "web",
        "application",
        "EXTJS",
        "Configured",
        "Sencha",
        "CMD",
        "build",
        "production",
        "code",
        "application",
        "deployment",
        "Web",
        "Developer",
        "tools",
        "Firebug",
        "IE",
        "developer",
        "toolbar",
        "browser",
        "compatibility",
        "CRUD",
        "operation",
        "Spring",
        "Jersey",
        "JAXRS",
        "implementation",
        "Developed",
        "Spring",
        "Data",
        "Mongo",
        "repositories",
        "data",
        "retrievals",
        "Mongo",
        "Performed",
        "Java",
        "Classes",
        "Mongo",
        "collection",
        "document",
        "mappings",
        "Spring",
        "Data",
        "Configure",
        "MongoDB",
        "NoSQL",
        "MongoDB",
        "Schema",
        "Design",
        "DB",
        "Ref",
        "Manual",
        "Ref",
        "Embedded",
        "Data",
        "Model",
        "Design",
        "Performed",
        "end",
        "testing",
        "Selenium",
        "web",
        "driver",
        "Jbehave",
        "Testing",
        "serverside",
        "software",
        "modules",
        "user",
        "interface",
        "components",
        "Compute",
        "Cloud",
        "Amazon",
        "web",
        "Services",
        "AWS",
        "scripts",
        "build",
        "deployment",
        "maintenance",
        "tasks",
        "Jenkins",
        "Docker",
        "Maven",
        "GitHub",
        "version",
        "control",
        "JIRA",
        "tracking",
        "bugs",
        "part",
        "builds",
        "deployments",
        "Teamcity",
        "Environment",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Sencha",
        "Agile",
        "SASS",
        "Firebug",
        "REST",
        "web",
        "service",
        "Spring",
        "Web",
        "Matrix",
        "HP",
        "Quality",
        "Center",
        "AWS",
        "Jenkins",
        "Docker",
        "Maven",
        "GitHub",
        "Jira",
        "Team",
        "City",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "American",
        "Family",
        "Insurance",
        "Madison",
        "WI",
        "January",
        "December",
        "Roles",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "cycle",
        "SDLC",
        "application",
        "requirement",
        "Design",
        "Analysis",
        "code",
        "development",
        "Agile",
        "Scrum",
        "methodology",
        "Developed",
        "Object",
        "diagrams",
        "Class",
        "Diagrams",
        "Sequence",
        "diagrams",
        "UML",
        "HTML",
        "JavaScript",
        "CSS",
        "end",
        "GUI",
        "tier",
        "framework",
        "Hibernate",
        "HQL",
        "Struts",
        "MVC",
        "framework",
        "data",
        "web",
        "server",
        "AJAX",
        "web",
        "page",
        "JDBC",
        "data",
        "System",
        "database",
        "Server",
        "custom",
        "tags",
        "JSTL",
        "custom",
        "user",
        "interfaces",
        "Stateless",
        "session",
        "beans",
        "Entity",
        "beans",
        "JMS",
        "components",
        "server",
        "SOA",
        "implementations",
        "Web",
        "UDDI",
        "SOAP",
        "credit",
        "card",
        "information",
        "party",
        "vendors",
        "XML",
        "XML",
        "order",
        "conformations",
        "JSF",
        "framework",
        "user",
        "interfaces",
        "JSF",
        "UI",
        "components",
        "validator",
        "Events",
        "listeners",
        "DOM",
        "XML",
        "XSLT",
        "Document",
        "JAXB",
        "parser",
        "XML",
        "files",
        "Managed",
        "bean",
        "backing",
        "beans",
        "JSF",
        "application",
        "Scope",
        "tables",
        "project",
        "Oracle",
        "database",
        "Stored",
        "Procedures",
        "application",
        "web",
        "application",
        "JSF",
        "RICHFACES",
        "database",
        "pool",
        "multipool",
        "data",
        "source",
        "roles",
        "Framework",
        "JSF",
        "Event",
        "Validation",
        "mechanisms",
        "state",
        "management",
        "procedures",
        "performance",
        "tuning",
        "queries",
        "error",
        "logs",
        "Log4j",
        "problems",
        "JNDI",
        "details",
        "login",
        "users",
        "MultiThreading",
        "errors",
        "process",
        "transactions",
        "JUnit",
        "unit",
        "testing",
        "modules",
        "components",
        "application",
        "JSPs",
        "Servlets",
        "DAO",
        "ANT",
        "scripts",
        "application",
        "Web",
        "sphere",
        "Application",
        "Server",
        "Environment",
        "Java16",
        "JDBC",
        "Servlets",
        "J2EE",
        "JSP",
        "JSF",
        "JavaScript",
        "Rich",
        "Hibernate",
        "Struts",
        "DAO",
        "CSS",
        "HTML",
        "XML",
        "AJAX",
        "DOM",
        "JUnit",
        "JTA",
        "ANT",
        "JMS",
        "PLSQL",
        "Apache",
        "Axis",
        "SOA",
        "MVC",
        "Web",
        "Services",
        "IBM",
        "WebSphere",
        "Oracle",
        "g",
        "log4j",
        "JNDI",
        "Eclipse",
        "J2EE",
        "Java",
        "Developer",
        "Arvind",
        "Mills",
        "June",
        "November",
        "Roles",
        "Responsibilities",
        "analysis",
        "client",
        "requirements",
        "design",
        "documents",
        "analysis",
        "design",
        "development",
        "project",
        "concepts",
        "user",
        "interfaces",
        "JSP",
        "Spring",
        "MVC",
        "framework",
        "web",
        "applications",
        "Spring",
        "cross",
        "concerns",
        "IOC",
        "pattern",
        "Hibernate",
        "application",
        "application",
        "HTML",
        "JSP",
        "AjaxJQuery",
        "Struts",
        "Taglibraries",
        "custom",
        "JSP",
        "tags",
        "sorting",
        "Hibernate",
        "data",
        "access",
        "layer",
        "information",
        "database",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "database",
        "data",
        "serverside",
        "services",
        "Java",
        "Struts",
        "MVC",
        "Java",
        "Springs",
        "Web",
        "Services",
        "SOAP",
        "AXIS",
        "hibernate",
        "spring",
        "Spring",
        "JDBC",
        "database",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "credit",
        "card",
        "information",
        "party",
        "Business",
        "processes",
        "user",
        "authentication",
        "transfer",
        "services",
        "Soap",
        "UI",
        "load",
        "Web",
        "services",
        "creation",
        "DOA",
        "Data",
        "Access",
        "application",
        "Web",
        "sphere",
        "application",
        "server",
        "JSF",
        "components",
        "functionality",
        "UI",
        "screens",
        "JMS",
        "JAVA",
        "Service",
        "exchange",
        "information",
        "XML",
        "parser",
        "APIs",
        "JAXP",
        "JAXB",
        "web",
        "services",
        "response",
        "data",
        "unmarshalling",
        "process",
        "log4j",
        "API",
        "application",
        "flow",
        "CVS",
        "version",
        "control",
        "source",
        "code",
        "developers",
        "JUnit",
        "test",
        "cases",
        "modules",
        "Tortoise",
        "CVS",
        "code",
        "repository",
        "project",
        "code",
        "JIRA",
        "tracking",
        "system",
        "application",
        "application",
        "setup",
        "configuration",
        "development",
        "QA",
        "Production",
        "environment",
        "preparation",
        "builds",
        "ANT",
        "releases",
        "deployment",
        "Tomcat",
        "Server",
        "web",
        "applications",
        "web",
        "portals",
        "team",
        "player",
        "troubleshooting",
        "bug",
        "fixes",
        "requests",
        "enhancements",
        "webservice",
        "Environment",
        "JDK",
        "Hibernate",
        "Struts",
        "Spring",
        "JSP",
        "Servlets",
        "JMS",
        "XML",
        "SOAP",
        "WSDL",
        "JDBC",
        "JavaScript",
        "UML",
        "HTML",
        "JNDI",
        "CVS",
        "log4j",
        "Web",
        "sphere",
        "Application",
        "server",
        "Oracle",
        "g",
        "Rational",
        "Rose",
        "Eclipse",
        "Education",
        "B",
        "Tech",
        "JNTU",
        "Hyderabad",
        "Hyderabad",
        "Telangana",
        "Skills",
        "AJAX",
        "years",
        "Database",
        "years",
        "Java",
        "years",
        "JavaScript",
        "years",
        "user",
        "interface",
        "years",
        "Java",
        "J2Ee",
        "Rest",
        "Spring",
        "Soap",
        "Hibernate",
        "Angular",
        "J2Ee",
        "Core",
        "Java",
        "JEE",
        "Angularjs",
        "MVC",
        "JSP",
        "Additional",
        "Information",
        "TECHNICAL",
        "PROFICIENCY",
        "Category",
        "ExpertiseTools",
        "Java",
        "Technologies",
        "JDK",
        "JSP",
        "HTML",
        "EJB",
        "JDBC",
        "JNDI",
        "ANT",
        "JMS",
        "Swing",
        "XMLDTD",
        "Schema",
        "Java",
        "Beans",
        "JAXP",
        "DOMSAXWeb",
        "services",
        "SOAPWSDL",
        "AJAX",
        "JQuery",
        "framework",
        "Frameworks",
        "Struts",
        "JSF",
        "Spring",
        "Hibernate",
        "Development",
        "Tools",
        "Eclipse",
        "Ant",
        "Maven",
        "Toad",
        "SQL",
        "Developer",
        "Web",
        "logic",
        "Workshop",
        "Eclipse",
        "WebSphere",
        "Studio",
        "Application",
        "Developer",
        "RAD",
        "Log4j",
        "JUnit",
        "WebSphere",
        "Message",
        "Broker",
        "Toolkit",
        "WebSphere",
        "MQ",
        "JIRA",
        "Web",
        "Application",
        "Servers",
        "IBM",
        "Web",
        "sphere",
        "Application",
        "Server",
        "Web",
        "logic",
        "10x",
        "Tomcat",
        "JBoss",
        "Apache",
        "Front",
        "End",
        "UI",
        "HTML",
        "XML",
        "JavaScript",
        "JQuery",
        "CSS",
        "Bootstrap",
        "AJAX",
        "SASS",
        "Selenium",
        "Cucumber",
        "Database",
        "Oracle",
        "10g9x8x",
        "DB2",
        "SQL",
        "Server",
        "SQL",
        "Mongo",
        "DB",
        "AWS",
        "System",
        "Windows",
        "Linux",
        "UbuntuUnix",
        "Version",
        "Controls",
        "CVS",
        "SVN",
        "GIT"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:23:26.150410",
    "resume_data": "Java J2EE Developer span lJavaspan J2EE span lDeveloperspan Java J2EE Developer Java SD 8 years of experience in working with the web based applications hands on experience in the analysis design patterns development client and server applications implementing and testing with the use of Java and Core Java Experienced in all phases of Software development life cycle SDLC including analysis design coding and testing expertise in integration using J2EE architecture Have very strong interpersonal skills and the ability to work independently and with the group can learn quickly and easily adaptable to the working environment Authorized to work in the US for any employer Work Experience Java J2EE Developer Harris Corporation Melbourne FL November 2016 to Present Responsibilities Actively involved in software development life cycle starting from requirements gathering and performing Object Oriented Analysis Followed Agile SCRUM methodology and used Test Driven Development TDD Experience working with RSpec and Cucumber in a TDD and BDD test driven environment Involved in group meetings with Managers Team Members in designing implementing and testing Involved in writing UNIX Shell and Perl scripts for automation of deployments to Application server Used SOAPUI for the functional testing and inspection and invocation of Spring based Web Services Designed and Developed the Automation Testing Framework using Java Selenium Web Driver and TestNG Automation Framework Automated test cases using Selenium Involved in automation infrastructure development using selenium Designed and implemented Product search Java Spring boot service to fetch the data from Elastic help of Elastic native queries Used Microservices architecture with Spring Boot based service through REST Involved actively performance tunings in Java spring boot layer elastic side and production issues Used SOAPUI for the functional testing and inspection and invocation of spring based Web Services Did performance and load testing by using JMeter Involved in testing and quality assurance Setup JMeter for analyzing and measuring performance on web services Writing Scala classes to interact with the database Deploy and manage applications to Tomcat servers Deploy and manage applications on JBOSSTomcat J2EE server Managed the codebase using GIT Worked with Java Transaction Management to work on multiple databases Developed user interface using JSF HTML5 AngularJS jQuery and performed clientside validations using Java Script AJAX and CSS Involved in running Hadoop jobs for processing millions of records of text data Identified usability and develop functional and smooth easytooperate and eyecatching web applications using EXT JS Angular JS and react JS Involved in creating a reusable component using React JS for DOM manipulation Extensively used Core Java such as MultiThreading Exceptions and Collections Implemented wizard using Responsive Web Design Migrating application to AWS Platform Use Amazon Cloud Watch metrics to monitor the health and utilization of AWS resources Design applications on AWS taking advantage of disaster recovery design guidelines Application deployment and data migration on AWS Used Scala for coding the components in Play and Akka Worked on handling all the requests to the systems using Play framework MVC framework Developed shell scripts python scripts to check the health of Hadoop Daemons and schedule jobs Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Wrote Python scripts to parse XML documents and load the data in database Built main applications in Python Django leveraging technologies such as Tasty pie Angularjs Backbonejs and EmberJS Implementation design of bean orchestration using Apache Camel Developed Restful Web Services using Spring Boot and configured Cucumber as testing tool Used Design Patterns like Singleton Factory Session Facade and DAO Handled HP Fortify issues Sonar PMD Worked on Single nodeMulticluster setup using technology NoSQL and MongoDB Update the data from PostgreSQL database automatically by the time detective function Implemented Model View Controller MVC architecture Using Spring framework at the Web tier level to isolate each layer of the application to avoid the complexity of integration and ease of maintenance Developed Form Beans and Action Classes to model views and clientside functionality Built centralized logging to enable better debugging using Elastic Search Log stash and Kibana Efficiently handled periodic exporting of SQL data into Elastic search Experience in implementing J2EE Design Patterns like MVC Session Facade DAO and Singleton Used Maven to build test and deploying purposes Used clear case version control for source code Involved in debugging the application modules Deployed application using AWS services Used Log4j for logging and debugging and used JUnit extensively for testing Used Web Sphere Application Server for deploying various components of application Environment Java J2EE CICD Spring JSF Prime faces 32 Web Services Microservices Restful SoapUI Cucumber Apache CAMEL Tomcat JMeter JUnit JBPM DROOLS cloud Hadoop IBM Web Sphere App Server AWS Elastic searchNoSQL Scala IBM Clear case IBM Clear Quest MongoDB HTML5 PYTHON CSS Perl512 IBM RAD JavaScript Bootstrap jQuery AngularJS ReactJS Maven AJAX XML XSLT Java Beans Responsive Web Design UML Design Patterns log4j Agile Methodology Full Stack Java Developer Landstar System Jacksonville FL January 2016 to September 2016 Roles Responsibilities Involved in Requirements gathering Analysis Design Development and Testing of application developed using AGILE SCRUM methodology Architected designed and implemented a SPA Single Page Application in Angular JS which consume JSON from a Spring MVC using Spring Security to secure the Application Implemented nested views and routing using Angular UI Router as per the requirement GUI was developed using JSP HTML and Angular JS and created reusable components in Angular JS using Custom Directives Filters Services and Partials Exposed RESTful web services using JAXRS Implemented Angular promises to handle asynchronous communication with our Restful API for various requirements Developed pages using Angular JS directives expressions routing capabilities for bookmarking filters validations and Angular UI components such as grid buttons carousels date pickers modal dialogs and other input components Used Angular JS Routing for navigation between nested HTML views in the application and created Angular Js custom directives that were used along with HTML elements for DOM manipulation Performed unit testing using Karma Jasmine at Server side and Mocha in client side following test driven development TDD Mainly involved in development and maintenance of the website using Python HTML5 CSS AJAX JQuery DOJO JavaScript Angular JS Involved in the preparation of use case sequence diagrams class diagrams activity diagrams etc using Rational Rose Involved in developing reusable core libraries using core java Classes and Interfaces Used Express JS to route different endpoints made RESTful WEB SERVIVES to manipulate data in MySQL Worked with Mongo DB write concern to avoid loss of data during system failures and implemented read preferences in Mongo DB replica set Created ant build files to create the WAR files and involved in development of the system using the Spring MVC framework Involved in development of Hibernate objects in order to persist data into the database Responsible in writing SQL scripts and creating backend database table for complex business operations Participated in consuming webservices using SOAP that allowed integrating the business application with the legacy applications and also facilitates for future applications Developed queues using AWS SQS with JMS for services to subscribe and listen events Implemented logic to listen and to subscribe events Worked on Mongo DB concepts such as locking transactions indexes sharing replication schema design Used Angular JS Routing for navigation between nested HTML views in the application and created Angular Js custom directives that were used along with HTML elements for DOM manipulation Used Log4j API for logging in development testing and production environments configured to send email notifications Implemented version controlling using GIT and used Jenkins for continuous integration Configure REST controllers view resolver components and implemented transaction management using Spring declarative transaction management with Spring AOP concepts Wrote build deployment scripts using Maven on UNIX environment and integrated using Jenkins Used GIT for version control and used eclipse as the IDE for developing the application Used Rational Clear Quest for defect fixing Involved in guiding mentoring new contractors to understand the application Coordinated with QA lead for development of test plan TDD test cases test code and actual testing responsible for defects allocation and resolution of those defects and used selenium Environment J2EE JDK HTML CSS Ajax Angular UI JQuery Express Js JavaScript AngularJS Nodejs Bootstrap Spring Hibernate PLSQL AWS Web Services SOAP JMS RESTful Multithreading WebSphere 8 Apache Maven MongoDB JMS UI Developer ATT Middletown NJ June 2014 to December 2015 Roles Responsibilities Worked on an Agile Scrum Development Team to deliver regular updates to business team and project managers Used HTML CSS and JavaScript for designing web application layout and form Worked on local Storage to store retrieve insensitive user data during transition between the different pages Involved in designing the web pages using HTML 5 CSS3 JavaScript and Sencha EXTJS SASS Mongo DB Developed the application following MVVM architecture by developing models view models in the application Developed the views using various EXTJS layouts and used various components such as grids panels inputs etc Configured Ajax requests to load the data from the server using EXT AJAX and took part in testing the application Responsible for refactoring existing jQueryAjax frontend web application into EXTJS Configured Sencha CMD to compile build and create production ready code for the application deployment Used Web Developer tools Firebug and IE developer toolbar for debugging and to check the browser compatibility and Responsible in implementing CRUD operation using Spring Jersey based JAXRS implementation Developed Spring Data Mongo repositories for performing data retrievals from Mongo db Performed Java Classes to Mongo dB collection and document mappings using Spring Data Configure and monitor numerous MongoDB and NoSQL instances MongoDB Schema Design using DB Ref Manual Ref Embedded Data Model Design Performed end to end testing using Selenium web driver Jbehave and Testing Developed serverside software modules and clientside user interface components deployed entirely in Compute Cloud of Amazon web Services AWS Developed scripts for build deployment maintenance and related tasks using Jenkins Docker and Maven Used GitHub as a version control and JIRA for tracking bugs Took part in setting up builds and deployments using Teamcity Environment HTML5 CSS3 JavaScript Sencha EXTJS 5 MongoDB Agile SASS Firebug REST web service Spring Web Matrix HP Quality Center AWS Jenkins Docker Maven GitHub Jira Team City Sr JavaJ2EE Developer American Family Insurance Madison WI January 2013 to December 2014 Roles Responsibilities Involved in various phases of Software Development Life cycle SDLC of the application like requirement gathering Design Analysis and code development using Agile Scrum methodology Developed Object diagrams Class Diagrams and Sequence diagrams using UML Used HTML JSPs JavaScript CSS as a front end GUI with middle tier framework as Hibernate using HQL and Struts using MVC framework Traded data with web server using AJAX without reloading the web page and used JDBC to manipulate the data on the System database Server Developed custom tags JSTL to support custom user interfaces Created Stateless and Stateful session beans for accessing and mutating Entity beans and used JMS to communicate between the components and configured on the server Designed SOA implementations by Using Web ServicesWSDL UDDI and SOAP for getting credit card information from third party vendors Designed and implemented XML parsing for XML order conformations used JSF framework in developing user interfaces using JSF UI components validator Events and listeners Used DOM for parsing the XML XSLT Document and used JAXB parser for parsing the valid XML files Created Managed bean used to instantiate backing beans used in a JSF application and stores them in a Scope Designed various tables required for the project in Oracle database and used the Stored Procedures in the application Developing in built traditional java web application using JSF and RICHFACES and created database pool multipool data source and mapped them to roles Framework leverages JSF features like Event handling Validation mechanisms and state management Have written PLSQL stored procedures and involved in performance tuning of complex queries Monitored the error logs using Log4j and fixed the problems and used JNDI to read the details of the login users Used MultiThreading to overcome the errors in the process of transactions and used JUnit to do unit testing for the modules developed Developed the different components of the application such as JSPs Servlets and DAO and used build ANT scripts and deployed the application on Web sphere Application Server Environment Java16 JDBC Servlets 25 J2EE JSP JSF 20 JavaScript Rich faces Hibernate 32 Struts 20 DAO CSS HTML XML AJAX DOM JUnit JTA ANT JMS PLSQL Apache Axis SOA MVC Web Services IBM WebSphere 7 Oracle 10g log4j JNDI Eclipse J2EE Java Developer Arvind Mills IN June 2009 to November 2012 Roles Responsibilities Performed analysis for the client requirements based on the developed detailed design documents Involved in analysis design and development of project and implemented OOPS concepts Involved in designing the user interfaces using JSP and used the Spring MVC framework for developing the web applications Implemented Spring for cross cutting concerns and IOC pattern and also configured Hibernate 20 for the application Designed application with HTML JSP AjaxJQuery Struts Taglibraries Designed custom JSP tags for rolebased sorting and filtering Used Hibernate in data access layer to access and update information in the database and used Hibernate Query Language HQL to query the database for complex data Developed serverside services using Java multithreading Struts MVC Java Springs Web Services SOAP AXIS Configured hibernate with spring and used Spring JDBC while dealing with the database Involved in using web services WSDL and SOAP for getting credit card information from third party and implemented Business processes like user authentication transfer of services Used Soap UI for load testing the Web services and involved in creation of various DOA Data Access Objects Deployed the application on to Web sphere application server Used AJAX4 JSF components for AJAX functionality in UI screens and Used JMS JAVA Messaging Service for reliable and asynchronous exchange of important information Used XML parser APIs such as JAXP and JAXB in the web services request response data marshalling as well as unmarshalling process Used log4j API for logging application flow and debugging Used CVS for version control across common source code used by developers and Developed JUnit test cases for all the developed modules Used Tortoise CVS as a code repository to manage project code and used JIRA as a defect tracking system for the application Responsible for application setup and configuration in the development QA and Production environment and preparation of the timely builds using ANT releases and deployment on Tomcat Server for web applications and web portals respectively Extensively involved team player in troubleshooting bug fixes change requests and enhancements for the webservice Environment JDK 15 Hibernate 20 Struts Spring 20 JSP Servlets JMS XML SOAP WSDL JDBC JavaScript UML HTML JNDI CVS log4j Web sphere Application server Oracle 10g Rational Rose Eclipse Education B Tech JNTU Hyderabad Hyderabad Telangana Skills AJAX 8 years Database 8 years Java 8 years JavaScript 8 years user interface 8 years Java J2Ee Rest Spring Soap Hibernate Angular J2Ee Core Java JEE Angularjs AWS MVC JSP Additional Information TECHNICAL PROFICIENCY Category ExpertiseTools Java Technologies JDK 15161718 Servlets 2530 JSP 1220 HTML EJB 2030 JDBC 20 JNDI ANT JMS Swing XMLDTD Schema Java Beans JAXP DOMSAXWeb services SOAPWSDL AJAX JQuery framework Frameworks Struts 1220 JSF 1220 Spring 3041 Hibernate 2030 Development Tools Eclipse Ant Maven Toad 85 SQL Developer Web logic Workshop 81 My Eclipse 8 WebSphere Studio Application Developer 51 RAD 60 Log4j JUnit WebSphere Message Broker Toolkit WebSphere MQ JIRA Web Application Servers IBM Web sphere Application Server 81 Web logic 10x Tomcat 70 JBoss 7 Apache Front End UI AngularJS HTML 4015 XML JavaScript JQuery CSS 23 Bootstrap AJAX SASS Selenium Cucumber Database Oracle 10g9x8x DB2 SQL Server My SQL Mongo DB AWS Operating System Windows Linux UbuntuUnix Version Controls CVS SVN GIT",
    "unique_id": "c707f9ad-2108-476b-80c1-851667b8afab"
}