{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Miami FL 8 years of strong experience in softwareIT industry using Java and Python in various domains such as healthcare banking Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle Pyside SciPy PyTables Good involvement in creating web applications in Object Oriented Programming concepts like MultiThreading Exception Handling and Collections and executing Model View Control design utilizing Django Framework Experience in developing Web Services SOAP Restful in Python using XML JSON Hands on experience in using Shell scripting for automation by following Python PEP Hands on experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experienced in working with serverside technologies including databases restful API and MVC design patterns Proficient in using editors like Eclipse sublime text NetBeans PyCharm Pyscripter spyder PyStudio and PyDev Used Pandas API to put the data as time series and tabular form for east timestamp data retrieval and manipulation and for statistical analysis Analyzed instrument pricing and modelling methodologies and documented how instrument prices move as change in market data source Experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Proficient in building Web User Interface UI using HTML DHTML XHTML AngularJS Hibernate CSSCSS3 Nodejs Backbonejs D3 jQuery that follows W3C Web Standards and are browser compatible Created UI screens for initiation and validation Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Django evolution and manual SQL modifications to retain all the data while site is in production Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Experience in Linux Bash Scripting and PEP guidelines in python Knowledge in Using Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Expertise in usage of pythonDjango Framework for developing web applications Expertise in developing web based open stack applications for large dataset analysis using Python and Django Used Python Unit test framework for developing and implementing the unit tests using Test driven approach Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Work Experience Sr Python Developer Raymond James Financial Saint Petersburg FL March 2017 to Present Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database Model Views and APIs using Python for interactive webbased solutions Worked on python library for manipulating PCI config space under Linux Django Framework that was used in developing web applications to implement the model view control architecture Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Working on continuous integration and automation using Jenkins Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Placed data into JSON files using Python to test Django websites Lock mechanisms were implemented and the functionality of multithreading has been used Worked on Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval PythonDjango based web application Post gresql DB and integrations with 3rd party email messaging storage services Involved in Python OOP code for quality logging monitoring and debugging code optimization Designed dynamic and browser compatible pages using HTML5 CSS3 jQuery and JavaScript and Angular JS Responsible for analysing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Generated various graphs for business decision making using Python matplotlib library Tested various regular expressions in URL Dispatchers in Django Designed and created the database tables and wrote SQL queries to access PostgreSQL Deployed the project into Heroku and used GitHub version control system Used SOAP and Restful API for information extraction Modified existing webpages to enhance the usability Maintained Puppet rspec for testing various unitsystem automation schemes Designed framework for Remote communication using Socket Programming Bluetooth and Infrared and deployed the project into Jenkins using SVN version control system and used JIRA for tracking and updating the project issues Maintained Puppet for testing various unitsystem automation schemes and worked on Using Jenkins to deploy your Django application and run unit tests Extensive code reviewing using GitHub pull requests improved code quality and conducted meetings among peer Planning implementing and converting manual test cases to automation test cases Trained team members extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Sr Python Developer First American Bank Elk Grove IL December 2015 to February 2017 Responsibilities Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Developed Python based API RESTful Web Service to track the events and perform analysis using Django Developed entire frontend and backend modules using Python on Django Web Framework Worked on several python libraries like Python NumPy and matplotlib and used XML Web Services using SOAP to transfer information to the Credit Monitoring Systems Involved in Using Python Flask and AngularJS for the design development and deployment of the application Worked on Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed UDFs using python and also implemented graphs using python with big data analytics Design develop test deploy and maintain the website and used Django Database APIs to access database objects Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Unique skills in developing user friendly simple yet effective webbased applications Created a PythonDjango based web application using Python scripting for data processing MySql for the database and HTMLCSSJQuery and HighCharts for data visualization of the served pages Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and Jquery Successfully migrated the Django database from SQLite to MySql to PostgreSQL with complete data integrity Developed Merge jobs in Python to extract and load data into MySql database Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and Jquery Executed various MYSQL database queries from python using PythonMySql connector and MySqldb package Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Generated property list for every application dynamically using Python and created unit testregression test framework for workingnew code Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub AngularJS Jira Sr Python Developer Transamerica Corporation Baltimore MD September 2014 to November 2015 Responsibilities Developed an embedded software data driven test automation framework in Python Developed Views and Templates with Python and using Djangos view controller and template language Website interface is created Implemented Business logic worked on data exchange processed XML and HTML using Python 27 and its familiar framework Django Designed and Developed User Interface using HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed Django dashboard with custom look by using the study of Django admin site and dashboard Automated data movements using Python scripts Worked on Selenium testing framework Written Shell Scripting for automation Used Pandas API to put the data as time series and tabular format for data manipulation and retrieval For manipulation of data from the database various queries using SQL were written and created a database using MySQL Deployed the project into Jenkins using GIT version control system Involved in splitting validating and processing of files Created and populated digital brochures using PageTurnPro and built photo galleries on website in the Django CMS and also using Django CMS plugin Configuring SSO for different applications in different domains with Cookie Provider and troubleshooting issues related to them Maintenance and development of a hightraffic and demand site and platform running on a customrolled Django CMS Implemented automate scripts to back up the old records using MongoDB export command and transfer these backup files into backup machine using ftplib Maintaining multiple copies of data in different database servers using MongoDB Replication concept Worked with Linux shell commands and command line utilities Developed and configured test automation networks and execute stability and performance tests Responsible for debugging and troubleshooting the web application Environment Python 27 Django DjangoCMS SSO DjangoCMS plugins MySQL MongoDB Linux Shell Scripting Pandas API Selenium HTML CSS JavaScript JQuery AngularJS Bootstrap JSON Sr Python Developer FM Global Johnston RI November 2013 to August 2014 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Interactive in providing change requests trouble reports and requirements collection with the client Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Used NumPy for Numerical analysis for Insurance premium Used Robot Test automation framework for Testing of the GUI of the application Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all its commands Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Used many regular expressions to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MongoDB using PyMongo module Improved code reuse and performance by making effective use of various design patterns and refactoring code base Involved in development of a Map based application for integral analysis purpose Updated and maintained Puppet rspec unitsystem test Involved in analysis and design of the application features Worked on debugging and troubleshooting programming related issues Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployment of the web application using the Linux server Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Backbone JS JQuery Mongo DB MS SQL Server JavaScript Git GitHub AWS Linux Shell Scripting AJAX JAVA Python Developer Readinus Software Pvt Ltd Bengaluru Karnataka January 2012 to August 2013 Responsibilities Responsible for the design and development of different webbased applications based on clients requirements Developed applications using CherryPy Flask Python frameworks Deployed web applications to Google App Engine Learnt to deploy projects using Jenkins Utilized Pandas python library for analyzing data and data structures Managed large datasets using Pandas data frames and SQLite Designed email marketing campaigns and also created responsive web forms that saved data into a database using Python Django Framework Learned about the ModelViewController MVC design pattern Learned new technical skills as required for the system like Django CherryPy and Flask Frameworks Developed Python scripts to read from Excel files generate XML configuration files and for generating IP access frequency lists in different data logs Performed frontend development for web initiatives to ensure usability using HTML and CSS Tested all completed work to ensure proper and error free functionality Enhance quality feel and usability of consumerfacing website Wrote Use Case diagrams Class diagrams Sequence Diagrams and State Diagrams Collaborated with a team of instructors and programmers to develop the curriculum and guidelines for workshops to teach the logic of programming Designed manuals workbooks and other printed media for reference purpose Created and ran custom SQL queries and stored procedures and also created applications to stored client phone calls and emails that were routed to various developers Environment Python 2627 Django 12 CherryPy Flask SQLite Google App Engine Jenkins Pandas HTML CSS Java Developer Bengaluru Karnataka June 2009 to December 2011 Responsibilities Involved in Design and development of UI screens for Add and Update Lending Application using Struts frame work Involved in developing the business components using JAVA and JDBC Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Used Restful web service calls for the validation Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed userfriendly modals for the form submissions using simplemodaljs jQuery Ajax and JavaScript Designed and developed the UI of the website using HTML AJAX CSS JQuery and JavaScript Used Django framework for database application development Environment Java Python Django J2EE JSP Oracle Eclipse MySQL Linux HTML CSS AJAX JavaScript Education Masters Skills HTML 8 years JENKINS 7 years PYTHON 8 years CSS 8 years LINUX 7 years Unix 6 years Git 7 years JQuery 8 years MySQL 7 years Ajax 8 years JSON 7 years Django C Javascript Java CertificationsLicenses AWS Certified Solution Architect Associate November 2017 to November 2019 Additional Information Technical Skills Operating systems Windows Linux Ubuntu UNIX Languages Java C C Python 332724 Perl SQL and PLSQL Scripting languages CSS AJAX Java Script jQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 MATLAB Markup languages HTML XML JSON Servers Apache Tomcat Apache Spark IBM Web sphere open stack RESTful web services Databases Oracle My SQL Apache Cassandra MongoDB IDEs Tools Eclipse Toad Sublime text Spyder PyCharm ETL Version Control CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum Waterfall Deployment Tools Heroku Jenkins Ansible Redmine",
    "entities": [
        "AJAX",
        "Test Driven Development TDD",
        "PyCharm PyScripter PyStudio",
        "HTML AJAX CSS",
        "UNIX",
        "Agile Software Methodology",
        "HTML XML JSON Servers Apache Tomcat Apache Spark",
        "State Diagrams Collaborated",
        "REST JSON",
        "Working",
        "MySql to PostgreSQL",
        "IBM",
        "IP",
        "Amazon Web Services AWS",
        "Heroku",
        "Created a PythonDjango",
        "SOAP",
        "XML",
        "HTMLCSSJQuery",
        "DHTML",
        "Jquery Executed",
        "Add and Update Lending Application",
        "Maintained",
        "Shell",
        "Automated",
        "GitHub Bit Bucket",
        "Amazon",
        "Maintained Puppet",
        "Python",
        "Amazon AWS S3",
        "FF Interactive",
        "Stored Procedures",
        "Jenkins",
        "Bash",
        "CSS Bootstrap",
        "PEP",
        "Web Services SOAP Restful",
        "MultiThreading",
        "Kanban",
        "Windows",
        "Django Designed",
        "API RESTful Web Service",
        "Linux",
        "Jquery Successfully",
        "Flask",
        "RDS",
        "MVC",
        "JSP Developed",
        "PythonDjango",
        "HighCharts",
        "GIT",
        "Python Developed Views",
        "Oracle My SQL Apache Cassandra",
        "MultiThreading Exception Handling and",
        "API",
        "HTML CSS JavaScript",
        "Implemented Business",
        "Sr Python Developer First American Bank",
        "Present Responsibilities Designed",
        "Google App Engine Learnt",
        "Created",
        "AWS",
        "PyMongo",
        "Python PEP Hands",
        "HTML",
        "SQL",
        "GitHub",
        "lPythonspan",
        "HTML AJAX CSS JQuery",
        "Model View Control",
        "Amazon AWS",
        "Sublime Text Proficient",
        "Handson",
        "API Integration Developed Python",
        "CSS Tested",
        "Pandas",
        "Python Integrated Development Environments",
        "SQLite",
        "CRUD",
        "Python Django Framework Learned",
        "JAVA",
        "Performed",
        "Created UI",
        "NumPy SQL Alchemy",
        "Additional Information Technical Skills",
        "the Credit Monitoring Systems Involved",
        "JavaScript",
        "XML Web Services",
        "HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed Django",
        "UI",
        "Selenium",
        "SVN",
        "CSS",
        "REST",
        "Used Apache CQ Team Foundation Server",
        "Miami",
        "Remote",
        "Integration",
        "Bash Developed",
        "MySql"
    ],
    "experience": "Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle Pyside SciPy PyTables Good involvement in creating web applications in Object Oriented Programming concepts like MultiThreading Exception Handling and Collections and executing Model View Control design utilizing Django Framework Experience in developing Web Services SOAP Restful in Python using XML JSON Hands on experience in using Shell scripting for automation by following Python PEP Hands on experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experienced in working with serverside technologies including databases restful API and MVC design patterns Proficient in using editors like Eclipse sublime text NetBeans PyCharm Pyscripter spyder PyStudio and PyDev Used Pandas API to put the data as time series and tabular form for east timestamp data retrieval and manipulation and for statistical analysis Analyzed instrument pricing and modelling methodologies and documented how instrument prices move as change in market data source Experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Proficient in building Web User Interface UI using HTML DHTML XHTML AngularJS Hibernate CSSCSS3 Nodejs Backbonejs D3 jQuery that follows W3C Web Standards and are browser compatible Created UI screens for initiation and validation Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Django evolution and manual SQL modifications to retain all the data while site is in production Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Experience in Linux Bash Scripting and PEP guidelines in python Knowledge in Using Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Expertise in usage of pythonDjango Framework for developing web applications Expertise in developing web based open stack applications for large dataset analysis using Python and Django Used Python Unit test framework for developing and implementing the unit tests using Test driven approach Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Work Experience Sr Python Developer Raymond James Financial Saint Petersburg FL March 2017 to Present Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database Model Views and APIs using Python for interactive webbased solutions Worked on python library for manipulating PCI config space under Linux Django Framework that was used in developing web applications to implement the model view control architecture Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Working on continuous integration and automation using Jenkins Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Placed data into JSON files using Python to test Django websites Lock mechanisms were implemented and the functionality of multithreading has been used Worked on Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval PythonDjango based web application Post gresql DB and integrations with 3rd party email messaging storage services Involved in Python OOP code for quality logging monitoring and debugging code optimization Designed dynamic and browser compatible pages using HTML5 CSS3 jQuery and JavaScript and Angular JS Responsible for analysing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Generated various graphs for business decision making using Python matplotlib library Tested various regular expressions in URL Dispatchers in Django Designed and created the database tables and wrote SQL queries to access PostgreSQL Deployed the project into Heroku and used GitHub version control system Used SOAP and Restful API for information extraction Modified existing webpages to enhance the usability Maintained Puppet rspec for testing various unitsystem automation schemes Designed framework for Remote communication using Socket Programming Bluetooth and Infrared and deployed the project into Jenkins using SVN version control system and used JIRA for tracking and updating the project issues Maintained Puppet for testing various unitsystem automation schemes and worked on Using Jenkins to deploy your Django application and run unit tests Extensive code reviewing using GitHub pull requests improved code quality and conducted meetings among peer Planning implementing and converting manual test cases to automation test cases Trained team members extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Sr Python Developer First American Bank Elk Grove IL December 2015 to February 2017 Responsibilities Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Developed Python based API RESTful Web Service to track the events and perform analysis using Django Developed entire frontend and backend modules using Python on Django Web Framework Worked on several python libraries like Python NumPy and matplotlib and used XML Web Services using SOAP to transfer information to the Credit Monitoring Systems Involved in Using Python Flask and AngularJS for the design development and deployment of the application Worked on Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed UDFs using python and also implemented graphs using python with big data analytics Design develop test deploy and maintain the website and used Django Database APIs to access database objects Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Unique skills in developing user friendly simple yet effective webbased applications Created a PythonDjango based web application using Python scripting for data processing MySql for the database and HTMLCSSJQuery and HighCharts for data visualization of the served pages Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and Jquery Successfully migrated the Django database from SQLite to MySql to PostgreSQL with complete data integrity Developed Merge jobs in Python to extract and load data into MySql database Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and Jquery Executed various MYSQL database queries from python using PythonMySql connector and MySqldb package Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Generated property list for every application dynamically using Python and created unit testregression test framework for workingnew code Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub AngularJS Jira Sr Python Developer Transamerica Corporation Baltimore MD September 2014 to November 2015 Responsibilities Developed an embedded software data driven test automation framework in Python Developed Views and Templates with Python and using Djangos view controller and template language Website interface is created Implemented Business logic worked on data exchange processed XML and HTML using Python 27 and its familiar framework Django Designed and Developed User Interface using HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed Django dashboard with custom look by using the study of Django admin site and dashboard Automated data movements using Python scripts Worked on Selenium testing framework Written Shell Scripting for automation Used Pandas API to put the data as time series and tabular format for data manipulation and retrieval For manipulation of data from the database various queries using SQL were written and created a database using MySQL Deployed the project into Jenkins using GIT version control system Involved in splitting validating and processing of files Created and populated digital brochures using PageTurnPro and built photo galleries on website in the Django CMS and also using Django CMS plugin Configuring SSO for different applications in different domains with Cookie Provider and troubleshooting issues related to them Maintenance and development of a hightraffic and demand site and platform running on a customrolled Django CMS Implemented automate scripts to back up the old records using MongoDB export command and transfer these backup files into backup machine using ftplib Maintaining multiple copies of data in different database servers using MongoDB Replication concept Worked with Linux shell commands and command line utilities Developed and configured test automation networks and execute stability and performance tests Responsible for debugging and troubleshooting the web application Environment Python 27 Django DjangoCMS SSO DjangoCMS plugins MySQL MongoDB Linux Shell Scripting Pandas API Selenium HTML CSS JavaScript JQuery AngularJS Bootstrap JSON Sr Python Developer FM Global Johnston RI November 2013 to August 2014 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Interactive in providing change requests trouble reports and requirements collection with the client Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Used NumPy for Numerical analysis for Insurance premium Used Robot Test automation framework for Testing of the GUI of the application Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all its commands Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Used many regular expressions to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MongoDB using PyMongo module Improved code reuse and performance by making effective use of various design patterns and refactoring code base Involved in development of a Map based application for integral analysis purpose Updated and maintained Puppet rspec unitsystem test Involved in analysis and design of the application features Worked on debugging and troubleshooting programming related issues Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployment of the web application using the Linux server Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Backbone JS JQuery Mongo DB MS SQL Server JavaScript Git GitHub AWS Linux Shell Scripting AJAX JAVA Python Developer Readinus Software Pvt Ltd Bengaluru Karnataka January 2012 to August 2013 Responsibilities Responsible for the design and development of different webbased applications based on clients requirements Developed applications using CherryPy Flask Python frameworks Deployed web applications to Google App Engine Learnt to deploy projects using Jenkins Utilized Pandas python library for analyzing data and data structures Managed large datasets using Pandas data frames and SQLite Designed email marketing campaigns and also created responsive web forms that saved data into a database using Python Django Framework Learned about the ModelViewController MVC design pattern Learned new technical skills as required for the system like Django CherryPy and Flask Frameworks Developed Python scripts to read from Excel files generate XML configuration files and for generating IP access frequency lists in different data logs Performed frontend development for web initiatives to ensure usability using HTML and CSS Tested all completed work to ensure proper and error free functionality Enhance quality feel and usability of consumerfacing website Wrote Use Case diagrams Class diagrams Sequence Diagrams and State Diagrams Collaborated with a team of instructors and programmers to develop the curriculum and guidelines for workshops to teach the logic of programming Designed manuals workbooks and other printed media for reference purpose Created and ran custom SQL queries and stored procedures and also created applications to stored client phone calls and emails that were routed to various developers Environment Python 2627 Django 12 CherryPy Flask SQLite Google App Engine Jenkins Pandas HTML CSS Java Developer Bengaluru Karnataka June 2009 to December 2011 Responsibilities Involved in Design and development of UI screens for Add and Update Lending Application using Struts frame work Involved in developing the business components using JAVA and JDBC Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Used Restful web service calls for the validation Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed userfriendly modals for the form submissions using simplemodaljs jQuery Ajax and JavaScript Designed and developed the UI of the website using HTML AJAX CSS JQuery and JavaScript Used Django framework for database application development Environment Java Python Django J2EE JSP Oracle Eclipse MySQL Linux HTML CSS AJAX JavaScript Education Masters Skills HTML 8 years JENKINS 7 years PYTHON 8 years CSS 8 years LINUX 7 years Unix 6 years Git 7 years JQuery 8 years MySQL 7 years Ajax 8 years JSON 7 years Django C Javascript Java CertificationsLicenses AWS Certified Solution Architect Associate November 2017 to November 2019 Additional Information Technical Skills Operating systems Windows Linux Ubuntu UNIX Languages Java C C Python 332724 Perl SQL and PLSQL Scripting languages CSS AJAX Java Script jQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 MATLAB Markup languages HTML XML JSON Servers Apache Tomcat Apache Spark IBM Web sphere open stack RESTful web services Databases Oracle My SQL Apache Cassandra MongoDB IDEs Tools Eclipse Toad Sublime text Spyder PyCharm ETL Version Control CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum Waterfall Deployment Tools Heroku Jenkins Ansible Redmine",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Miami",
        "FL",
        "years",
        "experience",
        "industry",
        "Java",
        "Python",
        "domains",
        "healthcare",
        "banking",
        "Experience",
        "python",
        "packages",
        "NumPy",
        "SQL",
        "Alchemy",
        "matPlotlib",
        "soup",
        "pickle",
        "Pyside",
        "SciPy",
        "PyTables",
        "involvement",
        "web",
        "applications",
        "Object",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Model",
        "View",
        "Control",
        "design",
        "Django",
        "Framework",
        "Experience",
        "Web",
        "Services",
        "SOAP",
        "Restful",
        "Python",
        "XML",
        "JSON",
        "Hands",
        "experience",
        "Shell",
        "scripting",
        "automation",
        "Python",
        "PEP",
        "Hands",
        "experience",
        "editors",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "PyDev",
        "Wing",
        "IDE",
        "Spyder",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "serverside",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "editors",
        "Eclipse",
        "text",
        "NetBeans",
        "PyCharm",
        "Pyscripter",
        "spyder",
        "PyStudio",
        "PyDev",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "form",
        "east",
        "timestamp",
        "data",
        "retrieval",
        "manipulation",
        "analysis",
        "instrument",
        "pricing",
        "modelling",
        "methodologies",
        "prices",
        "change",
        "market",
        "data",
        "source",
        "Experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Zope",
        "Python",
        "web",
        "application",
        "frameworks",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Beans",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Sublime",
        "Text",
        "Proficient",
        "Web",
        "User",
        "Interface",
        "UI",
        "HTML",
        "DHTML",
        "Hibernate",
        "CSSCSS3",
        "Nodejs",
        "Backbonejs",
        "D3",
        "jQuery",
        "W3C",
        "Web",
        "Standards",
        "browser",
        "Created",
        "UI",
        "screens",
        "initiation",
        "validation",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "data",
        "site",
        "production",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Experience",
        "Linux",
        "Bash",
        "Scripting",
        "PEP",
        "guidelines",
        "python",
        "Knowledge",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "Expertise",
        "usage",
        "pythonDjango",
        "Framework",
        "web",
        "applications",
        "Expertise",
        "web",
        "stack",
        "applications",
        "analysis",
        "Python",
        "Django",
        "Python",
        "Unit",
        "test",
        "framework",
        "unit",
        "tests",
        "Test",
        "approach",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Raymond",
        "James",
        "Financial",
        "Saint",
        "Petersburg",
        "FL",
        "March",
        "Present",
        "Responsibilities",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "UML",
        "Rational",
        "Rose",
        "Usecase",
        "Class",
        "Object",
        "diagrams",
        "techniques",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "solutions",
        "python",
        "library",
        "PCI",
        "config",
        "space",
        "Linux",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "integration",
        "automation",
        "Jenkins",
        "Performed",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "data",
        "files",
        "Python",
        "Django",
        "Lock",
        "mechanisms",
        "functionality",
        "multithreading",
        "Worked",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "PythonDjango",
        "web",
        "application",
        "Post",
        "gresql",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "Python",
        "OOP",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "dynamic",
        "browser",
        "pages",
        "HTML5",
        "CSS3",
        "jQuery",
        "JavaScript",
        "Angular",
        "JS",
        "Responsible",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "expressions",
        "URL",
        "Dispatchers",
        "Django",
        "database",
        "tables",
        "SQL",
        "access",
        "PostgreSQL",
        "project",
        "Heroku",
        "GitHub",
        "version",
        "control",
        "system",
        "SOAP",
        "API",
        "information",
        "extraction",
        "webpages",
        "usability",
        "Puppet",
        "rspec",
        "automation",
        "schemes",
        "framework",
        "Remote",
        "communication",
        "Socket",
        "Programming",
        "Bluetooth",
        "Infrared",
        "project",
        "Jenkins",
        "SVN",
        "version",
        "control",
        "system",
        "JIRA",
        "project",
        "issues",
        "Puppet",
        "automation",
        "schemes",
        "Jenkins",
        "Django",
        "application",
        "run",
        "unit",
        "code",
        "reviewing",
        "GitHub",
        "pull",
        "requests",
        "code",
        "quality",
        "meetings",
        "peer",
        "Planning",
        "test",
        "cases",
        "test",
        "cases",
        "team",
        "members",
        "methodologies",
        "scrum",
        "stand",
        "ups",
        "Kanban",
        "mode",
        "requirements",
        "clients",
        "Sr",
        "Python",
        "Developer",
        "First",
        "American",
        "Bank",
        "Elk",
        "Grove",
        "IL",
        "December",
        "February",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Django",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "python",
        "libraries",
        "Python",
        "NumPy",
        "matplotlib",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "information",
        "Credit",
        "Monitoring",
        "Systems",
        "Python",
        "Flask",
        "AngularJS",
        "design",
        "development",
        "deployment",
        "application",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Developed",
        "UDFs",
        "python",
        "graphs",
        "python",
        "data",
        "analytics",
        "Design",
        "test",
        "deploy",
        "website",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "Python",
        "documents",
        "data",
        "database",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "web",
        "applications",
        "Flask",
        "frame",
        "works",
        "MVC",
        "architecture",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "deployment",
        "project",
        "AWS",
        "skills",
        "user",
        "applications",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "MySql",
        "database",
        "HTMLCSSJQuery",
        "HighCharts",
        "data",
        "visualization",
        "pages",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "Jquery",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "MySql",
        "data",
        "integrity",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySql",
        "database",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "Jquery",
        "MYSQL",
        "database",
        "python",
        "connector",
        "MySqldb",
        "package",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "property",
        "list",
        "application",
        "Python",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "Selenium",
        "testing",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "JavaScript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "JQuery",
        "GitHub",
        "AngularJS",
        "Jira",
        "Sr",
        "Python",
        "Developer",
        "Transamerica",
        "Corporation",
        "Baltimore",
        "MD",
        "September",
        "November",
        "Responsibilities",
        "software",
        "data",
        "test",
        "automation",
        "framework",
        "Python",
        "Developed",
        "Views",
        "Templates",
        "Python",
        "Djangos",
        "controller",
        "template",
        "language",
        "Website",
        "interface",
        "Implemented",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "HTML",
        "Python",
        "framework",
        "Django",
        "Developed",
        "User",
        "Interface",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "Bootstrap",
        "JSON",
        "Developed",
        "Django",
        "dashboard",
        "custom",
        "look",
        "study",
        "Django",
        "admin",
        "site",
        "dashboard",
        "data",
        "movements",
        "Python",
        "scripts",
        "Selenium",
        "testing",
        "framework",
        "Written",
        "Shell",
        "Scripting",
        "automation",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "data",
        "manipulation",
        "retrieval",
        "manipulation",
        "data",
        "database",
        "queries",
        "SQL",
        "database",
        "MySQL",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "splitting",
        "processing",
        "files",
        "brochures",
        "PageTurnPro",
        "photo",
        "galleries",
        "website",
        "Django",
        "CMS",
        "Django",
        "CMS",
        "Configuring",
        "SSO",
        "applications",
        "domains",
        "Cookie",
        "Provider",
        "troubleshooting",
        "issues",
        "Maintenance",
        "development",
        "demand",
        "site",
        "platform",
        "Django",
        "CMS",
        "scripts",
        "records",
        "export",
        "command",
        "files",
        "machine",
        "ftplib",
        "copies",
        "data",
        "database",
        "servers",
        "MongoDB",
        "Replication",
        "concept",
        "Linux",
        "shell",
        "commands",
        "command",
        "line",
        "utilities",
        "Developed",
        "test",
        "automation",
        "networks",
        "stability",
        "performance",
        "tests",
        "web",
        "application",
        "Environment",
        "Python",
        "Django",
        "DjangoCMS",
        "SSO",
        "DjangoCMS",
        "MySQL",
        "MongoDB",
        "Linux",
        "Shell",
        "Scripting",
        "Pandas",
        "API",
        "Selenium",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AngularJS",
        "Bootstrap",
        "JSON",
        "Sr",
        "Python",
        "Developer",
        "FM",
        "Global",
        "Johnston",
        "RI",
        "November",
        "August",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "testing",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "AJAX",
        "CSS",
        "appearance",
        "Knowledge",
        "crossbrowser",
        "development",
        "HTML",
        "CSS",
        "websites",
        "Windows",
        "IE",
        "IE",
        "IE",
        "FF",
        "Interactive",
        "change",
        "requests",
        "trouble",
        "reports",
        "requirements",
        "collection",
        "client",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "NumPy",
        "analysis",
        "Insurance",
        "premium",
        "Robot",
        "Test",
        "automation",
        "framework",
        "Testing",
        "GUI",
        "application",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "Celery",
        "task",
        "queue",
        "Rabbit",
        "MQ",
        "Redis",
        "broker",
        "tasks",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "code",
        "reviews",
        "GitHub",
        "pull",
        "requests",
        "bugs",
        "code",
        "quality",
        "knowledge",
        "monitoring",
        "practices",
        "search",
        "Install",
        "monitoring",
        "scripts",
        "AWS",
        "EC2",
        "instances",
        "task",
        "object",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "UNIX",
        "environment",
        "development",
        "application",
        "Python",
        "commands",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "Automated",
        "Production",
        "tasks",
        "Jenkins",
        "building",
        "jobs",
        "deployment",
        "Used",
        "Apache",
        "CQ",
        "Team",
        "Foundation",
        "Server",
        "content",
        "management",
        "expressions",
        "pattern",
        "data",
        "base",
        "basis",
        "code",
        "CRUD",
        "operations",
        "MongoDB",
        "PyMongo",
        "module",
        "Improved",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "refactoring",
        "code",
        "base",
        "development",
        "Map",
        "application",
        "analysis",
        "purpose",
        "Puppet",
        "rspec",
        "unitsystem",
        "test",
        "analysis",
        "design",
        "application",
        "troubleshooting",
        "programming",
        "issues",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "Deployment",
        "web",
        "application",
        "Linux",
        "server",
        "Environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "XML",
        "MySQL",
        "JavaScript",
        "Backbone",
        "JS",
        "JQuery",
        "Mongo",
        "DB",
        "MS",
        "SQL",
        "Server",
        "JavaScript",
        "Git",
        "GitHub",
        "Linux",
        "Shell",
        "Scripting",
        "AJAX",
        "Python",
        "Developer",
        "Readinus",
        "Software",
        "Pvt",
        "Ltd",
        "Bengaluru",
        "Karnataka",
        "January",
        "August",
        "Responsibilities",
        "design",
        "development",
        "applications",
        "clients",
        "requirements",
        "applications",
        "CherryPy",
        "Flask",
        "Python",
        "frameworks",
        "web",
        "applications",
        "Google",
        "App",
        "Engine",
        "Learnt",
        "projects",
        "Jenkins",
        "Pandas",
        "python",
        "library",
        "data",
        "data",
        "structures",
        "datasets",
        "Pandas",
        "data",
        "frames",
        "email",
        "marketing",
        "campaigns",
        "web",
        "forms",
        "data",
        "database",
        "Python",
        "Django",
        "Framework",
        "ModelViewController",
        "MVC",
        "design",
        "pattern",
        "skills",
        "system",
        "Django",
        "CherryPy",
        "Flask",
        "Frameworks",
        "Python",
        "scripts",
        "Excel",
        "files",
        "XML",
        "configuration",
        "files",
        "IP",
        "access",
        "frequency",
        "lists",
        "data",
        "logs",
        "Performed",
        "development",
        "web",
        "initiatives",
        "usability",
        "HTML",
        "CSS",
        "work",
        "error",
        "functionality",
        "Enhance",
        "quality",
        "feel",
        "usability",
        "website",
        "Wrote",
        "Use",
        "Case",
        "diagrams",
        "Class",
        "diagrams",
        "Sequence",
        "Diagrams",
        "State",
        "Diagrams",
        "Collaborated",
        "team",
        "instructors",
        "programmers",
        "curriculum",
        "guidelines",
        "workshops",
        "logic",
        "manuals",
        "workbooks",
        "media",
        "reference",
        "purpose",
        "custom",
        "SQL",
        "queries",
        "procedures",
        "applications",
        "client",
        "phone",
        "calls",
        "emails",
        "developers",
        "Environment",
        "Python",
        "Django",
        "CherryPy",
        "Flask",
        "SQLite",
        "Google",
        "App",
        "Engine",
        "Jenkins",
        "Pandas",
        "HTML",
        "CSS",
        "Java",
        "Developer",
        "Bengaluru",
        "Karnataka",
        "June",
        "December",
        "Responsibilities",
        "Design",
        "development",
        "UI",
        "screens",
        "Add",
        "Update",
        "Lending",
        "Application",
        "Struts",
        "frame",
        "work",
        "business",
        "components",
        "JAVA",
        "JDBC",
        "Design",
        "development",
        "UI",
        "screens",
        "JSP",
        "Developed",
        "user",
        "registration",
        "login",
        "feature",
        "application",
        "process",
        "scratch",
        "Django",
        "user",
        "model",
        "Restful",
        "web",
        "service",
        "validation",
        "framework",
        "response",
        "user",
        "request",
        "JavaScript",
        "validation",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "modals",
        "form",
        "submissions",
        "jQuery",
        "Ajax",
        "JavaScript",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JQuery",
        "JavaScript",
        "Django",
        "framework",
        "database",
        "application",
        "development",
        "Environment",
        "Java",
        "Python",
        "Django",
        "J2EE",
        "JSP",
        "Oracle",
        "Eclipse",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Education",
        "Masters",
        "Skills",
        "HTML",
        "years",
        "JENKINS",
        "years",
        "PYTHON",
        "years",
        "CSS",
        "years",
        "LINUX",
        "years",
        "Unix",
        "years",
        "Git",
        "years",
        "JQuery",
        "years",
        "MySQL",
        "years",
        "years",
        "JSON",
        "years",
        "Django",
        "C",
        "Javascript",
        "Java",
        "CertificationsLicenses",
        "AWS",
        "Solution",
        "Architect",
        "Associate",
        "November",
        "November",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Operating",
        "systems",
        "Windows",
        "Linux",
        "Ubuntu",
        "UNIX",
        "Languages",
        "Java",
        "C",
        "C",
        "Python",
        "Perl",
        "SQL",
        "PLSQL",
        "Scripting",
        "CSS",
        "AJAX",
        "Java",
        "Script",
        "jQuery",
        "PHP",
        "Shell",
        "Scripting",
        "Analytics",
        "Tools",
        "JMP",
        "PRO",
        "SAS",
        "Tableau",
        "UCI",
        "NET",
        "Node",
        "XL",
        "MVC3",
        "MATLAB",
        "Markup",
        "HTML",
        "XML",
        "JSON",
        "Servers",
        "Apache",
        "Tomcat",
        "Apache",
        "Spark",
        "IBM",
        "Web",
        "sphere",
        "stack",
        "web",
        "services",
        "Databases",
        "Oracle",
        "SQL",
        "Apache",
        "Cassandra",
        "MongoDB",
        "IDEs",
        "Tools",
        "Eclipse",
        "Toad",
        "Sublime",
        "text",
        "Spyder",
        "PyCharm",
        "ETL",
        "Version",
        "Control",
        "CVS",
        "GitHub",
        "Methodologies",
        "tools",
        "Object",
        "Programming",
        "UML",
        "Agile",
        "Scrum",
        "Waterfall",
        "Deployment",
        "Tools",
        "Heroku",
        "Jenkins",
        "Ansible",
        "Redmine"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:02:30.884692",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Miami FL 8 years of strong experience in softwareIT industry using Java and Python in various domains such as healthcare banking Experience in working on various python packages such as NumPy SQL Alchemy matPlotlib Beautiful soup pickle Pyside SciPy PyTables Good involvement in creating web applications in Object Oriented Programming concepts like MultiThreading Exception Handling and Collections and executing Model View Control design utilizing Django Framework Experience in developing Web Services SOAP Restful in Python using XML JSON Hands on experience in using Shell scripting for automation by following Python PEP Hands on experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Experienced in working with serverside technologies including databases restful API and MVC design patterns Proficient in using editors like Eclipse sublime text NetBeans PyCharm Pyscripter spyder PyStudio and PyDev Used Pandas API to put the data as time series and tabular form for east timestamp data retrieval and manipulation and for statistical analysis Analyzed instrument pricing and modelling methodologies and documented how instrument prices move as change in market data source Experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Proficient in building Web User Interface UI using HTML DHTML XHTML AngularJS Hibernate CSSCSS3 Nodejs Backbonejs D3 jQuery that follows W3C Web Standards and are browser compatible Created UI screens for initiation and validation Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Used Django evolution and manual SQL modifications to retain all the data while site is in production Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Experience in Linux Bash Scripting and PEP guidelines in python Knowledge in Using Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Expertise in usage of pythonDjango Framework for developing web applications Expertise in developing web based open stack applications for large dataset analysis using Python and Django Used Python Unit test framework for developing and implementing the unit tests using Test driven approach Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Work Experience Sr Python Developer Raymond James Financial Saint Petersburg FL March 2017 to Present Responsibilities Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application Used UML Rational Rose to develop Usecase Class and Object diagrams for OOAOOD techniques Built database Model Views and APIs using Python for interactive webbased solutions Worked on python library for manipulating PCI config space under Linux Django Framework that was used in developing web applications to implement the model view control architecture Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Working on continuous integration and automation using Jenkins Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Placed data into JSON files using Python to test Django websites Lock mechanisms were implemented and the functionality of multithreading has been used Worked on Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval PythonDjango based web application Post gresql DB and integrations with 3rd party email messaging storage services Involved in Python OOP code for quality logging monitoring and debugging code optimization Designed dynamic and browser compatible pages using HTML5 CSS3 jQuery and JavaScript and Angular JS Responsible for analysing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Generated various graphs for business decision making using Python matplotlib library Tested various regular expressions in URL Dispatchers in Django Designed and created the database tables and wrote SQL queries to access PostgreSQL Deployed the project into Heroku and used GitHub version control system Used SOAP and Restful API for information extraction Modified existing webpages to enhance the usability Maintained Puppet rspec for testing various unitsystem automation schemes Designed framework for Remote communication using Socket Programming Bluetooth and Infrared and deployed the project into Jenkins using SVN version control system and used JIRA for tracking and updating the project issues Maintained Puppet for testing various unitsystem automation schemes and worked on Using Jenkins to deploy your Django application and run unit tests Extensive code reviewing using GitHub pull requests improved code quality and conducted meetings among peer Planning implementing and converting manual test cases to automation test cases Trained team members extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Sr Python Developer First American Bank Elk Grove IL December 2015 to February 2017 Responsibilities Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Developed Python based API RESTful Web Service to track the events and perform analysis using Django Developed entire frontend and backend modules using Python on Django Web Framework Worked on several python libraries like Python NumPy and matplotlib and used XML Web Services using SOAP to transfer information to the Credit Monitoring Systems Involved in Using Python Flask and AngularJS for the design development and deployment of the application Worked on Pandas API to put the data as time series and tabular format for easy timestamp data manipulation and retrieval Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Developed UDFs using python and also implemented graphs using python with big data analytics Design develop test deploy and maintain the website and used Django Database APIs to access database objects Wrote Python scripts to parse JSON documents and load the data in database Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented web applications in Flask frame works following MVC architecture Worked on front end frame works like CSS Bootstrap for development of Web applications Involved in deployment of project using AWS Unique skills in developing user friendly simple yet effective webbased applications Created a PythonDjango based web application using Python scripting for data processing MySql for the database and HTMLCSSJQuery and HighCharts for data visualization of the served pages Developed webbased applications using Python Django XML CSS HTML DHTML JavaScript and Jquery Successfully migrated the Django database from SQLite to MySql to PostgreSQL with complete data integrity Developed Merge jobs in Python to extract and load data into MySql database Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and Jquery Executed various MYSQL database queries from python using PythonMySql connector and MySqldb package Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Generated property list for every application dynamically using Python and created unit testregression test framework for workingnew code Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Environment Python 27 Django HTML5CSS MS SQL Server 2013 MySQL JavaScript Eclipse Linux Shell Scripting JQuery GitHub AngularJS Jira Sr Python Developer Transamerica Corporation Baltimore MD September 2014 to November 2015 Responsibilities Developed an embedded software data driven test automation framework in Python Developed Views and Templates with Python and using Djangos view controller and template language Website interface is created Implemented Business logic worked on data exchange processed XML and HTML using Python 27 and its familiar framework Django Designed and Developed User Interface using HTML CSS JavaScript JQuery AngularJS Bootstrap and JSON Developed Django dashboard with custom look by using the study of Django admin site and dashboard Automated data movements using Python scripts Worked on Selenium testing framework Written Shell Scripting for automation Used Pandas API to put the data as time series and tabular format for data manipulation and retrieval For manipulation of data from the database various queries using SQL were written and created a database using MySQL Deployed the project into Jenkins using GIT version control system Involved in splitting validating and processing of files Created and populated digital brochures using PageTurnPro and built photo galleries on website in the Django CMS and also using Django CMS plugin Configuring SSO for different applications in different domains with Cookie Provider and troubleshooting issues related to them Maintenance and development of a hightraffic and demand site and platform running on a customrolled Django CMS Implemented automate scripts to back up the old records using MongoDB export command and transfer these backup files into backup machine using ftplib Maintaining multiple copies of data in different database servers using MongoDB Replication concept Worked with Linux shell commands and command line utilities Developed and configured test automation networks and execute stability and performance tests Responsible for debugging and troubleshooting the web application Environment Python 27 Django DjangoCMS SSO DjangoCMS plugins MySQL MongoDB Linux Shell Scripting Pandas API Selenium HTML CSS JavaScript JQuery AngularJS Bootstrap JSON Sr Python Developer FM Global Johnston RI November 2013 to August 2014 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the frontend part of the web application using various web technologies like HTML JavaScript Angular JS jQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Interactive in providing change requests trouble reports and requirements collection with the client Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Used NumPy for Numerical analysis for Insurance premium Used Robot Test automation framework for Testing of the GUI of the application Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all its commands Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Used many regular expressions to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MongoDB using PyMongo module Improved code reuse and performance by making effective use of various design patterns and refactoring code base Involved in development of a Map based application for integral analysis purpose Updated and maintained Puppet rspec unitsystem test Involved in analysis and design of the application features Worked on debugging and troubleshooting programming related issues Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployment of the web application using the Linux server Environment Python 27 Django 14 HTML5 CSS XML MySQL JavaScript Backbone JS JQuery Mongo DB MS SQL Server JavaScript Git GitHub AWS Linux Shell Scripting AJAX JAVA Python Developer Readinus Software Pvt Ltd Bengaluru Karnataka January 2012 to August 2013 Responsibilities Responsible for the design and development of different webbased applications based on clients requirements Developed applications using CherryPy Flask Python frameworks Deployed web applications to Google App Engine Learnt to deploy projects using Jenkins Utilized Pandas python library for analyzing data and data structures Managed large datasets using Pandas data frames and SQLite Designed email marketing campaigns and also created responsive web forms that saved data into a database using Python Django Framework Learned about the ModelViewController MVC design pattern Learned new technical skills as required for the system like Django CherryPy and Flask Frameworks Developed Python scripts to read from Excel files generate XML configuration files and for generating IP access frequency lists in different data logs Performed frontend development for web initiatives to ensure usability using HTML and CSS Tested all completed work to ensure proper and error free functionality Enhance quality feel and usability of consumerfacing website Wrote Use Case diagrams Class diagrams Sequence Diagrams and State Diagrams Collaborated with a team of instructors and programmers to develop the curriculum and guidelines for workshops to teach the logic of programming Designed manuals workbooks and other printed media for reference purpose Created and ran custom SQL queries and stored procedures and also created applications to stored client phone calls and emails that were routed to various developers Environment Python 2627 Django 12 CherryPy Flask SQLite Google App Engine Jenkins Pandas HTML CSS Java Developer Bengaluru Karnataka June 2009 to December 2011 Responsibilities Involved in Design and development of UI screens for Add and Update Lending Application using Struts frame work Involved in developing the business components using JAVA and JDBC Design and development of UI screens using JSP Developed and implemented the user registration and login feature for the application process from scratch by extending Django user model Used Restful web service calls for the validation Worked with AJAX framework to get the asynchronous response for the user request and used JavaScript for the validation Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed userfriendly modals for the form submissions using simplemodaljs jQuery Ajax and JavaScript Designed and developed the UI of the website using HTML AJAX CSS JQuery and JavaScript Used Django framework for database application development Environment Java Python Django J2EE JSP Oracle Eclipse MySQL Linux HTML CSS AJAX JavaScript Education Masters Skills HTML 8 years JENKINS 7 years PYTHON 8 years CSS 8 years LINUX 7 years Unix 6 years Git 7 years JQuery 8 years MySQL 7 years Ajax 8 years JSON 7 years Django C Javascript Java CertificationsLicenses AWS Certified Solution Architect Associate November 2017 to November 2019 Additional Information Technical Skills Operating systems Windows Linux Ubuntu UNIX Languages Java C C Python 332724 Perl SQL and PLSQL Scripting languages CSS AJAX Java Script jQuery PHP Shell Scripting Analytics Tools JMP PRO SAS Tableau UCI NET Node XL MVC3 MATLAB Markup languages HTML XML JSON Servers Apache Tomcat Apache Spark IBM Web sphere open stack RESTful web services Databases Oracle My SQL Apache Cassandra MongoDB IDEs Tools Eclipse Toad Sublime text Spyder PyCharm ETL Version Control CVS GitHub Methodologies tools Object Oriented Programming UML Agile Scrum Waterfall Deployment Tools Heroku Jenkins Ansible Redmine",
    "unique_id": "18eb8ed8-016b-4f4e-97d6-23a9fd8da1a2"
}