{
    "clean_data": "Sr JavaJ2EE Developer Sr JavaJ2EE span lDeveloperspan Sr JavaJ2EE Developer Software Criollo Over 8 years of experience in developing Webbased Applications Enterprise Applications and Client Server Applications in JAVAJ2EE environment coupled with RDBMS exposure in ntier applications Involved in complete SDLC life cycle of this project includes POC proof of concept Design documents Development testing and production Strong experience in Spring Framework Core Boot MVC AOP Test REST Security Data and Transaction Extensive experience in Web application development using JDBC Servlets JSP JSTL Java Beans MVC Struts JSON Swing RMI EJB JSF JNDI JMS SOA SOAP Spring Hibernate MyBatis JavaScript Angular Js AJAX JAXRPC XML and HTML Experienced in Multithreading and Concurrent Programming Have good understanding on JavaScript frameworks like angular js and backbone js Experience in Object Oriented Design analysis with solid analytical problem solving and decisionmaking skills Proficient in development of applications using JAVA and J2EE technologies with experience in JSP Servlets Struts and Hibernate frameworks Experience using design patterns including MVC Singleton Frontend Controller Service Locator and Decorator Experience in developing applications using Software Methodologies like Agile Waterfall Iterative Development Solid understanding of Data Structures Algorithms and ObjectOriented design concepts UML Use Cases Sequence and Class diagrams Rational rhapsody Used SOLR Dependency Injection DI or Inversion of Control IOC Wide experience in Core Java JavaScript JSP Java Beans Angular Servlets Ajax JQuery JDBC XML CSS XHTML HTML Extensive experience in XML related technologies such as XML XSL XHTML XSLT and JAXB Experience in using the databases such as MySQL MS SQL Server DB2 and Oracle 9i10 g 11 g Good Understanding of RDBMS through Database Design writing queries and stored procedures using databases like Oracle and SQL Server Experience in deploying systems on Amazon Web Services Amazon EC2 Amazon S3 Amazon RDS Developed and deployed J2EE applications on both Web and Application Servers including Apache Tomcat Web Logic JBoss and IBM Web Sphere Experienced in writing ServerSide Components Enterprise Java Beans EJB Session and Entity Beans Remote Method Invocation RMI for distributed computing applications access remote servers and invoking database with Java Database Connectivity JDBC Thorough knowledge in Unit testing with JUnit 3840 Experience in working with Ant Maven and Gradle as Dependency Management and build tool in single module and multi module environment Possess excellent leadership qualities and has good problemsolving capabilities Efficiency in management skills communication and ability to work under strict deadlines Work Experience Sr JavaJ2EE Developer Software Criollo Miami FL January 2018 to Present Responsibilities Participating in Requirement Analysis and technical assessment during project life cycle Used Agile methodology and attended daily and weekly SCRUM meetings to update working status etc Developed application UI screens using HTML5 CSS3 JavaScript Bootstrap Babel Redux and NodeJS Created reusable components used across various modules using ReactJS and JSX Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Created views to hook up models to the Document Object Model DOM and synchronize data with the server as a single page application SPA using React JS and used Webpack as the module bundler Used ReduxPromise in application to retrieve data from BackEnd and to also perform RESTFUL services Developed Redux actions store and reducer functions to implement unidirectional data flow in the application Used NodeJS to run Grunt tasks and build properly the project compile minify etc Extensively used factory object in NodeJS to use the common functions in different views Used Scala templating for rendering standard markup on pages along with UI builds made with ReactJS on nginx Analyzed the SQL scripts and designed the solution to implement using Scala Used J2EE design patterns like MVC Singleton Factory DAO DTO and Service Locator etc Developed RESTful web services using Jersey Spring framework and JAXRS Created REST based web services by establishing links using HATEOAS from Spring based application Used Spring core for dependency injectioninversion of control IOC and integrated with Hibernate Spring Boot Microservices were developed with microservice architecture using REST and Apache Kafka Installation configuration and administration of JBOSS EAP 56 in Red Hat Linux environment Built JBOSS scalable high availability clustered Platform architecture Monitored service health check from Spring Boot admin console using swaggered UI registered micro services Performed Load Balancing among the servers was implemented by using Spring Ribbon Implemented Fail Safe and circuit breaker patterns in Spring Boot Micro Service applications using Hystrix Developed Apache Camel Routes for mediation and used various Enterprise integration patterns to connect to other systems and used Spring JPA transaction manager to manage transactions in the application Used Eclipse based Spring Tool Suite STS for development and debugging Spring Boot applications Microservices and deployed in to Amazon Web Services AWS lambda Expression Enhanced existing REST Application Program Interface API by adding new operations using Spring Jersey and created documentation for webservices using Swagger Provided cloud environment for Microservices using Spring cloud Netflix Eureka server Designing and developing Online client windows API using Swing classes Deployed Docker contained Spring boot micro services in to spring EC2 container service using AWS admin console and used lambda to run applications in Amazon Web Services AWS console Experience with building Docker Images and running them on Docker container Worked with Apache Tomcat 8 and NodeJS servers to deploy and configure Java APIs and frontend modules Experience with KORN based scripts for triggering UNIX and J2EE based tasks Uploaded files in to Oracle database using CLOB and BLOB Loading data from flat files into Oracle 11g database using SQL loader and UNIX script Used HQL Named Parameters Named Queries and Interfaces such as Expression Query and Criteria for implementation of Hibernate template and extensively used Hibernate Cache Experience on Hibernate mappings EH cache Lazy loading transactions and Lockings Used MongoDB third party tools and mongobuilt in binaries to monitor and analyze the performance Created Test automation framework using Selenium web driver Configured Protractor test classes and Selenium grid end to end testing on the front end Worked with several testing frameworks such as JUnit Easy Mock Mockito and Power Mock Used JUnit for unit testing and implemented with Log4j to provide logs of exceptions Helped provision and manage AWS Linux servers with Ansible Developed Python OO Design code for logging and debugging code optimization Used Redis for creating background jobs placing those jobs on multiple queues and processing them Using Jenkins and Glu for building and deploying the projects and worked on Stash GIT repository software Used Maven for build and deployment to Tomcat server and Splunk as log monitoring Involved in code reviews and unit testing using JUnit framework Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug Tracking and Project Management Environment Java 80 Spring 4 Hibernate 42 Spring Boot JPA JavaScript ReactJS Scala HTML 50 CSS3 Nodejs ReactJS Bootstrap Requirejs Jade NPM Babel Web pack Swing Python UNIX Apache Tomcat STS Oracle 11g MongoDB Log4J JUnit Easy Mock JBPM Selenium XML Web Services SOAP UI Kafka Netflix Eureka Spark Netflix Ribbon Ansible Splunk AWS Gradle Git PLSQL Docker HATEOAS Curl Sr Java Developer John Deere Boston MA April 2017 to December 2017 Responsibilities Involved in preparation of the technical design documents including class diagrams Sequence diagrams flow charts process flow diagrams etc Involved in Agile Sprint methodologies to do requirements gathering analysis and planning development testing Code written in Java with features like Collections Exception Handling Serialization Strong understanding and excellent skill in developing designing professional Ajax driven elegant enterprise web application using Ajax Flex Action Script and JavaScript CSS HTML Custom Tag Libraries JSF JQuery Dojo ExtJs and various java design patterns Developed UI pages using HTML CSS Java Script JSP jQuery JSTL Taglibs and JSON The project involved extensive use of the different spring framework features including Spring ORM and Spring Templates Involved in the Configuration of Spring services in applicationContextxml Implemented the application using Spring IOC Spring MVC Framework Spring Batch Spring Boot and handled the security using Spring Security Written java classes for developing user interface by using OOPS concepts multithreading inheritance polymorphism and collection API Used Spring for business layer classes Involved in developing code for obtaining bean references from Config file Experience in Hibernate which includes integrating legacy databases writing custom CRUD statements integrating stored procedures and functions and performed polymorphic associations Designed and developed logging components using Apache Log4J to log messages and errors side changes followed coding guidelines while implementing the application Used Scala templating for rendering standards markup across all the pages along With UI builds made with ReactJS Used Apache CXF to develop REST Service and SOAP UI for testing web service for server Proficient in developing Web Services related technologies frame works WSDL SOAP REST AXIS and Jersey SOAP UI and generating clients client using Eclipse for Web Services consumption Worked on variety of Frontend JavaScript frameworks like AngularJS BackboneJS ReactJS JQuery JQuery UI and good knowledge in EmberJS Written SQL script and executed in Oracle 11g database Used SVN and GIT for source code version control Designed and developed UI screens using Struts 2 DOJO JavaScript JSP HTML DOM CSS and AJAX Environment Java Servlets JNDI HTML JavaScript CSS XML DOM XSD XSLT AJAX JQUERY JAXP JAXB Spring IOC Spring MVC Spring AOPSpringboot Spring cloud Camunda BPM DOJOHibernate HQL RAML MMC Active MQ Apache CXF JAXWS Jenkins Jboss server EMMA SVN JUNIT log4j Maven Docker sprint scrum Oracle 11g SrJava Developer Aspect Software Phoenix AZ April 2016 to 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC and worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings Developed UI using HTML5 CSS3 JavaScript Bootstrap JQuery Angular JS and Node JS Built AngularJS modules controllers pop up modals and file uploaders Created reusable directives factories and services in AngularJS Used Backbonejs and ReactJS to create Controllers to handle events triggered by clients and send request to server Involved in writing Java API for Amazon Lambda to manage some of the AWS services Used plugin development for RCP version for developing the layouts like Grid Layout and Fill out for RCP Designed and implemented application using Spring Boot Spring MVC Spring IOC Spring Annotations Spring AOP Spring Transactions Spring HATEOAS and Spring JDBC Implemented the authentication and authorization of the application using Spring Security and Oauth2 Designed and developed Microservices business components and RESTful service endpoints using Spring boot Implemented RESTful and SOAP based web services using for JAXRS and JAXWS respectively Implemented firsthand the bestworst practices for integrating Microservices into existing system architecture Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features Prepared calls through Hibernate and Spring JDBC for Interacting with the Database Worked on integrated Hystrix dashboard to monitor spring microservices using Circuit Breaker Implemented Multithreading Concurrency Exception Handling and Collections whenever necessary Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances Participated in troubleshooting issues on AWS Netflix Eureka and Cloud environments Participated in creation of Spring Configurations using Java8 features Lambda expressions Streams filters Worked Docker container management along with volumes container based DB and services Docker Artifactory configuration and setup Worked with Spring Ribbon and Kafka broker service to handle heavy traffic Experience in writing complex PLSQL queries using joins Stored Procedures Functions Triggers Cursors and indexes in Oracle DB Installed and deployed monitoring solution with Splunk services Performed data extraction and loading the JSON data with the serverside content in to the Mongo DB Configured JMS Server setup and DB Connection pool setup and deployed Returned items in Web Sphere Server Used Active MQ to communicate with controller and used service layer to implement the business logic Implemented Batch jobs using Spring Batch created various item readers item writers and item processors Involved in support for end to operations support for OSSBSS Business Support System identify gaps and propose solutions and manage issue resolution Used UNIX shell scripts to searchmodify files Validations are done using SoapUI and Ready API testing tool framework in different environments Deployed and tested the application on Web Sphere Application Server Developed test cases for unit testing in the integration layer using Mockito framework Setup the CI and CD process for the application using the Jenkins Implemented configured and customized JIRA issue tracking software with agile plugin across all company functions Worked on Log4J to validate functionalities and JUnit for unit testing Used GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment Java18 J2EE HTML5 CSS3 Bootstrap JQuery Angular JS ReactJS JavaScript Node JS Eclipse Rich Client Platform Spring IOC Spring MVC Spring Security Spring Boot Spring Batch Spring HATEOAS Spring Data Hibernate Active MQ RESTful Postman SOAP Micro Service AWS EC2 Docker Mongo DB Oracle DB Maven STS Web Sphere Application Server Mockito JMS UNIX Jenkins JIRA log4j and GIT Sr JavaJ2EE Developer United Health Group Minnetonka MN November 2014 to March 2016 Responsibilities Created use case diagrams in UML using Rational Rose Reengineered the application with screens in JSP based on Struts framework Involved in design applications using J2EE This architecture employs a ModelViewController design pattern Participated in Agile and having daily SCRUM meeting for progress reporting and task distributing Involved in Core Java coding by using Java APIs such as Collections Multithreading Exception Handling Generics Enumeration and Java IO to fulfill the implementation of business logic Configured the xml files for Open Source Spring 3 Framework to fulfill the Proxy Pattern Configured the xml files for Hibernate 3 and applied its ORM to enable the data transactions between POJO and Oracle Database using caching on SessionFactory as well as caching on query Responsible for the overall project development of Fund module Flex41 version wrote the CRUD operations of Mutual Funds and Financiers list using iBATIS and DB2 Developed XML files DTDs Schemas and parsing them by using both SAX and DOM parsers Wrote roll out procedures and plans Environment was mixed with Windows and XML Hbase NoSql XSLT Developed Web Applications using HTML and parsed data in XML format using SAX and loaded into database Responsible for creating complex SQL queries stored procedure and analyzed the tables in MySQL database Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services route providers and filter to make the data searchable and sortable Worked with NoSql Databases like Apache Cassandra Mongo DB and Dynamo DB Used a custom framework sitting on the top of Nodejs and has used a lot of Clients side JavaScript plugins Developed FormJava Beans Spring Controller Classes and configured with the corresponding JSP pages Used Spring tag library for form data binding themes displaying validation errors Integration of Spring Portlet Framework with the Flex based custom components Used Hive QL Map Reduce Cassandra bulk loads Java Web services UNIX Shell Scripts Active MQs Used Spring Inversion of Control and Transaction Management in the GUI for Maintenance Screens Designed and Developed the UI using PrimeFaces JSF libraries and Javascript Designed REST API for logging front end errors occurring in Angular JS Tableau dashboards and those logs were harvested and reported through Elastic search tools Extensively used the JSON objects with AJAX for UI displays Automated AWS deployments with shellAnt scripts and connected test environments with hosts used for builds Creating Stored Procedure and fine tuning the existing procedure to handle huge amount of transaction Worked on Spring Quartz for scheduling tasks like generating monthly reportspolicies for customers Trace errors in the Glassfish Server log files to find the location of an existing problem Involved in configuring Hibernate mapping filesannotations and POJO objects Used Hibernate Transaction Management Hibernate Batch Transactions Hibernate cache concepts Developed data abstraction layer using Hibernate ORM with spring support and JDBC driven components Designed and developed Restful Web services using spring framework Data communication between various events in the ordering and fulfillment systems is developed using SOAP Designed Developed and Implemented document transformation applications using XML Spy tool Used Bootstrap to create a responsive website that fit all users and devices from desktop to tablet mobile phone Developed Stored Procedures and triggers for database intensive tasks Created indexes and referential constraints for performance and data integrity Log 4J was used to monitor the error logs and used GIT as version control tool Extensively worked on performance tuning of SQL Queries to improve the performance of the daily and monthly jobs Used JUnit for Unit testing and Maven for build Environment J2EE Java Spring framework Spring MVC JSP 20 JSF Servlets 23 Hibernate AJAX Web services AWS SOAP XML Java Beans Angular JS Knockout JS XStream UNIX iBATIS Glassfish Apache POI Ext JS jQuery JavaScript Oracle 11g IBM RAD NoSQL Websphere 70 Agile Methodology Design Patterns REST Apache Camel CVS Mongo DB Apache Maven JUnit HTML Unit Testing XSLT HTMLDHTML JavaJ2EE Developer King Fisher Airlines Bengaluru Karnataka June 2013 to October 2014 Responsibilities Prototyped designed and developed CCIS application framework complying with SOA architecture This was reused in many of new applicationsprojects in CCIS department significantly reducing timecost Created MULE ESB artifact and configured the MULE config files and deployed Used Angular JS for client while server validation through Expression Language Built published and consumed REST web services supporting both XML and JSON to perform tasks such as appointment cancellation technician job management for DispatchTechIVR and Call Reduction modules Developed SOAP web services for TSG UI and Outage Board applications Used JAXB for marshalling and unmarshalling of Java objects to XML and vice versa Used SOAP UI tool for testing and Liquid XML editor to validate XML documents against XSDs Used Jquery Angular JS JSP Javascript HTML CSS and JSTL for the frontend modules of TechIVR Provided the support for integrating the RESTful web services with clients Performed unit testing using JUnit and Integration testing using IVR system Invovled in creating Restful web services using JAXRS and JERSEY tool Developing the orchestrating of service through ESB calls to provide APIs to the service portal Applied OO design concept and design patterns such as DAO Singleton Factory Business Delegate and Service Locator to improve the existing JavaJ2EE based code base Rearchitected refactored and performance tuned a WebLogic and J2EE based CCIS call Reduction application which previously came down almost daily became a true 24x7 application at CCIS JBOSS ESB development and providing necessary inputs to the service portal Multitasked by gathering business requirements from user duration and feasibility of requests and working on other projects by resolving issues Environment Java J2EE Junit JDK 15 Spring core Spring MVC Hibernate SOAPRest Web services Ajax XML jQuery HTML CSS TCServer SVN Maven Jenkins Splunk SFX MAX SEED Oracle Software Developer Tata Docomo Hyderabad Telangana October 2011 to May 2013 Responsibilities As a team member understood the Business Design Development and Testing for Closing and Funding Module Involved in System design using UML Use case Class and Sequence diagrams created using Rational Rose Involved in project migration using Struts 20 web framework based on MVC2 Architecture Served integral role in analyze design develop and implement new requirements Used Java Beans Servlets Action classes Action Forms as Model JSP Struts tag libraries Custom Tags JSTL Tiles as view Action Servlet as a Controller and jQuery Implemented Design Patterns Business Delegate Session Faade DAO Value Object Proxy Service Locater Created several custom tags for JSP for maximum reusability of user interface components Participated in several design sessions to create common development strategies eg Error handling exceptions performance improvement practices session management etc Designed and developed several Servlets JSPs and JAVA classes for presentation layer Extensively worked on ILOG JRules engine which integrate with J2EE application Responsible for writing business rules and accessing firing the rules in Session Beans Design implements the server side Business and persistent logic using EJB Implemented application communication through asynchronous messaging service using MDB Followed Test Driven Development TDD Scrum concepts of the Agile to produce high Quality Software Wrote Oracle SQL queries and Stored Procedures using SQLPLSQL Responsible for code reviews integrated all the modules using WebLogic Application Server Implemented Junit Framework for the entire application Environment Java jdk15 J2EE JSP Servlets Struts EJB XML Oracle 10g UNIX Weblogic10 and T Line Framework Core Java Developer Axis bank Hyderabad Telangana August 2010 to September 2011 Responsibilities Involved in prototyping proof of concept design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Designed and developed the persistence tier using Hibernate framework Designed and developed front view components using JSP and HTML Involved in developing various reusable Helper and Utility classes using Core Java which are being used across all the modules of the application Developed Interactive web pages using AJAX and JavaScript Implemented Core Java concepts like Polymorphism Inheritance Multithreading etc Developed reusable utility classes in core java for validation which are used across all modules Developed Java classes for implementing Business logics using EJB Stateless session entity message driven beans Deployed and tested the application with web server Tomcat WebSphere Configured and tested the application with database server Oracle 10g and MySQL Helped in database design and tuning Created stored procedures Views in the Database Environment JDK 14 Core Java Multithreading Collections JSP JSTL Servlets EJB 30 XML HTML Java Script AJAX SOAP WSDL UML JDBC Shell Scripting JUnit log4j JMS Apache Tomcat WebSphere Application Server Oracle 10g Database Windows NT UnixLinux Technical Skills Languages Java 8 J2EE SQL and PLSQL Enterprise Java JSP Servlet JNDI JDBC Java security and JSF MarkupXML Technologies XML XSD XSLXSLT SAXDOM JSON Web Technologies HTML5 CSS3 Java Script JQuery Ajax Bootstrap AngularJS ReactJS and NodeJS ExpressJS Tools Framework Struts Spring Hibernate Spring MVC Spring HATEOAS Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J Spring Boot Spring Cloud Spring Batch Spring Security Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Jersey Micro Services Architecture WebApp Servers Web Sphere Apache Tomcat JBoss WebLogic Databases Oracle My SQL SQL Server IBM DB2 Mongo DB and Dynamo DB Development Tools Eclipse Net Beans IntelliJ RAD and Spring Tool SuiteSTS OR mapping Hibernate MyBatis and JPA Testing Tools Others JUnit Soap UI Mockito Log4j and JIRA Version Control CVS SVN GIT Rational Clear Case Methodologies Agile Scrum Waterfall OS Environment Windows UNIX Linux and Mac Cloud Technologies AWS EC2 S3 Elastic Beanstalk EBS Elastic Load Balancing ELB APIGateway Cloud Foundry Skills Api Linux Unix Load balancing Elastic beanstalk Ebs Ec2 Mac",
    "entities": [
        "IVR",
        "System",
        "MQ Apache CXF JAXWS Jenkins Jboss",
        "the Database Worked",
        "EJB XML Oracle",
        "AJAX",
        "GUI",
        "MN",
        "ORM",
        "Nodejs",
        "Multithreading",
        "WebSphere Application",
        "Karnataka",
        "Validations",
        "ReduxPromise",
        "UNIX",
        "XSD XSLT",
        "Spring Templates Involved",
        "Applied OO",
        "JSF MarkupXML Technologies XML XSD XSLXSLT SAXDOM JSON Web Technologies HTML5",
        "Spring Tool Suite STS for development",
        "Criteria",
        "DAO Singleton Factory",
        "the Mongo DB Configured",
        "OSSBSS Business Support System",
        "Rational Rose Reengineered",
        "the Configuration of Spring",
        "DB Connection",
        "IBM",
        "Agile Sprint",
        "Spring Jersey",
        "JMS Apache Tomcat",
        "Amazon Web Services AWS",
        "WebLogic Application Server Implemented Junit Framework",
        "MULE",
        "XML",
        "BackEnd",
        "Created MULE",
        "Restful Web",
        "Telangana",
        "Spring Ribbon Implemented Fail Safe",
        "JAXWS",
        "WebLogic",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "NodeJS",
        "JSF Servlets",
        "Responsibilities Created",
        "Shell Scripts Active",
        "CLOB",
        "JavaJ2EE",
        "Amazon",
        "Spring Boot",
        "Worked Docker",
        "GIT Sr JavaJ2EE Developer United Health Group Minnetonka",
        "Interface Implementation",
        "Tracking and Project Management Environment Java",
        "SQL Server",
        "Jersey Spring",
        "Spring boot micro services",
        "Stored Procedures",
        "JDBC Servlets JSP JSTL",
        "Developed",
        "Online",
        "Rational Rose Involved",
        "RCP",
        "Possess",
        "KORN",
        "Mockito",
        "Spring MVC",
        "MDB Followed Test Driven Development TDD",
        "Expression Query",
        "Java Script AJAX SOAP WSDL UML JDBC Shell Scripting JUnit",
        "RAD",
        "UML",
        "Restful",
        "Ant Maven",
        "Sequence",
        "MQ",
        "JSP Servlets Struts",
        "XSLT HTMLDHTML JavaJ2EE Developer King Fisher Airlines",
        "Gradle as Dependency Management",
        "Oracle Software Developer Tata Docomo Hyderabad",
        "HTML5",
        "SOA",
        "AGILE",
        "Spring Security",
        "SessionFactory",
        "Jersey Micro Services",
        "JSP",
        "ServerSide Components",
        "TSG UI",
        "JSP Servlets Struts and Hibernate",
        "MVC Singleton",
        "ObjectOriented",
        "JAXRS Created",
        "BodyParser NPM",
        "SQL Queries",
        "IOC",
        "Oracle DB Installed",
        "UMLRational Rose Designed",
        "Web Sphere Application Server Developed",
        "Jersey SOAP UI",
        "DOM",
        "HTML Experienced",
        "Dynamo",
        "Views",
        "Postman SOAP Micro Service AWS EC2",
        "Config",
        "REST Service",
        "Used Java Beans Servlets Action classes Action Forms as",
        "Oracle Database",
        "Database Design",
        "Oracle 10",
        "Agile",
        "EJB",
        "GIT",
        "MMC Active",
        "Maven STS",
        "MVC Hibernate",
        "Present Responsibilities Participating in Requirement Analysis",
        "JIRA Version",
        "Spring Boot Micro Service",
        "API",
        "DispatchTechIVR",
        "Object Oriented Design",
        "Hibernate 3",
        "POJO",
        "Drools",
        "Created",
        "the Document Object Model DOM",
        "AWS",
        "Spring Ribbon",
        "Server",
        "Sr JavaJ2EE Developer Sr JavaJ2EE",
        "Developed Interactive",
        "Oracle",
        "Angular JS Tableau",
        "CCIS JBOSS ESB",
        "React JS",
        "SAX",
        "EJB Stateless",
        "REST Application Program Interface API",
        "Collections Exception Handling Serialization Strong",
        "Maven Docker",
        "RESTFUL",
        "SQL",
        "jQuery Implemented Design Patterns Business Delegate Session Faade DAO Value Object Proxy Service Locater Created",
        "Log4j",
        "GitHub",
        "Amazon Web Services",
        "CCIS call Reduction",
        "J2EE",
        "DOM CSS",
        "UML Use",
        "JAXRS",
        "Custom Tags JSTL Tiles",
        "Integration of Spring Portlet Framework",
        "HTML CSS Java Script JSP jQuery JSTL Taglibs",
        "SQLPLSQL Responsible",
        "T Line",
        "CI",
        "Schemas",
        "Data Structures Algorithms",
        "Hibernate Cache",
        "CCIS department",
        "Stash GIT",
        "DB",
        "CRUD",
        "HTML Involved",
        "JAVA",
        "Maven",
        "Hystrix",
        "Performed",
        "Hibernate",
        "Polymorphism Inheritance Multithreading",
        "Hibernate Spring Boot Microservices",
        "the Proxy Pattern Configured",
        "JavaScript",
        "Tomcat WebSphere Configured",
        "Helper and Utility",
        "UI",
        "JBOSS",
        "UI registered micro services",
        "Selenium",
        "Circuit Breaker Implemented Multithreading Concurrency Exception Handling and Collections",
        "Maven Jenkins Splunk",
        "SrJava Developer Aspect Software",
        "Hibernate MyBatis",
        "TCServer",
        "the Business Design Development and Testing for Closing and Funding Module Involved",
        "HATEOAS",
        "Mac Cloud Technologies AWS",
        "Trace",
        "MVC2 Architecture Served",
        "SVN",
        "jQuery",
        "Tomcat",
        "SPA",
        "REST",
        "Boston",
        "Used Hibernate Transaction Management Hibernate Batch Transactions Hibernate",
        "Used HQL Named Parameters Named Queries and Interfaces",
        "Miami",
        "Stored Procedures Functions Triggers Cursors",
        "Hystrix Developed Apache Camel Routes",
        "Outage Board",
        "Developed UI",
        "DTO and Service Locator etc Developed",
        "the Database Environment",
        "Inversion of Control IOC Wide",
        "Sprint",
        "Integration",
        "Mongo DB",
        "JSX Involved",
        "UML Use Cases Sequence",
        "ESB",
        "Node",
        "Created Test"
    ],
    "experience": "Experience in Object Oriented Design analysis with solid analytical problem solving and decisionmaking skills Proficient in development of applications using JAVA and J2EE technologies with experience in JSP Servlets Struts and Hibernate frameworks Experience using design patterns including MVC Singleton Frontend Controller Service Locator and Decorator Experience in developing applications using Software Methodologies like Agile Waterfall Iterative Development Solid understanding of Data Structures Algorithms and ObjectOriented design concepts UML Use Cases Sequence and Class diagrams Rational rhapsody Used SOLR Dependency Injection DI or Inversion of Control IOC Wide experience in Core Java JavaScript JSP Java Beans Angular Servlets Ajax JQuery JDBC XML CSS XHTML HTML Extensive experience in XML related technologies such as XML XSL XHTML XSLT and JAXB Experience in using the databases such as MySQL MS SQL Server DB2 and Oracle 9i10 g 11 g Good Understanding of RDBMS through Database Design writing queries and stored procedures using databases like Oracle and SQL Server Experience in deploying systems on Amazon Web Services Amazon EC2 Amazon S3 Amazon RDS Developed and deployed J2EE applications on both Web and Application Servers including Apache Tomcat Web Logic JBoss and IBM Web Sphere Experienced in writing ServerSide Components Enterprise Java Beans EJB Session and Entity Beans Remote Method Invocation RMI for distributed computing applications access remote servers and invoking database with Java Database Connectivity JDBC Thorough knowledge in Unit testing with JUnit 3840 Experience in working with Ant Maven and Gradle as Dependency Management and build tool in single module and multi module environment Possess excellent leadership qualities and has good problemsolving capabilities Efficiency in management skills communication and ability to work under strict deadlines Work Experience Sr JavaJ2EE Developer Software Criollo Miami FL January 2018 to Present Responsibilities Participating in Requirement Analysis and technical assessment during project life cycle Used Agile methodology and attended daily and weekly SCRUM meetings to update working status etc Developed application UI screens using HTML5 CSS3 JavaScript Bootstrap Babel Redux and NodeJS Created reusable components used across various modules using ReactJS and JSX Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Created views to hook up models to the Document Object Model DOM and synchronize data with the server as a single page application SPA using React JS and used Webpack as the module bundler Used ReduxPromise in application to retrieve data from BackEnd and to also perform RESTFUL services Developed Redux actions store and reducer functions to implement unidirectional data flow in the application Used NodeJS to run Grunt tasks and build properly the project compile minify etc Extensively used factory object in NodeJS to use the common functions in different views Used Scala templating for rendering standard markup on pages along with UI builds made with ReactJS on nginx Analyzed the SQL scripts and designed the solution to implement using Scala Used J2EE design patterns like MVC Singleton Factory DAO DTO and Service Locator etc Developed RESTful web services using Jersey Spring framework and JAXRS Created REST based web services by establishing links using HATEOAS from Spring based application Used Spring core for dependency injectioninversion of control IOC and integrated with Hibernate Spring Boot Microservices were developed with microservice architecture using REST and Apache Kafka Installation configuration and administration of JBOSS EAP 56 in Red Hat Linux environment Built JBOSS scalable high availability clustered Platform architecture Monitored service health check from Spring Boot admin console using swaggered UI registered micro services Performed Load Balancing among the servers was implemented by using Spring Ribbon Implemented Fail Safe and circuit breaker patterns in Spring Boot Micro Service applications using Hystrix Developed Apache Camel Routes for mediation and used various Enterprise integration patterns to connect to other systems and used Spring JPA transaction manager to manage transactions in the application Used Eclipse based Spring Tool Suite STS for development and debugging Spring Boot applications Microservices and deployed in to Amazon Web Services AWS lambda Expression Enhanced existing REST Application Program Interface API by adding new operations using Spring Jersey and created documentation for webservices using Swagger Provided cloud environment for Microservices using Spring cloud Netflix Eureka server Designing and developing Online client windows API using Swing classes Deployed Docker contained Spring boot micro services in to spring EC2 container service using AWS admin console and used lambda to run applications in Amazon Web Services AWS console Experience with building Docker Images and running them on Docker container Worked with Apache Tomcat 8 and NodeJS servers to deploy and configure Java APIs and frontend modules Experience with KORN based scripts for triggering UNIX and J2EE based tasks Uploaded files in to Oracle database using CLOB and BLOB Loading data from flat files into Oracle 11 g database using SQL loader and UNIX script Used HQL Named Parameters Named Queries and Interfaces such as Expression Query and Criteria for implementation of Hibernate template and extensively used Hibernate Cache Experience on Hibernate mappings EH cache Lazy loading transactions and Lockings Used MongoDB third party tools and mongobuilt in binaries to monitor and analyze the performance Created Test automation framework using Selenium web driver Configured Protractor test classes and Selenium grid end to end testing on the front end Worked with several testing frameworks such as JUnit Easy Mock Mockito and Power Mock Used JUnit for unit testing and implemented with Log4j to provide logs of exceptions Helped provision and manage AWS Linux servers with Ansible Developed Python OO Design code for logging and debugging code optimization Used Redis for creating background jobs placing those jobs on multiple queues and processing them Using Jenkins and Glu for building and deploying the projects and worked on Stash GIT repository software Used Maven for build and deployment to Tomcat server and Splunk as log monitoring Involved in code reviews and unit testing using JUnit framework Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug Tracking and Project Management Environment Java 80 Spring 4 Hibernate 42 Spring Boot JPA JavaScript ReactJS Scala HTML 50 CSS3 Nodejs ReactJS Bootstrap Requirejs Jade NPM Babel Web pack Swing Python UNIX Apache Tomcat STS Oracle 11 g MongoDB Log4J JUnit Easy Mock JBPM Selenium XML Web Services SOAP UI Kafka Netflix Eureka Spark Netflix Ribbon Ansible Splunk AWS Gradle Git PLSQL Docker HATEOAS Curl Sr Java Developer John Deere Boston MA April 2017 to December 2017 Responsibilities Involved in preparation of the technical design documents including class diagrams Sequence diagrams flow charts process flow diagrams etc Involved in Agile Sprint methodologies to do requirements gathering analysis and planning development testing Code written in Java with features like Collections Exception Handling Serialization Strong understanding and excellent skill in developing designing professional Ajax driven elegant enterprise web application using Ajax Flex Action Script and JavaScript CSS HTML Custom Tag Libraries JSF JQuery Dojo ExtJs and various java design patterns Developed UI pages using HTML CSS Java Script JSP jQuery JSTL Taglibs and JSON The project involved extensive use of the different spring framework features including Spring ORM and Spring Templates Involved in the Configuration of Spring services in applicationContextxml Implemented the application using Spring IOC Spring MVC Framework Spring Batch Spring Boot and handled the security using Spring Security Written java classes for developing user interface by using OOPS concepts multithreading inheritance polymorphism and collection API Used Spring for business layer classes Involved in developing code for obtaining bean references from Config file Experience in Hibernate which includes integrating legacy databases writing custom CRUD statements integrating stored procedures and functions and performed polymorphic associations Designed and developed logging components using Apache Log4J to log messages and errors side changes followed coding guidelines while implementing the application Used Scala templating for rendering standards markup across all the pages along With UI builds made with ReactJS Used Apache CXF to develop REST Service and SOAP UI for testing web service for server Proficient in developing Web Services related technologies frame works WSDL SOAP REST AXIS and Jersey SOAP UI and generating clients client using Eclipse for Web Services consumption Worked on variety of Frontend JavaScript frameworks like AngularJS BackboneJS ReactJS JQuery JQuery UI and good knowledge in EmberJS Written SQL script and executed in Oracle 11 g database Used SVN and GIT for source code version control Designed and developed UI screens using Struts 2 DOJO JavaScript JSP HTML DOM CSS and AJAX Environment Java Servlets JNDI HTML JavaScript CSS XML DOM XSD XSLT AJAX JQUERY JAXP JAXB Spring IOC Spring MVC Spring AOPSpringboot Spring cloud Camunda BPM DOJOHibernate HQL RAML MMC Active MQ Apache CXF JAXWS Jenkins Jboss server EMMA SVN JUNIT log4j Maven Docker sprint scrum Oracle 11 g SrJava Developer Aspect Software Phoenix AZ April 2016 to 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC and worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings Developed UI using HTML5 CSS3 JavaScript Bootstrap JQuery Angular JS and Node JS Built AngularJS modules controllers pop up modals and file uploaders Created reusable directives factories and services in AngularJS Used Backbonejs and ReactJS to create Controllers to handle events triggered by clients and send request to server Involved in writing Java API for Amazon Lambda to manage some of the AWS services Used plugin development for RCP version for developing the layouts like Grid Layout and Fill out for RCP Designed and implemented application using Spring Boot Spring MVC Spring IOC Spring Annotations Spring AOP Spring Transactions Spring HATEOAS and Spring JDBC Implemented the authentication and authorization of the application using Spring Security and Oauth2 Designed and developed Microservices business components and RESTful service endpoints using Spring boot Implemented RESTful and SOAP based web services using for JAXRS and JAXWS respectively Implemented firsthand the bestworst practices for integrating Microservices into existing system architecture Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features Prepared calls through Hibernate and Spring JDBC for Interacting with the Database Worked on integrated Hystrix dashboard to monitor spring microservices using Circuit Breaker Implemented Multithreading Concurrency Exception Handling and Collections whenever necessary Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances Participated in troubleshooting issues on AWS Netflix Eureka and Cloud environments Participated in creation of Spring Configurations using Java8 features Lambda expressions Streams filters Worked Docker container management along with volumes container based DB and services Docker Artifactory configuration and setup Worked with Spring Ribbon and Kafka broker service to handle heavy traffic Experience in writing complex PLSQL queries using joins Stored Procedures Functions Triggers Cursors and indexes in Oracle DB Installed and deployed monitoring solution with Splunk services Performed data extraction and loading the JSON data with the serverside content in to the Mongo DB Configured JMS Server setup and DB Connection pool setup and deployed Returned items in Web Sphere Server Used Active MQ to communicate with controller and used service layer to implement the business logic Implemented Batch jobs using Spring Batch created various item readers item writers and item processors Involved in support for end to operations support for OSSBSS Business Support System identify gaps and propose solutions and manage issue resolution Used UNIX shell scripts to searchmodify files Validations are done using SoapUI and Ready API testing tool framework in different environments Deployed and tested the application on Web Sphere Application Server Developed test cases for unit testing in the integration layer using Mockito framework Setup the CI and CD process for the application using the Jenkins Implemented configured and customized JIRA issue tracking software with agile plugin across all company functions Worked on Log4J to validate functionalities and JUnit for unit testing Used GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment Java18 J2EE HTML5 CSS3 Bootstrap JQuery Angular JS ReactJS JavaScript Node JS Eclipse Rich Client Platform Spring IOC Spring MVC Spring Security Spring Boot Spring Batch Spring HATEOAS Spring Data Hibernate Active MQ RESTful Postman SOAP Micro Service AWS EC2 Docker Mongo DB Oracle DB Maven STS Web Sphere Application Server Mockito JMS UNIX Jenkins JIRA log4j and GIT Sr JavaJ2EE Developer United Health Group Minnetonka MN November 2014 to March 2016 Responsibilities Created use case diagrams in UML using Rational Rose Reengineered the application with screens in JSP based on Struts framework Involved in design applications using J2EE This architecture employs a ModelViewController design pattern Participated in Agile and having daily SCRUM meeting for progress reporting and task distributing Involved in Core Java coding by using Java APIs such as Collections Multithreading Exception Handling Generics Enumeration and Java IO to fulfill the implementation of business logic Configured the xml files for Open Source Spring 3 Framework to fulfill the Proxy Pattern Configured the xml files for Hibernate 3 and applied its ORM to enable the data transactions between POJO and Oracle Database using caching on SessionFactory as well as caching on query Responsible for the overall project development of Fund module Flex41 version wrote the CRUD operations of Mutual Funds and Financiers list using iBATIS and DB2 Developed XML files DTDs Schemas and parsing them by using both SAX and DOM parsers Wrote roll out procedures and plans Environment was mixed with Windows and XML Hbase NoSql XSLT Developed Web Applications using HTML and parsed data in XML format using SAX and loaded into database Responsible for creating complex SQL queries stored procedure and analyzed the tables in MySQL database Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services route providers and filter to make the data searchable and sortable Worked with NoSql Databases like Apache Cassandra Mongo DB and Dynamo DB Used a custom framework sitting on the top of Nodejs and has used a lot of Clients side JavaScript plugins Developed FormJava Beans Spring Controller Classes and configured with the corresponding JSP pages Used Spring tag library for form data binding themes displaying validation errors Integration of Spring Portlet Framework with the Flex based custom components Used Hive QL Map Reduce Cassandra bulk loads Java Web services UNIX Shell Scripts Active MQs Used Spring Inversion of Control and Transaction Management in the GUI for Maintenance Screens Designed and Developed the UI using PrimeFaces JSF libraries and Javascript Designed REST API for logging front end errors occurring in Angular JS Tableau dashboards and those logs were harvested and reported through Elastic search tools Extensively used the JSON objects with AJAX for UI displays Automated AWS deployments with shellAnt scripts and connected test environments with hosts used for builds Creating Stored Procedure and fine tuning the existing procedure to handle huge amount of transaction Worked on Spring Quartz for scheduling tasks like generating monthly reportspolicies for customers Trace errors in the Glassfish Server log files to find the location of an existing problem Involved in configuring Hibernate mapping filesannotations and POJO objects Used Hibernate Transaction Management Hibernate Batch Transactions Hibernate cache concepts Developed data abstraction layer using Hibernate ORM with spring support and JDBC driven components Designed and developed Restful Web services using spring framework Data communication between various events in the ordering and fulfillment systems is developed using SOAP Designed Developed and Implemented document transformation applications using XML Spy tool Used Bootstrap to create a responsive website that fit all users and devices from desktop to tablet mobile phone Developed Stored Procedures and triggers for database intensive tasks Created indexes and referential constraints for performance and data integrity Log 4J was used to monitor the error logs and used GIT as version control tool Extensively worked on performance tuning of SQL Queries to improve the performance of the daily and monthly jobs Used JUnit for Unit testing and Maven for build Environment J2EE Java Spring framework Spring MVC JSP 20 JSF Servlets 23 Hibernate AJAX Web services AWS SOAP XML Java Beans Angular JS Knockout JS XStream UNIX iBATIS Glassfish Apache POI Ext JS jQuery JavaScript Oracle 11 g IBM RAD NoSQL Websphere 70 Agile Methodology Design Patterns REST Apache Camel CVS Mongo DB Apache Maven JUnit HTML Unit Testing XSLT HTMLDHTML JavaJ2EE Developer King Fisher Airlines Bengaluru Karnataka June 2013 to October 2014 Responsibilities Prototyped designed and developed CCIS application framework complying with SOA architecture This was reused in many of new applicationsprojects in CCIS department significantly reducing timecost Created MULE ESB artifact and configured the MULE config files and deployed Used Angular JS for client while server validation through Expression Language Built published and consumed REST web services supporting both XML and JSON to perform tasks such as appointment cancellation technician job management for DispatchTechIVR and Call Reduction modules Developed SOAP web services for TSG UI and Outage Board applications Used JAXB for marshalling and unmarshalling of Java objects to XML and vice versa Used SOAP UI tool for testing and Liquid XML editor to validate XML documents against XSDs Used Jquery Angular JS JSP Javascript HTML CSS and JSTL for the frontend modules of TechIVR Provided the support for integrating the RESTful web services with clients Performed unit testing using JUnit and Integration testing using IVR system Invovled in creating Restful web services using JAXRS and JERSEY tool Developing the orchestrating of service through ESB calls to provide APIs to the service portal Applied OO design concept and design patterns such as DAO Singleton Factory Business Delegate and Service Locator to improve the existing JavaJ2EE based code base Rearchitected refactored and performance tuned a WebLogic and J2EE based CCIS call Reduction application which previously came down almost daily became a true 24x7 application at CCIS JBOSS ESB development and providing necessary inputs to the service portal Multitasked by gathering business requirements from user duration and feasibility of requests and working on other projects by resolving issues Environment Java J2EE Junit JDK 15 Spring core Spring MVC Hibernate SOAPRest Web services Ajax XML jQuery HTML CSS TCServer SVN Maven Jenkins Splunk SFX MAX SEED Oracle Software Developer Tata Docomo Hyderabad Telangana October 2011 to May 2013 Responsibilities As a team member understood the Business Design Development and Testing for Closing and Funding Module Involved in System design using UML Use case Class and Sequence diagrams created using Rational Rose Involved in project migration using Struts 20 web framework based on MVC2 Architecture Served integral role in analyze design develop and implement new requirements Used Java Beans Servlets Action classes Action Forms as Model JSP Struts tag libraries Custom Tags JSTL Tiles as view Action Servlet as a Controller and jQuery Implemented Design Patterns Business Delegate Session Faade DAO Value Object Proxy Service Locater Created several custom tags for JSP for maximum reusability of user interface components Participated in several design sessions to create common development strategies eg Error handling exceptions performance improvement practices session management etc Designed and developed several Servlets JSPs and JAVA classes for presentation layer Extensively worked on ILOG JRules engine which integrate with J2EE application Responsible for writing business rules and accessing firing the rules in Session Beans Design implements the server side Business and persistent logic using EJB Implemented application communication through asynchronous messaging service using MDB Followed Test Driven Development TDD Scrum concepts of the Agile to produce high Quality Software Wrote Oracle SQL queries and Stored Procedures using SQLPLSQL Responsible for code reviews integrated all the modules using WebLogic Application Server Implemented Junit Framework for the entire application Environment Java jdk15 J2EE JSP Servlets Struts EJB XML Oracle 10 g UNIX Weblogic10 and T Line Framework Core Java Developer Axis bank Hyderabad Telangana August 2010 to September 2011 Responsibilities Involved in prototyping proof of concept design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Designed and developed the persistence tier using Hibernate framework Designed and developed front view components using JSP and HTML Involved in developing various reusable Helper and Utility classes using Core Java which are being used across all the modules of the application Developed Interactive web pages using AJAX and JavaScript Implemented Core Java concepts like Polymorphism Inheritance Multithreading etc Developed reusable utility classes in core java for validation which are used across all modules Developed Java classes for implementing Business logics using EJB Stateless session entity message driven beans Deployed and tested the application with web server Tomcat WebSphere Configured and tested the application with database server Oracle 10 g and MySQL Helped in database design and tuning Created stored procedures Views in the Database Environment JDK 14 Core Java Multithreading Collections JSP JSTL Servlets EJB 30 XML HTML Java Script AJAX SOAP WSDL UML JDBC Shell Scripting JUnit log4j JMS Apache Tomcat WebSphere Application Server Oracle 10 g Database Windows NT UnixLinux Technical Skills Languages Java 8 J2EE SQL and PLSQL Enterprise Java JSP Servlet JNDI JDBC Java security and JSF MarkupXML Technologies XML XSD XSLXSLT SAXDOM JSON Web Technologies HTML5 CSS3 Java Script JQuery Ajax Bootstrap AngularJS ReactJS and NodeJS ExpressJS Tools Framework Struts Spring Hibernate Spring MVC Spring HATEOAS Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J Spring Boot Spring Cloud Spring Batch Spring Security Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Jersey Micro Services Architecture WebApp Servers Web Sphere Apache Tomcat JBoss WebLogic Databases Oracle My SQL SQL Server IBM DB2 Mongo DB and Dynamo DB Development Tools Eclipse Net Beans IntelliJ RAD and Spring Tool SuiteSTS OR mapping Hibernate MyBatis and JPA Testing Tools Others JUnit Soap UI Mockito Log4j and JIRA Version Control CVS SVN GIT Rational Clear Case Methodologies Agile Scrum Waterfall OS Environment Windows UNIX Linux and Mac Cloud Technologies AWS EC2 S3 Elastic Beanstalk EBS Elastic Load Balancing ELB APIGateway Cloud Foundry Skills Api Linux Unix Load balancing Elastic beanstalk Ebs Ec2 Mac",
    "extracted_keywords": [
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Sr",
        "JavaJ2EE",
        "span",
        "lDeveloperspan",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Software",
        "Criollo",
        "years",
        "experience",
        "Webbased",
        "Applications",
        "Enterprise",
        "Applications",
        "Client",
        "Server",
        "Applications",
        "JAVAJ2EE",
        "environment",
        "exposure",
        "ntier",
        "applications",
        "SDLC",
        "life",
        "cycle",
        "project",
        "POC",
        "proof",
        "concept",
        "Design",
        "documents",
        "Development",
        "testing",
        "production",
        "experience",
        "Spring",
        "Framework",
        "Core",
        "Boot",
        "MVC",
        "AOP",
        "Test",
        "REST",
        "Security",
        "Data",
        "Transaction",
        "experience",
        "Web",
        "application",
        "development",
        "JDBC",
        "Servlets",
        "JSP",
        "JSTL",
        "Java",
        "Beans",
        "MVC",
        "Struts",
        "Swing",
        "RMI",
        "EJB",
        "JSF",
        "JNDI",
        "JMS",
        "SOA",
        "SOAP",
        "Spring",
        "Hibernate",
        "MyBatis",
        "JavaScript",
        "Angular",
        "Js",
        "AJAX",
        "JAXRPC",
        "XML",
        "HTML",
        "Multithreading",
        "Concurrent",
        "Programming",
        "understanding",
        "JavaScript",
        "frameworks",
        "js",
        "js",
        "Experience",
        "Object",
        "Oriented",
        "Design",
        "analysis",
        "problem",
        "skills",
        "Proficient",
        "development",
        "applications",
        "JAVA",
        "J2EE",
        "technologies",
        "experience",
        "JSP",
        "Servlets",
        "Struts",
        "Hibernate",
        "frameworks",
        "Experience",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Frontend",
        "Controller",
        "Service",
        "Locator",
        "Decorator",
        "Experience",
        "applications",
        "Software",
        "Methodologies",
        "Agile",
        "Waterfall",
        "Iterative",
        "Development",
        "understanding",
        "Data",
        "Structures",
        "Algorithms",
        "ObjectOriented",
        "design",
        "concepts",
        "UML",
        "Use",
        "Cases",
        "Sequence",
        "Class",
        "diagrams",
        "rhapsody",
        "SOLR",
        "Dependency",
        "Injection",
        "DI",
        "Inversion",
        "Control",
        "IOC",
        "experience",
        "Core",
        "Java",
        "JavaScript",
        "JSP",
        "Java",
        "Beans",
        "Angular",
        "Servlets",
        "Ajax",
        "JQuery",
        "JDBC",
        "XML",
        "CSS",
        "XHTML",
        "HTML",
        "experience",
        "XML",
        "technologies",
        "XML",
        "XSL",
        "XHTML",
        "XSLT",
        "JAXB",
        "Experience",
        "databases",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "DB2",
        "Oracle",
        "g",
        "g",
        "Understanding",
        "RDBMS",
        "Database",
        "Design",
        "writing",
        "queries",
        "procedures",
        "databases",
        "Oracle",
        "SQL",
        "Server",
        "Experience",
        "systems",
        "Amazon",
        "Web",
        "Services",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "RDS",
        "Developed",
        "J2EE",
        "applications",
        "Web",
        "Application",
        "Servers",
        "Apache",
        "Tomcat",
        "Web",
        "Logic",
        "JBoss",
        "IBM",
        "Web",
        "Sphere",
        "ServerSide",
        "Components",
        "Enterprise",
        "Java",
        "Beans",
        "EJB",
        "Session",
        "Entity",
        "Beans",
        "Remote",
        "Method",
        "Invocation",
        "RMI",
        "computing",
        "applications",
        "access",
        "servers",
        "database",
        "Java",
        "Database",
        "Connectivity",
        "JDBC",
        "knowledge",
        "Unit",
        "testing",
        "JUnit",
        "Experience",
        "Ant",
        "Maven",
        "Gradle",
        "Dependency",
        "Management",
        "tool",
        "module",
        "module",
        "environment",
        "leadership",
        "qualities",
        "capabilities",
        "Efficiency",
        "management",
        "skills",
        "communication",
        "ability",
        "deadlines",
        "Work",
        "Experience",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "Software",
        "Criollo",
        "Miami",
        "FL",
        "January",
        "Present",
        "Responsibilities",
        "Requirement",
        "Analysis",
        "assessment",
        "project",
        "life",
        "cycle",
        "methodology",
        "SCRUM",
        "meetings",
        "status",
        "application",
        "UI",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "Babel",
        "Redux",
        "NodeJS",
        "components",
        "modules",
        "ReactJS",
        "JSX",
        "REST",
        "services",
        "NodeJS",
        "ExpressJS",
        "Mongoose",
        "BodyParser",
        "NPM",
        "modules",
        "views",
        "models",
        "Document",
        "Object",
        "Model",
        "DOM",
        "data",
        "server",
        "page",
        "application",
        "SPA",
        "React",
        "JS",
        "Webpack",
        "module",
        "bundler",
        "ReduxPromise",
        "application",
        "data",
        "BackEnd",
        "RESTFUL",
        "services",
        "Developed",
        "Redux",
        "actions",
        "store",
        "reducer",
        "functions",
        "data",
        "flow",
        "application",
        "NodeJS",
        "Grunt",
        "tasks",
        "project",
        "compile",
        "minify",
        "factory",
        "object",
        "NodeJS",
        "functions",
        "views",
        "Scala",
        "markup",
        "pages",
        "UI",
        "builds",
        "ReactJS",
        "nginx",
        "SQL",
        "scripts",
        "solution",
        "Scala",
        "J2EE",
        "design",
        "patterns",
        "MVC",
        "Singleton",
        "Factory",
        "DAO",
        "DTO",
        "Service",
        "Locator",
        "web",
        "services",
        "Jersey",
        "Spring",
        "framework",
        "JAXRS",
        "Created",
        "REST",
        "web",
        "services",
        "links",
        "HATEOAS",
        "Spring",
        "application",
        "Spring",
        "core",
        "dependency",
        "injectioninversion",
        "control",
        "IOC",
        "Hibernate",
        "Spring",
        "Boot",
        "Microservices",
        "microservice",
        "architecture",
        "REST",
        "Apache",
        "Kafka",
        "Installation",
        "configuration",
        "administration",
        "JBOSS",
        "EAP",
        "Red",
        "Hat",
        "Linux",
        "environment",
        "JBOSS",
        "availability",
        "Platform",
        "architecture",
        "Monitored",
        "service",
        "health",
        "check",
        "Spring",
        "Boot",
        "admin",
        "console",
        "UI",
        "micro",
        "Performed",
        "Load",
        "Balancing",
        "servers",
        "Spring",
        "Ribbon",
        "Fail",
        "Safe",
        "circuit",
        "breaker",
        "patterns",
        "Spring",
        "Boot",
        "Micro",
        "Service",
        "applications",
        "Hystrix",
        "Developed",
        "Apache",
        "Camel",
        "Routes",
        "mediation",
        "Enterprise",
        "integration",
        "patterns",
        "systems",
        "Spring",
        "JPA",
        "transaction",
        "manager",
        "transactions",
        "application",
        "Eclipse",
        "Spring",
        "Tool",
        "Suite",
        "STS",
        "development",
        "Spring",
        "Boot",
        "applications",
        "Microservices",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Expression",
        "REST",
        "Application",
        "Program",
        "Interface",
        "API",
        "operations",
        "Spring",
        "Jersey",
        "documentation",
        "webservices",
        "Swagger",
        "cloud",
        "environment",
        "Microservices",
        "Spring",
        "cloud",
        "Netflix",
        "Eureka",
        "server",
        "Designing",
        "client",
        "API",
        "Swing",
        "classes",
        "Deployed",
        "Docker",
        "Spring",
        "boot",
        "micro",
        "services",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "console",
        "Experience",
        "Docker",
        "Images",
        "Docker",
        "container",
        "Apache",
        "Tomcat",
        "NodeJS",
        "Java",
        "APIs",
        "modules",
        "Experience",
        "KORN",
        "scripts",
        "UNIX",
        "J2EE",
        "tasks",
        "files",
        "Oracle",
        "database",
        "CLOB",
        "BLOB",
        "Loading",
        "data",
        "files",
        "Oracle",
        "g",
        "database",
        "SQL",
        "loader",
        "UNIX",
        "script",
        "HQL",
        "Parameters",
        "Queries",
        "Interfaces",
        "Expression",
        "Query",
        "Criteria",
        "implementation",
        "Hibernate",
        "template",
        "Hibernate",
        "Cache",
        "Experience",
        "Hibernate",
        "mappings",
        "cache",
        "Lazy",
        "loading",
        "transactions",
        "Lockings",
        "party",
        "tools",
        "binaries",
        "performance",
        "Test",
        "automation",
        "framework",
        "Selenium",
        "web",
        "driver",
        "Configured",
        "Protractor",
        "test",
        "classes",
        "Selenium",
        "grid",
        "testing",
        "end",
        "testing",
        "frameworks",
        "JUnit",
        "Easy",
        "Mock",
        "Mockito",
        "Power",
        "Mock",
        "JUnit",
        "unit",
        "testing",
        "Log4j",
        "logs",
        "exceptions",
        "provision",
        "AWS",
        "Linux",
        "servers",
        "Ansible",
        "Developed",
        "Python",
        "OO",
        "Design",
        "code",
        "code",
        "optimization",
        "Redis",
        "background",
        "jobs",
        "jobs",
        "queues",
        "Jenkins",
        "Glu",
        "projects",
        "Stash",
        "GIT",
        "repository",
        "software",
        "Maven",
        "build",
        "deployment",
        "Tomcat",
        "server",
        "Splunk",
        "log",
        "monitoring",
        "code",
        "reviews",
        "unit",
        "testing",
        "JUnit",
        "framework",
        "Drools",
        "engine",
        "business",
        "rules",
        "runtime",
        "Git",
        "version",
        "control",
        "JIRA",
        "bug",
        "Tracking",
        "Project",
        "Management",
        "Environment",
        "Java",
        "Spring",
        "Hibernate",
        "Spring",
        "Boot",
        "JPA",
        "JavaScript",
        "ReactJS",
        "Scala",
        "HTML",
        "CSS3",
        "Nodejs",
        "ReactJS",
        "Bootstrap",
        "Requirejs",
        "Jade",
        "NPM",
        "Babel",
        "Web",
        "pack",
        "Swing",
        "Python",
        "UNIX",
        "Apache",
        "Tomcat",
        "STS",
        "Oracle",
        "g",
        "MongoDB",
        "Log4J",
        "JUnit",
        "Easy",
        "Mock",
        "JBPM",
        "Selenium",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "UI",
        "Kafka",
        "Netflix",
        "Eureka",
        "Spark",
        "Netflix",
        "Ribbon",
        "Ansible",
        "Splunk",
        "AWS",
        "Gradle",
        "Git",
        "PLSQL",
        "Docker",
        "HATEOAS",
        "Curl",
        "Sr",
        "Java",
        "Developer",
        "John",
        "Deere",
        "Boston",
        "MA",
        "April",
        "December",
        "Responsibilities",
        "preparation",
        "design",
        "documents",
        "class",
        "diagrams",
        "Sequence",
        "diagrams",
        "charts",
        "process",
        "flow",
        "diagrams",
        "Agile",
        "Sprint",
        "methodologies",
        "requirements",
        "analysis",
        "planning",
        "development",
        "testing",
        "Code",
        "Java",
        "features",
        "Collections",
        "Exception",
        "Handling",
        "Serialization",
        "Strong",
        "understanding",
        "skill",
        "enterprise",
        "web",
        "application",
        "Ajax",
        "Flex",
        "Action",
        "Script",
        "JavaScript",
        "CSS",
        "HTML",
        "Custom",
        "Tag",
        "JSF",
        "JQuery",
        "Dojo",
        "ExtJs",
        "design",
        "patterns",
        "UI",
        "pages",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "JSP",
        "jQuery",
        "JSTL",
        "Taglibs",
        "JSON",
        "project",
        "use",
        "spring",
        "framework",
        "features",
        "Spring",
        "ORM",
        "Spring",
        "Templates",
        "Configuration",
        "Spring",
        "services",
        "applicationContextxml",
        "application",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Framework",
        "Spring",
        "Batch",
        "Spring",
        "Boot",
        "security",
        "Spring",
        "Security",
        "classes",
        "user",
        "interface",
        "OOPS",
        "concepts",
        "inheritance",
        "polymorphism",
        "collection",
        "API",
        "Spring",
        "business",
        "layer",
        "classes",
        "code",
        "bean",
        "references",
        "Config",
        "file",
        "Experience",
        "Hibernate",
        "legacy",
        "databases",
        "custom",
        "CRUD",
        "statements",
        "procedures",
        "functions",
        "associations",
        "components",
        "Apache",
        "Log4J",
        "messages",
        "errors",
        "side",
        "changes",
        "guidelines",
        "application",
        "Scala",
        "standards",
        "pages",
        "UI",
        "builds",
        "ReactJS",
        "Apache",
        "CXF",
        "REST",
        "Service",
        "SOAP",
        "UI",
        "testing",
        "web",
        "service",
        "server",
        "Web",
        "Services",
        "technologies",
        "frame",
        "WSDL",
        "SOAP",
        "REST",
        "AXIS",
        "Jersey",
        "SOAP",
        "UI",
        "clients",
        "client",
        "Eclipse",
        "Web",
        "Services",
        "consumption",
        "variety",
        "Frontend",
        "JavaScript",
        "frameworks",
        "BackboneJS",
        "ReactJS",
        "JQuery",
        "JQuery",
        "UI",
        "knowledge",
        "EmberJS",
        "SQL",
        "script",
        "Oracle",
        "g",
        "database",
        "SVN",
        "GIT",
        "source",
        "code",
        "version",
        "control",
        "UI",
        "screens",
        "Struts",
        "DOJO",
        "JavaScript",
        "JSP",
        "HTML",
        "DOM",
        "CSS",
        "AJAX",
        "Environment",
        "Java",
        "Servlets",
        "JNDI",
        "HTML",
        "JavaScript",
        "CSS",
        "XML",
        "DOM",
        "XSD",
        "XSLT",
        "AJAX",
        "JQUERY",
        "JAXP",
        "JAXB",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "AOPSpringboot",
        "Spring",
        "cloud",
        "Camunda",
        "BPM",
        "DOJOHibernate",
        "HQL",
        "RAML",
        "MMC",
        "MQ",
        "Apache",
        "CXF",
        "JAXWS",
        "Jenkins",
        "Jboss",
        "server",
        "EMMA",
        "SVN",
        "JUNIT",
        "log4j",
        "Maven",
        "Docker",
        "sprint",
        "Oracle",
        "g",
        "SrJava",
        "Developer",
        "Aspect",
        "Software",
        "Phoenix",
        "AZ",
        "April",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "environment",
        "Scrum",
        "Sprint",
        "meetings",
        "UI",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "Angular",
        "JS",
        "Node",
        "JS",
        "modules",
        "controllers",
        "modals",
        "file",
        "uploaders",
        "directives",
        "factories",
        "services",
        "Backbonejs",
        "ReactJS",
        "Controllers",
        "events",
        "clients",
        "request",
        "Java",
        "API",
        "Amazon",
        "Lambda",
        "AWS",
        "services",
        "development",
        "RCP",
        "version",
        "layouts",
        "Grid",
        "Layout",
        "RCP",
        "application",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "Annotations",
        "Spring",
        "AOP",
        "Spring",
        "Transactions",
        "Spring",
        "HATEOAS",
        "Spring",
        "JDBC",
        "authentication",
        "authorization",
        "application",
        "Spring",
        "Security",
        "Oauth2",
        "Microservices",
        "business",
        "components",
        "service",
        "endpoints",
        "Spring",
        "boot",
        "SOAP",
        "web",
        "services",
        "JAXRS",
        "JAXWS",
        "bestworst",
        "practices",
        "Microservices",
        "system",
        "architecture",
        "Microservices",
        "strategy",
        "application",
        "business",
        "features",
        "Prepared",
        "calls",
        "Hibernate",
        "Spring",
        "JDBC",
        "Database",
        "Hystrix",
        "dashboard",
        "spring",
        "microservices",
        "Circuit",
        "Breaker",
        "Multithreading",
        "Concurrency",
        "Exception",
        "Handling",
        "Collections",
        "AWS",
        "services",
        "application",
        "cloud",
        "instances",
        "troubleshooting",
        "issues",
        "AWS",
        "Netflix",
        "Eureka",
        "Cloud",
        "environments",
        "creation",
        "Spring",
        "Configurations",
        "Java8",
        "features",
        "Lambda",
        "expressions",
        "Streams",
        "filters",
        "Worked",
        "Docker",
        "container",
        "management",
        "volumes",
        "DB",
        "services",
        "Docker",
        "Artifactory",
        "configuration",
        "setup",
        "Spring",
        "Ribbon",
        "Kafka",
        "broker",
        "service",
        "traffic",
        "Experience",
        "PLSQL",
        "queries",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Cursors",
        "indexes",
        "Oracle",
        "DB",
        "Installed",
        "monitoring",
        "solution",
        "Splunk",
        "services",
        "data",
        "extraction",
        "data",
        "serverside",
        "content",
        "Mongo",
        "DB",
        "Configured",
        "JMS",
        "Server",
        "setup",
        "DB",
        "Connection",
        "pool",
        "setup",
        "Returned",
        "items",
        "Web",
        "Sphere",
        "Server",
        "MQ",
        "controller",
        "service",
        "layer",
        "business",
        "logic",
        "Batch",
        "jobs",
        "Spring",
        "Batch",
        "item",
        "readers",
        "item",
        "writers",
        "item",
        "processors",
        "support",
        "end",
        "operations",
        "support",
        "OSSBSS",
        "Business",
        "Support",
        "System",
        "gaps",
        "solutions",
        "issue",
        "resolution",
        "UNIX",
        "shell",
        "scripts",
        "files",
        "Validations",
        "SoapUI",
        "API",
        "testing",
        "tool",
        "framework",
        "environments",
        "application",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "test",
        "cases",
        "unit",
        "testing",
        "integration",
        "layer",
        "Mockito",
        "framework",
        "Setup",
        "CI",
        "CD",
        "process",
        "application",
        "Jenkins",
        "Implemented",
        "JIRA",
        "issue",
        "software",
        "plugin",
        "company",
        "functions",
        "Log4J",
        "functionalities",
        "JUnit",
        "unit",
        "testing",
        "GitHub",
        "version",
        "files",
        "responsibility",
        "code",
        "merges",
        "branch",
        "trunk",
        "branch",
        "feature",
        "implementation",
        "Environment",
        "Java18",
        "J2EE",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JQuery",
        "Angular",
        "JS",
        "ReactJS",
        "JavaScript",
        "Node",
        "JS",
        "Eclipse",
        "Rich",
        "Client",
        "Platform",
        "Spring",
        "IOC",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "Batch",
        "Spring",
        "HATEOAS",
        "Spring",
        "Data",
        "Hibernate",
        "Active",
        "MQ",
        "RESTful",
        "Postman",
        "SOAP",
        "Micro",
        "Service",
        "AWS",
        "EC2",
        "Docker",
        "Mongo",
        "DB",
        "Oracle",
        "DB",
        "Maven",
        "STS",
        "Web",
        "Sphere",
        "Application",
        "Server",
        "Mockito",
        "JMS",
        "UNIX",
        "Jenkins",
        "JIRA",
        "log4j",
        "GIT",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "United",
        "Health",
        "Group",
        "Minnetonka",
        "MN",
        "November",
        "March",
        "Responsibilities",
        "use",
        "case",
        "diagrams",
        "UML",
        "Rational",
        "Rose",
        "application",
        "screens",
        "JSP",
        "Struts",
        "framework",
        "design",
        "applications",
        "J2EE",
        "architecture",
        "design",
        "pattern",
        "Agile",
        "SCRUM",
        "meeting",
        "progress",
        "reporting",
        "task",
        "Core",
        "Java",
        "Java",
        "APIs",
        "Collections",
        "Multithreading",
        "Exception",
        "Handling",
        "Generics",
        "Enumeration",
        "Java",
        "IO",
        "implementation",
        "business",
        "logic",
        "xml",
        "files",
        "Open",
        "Source",
        "Spring",
        "Framework",
        "Proxy",
        "Pattern",
        "xml",
        "files",
        "Hibernate",
        "ORM",
        "data",
        "transactions",
        "POJO",
        "Oracle",
        "Database",
        "SessionFactory",
        "query",
        "project",
        "development",
        "Fund",
        "module",
        "Flex41",
        "version",
        "CRUD",
        "operations",
        "Mutual",
        "Funds",
        "Financiers",
        "list",
        "DB2",
        "Developed",
        "XML",
        "files",
        "DTDs",
        "Schemas",
        "SAX",
        "DOM",
        "parsers",
        "Wrote",
        "procedures",
        "plans",
        "Environment",
        "Windows",
        "XML",
        "Hbase",
        "NoSql",
        "Developed",
        "Web",
        "Applications",
        "HTML",
        "data",
        "XML",
        "format",
        "SAX",
        "database",
        "SQL",
        "queries",
        "procedure",
        "tables",
        "MySQL",
        "database",
        "frontend",
        "code",
        "call",
        "AngularJS",
        "jQuery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "RESTful",
        "Server",
        "result",
        "web",
        "pages",
        "controller",
        "directives",
        "services",
        "route",
        "providers",
        "data",
        "Worked",
        "NoSql",
        "Databases",
        "Apache",
        "Cassandra",
        "Mongo",
        "DB",
        "Dynamo",
        "DB",
        "custom",
        "framework",
        "top",
        "Nodejs",
        "lot",
        "Clients",
        "JavaScript",
        "FormJava",
        "Beans",
        "Spring",
        "Controller",
        "Classes",
        "JSP",
        "pages",
        "Spring",
        "tag",
        "library",
        "form",
        "data",
        "themes",
        "validation",
        "errors",
        "Integration",
        "Spring",
        "Portlet",
        "Framework",
        "Flex",
        "custom",
        "components",
        "Hive",
        "QL",
        "Map",
        "Cassandra",
        "bulk",
        "Java",
        "Web",
        "services",
        "UNIX",
        "Shell",
        "Scripts",
        "Active",
        "MQs",
        "Spring",
        "Inversion",
        "Control",
        "Transaction",
        "Management",
        "GUI",
        "Maintenance",
        "Screens",
        "UI",
        "PrimeFaces",
        "JSF",
        "libraries",
        "Javascript",
        "Designed",
        "REST",
        "API",
        "end",
        "errors",
        "Angular",
        "JS",
        "Tableau",
        "dashboards",
        "logs",
        "search",
        "tools",
        "objects",
        "AJAX",
        "UI",
        "AWS",
        "deployments",
        "shellAnt",
        "scripts",
        "test",
        "environments",
        "hosts",
        "builds",
        "Procedure",
        "fine",
        "procedure",
        "amount",
        "transaction",
        "Spring",
        "Quartz",
        "scheduling",
        "tasks",
        "reportspolicies",
        "customers",
        "Trace",
        "errors",
        "Glassfish",
        "Server",
        "log",
        "files",
        "location",
        "problem",
        "Hibernate",
        "mapping",
        "filesannotations",
        "POJO",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "Hibernate",
        "cache",
        "data",
        "abstraction",
        "layer",
        "Hibernate",
        "ORM",
        "spring",
        "support",
        "JDBC",
        "components",
        "Restful",
        "Web",
        "services",
        "spring",
        "framework",
        "Data",
        "communication",
        "events",
        "ordering",
        "fulfillment",
        "systems",
        "SOAP",
        "Developed",
        "document",
        "transformation",
        "applications",
        "XML",
        "Spy",
        "tool",
        "Bootstrap",
        "website",
        "users",
        "devices",
        "desktop",
        "phone",
        "Stored",
        "Procedures",
        "triggers",
        "database",
        "tasks",
        "indexes",
        "constraints",
        "performance",
        "data",
        "integrity",
        "Log",
        "4J",
        "error",
        "logs",
        "GIT",
        "version",
        "control",
        "tool",
        "performance",
        "tuning",
        "SQL",
        "Queries",
        "performance",
        "jobs",
        "JUnit",
        "Unit",
        "testing",
        "Maven",
        "build",
        "Environment",
        "J2EE",
        "Java",
        "Spring",
        "framework",
        "Spring",
        "MVC",
        "JSP",
        "JSF",
        "Servlets",
        "Hibernate",
        "AJAX",
        "Web",
        "services",
        "AWS",
        "XML",
        "Java",
        "Beans",
        "Angular",
        "JS",
        "Knockout",
        "JS",
        "XStream",
        "UNIX",
        "Glassfish",
        "Apache",
        "POI",
        "Ext",
        "JS",
        "jQuery",
        "JavaScript",
        "Oracle",
        "g",
        "IBM",
        "RAD",
        "NoSQL",
        "Websphere",
        "Agile",
        "Methodology",
        "Design",
        "Patterns",
        "REST",
        "Apache",
        "Camel",
        "CVS",
        "Mongo",
        "DB",
        "Apache",
        "Maven",
        "JUnit",
        "HTML",
        "Unit",
        "Testing",
        "XSLT",
        "HTMLDHTML",
        "JavaJ2EE",
        "Developer",
        "King",
        "Fisher",
        "Airlines",
        "Bengaluru",
        "Karnataka",
        "June",
        "October",
        "Responsibilities",
        "CCIS",
        "application",
        "framework",
        "SOA",
        "architecture",
        "applicationsprojects",
        "CCIS",
        "department",
        "MULE",
        "ESB",
        "artifact",
        "MULE",
        "config",
        "files",
        "JS",
        "client",
        "server",
        "validation",
        "Expression",
        "Language",
        "REST",
        "web",
        "services",
        "XML",
        "JSON",
        "tasks",
        "appointment",
        "cancellation",
        "job",
        "management",
        "DispatchTechIVR",
        "Call",
        "Reduction",
        "modules",
        "SOAP",
        "web",
        "services",
        "TSG",
        "UI",
        "Outage",
        "Board",
        "applications",
        "JAXB",
        "unmarshalling",
        "Java",
        "XML",
        "vice",
        "SOAP",
        "UI",
        "tool",
        "testing",
        "Liquid",
        "XML",
        "editor",
        "XML",
        "documents",
        "XSDs",
        "Jquery",
        "Angular",
        "JS",
        "JSP",
        "Javascript",
        "HTML",
        "CSS",
        "JSTL",
        "frontend",
        "modules",
        "TechIVR",
        "support",
        "web",
        "services",
        "clients",
        "Performed",
        "unit",
        "testing",
        "JUnit",
        "Integration",
        "testing",
        "IVR",
        "system",
        "web",
        "services",
        "JAXRS",
        "JERSEY",
        "tool",
        "orchestrating",
        "service",
        "ESB",
        "calls",
        "APIs",
        "service",
        "Applied",
        "OO",
        "design",
        "concept",
        "design",
        "patterns",
        "DAO",
        "Singleton",
        "Factory",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "JavaJ2EE",
        "code",
        "base",
        "Rearchitected",
        "performance",
        "WebLogic",
        "J2EE",
        "CCIS",
        "call",
        "Reduction",
        "application",
        "application",
        "CCIS",
        "JBOSS",
        "ESB",
        "development",
        "inputs",
        "service",
        "portal",
        "Multitasked",
        "business",
        "requirements",
        "user",
        "duration",
        "feasibility",
        "requests",
        "projects",
        "issues",
        "Environment",
        "Java",
        "J2EE",
        "Junit",
        "JDK",
        "Spring",
        "core",
        "Spring",
        "MVC",
        "Hibernate",
        "SOAPRest",
        "Web",
        "services",
        "XML",
        "jQuery",
        "HTML",
        "CSS",
        "TCServer",
        "SVN",
        "Maven",
        "Jenkins",
        "Splunk",
        "SFX",
        "MAX",
        "SEED",
        "Oracle",
        "Software",
        "Developer",
        "Tata",
        "Docomo",
        "Hyderabad",
        "Telangana",
        "October",
        "May",
        "Responsibilities",
        "team",
        "member",
        "Business",
        "Design",
        "Development",
        "Testing",
        "Closing",
        "Funding",
        "Module",
        "System",
        "design",
        "UML",
        "Use",
        "case",
        "Class",
        "Sequence",
        "diagrams",
        "Rational",
        "Rose",
        "project",
        "migration",
        "Struts",
        "web",
        "framework",
        "MVC2",
        "Architecture",
        "role",
        "design",
        "requirements",
        "Java",
        "Beans",
        "Servlets",
        "Action",
        "classes",
        "Action",
        "Forms",
        "Model",
        "JSP",
        "Struts",
        "tag",
        "Custom",
        "Tags",
        "JSTL",
        "Tiles",
        "Action",
        "Servlet",
        "Controller",
        "jQuery",
        "Design",
        "Patterns",
        "Business",
        "Delegate",
        "Session",
        "Faade",
        "DAO",
        "Value",
        "Object",
        "Proxy",
        "Service",
        "Locater",
        "custom",
        "tags",
        "JSP",
        "reusability",
        "user",
        "interface",
        "components",
        "design",
        "sessions",
        "development",
        "strategies",
        "eg",
        "Error",
        "handling",
        "exceptions",
        "performance",
        "improvement",
        "practices",
        "session",
        "management",
        "Servlets",
        "JSPs",
        "classes",
        "presentation",
        "layer",
        "ILOG",
        "JRules",
        "engine",
        "J2EE",
        "application",
        "business",
        "rules",
        "accessing",
        "rules",
        "Session",
        "Beans",
        "Design",
        "server",
        "side",
        "Business",
        "logic",
        "EJB",
        "application",
        "communication",
        "messaging",
        "service",
        "MDB",
        "Followed",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Scrum",
        "concepts",
        "Agile",
        "Quality",
        "Software",
        "Wrote",
        "Oracle",
        "SQL",
        "queries",
        "Procedures",
        "SQLPLSQL",
        "Responsible",
        "code",
        "reviews",
        "modules",
        "WebLogic",
        "Application",
        "Server",
        "Junit",
        "Framework",
        "application",
        "Environment",
        "Java",
        "jdk15",
        "J2EE",
        "JSP",
        "Servlets",
        "Struts",
        "EJB",
        "XML",
        "Oracle",
        "g",
        "UNIX",
        "Weblogic10",
        "T",
        "Line",
        "Framework",
        "Core",
        "Java",
        "Developer",
        "Axis",
        "bank",
        "Hyderabad",
        "Telangana",
        "August",
        "September",
        "Responsibilities",
        "proof",
        "concept",
        "design",
        "Interface",
        "Implementation",
        "testing",
        "maintenance",
        "use",
        "case",
        "diagrams",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "system",
        "UMLRational",
        "Rose",
        "persistence",
        "tier",
        "Hibernate",
        "framework",
        "view",
        "components",
        "JSP",
        "HTML",
        "Helper",
        "Utility",
        "classes",
        "Core",
        "Java",
        "modules",
        "application",
        "Interactive",
        "web",
        "pages",
        "AJAX",
        "JavaScript",
        "Core",
        "Java",
        "concepts",
        "Polymorphism",
        "Inheritance",
        "Multithreading",
        "utility",
        "classes",
        "core",
        "validation",
        "modules",
        "Java",
        "classes",
        "Business",
        "logics",
        "EJB",
        "Stateless",
        "session",
        "entity",
        "message",
        "beans",
        "application",
        "web",
        "server",
        "Tomcat",
        "WebSphere",
        "Configured",
        "application",
        "database",
        "server",
        "Oracle",
        "g",
        "MySQL",
        "database",
        "design",
        "procedures",
        "Views",
        "Database",
        "Environment",
        "JDK",
        "Core",
        "Java",
        "Multithreading",
        "Collections",
        "JSP",
        "JSTL",
        "Servlets",
        "EJB",
        "XML",
        "HTML",
        "Java",
        "Script",
        "AJAX",
        "WSDL",
        "UML",
        "JDBC",
        "Shell",
        "Scripting",
        "JUnit",
        "log4j",
        "JMS",
        "Apache",
        "Tomcat",
        "WebSphere",
        "Application",
        "Server",
        "Oracle",
        "g",
        "Database",
        "Windows",
        "NT",
        "UnixLinux",
        "Technical",
        "Skills",
        "Languages",
        "Java",
        "J2EE",
        "SQL",
        "PLSQL",
        "Enterprise",
        "Java",
        "JSP",
        "Servlet",
        "JNDI",
        "JDBC",
        "Java",
        "security",
        "JSF",
        "MarkupXML",
        "Technologies",
        "XML",
        "XSD",
        "XSLXSLT",
        "SAXDOM",
        "JSON",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "Java",
        "Script",
        "JQuery",
        "Ajax",
        "Bootstrap",
        "AngularJS",
        "ReactJS",
        "NodeJS",
        "ExpressJS",
        "Tools",
        "Framework",
        "Struts",
        "Spring",
        "Hibernate",
        "Spring",
        "MVC",
        "Spring",
        "HATEOAS",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "JMS",
        "JSF",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Spring",
        "Batch",
        "Spring",
        "Security",
        "Web",
        "services",
        "Restful",
        "UDDI",
        "WSDL",
        "JAXRPC",
        "JAXRS",
        "JAXWS",
        "JAXB",
        "Jersey",
        "Micro",
        "Services",
        "Architecture",
        "WebApp",
        "Servers",
        "Web",
        "Sphere",
        "Apache",
        "Tomcat",
        "JBoss",
        "WebLogic",
        "Oracle",
        "SQL",
        "SQL",
        "Server",
        "IBM",
        "DB2",
        "Mongo",
        "DB",
        "Dynamo",
        "DB",
        "Development",
        "Tools",
        "Eclipse",
        "Net",
        "Beans",
        "IntelliJ",
        "RAD",
        "Spring",
        "Tool",
        "SuiteSTS",
        "mapping",
        "Hibernate",
        "MyBatis",
        "JPA",
        "Testing",
        "Tools",
        "Others",
        "JUnit",
        "Soap",
        "UI",
        "Mockito",
        "Log4j",
        "JIRA",
        "Version",
        "Control",
        "CVS",
        "SVN",
        "GIT",
        "Rational",
        "Clear",
        "Case",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall",
        "OS",
        "Environment",
        "UNIX",
        "Linux",
        "Mac",
        "Cloud",
        "Technologies",
        "AWS",
        "EC2",
        "S3",
        "Elastic",
        "Beanstalk",
        "EBS",
        "Elastic",
        "Load",
        "Balancing",
        "ELB",
        "APIGateway",
        "Cloud",
        "Foundry",
        "Skills",
        "Api",
        "Linux",
        "Unix",
        "Load",
        "beanstalk",
        "Ebs",
        "Ec2",
        "Mac"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:32:39.387783",
    "resume_data": "Sr JavaJ2EE Developer Sr JavaJ2EE span lDeveloperspan Sr JavaJ2EE Developer Software Criollo Over 8 years of experience in developing Webbased Applications Enterprise Applications and Client Server Applications in JAVAJ2EE environment coupled with RDBMS exposure in ntier applications Involved in complete SDLC life cycle of this project includes POC proof of concept Design documents Development testing and production Strong experience in Spring Framework Core Boot MVC AOP Test REST Security Data and Transaction Extensive experience in Web application development using JDBC Servlets JSP JSTL Java Beans MVC Struts JSON Swing RMI EJB JSF JNDI JMS SOA SOAP Spring Hibernate MyBatis JavaScript Angular Js AJAX JAXRPC XML and HTML Experienced in Multithreading and Concurrent Programming Have good understanding on JavaScript frameworks like angular js and backbone js Experience in Object Oriented Design analysis with solid analytical problem solving and decisionmaking skills Proficient in development of applications using JAVA and J2EE technologies with experience in JSP Servlets Struts and Hibernate frameworks Experience using design patterns including MVC Singleton Frontend Controller Service Locator and Decorator Experience in developing applications using Software Methodologies like Agile Waterfall Iterative Development Solid understanding of Data Structures Algorithms and ObjectOriented design concepts UML Use Cases Sequence and Class diagrams Rational rhapsody Used SOLR Dependency Injection DI or Inversion of Control IOC Wide experience in Core Java JavaScript JSP Java Beans Angular Servlets Ajax JQuery JDBC XML CSS XHTML HTML Extensive experience in XML related technologies such as XML XSL XHTML XSLT and JAXB Experience in using the databases such as MySQL MS SQL Server DB2 and Oracle 9i10 g 11 g Good Understanding of RDBMS through Database Design writing queries and stored procedures using databases like Oracle and SQL Server Experience in deploying systems on Amazon Web Services Amazon EC2 Amazon S3 Amazon RDS Developed and deployed J2EE applications on both Web and Application Servers including Apache Tomcat Web Logic JBoss and IBM Web Sphere Experienced in writing ServerSide Components Enterprise Java Beans EJB Session and Entity Beans Remote Method Invocation RMI for distributed computing applications access remote servers and invoking database with Java Database Connectivity JDBC Thorough knowledge in Unit testing with JUnit 3840 Experience in working with Ant Maven and Gradle as Dependency Management and build tool in single module and multi module environment Possess excellent leadership qualities and has good problemsolving capabilities Efficiency in management skills communication and ability to work under strict deadlines Work Experience Sr JavaJ2EE Developer Software Criollo Miami FL January 2018 to Present Responsibilities Participating in Requirement Analysis and technical assessment during project life cycle Used Agile methodology and attended daily and weekly SCRUM meetings to update working status etc Developed application UI screens using HTML5 CSS3 JavaScript Bootstrap Babel Redux and NodeJS Created reusable components used across various modules using ReactJS and JSX Involved in creating REST services using NodeJS ExpressJS Mongoose and BodyParser NPM modules Created views to hook up models to the Document Object Model DOM and synchronize data with the server as a single page application SPA using React JS and used Webpack as the module bundler Used ReduxPromise in application to retrieve data from BackEnd and to also perform RESTFUL services Developed Redux actions store and reducer functions to implement unidirectional data flow in the application Used NodeJS to run Grunt tasks and build properly the project compile minify etc Extensively used factory object in NodeJS to use the common functions in different views Used Scala templating for rendering standard markup on pages along with UI builds made with ReactJS on nginx Analyzed the SQL scripts and designed the solution to implement using Scala Used J2EE design patterns like MVC Singleton Factory DAO DTO and Service Locator etc Developed RESTful web services using Jersey Spring framework and JAXRS Created REST based web services by establishing links using HATEOAS from Spring based application Used Spring core for dependency injectioninversion of control IOC and integrated with Hibernate Spring Boot Microservices were developed with microservice architecture using REST and Apache Kafka Installation configuration and administration of JBOSS EAP 56 in Red Hat Linux environment Built JBOSS scalable high availability clustered Platform architecture Monitored service health check from Spring Boot admin console using swaggered UI registered micro services Performed Load Balancing among the servers was implemented by using Spring Ribbon Implemented Fail Safe and circuit breaker patterns in Spring Boot Micro Service applications using Hystrix Developed Apache Camel Routes for mediation and used various Enterprise integration patterns to connect to other systems and used Spring JPA transaction manager to manage transactions in the application Used Eclipse based Spring Tool Suite STS for development and debugging Spring Boot applications Microservices and deployed in to Amazon Web Services AWS lambda Expression Enhanced existing REST Application Program Interface API by adding new operations using Spring Jersey and created documentation for webservices using Swagger Provided cloud environment for Microservices using Spring cloud Netflix Eureka server Designing and developing Online client windows API using Swing classes Deployed Docker contained Spring boot micro services in to spring EC2 container service using AWS admin console and used lambda to run applications in Amazon Web Services AWS console Experience with building Docker Images and running them on Docker container Worked with Apache Tomcat 8 and NodeJS servers to deploy and configure Java APIs and frontend modules Experience with KORN based scripts for triggering UNIX and J2EE based tasks Uploaded files in to Oracle database using CLOB and BLOB Loading data from flat files into Oracle 11g database using SQL loader and UNIX script Used HQL Named Parameters Named Queries and Interfaces such as Expression Query and Criteria for implementation of Hibernate template and extensively used Hibernate Cache Experience on Hibernate mappings EH cache Lazy loading transactions and Lockings Used MongoDB third party tools and mongobuilt in binaries to monitor and analyze the performance Created Test automation framework using Selenium web driver Configured Protractor test classes and Selenium grid end to end testing on the front end Worked with several testing frameworks such as JUnit Easy Mock Mockito and Power Mock Used JUnit for unit testing and implemented with Log4j to provide logs of exceptions Helped provision and manage AWS Linux servers with Ansible Developed Python OO Design code for logging and debugging code optimization Used Redis for creating background jobs placing those jobs on multiple queues and processing them Using Jenkins and Glu for building and deploying the projects and worked on Stash GIT repository software Used Maven for build and deployment to Tomcat server and Splunk as log monitoring Involved in code reviews and unit testing using JUnit framework Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug Tracking and Project Management Environment Java 80 Spring 4 Hibernate 42 Spring Boot JPA JavaScript ReactJS Scala HTML 50 CSS3 Nodejs ReactJS Bootstrap Requirejs Jade NPM Babel Web pack Swing Python UNIX Apache Tomcat STS Oracle 11g MongoDB Log4J JUnit Easy Mock JBPM Selenium XML Web Services SOAP UI Kafka Netflix Eureka Spark Netflix Ribbon Ansible Splunk AWS Gradle Git PLSQL Docker HATEOAS Curl Sr Java Developer John Deere Boston MA April 2017 to December 2017 Responsibilities Involved in preparation of the technical design documents including class diagrams Sequence diagrams flow charts process flow diagrams etc Involved in Agile Sprint methodologies to do requirements gathering analysis and planning development testing Code written in Java with features like Collections Exception Handling Serialization Strong understanding and excellent skill in developing designing professional Ajax driven elegant enterprise web application using Ajax Flex Action Script and JavaScript CSS HTML Custom Tag Libraries JSF JQuery Dojo ExtJs and various java design patterns Developed UI pages using HTML CSS Java Script JSP jQuery JSTL Taglibs and JSON The project involved extensive use of the different spring framework features including Spring ORM and Spring Templates Involved in the Configuration of Spring services in applicationContextxml Implemented the application using Spring IOC Spring MVC Framework Spring Batch Spring Boot and handled the security using Spring Security Written java classes for developing user interface by using OOPS concepts multithreading inheritance polymorphism and collection API Used Spring for business layer classes Involved in developing code for obtaining bean references from Config file Experience in Hibernate which includes integrating legacy databases writing custom CRUD statements integrating stored procedures and functions and performed polymorphic associations Designed and developed logging components using Apache Log4J to log messages and errors side changes followed coding guidelines while implementing the application Used Scala templating for rendering standards markup across all the pages along With UI builds made with ReactJS Used Apache CXF to develop REST Service and SOAP UI for testing web service for server Proficient in developing Web Services related technologies frame works WSDL SOAP REST AXIS and Jersey SOAP UI and generating clients client using Eclipse for Web Services consumption Worked on variety of Frontend JavaScript frameworks like AngularJS BackboneJS ReactJS JQuery JQuery UI and good knowledge in EmberJS Written SQL script and executed in Oracle 11g database Used SVN and GIT for source code version control Designed and developed UI screens using Struts 2 DOJO JavaScript JSP HTML DOM CSS and AJAX Environment Java Servlets JNDI HTML JavaScript CSS XML DOM XSD XSLT AJAX JQUERY JAXP JAXB Spring IOC Spring MVC Spring AOPSpringboot Spring cloud Camunda BPM DOJOHibernate HQL RAML MMC Active MQ Apache CXF JAXWS Jenkins Jboss server EMMA SVN JUNIT log4j Maven Docker sprint scrum Oracle 11g SrJava Developer Aspect Software Phoenix AZ April 2016 to 2017 Responsibilities Involved in various phases of Software Development Life Cycle SDLC and worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings Developed UI using HTML5 CSS3 JavaScript Bootstrap JQuery Angular JS and Node JS Built AngularJS modules controllers pop up modals and file uploaders Created reusable directives factories and services in AngularJS Used Backbonejs and ReactJS to create Controllers to handle events triggered by clients and send request to server Involved in writing Java API for Amazon Lambda to manage some of the AWS services Used plugin development for RCP version for developing the layouts like Grid Layout and Fill out for RCP Designed and implemented application using Spring Boot Spring MVC Spring IOC Spring Annotations Spring AOP Spring Transactions Spring HATEOAS and Spring JDBC Implemented the authentication and authorization of the application using Spring Security and Oauth2 Designed and developed Microservices business components and RESTful service endpoints using Spring boot Implemented RESTful and SOAP based web services using for JAXRS and JAXWS respectively Implemented firsthand the bestworst practices for integrating Microservices into existing system architecture Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features Prepared calls through Hibernate and Spring JDBC for Interacting with the Database Worked on integrated Hystrix dashboard to monitor spring microservices using Circuit Breaker Implemented Multithreading Concurrency Exception Handling and Collections whenever necessary Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances Participated in troubleshooting issues on AWS Netflix Eureka and Cloud environments Participated in creation of Spring Configurations using Java8 features Lambda expressions Streams filters Worked Docker container management along with volumes container based DB and services Docker Artifactory configuration and setup Worked with Spring Ribbon and Kafka broker service to handle heavy traffic Experience in writing complex PLSQL queries using joins Stored Procedures Functions Triggers Cursors and indexes in Oracle DB Installed and deployed monitoring solution with Splunk services Performed data extraction and loading the JSON data with the serverside content in to the Mongo DB Configured JMS Server setup and DB Connection pool setup and deployed Returned items in Web Sphere Server Used Active MQ to communicate with controller and used service layer to implement the business logic Implemented Batch jobs using Spring Batch created various item readers item writers and item processors Involved in support for end to operations support for OSSBSS Business Support System identify gaps and propose solutions and manage issue resolution Used UNIX shell scripts to searchmodify files Validations are done using SoapUI and Ready API testing tool framework in different environments Deployed and tested the application on Web Sphere Application Server Developed test cases for unit testing in the integration layer using Mockito framework Setup the CI and CD process for the application using the Jenkins Implemented configured and customized JIRA issue tracking software with agile plugin across all company functions Worked on Log4J to validate functionalities and JUnit for unit testing Used GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment Java18 J2EE HTML5 CSS3 Bootstrap JQuery Angular JS ReactJS JavaScript Node JS Eclipse Rich Client Platform Spring IOC Spring MVC Spring Security Spring Boot Spring Batch Spring HATEOAS Spring Data Hibernate Active MQ RESTful Postman SOAP Micro Service AWS EC2 Docker Mongo DB Oracle DB Maven STS Web Sphere Application Server Mockito JMS UNIX Jenkins JIRA log4j and GIT Sr JavaJ2EE Developer United Health Group Minnetonka MN November 2014 to March 2016 Responsibilities Created use case diagrams in UML using Rational Rose Reengineered the application with screens in JSP based on Struts framework Involved in design applications using J2EE This architecture employs a ModelViewController design pattern Participated in Agile and having daily SCRUM meeting for progress reporting and task distributing Involved in Core Java coding by using Java APIs such as Collections Multithreading Exception Handling Generics Enumeration and Java IO to fulfill the implementation of business logic Configured the xml files for Open Source Spring 3 Framework to fulfill the Proxy Pattern Configured the xml files for Hibernate 3 and applied its ORM to enable the data transactions between POJO and Oracle Database using caching on SessionFactory as well as caching on query Responsible for the overall project development of Fund module Flex41 version wrote the CRUD operations of Mutual Funds and Financiers list using iBATIS and DB2 Developed XML files DTDs Schemas and parsing them by using both SAX and DOM parsers Wrote roll out procedures and plans Environment was mixed with Windows and XML Hbase NoSql XSLT Developed Web Applications using HTML and parsed data in XML format using SAX and loaded into database Responsible for creating complex SQL queries stored procedure and analyzed the tables in MySQL database Developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services route providers and filter to make the data searchable and sortable Worked with NoSql Databases like Apache Cassandra Mongo DB and Dynamo DB Used a custom framework sitting on the top of Nodejs and has used a lot of Clients side JavaScript plugins Developed FormJava Beans Spring Controller Classes and configured with the corresponding JSP pages Used Spring tag library for form data binding themes displaying validation errors Integration of Spring Portlet Framework with the Flex based custom components Used Hive QL Map Reduce Cassandra bulk loads Java Web services UNIX Shell Scripts Active MQs Used Spring Inversion of Control and Transaction Management in the GUI for Maintenance Screens Designed and Developed the UI using PrimeFaces JSF libraries and Javascript Designed REST API for logging front end errors occurring in Angular JS Tableau dashboards and those logs were harvested and reported through Elastic search tools Extensively used the JSON objects with AJAX for UI displays Automated AWS deployments with shellAnt scripts and connected test environments with hosts used for builds Creating Stored Procedure and fine tuning the existing procedure to handle huge amount of transaction Worked on Spring Quartz for scheduling tasks like generating monthly reportspolicies for customers Trace errors in the Glassfish Server log files to find the location of an existing problem Involved in configuring Hibernate mapping filesannotations and POJO objects Used Hibernate Transaction Management Hibernate Batch Transactions Hibernate cache concepts Developed data abstraction layer using Hibernate ORM with spring support and JDBC driven components Designed and developed Restful Web services using spring framework Data communication between various events in the ordering and fulfillment systems is developed using SOAP Designed Developed and Implemented document transformation applications using XML Spy tool Used Bootstrap to create a responsive website that fit all users and devices from desktop to tablet mobile phone Developed Stored Procedures and triggers for database intensive tasks Created indexes and referential constraints for performance and data integrity Log 4J was used to monitor the error logs and used GIT as version control tool Extensively worked on performance tuning of SQL Queries to improve the performance of the daily and monthly jobs Used JUnit for Unit testing and Maven for build Environment J2EE Java Spring framework Spring MVC JSP 20 JSF Servlets 23 Hibernate AJAX Web services AWS SOAP XML Java Beans Angular JS Knockout JS XStream UNIX iBATIS Glassfish Apache POI Ext JS jQuery JavaScript Oracle 11g IBM RAD NoSQL Websphere 70 Agile Methodology Design Patterns REST Apache Camel CVS Mongo DB Apache Maven JUnit HTML Unit Testing XSLT HTMLDHTML JavaJ2EE Developer King Fisher Airlines Bengaluru Karnataka June 2013 to October 2014 Responsibilities Prototyped designed and developed CCIS application framework complying with SOA architecture This was reused in many of new applicationsprojects in CCIS department significantly reducing timecost Created MULE ESB artifact and configured the MULE config files and deployed Used Angular JS for client while server validation through Expression Language Built published and consumed REST web services supporting both XML and JSON to perform tasks such as appointment cancellation technician job management for DispatchTechIVR and Call Reduction modules Developed SOAP web services for TSG UI and Outage Board applications Used JAXB for marshalling and unmarshalling of Java objects to XML and vice versa Used SOAP UI tool for testing and Liquid XML editor to validate XML documents against XSDs Used Jquery Angular JS JSP Javascript HTML CSS and JSTL for the frontend modules of TechIVR Provided the support for integrating the RESTful web services with clients Performed unit testing using JUnit and Integration testing using IVR system Invovled in creating Restful web services using JAXRS and JERSEY tool Developing the orchestrating of service through ESB calls to provide APIs to the service portal Applied OO design concept and design patterns such as DAO Singleton Factory Business Delegate and Service Locator to improve the existing JavaJ2EE based code base Rearchitected refactored and performance tuned a WebLogic and J2EE based CCIS call Reduction application which previously came down almost daily became a true 24x7 application at CCIS JBOSS ESB development and providing necessary inputs to the service portal Multitasked by gathering business requirements from user duration and feasibility of requests and working on other projects by resolving issues Environment Java J2EE Junit JDK 15 Spring core Spring MVC Hibernate SOAPRest Web services Ajax XML jQuery HTML CSS TCServer SVN Maven Jenkins Splunk SFX MAX SEED Oracle Software Developer Tata Docomo Hyderabad Telangana October 2011 to May 2013 Responsibilities As a team member understood the Business Design Development and Testing for Closing and Funding Module Involved in System design using UML Use case Class and Sequence diagrams created using Rational Rose Involved in project migration using Struts 20 web framework based on MVC2 Architecture Served integral role in analyze design develop and implement new requirements Used Java Beans Servlets Action classes Action Forms as Model JSP Struts tag libraries Custom Tags JSTL Tiles as view Action Servlet as a Controller and jQuery Implemented Design Patterns Business Delegate Session Faade DAO Value Object Proxy Service Locater Created several custom tags for JSP for maximum reusability of user interface components Participated in several design sessions to create common development strategies eg Error handling exceptions performance improvement practices session management etc Designed and developed several Servlets JSPs and JAVA classes for presentation layer Extensively worked on ILOG JRules engine which integrate with J2EE application Responsible for writing business rules and accessing firing the rules in Session Beans Design implements the server side Business and persistent logic using EJB Implemented application communication through asynchronous messaging service using MDB Followed Test Driven Development TDD Scrum concepts of the Agile to produce high Quality Software Wrote Oracle SQL queries and Stored Procedures using SQLPLSQL Responsible for code reviews integrated all the modules using WebLogic Application Server Implemented Junit Framework for the entire application Environment Java jdk15 J2EE JSP Servlets Struts EJB XML Oracle 10g UNIX Weblogic10 and T Line Framework Core Java Developer Axis bank Hyderabad Telangana August 2010 to September 2011 Responsibilities Involved in prototyping proof of concept design Interface Implementation testing and maintenance Created use case diagrams sequence diagrams and preliminary class diagrams for the system using UMLRational Rose Designed and developed the persistence tier using Hibernate framework Designed and developed front view components using JSP and HTML Involved in developing various reusable Helper and Utility classes using Core Java which are being used across all the modules of the application Developed Interactive web pages using AJAX and JavaScript Implemented Core Java concepts like Polymorphism Inheritance Multithreading etc Developed reusable utility classes in core java for validation which are used across all modules Developed Java classes for implementing Business logics using EJB Stateless session entity message driven beans Deployed and tested the application with web server Tomcat WebSphere Configured and tested the application with database server Oracle 10g and MySQL Helped in database design and tuning Created stored procedures Views in the Database Environment JDK 14 Core Java Multithreading Collections JSP JSTL Servlets EJB 30 XML HTML Java Script AJAX SOAP WSDL UML JDBC Shell Scripting JUnit log4j JMS Apache Tomcat WebSphere Application Server Oracle 10g Database Windows NT UnixLinux Technical Skills Languages Java 8 J2EE SQL and PLSQL Enterprise Java JSP Servlet JNDI JDBC Java security and JSF MarkupXML Technologies XML XSD XSLXSLT SAXDOM JSON Web Technologies HTML5 CSS3 Java Script JQuery Ajax Bootstrap AngularJS ReactJS and NodeJS ExpressJS Tools Framework Struts Spring Hibernate Spring MVC Spring HATEOAS Spring Web Flow Spring IOC Spring AOP JMS JSF Log4J Spring Boot Spring Cloud Spring Batch Spring Security Web services SOAP Restful UDDI WSDL JAXRPC JAXRS JAXWS JAXB Axis2 Jersey Micro Services Architecture WebApp Servers Web Sphere Apache Tomcat JBoss WebLogic Databases Oracle My SQL SQL Server IBM DB2 Mongo DB and Dynamo DB Development Tools Eclipse Net Beans IntelliJ RAD and Spring Tool SuiteSTS OR mapping Hibernate MyBatis and JPA Testing Tools Others JUnit Soap UI Mockito Log4j and JIRA Version Control CVS SVN GIT Rational Clear Case Methodologies Agile Scrum Waterfall OS Environment Windows UNIX Linux and Mac Cloud Technologies AWS EC2 S3 Elastic Beanstalk EBS Elastic Load Balancing ELB APIGateway Cloud Foundry Skills Api Linux Unix Load balancing Elastic beanstalk Ebs Ec2 Mac",
    "unique_id": "6d361559-a88d-4a9b-b928-68160a713a2a"
}