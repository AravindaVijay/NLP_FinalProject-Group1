{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Ogilvy Mather New York NY Over 6 Years of Experience in Analysis Design and Development of various standalone ClientServer and Web Based Software applications using Python Django AngularJS2 Node and Express Experience in Object Oriented Analysis in developing Python BackEnd framework using various design patterns Proficient in all phases of software development life cycle including requirement analysis Debugging Design Development Integration Maintenance Testing of Python web applications Proficient in developing webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript JQuery Bootstrap Libraries used Pandas data frame network Beautiful soup NumPy SciPy Matplotlib urlib2 JSON libraries and MySQL database for connectivity Knowledge of web scraping technologies such as BeautifulSoup4 and Urllib2 and Understanding of machine learning libraries such as Sci Kitlearn and TensorFlow Experienced in Object Oriented Design Programming concepts and unit testing using Pythons Uni test library Jasmine and Karma Experience in developing WebApplications implementing Model Template View architecture using Python and Django web application framework Experienced in effective implementation of Django objectrelational mapping layers ORM and effectively utilizing various relational databases Hands on experience in developing and implementing REST and SOAP Web Services Experienced in providing client form validation building custom directives and filters using Angular Having Strong experience setting up and working with CRUD operations inside Oracle SQL Microsoft SQL PostgreSQL MYSQL and MongoDB Experienced in using Versioning tools like Git and GitHub to maintain current and historical versions of files such as source code web pages and documentation Experienced in working with different operating systems such as Windows Linux and UNIX Working knowledge in Object Oriented Concepts OOPS like Collections Multithreading and Exception Handling Familiar with bug tracking tools such as You Track Bugzilla and Backlog Experience in Agile methodologies such as Extreme Programming Waterfall Model and TDD Excellent client interaction and presentation skills and proven experience in working independently as well in a team with good leadership qualities Work Experience Sr Python Developer Ogilvy Mather New York NY April 2018 to Present Involved in building database Model and Views utilizing Python to build an interactive webbased solution Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Optimized the boot time for imagegeneration and scan data acquisition server by enhancing the startup scripts Increased speed and memory efficiency on the imagegeneration and scan data acquisition component builds Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Designed frontend presentation logic using HTML CSS JavaScript Ajax AngularJS and Nodejs technologies for frontend user input validations and Restful web service calls Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using chef SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created test automation framework from scratch using Cucumber with Page Object Model POM using python language Developed User Stories using python in Behavior Driven Development for User Acceptance Testing Involved in helping the UNIX and Splunk administrators to deploy Splunk across the UNIX and windows environment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Designed the front end of the application using HTML5 CSS3 AJAX JSON and JQuery Developed RESTful services using Django Worked on backend of the application mainly using Active Records Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions inorder to match the pattern with the existing one Python Developer HSBC New York NY February 2017 to April 2018 Responsible for Developing GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Worked with a team of 5 people in designing implementing and delivering a complete CRM analytic solution in AWS Worked closely with and used Python libraries like Beautiful Soup and matplotlib Python developer to implement Machine learning algorithms Used Bootstrap and AngularJS Reactjs and Nodejs in effective web design Worked on server applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Built a Neo4j graph DB of corporate hierarchy data from Fact set terminal Implemented Spark GraphX application to analyze guest behavior for data science segments Worked with Graph Database Neo4J and implemented caching model for graph databases with background updates for various Microservices Enhanced user experience by designing new web features using MVC Framework like Express JS and NodeJS Worked on the modernization of a legacy and outsourced UI technologies used were Angular JS 2 CSS NodeJS Express JS and AWS Amazon Web Services Responsible for working on different database writing queries and responsible for backend data access modules using PLSQL stored procedures Worked on Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Made an application for eBay to detect the fraud which was occurring in their bidding process in addition to making a counter to detect every single bid which can detect the fraud Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Developed application using Amazon Web Service AWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Associate Python Developer CISCO San Jose CA July 2015 to January 2017 Designed front end and backend of the application utilizing Python on Django Web Framework For the dashboard utilized the Python web development framework Turbo Gear For the development of the user interface of the website used HTML CSS Java Script and AJAX To update a portion of a webpage used JavaScript and JSON and controlled modules that allow applications to be built on top of the web or the command line using Giotto Modify the existing PythonDjango modules to deliver certain format of data and have work knowledge on JIRAAgile for the bug tracking of the project Worked on a lightweight Web framework emphasizing flexibility and rapid development with the help of pylons and Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used jQuery framework for UI centric AJAX behavior Written Python scripts to parse JSON documents and load the data in database The data manipulations on the client side is done by using jQuery and Made reusable Widgets using concepts familiar from GUI programming with Reahl and for the development of the web applications utilized CSS and Bootstrap To share the information across the applications used pickleunpickle in python and Utilized Python libraries like Numpy and matplotlib for generating graphical reports and Used jQuery Ajax calls to build dynamic websites and Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Experienced with GIT version control and deployed the project to Heroku and Worked with Zope frameworks include the ZODB an object database for Python Worked on the development of SQL and stored procedures for normalization and renormalization in MYSQL and was involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Independent template engine agnostic integration with jinja2 mako tenjin and wheezy template plus html widgets Build SQL queries for performing various CRUD operations like create update read and delete Worked on Selfservice development of systemThis included web crawler data analysis and management Worked on San Francisco Food Trucks Project Application Search Engine Project Process Amazon Transaction Project San Francisco Food Trucks Project Python HTML JavaScript CSS GIT Provide Food Trucks web service It utilizes a minimal amount of source files to support all the functionalities including a front page indexhtml a style sheet homecss a JavaScript API code file mapjs and a folder containing all the supportive images Process Amazon Transaction Project Python Git Ding Talk UNIX SQL Wrote program to process Amazon Transaction files to analysis payment detail functions Worked on LAMP Linux Apache MySQL PYTHON architecture Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL and Django Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm OpenID App Engine JQuery etc Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Skilled in using Collections in Python for manipulating and looping through different user defined objects Used Couch base Python SDK to build applications that use Couch base Server and involved in writing application level code to interact with APIs Web Services using JSON Bulk dataissues import into JIRA using CSV file templates and was involved in REST client testing as part of this project and creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment and was responsible for debugging and troubleshooting the web application Involved in Design Development Deployment Testing Implementation of the application Prototyped an augmented reality solution in the form of a video using Premiere Pro and Python Git Adobe After Effects Implemented the application in UNIX environment and comfortable with all its commands WEB DEVELOPER American Express GurgaonIndia New York NY January 2013 to July 2015 Analysis of requirements and implement different functions according to design Django and Flask frameworks Moreover I have good knowledge in REST APIs JSON PostgreSQL MySQL developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services and route providers Also used Angularjs filter to make the data searchable and sortable Supported the bank website in creating user profiles we can also do the simple banking transactions for the with drawls deposit and transactions is accompanied by password check by securing Created a RESTful web service in Scala Akka Actors Elastic Search to download sample projects using RESTFul API from GitHub Explore fault injection tools written in different languages like C C and suggest integration of tools Deployed DevOps using Puppet Dashboard and Puppet DB for configuration management to existing infrastructure Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Involved in different layers such as Front and Back end as well as developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions and was involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures and implementation of clientside validations using jQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET and develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec and implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on advanced CSS concepts and building tablefree layout and worked on frontend frameworks like CSS Bootstrap for development of Web applications Wrote SQL Queries and implementing stored procedures functions packages tables views Cursors triggers and created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports and used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Worked on Python Libraries such as HTTPLib2 Urllib and support closed caption SCTE2021 AMOL12 and TV Guide Integration with multiple encoders and verification device and has detect SCTE27 subtitle and route them to proc card Spearheaded the efforts to bring in new challenging projects for the teams Locate TV Website Hybrid Cloud DVR and Low Latency ABR Live Streaming Designed the architecture of the hardware environments and methodology of the code Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Education Bachelors Additional Information Skills Python 5 years MySQL 3 years Django 5 year Software Development 4 years Cloud Computing 3 year Networking 3 years Agile 3 year Internet Research 3 year Network Security 3 year Web Development 4 year Technical skills Operating Systems Linux Windows 1087VistaXP Mac Programming Languages Python 2X Python 3X C C Java SQL PHP Web technologies HTML CSS XHTML Java Script jQuery Webserver Web logic Apache Tomcat 556080 NGINX Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Cloud Frameworks Open stack Helion Virtualization Platforms KVM HPVM Dockers Profiling Tools Cprofile profile Tprof Gprof Methodologies Agile Scrum Waterfall",
    "entities": [
        "Implemented Spark",
        "AJAX",
        "C NET",
        "GUI",
        "jQuery Worked",
        "New York",
        "Nodejs",
        "Education Bachelors Additional Information",
        "UNIX",
        "Akka HTTP",
        "TDD Excellent",
        "REST JSON",
        "jinja2 mako",
        "LAMP Linux",
        "Sci Kitlearn",
        "Heroku",
        "Controller",
        "Express",
        "DHTML",
        "Python Developer HSBC New York",
        "Amazon Transaction",
        "Used Couch",
        "Mac Programming Languages Python 2X",
        "MySQL Database",
        "Amazon",
        "NodeJS Express",
        "JQuery Developed",
        "Mongo",
        "Developed",
        "Oracle SQL Microsoft",
        "Bash",
        "CSS Bootstrap",
        "Created Python",
        "Analysis Design and Development",
        "TV Guide Integration",
        "Model and Views",
        "Restful",
        "Object Oriented Concepts",
        "Worked on",
        "Model Template View",
        "HTML5",
        "eBay",
        "Flask",
        "jQuery Angular JS",
        "NodeJS Worked",
        "Worked",
        "San Francisco Food Trucks Project Python",
        "San Francisco Food Trucks Project Application Search",
        "Debugging Design Development Integration Maintenance Testing of Python",
        "Created a",
        "MVC",
        "PythonDjango",
        "EndtoEnd",
        "JSON Bulk",
        "Jasmine and Karma",
        "GIT",
        "Zope",
        "BeautifulSoup4",
        "CSV",
        "HTML CSS",
        "WSGI",
        "API",
        "AWS Amazon Web Services Responsible",
        "HTML CSS JavaScript",
        "Microsoft Visio Worked",
        "ASPNET MVC Validation",
        "Server",
        "Scala Akka Actors Elastic Search",
        "Secured Web services",
        "Performed Unit",
        "SQL",
        "Pythons Uni",
        "American Express",
        "GitHub",
        "Pandas for Statistical Analysis",
        "lPythonspan",
        "UNIX Working",
        "API Integration Responsible for Configuring Kafka Consumer",
        "Integration Testing GUI",
        "API Integration Involved",
        "BOOTSTRAP UI",
        "Utilized Python",
        "Pandas",
        "Object Oriented Analysis",
        "CRUD",
        "ERDiagrams",
        "Involved in Design Development Deployment Testing Implementation",
        "Oracle Microsoft",
        "scan data acquisition",
        "scan data",
        "UI",
        "Front",
        "WebApplications",
        "Kafka System",
        "Amazon Web Service AWS",
        "Fact",
        "CSS",
        "AMAZON EMR",
        "jQuery",
        "SDK",
        "REST",
        "Process Amazon Transaction Project Python",
        "Present Involved",
        "Extreme Programming Waterfall Model",
        "HTML CSS Java Script",
        "MVC Framework like",
        "Python Unit Test",
        "Nodejs with Express"
    ],
    "experience": "Experience in Analysis Design and Development of various standalone ClientServer and Web Based Software applications using Python Django AngularJS2 Node and Express Experience in Object Oriented Analysis in developing Python BackEnd framework using various design patterns Proficient in all phases of software development life cycle including requirement analysis Debugging Design Development Integration Maintenance Testing of Python web applications Proficient in developing webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript JQuery Bootstrap Libraries used Pandas data frame network Beautiful soup NumPy SciPy Matplotlib urlib2 JSON libraries and MySQL database for connectivity Knowledge of web scraping technologies such as BeautifulSoup4 and Urllib2 and Understanding of machine learning libraries such as Sci Kitlearn and TensorFlow Experienced in Object Oriented Design Programming concepts and unit testing using Pythons Uni test library Jasmine and Karma Experience in developing WebApplications implementing Model Template View architecture using Python and Django web application framework Experienced in effective implementation of Django objectrelational mapping layers ORM and effectively utilizing various relational databases Hands on experience in developing and implementing REST and SOAP Web Services Experienced in providing client form validation building custom directives and filters using Angular Having Strong experience setting up and working with CRUD operations inside Oracle SQL Microsoft SQL PostgreSQL MYSQL and MongoDB Experienced in using Versioning tools like Git and GitHub to maintain current and historical versions of files such as source code web pages and documentation Experienced in working with different operating systems such as Windows Linux and UNIX Working knowledge in Object Oriented Concepts OOPS like Collections Multithreading and Exception Handling Familiar with bug tracking tools such as You Track Bugzilla and Backlog Experience in Agile methodologies such as Extreme Programming Waterfall Model and TDD Excellent client interaction and presentation skills and proven experience in working independently as well in a team with good leadership qualities Work Experience Sr Python Developer Ogilvy Mather New York NY April 2018 to Present Involved in building database Model and Views utilizing Python to build an interactive webbased solution Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Optimized the boot time for imagegeneration and scan data acquisition server by enhancing the startup scripts Increased speed and memory efficiency on the imagegeneration and scan data acquisition component builds Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Designed frontend presentation logic using HTML CSS JavaScript Ajax AngularJS and Nodejs technologies for frontend user input validations and Restful web service calls Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using chef SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created test automation framework from scratch using Cucumber with Page Object Model POM using python language Developed User Stories using python in Behavior Driven Development for User Acceptance Testing Involved in helping the UNIX and Splunk administrators to deploy Splunk across the UNIX and windows environment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Designed the front end of the application using HTML5 CSS3 AJAX JSON and JQuery Developed RESTful services using Django Worked on backend of the application mainly using Active Records Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions inorder to match the pattern with the existing one Python Developer HSBC New York NY February 2017 to April 2018 Responsible for Developing GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Worked with a team of 5 people in designing implementing and delivering a complete CRM analytic solution in AWS Worked closely with and used Python libraries like Beautiful Soup and matplotlib Python developer to implement Machine learning algorithms Used Bootstrap and AngularJS Reactjs and Nodejs in effective web design Worked on server applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Built a Neo4j graph DB of corporate hierarchy data from Fact set terminal Implemented Spark GraphX application to analyze guest behavior for data science segments Worked with Graph Database Neo4J and implemented caching model for graph databases with background updates for various Microservices Enhanced user experience by designing new web features using MVC Framework like Express JS and NodeJS Worked on the modernization of a legacy and outsourced UI technologies used were Angular JS 2 CSS NodeJS Express JS and AWS Amazon Web Services Responsible for working on different database writing queries and responsible for backend data access modules using PLSQL stored procedures Worked on Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Made an application for eBay to detect the fraud which was occurring in their bidding process in addition to making a counter to detect every single bid which can detect the fraud Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Developed application using Amazon Web Service AWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Associate Python Developer CISCO San Jose CA July 2015 to January 2017 Designed front end and backend of the application utilizing Python on Django Web Framework For the dashboard utilized the Python web development framework Turbo Gear For the development of the user interface of the website used HTML CSS Java Script and AJAX To update a portion of a webpage used JavaScript and JSON and controlled modules that allow applications to be built on top of the web or the command line using Giotto Modify the existing PythonDjango modules to deliver certain format of data and have work knowledge on JIRAAgile for the bug tracking of the project Worked on a lightweight Web framework emphasizing flexibility and rapid development with the help of pylons and Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used jQuery framework for UI centric AJAX behavior Written Python scripts to parse JSON documents and load the data in database The data manipulations on the client side is done by using jQuery and Made reusable Widgets using concepts familiar from GUI programming with Reahl and for the development of the web applications utilized CSS and Bootstrap To share the information across the applications used pickleunpickle in python and Utilized Python libraries like Numpy and matplotlib for generating graphical reports and Used jQuery Ajax calls to build dynamic websites and Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Experienced with GIT version control and deployed the project to Heroku and Worked with Zope frameworks include the ZODB an object database for Python Worked on the development of SQL and stored procedures for normalization and renormalization in MYSQL and was involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Independent template engine agnostic integration with jinja2 mako tenjin and wheezy template plus html widgets Build SQL queries for performing various CRUD operations like create update read and delete Worked on Selfservice development of systemThis included web crawler data analysis and management Worked on San Francisco Food Trucks Project Application Search Engine Project Process Amazon Transaction Project San Francisco Food Trucks Project Python HTML JavaScript CSS GIT Provide Food Trucks web service It utilizes a minimal amount of source files to support all the functionalities including a front page indexhtml a style sheet homecss a JavaScript API code file mapjs and a folder containing all the supportive images Process Amazon Transaction Project Python Git Ding Talk UNIX SQL Wrote program to process Amazon Transaction files to analysis payment detail functions Worked on LAMP Linux Apache MySQL PYTHON architecture Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL and Django Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm OpenID App Engine JQuery etc Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Skilled in using Collections in Python for manipulating and looping through different user defined objects Used Couch base Python SDK to build applications that use Couch base Server and involved in writing application level code to interact with APIs Web Services using JSON Bulk dataissues import into JIRA using CSV file templates and was involved in REST client testing as part of this project and creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment and was responsible for debugging and troubleshooting the web application Involved in Design Development Deployment Testing Implementation of the application Prototyped an augmented reality solution in the form of a video using Premiere Pro and Python Git Adobe After Effects Implemented the application in UNIX environment and comfortable with all its commands WEB DEVELOPER American Express GurgaonIndia New York NY January 2013 to July 2015 Analysis of requirements and implement different functions according to design Django and Flask frameworks Moreover I have good knowledge in REST APIs JSON PostgreSQL MySQL developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services and route providers Also used Angularjs filter to make the data searchable and sortable Supported the bank website in creating user profiles we can also do the simple banking transactions for the with drawls deposit and transactions is accompanied by password check by securing Created a RESTful web service in Scala Akka Actors Elastic Search to download sample projects using RESTFul API from GitHub Explore fault injection tools written in different languages like C C and suggest integration of tools Deployed DevOps using Puppet Dashboard and Puppet DB for configuration management to existing infrastructure Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Involved in different layers such as Front and Back end as well as developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions and was involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures and implementation of clientside validations using jQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET and develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec and implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on advanced CSS concepts and building tablefree layout and worked on frontend frameworks like CSS Bootstrap for development of Web applications Wrote SQL Queries and implementing stored procedures functions packages tables views Cursors triggers and created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports and used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Worked on Python Libraries such as HTTPLib2 Urllib and support closed caption SCTE2021 AMOL12 and TV Guide Integration with multiple encoders and verification device and has detect SCTE27 subtitle and route them to proc card Spearheaded the efforts to bring in new challenging projects for the teams Locate TV Website Hybrid Cloud DVR and Low Latency ABR Live Streaming Designed the architecture of the hardware environments and methodology of the code Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Education Bachelors Additional Information Skills Python 5 years MySQL 3 years Django 5 year Software Development 4 years Cloud Computing 3 year Networking 3 years Agile 3 year Internet Research 3 year Network Security 3 year Web Development 4 year Technical skills Operating Systems Linux Windows 1087VistaXP Mac Programming Languages Python 2X Python 3X C C Java SQL PHP Web technologies HTML CSS XHTML Java Script jQuery Webserver Web logic Apache Tomcat 556080 NGINX Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Cloud Frameworks Open stack Helion Virtualization Platforms KVM HPVM Dockers Profiling Tools Cprofile profile Tprof Gprof Methodologies Agile Scrum Waterfall",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Ogilvy",
        "Mather",
        "New",
        "York",
        "NY",
        "Years",
        "Experience",
        "Analysis",
        "Design",
        "Development",
        "standalone",
        "ClientServer",
        "Web",
        "Based",
        "Software",
        "applications",
        "Python",
        "Django",
        "AngularJS2",
        "Node",
        "Express",
        "Experience",
        "Object",
        "Oriented",
        "Analysis",
        "Python",
        "BackEnd",
        "framework",
        "design",
        "patterns",
        "phases",
        "software",
        "development",
        "life",
        "cycle",
        "requirement",
        "analysis",
        "Debugging",
        "Design",
        "Development",
        "Integration",
        "Maintenance",
        "Testing",
        "Python",
        "web",
        "applications",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Flask",
        "Webapp2",
        "Angularjs",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "Libraries",
        "Pandas",
        "data",
        "frame",
        "network",
        "Beautiful",
        "soup",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "urlib2",
        "JSON",
        "libraries",
        "MySQL",
        "database",
        "connectivity",
        "Knowledge",
        "web",
        "technologies",
        "BeautifulSoup4",
        "Urllib2",
        "Understanding",
        "machine",
        "learning",
        "libraries",
        "Sci",
        "Kitlearn",
        "TensorFlow",
        "Object",
        "Oriented",
        "Design",
        "Programming",
        "concepts",
        "unit",
        "testing",
        "Pythons",
        "Uni",
        "test",
        "library",
        "Jasmine",
        "Karma",
        "Experience",
        "WebApplications",
        "Model",
        "Template",
        "View",
        "architecture",
        "Python",
        "Django",
        "web",
        "application",
        "framework",
        "implementation",
        "Django",
        "mapping",
        "layers",
        "ORM",
        "Hands",
        "experience",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "client",
        "form",
        "validation",
        "building",
        "custom",
        "directives",
        "filters",
        "Angular",
        "experience",
        "CRUD",
        "operations",
        "Oracle",
        "SQL",
        "Microsoft",
        "SQL",
        "PostgreSQL",
        "MYSQL",
        "MongoDB",
        "Versioning",
        "tools",
        "Git",
        "GitHub",
        "versions",
        "files",
        "source",
        "code",
        "web",
        "pages",
        "documentation",
        "operating",
        "systems",
        "Windows",
        "Linux",
        "UNIX",
        "Working",
        "knowledge",
        "Object",
        "Concepts",
        "Collections",
        "Multithreading",
        "Exception",
        "Familiar",
        "bug",
        "tracking",
        "tools",
        "Track",
        "Bugzilla",
        "Backlog",
        "Experience",
        "methodologies",
        "Extreme",
        "Programming",
        "Waterfall",
        "Model",
        "TDD",
        "Excellent",
        "client",
        "interaction",
        "presentation",
        "skills",
        "experience",
        "team",
        "leadership",
        "qualities",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Ogilvy",
        "Mather",
        "New",
        "York",
        "NY",
        "April",
        "Present",
        "database",
        "Model",
        "Views",
        "Python",
        "solution",
        "Linux",
        "environment",
        "migration",
        "plan",
        "timeline",
        "migration",
        "boot",
        "time",
        "imagegeneration",
        "data",
        "acquisition",
        "server",
        "startup",
        "scripts",
        "speed",
        "memory",
        "efficiency",
        "imagegeneration",
        "data",
        "acquisition",
        "component",
        "Rest",
        "APIs",
        "development",
        "Flask",
        "Swagger",
        "application",
        "communication",
        "server",
        "client",
        "Akka",
        "HTTP",
        "frontend",
        "presentation",
        "logic",
        "HTML",
        "CSS",
        "JavaScript",
        "Ajax",
        "AngularJS",
        "Nodejs",
        "technologies",
        "frontend",
        "user",
        "input",
        "validations",
        "web",
        "service",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "chef",
        "SQL",
        "Naming",
        "Conventions",
        "Enforcement",
        "Python",
        "Stored",
        "Procedures",
        "server",
        "job",
        "conventions",
        "SQL",
        "SQL",
        "environment",
        "Python",
        "scripts",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "test",
        "automation",
        "framework",
        "scratch",
        "Cucumber",
        "Page",
        "Object",
        "Model",
        "POM",
        "language",
        "Developed",
        "User",
        "Stories",
        "python",
        "Behavior",
        "Driven",
        "Development",
        "User",
        "Acceptance",
        "Testing",
        "UNIX",
        "Splunk",
        "administrators",
        "Splunk",
        "UNIX",
        "windows",
        "environment",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Responsible",
        "Configuring",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "user",
        "interface",
        "BOOTSTRAP",
        "UI",
        "Angular",
        "JavaScript",
        "complexities",
        "application",
        "Wrote",
        "Lambda",
        "functions",
        "python",
        "AWSs",
        "Lambda",
        "Kinesis",
        "Elastic",
        "Search",
        "scripts",
        "transformations",
        "analytics",
        "data",
        "sets",
        "AMAZON",
        "EMR",
        "clusters",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbitMQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "testing",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "end",
        "application",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "JQuery",
        "Developed",
        "services",
        "Django",
        "backend",
        "application",
        "Active",
        "Records",
        "communication",
        "client",
        "server",
        "Secured",
        "Web",
        "services",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "clip",
        "board",
        "features",
        "client",
        "requirements",
        "expressions",
        "inorder",
        "pattern",
        "Python",
        "Developer",
        "HSBC",
        "New",
        "York",
        "NY",
        "February",
        "April",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "team",
        "people",
        "CRM",
        "solution",
        "AWS",
        "Python",
        "libraries",
        "Beautiful",
        "Soup",
        "Python",
        "developer",
        "Machine",
        "learning",
        "algorithms",
        "Bootstrap",
        "AngularJS",
        "Reactjs",
        "Nodejs",
        "web",
        "design",
        "server",
        "applications",
        "Django",
        "Python",
        "programming",
        "Developed",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "Neo4j",
        "graph",
        "DB",
        "hierarchy",
        "data",
        "Fact",
        "terminal",
        "Spark",
        "application",
        "guest",
        "behavior",
        "data",
        "science",
        "segments",
        "Graph",
        "Database",
        "Neo4J",
        "model",
        "graph",
        "databases",
        "background",
        "updates",
        "Microservices",
        "user",
        "experience",
        "web",
        "features",
        "MVC",
        "Framework",
        "Express",
        "JS",
        "NodeJS",
        "modernization",
        "legacy",
        "UI",
        "technologies",
        "JS",
        "CSS",
        "NodeJS",
        "Express",
        "JS",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "database",
        "queries",
        "data",
        "access",
        "modules",
        "procedures",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "application",
        "eBay",
        "fraud",
        "bidding",
        "process",
        "addition",
        "counter",
        "bid",
        "fraud",
        "Business",
        "feature",
        "Nodejs",
        "Express",
        "backend",
        "APIs",
        "application",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "EC2",
        "cloud",
        "search",
        "load",
        "balancer",
        "ELB",
        "Cloud",
        "Deploy",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "puppet",
        "DB2SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "Associate",
        "Python",
        "Developer",
        "CISCO",
        "San",
        "Jose",
        "CA",
        "July",
        "January",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "dashboard",
        "Python",
        "web",
        "development",
        "framework",
        "Turbo",
        "Gear",
        "development",
        "user",
        "interface",
        "website",
        "HTML",
        "CSS",
        "Java",
        "Script",
        "AJAX",
        "portion",
        "webpage",
        "JavaScript",
        "JSON",
        "modules",
        "applications",
        "top",
        "web",
        "command",
        "line",
        "Giotto",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "work",
        "knowledge",
        "JIRAAgile",
        "bug",
        "tracking",
        "project",
        "Web",
        "framework",
        "flexibility",
        "development",
        "help",
        "pylons",
        "frontend",
        "web",
        "interface",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "framework",
        "UI",
        "AJAX",
        "behavior",
        "Written",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "data",
        "manipulations",
        "client",
        "side",
        "jQuery",
        "Widgets",
        "concepts",
        "GUI",
        "programming",
        "Reahl",
        "development",
        "web",
        "applications",
        "CSS",
        "Bootstrap",
        "information",
        "applications",
        "pickleunpickle",
        "python",
        "Python",
        "Numpy",
        "matplotlib",
        "reports",
        "jQuery",
        "Ajax",
        "calls",
        "websites",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "GIT",
        "version",
        "control",
        "project",
        "Heroku",
        "Worked",
        "Zope",
        "frameworks",
        "ZODB",
        "object",
        "database",
        "Python",
        "development",
        "SQL",
        "procedures",
        "normalization",
        "renormalization",
        "MYSQL",
        "AJAX",
        "application",
        "web",
        "servicesAPI",
        "response",
        "template",
        "engine",
        "integration",
        "jinja2",
        "mako",
        "tenjin",
        "wheezy",
        "template",
        "html",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Worked",
        "Selfservice",
        "development",
        "web",
        "crawler",
        "data",
        "analysis",
        "management",
        "San",
        "Francisco",
        "Food",
        "Trucks",
        "Project",
        "Application",
        "Search",
        "Engine",
        "Project",
        "Process",
        "Amazon",
        "Transaction",
        "Project",
        "San",
        "Francisco",
        "Food",
        "Trucks",
        "Project",
        "Python",
        "HTML",
        "JavaScript",
        "CSS",
        "GIT",
        "Provide",
        "Food",
        "Trucks",
        "web",
        "service",
        "amount",
        "source",
        "files",
        "functionalities",
        "page",
        "style",
        "sheet",
        "homecss",
        "JavaScript",
        "API",
        "code",
        "file",
        "mapjs",
        "folder",
        "images",
        "Process",
        "Amazon",
        "Transaction",
        "Project",
        "Python",
        "Git",
        "Ding",
        "UNIX",
        "SQL",
        "Wrote",
        "program",
        "Amazon",
        "Transaction",
        "payment",
        "detail",
        "functions",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PYTHON",
        "architecture",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "management",
        "system",
        "MySQL",
        "Django",
        "stack",
        "Python",
        "web",
        "framework",
        "emphasis",
        "simplicity",
        "flexibility",
        "extensibility",
        "components",
        "reinvents",
        "wheels",
        "WSGI",
        "templating",
        "forms",
        "data",
        "events",
        "SQL",
        "Alchemy",
        "Storm",
        "OpenID",
        "App",
        "Engine",
        "JQuery",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Collections",
        "Python",
        "user",
        "objects",
        "Couch",
        "base",
        "Python",
        "SDK",
        "applications",
        "Couch",
        "base",
        "Server",
        "application",
        "level",
        "code",
        "APIs",
        "Web",
        "Services",
        "JSON",
        "Bulk",
        "dataissues",
        "import",
        "JIRA",
        "CSV",
        "file",
        "templates",
        "REST",
        "client",
        "testing",
        "part",
        "project",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "application",
        "reality",
        "solution",
        "form",
        "video",
        "Premiere",
        "Pro",
        "Python",
        "Git",
        "Adobe",
        "Effects",
        "application",
        "UNIX",
        "environment",
        "commands",
        "WEB",
        "DEVELOPER",
        "American",
        "Express",
        "GurgaonIndia",
        "New",
        "York",
        "NY",
        "January",
        "July",
        "Analysis",
        "requirements",
        "functions",
        "design",
        "Django",
        "Flask",
        "frameworks",
        "knowledge",
        "REST",
        "APIs",
        "JSON",
        "PostgreSQL",
        "MySQL",
        "frontend",
        "code",
        "call",
        "AngularJS",
        "jQuery",
        "data",
        "JSON",
        "Object",
        "controllers",
        "RESTful",
        "Server",
        "result",
        "web",
        "pages",
        "controller",
        "directives",
        "services",
        "route",
        "providers",
        "Angularjs",
        "filter",
        "data",
        "bank",
        "website",
        "user",
        "profiles",
        "banking",
        "transactions",
        "deposit",
        "transactions",
        "password",
        "check",
        "web",
        "service",
        "Scala",
        "Akka",
        "Actors",
        "Elastic",
        "Search",
        "sample",
        "projects",
        "RESTFul",
        "API",
        "GitHub",
        "Explore",
        "fault",
        "injection",
        "tools",
        "languages",
        "C",
        "C",
        "integration",
        "tools",
        "DevOps",
        "Puppet",
        "Dashboard",
        "Puppet",
        "DB",
        "configuration",
        "management",
        "infrastructure",
        "web",
        "pages",
        "HTML5CSS3",
        "Bootstrap",
        "XMLJSON",
        "REST",
        "web",
        "layers",
        "Front",
        "end",
        "Web",
        "Applications",
        "W3C",
        "XHTML",
        "HTML5",
        "PHP",
        "CSS3",
        "standards",
        "Python",
        "Django",
        "Payment",
        "Processing",
        "monitoring",
        "payments",
        "solutions",
        "software",
        "life",
        "cycle",
        "SDLC",
        "web",
        "application",
        "application",
        "Python",
        "Django",
        "EndtoEnd",
        "Web",
        "application",
        "development",
        "MVC",
        "architecture",
        "frontend",
        "CSS3",
        "Test",
        "Approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "Test",
        "framework",
        "PyUnit",
        "Designed",
        "Database",
        "Model",
        "application",
        "tables",
        "Views",
        "procedures",
        "implementation",
        "validations",
        "jQuery",
        "Angular",
        "JS",
        "ASPNET",
        "MVC",
        "Validation",
        "Controller",
        "level",
        "classes",
        "classes",
        "business",
        "logic",
        "C",
        "NET",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Drive",
        "Development",
        "BDD",
        "programming",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Spec",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "CSS",
        "concepts",
        "tablefree",
        "layout",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Wrote",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "triggers",
        "Database",
        "Schema",
        "MySQL",
        "Database",
        "ERDiagrams",
        "Microsoft",
        "Visio",
        "APIs",
        "thirdparty",
        "data",
        "analysis",
        "representation",
        "data",
        "Pandas",
        "data",
        "Sort",
        "data",
        "histograms",
        "Python",
        "Scripts",
        "Excel",
        "CSV",
        "files",
        "Statistical",
        "Reports",
        "Pandas",
        "Statistical",
        "Analysis",
        "application",
        "Numpy",
        "math",
        "functionalities",
        "Python",
        "Libraries",
        "HTTPLib2",
        "Urllib",
        "caption",
        "SCTE2021",
        "AMOL12",
        "TV",
        "Guide",
        "Integration",
        "encoders",
        "verification",
        "device",
        "subtitle",
        "proc",
        "card",
        "efforts",
        "projects",
        "teams",
        "Locate",
        "TV",
        "Website",
        "Hybrid",
        "Cloud",
        "DVR",
        "Low",
        "Latency",
        "ABR",
        "Streaming",
        "architecture",
        "hardware",
        "environments",
        "methodology",
        "code",
        "JavaScript",
        "Dynamic",
        "Page",
        "Functionality",
        "popup",
        "screens",
        "user",
        "entry",
        "Education",
        "Bachelors",
        "Additional",
        "Information",
        "Skills",
        "Python",
        "years",
        "MySQL",
        "years",
        "Django",
        "year",
        "Software",
        "Development",
        "years",
        "Cloud",
        "Computing",
        "year",
        "Networking",
        "years",
        "year",
        "Internet",
        "Research",
        "year",
        "Network",
        "Security",
        "year",
        "Web",
        "Development",
        "year",
        "skills",
        "Operating",
        "Systems",
        "Linux",
        "Mac",
        "Programming",
        "Languages",
        "Python",
        "2X",
        "Python",
        "3X",
        "C",
        "C",
        "Java",
        "SQL",
        "PHP",
        "Web",
        "technologies",
        "HTML",
        "CSS",
        "XHTML",
        "Java",
        "Script",
        "jQuery",
        "Webserver",
        "Web",
        "logic",
        "Apache",
        "Tomcat",
        "NGINX",
        "MySQL",
        "Oracle",
        "Microsoft",
        "SQL",
        "PostgreSQL",
        "MongoDB",
        "Python",
        "Web",
        "frameworks",
        "Django",
        "Pyramid",
        "Flask",
        "web2Py",
        "Development",
        "IDE",
        "PyCharm",
        "Pydev",
        "Eclipse",
        "Vim",
        "MS",
        "Visio",
        "Sublime",
        "Text",
        "Notepad",
        "Web",
        "Services",
        "SOAP",
        "RESTful",
        "Version",
        "Control",
        "GitHub",
        "Sub",
        "Version",
        "Build",
        "Tools",
        "GNU",
        "Apache",
        "Ant",
        "Apache",
        "Maven",
        "Buck",
        "BitBake",
        "Boot",
        "Grunt",
        "Cloud",
        "Frameworks",
        "stack",
        "Helion",
        "Virtualization",
        "Platforms",
        "KVM",
        "HPVM",
        "Dockers",
        "Profiling",
        "Tools",
        "Cprofile",
        "profile",
        "Tprof",
        "Gprof",
        "Methodologies",
        "Agile",
        "Scrum",
        "Waterfall"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:17:45.262558",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Ogilvy Mather New York NY Over 6 Years of Experience in Analysis Design and Development of various standalone ClientServer and Web Based Software applications using Python Django AngularJS2 Node and Express Experience in Object Oriented Analysis in developing Python BackEnd framework using various design patterns Proficient in all phases of software development life cycle including requirement analysis Debugging Design Development Integration Maintenance Testing of Python web applications Proficient in developing webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript JQuery Bootstrap Libraries used Pandas data frame network Beautiful soup NumPy SciPy Matplotlib urlib2 JSON libraries and MySQL database for connectivity Knowledge of web scraping technologies such as BeautifulSoup4 and Urllib2 and Understanding of machine learning libraries such as Sci Kitlearn and TensorFlow Experienced in Object Oriented Design Programming concepts and unit testing using Pythons Uni test library Jasmine and Karma Experience in developing WebApplications implementing Model Template View architecture using Python and Django web application framework Experienced in effective implementation of Django objectrelational mapping layers ORM and effectively utilizing various relational databases Hands on experience in developing and implementing REST and SOAP Web Services Experienced in providing client form validation building custom directives and filters using Angular Having Strong experience setting up and working with CRUD operations inside Oracle SQL Microsoft SQL PostgreSQL MYSQL and MongoDB Experienced in using Versioning tools like Git and GitHub to maintain current and historical versions of files such as source code web pages and documentation Experienced in working with different operating systems such as Windows Linux and UNIX Working knowledge in Object Oriented Concepts OOPS like Collections Multithreading and Exception Handling Familiar with bug tracking tools such as You Track Bugzilla and Backlog Experience in Agile methodologies such as Extreme Programming Waterfall Model and TDD Excellent client interaction and presentation skills and proven experience in working independently as well in a team with good leadership qualities Work Experience Sr Python Developer Ogilvy Mather New York NY April 2018 to Present Involved in building database Model and Views utilizing Python to build an interactive webbased solution Migrated present Linux environment to AWSCentOSRHEL by creating and executing a migration plan per scheduled timeline to complete the migration Optimized the boot time for imagegeneration and scan data acquisition server by enhancing the startup scripts Increased speed and memory efficiency on the imagegeneration and scan data acquisition component builds Involved and worked on different Rest APIs development by using Flask and Swagger Modeled the application to support bidirectional communication between server and client using Akka HTTP Designed frontend presentation logic using HTML CSS JavaScript Ajax AngularJS and Nodejs technologies for frontend user input validations and Restful web service calls Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using chef SQL Naming Conventions Enforcement Using Python Stored Procedures created a server job that enforces naming conventions for all SQL objects Creating a more constant SQL environment Developed Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Created test automation framework from scratch using Cucumber with Page Object Model POM using python language Developed User Stories using python in Behavior Driven Development for User Acceptance Testing Involved in helping the UNIX and Splunk administrators to deploy Splunk across the UNIX and windows environment Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring Developed user interface using BOOTSTRAP UI and Angular JavaScript to simplify the complexities of the application Wrote Lambda functions in python for AWSs Lambda Kinesis and Elastic Search which invokes python scripts to perform various transformations and analytics on large data sets in AMAZON EMR clusters Created Python and Bash tools to increase efficiency of retail management application system and operations data conversion scripts AMQPRabbitMQ REST JSON and CRUD scripts for API Integration Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Designed the front end of the application using HTML5 CSS3 AJAX JSON and JQuery Developed RESTful services using Django Worked on backend of the application mainly using Active Records Designed and developed communication between client and server using Secured Web services Developed and tested many features for dashboard using Python Java Bootstrap CSS Worked on updating the existing clip board to have the new features as per the client requirements Used many regular expressions inorder to match the pattern with the existing one Python Developer HSBC New York NY February 2017 to April 2018 Responsible for Developing GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Worked with a team of 5 people in designing implementing and delivering a complete CRM analytic solution in AWS Worked closely with and used Python libraries like Beautiful Soup and matplotlib Python developer to implement Machine learning algorithms Used Bootstrap and AngularJS Reactjs and Nodejs in effective web design Worked on server applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Built a Neo4j graph DB of corporate hierarchy data from Fact set terminal Implemented Spark GraphX application to analyze guest behavior for data science segments Worked with Graph Database Neo4J and implemented caching model for graph databases with background updates for various Microservices Enhanced user experience by designing new web features using MVC Framework like Express JS and NodeJS Worked on the modernization of a legacy and outsourced UI technologies used were Angular JS 2 CSS NodeJS Express JS and AWS Amazon Web Services Responsible for working on different database writing queries and responsible for backend data access modules using PLSQL stored procedures Worked on Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Made an application for eBay to detect the fraud which was occurring in their bidding process in addition to making a counter to detect every single bid which can detect the fraud Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Developed application using Amazon Web Service AWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Associate Python Developer CISCO San Jose CA July 2015 to January 2017 Designed front end and backend of the application utilizing Python on Django Web Framework For the dashboard utilized the Python web development framework Turbo Gear For the development of the user interface of the website used HTML CSS Java Script and AJAX To update a portion of a webpage used JavaScript and JSON and controlled modules that allow applications to be built on top of the web or the command line using Giotto Modify the existing PythonDjango modules to deliver certain format of data and have work knowledge on JIRAAgile for the bug tracking of the project Worked on a lightweight Web framework emphasizing flexibility and rapid development with the help of pylons and Developed the frontend featuring rich web interface using HTML5 CSS3 JavaScript and used jQuery framework for UI centric AJAX behavior Written Python scripts to parse JSON documents and load the data in database The data manipulations on the client side is done by using jQuery and Made reusable Widgets using concepts familiar from GUI programming with Reahl and for the development of the web applications utilized CSS and Bootstrap To share the information across the applications used pickleunpickle in python and Utilized Python libraries like Numpy and matplotlib for generating graphical reports and Used jQuery Ajax calls to build dynamic websites and Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Experienced with GIT version control and deployed the project to Heroku and Worked with Zope frameworks include the ZODB an object database for Python Worked on the development of SQL and stored procedures for normalization and renormalization in MYSQL and was involved in AJAX driven application by invoking web servicesAPI and parsing the JSON response Independent template engine agnostic integration with jinja2 mako tenjin and wheezy template plus html widgets Build SQL queries for performing various CRUD operations like create update read and delete Worked on Selfservice development of systemThis included web crawler data analysis and management Worked on San Francisco Food Trucks Project Application Search Engine Project Process Amazon Transaction Project San Francisco Food Trucks Project Python HTML JavaScript CSS GIT Provide Food Trucks web service It utilizes a minimal amount of source files to support all the functionalities including a front page indexhtml a style sheet homecss a JavaScript API code file mapjs and a folder containing all the supportive images Process Amazon Transaction Project Python Git Ding Talk UNIX SQL Wrote program to process Amazon Transaction files to analysis payment detail functions Worked on LAMP Linux Apache MySQL PYTHON architecture Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed data management system using MySQL and Django Developed full stack Python web framework with an emphasis on simplicity flexibility and extensibility It is built atop excellent components and reinvents zero wheels WSGI routing templating forms data plugins config events SQL Alchemy Storm OpenID App Engine JQuery etc Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Skilled in using Collections in Python for manipulating and looping through different user defined objects Used Couch base Python SDK to build applications that use Couch base Server and involved in writing application level code to interact with APIs Web Services using JSON Bulk dataissues import into JIRA using CSV file templates and was involved in REST client testing as part of this project and creating unit testregression test framework for workingnew code Using Subversion version control tool to coordinate teamdevelopment and was responsible for debugging and troubleshooting the web application Involved in Design Development Deployment Testing Implementation of the application Prototyped an augmented reality solution in the form of a video using Premiere Pro and Python Git Adobe After Effects Implemented the application in UNIX environment and comfortable with all its commands WEB DEVELOPER American Express GurgaonIndia New York NY January 2013 to July 2015 Analysis of requirements and implement different functions according to design Django and Flask frameworks Moreover I have good knowledge in REST APIs JSON PostgreSQL MySQL developed frontend code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in backend RESTful Server then display the wellorganized result in web pages by writing AngularJS controller directives services and route providers Also used Angularjs filter to make the data searchable and sortable Supported the bank website in creating user profiles we can also do the simple banking transactions for the with drawls deposit and transactions is accompanied by password check by securing Created a RESTful web service in Scala Akka Actors Elastic Search to download sample projects using RESTFul API from GitHub Explore fault injection tools written in different languages like C C and suggest integration of tools Deployed DevOps using Puppet Dashboard and Puppet DB for configuration management to existing infrastructure Implemented responsive web pages using HTML5CSS3 Bootstrap XMLJSON REST web Involved in different layers such as Front and Back end as well as developing Web Applications with W3C XHTML HTML5 PHP CSS3 standards and using Python Django Worked on Payment Processing which involves monitoring payments and provide required solutions and was involved in the complete software life cycle SDLC to develop the web application Coding application using Python Django in EndtoEnd Web application development using MVC architecture while frontend is built on CSS3 and HTML5Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit Designed Database Model for the entire application Creating tables Views and Stored procedures and implementation of clientside validations using jQuery Angular JS and ASPNET MVC Validation implemented at Controller level Designed and developed various abstract classes interfaces classes to construct the business logic using C NET and develop consumerbased features and applications using Python Django HTML Behavior Drive Development BDD and pairbased programming Performed Unit testing Integration Testing GUI and web application testing using Spec and implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on advanced CSS concepts and building tablefree layout and worked on frontend frameworks like CSS Bootstrap for development of Web applications Wrote SQL Queries and implementing stored procedures functions packages tables views Cursors triggers and created Database Schema for MySQL Database and involved in designing ERDiagrams using Microsoft Visio Worked on Restful APIs to access the thirdparty data for the internal analysis and statistical representation of that data and worked on Pandas to import the data Sort and plot the statistical data using histograms Worked on Python Scripts to create Excel and CSV files for documenting the Statistical Reports and used Pandas for Statistical Analysis in the application and Numpy for the advance math functionalities Worked on Python Libraries such as HTTPLib2 Urllib and support closed caption SCTE2021 AMOL12 and TV Guide Integration with multiple encoders and verification device and has detect SCTE27 subtitle and route them to proc card Spearheaded the efforts to bring in new challenging projects for the teams Locate TV Website Hybrid Cloud DVR and Low Latency ABR Live Streaming Designed the architecture of the hardware environments and methodology of the code Used JavaScript for Dynamic Page Functionality popup screens and the user entry validations Education Bachelors Additional Information Skills Python 5 years MySQL 3 years Django 5 year Software Development 4 years Cloud Computing 3 year Networking 3 years Agile 3 year Internet Research 3 year Network Security 3 year Web Development 4 year Technical skills Operating Systems Linux Windows 1087VistaXP Mac Programming Languages Python 2X Python 3X C C Java SQL PHP Web technologies HTML CSS XHTML Java Script jQuery Webserver Web logic Apache Tomcat 556080 NGINX Databases MySQL Oracle Microsoft SQL PostgreSQL MongoDB Python Web frameworks Django Pyramid Flask web2Py Development IDE PyCharm Pydev Eclipse Vim Net beans MS Visio Sublime Text Notepad Web Services SOAP RESTful Version Control GitHub Sub Version Build Tools GNU Apache Ant Apache Maven Buck BitBake Boot Grunt Cloud Frameworks Open stack Helion Virtualization Platforms KVM HPVM Dockers Profiling Tools Cprofile profile Tprof Gprof Methodologies Agile Scrum Waterfall",
    "unique_id": "e5902767-0560-4ca1-aa0d-110bacb2711b"
}