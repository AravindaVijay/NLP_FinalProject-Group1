{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Leidos Dallas TX Over 10 years of experience as an Application developer software development and design using Python Django XML HTML DHTML C Oracle PLSQL Postgres Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs Spyder and Visual Studio Experience with Django and Flask a highlevel Python Web framework Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experience with automationconfiguration management using tools like Ansible Puppet Chef and Salt Stack Experienced in MVC frameworks like Flask and Pyramid and MVT framework like django Experience with CICD systems like Git and Jenkins Have experience working with Bitbucket Worked on Jenkins continuous integration tool for deployment of project Extensive experience in technologies like Java UML HTML JSP Servlets JMS JDBC JNDI Proficient in SQL databases MSSQL Server MySQL Oracle DB Postgres and MongoDB Basic Knowledge on JSON based REST Web services and Amazon Web Services AWS Knowledge of SOAREST based service development Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Generate and verify Firebase auth tokens Extensive programming experience in Struts Spring MVC Spring Security Spring IOC and Spring DAO Access Google Cloud Platform resources like Cloud Storage buckets and Firestore databases associated with Firebase project Basic knowledge on Rest API and JSON Parsing and JQuery Experience with Angular front end web application Used Python Perl JQuery JavaScript and JSON at the front end Monitor all usersFirewall traffic using smart viewtracker and smart viewmonitor Ensured standards are maintained for firewalls and other network device version updates Experience in Bash Shell Scripting SQL and Java Having Good Experience in Object Oriented Concepts with C and Python 3x Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Experience in working with Tableau Analytics Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Good Experience in error and exceptional handling Experience in designing the automation framework using Shell scripting Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Experience with cloud technologies such as VMware AWS Created an Test Automation Framework with Selenium for test automation process Unit testing for the entire code and fixing bugs in unit testing Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Authorized to work in the US for any employer Work Experience Sr Python Developer Leidos October 2017 to Present Description Target is recognized as a leader in innovation across the retail industry From pioneering the concept of designer partnerships to consistently being best in class in store design Target remains focused on not only meeting but exceeding its guests needs Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Used REACTJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA Involved to implement various screens for the front end using REACTJS and used various predefined components from NPM Node Package Manager and REDUX library Used AWS Cloud Watch to monitor and store logging information Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Server side automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Provided technical delivery in compliance with Services Oriented Architecture against IBM Connections and WebSphere Portal platforms including programming JSR168 JSR 286 Portlet specs JMS JSP Servlets JUnit and Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Deployed project into Amazon web services AWS using amazon elastic bean stalk Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services AWS Jr Python Developer Catholic Health Initiatives Lincoln NE September 2015 to October 2017 Description CHI Health St Elizabeth founded by the Sisters of St Francis of Perpetual Adoration in 1889 is a fullservice 260bed nonprofit regional medical center We are guided by our core values of reverence integrity compassion and excellence to programs and services that benefit our patients as well as the health of the greater community Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Coded model level validation using Python programming with emphasis in web security Handled Business logics by backend Python programming to achieve optimal results Implemented jQuery to improve the overall usability of the website interface and AJAX functionality to speed up web application Used Nodejs to create a fast chat server with efficiency Developed views and templates in Django to create a userfriendly website interface Constructed RESTful APIs using PHP Nodejs and MySQLPostgreSQL Configured Django to manage URLs and application parameters Extensively used Python Django Framework for developing backend of web applications Used Django APIs for database access Developed reusable components using reactjs and redux for maintaining the state and actions of the functions Participate in discussions with business users for requirements related doubts Provide application maintenance and enhancement support for legacy system Utilised Futures and Spring Framework to make Asynchronous calls to the application Developed web services using Restful technology to support JSON and XML Created new connections through applications for better access to MySQL database and involved in writing SQL PLSQL Stored procedures functions sequences triggers cursors object types etc Expertise in Spring Security both client and ServerSide Developed user interface using JSP jQuery and AJAX to speed the application Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Worked on resulting reports of the application and Tableau reports Implemented AJAX to update necessary section of webpages and hence avoiding the need for reloading the entire web page Implemented the Project structure based on Spring MVC pattern using spring boot Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Creating and configuring virtual development environments with Chef and Virtual Box Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Created PyUnit test cases for unit testing Development of test framework using the Python Managed code with unit tests and GitHub Developed Capistrano scripts to automate deployment on various environments Used GIT as Source control repositories with regular code reviews and pullmerge requests Environment Python 27 Django 17 CSS HTML Bootstrap JavaScript AJAX JQuery Pandas MYSQL Restful APIs Linux Servlets JavaBeans SCRUM Agile Heroku JIRA GIT Sr Python developer Comcast Philadelphia PA August 2013 to September 2015 Responsibilities Worked with various C tasks integrated with them using Python Conducted and performed unit testing for every module of the source code Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Extensively involved in performing unit testing using PyUnit which are bundled and imported automatically All the code are stored in local Git repository and once it is validated then it is committed onto GitHub Installation configuration and administration of Virtual box and VMware virtual machine for Ubuntu and Linux servers Created SQL loader Scripts to load data into the temporary staging tables Scripted Powershell reports to check for user account audit compliance Involved in making GUI JSP HTML and JS and java classes using Struts Framework Object Oriented ConceptsOOPS like Collections Multithreading Exception Handling Reflection Carried out various mathematical operations for calculation purpose using Python libraries Automated the cloud deployment using python and AWS cloud formation templates Environment Python C C Django Pytest Git PDB JSON SQL Alchemy MySQL Eclipse Pycharm HTMLCSS Bootstrap Linux AWS Javascript Jenkins Full Stack Python Developer Cigna Health Insurance Bloomfield CT July 2011 to August 2013 Description Cigna is an American worldwide health services organization based in suburban Bloomfield Connecticut Its insurance subsidiaries are major providers of medical dental disability life and accident insurance and related products and services the majority of which are offered through employers and other groups Responsibilities Develop test deploy and maintain the application Worked with UI team to maintain and monitor the application using JAVA and Python Developed webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript and jQuery Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse csv files and load the data in database Generated property list for every application dynamically using Python Designed test cases and test plans and developed an embedded software data driven test automation framework in Linux Python Worked on HTML5 CSS3 JavaScript Git REST API Mongo DB intelliJ IDEA Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python AGILE development process has been followed Experienced with standup Retrospective Demo Planning and Code Review meetings Used AJAX for request response processing without reloading the complete page Designed the architecture based on the popular J2EE Model 2 approach of ModelViewController design paradigm Developed UI screens using Angular JS Custom Directives Validation and Promises Developed Angular Controllers Services Filters and HTML templates using Angular Directive Developed Test Cases using Easy Mock and used POSTMAN to test REST Calls Used Python and Django Creating Graphics XML Processing Data Exchange and Business Logic Develop and execute Unit Test plans using JUnit ensuring that results are documented and reviewed with Quality Assurance teams responsible for integrated testing Worked in agile environment and developed cicd pipeline through Jira GitHub Team City Pypi Docker Hub Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Expert in writing Python modules to extractload asset data from the MySQL source database Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL database package Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Using PythonDjango HTML CSS Sass JavaScript SQL and PostgreSQL maintaining and adding software Environment Python 2726 Django 1413 Angularjs VB C XML CSS HTML DHTML JavaScript SQl PostgreSQL Jira REST API Mongo DB intelliJ IDEA Full stack Python Developer Hudson Insurance Alpharetta GA June 2009 to July 2011 Description The old Customer Service Website is being replaced with a modern attractive SOAoriented site It has various parts of the functionality to communicate with the backend system through web services It uses the ACORD Association for Cooperative Operations Research and Development Life and Annuity Standards expressing the insurance concepts in a formally defined specification to enable trading partner and intraenterprise of sharing insurance data giving a welldefined vocabulary for expressing the insurance concepts Responsibilities Designed and Developed the Solution Architecture package to identify all possible solutions for the project using UML methodologies Used J2EE Design patterns Singleton Service Locator and DAO Implemented MVC Architecture using JSF and Struts framework and custom tag libraries Developed a multiuser web application using JSP JSTL Action Forms Action Classes JavaScript and JDBC to provide the needed functionality Used Hibernate for data manipulation and access Used Spring AOP and dependency injection framework for business aspect of the application Used Spring DAO classes for data access Testing unit testing integration testing of the application Developed Java beans and JSPs by using Spring and JSTL tag libs for supplements Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Worked on Python Modules and Packages Deployed Django web application in Apache webserver and carpathia cloud web deployment Used Python Data structures like lists dictionaries tuples Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Created creating tables data manipulation and retrieval using Oracle and DB2 Used MQ Series to send receive and read the messages and also Created Queues Involved in the deployment process of the application on WebSphere Application Server SVN are used as source code controls and developed test cases using JUnit Deployed the Web application using ANT build script Used Mercury Quality Center for requirement management executing the test plans and defect management Used SOA architecture for communication between various business entities Communicated with the business people to get more clarity on the requirementschanges Environment Java Spring Python JavaScript JDBC XML JAXB Web services SOAP WSDL Hibernate Spring IBM MQ PLSQL WebSphere RAD 70 JUnit Oracle 10g DB2 Mercury Quality Center SVN Full Stack Python Developer HSBC New York NY May 2007 to June 2009 Responsibilities Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Developed application using Amazon Web ServiceAWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Create a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTfulAPI provided by Openstack Developed high performant multithreaded C applications using C11 features like shared_ptr weak_ptr lambda and atomic operations Developed entire frontend and backend modules using Python on Flask Web Framework Implemented Amazon Web services AWS Rest API Gateway using AWS Lambda Worked on server side applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Python framework for using OpenStackDevStack for MicroService Wireless Security Appliance Development RESTful API Developed a MATLAB algorithm which determines an objects dimensions from digital images Created ETL mappings using Informatica Power Center to move Data from multiple sources like Flat files Oracle into a common target area such as Staging Data Warehouse and Data Marts Created data pipelines using Apache Spark a bigdata processing and computing framework Used python libraries like Beautiful Soup and matplotlib Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Worked on Python OpenStack APIs and used Numpy for Numerical analysis Develop and maintain internal facing RESTful services using Python Implement a continuous delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Worked on MongoDB database concepts such as locking transactions indexes Shading replication schema design Involved in deploying applications into Elastic Beanstalk Environment using cloud formation templates Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Deployed Cloud with various templates Wrote python scripts to assign ip addresses to vms on different networks Familiar with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used ansible for automating cloud deployment process Developed the ACP daemon in Python to allow for integration with OpenStack Backend data access modules using PLSQL stored procedures and Oracle were designed and created Created RESTful APIs calls with server parse output report of excel files Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in Agile Methodologies and SCRUM Process Performing code coverage and pep8 standardization Worked on Python OpenStack APIs and used NumPy for Numerical analysis Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Implemented RESTful WebServices For sending and receiving the data between multiple systems Created Database tables functions stored procedures and wrote prepared statements using PLSQL Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB MongoDB and VMWare API calls Education Bachelors Skills C 6 years Git 7 years PYTHON 10 years MYSQL 8 years SQL 10 years Additional Information Technical Skills Operating Systems Unix Linux Windows and Mac Programming Languages Python PLSQL AngularJS JAVAC Databases Oracle 1011g MySQL SQL Server and PostgreSQL MONGODB Tools Intellij PyCharm File Zilla Spyder PLSQL Developer and TOAD Eclipse Visual studio code My Sql workbench Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and Version One Cloud VPC creation EC2 instance S3 buckets RDS instances Amazon command line cloud Front IAM creating security groups managing S3 object lifecycle creating CDN implementing S3 security Encryption Route53 working with databases and DNS Using bootstrap scripts AWS EC2 and S3",
    "entities": [
        "Used Test Driven Approach",
        "Spring Framework",
        "AJAX",
        "Created Queues Involved",
        "Informatica Power Center",
        "Elastic Container",
        "JMS JSP Servlets JUnit",
        "GitHub Nexus",
        "webapp2",
        "Work Experience Sr Python Developer",
        "Created Database",
        "IBM",
        "Panda",
        "Python REST API Framework Used",
        "SOAP",
        "XML",
        "DHTML",
        "Created PyUnit",
        "PyUnit",
        "Software Development Life Cycle Database",
        "Software Development Life Cycle SDLC",
        "JUnit",
        "Shell",
        "csv",
        "the Performance of Stored Procedures and Queries Installed",
        "Automated",
        "WebSphere Application Server SVN",
        "Apache Spark",
        "TX",
        "Amazon",
        "Target",
        "Bootstrap Working",
        "Python Conducted",
        "WebSphere",
        "Created RESTful",
        "MicroService Wireless Security Appliance Development RESTful API Developed",
        "Amazon AWS S3",
        "Developed",
        "Struts Framework Object Oriented ConceptsOOPS",
        "Oracle Relational",
        "IBM Connections",
        "Customer Service Website",
        "MATLAB",
        "Dallas",
        "NOVA",
        "Django",
        "Bitbucket Worked",
        "VMware",
        "Unit Test",
        "RAD",
        "Responsibilities Involved",
        "UML",
        "redux",
        "Git",
        "Waterfall",
        "Restful",
        "Object Oriented Concepts",
        "jQuery Rewrite",
        "Angular JS Custom Directives Validation",
        "Communicated",
        "Develop",
        "SOA",
        "AGILE",
        "Linux",
        "Bloomfield Connecticut",
        "JSP",
        "Quality Assurance",
        "Mac Programming Languages",
        "Flask",
        "JUnit Oracle",
        "JSP JSTL Action Forms Action Classes JavaScript",
        "VMWare API",
        "HTML CSS jQuery",
        "Docker",
        "DOM",
        "Oracle DB Postgres",
        "WebSphere Portal",
        "RDS",
        "Business Logic Develop",
        "Scala Implemented RESTful WebServices",
        "Views",
        "Bash Shell Scripting",
        "SQLbased",
        "MVC",
        "Agile",
        "PythonPerl",
        "GIT",
        "Node JS",
        "IBM WebSphere Application Deployment",
        "JS",
        "UNIX Authorized",
        "Web Services",
        "US",
        "Amazon Web Services AWS Knowledge of SOAREST",
        "Front IAM",
        "Python Django Framework",
        "Created",
        "Python Implement",
        "AWS",
        "DHTML C Oracle PLSQL Postgres Developed Consumerbased",
        "Created SQL",
        "Retrospective Demo Planning",
        "Oracle",
        "Coded",
        "REACTJS",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "JSF",
        "Created ETL",
        "XML Created",
        "Ansible Puppet Chef",
        "Utilised Futures",
        "ServerSide Developed",
        "HTML",
        "java",
        "the ACORD Association for Cooperative Operations Research and Development Life and Annuity Standards",
        "Used Mercury Quality Center",
        "CDN",
        "Python Spring IOC Inversion",
        "SQL",
        "REST Calls Used Python",
        "Django Oracle DB",
        "C11",
        "lPythonspan",
        "DAO Implemented MVC Architecture",
        "Administrators",
        "Python Spring Security",
        "PHP Nodejs",
        "CICD",
        "ACP",
        "GitHub Developed Capistrano",
        "Create a custom",
        "My Sql",
        "pep8",
        "Additional Information Technical Skills Operating Systems",
        "OpenStack Backend",
        "Virtual",
        "Development and Enhancement Projects Good",
        "NPM Node Package",
        "SQL PLSQL Stored",
        "Alpharetta",
        "Application Server",
        "JAVA",
        "Firebug Web Services AWS Jr Python Developer Catholic Health Initiatives Lincoln",
        "Jira GitHub Team City",
        "Services Oriented Architecture",
        "Firebug Used JIRA",
        "ANT",
        "UI",
        "SDLC Requirement Analysis Design Development and Testing",
        "Development of test",
        "VMware AWS Created an Test Automation Framework with Selenium",
        "Firebase",
        "Present Description Target",
        "Firestore",
        "Python Developer Hudson Insurance",
        "REST",
        "Data",
        "Spring DAO",
        "Developed UI",
        "Tableau Analytics Good",
        "NoSQL",
        "Tableau",
        "Horizon",
        "Application",
        "Python Developed",
        "Staging Data Warehouse",
        "Python Unit Test",
        "Nodejs with Express",
        "Node",
        "DNS"
    ],
    "experience": "Experience with Django and Flask a highlevel Python Web framework Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experience with automationconfiguration management using tools like Ansible Puppet Chef and Salt Stack Experienced in MVC frameworks like Flask and Pyramid and MVT framework like django Experience with CICD systems like Git and Jenkins Have experience working with Bitbucket Worked on Jenkins continuous integration tool for deployment of project Extensive experience in technologies like Java UML HTML JSP Servlets JMS JDBC JNDI Proficient in SQL databases MSSQL Server MySQL Oracle DB Postgres and MongoDB Basic Knowledge on JSON based REST Web services and Amazon Web Services AWS Knowledge of SOAREST based service development Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Generate and verify Firebase auth tokens Extensive programming experience in Struts Spring MVC Spring Security Spring IOC and Spring DAO Access Google Cloud Platform resources like Cloud Storage buckets and Firestore databases associated with Firebase project Basic knowledge on Rest API and JSON Parsing and JQuery Experience with Angular front end web application Used Python Perl JQuery JavaScript and JSON at the front end Monitor all usersFirewall traffic using smart viewtracker and smart viewmonitor Ensured standards are maintained for firewalls and other network device version updates Experience in Bash Shell Scripting SQL and Java Having Good Experience in Object Oriented Concepts with C and Python 3x Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Experience in working with Tableau Analytics Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Good Experience in error and exceptional handling Experience in designing the automation framework using Shell scripting Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Experience with cloud technologies such as VMware AWS Created an Test Automation Framework with Selenium for test automation process Unit testing for the entire code and fixing bugs in unit testing Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Authorized to work in the US for any employer Work Experience Sr Python Developer Leidos October 2017 to Present Description Target is recognized as a leader in innovation across the retail industry From pioneering the concept of designer partnerships to consistently being best in class in store design Target remains focused on not only meeting but exceeding its guests needs Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Used REACTJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA Involved to implement various screens for the front end using REACTJS and used various predefined components from NPM Node Package Manager and REDUX library Used AWS Cloud Watch to monitor and store logging information Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Server side automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Provided technical delivery in compliance with Services Oriented Architecture against IBM Connections and WebSphere Portal platforms including programming JSR168 JSR 286 Portlet specs JMS JSP Servlets JUnit and Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Deployed project into Amazon web services AWS using amazon elastic bean stalk Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services AWS Jr Python Developer Catholic Health Initiatives Lincoln NE September 2015 to October 2017 Description CHI Health St Elizabeth founded by the Sisters of St Francis of Perpetual Adoration in 1889 is a fullservice 260bed nonprofit regional medical center We are guided by our core values of reverence integrity compassion and excellence to programs and services that benefit our patients as well as the health of the greater community Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Coded model level validation using Python programming with emphasis in web security Handled Business logics by backend Python programming to achieve optimal results Implemented jQuery to improve the overall usability of the website interface and AJAX functionality to speed up web application Used Nodejs to create a fast chat server with efficiency Developed views and templates in Django to create a userfriendly website interface Constructed RESTful APIs using PHP Nodejs and MySQLPostgreSQL Configured Django to manage URLs and application parameters Extensively used Python Django Framework for developing backend of web applications Used Django APIs for database access Developed reusable components using reactjs and redux for maintaining the state and actions of the functions Participate in discussions with business users for requirements related doubts Provide application maintenance and enhancement support for legacy system Utilised Futures and Spring Framework to make Asynchronous calls to the application Developed web services using Restful technology to support JSON and XML Created new connections through applications for better access to MySQL database and involved in writing SQL PLSQL Stored procedures functions sequences triggers cursors object types etc Expertise in Spring Security both client and ServerSide Developed user interface using JSP jQuery and AJAX to speed the application Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Worked on resulting reports of the application and Tableau reports Implemented AJAX to update necessary section of webpages and hence avoiding the need for reloading the entire web page Implemented the Project structure based on Spring MVC pattern using spring boot Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Creating and configuring virtual development environments with Chef and Virtual Box Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Created PyUnit test cases for unit testing Development of test framework using the Python Managed code with unit tests and GitHub Developed Capistrano scripts to automate deployment on various environments Used GIT as Source control repositories with regular code reviews and pullmerge requests Environment Python 27 Django 17 CSS HTML Bootstrap JavaScript AJAX JQuery Pandas MYSQL Restful APIs Linux Servlets JavaBeans SCRUM Agile Heroku JIRA GIT Sr Python developer Comcast Philadelphia PA August 2013 to September 2015 Responsibilities Worked with various C tasks integrated with them using Python Conducted and performed unit testing for every module of the source code Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Extensively involved in performing unit testing using PyUnit which are bundled and imported automatically All the code are stored in local Git repository and once it is validated then it is committed onto GitHub Installation configuration and administration of Virtual box and VMware virtual machine for Ubuntu and Linux servers Created SQL loader Scripts to load data into the temporary staging tables Scripted Powershell reports to check for user account audit compliance Involved in making GUI JSP HTML and JS and java classes using Struts Framework Object Oriented ConceptsOOPS like Collections Multithreading Exception Handling Reflection Carried out various mathematical operations for calculation purpose using Python libraries Automated the cloud deployment using python and AWS cloud formation templates Environment Python C C Django Pytest Git PDB JSON SQL Alchemy MySQL Eclipse Pycharm HTMLCSS Bootstrap Linux AWS Javascript Jenkins Full Stack Python Developer Cigna Health Insurance Bloomfield CT July 2011 to August 2013 Description Cigna is an American worldwide health services organization based in suburban Bloomfield Connecticut Its insurance subsidiaries are major providers of medical dental disability life and accident insurance and related products and services the majority of which are offered through employers and other groups Responsibilities Develop test deploy and maintain the application Worked with UI team to maintain and monitor the application using JAVA and Python Developed webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript and jQuery Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse csv files and load the data in database Generated property list for every application dynamically using Python Designed test cases and test plans and developed an embedded software data driven test automation framework in Linux Python Worked on HTML5 CSS3 JavaScript Git REST API Mongo DB intelliJ IDEA Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python AGILE development process has been followed Experienced with standup Retrospective Demo Planning and Code Review meetings Used AJAX for request response processing without reloading the complete page Designed the architecture based on the popular J2EE Model 2 approach of ModelViewController design paradigm Developed UI screens using Angular JS Custom Directives Validation and Promises Developed Angular Controllers Services Filters and HTML templates using Angular Directive Developed Test Cases using Easy Mock and used POSTMAN to test REST Calls Used Python and Django Creating Graphics XML Processing Data Exchange and Business Logic Develop and execute Unit Test plans using JUnit ensuring that results are documented and reviewed with Quality Assurance teams responsible for integrated testing Worked in agile environment and developed cicd pipeline through Jira GitHub Team City Pypi Docker Hub Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Expert in writing Python modules to extractload asset data from the MySQL source database Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL database package Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Using PythonDjango HTML CSS Sass JavaScript SQL and PostgreSQL maintaining and adding software Environment Python 2726 Django 1413 Angularjs VB C XML CSS HTML DHTML JavaScript SQl PostgreSQL Jira REST API Mongo DB intelliJ IDEA Full stack Python Developer Hudson Insurance Alpharetta GA June 2009 to July 2011 Description The old Customer Service Website is being replaced with a modern attractive SOAoriented site It has various parts of the functionality to communicate with the backend system through web services It uses the ACORD Association for Cooperative Operations Research and Development Life and Annuity Standards expressing the insurance concepts in a formally defined specification to enable trading partner and intraenterprise of sharing insurance data giving a welldefined vocabulary for expressing the insurance concepts Responsibilities Designed and Developed the Solution Architecture package to identify all possible solutions for the project using UML methodologies Used J2EE Design patterns Singleton Service Locator and DAO Implemented MVC Architecture using JSF and Struts framework and custom tag libraries Developed a multiuser web application using JSP JSTL Action Forms Action Classes JavaScript and JDBC to provide the needed functionality Used Hibernate for data manipulation and access Used Spring AOP and dependency injection framework for business aspect of the application Used Spring DAO classes for data access Testing unit testing integration testing of the application Developed Java beans and JSPs by using Spring and JSTL tag libs for supplements Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Worked on Python Modules and Packages Deployed Django web application in Apache webserver and carpathia cloud web deployment Used Python Data structures like lists dictionaries tuples Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Created creating tables data manipulation and retrieval using Oracle and DB2 Used MQ Series to send receive and read the messages and also Created Queues Involved in the deployment process of the application on WebSphere Application Server SVN are used as source code controls and developed test cases using JUnit Deployed the Web application using ANT build script Used Mercury Quality Center for requirement management executing the test plans and defect management Used SOA architecture for communication between various business entities Communicated with the business people to get more clarity on the requirementschanges Environment Java Spring Python JavaScript JDBC XML JAXB Web services SOAP WSDL Hibernate Spring IBM MQ PLSQL WebSphere RAD 70 JUnit Oracle 10 g DB2 Mercury Quality Center SVN Full Stack Python Developer HSBC New York NY May 2007 to June 2009 Responsibilities Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Developed application using Amazon Web ServiceAWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Create a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTfulAPI provided by Openstack Developed high performant multithreaded C applications using C11 features like shared_ptr weak_ptr lambda and atomic operations Developed entire frontend and backend modules using Python on Flask Web Framework Implemented Amazon Web services AWS Rest API Gateway using AWS Lambda Worked on server side applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Python framework for using OpenStackDevStack for MicroService Wireless Security Appliance Development RESTful API Developed a MATLAB algorithm which determines an objects dimensions from digital images Created ETL mappings using Informatica Power Center to move Data from multiple sources like Flat files Oracle into a common target area such as Staging Data Warehouse and Data Marts Created data pipelines using Apache Spark a bigdata processing and computing framework Used python libraries like Beautiful Soup and matplotlib Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Worked on Python OpenStack APIs and used Numpy for Numerical analysis Develop and maintain internal facing RESTful services using Python Implement a continuous delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Worked on MongoDB database concepts such as locking transactions indexes Shading replication schema design Involved in deploying applications into Elastic Beanstalk Environment using cloud formation templates Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Deployed Cloud with various templates Wrote python scripts to assign ip addresses to vms on different networks Familiar with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used ansible for automating cloud deployment process Developed the ACP daemon in Python to allow for integration with OpenStack Backend data access modules using PLSQL stored procedures and Oracle were designed and created Created RESTful APIs calls with server parse output report of excel files Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in Agile Methodologies and SCRUM Process Performing code coverage and pep8 standardization Worked on Python OpenStack APIs and used NumPy for Numerical analysis Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Implemented RESTful WebServices For sending and receiving the data between multiple systems Created Database tables functions stored procedures and wrote prepared statements using PLSQL Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB MongoDB and VMWare API calls Education Bachelors Skills C 6 years Git 7 years PYTHON 10 years MYSQL 8 years SQL 10 years Additional Information Technical Skills Operating Systems Unix Linux Windows and Mac Programming Languages Python PLSQL AngularJS JAVAC Databases Oracle 1011 g MySQL SQL Server and PostgreSQL MONGODB Tools Intellij PyCharm File Zilla Spyder PLSQL Developer and TOAD Eclipse Visual studio code My Sql workbench Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and Version One Cloud VPC creation EC2 instance S3 buckets RDS instances Amazon command line cloud Front IAM creating security groups managing S3 object lifecycle creating CDN implementing S3 security Encryption Route53 working with databases and DNS Using bootstrap scripts AWS EC2 and S3",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Leidos",
        "Dallas",
        "TX",
        "years",
        "experience",
        "Application",
        "developer",
        "software",
        "development",
        "design",
        "Python",
        "Django",
        "XML",
        "HTML",
        "DHTML",
        "C",
        "Oracle",
        "PLSQL",
        "Postgres",
        "Consumerbased",
        "custom",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "IDEs",
        "Jupiter",
        "Notebook",
        "PyCharm",
        "Emacs",
        "Spyder",
        "Visual",
        "Studio",
        "Experience",
        "Django",
        "Flask",
        "highlevel",
        "Python",
        "Web",
        "framework",
        "python",
        "automation",
        "CI",
        "pipelines",
        "Docker",
        "provisioningautomation",
        "Experience",
        "automationconfiguration",
        "management",
        "tools",
        "Puppet",
        "Chef",
        "Salt",
        "Stack",
        "MVC",
        "frameworks",
        "Flask",
        "Pyramid",
        "MVT",
        "framework",
        "django",
        "Experience",
        "CICD",
        "systems",
        "Git",
        "Jenkins",
        "experience",
        "Bitbucket",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "experience",
        "technologies",
        "Java",
        "UML",
        "HTML",
        "JSP",
        "Servlets",
        "JMS",
        "JDBC",
        "JNDI",
        "Proficient",
        "SQL",
        "MSSQL",
        "Server",
        "MySQL",
        "Oracle",
        "DB",
        "Postgres",
        "MongoDB",
        "Basic",
        "Knowledge",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Knowledge",
        "SOAREST",
        "service",
        "development",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "understanding",
        "protocolstechnologies",
        "HTTP",
        "LDAP",
        "JDBC",
        "SSL",
        "ServletJSP",
        "SQL",
        "HTML",
        "XML",
        "Generate",
        "Firebase",
        "auth",
        "programming",
        "experience",
        "Struts",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "IOC",
        "Spring",
        "DAO",
        "Access",
        "Google",
        "Cloud",
        "Platform",
        "resources",
        "Cloud",
        "Storage",
        "buckets",
        "Firestore",
        "databases",
        "Firebase",
        "project",
        "Basic",
        "knowledge",
        "Rest",
        "API",
        "JSON",
        "Parsing",
        "JQuery",
        "Experience",
        "end",
        "web",
        "application",
        "Python",
        "Perl",
        "JQuery",
        "JavaScript",
        "JSON",
        "end",
        "Monitor",
        "traffic",
        "viewtracker",
        "viewmonitor",
        "Ensured",
        "standards",
        "firewalls",
        "network",
        "device",
        "version",
        "updates",
        "Experience",
        "Bash",
        "Shell",
        "Scripting",
        "SQL",
        "Java",
        "Good",
        "Experience",
        "Object",
        "Oriented",
        "Concepts",
        "C",
        "Python",
        "experience",
        "PythonPerl",
        "phases",
        "data",
        "processing",
        "pipeline",
        "knowledge",
        "IBM",
        "WebSphere",
        "Application",
        "Deployment",
        "maintenance",
        "application",
        "Application",
        "Server",
        "clusters",
        "concept",
        "IBM",
        "Tivoli",
        "Monitoring",
        "Experience",
        "Tableau",
        "Analytics",
        "knowledge",
        "phases",
        "SDLC",
        "Requirement",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Development",
        "Enhancement",
        "Projects",
        "Good",
        "Experience",
        "error",
        "handling",
        "Experience",
        "automation",
        "framework",
        "Shell",
        "Experience",
        "test",
        "plans",
        "test",
        "cases",
        "specifications",
        "test",
        "coverage",
        "Familiar",
        "Agile",
        "Waterfall",
        "development",
        "methodologies",
        "Agile",
        "Methodologies",
        "Scrum",
        "standup",
        "meetings",
        "servers",
        "Active",
        "Directory",
        "maintenance",
        "Hands",
        "experience",
        "bug",
        "tracking",
        "tools",
        "JIRA",
        "Bugzilla",
        "Experience",
        "technologies",
        "VMware",
        "AWS",
        "Test",
        "Automation",
        "Framework",
        "Selenium",
        "test",
        "automation",
        "process",
        "Unit",
        "testing",
        "code",
        "bugs",
        "unit",
        "testing",
        "operating",
        "systems",
        "Windows",
        "Ubuntu",
        "Linux",
        "UNIX",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Leidos",
        "October",
        "Present",
        "Description",
        "Target",
        "leader",
        "innovation",
        "industry",
        "concept",
        "designer",
        "partnerships",
        "class",
        "store",
        "design",
        "Target",
        "guests",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "UI",
        "HTML",
        "CSS",
        "jQuery",
        "Bootstrap",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "Salt",
        "Stack",
        "infrastructure",
        "web",
        "services",
        "Python",
        "REST",
        "API",
        "Framework",
        "REACTJS",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "Single",
        "Page",
        "Application",
        "SPA",
        "screens",
        "end",
        "REACTJS",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "REDUX",
        "library",
        "AWS",
        "Cloud",
        "information",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "integration",
        "database",
        "systems",
        "Server",
        "side",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "delivery",
        "compliance",
        "Services",
        "Oriented",
        "Architecture",
        "IBM",
        "Connections",
        "WebSphere",
        "Portal",
        "platforms",
        "programming",
        "JSR168",
        "JSR",
        "Portlet",
        "specs",
        "JMS",
        "JSP",
        "Servlets",
        "JUnit",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Performance",
        "tuning",
        "Performance",
        "Stored",
        "Procedures",
        "Queries",
        "Installed",
        "py",
        "Builder",
        "application",
        "builds",
        "Deployed",
        "SOAP",
        "Web",
        "Services",
        "Tomcat",
        "Server",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "IDE",
        "tool",
        "application",
        "JIRA",
        "bug",
        "issue",
        "project",
        "Amazon",
        "web",
        "services",
        "AWS",
        "amazon",
        "bean",
        "stalk",
        "Wrote",
        "unit",
        "testing",
        "codes",
        "unit",
        "test",
        "bugs",
        "defects",
        "Firebug",
        "JIRA",
        "track",
        "report",
        "issues",
        "GIT",
        "team",
        "development",
        "Environment",
        "Python",
        "Django",
        "Web",
        "Framework",
        "HTML",
        "CSS",
        "NoSQL",
        "JavaScript",
        "JQuery",
        "Sublime",
        "Text",
        "Jira",
        "GIT",
        "py",
        "Builder",
        "unit",
        "test",
        "Firebug",
        "Web",
        "Services",
        "AWS",
        "Jr",
        "Python",
        "Developer",
        "Catholic",
        "Health",
        "Initiatives",
        "Lincoln",
        "NE",
        "September",
        "October",
        "Description",
        "CHI",
        "Health",
        "St",
        "Elizabeth",
        "Sisters",
        "St",
        "Francis",
        "Perpetual",
        "Adoration",
        "fullservice",
        "center",
        "values",
        "reverence",
        "integrity",
        "compassion",
        "excellence",
        "programs",
        "services",
        "patients",
        "health",
        "community",
        "Responsibilities",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "model",
        "level",
        "validation",
        "Python",
        "programming",
        "emphasis",
        "web",
        "security",
        "Business",
        "logics",
        "Python",
        "programming",
        "results",
        "jQuery",
        "usability",
        "website",
        "interface",
        "AJAX",
        "functionality",
        "web",
        "application",
        "Nodejs",
        "chat",
        "server",
        "efficiency",
        "views",
        "templates",
        "Django",
        "website",
        "interface",
        "APIs",
        "PHP",
        "Nodejs",
        "Configured",
        "Django",
        "URLs",
        "application",
        "parameters",
        "Python",
        "Django",
        "Framework",
        "backend",
        "web",
        "applications",
        "Django",
        "APIs",
        "database",
        "access",
        "components",
        "reactjs",
        "redux",
        "state",
        "actions",
        "functions",
        "discussions",
        "business",
        "users",
        "requirements",
        "doubts",
        "application",
        "maintenance",
        "enhancement",
        "support",
        "legacy",
        "system",
        "Futures",
        "Spring",
        "Framework",
        "calls",
        "application",
        "web",
        "services",
        "technology",
        "JSON",
        "XML",
        "connections",
        "applications",
        "access",
        "MySQL",
        "database",
        "SQL",
        "PLSQL",
        "procedures",
        "functions",
        "sequences",
        "cursors",
        "types",
        "Expertise",
        "Spring",
        "Security",
        "client",
        "ServerSide",
        "user",
        "interface",
        "JSP",
        "jQuery",
        "AJAX",
        "application",
        "RabbitMQMongoDB",
        "pipeline",
        "email",
        "bounce",
        "records",
        "reports",
        "application",
        "Tableau",
        "AJAX",
        "section",
        "webpages",
        "need",
        "web",
        "page",
        "Project",
        "structure",
        "Spring",
        "MVC",
        "pattern",
        "spring",
        "boot",
        "features",
        "environment",
        "Python",
        "Django",
        "HTML5",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Creating",
        "development",
        "environments",
        "Chef",
        "Virtual",
        "Box",
        "databases",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "Created",
        "PyUnit",
        "test",
        "cases",
        "unit",
        "Development",
        "test",
        "framework",
        "Python",
        "Managed",
        "code",
        "unit",
        "tests",
        "GitHub",
        "Developed",
        "Capistrano",
        "scripts",
        "deployment",
        "environments",
        "GIT",
        "Source",
        "control",
        "repositories",
        "code",
        "reviews",
        "pullmerge",
        "requests",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "Bootstrap",
        "JavaScript",
        "AJAX",
        "JQuery",
        "Pandas",
        "MYSQL",
        "APIs",
        "Linux",
        "Servlets",
        "JavaBeans",
        "Agile",
        "Heroku",
        "JIRA",
        "GIT",
        "Sr",
        "Python",
        "developer",
        "Comcast",
        "Philadelphia",
        "PA",
        "August",
        "September",
        "Responsibilities",
        "C",
        "tasks",
        "Python",
        "Conducted",
        "unit",
        "testing",
        "module",
        "source",
        "code",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "unit",
        "testing",
        "PyUnit",
        "code",
        "Git",
        "repository",
        "GitHub",
        "Installation",
        "configuration",
        "administration",
        "Virtual",
        "box",
        "machine",
        "Ubuntu",
        "Linux",
        "servers",
        "SQL",
        "loader",
        "Scripts",
        "data",
        "staging",
        "tables",
        "Scripted",
        "Powershell",
        "user",
        "account",
        "audit",
        "compliance",
        "GUI",
        "JSP",
        "HTML",
        "JS",
        "classes",
        "Struts",
        "Framework",
        "Object",
        "Collections",
        "Multithreading",
        "Exception",
        "Handling",
        "Reflection",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "deployment",
        "python",
        "AWS",
        "cloud",
        "formation",
        "templates",
        "Environment",
        "Python",
        "C",
        "C",
        "Django",
        "Pytest",
        "Git",
        "PDB",
        "JSON",
        "SQL",
        "Alchemy",
        "MySQL",
        "Eclipse",
        "Pycharm",
        "HTMLCSS",
        "Bootstrap",
        "Linux",
        "Javascript",
        "Jenkins",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "Cigna",
        "Health",
        "Insurance",
        "Bloomfield",
        "CT",
        "July",
        "August",
        "Description",
        "Cigna",
        "health",
        "services",
        "organization",
        "Bloomfield",
        "Connecticut",
        "insurance",
        "subsidiaries",
        "providers",
        "disability",
        "life",
        "accident",
        "insurance",
        "products",
        "services",
        "majority",
        "employers",
        "groups",
        "Responsibilities",
        "test",
        "deploy",
        "application",
        "UI",
        "team",
        "application",
        "JAVA",
        "Python",
        "Developed",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Flask",
        "Webapp2",
        "Angularjs",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "jQuery",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Wrote",
        "Python",
        "scripts",
        "csv",
        "files",
        "data",
        "database",
        "property",
        "list",
        "application",
        "Python",
        "test",
        "cases",
        "test",
        "plans",
        "software",
        "data",
        "test",
        "automation",
        "framework",
        "Linux",
        "Python",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Git",
        "REST",
        "API",
        "Mongo",
        "DB",
        "intelliJ",
        "IDEA",
        "testing",
        "framework",
        "commandline",
        "tests",
        "Linux",
        "Objected",
        "Oriented",
        "Perl",
        "tests",
        "Python",
        "AGILE",
        "development",
        "process",
        "standup",
        "Retrospective",
        "Demo",
        "Planning",
        "Code",
        "Review",
        "meetings",
        "AJAX",
        "request",
        "response",
        "page",
        "architecture",
        "J2EE",
        "Model",
        "approach",
        "ModelViewController",
        "design",
        "paradigm",
        "UI",
        "screens",
        "JS",
        "Custom",
        "Directives",
        "Validation",
        "Promises",
        "Developed",
        "Angular",
        "Controllers",
        "Services",
        "Filters",
        "HTML",
        "templates",
        "Angular",
        "Directive",
        "Developed",
        "Test",
        "Cases",
        "Easy",
        "Mock",
        "POSTMAN",
        "REST",
        "Python",
        "Django",
        "Graphics",
        "XML",
        "Processing",
        "Data",
        "Exchange",
        "Business",
        "Logic",
        "Develop",
        "Unit",
        "Test",
        "plans",
        "JUnit",
        "results",
        "Quality",
        "Assurance",
        "teams",
        "testing",
        "environment",
        "cicd",
        "pipeline",
        "Jira",
        "GitHub",
        "Team",
        "City",
        "Pypi",
        "Docker",
        "Hub",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Expert",
        "Python",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "Wrote",
        "MySQL",
        "database",
        "connector",
        "MySQL",
        "database",
        "package",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "web",
        "solution",
        "PythonDjango",
        "HTML",
        "CSS",
        "Sass",
        "JavaScript",
        "SQL",
        "PostgreSQL",
        "software",
        "Environment",
        "Python",
        "Django",
        "Angularjs",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "SQl",
        "PostgreSQL",
        "Jira",
        "REST",
        "API",
        "Mongo",
        "DB",
        "intelliJ",
        "IDEA",
        "stack",
        "Python",
        "Developer",
        "Hudson",
        "Insurance",
        "Alpharetta",
        "GA",
        "June",
        "July",
        "Description",
        "Customer",
        "Service",
        "Website",
        "site",
        "parts",
        "functionality",
        "system",
        "web",
        "services",
        "ACORD",
        "Association",
        "Cooperative",
        "Operations",
        "Research",
        "Development",
        "Life",
        "Annuity",
        "Standards",
        "insurance",
        "concepts",
        "specification",
        "trading",
        "partner",
        "intraenterprise",
        "insurance",
        "data",
        "vocabulary",
        "insurance",
        "concepts",
        "Responsibilities",
        "Solution",
        "Architecture",
        "package",
        "solutions",
        "project",
        "UML",
        "methodologies",
        "J2EE",
        "Design",
        "patterns",
        "Singleton",
        "Service",
        "Locator",
        "DAO",
        "MVC",
        "Architecture",
        "JSF",
        "Struts",
        "framework",
        "custom",
        "tag",
        "multiuser",
        "web",
        "application",
        "JSP",
        "JSTL",
        "Action",
        "Forms",
        "Action",
        "Classes",
        "JavaScript",
        "JDBC",
        "functionality",
        "Hibernate",
        "data",
        "manipulation",
        "access",
        "Spring",
        "AOP",
        "dependency",
        "injection",
        "framework",
        "business",
        "aspect",
        "application",
        "Spring",
        "DAO",
        "classes",
        "data",
        "access",
        "Testing",
        "unit",
        "testing",
        "integration",
        "testing",
        "application",
        "Java",
        "beans",
        "JSPs",
        "Spring",
        "JSTL",
        "tag",
        "supplements",
        "middleware",
        "web",
        "services",
        "schema",
        "thousands",
        "users",
        "Python",
        "Modules",
        "Packages",
        "Deployed",
        "Django",
        "web",
        "application",
        "Apache",
        "webserver",
        "carpathia",
        "cloud",
        "web",
        "deployment",
        "Python",
        "Data",
        "structures",
        "lists",
        "tuples",
        "RAD",
        "Static",
        "web",
        "services",
        "services",
        "business",
        "tables",
        "data",
        "manipulation",
        "retrieval",
        "Oracle",
        "DB2",
        "MQ",
        "Series",
        "messages",
        "Queues",
        "deployment",
        "process",
        "application",
        "WebSphere",
        "Application",
        "Server",
        "SVN",
        "source",
        "code",
        "controls",
        "test",
        "cases",
        "JUnit",
        "Web",
        "application",
        "ANT",
        "build",
        "script",
        "Mercury",
        "Quality",
        "Center",
        "requirement",
        "management",
        "test",
        "plans",
        "management",
        "SOA",
        "architecture",
        "communication",
        "business",
        "entities",
        "business",
        "people",
        "clarity",
        "requirementschanges",
        "Environment",
        "Java",
        "Spring",
        "Python",
        "JavaScript",
        "JDBC",
        "XML",
        "JAXB",
        "Web",
        "services",
        "SOAP",
        "WSDL",
        "Hibernate",
        "Spring",
        "IBM",
        "MQ",
        "PLSQL",
        "WebSphere",
        "RAD",
        "JUnit",
        "Oracle",
        "g",
        "DB2",
        "Mercury",
        "Quality",
        "Center",
        "SVN",
        "Full",
        "Stack",
        "Python",
        "Developer",
        "HSBC",
        "New",
        "York",
        "NY",
        "May",
        "June",
        "Responsibilities",
        "Business",
        "feature",
        "Nodejs",
        "Express",
        "backend",
        "APIs",
        "application",
        "Amazon",
        "Web",
        "ServiceAWS",
        "EC2",
        "cloud",
        "search",
        "load",
        "balancer",
        "ELB",
        "Cloud",
        "Deploy",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "puppet",
        "custom",
        "dashboard",
        "JSF",
        "Horizon",
        "dashboard",
        "RESTfulAPI",
        "Openstack",
        "performant",
        "C",
        "applications",
        "C11",
        "features",
        "shared_ptr",
        "weak_ptr",
        "lambda",
        "operations",
        "frontend",
        "modules",
        "Python",
        "Flask",
        "Web",
        "Framework",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "Rest",
        "API",
        "Gateway",
        "AWS",
        "Lambda",
        "server",
        "side",
        "applications",
        "Django",
        "Python",
        "programming",
        "Developed",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "DB2SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "Python",
        "framework",
        "OpenStackDevStack",
        "MicroService",
        "Wireless",
        "Security",
        "Appliance",
        "Development",
        "API",
        "MATLAB",
        "algorithm",
        "objects",
        "dimensions",
        "images",
        "ETL",
        "mappings",
        "Informatica",
        "Power",
        "Center",
        "Data",
        "sources",
        "files",
        "Oracle",
        "target",
        "area",
        "Staging",
        "Data",
        "Warehouse",
        "Data",
        "Marts",
        "data",
        "pipelines",
        "Apache",
        "Spark",
        "bigdata",
        "processing",
        "computing",
        "framework",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "application",
        "deployment",
        "cloud",
        "Docker",
        "technology",
        "Elastic",
        "Container",
        "service",
        "scheduler",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "Develop",
        "services",
        "Python",
        "Implement",
        "delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "Nexus",
        "Maven",
        "AWS",
        "AMIs",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "Shading",
        "replication",
        "schema",
        "design",
        "applications",
        "Elastic",
        "Beanstalk",
        "Environment",
        "cloud",
        "formation",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "DB",
        "package",
        "information",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "Docker",
        "containers",
        "namespace",
        "versions",
        "Cloud",
        "templates",
        "Wrote",
        "python",
        "scripts",
        "ip",
        "addresses",
        "vms",
        "networks",
        "services",
        "NOVA",
        "SWIFT",
        "KEYSTONE",
        "NEUTRON",
        "CINDER",
        "GLANCE",
        "cloud",
        "deployment",
        "process",
        "ACP",
        "daemon",
        "Python",
        "integration",
        "OpenStack",
        "Backend",
        "data",
        "access",
        "modules",
        "procedures",
        "Oracle",
        "Created",
        "APIs",
        "server",
        "parse",
        "output",
        "report",
        "files",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Test",
        "Approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "Test",
        "framework",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "code",
        "coverage",
        "pep8",
        "standardization",
        "Python",
        "OpenStack",
        "APIs",
        "NumPy",
        "analysis",
        "procedures",
        "text",
        "analytics",
        "processing",
        "inmemory",
        "computing",
        "capabilities",
        "Apache",
        "Spark",
        "Scala",
        "WebServices",
        "data",
        "systems",
        "Created",
        "Database",
        "functions",
        "procedures",
        "statements",
        "PLSQL",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "MongoDB",
        "VMWare",
        "API",
        "Education",
        "Bachelors",
        "Skills",
        "C",
        "years",
        "Git",
        "years",
        "PYTHON",
        "years",
        "MYSQL",
        "years",
        "SQL",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Operating",
        "Systems",
        "Unix",
        "Linux",
        "Windows",
        "Mac",
        "Programming",
        "Languages",
        "Python",
        "PLSQL",
        "JAVAC",
        "Databases",
        "Oracle",
        "g",
        "MySQL",
        "SQL",
        "Server",
        "PostgreSQL",
        "MONGODB",
        "Tools",
        "Intellij",
        "PyCharm",
        "File",
        "Zilla",
        "Spyder",
        "PLSQL",
        "Developer",
        "TOAD",
        "Eclipse",
        "Visual",
        "studio",
        "code",
        "Sql",
        "workbench",
        "Integration",
        "Tools",
        "Jenkins",
        "Web",
        "Builder",
        "Version",
        "Control",
        "GitHub",
        "SVN",
        "Defect",
        "Tracking",
        "JIRA",
        "Git",
        "Version",
        "Cloud",
        "VPC",
        "creation",
        "EC2",
        "instance",
        "S3",
        "RDS",
        "Amazon",
        "command",
        "line",
        "cloud",
        "Front",
        "IAM",
        "security",
        "groups",
        "S3",
        "object",
        "lifecycle",
        "CDN",
        "S3",
        "security",
        "Encryption",
        "Route53",
        "databases",
        "DNS",
        "bootstrap",
        "scripts",
        "AWS",
        "EC2",
        "S3"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:00:59.426397",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Leidos Dallas TX Over 10 years of experience as an Application developer software development and design using Python Django XML HTML DHTML C Oracle PLSQL Postgres Developed Consumerbased custom features and applications using Python Django and HTML Experienced with Software Development Life Cycle Database designs agile methodologies coding testing of enterprise applications and IDEs such as Jupiter Notebook PyCharm Emacs Spyder and Visual Studio Experience with Django and Flask a highlevel Python Web framework Working with backend python automation CI pipelines Docker and cloud provisioningautomation Experience with automationconfiguration management using tools like Ansible Puppet Chef and Salt Stack Experienced in MVC frameworks like Flask and Pyramid and MVT framework like django Experience with CICD systems like Git and Jenkins Have experience working with Bitbucket Worked on Jenkins continuous integration tool for deployment of project Extensive experience in technologies like Java UML HTML JSP Servlets JMS JDBC JNDI Proficient in SQL databases MSSQL Server MySQL Oracle DB Postgres and MongoDB Basic Knowledge on JSON based REST Web services and Amazon Web Services AWS Knowledge of SOAREST based service development Having experienced in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL PLSQL and PostgreSQL database Basic understanding of protocolstechnologies like HTTP LDAP JDBC SSL ServletJSP SQL HTML XML Generate and verify Firebase auth tokens Extensive programming experience in Struts Spring MVC Spring Security Spring IOC and Spring DAO Access Google Cloud Platform resources like Cloud Storage buckets and Firestore databases associated with Firebase project Basic knowledge on Rest API and JSON Parsing and JQuery Experience with Angular front end web application Used Python Perl JQuery JavaScript and JSON at the front end Monitor all usersFirewall traffic using smart viewtracker and smart viewmonitor Ensured standards are maintained for firewalls and other network device version updates Experience in Bash Shell Scripting SQL and Java Having Good Experience in Object Oriented Concepts with C and Python 3x Extensive experience in using PythonPerl to code and design various phases for data processing pipeline Good knowledge on IBM WebSphere Application Deployment and maintenance of an application on Application Server using clusters concept and IBM Tivoli Monitoring Experience in working with Tableau Analytics Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Good Experience in error and exceptional handling Experience in designing the automation framework using Shell scripting Experience in writing test plans test cases test specifications and test coverage Familiar with Agile and Waterfall development methodologies Followed Agile Methodologies Scrum involved in daily standup meetings Managed windows servers which included Active Directory maintenance and support Hands on experience with bug tracking tools such as JIRA and Bugzilla Experience with cloud technologies such as VMware AWS Created an Test Automation Framework with Selenium for test automation process Unit testing for the entire code and fixing bugs in unit testing Experienced in working with different operating systems like Windows Ubuntu Linux and UNIX Authorized to work in the US for any employer Work Experience Sr Python Developer Leidos October 2017 to Present Description Target is recognized as a leader in innovation across the retail industry From pioneering the concept of designer partnerships to consistently being best in class in store design Target remains focused on not only meeting but exceeding its guests needs Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Working as an application developer experienced with controllers views and models in Django Used Salt Stack to configure and manage the infrastructure Restful web services using Python REST API Framework Used REACTJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application SPA Involved to implement various screens for the front end using REACTJS and used various predefined components from NPM Node Package Manager and REDUX library Used AWS Cloud Watch to monitor and store logging information Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web Framework Responsible for handling the integration of database systems Developed Server side automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Provided technical delivery in compliance with Services Oriented Architecture against IBM Connections and WebSphere Portal platforms including programming JSR168 JSR 286 Portlet specs JMS JSP Servlets JUnit and Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Implemented Performance tuning and improved the Performance of Stored Procedures and Queries Installed and configured py Builder for application builds and deploying it Developed and Deployed SOAP based Web Services on Tomcat Server Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Used IDE tool to develop the application and JIRA for bug and issue tracking Deployed project into Amazon web services AWS using amazon elastic bean stalk Wrote unit testing codes using unit test resolving bugs and other defects using Firebug Used JIRA to assign track report and audit the issues Used GIT to coordinate team development Environment Python Django Web Framework HTML CSS NoSQL JavaScript JQuery Sublime Text Jira GIT py Builder unit test Firebug Web Services AWS Jr Python Developer Catholic Health Initiatives Lincoln NE September 2015 to October 2017 Description CHI Health St Elizabeth founded by the Sisters of St Francis of Perpetual Adoration in 1889 is a fullservice 260bed nonprofit regional medical center We are guided by our core values of reverence integrity compassion and excellence to programs and services that benefit our patients as well as the health of the greater community Responsibilities Responsible for analyzing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Coded model level validation using Python programming with emphasis in web security Handled Business logics by backend Python programming to achieve optimal results Implemented jQuery to improve the overall usability of the website interface and AJAX functionality to speed up web application Used Nodejs to create a fast chat server with efficiency Developed views and templates in Django to create a userfriendly website interface Constructed RESTful APIs using PHP Nodejs and MySQLPostgreSQL Configured Django to manage URLs and application parameters Extensively used Python Django Framework for developing backend of web applications Used Django APIs for database access Developed reusable components using reactjs and redux for maintaining the state and actions of the functions Participate in discussions with business users for requirements related doubts Provide application maintenance and enhancement support for legacy system Utilised Futures and Spring Framework to make Asynchronous calls to the application Developed web services using Restful technology to support JSON and XML Created new connections through applications for better access to MySQL database and involved in writing SQL PLSQL Stored procedures functions sequences triggers cursors object types etc Expertise in Spring Security both client and ServerSide Developed user interface using JSP jQuery and AJAX to speed the application Designed RabbitMQMongoDB pipeline for routingstoring of email bounce handling records Worked on resulting reports of the application and Tableau reports Implemented AJAX to update necessary section of webpages and hence avoiding the need for reloading the entire web page Implemented the Project structure based on Spring MVC pattern using spring boot Developed and tested many features in an agile environment using Python Django HTML5 CSS JavaScript and Bootstrap Creating and configuring virtual development environments with Chef and Virtual Box Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQLAlchemy and PostgreSQL Created PyUnit test cases for unit testing Development of test framework using the Python Managed code with unit tests and GitHub Developed Capistrano scripts to automate deployment on various environments Used GIT as Source control repositories with regular code reviews and pullmerge requests Environment Python 27 Django 17 CSS HTML Bootstrap JavaScript AJAX JQuery Pandas MYSQL Restful APIs Linux Servlets JavaBeans SCRUM Agile Heroku JIRA GIT Sr Python developer Comcast Philadelphia PA August 2013 to September 2015 Responsibilities Worked with various C tasks integrated with them using Python Conducted and performed unit testing for every module of the source code Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Extensively involved in performing unit testing using PyUnit which are bundled and imported automatically All the code are stored in local Git repository and once it is validated then it is committed onto GitHub Installation configuration and administration of Virtual box and VMware virtual machine for Ubuntu and Linux servers Created SQL loader Scripts to load data into the temporary staging tables Scripted Powershell reports to check for user account audit compliance Involved in making GUI JSP HTML and JS and java classes using Struts Framework Object Oriented ConceptsOOPS like Collections Multithreading Exception Handling Reflection Carried out various mathematical operations for calculation purpose using Python libraries Automated the cloud deployment using python and AWS cloud formation templates Environment Python C C Django Pytest Git PDB JSON SQL Alchemy MySQL Eclipse Pycharm HTMLCSS Bootstrap Linux AWS Javascript Jenkins Full Stack Python Developer Cigna Health Insurance Bloomfield CT July 2011 to August 2013 Description Cigna is an American worldwide health services organization based in suburban Bloomfield Connecticut Its insurance subsidiaries are major providers of medical dental disability life and accident insurance and related products and services the majority of which are offered through employers and other groups Responsibilities Develop test deploy and maintain the application Worked with UI team to maintain and monitor the application using JAVA and Python Developed webbased applications using Python 2726 Django 1413 PHP Flask Webapp2 Angularjs VB C XML CSS HTML DHTML JavaScript and jQuery Rewrite existing Java application in Python module to deliver certain format of data Wrote Python scripts to parse csv files and load the data in database Generated property list for every application dynamically using Python Designed test cases and test plans and developed an embedded software data driven test automation framework in Linux Python Worked on HTML5 CSS3 JavaScript Git REST API Mongo DB intelliJ IDEA Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python AGILE development process has been followed Experienced with standup Retrospective Demo Planning and Code Review meetings Used AJAX for request response processing without reloading the complete page Designed the architecture based on the popular J2EE Model 2 approach of ModelViewController design paradigm Developed UI screens using Angular JS Custom Directives Validation and Promises Developed Angular Controllers Services Filters and HTML templates using Angular Directive Developed Test Cases using Easy Mock and used POSTMAN to test REST Calls Used Python and Django Creating Graphics XML Processing Data Exchange and Business Logic Develop and execute Unit Test plans using JUnit ensuring that results are documented and reviewed with Quality Assurance teams responsible for integrated testing Worked in agile environment and developed cicd pipeline through Jira GitHub Team City Pypi Docker Hub Supported Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Expert in writing Python modules to extractload asset data from the MySQL source database Wrote and executed various MySQL database queries from PythonMySQL connector and MySQL database package Involved in building database Model APIs and Views utilizing Python to build an interactive web based solution Using PythonDjango HTML CSS Sass JavaScript SQL and PostgreSQL maintaining and adding software Environment Python 2726 Django 1413 Angularjs VB C XML CSS HTML DHTML JavaScript SQl PostgreSQL Jira REST API Mongo DB intelliJ IDEA Full stack Python Developer Hudson Insurance Alpharetta GA June 2009 to July 2011 Description The old Customer Service Website is being replaced with a modern attractive SOAoriented site It has various parts of the functionality to communicate with the backend system through web services It uses the ACORD Association for Cooperative Operations Research and Development Life and Annuity Standards expressing the insurance concepts in a formally defined specification to enable trading partner and intraenterprise of sharing insurance data giving a welldefined vocabulary for expressing the insurance concepts Responsibilities Designed and Developed the Solution Architecture package to identify all possible solutions for the project using UML methodologies Used J2EE Design patterns Singleton Service Locator and DAO Implemented MVC Architecture using JSF and Struts framework and custom tag libraries Developed a multiuser web application using JSP JSTL Action Forms Action Classes JavaScript and JDBC to provide the needed functionality Used Hibernate for data manipulation and access Used Spring AOP and dependency injection framework for business aspect of the application Used Spring DAO classes for data access Testing unit testing integration testing of the application Developed Java beans and JSPs by using Spring and JSTL tag libs for supplements Designed and developed middleware using RESTful web services based on a centralized schema which is consumed by thousands of users Worked on Python Modules and Packages Deployed Django web application in Apache webserver and carpathia cloud web deployment Used Python Data structures like lists dictionaries tuples Used RAD 70 for implementing Static and Dynamic web services for consuming and providing services related to the business Created creating tables data manipulation and retrieval using Oracle and DB2 Used MQ Series to send receive and read the messages and also Created Queues Involved in the deployment process of the application on WebSphere Application Server SVN are used as source code controls and developed test cases using JUnit Deployed the Web application using ANT build script Used Mercury Quality Center for requirement management executing the test plans and defect management Used SOA architecture for communication between various business entities Communicated with the business people to get more clarity on the requirementschanges Environment Java Spring Python JavaScript JDBC XML JAXB Web services SOAP WSDL Hibernate Spring IBM MQ PLSQL WebSphere RAD 70 JUnit Oracle 10g DB2 Mercury Quality Center SVN Full Stack Python Developer HSBC New York NY May 2007 to June 2009 Responsibilities Developed tested and deployed Business feature set in Nodejs with Express and MongoDB backend incorporating APIs Developed application using Amazon Web ServiceAWS like EC2 cloud search Elastic load balancer ELB Cloud Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Create a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTfulAPI provided by Openstack Developed high performant multithreaded C applications using C11 features like shared_ptr weak_ptr lambda and atomic operations Developed entire frontend and backend modules using Python on Flask Web Framework Implemented Amazon Web services AWS Rest API Gateway using AWS Lambda Worked on server side applications with Django using Python programming Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Designed and developed DB2SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Python framework for using OpenStackDevStack for MicroService Wireless Security Appliance Development RESTful API Developed a MATLAB algorithm which determines an objects dimensions from digital images Created ETL mappings using Informatica Power Center to move Data from multiple sources like Flat files Oracle into a common target area such as Staging Data Warehouse and Data Marts Created data pipelines using Apache Spark a bigdata processing and computing framework Used python libraries like Beautiful Soup and matplotlib Automated application deployment in the cloud using Docker technology using Elastic Container service scheduler Worked on Python OpenStack APIs and used Numpy for Numerical analysis Develop and maintain internal facing RESTful services using Python Implement a continuous delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Worked on MongoDB database concepts such as locking transactions indexes Shading replication schema design Involved in deploying applications into Elastic Beanstalk Environment using cloud formation templates Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL DB package to retrieve information Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Used Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Deployed Cloud with various templates Wrote python scripts to assign ip addresses to vms on different networks Familiar with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used ansible for automating cloud deployment process Developed the ACP daemon in Python to allow for integration with OpenStack Backend data access modules using PLSQL stored procedures and Oracle were designed and created Created RESTful APIs calls with server parse output report of excel files Extensively used python modules such as requests urllib urllib2 for web crawling Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework Involved in Agile Methodologies and SCRUM Process Performing code coverage and pep8 standardization Worked on Python OpenStack APIs and used NumPy for Numerical analysis Implemented advanced procedures like text analytics and processing using the inmemory computing capabilities like Apache Spark written in Scala Implemented RESTful WebServices For sending and receiving the data between multiple systems Created Database tables functions stored procedures and wrote prepared statements using PLSQL Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB MongoDB and VMWare API calls Education Bachelors Skills C 6 years Git 7 years PYTHON 10 years MYSQL 8 years SQL 10 years Additional Information Technical Skills Operating Systems Unix Linux Windows and Mac Programming Languages Python PLSQL AngularJS JAVAC Databases Oracle 1011g MySQL SQL Server and PostgreSQL MONGODB Tools Intellij PyCharm File Zilla Spyder PLSQL Developer and TOAD Eclipse Visual studio code My Sql workbench Integration Tools Jenkins and Web Builder Version Control GitHub and SVN Defect Tracking JIRA Git and Version One Cloud VPC creation EC2 instance S3 buckets RDS instances Amazon command line cloud Front IAM creating security groups managing S3 object lifecycle creating CDN implementing S3 security Encryption Route53 working with databases and DNS Using bootstrap scripts AWS EC2 and S3",
    "unique_id": "26425cfb-7359-4e5a-9954-cdf3d7eaad3b"
}