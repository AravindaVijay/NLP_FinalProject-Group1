{
    "clean_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Zions Bancorporation Fremont CA Around 9 years of full stack development experience in all phases of Software Development Life Cycle SDLC which includes Analysis Design Development Implementation and Testing of web based enterprise business applications using the JAVAJ2EE technologies Experience in developing Web Applications with various Open Source frameworks JSF 12 Spring Framework 203040 Web Flow Jakarta Struts Framework 111220 Struts Validation and Tiles Frameworks Extensive knowledge on the Spring Modules like Spring IOC and Dependency Injection Spring MVC Spring Batch Spring Web Flow Spring Security Authentication and Authorization Spring AOP for Code Modularity and Spring Boot Developed and deployed Micro Services based applications using Spring Boot along with Spring Rest and Node Js with Express and Hapi Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Well experienced on implementing SOA Service Oriented Architecture using Spring REST to create REST resources that include several components like Jersey Framework spring Boot JAXRS and used WADL for documenting REST APIS Worked on SOAP protocol using JAX WS and integrated Apache CXF AXIS2 for WSRemote Messaging WS Security WS Policy and other specifications and automated documentation using Swagger and WSDL Experienced in configuring and deploying applications on different servers such as Apache Tomcat Web logic IBM WebSphere JBoss Expertise to interact with relational databases using ORM frameworks like Hibernate Spring Data JPA IBatis MyBatis Java Persistence API JPA Hibernates second level cache Ehcache Have good knowledge on different databases like PostgreSQL MySQL DB2 Oracle 13c11g Microsoft SQL Server NoSQL DB Raven DB Mongo DB and Cassandra Couch DB Redis Dynamo DB and good experience in writing stored procedures functions and triggers using PLSQL in JDBC ODBC and in WebLogic server Experience in writing stored procedures triggers views and functions using PLSQL scripts and embedded DDL and DML statements in PLSQL blocks Experience in Developing User Interface UI Rich Web Applications using Front EndUser Interface UI Technologies like HTML45 XHTML DHTML CSS23using SASS and LESS Type Script Bootstrap and AJAX by managing all facets and pipelines of application Expertise in implementing the features of ES6 like arrows modules block scoping promises and enhanced object literals Experienced in working with MVVM design flow using clientside JavaScript framework Angular 2x4 X50 with NGRX Expertise in using shadow DOM which is a feature of Angular 5 to encapsulate visual behavior Good knowledge in providing support for passing messages between publishers and subscribers using observables as a part of Angular 5 Experience with features of Angular 4 like Ng Modules which configure the injector and the compiler and help organize related things together Proficient with Angular JS Backbone JS Ember JS Knockout JS Ext JS for customize front end app development and to achieve MVC design flow Well experienced in view rendering using jQuery React JS Handlebar JS and implementing React JS with Redux and Flux patterns to attain MVC functionality Well experienced in developing Dynamic Single Page ApplicationSPA using MEAN MongoDB Express Angular Node full stack development tool Kit Good amount of hands on Experience in developing serverside JavaScript frameworks using Node JS Hapi JS Express JS to build event driven nonblocking io model web applications Experience in installing dependencies using Package Managers like NPM BOWER and running automated task using Gulp Grunt and web pack for bundling minification loading images configuration Experience on UI testing with Karma Jasmine Protractor for Angular JS and Mocha Chai for React JS Unit tested web services using Junit Mockito Easy mock Spring Junit Runner Spock Test NG and hence achieved the goals of Test Driven Development TDD Well experienced in using various AWS Amazon Web Services Iaas Infrastructure As a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Expertise in using Microsoft Azure which is cloud computing service for building testing deploying and managing applications and services through a global network of Microsoft managed data centers Good Knowledge and Experience on implementing Spring Cloud Netflix OSS Stack for micro Services deployment Zuul for API Gateway for routing Hystix Circuit Breaker for latency and fault tolerance and Eureka for service registration Experience in applying JMS Java Messaging Service for reliable information exchange across Java applications using Apache Kafka Rabbit MQ Active MQ and IBM MQ to communicate from Client to Server Good knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view using Elastic search ELK Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Implemented security functionality OAuth 20 Spring security SSL and site minder SSO secure authentication with LDAP OAuth2 for generating tokens in the application using Spring Security JWT for producing tokens Well experienced with build tools like Gradle Maven and ANT Implemented Docker container service build pipe line Jenkins Bamboo and GoCDGo Continuous Delivery to achieve Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Hands on experience in managing this Docker Container using Kubernetes with zero downtime deployment Used Kubernetes Linux container for deploying and scaling containerized applications Good practical experience with Javabased logging utility ie log4J Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Good experience in using Software development methodologies like AgileScrum Water Fall and Rational Application Development methodologies Experience in using Mule soft which is light weight Java based Enterprise Service Bus ESB which allows connecting applications together quickly and easily enabling them to exchange data Experience in using open source framework Apache Camel which for messageoriented middleware with a rulebased routing and mediation engine that provides a Java objectbased implementation of the Enterprise Integration Patterns EIP using an application programming interface to configure routing and mediation rules Expertise in working with JAVA8 features like Functional Interfaces Stream API Time API Transaction Management Exception Handling Collection API and Lambda Expressions Authorized to work in the US for any employer Work Experience Java Full Stack Developer Zions Bancorporation Salt Lake City UT July 2018 to Present Description This is a data migration project from IBM CLM tool to Microsoft Azure DevOps As part of migration Zions Service Framework was developed to support the ALM migration and developing micro service extensions to extract data from different tools Zions Bank has number of applications running with IBM CLM tool as part of this framework we developing different individual services to migrate data from Future Core JIRA RTC RQM DNG Test Link and also maintaining all micro services and smooth migration of data from IBM CLM to Microsoft Azure DevOps Responsibilities Involved client side designing and validation using HTML Angular 6 CSS JavaScript JSP Updated pages using HTML CSS in Angular JS framework and created Responsive Web Pages using Bootstrap framework Developed screens using HTML CSS JavaScript JQuery and Ajax UX design and implementation using HTML CSS Webpack Redux Involved in putting the entries to external XML files whenever required Used Angular JS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Developed Web API using NodeJS and hosted on multiple load balanced API instances Involved in building stable angular components and standalone functions to be added to any future pages Involved in implementing the complete application in the inbuild MVC Architecture with Angular 6 Used Javascript for the providing dynamic functionality and to create a highly responsive interface Involved in the design of the application using J2EE which employs ModelViewController MVC design pattern Single web page applications are coded using JavaScript client framework as well as restful API developments in Spring restful API and Spring boot Used JSON to load data into JQUERY data grid and also as a response type in REST services Created and injected Spring services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Implemented Singleton Service Locator design patterns in MVC framework and developed command delegate model action script classes to interact with the backend Worked on the Multithreading Concepts Using executor frame work for file parsing the data or scheduling the Data into the application from the vendor services which are in both text and Xml into Json Used Spring Security for Authentication and authorization extensively Developed backend web services using Node JS and custom components for the web applications using angular 6 Experience working on Bootstrap Angularjs Backbonejs Knockoutjs Responsive design and Media Queries Implementing or exposing the Micro services based on RESTful API utilizing Spring MVC Jersey and Apache CXF Using Handlebar Js we can add templates to your HTML page that will be parsed and interpolated with the values from the data you passed to the Handlebarsjs function Configured the xml files for Hibernate and applied its Object Relational Mapping ORM to enable the data transactions between POJO and Oracle Database using caching on Session Factory as well as caching on query Involved in writing and modifying Procedure Queries Views and Triggers Used Hibernate Transaction Management Hibernate Batch Transactions and cache concepts Used Maven for dependencies and configuration management Developed Mean stack from Scratch including Mongo DB and Express JS server development Used Mongoose connector to connect Mongo DB through Express framework Performed configuration deployment and support of cloud services including Amazon Web Services AWS NoSQL database design and implementation with Cassandra and MongoDB Involved in writing MultiThreading Synchronization concepts in Java Programs Vuejs was used to fetch data from server using axios prepare and transform data to display in the forms validate userentered data and then post data Implemented Continuous Integration and Continuous Development CICD process using Jenkins Setup frontend application using Web pack NPM and Babel Used Jenkins for continuous integration and worked on Performance improvements for the application Used Docker for managing and running applications within containers Worked with Jasmine and Karma for performing unit testing of Angular JavaScript Writing test cases using JUnit Involved in Test driven software development by carrying out test plans Used Splunk for Log management monitoring alerts log analysis such as how many services consumed per hour based on the response methods response time analysis Involved in fixing existing bugs and also making modifications to already existing code Worked on Selenium for automating the test cases Implement technologies to improve development process using NPM and BOWER Used Grunt Task Runner for packaging Involved in taking the Clients requirement uptodate and working on them accordingly Environment HTML CSS Angular 6 Java Script JQuery Ajax JSON Backbone JS Bootstrap XML Spring MVC Spring IOC DAO Hibernate Multithreading JAXRS Apache CXF Jersey Apache Kafka Node JS Mongo DB Express JS AWS Jenkins Docker Jasmine and Karma JUnit Easy Mock Selenium NPM Bower Grunt Java Full Stack Developer Volkswagen group of America Auburn Hills MI June 2016 to July 2018 Description At Volkswagen Group is to develop innovations and technologies for future generations of cars and to transfer technologies from many industries and research institutions into the automotive domain My role in this position will be responsible for software infrastructure to bring new connected functionality and interfaces to the automotive market And develop prototype implementations and interfaces to enable future connected vehicle applications potentially developing system requirements and specifications that will influence future production systems Responsibilities The application is built Micro Service Oriented Architecture using MEAN 4 Mongo Express Angular and Node stack and developed Single Page Applications SPA Designed and developed efficient user Interaction screens using HTML5 CSS3SASS and Twitter Bootstrap CSS framework and media queries to create responsive web pages Used Web Pack module bundler for compilation of SAAS files into CSS and for monitoring the application Developed multiple Angular 40 components which are compatible with latest versions of typescript angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Developed angular views to hook up models to the DOM and synchronize data with server as a SPA Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Implemented Node JS as a serverside proxy for an eventdriven nonblocking IO model to make the application lightweight and efficient Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Implemented services call from Angular at client to Express JS at Node JS server Utilized the inbuilt NPM package manager to configure the right versions of the packages and to achieve dependency management Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the spring bean profiling Implemented a robust RESTful web service using Spring Boot to modularize code and automated documentation to the web services in the application is provided by Swagger Unit testing of web services is done using Spock framework by extending Groovy syntax Configured Redis Remote Dictionary Server with node server for caching the responses via cat box Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Testing for Node JS is done using Mocha and chai and for spring boot used Mokito junit mock mvc and thereby achieving Test Driven Development TDD Worked on ECMA 6 features as ES6 features implemented in Googles V8 which is used by Node JS Configured OIDC Open ID Connect on top of OAUTH 20 authentication and authorization framework to provide the security to rest web services Implemented Single Sign On and policy based authentication using Site Minder security framework Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernates second level EHCache Created dynamic schema design through NOSQL Mongo DB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Implemented Mongoose Connector as our ODM framework Unstructured data was handled using MongoDB and used Mongoose Connector for connecting to database Configured Kibana data visualization plugin for Elastic search Log stash and created bar line and scatter plots or pie charts and maps on top of large volumes of data Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Responsible for migrating existing modules in IBM MQ to Apache Kafka and worked on creating Kafka adaptors for decoupling the application dependency Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Developed Micro Services using Spring Cloud Netflix OSS stack to address Load balancing using Ribbon API Gateway using Zuul Fault fa Kubernetes is configured in the application for automating deployment scaling and management of containerized applications Hands on experience on Dump Analysis and thread Dump common problem patterns Thread race deadlock hanging IO calls garbage collection OutOfMemoryError problems infinite looping etc Configured New Relic to measure and monitor the performance of application Provided production supporton call support to fix production issues after the deployment Environment Angular 5040 Node JS Express JS HTML5 CSS3SASS Twitter Bootstrap40 Site Minder Hibernate4x OAuth20 OIDC Eclipse Java EE IDE JIRA Apache Kafka IBM MQ Jenkins BabelLog4j Redis Mongo DB Mongoose Connector Oracle JBoss Kibana Elastic search Log stash NPM Web pack EC2 S3 RDS EBS Elastic Load Balancer Docker Apache tomcat Selenium Spock Karma Jasmine Mocha Chai Mokito Junit mock mvc Kubernetes New Relic Dump Analysis Netflix Zuul Eureka Swagger Maven30 Sr Java Full Stack Developer Epsilon Irving TX May 2014 to June 2016 Description At Epsilon provides unique solutions that strategically combine analytics rich data and technology It is committed to help their customers embrace the vast capabilities that the cloud has to offer Areas such as infrastructure development software applications business intelligence and platform solutions are all within our wheelhouse My role is in development of various applications and maintain quality for same and perform trouble shot to resolve all application issues Responsibilities Involved in developing user interface with HTML5 CSS3 SAAS JSON AJAX React JS Type script Es6 Implemented responsive web design using Bootstrap Used Bootstrap frontend framework for faster and easier web development Design website and maintain the website content up to date Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Experienced in React JS and working with redux architecture Designed modular and reusable React components using Redux Architecture and MaterialUI Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Worked in using React JS components Forms Events Keys Router Animations and Redux concept Responsible for React UI and architecture Building components library including Tree SlideView and Table Grid Implemented application testability and diagnostics and fixing bugs with the help of REDUX Reducers architecture Responsible for implementing UI mockups integrating third party react libraries and handlingcreating redux store data Developed ReactRedux code using functional programming best practices to enable efficient pure function testing Experienced in working with Redux and Alt JS architecture Used Oath 2 which is a lightweight authentication framework with a central authorization server and generates an access token to access a protected resource on a resource server Oath 2 simplifies all the communications between the client server and content provider Designed and developed Spring Boot adapter applications using rest API Developed REST full service interface using Spring Boot to the underlying Agent Services API and Implemented REST full web services Used Spring Boot which removes boilerplate configuration and makes application faster Developed some standalone Micro services using Spring Boot micro service architectural patterns Used spring Boot properties like actuators and health checkers to enhance micro service implementations Worked on SocketIO which enables the realtime bidirectional eventbased communication Documented Spring Restful APIs with Swagger to help customers better understand APIs Integrated spring with Hibernate for data access from MySQL Database Unstructured data was handled using Cassandra DB and used Cassandra Connector for connection Composed and executed Cassandra DB scripts and queries to fetch and test data from No SQL databases Used Apache Kafka Message Queues for reliable and asynchronous exchange of vital information between multiple business applications Used Jenkins for continuous deployment and integration of the build and release process Worked with the Node package manager NPM along with Grunt Experienced in working with Babel and Web pack in application build and deployment processes Extensively used Mocha and Chai JavaScript unit testing tools for testing JavaScript pages Worked on creation of custom Docker container images tagging and pushing the images Designed configured and deployed Microsoft Azure for a multitude of applications utilizing the Microsoft Azure Service focusing on highavailability fault tolerance and autoscaling Extensively used GIT for version controlling and regularly pushed the code to Git Hub Used MAVEN for building the project dependency and documentation which is based on POM project object model Environment HTML5 CSS3 SAAS JSON AJAX Bootstrap React JS Maven Spring Boot Spring IOC Oath 2 Node JS Express JS NPM Grunt Babel Web Pack Docker AWS Apache Kafka Restful JAXRS Swagger GIT Jenkins MySQL No SQL Cassandra DB Mocha Chai Java Full Stack Developer Connexions Loyality Richmond VA April 2012 to May 2014 Project Description The objective of Company is to have a framework in place for the organization which allows the business users to add new customer configurations customer product catalog excluded product details list etc without depending on the development team Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using agile methodology for building Service Oriented Architecture SOA Created userfriendly GUI interface and Web pages using HTML JQuery and AJAX Used AngularJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications SPA Worked on Angular JS expressions and builtin directives to render functionality to the UI and JQuery for DOM manipulation and twoway binding Implemented AngularJS controllers to update entity models and used custom AngularJS Filters to provide better search experience Implemented various AngularJS filters against data sets to filter and formatted data currency strings rendered in the UI Performed Verification and validation process for the code written by making use of Protractor framework by testing across various scenarios of the AngularJS applications Extensively used JSON to parse the data from server side to satisfy the business requirement Used SpringMVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate and handled Transaction Management using the provided data Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated spring and hibernate together and worked on developing backend components and services Wrote PLSQL queries stored procedures triggers packages on Oracle database Used Spring JMS module for lookup for the queues and MDBs for the listeners Established Database Connectivity using Hibernate OR mapping with Spring ORM for Oracle Spring Batch was used for processing large volumes of records including loggingtracing job processing statistics job restart skip transaction management and resource management in the application using Quartz Scheduler Deployed the drools rules as a service in J2EE stack environment and packaged and deployed the application in JBoss Used Spring Security for Authentication and Authorization of the application Written LINUX shell scripts to identify user login information Used Log4J for application logging and notification tracing mechanisms Implemented Web service calls using SOAP JAXWS frameworks to provide significant prebuild extensibility in the form of the WS standards Created WSDL Web Services Description Language document for client application web services Developed SOAP web services JAXWS for sending and getting data from different applications WSDL generation and exposed the service at serverside over the Internet and tested the services using JUnit Modified WSDL and XSD schema while generating web service client artifacts by using jaxws in Jboss server and RAD 8x Used Maven tools for building and deploying the Web applications Did Analysis and Bug fix of the production problems and defects along with enhancements Implemented JUNIT test cases for unit testing and Suites for end to end testing Used Selenium web driver to run automation scripts Used JIRA for tracking the Project Stories in Agile Methodology Used Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment HTML JQuery Ajax Java script Angular JS JQuery Drools J2EE Spring MVC Spring IOC Spring AOP Spring DAO Spring Security Spring JMS Spring ORM MDB JUnit Jasmine Karma Protractor Hibernate SQL PLSQL Oracle JMS SOAP JAXWS Maven Jira Tortoise SVN Linux Log4J Selenium Spring Batch Quartz Scheduler Jr Java Developer Ness USA inc Chicago IL March 2010 to April 2012 Description Andhra Bank is a mediumsized publicsector bank PSB of with a network of 2803 branches 4 extension counters 38 satellite offices and 3636 automated teller machines ATMs I worked to build a portal through which users can check their pending loan amounts and due dates Responsibilities The application is designed using J2EE design patterns and technologies based on MVC architecture Involved in various phases of Software Development Life Cycle SDLC and Agile methodology is used for development of the application Used J2EE design patterns like Value Object Pattern Session Faade Singleton Factory and DAO Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Implemented persistence layer with I BATISORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Implemented Service Oriented Architecture SOA and web services using SOAP with JAXWS Used SOAP for transmission of large blocks of XML data over HTTP Involved in the development of underwriting process which involves communications without side systems using IBM MQ JMS Wrote Unit test cases using J Unit Mockito framework Used ANT for automated build and deployment on IBM WebSphere Handled Java Multithreading part in backend component one thread will be running for each user which serves that user Environment Db2 PLSQL Spring IOC Struts i Baits JSP JSTL Spring Security SOA SOAP JAXWS IBM MQ JMS J Unit Miskito ANT IBM WebSphere J2EE Education Bachelors Skills ECLIPSE EJB J2EE JAVA HIBERNATE",
    "entities": [
        "Zions Service Framework",
        "Micro Services",
        "REDUX Reducers architecture Responsible",
        "Spring Security JWT",
        "AJAX",
        "AWS Jenkins Docker Jasmine",
        "GUI",
        "Mongo DB Express",
        "the Multithreading Concepts Using",
        "Triggers Used Hibernate Transaction Management Hibernate Batch Transactions",
        "Implemented Continuous Integration",
        "Bootstrap Experienced",
        "ANT Implemented Docker",
        "JS Express",
        "Dump Analysis",
        "Drools Rule Engines",
        "HTTP",
        "Spring IOC",
        "MultiThreading Synchronization",
        "MVC Spring",
        "IBM",
        "Package Managers",
        "Tree SlideView and Table Grid Implemented",
        "node",
        "Test Driven Development TDD Worked",
        "Controller Advice",
        "Interaction",
        "Express",
        "XML",
        "SOAP",
        "BOWER Used Grunt Task Runner",
        "Hystix Circuit Breaker",
        "OAuth",
        "a Single Page Application",
        "WebLogic",
        "JAXWS",
        "JUnit",
        "Software Development Life Cycle SDLC",
        "Analysis Design Development Implementation and Testing",
        "Transaction Management",
        "Jenkins Setup",
        "Documented Spring",
        "JAVAJ2EE",
        "Grunt Experienced",
        "NGRX Expertise",
        "Jersey Framework",
        "Future Core JIRA RTC RQM",
        "Node JS Configured",
        "Developed",
        "Responsive Web Pages",
        "the Enterprise Integration Patterns EIP",
        "Procedure Queries Views",
        "the Microsoft Azure Service",
        "Bootstrap Used Bootstrap",
        "Installed",
        "Automatic",
        "Utilized",
        "Jboss",
        "Description Andhra Bank",
        "Responsibilities Involved",
        "Zions Bank",
        "Client",
        "Pivotal Functional Service",
        "Swagger Unit",
        "DDL",
        "America Auburn Hills",
        "Hibernate Spring Data",
        "MQ",
        "JQUERY",
        "New Relic and Dyna Trace Strong",
        "Volkswagen Group",
        "Media Queries Implementing",
        "MaterialUI Worked on React",
        "Microsoft Azure",
        "Apache Camel",
        "Zuul Fault fa Kubernetes",
        "API Developed",
        "SAAS",
        "Unstructured",
        "Angular 5",
        "Micro",
        "Value Object Pattern Session Faade Singleton Factory",
        "IOC",
        "Amazon Web Services Iaas Infrastructure As a Service Components",
        "JBoss",
        "DOM",
        "Implemented Singleton Service Locator",
        "RDS",
        "HTML Angular 6",
        "Jenkins CICD",
        "SSL",
        "Views",
        "CLI",
        "Oracle Database",
        "Angular JS",
        "Redux Architecture",
        "MVC",
        "POM",
        "Agile",
        "Redux",
        "GIT",
        "BRMS Business Rules Management System",
        "Node JS",
        "Swagger and WSDL Experienced",
        "Exception Handler",
        "HTML CSS",
        "Googles V8",
        "API",
        "Dependency Injection IOC Annotations",
        "ALM",
        "micro Services",
        "US",
        "Json Used Spring Security for Authentication",
        "EHCache Created",
        "Angular 4 like",
        "POJO",
        "Splunk Development Configuration and Administration",
        "Cassandra Connector",
        "LDAP OAuth2",
        "Spock",
        "Ng Modules",
        "Present Description",
        "JBOSS Application",
        "Implemented AWS",
        "Builtin AJAX HTTP Service",
        "LESS Type Script Bootstrap",
        "React JS",
        "Established Database Connectivity using Hibernate",
        "MEAN",
        "Continuous Development CICD",
        "SQL",
        "Mokito",
        "Amazon Web Services",
        "IO",
        "DML",
        "Redis Remote Dictionary Server",
        "Hapi Implemented",
        "Kubernetes",
        "MVC Architecture",
        "NPM",
        "jQuery React",
        "Chicago",
        "Volkswagen",
        "Company",
        "DAO Created Stored Procedures Functions Used",
        "Zuul",
        "NPM Node Package",
        "Continuous Deployment",
        "React JS Unit",
        "Flux",
        "Pivotal Application Service Pivotal Container Service",
        "Responsible for React UI",
        "JMS Java Messaging Service",
        "MVC Jersey",
        "Maven",
        "Implemented Service Oriented Architecture SOA",
        "HTML CSS JavaScript JQuery and Ajax UX",
        "Site Minder",
        "JavaScript",
        "the UI Performed Verification",
        "HTTP Involved",
        "ANT",
        "UI",
        "Scratch",
        "Selenium",
        "Microsoft",
        "XSD",
        "Inversion of Control IOC",
        "Cursor",
        "SVN",
        "Groovy",
        "Expertise",
        "CSS",
        "Karma Jasmine",
        "Functional Interfaces Stream API Time API Transaction Management Exception Handling Collection API",
        "Mongoose Connector",
        "SPA",
        "REST",
        "Data",
        "the Project Stories",
        "the Spring Modules",
        "SOA Service Oriented Architecture",
        "UI Technologies",
        "RAD 8x",
        "NoSQL",
        "Micro Service Oriented Architecture",
        "Software Development Life Cycle",
        "EBS",
        "Mongo DB",
        "JQuery",
        "Node",
        "Dynamic Single Page",
        "HTML CSS Webpack Redux Involved"
    ],
    "experience": "Experience in developing Web Applications with various Open Source frameworks JSF 12 Spring Framework 203040 Web Flow Jakarta Struts Framework 111220 Struts Validation and Tiles Frameworks Extensive knowledge on the Spring Modules like Spring IOC and Dependency Injection Spring MVC Spring Batch Spring Web Flow Spring Security Authentication and Authorization Spring AOP for Code Modularity and Spring Boot Developed and deployed Micro Services based applications using Spring Boot along with Spring Rest and Node Js with Express and Hapi Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Well experienced on implementing SOA Service Oriented Architecture using Spring REST to create REST resources that include several components like Jersey Framework spring Boot JAXRS and used WADL for documenting REST APIS Worked on SOAP protocol using JAX WS and integrated Apache CXF AXIS2 for WSRemote Messaging WS Security WS Policy and other specifications and automated documentation using Swagger and WSDL Experienced in configuring and deploying applications on different servers such as Apache Tomcat Web logic IBM WebSphere JBoss Expertise to interact with relational databases using ORM frameworks like Hibernate Spring Data JPA IBatis MyBatis Java Persistence API JPA Hibernates second level cache Ehcache Have good knowledge on different databases like PostgreSQL MySQL DB2 Oracle 13c11 g Microsoft SQL Server NoSQL DB Raven DB Mongo DB and Cassandra Couch DB Redis Dynamo DB and good experience in writing stored procedures functions and triggers using PLSQL in JDBC ODBC and in WebLogic server Experience in writing stored procedures triggers views and functions using PLSQL scripts and embedded DDL and DML statements in PLSQL blocks Experience in Developing User Interface UI Rich Web Applications using Front EndUser Interface UI Technologies like HTML45 XHTML DHTML CSS23using SASS and LESS Type Script Bootstrap and AJAX by managing all facets and pipelines of application Expertise in implementing the features of ES6 like arrows modules block scoping promises and enhanced object literals Experienced in working with MVVM design flow using clientside JavaScript framework Angular 2x4 X50 with NGRX Expertise in using shadow DOM which is a feature of Angular 5 to encapsulate visual behavior Good knowledge in providing support for passing messages between publishers and subscribers using observables as a part of Angular 5 Experience with features of Angular 4 like Ng Modules which configure the injector and the compiler and help organize related things together Proficient with Angular JS Backbone JS Ember JS Knockout JS Ext JS for customize front end app development and to achieve MVC design flow Well experienced in view rendering using jQuery React JS Handlebar JS and implementing React JS with Redux and Flux patterns to attain MVC functionality Well experienced in developing Dynamic Single Page ApplicationSPA using MEAN MongoDB Express Angular Node full stack development tool Kit Good amount of hands on Experience in developing serverside JavaScript frameworks using Node JS Hapi JS Express JS to build event driven nonblocking io model web applications Experience in installing dependencies using Package Managers like NPM BOWER and running automated task using Gulp Grunt and web pack for bundling minification loading images configuration Experience on UI testing with Karma Jasmine Protractor for Angular JS and Mocha Chai for React JS Unit tested web services using Junit Mockito Easy mock Spring Junit Runner Spock Test NG and hence achieved the goals of Test Driven Development TDD Well experienced in using various AWS Amazon Web Services Iaas Infrastructure As a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Expertise in using Microsoft Azure which is cloud computing service for building testing deploying and managing applications and services through a global network of Microsoft managed data centers Good Knowledge and Experience on implementing Spring Cloud Netflix OSS Stack for micro Services deployment Zuul for API Gateway for routing Hystix Circuit Breaker for latency and fault tolerance and Eureka for service registration Experience in applying JMS Java Messaging Service for reliable information exchange across Java applications using Apache Kafka Rabbit MQ Active MQ and IBM MQ to communicate from Client to Server Good knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view using Elastic search ELK Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Implemented security functionality OAuth 20 Spring security SSL and site minder SSO secure authentication with LDAP OAuth2 for generating tokens in the application using Spring Security JWT for producing tokens Well experienced with build tools like Gradle Maven and ANT Implemented Docker container service build pipe line Jenkins Bamboo and GoCDGo Continuous Delivery to achieve Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Hands on experience in managing this Docker Container using Kubernetes with zero downtime deployment Used Kubernetes Linux container for deploying and scaling containerized applications Good practical experience with Javabased logging utility ie log4J Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Good experience in using Software development methodologies like AgileScrum Water Fall and Rational Application Development methodologies Experience in using Mule soft which is light weight Java based Enterprise Service Bus ESB which allows connecting applications together quickly and easily enabling them to exchange data Experience in using open source framework Apache Camel which for messageoriented middleware with a rulebased routing and mediation engine that provides a Java objectbased implementation of the Enterprise Integration Patterns EIP using an application programming interface to configure routing and mediation rules Expertise in working with JAVA8 features like Functional Interfaces Stream API Time API Transaction Management Exception Handling Collection API and Lambda Expressions Authorized to work in the US for any employer Work Experience Java Full Stack Developer Zions Bancorporation Salt Lake City UT July 2018 to Present Description This is a data migration project from IBM CLM tool to Microsoft Azure DevOps As part of migration Zions Service Framework was developed to support the ALM migration and developing micro service extensions to extract data from different tools Zions Bank has number of applications running with IBM CLM tool as part of this framework we developing different individual services to migrate data from Future Core JIRA RTC RQM DNG Test Link and also maintaining all micro services and smooth migration of data from IBM CLM to Microsoft Azure DevOps Responsibilities Involved client side designing and validation using HTML Angular 6 CSS JavaScript JSP Updated pages using HTML CSS in Angular JS framework and created Responsive Web Pages using Bootstrap framework Developed screens using HTML CSS JavaScript JQuery and Ajax UX design and implementation using HTML CSS Webpack Redux Involved in putting the entries to external XML files whenever required Used Angular JS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Developed Web API using NodeJS and hosted on multiple load balanced API instances Involved in building stable angular components and standalone functions to be added to any future pages Involved in implementing the complete application in the inbuild MVC Architecture with Angular 6 Used Javascript for the providing dynamic functionality and to create a highly responsive interface Involved in the design of the application using J2EE which employs ModelViewController MVC design pattern Single web page applications are coded using JavaScript client framework as well as restful API developments in Spring restful API and Spring boot Used JSON to load data into JQUERY data grid and also as a response type in REST services Created and injected Spring services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Implemented Singleton Service Locator design patterns in MVC framework and developed command delegate model action script classes to interact with the backend Worked on the Multithreading Concepts Using executor frame work for file parsing the data or scheduling the Data into the application from the vendor services which are in both text and Xml into Json Used Spring Security for Authentication and authorization extensively Developed backend web services using Node JS and custom components for the web applications using angular 6 Experience working on Bootstrap Angularjs Backbonejs Knockoutjs Responsive design and Media Queries Implementing or exposing the Micro services based on RESTful API utilizing Spring MVC Jersey and Apache CXF Using Handlebar Js we can add templates to your HTML page that will be parsed and interpolated with the values from the data you passed to the Handlebarsjs function Configured the xml files for Hibernate and applied its Object Relational Mapping ORM to enable the data transactions between POJO and Oracle Database using caching on Session Factory as well as caching on query Involved in writing and modifying Procedure Queries Views and Triggers Used Hibernate Transaction Management Hibernate Batch Transactions and cache concepts Used Maven for dependencies and configuration management Developed Mean stack from Scratch including Mongo DB and Express JS server development Used Mongoose connector to connect Mongo DB through Express framework Performed configuration deployment and support of cloud services including Amazon Web Services AWS NoSQL database design and implementation with Cassandra and MongoDB Involved in writing MultiThreading Synchronization concepts in Java Programs Vuejs was used to fetch data from server using axios prepare and transform data to display in the forms validate userentered data and then post data Implemented Continuous Integration and Continuous Development CICD process using Jenkins Setup frontend application using Web pack NPM and Babel Used Jenkins for continuous integration and worked on Performance improvements for the application Used Docker for managing and running applications within containers Worked with Jasmine and Karma for performing unit testing of Angular JavaScript Writing test cases using JUnit Involved in Test driven software development by carrying out test plans Used Splunk for Log management monitoring alerts log analysis such as how many services consumed per hour based on the response methods response time analysis Involved in fixing existing bugs and also making modifications to already existing code Worked on Selenium for automating the test cases Implement technologies to improve development process using NPM and BOWER Used Grunt Task Runner for packaging Involved in taking the Clients requirement uptodate and working on them accordingly Environment HTML CSS Angular 6 Java Script JQuery Ajax JSON Backbone JS Bootstrap XML Spring MVC Spring IOC DAO Hibernate Multithreading JAXRS Apache CXF Jersey Apache Kafka Node JS Mongo DB Express JS AWS Jenkins Docker Jasmine and Karma JUnit Easy Mock Selenium NPM Bower Grunt Java Full Stack Developer Volkswagen group of America Auburn Hills MI June 2016 to July 2018 Description At Volkswagen Group is to develop innovations and technologies for future generations of cars and to transfer technologies from many industries and research institutions into the automotive domain My role in this position will be responsible for software infrastructure to bring new connected functionality and interfaces to the automotive market And develop prototype implementations and interfaces to enable future connected vehicle applications potentially developing system requirements and specifications that will influence future production systems Responsibilities The application is built Micro Service Oriented Architecture using MEAN 4 Mongo Express Angular and Node stack and developed Single Page Applications SPA Designed and developed efficient user Interaction screens using HTML5 CSS3SASS and Twitter Bootstrap CSS framework and media queries to create responsive web pages Used Web Pack module bundler for compilation of SAAS files into CSS and for monitoring the application Developed multiple Angular 40 components which are compatible with latest versions of typescript angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Developed angular views to hook up models to the DOM and synchronize data with server as a SPA Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Implemented Node JS as a serverside proxy for an eventdriven nonblocking IO model to make the application lightweight and efficient Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Implemented services call from Angular at client to Express JS at Node JS server Utilized the inbuilt NPM package manager to configure the right versions of the packages and to achieve dependency management Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the spring bean profiling Implemented a robust RESTful web service using Spring Boot to modularize code and automated documentation to the web services in the application is provided by Swagger Unit testing of web services is done using Spock framework by extending Groovy syntax Configured Redis Remote Dictionary Server with node server for caching the responses via cat box Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Testing for Node JS is done using Mocha and chai and for spring boot used Mokito junit mock mvc and thereby achieving Test Driven Development TDD Worked on ECMA 6 features as ES6 features implemented in Googles V8 which is used by Node JS Configured OIDC Open ID Connect on top of OAUTH 20 authentication and authorization framework to provide the security to rest web services Implemented Single Sign On and policy based authentication using Site Minder security framework Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernates second level EHCache Created dynamic schema design through NOSQL Mongo DB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Implemented Mongoose Connector as our ODM framework Unstructured data was handled using MongoDB and used Mongoose Connector for connecting to database Configured Kibana data visualization plugin for Elastic search Log stash and created bar line and scatter plots or pie charts and maps on top of large volumes of data Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Responsible for migrating existing modules in IBM MQ to Apache Kafka and worked on creating Kafka adaptors for decoupling the application dependency Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Developed Micro Services using Spring Cloud Netflix OSS stack to address Load balancing using Ribbon API Gateway using Zuul Fault fa Kubernetes is configured in the application for automating deployment scaling and management of containerized applications Hands on experience on Dump Analysis and thread Dump common problem patterns Thread race deadlock hanging IO calls garbage collection OutOfMemoryError problems infinite looping etc Configured New Relic to measure and monitor the performance of application Provided production supporton call support to fix production issues after the deployment Environment Angular 5040 Node JS Express JS HTML5 CSS3SASS Twitter Bootstrap40 Site Minder Hibernate4x OAuth20 OIDC Eclipse Java EE IDE JIRA Apache Kafka IBM MQ Jenkins BabelLog4j Redis Mongo DB Mongoose Connector Oracle JBoss Kibana Elastic search Log stash NPM Web pack EC2 S3 RDS EBS Elastic Load Balancer Docker Apache tomcat Selenium Spock Karma Jasmine Mocha Chai Mokito Junit mock mvc Kubernetes New Relic Dump Analysis Netflix Zuul Eureka Swagger Maven30 Sr Java Full Stack Developer Epsilon Irving TX May 2014 to June 2016 Description At Epsilon provides unique solutions that strategically combine analytics rich data and technology It is committed to help their customers embrace the vast capabilities that the cloud has to offer Areas such as infrastructure development software applications business intelligence and platform solutions are all within our wheelhouse My role is in development of various applications and maintain quality for same and perform trouble shot to resolve all application issues Responsibilities Involved in developing user interface with HTML5 CSS3 SAAS JSON AJAX React JS Type script Es6 Implemented responsive web design using Bootstrap Used Bootstrap frontend framework for faster and easier web development Design website and maintain the website content up to date Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Experienced in React JS and working with redux architecture Designed modular and reusable React components using Redux Architecture and MaterialUI Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Worked in using React JS components Forms Events Keys Router Animations and Redux concept Responsible for React UI and architecture Building components library including Tree SlideView and Table Grid Implemented application testability and diagnostics and fixing bugs with the help of REDUX Reducers architecture Responsible for implementing UI mockups integrating third party react libraries and handlingcreating redux store data Developed ReactRedux code using functional programming best practices to enable efficient pure function testing Experienced in working with Redux and Alt JS architecture Used Oath 2 which is a lightweight authentication framework with a central authorization server and generates an access token to access a protected resource on a resource server Oath 2 simplifies all the communications between the client server and content provider Designed and developed Spring Boot adapter applications using rest API Developed REST full service interface using Spring Boot to the underlying Agent Services API and Implemented REST full web services Used Spring Boot which removes boilerplate configuration and makes application faster Developed some standalone Micro services using Spring Boot micro service architectural patterns Used spring Boot properties like actuators and health checkers to enhance micro service implementations Worked on SocketIO which enables the realtime bidirectional eventbased communication Documented Spring Restful APIs with Swagger to help customers better understand APIs Integrated spring with Hibernate for data access from MySQL Database Unstructured data was handled using Cassandra DB and used Cassandra Connector for connection Composed and executed Cassandra DB scripts and queries to fetch and test data from No SQL databases Used Apache Kafka Message Queues for reliable and asynchronous exchange of vital information between multiple business applications Used Jenkins for continuous deployment and integration of the build and release process Worked with the Node package manager NPM along with Grunt Experienced in working with Babel and Web pack in application build and deployment processes Extensively used Mocha and Chai JavaScript unit testing tools for testing JavaScript pages Worked on creation of custom Docker container images tagging and pushing the images Designed configured and deployed Microsoft Azure for a multitude of applications utilizing the Microsoft Azure Service focusing on highavailability fault tolerance and autoscaling Extensively used GIT for version controlling and regularly pushed the code to Git Hub Used MAVEN for building the project dependency and documentation which is based on POM project object model Environment HTML5 CSS3 SAAS JSON AJAX Bootstrap React JS Maven Spring Boot Spring IOC Oath 2 Node JS Express JS NPM Grunt Babel Web Pack Docker AWS Apache Kafka Restful JAXRS Swagger GIT Jenkins MySQL No SQL Cassandra DB Mocha Chai Java Full Stack Developer Connexions Loyality Richmond VA April 2012 to May 2014 Project Description The objective of Company is to have a framework in place for the organization which allows the business users to add new customer configurations customer product catalog excluded product details list etc without depending on the development team Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using agile methodology for building Service Oriented Architecture SOA Created userfriendly GUI interface and Web pages using HTML JQuery and AJAX Used AngularJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications SPA Worked on Angular JS expressions and builtin directives to render functionality to the UI and JQuery for DOM manipulation and twoway binding Implemented AngularJS controllers to update entity models and used custom AngularJS Filters to provide better search experience Implemented various AngularJS filters against data sets to filter and formatted data currency strings rendered in the UI Performed Verification and validation process for the code written by making use of Protractor framework by testing across various scenarios of the AngularJS applications Extensively used JSON to parse the data from server side to satisfy the business requirement Used SpringMVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate and handled Transaction Management using the provided data Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated spring and hibernate together and worked on developing backend components and services Wrote PLSQL queries stored procedures triggers packages on Oracle database Used Spring JMS module for lookup for the queues and MDBs for the listeners Established Database Connectivity using Hibernate OR mapping with Spring ORM for Oracle Spring Batch was used for processing large volumes of records including loggingtracing job processing statistics job restart skip transaction management and resource management in the application using Quartz Scheduler Deployed the drools rules as a service in J2EE stack environment and packaged and deployed the application in JBoss Used Spring Security for Authentication and Authorization of the application Written LINUX shell scripts to identify user login information Used Log4J for application logging and notification tracing mechanisms Implemented Web service calls using SOAP JAXWS frameworks to provide significant prebuild extensibility in the form of the WS standards Created WSDL Web Services Description Language document for client application web services Developed SOAP web services JAXWS for sending and getting data from different applications WSDL generation and exposed the service at serverside over the Internet and tested the services using JUnit Modified WSDL and XSD schema while generating web service client artifacts by using jaxws in Jboss server and RAD 8x Used Maven tools for building and deploying the Web applications Did Analysis and Bug fix of the production problems and defects along with enhancements Implemented JUNIT test cases for unit testing and Suites for end to end testing Used Selenium web driver to run automation scripts Used JIRA for tracking the Project Stories in Agile Methodology Used Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment HTML JQuery Ajax Java script Angular JS JQuery Drools J2EE Spring MVC Spring IOC Spring AOP Spring DAO Spring Security Spring JMS Spring ORM MDB JUnit Jasmine Karma Protractor Hibernate SQL PLSQL Oracle JMS SOAP JAXWS Maven Jira Tortoise SVN Linux Log4J Selenium Spring Batch Quartz Scheduler Jr Java Developer Ness USA inc Chicago IL March 2010 to April 2012 Description Andhra Bank is a mediumsized publicsector bank PSB of with a network of 2803 branches 4 extension counters 38 satellite offices and 3636 automated teller machines ATMs I worked to build a portal through which users can check their pending loan amounts and due dates Responsibilities The application is designed using J2EE design patterns and technologies based on MVC architecture Involved in various phases of Software Development Life Cycle SDLC and Agile methodology is used for development of the application Used J2EE design patterns like Value Object Pattern Session Faade Singleton Factory and DAO Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Implemented persistence layer with I BATISORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Implemented Service Oriented Architecture SOA and web services using SOAP with JAXWS Used SOAP for transmission of large blocks of XML data over HTTP Involved in the development of underwriting process which involves communications without side systems using IBM MQ JMS Wrote Unit test cases using J Unit Mockito framework Used ANT for automated build and deployment on IBM WebSphere Handled Java Multithreading part in backend component one thread will be running for each user which serves that user Environment Db2 PLSQL Spring IOC Struts i Baits JSP JSTL Spring Security SOA SOAP JAXWS IBM MQ JMS J Unit Miskito ANT IBM WebSphere J2EE Education Bachelors Skills ECLIPSE EJB J2EE JAVA HIBERNATE",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Zions",
        "Bancorporation",
        "Fremont",
        "CA",
        "years",
        "stack",
        "development",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "web",
        "enterprise",
        "business",
        "applications",
        "JAVAJ2EE",
        "technologies",
        "Experience",
        "Web",
        "Applications",
        "Open",
        "Source",
        "JSF",
        "Spring",
        "Framework",
        "Web",
        "Flow",
        "Jakarta",
        "Struts",
        "Framework",
        "Struts",
        "Validation",
        "Tiles",
        "Frameworks",
        "knowledge",
        "Spring",
        "Modules",
        "Spring",
        "IOC",
        "Dependency",
        "Injection",
        "Spring",
        "MVC",
        "Spring",
        "Batch",
        "Spring",
        "Web",
        "Flow",
        "Spring",
        "Security",
        "Authentication",
        "Authorization",
        "Spring",
        "AOP",
        "Code",
        "Modularity",
        "Spring",
        "Boot",
        "Developed",
        "Micro",
        "Services",
        "applications",
        "Spring",
        "Boot",
        "Spring",
        "Rest",
        "Node",
        "Js",
        "Express",
        "Hapi",
        "exception",
        "handling",
        "Java",
        "Spring",
        "boot",
        "REST",
        "API",
        "use",
        "Exception",
        "Handler",
        "Controller",
        "Advice",
        "annotations",
        "SOA",
        "Service",
        "Oriented",
        "Architecture",
        "Spring",
        "REST",
        "REST",
        "resources",
        "components",
        "Jersey",
        "Framework",
        "spring",
        "Boot",
        "JAXRS",
        "WADL",
        "REST",
        "APIS",
        "SOAP",
        "protocol",
        "JAX",
        "WS",
        "Apache",
        "CXF",
        "AXIS2",
        "WSRemote",
        "Messaging",
        "WS",
        "Security",
        "WS",
        "Policy",
        "specifications",
        "documentation",
        "Swagger",
        "WSDL",
        "configuring",
        "applications",
        "servers",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Expertise",
        "databases",
        "ORM",
        "frameworks",
        "Hibernate",
        "Spring",
        "Data",
        "JPA",
        "IBatis",
        "MyBatis",
        "Java",
        "Persistence",
        "API",
        "JPA",
        "Hibernates",
        "level",
        "cache",
        "Ehcache",
        "knowledge",
        "databases",
        "PostgreSQL",
        "MySQL",
        "DB2",
        "Oracle",
        "13c11",
        "g",
        "Microsoft",
        "SQL",
        "Server",
        "NoSQL",
        "DB",
        "Raven",
        "DB",
        "Mongo",
        "DB",
        "Cassandra",
        "Couch",
        "DB",
        "Redis",
        "Dynamo",
        "DB",
        "experience",
        "procedures",
        "functions",
        "triggers",
        "PLSQL",
        "JDBC",
        "ODBC",
        "WebLogic",
        "server",
        "Experience",
        "procedures",
        "views",
        "functions",
        "PLSQL",
        "scripts",
        "DDL",
        "DML",
        "statements",
        "PLSQL",
        "blocks",
        "Experience",
        "User",
        "Interface",
        "UI",
        "Rich",
        "Web",
        "Applications",
        "Front",
        "EndUser",
        "Interface",
        "UI",
        "Technologies",
        "HTML45",
        "XHTML",
        "DHTML",
        "SASS",
        "Type",
        "Script",
        "Bootstrap",
        "AJAX",
        "facets",
        "pipelines",
        "application",
        "Expertise",
        "features",
        "arrows",
        "modules",
        "promises",
        "object",
        "literals",
        "MVVM",
        "design",
        "flow",
        "JavaScript",
        "framework",
        "Angular",
        "2x4",
        "X50",
        "NGRX",
        "Expertise",
        "shadow",
        "DOM",
        "feature",
        "Angular",
        "behavior",
        "knowledge",
        "support",
        "messages",
        "publishers",
        "subscribers",
        "observables",
        "part",
        "Angular",
        "Experience",
        "features",
        "Angular",
        "Ng",
        "Modules",
        "injector",
        "compiler",
        "things",
        "JS",
        "Backbone",
        "JS",
        "Ember",
        "JS",
        "Knockout",
        "JS",
        "Ext",
        "JS",
        "customize",
        "end",
        "app",
        "development",
        "MVC",
        "design",
        "flow",
        "view",
        "jQuery",
        "React",
        "JS",
        "Handlebar",
        "JS",
        "React",
        "JS",
        "Redux",
        "Flux",
        "patterns",
        "MVC",
        "functionality",
        "Dynamic",
        "Single",
        "Page",
        "ApplicationSPA",
        "MEAN",
        "Express",
        "Angular",
        "Node",
        "stack",
        "development",
        "tool",
        "Kit",
        "amount",
        "hands",
        "Experience",
        "serverside",
        "JavaScript",
        "frameworks",
        "Node",
        "JS",
        "Hapi",
        "JS",
        "Express",
        "JS",
        "event",
        "io",
        "model",
        "web",
        "applications",
        "Experience",
        "dependencies",
        "Package",
        "Managers",
        "NPM",
        "BOWER",
        "task",
        "Gulp",
        "Grunt",
        "web",
        "pack",
        "minification",
        "loading",
        "images",
        "configuration",
        "Experience",
        "UI",
        "testing",
        "Karma",
        "Jasmine",
        "Protractor",
        "Angular",
        "JS",
        "Mocha",
        "Chai",
        "React",
        "JS",
        "Unit",
        "web",
        "services",
        "Junit",
        "Mockito",
        "Easy",
        "Spring",
        "Junit",
        "Runner",
        "Spock",
        "Test",
        "NG",
        "goals",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "AWS",
        "Amazon",
        "Web",
        "Services",
        "Iaas",
        "Infrastructure",
        "Service",
        "Components",
        "EC2",
        "running",
        "applications",
        "machines",
        "S3",
        "Glacier",
        "term",
        "data",
        "EBS",
        "block",
        "level",
        "storage",
        "Elastic",
        "Cache",
        "Dynamo",
        "DB",
        "SQS",
        "message",
        "RDS",
        "database",
        "cloud",
        "Lambda",
        "server",
        "program",
        "functions",
        "Expertise",
        "Microsoft",
        "Azure",
        "computing",
        "service",
        "testing",
        "deploying",
        "managing",
        "applications",
        "services",
        "network",
        "Microsoft",
        "data",
        "centers",
        "Good",
        "Knowledge",
        "Experience",
        "Spring",
        "Cloud",
        "Netflix",
        "OSS",
        "Stack",
        "micro",
        "Services",
        "deployment",
        "Zuul",
        "API",
        "Gateway",
        "Hystix",
        "Circuit",
        "Breaker",
        "latency",
        "tolerance",
        "Eureka",
        "service",
        "registration",
        "Experience",
        "JMS",
        "Java",
        "Messaging",
        "Service",
        "information",
        "exchange",
        "Java",
        "applications",
        "Apache",
        "Kafka",
        "Rabbit",
        "MQ",
        "MQ",
        "IBM",
        "MQ",
        "Client",
        "Server",
        "knowledge",
        "Splunk",
        "architecture",
        "components",
        "Expert",
        "Splunk",
        "Development",
        "Configuration",
        "Administration",
        "Kibana",
        "search",
        "ELK",
        "Hands",
        "experience",
        "implementation",
        "PCF",
        "Cloud",
        "Foundry",
        "Paas",
        "Platform",
        "Service",
        "services",
        "Pivotal",
        "Application",
        "Service",
        "Pivotal",
        "Container",
        "Service",
        "Pivotal",
        "Functional",
        "Service",
        "applications",
        "cloud",
        "security",
        "functionality",
        "OAuth",
        "Spring",
        "security",
        "SSL",
        "site",
        "minder",
        "SSO",
        "authentication",
        "LDAP",
        "OAuth2",
        "tokens",
        "application",
        "Spring",
        "Security",
        "JWT",
        "tokens",
        "build",
        "tools",
        "Gradle",
        "Maven",
        "ANT",
        "Implemented",
        "Docker",
        "container",
        "service",
        "build",
        "pipe",
        "line",
        "Jenkins",
        "Bamboo",
        "GoCDGo",
        "Continuous",
        "Delivery",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "cloud",
        "Hands",
        "experience",
        "Docker",
        "Container",
        "Kubernetes",
        "downtime",
        "deployment",
        "Kubernetes",
        "Linux",
        "container",
        "applications",
        "experience",
        "Javabased",
        "utility",
        "knowledge",
        "Drools",
        "Rule",
        "Engines",
        "BRMS",
        "Business",
        "Rules",
        "Management",
        "System",
        "Experience",
        "Java",
        "Thread",
        "Dump",
        "Analysis",
        "thread",
        "dump",
        "techniques",
        "knowledge",
        "Application",
        "monitoring",
        "tools",
        "New",
        "Relic",
        "Dyna",
        "Trace",
        "Strong",
        "Knowledge",
        "integration",
        "testing",
        "testing",
        "applications",
        "Selenium",
        "Cucumber",
        "experience",
        "Software",
        "development",
        "methodologies",
        "AgileScrum",
        "Water",
        "Fall",
        "Rational",
        "Application",
        "Development",
        "methodologies",
        "Experience",
        "Mule",
        "weight",
        "Java",
        "Enterprise",
        "Service",
        "Bus",
        "ESB",
        "applications",
        "data",
        "Experience",
        "source",
        "framework",
        "Apache",
        "Camel",
        "middleware",
        "routing",
        "mediation",
        "engine",
        "Java",
        "implementation",
        "Enterprise",
        "Integration",
        "Patterns",
        "EIP",
        "application",
        "programming",
        "interface",
        "configure",
        "routing",
        "mediation",
        "Expertise",
        "JAVA8",
        "features",
        "Interfaces",
        "Stream",
        "API",
        "Time",
        "API",
        "Transaction",
        "Management",
        "Exception",
        "Handling",
        "Collection",
        "API",
        "Lambda",
        "Expressions",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Zions",
        "Bancorporation",
        "Salt",
        "Lake",
        "City",
        "UT",
        "July",
        "Present",
        "Description",
        "data",
        "migration",
        "project",
        "IBM",
        "CLM",
        "tool",
        "Microsoft",
        "Azure",
        "DevOps",
        "part",
        "migration",
        "Zions",
        "Service",
        "Framework",
        "ALM",
        "migration",
        "micro",
        "service",
        "extensions",
        "data",
        "tools",
        "Zions",
        "Bank",
        "number",
        "applications",
        "IBM",
        "CLM",
        "tool",
        "part",
        "framework",
        "services",
        "data",
        "Future",
        "Core",
        "JIRA",
        "RTC",
        "RQM",
        "DNG",
        "Test",
        "Link",
        "micro",
        "services",
        "migration",
        "data",
        "IBM",
        "CLM",
        "Microsoft",
        "Azure",
        "DevOps",
        "Responsibilities",
        "client",
        "side",
        "designing",
        "validation",
        "HTML",
        "Angular",
        "CSS",
        "JavaScript",
        "JSP",
        "pages",
        "HTML",
        "CSS",
        "JS",
        "framework",
        "Responsive",
        "Web",
        "Pages",
        "Bootstrap",
        "framework",
        "screens",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Ajax",
        "UX",
        "design",
        "implementation",
        "HTML",
        "CSS",
        "Webpack",
        "Redux",
        "entries",
        "XML",
        "files",
        "JS",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "data",
        "views",
        "data",
        "server",
        "Web",
        "API",
        "NodeJS",
        "load",
        "API",
        "instances",
        "components",
        "functions",
        "pages",
        "application",
        "inbuild",
        "MVC",
        "Architecture",
        "Angular",
        "Used",
        "Javascript",
        "functionality",
        "interface",
        "design",
        "application",
        "J2EE",
        "ModelViewController",
        "MVC",
        "design",
        "pattern",
        "web",
        "page",
        "applications",
        "JavaScript",
        "client",
        "framework",
        "API",
        "developments",
        "Spring",
        "API",
        "Spring",
        "boot",
        "JSON",
        "data",
        "JQUERY",
        "data",
        "grid",
        "response",
        "type",
        "REST",
        "services",
        "Spring",
        "services",
        "Spring",
        "controllers",
        "DAOs",
        "dependency",
        "injection",
        "wire",
        "objects",
        "business",
        "classes",
        "code",
        "bean",
        "references",
        "spring",
        "framework",
        "Dependency",
        "Injection",
        "DI",
        "Inversion",
        "Control",
        "IOC",
        "annotations",
        "Singleton",
        "Service",
        "Locator",
        "design",
        "patterns",
        "MVC",
        "framework",
        "command",
        "delegate",
        "model",
        "action",
        "script",
        "classes",
        "backend",
        "Multithreading",
        "Concepts",
        "executor",
        "frame",
        "work",
        "file",
        "data",
        "Data",
        "application",
        "vendor",
        "services",
        "text",
        "Xml",
        "Json",
        "Spring",
        "Security",
        "Authentication",
        "authorization",
        "web",
        "services",
        "Node",
        "JS",
        "custom",
        "components",
        "web",
        "applications",
        "Experience",
        "Bootstrap",
        "Angularjs",
        "Backbonejs",
        "Knockoutjs",
        "Responsive",
        "design",
        "Media",
        "Queries",
        "Micro",
        "services",
        "API",
        "Spring",
        "MVC",
        "Jersey",
        "Apache",
        "CXF",
        "Handlebar",
        "Js",
        "templates",
        "HTML",
        "page",
        "values",
        "data",
        "Handlebarsjs",
        "function",
        "xml",
        "files",
        "Hibernate",
        "Object",
        "Relational",
        "Mapping",
        "ORM",
        "data",
        "transactions",
        "POJO",
        "Oracle",
        "Database",
        "Session",
        "Factory",
        "query",
        "Procedure",
        "Queries",
        "Views",
        "Triggers",
        "Hibernate",
        "Transaction",
        "Management",
        "Hibernate",
        "Batch",
        "Transactions",
        "cache",
        "concepts",
        "Maven",
        "dependencies",
        "configuration",
        "management",
        "Mean",
        "stack",
        "Scratch",
        "Mongo",
        "DB",
        "Express",
        "JS",
        "server",
        "development",
        "Mongoose",
        "connector",
        "Mongo",
        "DB",
        "Express",
        "framework",
        "Performed",
        "configuration",
        "deployment",
        "support",
        "cloud",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "database",
        "design",
        "implementation",
        "Cassandra",
        "MongoDB",
        "MultiThreading",
        "Synchronization",
        "concepts",
        "Java",
        "Programs",
        "Vuejs",
        "data",
        "server",
        "axios",
        "data",
        "forms",
        "data",
        "data",
        "Continuous",
        "Integration",
        "Continuous",
        "Development",
        "CICD",
        "process",
        "Jenkins",
        "Setup",
        "frontend",
        "application",
        "Web",
        "pack",
        "NPM",
        "Babel",
        "Jenkins",
        "integration",
        "Performance",
        "improvements",
        "application",
        "Docker",
        "running",
        "applications",
        "containers",
        "Jasmine",
        "Karma",
        "unit",
        "testing",
        "Angular",
        "JavaScript",
        "test",
        "cases",
        "JUnit",
        "Test",
        "software",
        "development",
        "test",
        "plans",
        "Splunk",
        "Log",
        "management",
        "monitoring",
        "alerts",
        "analysis",
        "services",
        "hour",
        "response",
        "methods",
        "response",
        "time",
        "analysis",
        "bugs",
        "modifications",
        "code",
        "Selenium",
        "test",
        "cases",
        "technologies",
        "development",
        "process",
        "NPM",
        "BOWER",
        "Grunt",
        "Task",
        "Runner",
        "packaging",
        "Clients",
        "requirement",
        "Environment",
        "HTML",
        "CSS",
        "Angular",
        "Java",
        "Script",
        "JQuery",
        "Ajax",
        "JSON",
        "Backbone",
        "JS",
        "Bootstrap",
        "XML",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "DAO",
        "Hibernate",
        "Multithreading",
        "JAXRS",
        "Apache",
        "CXF",
        "Jersey",
        "Apache",
        "Kafka",
        "Node",
        "JS",
        "Mongo",
        "DB",
        "Express",
        "JS",
        "AWS",
        "Jenkins",
        "Docker",
        "Jasmine",
        "Karma",
        "JUnit",
        "Easy",
        "Mock",
        "Selenium",
        "NPM",
        "Bower",
        "Grunt",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Volkswagen",
        "group",
        "America",
        "Auburn",
        "Hills",
        "MI",
        "June",
        "July",
        "Description",
        "Volkswagen",
        "Group",
        "innovations",
        "technologies",
        "generations",
        "cars",
        "technologies",
        "industries",
        "research",
        "institutions",
        "domain",
        "role",
        "position",
        "software",
        "infrastructure",
        "functionality",
        "interfaces",
        "market",
        "prototype",
        "implementations",
        "interfaces",
        "vehicle",
        "applications",
        "system",
        "requirements",
        "specifications",
        "production",
        "systems",
        "Responsibilities",
        "application",
        "Micro",
        "Service",
        "Oriented",
        "Architecture",
        "MEAN",
        "Mongo",
        "Express",
        "Angular",
        "Node",
        "stack",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "user",
        "Interaction",
        "screens",
        "HTML5",
        "CSS3SASS",
        "Twitter",
        "Bootstrap",
        "CSS",
        "framework",
        "media",
        "queries",
        "web",
        "pages",
        "Web",
        "Pack",
        "module",
        "bundler",
        "compilation",
        "files",
        "CSS",
        "application",
        "Angular",
        "components",
        "versions",
        "typescript",
        "CLI",
        "Configured",
        "routes",
        "directives",
        "grid",
        "pagination",
        "validations",
        "loading",
        "loading",
        "Shadow",
        "DOM",
        "ngrx",
        "store",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "SPA",
        "Builtin",
        "AJAX",
        "HTTP",
        "Service",
        "observables",
        "updates",
        "UI",
        "application",
        "Node",
        "JS",
        "serverside",
        "proxy",
        "IO",
        "model",
        "application",
        "web",
        "services",
        "Node",
        "JS",
        "Express",
        "JS",
        "Node",
        "JS",
        "server",
        "Rest",
        "services",
        "database",
        "load",
        "cloud",
        "instances",
        "services",
        "Angular",
        "client",
        "Express",
        "JS",
        "Node",
        "JS",
        "server",
        "NPM",
        "package",
        "manager",
        "versions",
        "packages",
        "dependency",
        "management",
        "Configured",
        "Express",
        "JS",
        "node",
        "http",
        "framework",
        "middlewares",
        "HTTP",
        "requests",
        "frontend",
        "web",
        "packs",
        "starter",
        "boiler",
        "plates",
        "annotation",
        "approach",
        "application",
        "Spring",
        "Boot",
        "spring",
        "bean",
        "profiling",
        "web",
        "service",
        "Spring",
        "Boot",
        "code",
        "documentation",
        "web",
        "services",
        "application",
        "Swagger",
        "Unit",
        "testing",
        "web",
        "services",
        "Spock",
        "framework",
        "syntax",
        "Configured",
        "Redis",
        "Remote",
        "Dictionary",
        "Server",
        "node",
        "server",
        "responses",
        "cat",
        "box",
        "Karma",
        "test",
        "runner",
        "Jasmine",
        "test",
        "framework",
        "tool",
        "testing",
        "application",
        "Testing",
        "Node",
        "JS",
        "Mocha",
        "chai",
        "spring",
        "boot",
        "Mokito",
        "junit",
        "mvc",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "ECMA",
        "features",
        "features",
        "Googles",
        "V8",
        "Node",
        "JS",
        "Configured",
        "OIDC",
        "ID",
        "Connect",
        "top",
        "authentication",
        "authorization",
        "framework",
        "security",
        "rest",
        "web",
        "services",
        "Sign",
        "policy",
        "authentication",
        "Site",
        "Minder",
        "security",
        "framework",
        "Configured",
        "JBOSS",
        "Application",
        "server",
        "Oracle",
        "database",
        "Hibernate",
        "ORM",
        "framework",
        "functionalities",
        "Hibernates",
        "level",
        "EHCache",
        "schema",
        "NOSQL",
        "Mongo",
        "DB",
        "queries",
        "data",
        "collection",
        "systems",
        "scalability",
        "data",
        "volumes",
        "Automatic",
        "Sharding",
        "Mongoose",
        "Connector",
        "ODM",
        "framework",
        "Unstructured",
        "data",
        "MongoDB",
        "Mongoose",
        "Connector",
        "Configured",
        "Kibana",
        "data",
        "visualization",
        "plugin",
        "search",
        "Log",
        "stash",
        "bar",
        "line",
        "scatter",
        "plots",
        "pie",
        "charts",
        "maps",
        "top",
        "volumes",
        "data",
        "Configured",
        "Docker",
        "container",
        "service",
        "pipe",
        "line",
        "Jenkins",
        "CICD",
        "tool",
        "integrating",
        "application",
        "servers",
        "modules",
        "IBM",
        "MQ",
        "Apache",
        "Kafka",
        "Kafka",
        "adaptors",
        "application",
        "dependency",
        "Installed",
        "NoSQL",
        "database",
        "clusters",
        "AWS",
        "Virtual",
        "Cloud",
        "Network",
        "data",
        "cloud",
        "AWS",
        "solutions",
        "E2C",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "volumes",
        "EC2",
        "instances",
        "monitors",
        "alarms",
        "notifications",
        "EC2",
        "hosts",
        "Cloud",
        "Watch",
        "Developed",
        "Micro",
        "Services",
        "Spring",
        "Cloud",
        "Netflix",
        "OSS",
        "stack",
        "Load",
        "balancing",
        "Ribbon",
        "API",
        "Gateway",
        "Zuul",
        "Fault",
        "fa",
        "Kubernetes",
        "application",
        "deployment",
        "scaling",
        "management",
        "applications",
        "Hands",
        "experience",
        "Dump",
        "Analysis",
        "problem",
        "Thread",
        "race",
        "deadlock",
        "IO",
        "garbage",
        "collection",
        "OutOfMemoryError",
        "problems",
        "Configured",
        "New",
        "Relic",
        "performance",
        "application",
        "production",
        "supporton",
        "support",
        "production",
        "issues",
        "Environment",
        "Angular",
        "Node",
        "JS",
        "Express",
        "JS",
        "HTML5",
        "CSS3SASS",
        "Twitter",
        "Bootstrap40",
        "Site",
        "Minder",
        "Hibernate4x",
        "OIDC",
        "Eclipse",
        "Java",
        "EE",
        "IDE",
        "JIRA",
        "Apache",
        "Kafka",
        "IBM",
        "MQ",
        "Jenkins",
        "BabelLog4j",
        "Redis",
        "Mongo",
        "DB",
        "Mongoose",
        "Connector",
        "Oracle",
        "JBoss",
        "Kibana",
        "Elastic",
        "search",
        "Log",
        "stash",
        "NPM",
        "Web",
        "pack",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Docker",
        "Apache",
        "tomcat",
        "Selenium",
        "Spock",
        "Karma",
        "Jasmine",
        "Mocha",
        "Chai",
        "Mokito",
        "Junit",
        "Kubernetes",
        "New",
        "Relic",
        "Dump",
        "Analysis",
        "Netflix",
        "Zuul",
        "Eureka",
        "Swagger",
        "Maven30",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Epsilon",
        "Irving",
        "TX",
        "May",
        "June",
        "Description",
        "Epsilon",
        "solutions",
        "analytics",
        "data",
        "technology",
        "customers",
        "capabilities",
        "cloud",
        "Areas",
        "infrastructure",
        "development",
        "software",
        "applications",
        "business",
        "intelligence",
        "platform",
        "solutions",
        "wheelhouse",
        "role",
        "development",
        "applications",
        "quality",
        "trouble",
        "application",
        "issues",
        "Responsibilities",
        "user",
        "interface",
        "HTML5",
        "CSS3",
        "JSON",
        "AJAX",
        "React",
        "JS",
        "Type",
        "script",
        "Es6",
        "web",
        "design",
        "Bootstrap",
        "Used",
        "Bootstrap",
        "frontend",
        "framework",
        "web",
        "development",
        "Design",
        "website",
        "website",
        "content",
        "date",
        "Create",
        "edit",
        "sites",
        "design",
        "themes",
        "frontend",
        "development",
        "frameworks",
        "Bootstrap",
        "React",
        "JS",
        "redux",
        "architecture",
        "React",
        "components",
        "Redux",
        "Architecture",
        "MaterialUI",
        "React",
        "JS",
        "Virtual",
        "Dom",
        "React",
        "views",
        "components",
        "components",
        "custom",
        "HTML",
        "tags",
        "screens",
        "end",
        "Reactjs",
        "components",
        "NPM",
        "Node",
        "Package",
        "Manager",
        "redux",
        "library",
        "React",
        "JS",
        "components",
        "Forms",
        "Events",
        "Keys",
        "Router",
        "Animations",
        "Redux",
        "concept",
        "React",
        "UI",
        "Building",
        "components",
        "library",
        "Tree",
        "SlideView",
        "Table",
        "Grid",
        "application",
        "testability",
        "diagnostics",
        "bugs",
        "help",
        "REDUX",
        "Reducers",
        "architecture",
        "UI",
        "mockups",
        "party",
        "react",
        "libraries",
        "redux",
        "store",
        "data",
        "Developed",
        "ReactRedux",
        "code",
        "programming",
        "practices",
        "function",
        "testing",
        "Redux",
        "Alt",
        "JS",
        "architecture",
        "Oath",
        "authentication",
        "framework",
        "authorization",
        "server",
        "access",
        "resource",
        "resource",
        "server",
        "Oath",
        "simplifies",
        "communications",
        "client",
        "server",
        "content",
        "provider",
        "Spring",
        "Boot",
        "adapter",
        "applications",
        "rest",
        "API",
        "Developed",
        "REST",
        "service",
        "interface",
        "Spring",
        "Boot",
        "Agent",
        "Services",
        "API",
        "REST",
        "web",
        "services",
        "Spring",
        "Boot",
        "configuration",
        "application",
        "Micro",
        "services",
        "Spring",
        "Boot",
        "micro",
        "service",
        "patterns",
        "spring",
        "Boot",
        "properties",
        "actuators",
        "health",
        "checkers",
        "micro",
        "service",
        "implementations",
        "SocketIO",
        "bidirectional",
        "communication",
        "Spring",
        "APIs",
        "Swagger",
        "customers",
        "APIs",
        "spring",
        "Hibernate",
        "data",
        "access",
        "MySQL",
        "Database",
        "Unstructured",
        "data",
        "Cassandra",
        "DB",
        "Cassandra",
        "Connector",
        "connection",
        "Cassandra",
        "DB",
        "scripts",
        "queries",
        "test",
        "data",
        "SQL",
        "Apache",
        "Kafka",
        "Message",
        "Queues",
        "exchange",
        "information",
        "business",
        "applications",
        "Jenkins",
        "deployment",
        "integration",
        "build",
        "release",
        "process",
        "Node",
        "package",
        "manager",
        "NPM",
        "Grunt",
        "Babel",
        "Web",
        "pack",
        "application",
        "build",
        "deployment",
        "processes",
        "Mocha",
        "Chai",
        "JavaScript",
        "unit",
        "testing",
        "tools",
        "JavaScript",
        "pages",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "Microsoft",
        "Azure",
        "multitude",
        "applications",
        "Microsoft",
        "Azure",
        "Service",
        "highavailability",
        "fault",
        "tolerance",
        "GIT",
        "version",
        "code",
        "Git",
        "Hub",
        "MAVEN",
        "project",
        "dependency",
        "documentation",
        "POM",
        "project",
        "object",
        "model",
        "Environment",
        "HTML5",
        "CSS3",
        "JSON",
        "AJAX",
        "Bootstrap",
        "React",
        "JS",
        "Maven",
        "Spring",
        "Boot",
        "Spring",
        "IOC",
        "Oath",
        "Node",
        "JS",
        "Express",
        "JS",
        "NPM",
        "Grunt",
        "Babel",
        "Web",
        "Pack",
        "Docker",
        "AWS",
        "Apache",
        "Kafka",
        "Restful",
        "JAXRS",
        "Swagger",
        "GIT",
        "Jenkins",
        "MySQL",
        "SQL",
        "Cassandra",
        "DB",
        "Mocha",
        "Chai",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Connexions",
        "Loyality",
        "Richmond",
        "VA",
        "April",
        "May",
        "Project",
        "Description",
        "objective",
        "Company",
        "framework",
        "place",
        "organization",
        "business",
        "users",
        "customer",
        "configurations",
        "customer",
        "product",
        "catalog",
        "product",
        "details",
        "development",
        "team",
        "Responsibilities",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "application",
        "methodology",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "GUI",
        "interface",
        "Web",
        "pages",
        "HTML",
        "JQuery",
        "AJAX",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "JS",
        "expressions",
        "directives",
        "functionality",
        "UI",
        "JQuery",
        "DOM",
        "manipulation",
        "twoway",
        "controllers",
        "entity",
        "models",
        "custom",
        "Filters",
        "search",
        "experience",
        "filters",
        "data",
        "sets",
        "data",
        "currency",
        "strings",
        "UI",
        "Performed",
        "Verification",
        "validation",
        "process",
        "code",
        "use",
        "Protractor",
        "framework",
        "scenarios",
        "AngularJS",
        "applications",
        "JSON",
        "data",
        "server",
        "side",
        "business",
        "requirement",
        "SpringMVC",
        "Dependency",
        "Injection",
        "presentation",
        "business",
        "logic",
        "coupling",
        "layers",
        "business",
        "layer",
        "services",
        "components",
        "Spring",
        "IOC",
        "cross",
        "concerns",
        "Logging",
        "User",
        "Interface",
        "exceptions",
        "Transactions",
        "Spring",
        "AOP",
        "Integrated",
        "Spring",
        "DAO",
        "data",
        "access",
        "Hibernate",
        "Transaction",
        "Management",
        "data",
        "Hibernate",
        "mapping",
        "files",
        "business",
        "logic",
        "Object",
        "relationships",
        "spring",
        "hibernate",
        "components",
        "services",
        "Wrote",
        "PLSQL",
        "procedures",
        "packages",
        "Oracle",
        "database",
        "Spring",
        "JMS",
        "module",
        "lookup",
        "queues",
        "MDBs",
        "listeners",
        "Database",
        "Connectivity",
        "Hibernate",
        "mapping",
        "Spring",
        "ORM",
        "Oracle",
        "Spring",
        "Batch",
        "volumes",
        "records",
        "job",
        "processing",
        "statistics",
        "job",
        "restart",
        "transaction",
        "management",
        "resource",
        "management",
        "application",
        "Quartz",
        "Scheduler",
        "drools",
        "rules",
        "service",
        "J2EE",
        "stack",
        "environment",
        "application",
        "JBoss",
        "Spring",
        "Security",
        "Authentication",
        "Authorization",
        "application",
        "LINUX",
        "shell",
        "scripts",
        "user",
        "login",
        "information",
        "Log4J",
        "application",
        "logging",
        "notification",
        "tracing",
        "mechanisms",
        "Web",
        "service",
        "SOAP",
        "JAXWS",
        "frameworks",
        "extensibility",
        "form",
        "WS",
        "standards",
        "WSDL",
        "Web",
        "Services",
        "Description",
        "Language",
        "document",
        "client",
        "application",
        "web",
        "services",
        "SOAP",
        "web",
        "services",
        "JAXWS",
        "data",
        "applications",
        "WSDL",
        "generation",
        "service",
        "serverside",
        "Internet",
        "services",
        "JUnit",
        "Modified",
        "WSDL",
        "XSD",
        "schema",
        "web",
        "service",
        "client",
        "artifacts",
        "jaxws",
        "Jboss",
        "server",
        "RAD",
        "8x",
        "Maven",
        "tools",
        "Web",
        "applications",
        "Analysis",
        "Bug",
        "fix",
        "production",
        "problems",
        "defects",
        "enhancements",
        "JUNIT",
        "test",
        "cases",
        "unit",
        "testing",
        "Suites",
        "end",
        "end",
        "Selenium",
        "web",
        "driver",
        "automation",
        "scripts",
        "JIRA",
        "Project",
        "Stories",
        "Agile",
        "Methodology",
        "Tortoise",
        "SVN",
        "version",
        "files",
        "responsibility",
        "code",
        "merges",
        "branch",
        "trunk",
        "branch",
        "feature",
        "implementation",
        "Environment",
        "HTML",
        "JQuery",
        "Ajax",
        "Java",
        "script",
        "Angular",
        "JS",
        "JQuery",
        "Drools",
        "J2EE",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "AOP",
        "Spring",
        "DAO",
        "Spring",
        "Security",
        "Spring",
        "JMS",
        "Spring",
        "ORM",
        "MDB",
        "JUnit",
        "Jasmine",
        "Karma",
        "Protractor",
        "Hibernate",
        "SQL",
        "PLSQL",
        "Oracle",
        "JMS",
        "SOAP",
        "JAXWS",
        "Maven",
        "Jira",
        "Tortoise",
        "SVN",
        "Linux",
        "Log4J",
        "Selenium",
        "Spring",
        "Batch",
        "Quartz",
        "Scheduler",
        "Jr",
        "Java",
        "Developer",
        "Ness",
        "USA",
        "inc",
        "Chicago",
        "IL",
        "March",
        "April",
        "Description",
        "Andhra",
        "Bank",
        "publicsector",
        "bank",
        "PSB",
        "network",
        "branches",
        "extension",
        "satellite",
        "offices",
        "teller",
        "machines",
        "ATMs",
        "portal",
        "users",
        "loan",
        "amounts",
        "Responsibilities",
        "application",
        "J2EE",
        "design",
        "patterns",
        "technologies",
        "MVC",
        "architecture",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "development",
        "application",
        "J2EE",
        "design",
        "patterns",
        "Value",
        "Object",
        "Pattern",
        "Session",
        "Faade",
        "Singleton",
        "Factory",
        "DAO",
        "Stored",
        "Procedures",
        "Functions",
        "JDBC",
        "database",
        "Server",
        "database",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Views",
        "SQL",
        "database",
        "end",
        "interfaces",
        "PLSQL",
        "packages",
        "procedures",
        "functions",
        "PLSQL",
        "programs",
        "Cursor",
        "management",
        "Exception",
        "Handling",
        "PLSQL",
        "programs",
        "features",
        "spring",
        "Dependency",
        "Injection",
        "IOC",
        "Annotations",
        "Spring",
        "Integration",
        "Struts",
        "application",
        "Struts",
        "Framework",
        "ModelViewController",
        "MVC",
        "architecture",
        "persistence",
        "layer",
        "BATISORM",
        "user",
        "interfaces",
        "JSPs",
        "JSTL",
        "custom",
        "tags",
        "custom",
        "user",
        "interfaces",
        "Eclipse",
        "JSPs",
        "Servlets",
        "Struts",
        "IBM",
        "WEB",
        "SPHERE",
        "server",
        "development",
        "phase",
        "Spring",
        "Security",
        "framework",
        "setup",
        "authentication",
        "authorization",
        "application",
        "sign",
        "Implemented",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "web",
        "services",
        "SOAP",
        "JAXWS",
        "SOAP",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "development",
        "underwriting",
        "process",
        "communications",
        "side",
        "systems",
        "IBM",
        "MQ",
        "JMS",
        "Wrote",
        "Unit",
        "test",
        "cases",
        "J",
        "Unit",
        "Mockito",
        "framework",
        "ANT",
        "build",
        "deployment",
        "IBM",
        "WebSphere",
        "Java",
        "Multithreading",
        "part",
        "component",
        "thread",
        "user",
        "user",
        "Environment",
        "PLSQL",
        "Spring",
        "IOC",
        "Struts",
        "JSP",
        "JSTL",
        "Spring",
        "Security",
        "SOA",
        "SOAP",
        "JAXWS",
        "IBM",
        "MQ",
        "JMS",
        "J",
        "Unit",
        "Miskito",
        "ANT",
        "IBM",
        "WebSphere",
        "J2EE",
        "Education",
        "Bachelors",
        "Skills",
        "ECLIPSE",
        "EJB",
        "J2EE",
        "HIBERNATE"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:11:12.487724",
    "resume_data": "Java Full Stack Developer span lJavaspan Full Stack span lDeveloperspan Java Full Stack Developer Zions Bancorporation Fremont CA Around 9 years of full stack development experience in all phases of Software Development Life Cycle SDLC which includes Analysis Design Development Implementation and Testing of web based enterprise business applications using the JAVAJ2EE technologies Experience in developing Web Applications with various Open Source frameworks JSF 12 Spring Framework 203040 Web Flow Jakarta Struts Framework 111220 Struts Validation and Tiles Frameworks Extensive knowledge on the Spring Modules like Spring IOC and Dependency Injection Spring MVC Spring Batch Spring Web Flow Spring Security Authentication and Authorization Spring AOP for Code Modularity and Spring Boot Developed and deployed Micro Services based applications using Spring Boot along with Spring Rest and Node Js with Express and Hapi Implemented exception handling in Java Spring boot for REST API by making use of Exception Handler and Controller Advice annotations Well experienced on implementing SOA Service Oriented Architecture using Spring REST to create REST resources that include several components like Jersey Framework spring Boot JAXRS and used WADL for documenting REST APIS Worked on SOAP protocol using JAX WS and integrated Apache CXF AXIS2 for WSRemote Messaging WS Security WS Policy and other specifications and automated documentation using Swagger and WSDL Experienced in configuring and deploying applications on different servers such as Apache Tomcat Web logic IBM WebSphere JBoss Expertise to interact with relational databases using ORM frameworks like Hibernate Spring Data JPA IBatis MyBatis Java Persistence API JPA Hibernates second level cache Ehcache Have good knowledge on different databases like PostgreSQL MySQL DB2 Oracle 13c11g Microsoft SQL Server NoSQL DB Raven DB Mongo DB and Cassandra Couch DB Redis Dynamo DB and good experience in writing stored procedures functions and triggers using PLSQL in JDBC ODBC and in WebLogic server Experience in writing stored procedures triggers views and functions using PLSQL scripts and embedded DDL and DML statements in PLSQL blocks Experience in Developing User Interface UI Rich Web Applications using Front EndUser Interface UI Technologies like HTML45 XHTML DHTML CSS23using SASS and LESS Type Script Bootstrap and AJAX by managing all facets and pipelines of application Expertise in implementing the features of ES6 like arrows modules block scoping promises and enhanced object literals Experienced in working with MVVM design flow using clientside JavaScript framework Angular 2x4 X50 with NGRX Expertise in using shadow DOM which is a feature of Angular 5 to encapsulate visual behavior Good knowledge in providing support for passing messages between publishers and subscribers using observables as a part of Angular 5 Experience with features of Angular 4 like Ng Modules which configure the injector and the compiler and help organize related things together Proficient with Angular JS Backbone JS Ember JS Knockout JS Ext JS for customize front end app development and to achieve MVC design flow Well experienced in view rendering using jQuery React JS Handlebar JS and implementing React JS with Redux and Flux patterns to attain MVC functionality Well experienced in developing Dynamic Single Page ApplicationSPA using MEAN MongoDB Express Angular Node full stack development tool Kit Good amount of hands on Experience in developing serverside JavaScript frameworks using Node JS Hapi JS Express JS to build event driven nonblocking io model web applications Experience in installing dependencies using Package Managers like NPM BOWER and running automated task using Gulp Grunt and web pack for bundling minification loading images configuration Experience on UI testing with Karma Jasmine Protractor for Angular JS and Mocha Chai for React JS Unit tested web services using Junit Mockito Easy mock Spring Junit Runner Spock Test NG and hence achieved the goals of Test Driven Development TDD Well experienced in using various AWS Amazon Web Services Iaas Infrastructure As a Service Components like EC2 for running applications on virtual machines S3 and Glacier for storing and long term back up of data EBS for persistent block level storage Elastic Cache Dynamo DB SQS for message queueing RDS for setting relational database in cloud and Lambda for server less program functions Expertise in using Microsoft Azure which is cloud computing service for building testing deploying and managing applications and services through a global network of Microsoft managed data centers Good Knowledge and Experience on implementing Spring Cloud Netflix OSS Stack for micro Services deployment Zuul for API Gateway for routing Hystix Circuit Breaker for latency and fault tolerance and Eureka for service registration Experience in applying JMS Java Messaging Service for reliable information exchange across Java applications using Apache Kafka Rabbit MQ Active MQ and IBM MQ to communicate from Client to Server Good knowledge of Splunk architecture and various components Expert in Splunk Development Configuration and Administration and used Kibana to view using Elastic search ELK Hands on experience in implementation of PCF Pivotal Cloud Foundry Paas Platform as a Service services such as Pivotal Application Service Pivotal Container Service and Pivotal Functional Service to continuously deliver applications on to the cloud Implemented security functionality OAuth 20 Spring security SSL and site minder SSO secure authentication with LDAP OAuth2 for generating tokens in the application using Spring Security JWT for producing tokens Well experienced with build tools like Gradle Maven and ANT Implemented Docker container service build pipe line Jenkins Bamboo and GoCDGo Continuous Delivery to achieve Continuous Integration and Continuous Deployment that can run on the cloud or onpremises Hands on experience in managing this Docker Container using Kubernetes with zero downtime deployment Used Kubernetes Linux container for deploying and scaling containerized applications Good practical experience with Javabased logging utility ie log4J Good knowledge on Drools Rule Engines which corresponds to validating BRMS Business Rules Management System Experience in Java Thread Dump Analysis and familiar with thread dump techniques Have knowledge on Application monitoring tools like New Relic and Dyna Trace Strong Knowledge on automated javabased integration testing and behavioral testing of the applications using Selenium and Cucumber respectively Good experience in using Software development methodologies like AgileScrum Water Fall and Rational Application Development methodologies Experience in using Mule soft which is light weight Java based Enterprise Service Bus ESB which allows connecting applications together quickly and easily enabling them to exchange data Experience in using open source framework Apache Camel which for messageoriented middleware with a rulebased routing and mediation engine that provides a Java objectbased implementation of the Enterprise Integration Patterns EIP using an application programming interface to configure routing and mediation rules Expertise in working with JAVA8 features like Functional Interfaces Stream API Time API Transaction Management Exception Handling Collection API and Lambda Expressions Authorized to work in the US for any employer Work Experience Java Full Stack Developer Zions Bancorporation Salt Lake City UT July 2018 to Present Description This is a data migration project from IBM CLM tool to Microsoft Azure DevOps As part of migration Zions Service Framework was developed to support the ALM migration and developing micro service extensions to extract data from different tools Zions Bank has number of applications running with IBM CLM tool as part of this framework we developing different individual services to migrate data from Future Core JIRA RTC RQM DNG Test Link and also maintaining all micro services and smooth migration of data from IBM CLM to Microsoft Azure DevOps Responsibilities Involved client side designing and validation using HTML Angular 6 CSS JavaScript JSP Updated pages using HTML CSS in Angular JS framework and created Responsive Web Pages using Bootstrap framework Developed screens using HTML CSS JavaScript JQuery and Ajax UX design and implementation using HTML CSS Webpack Redux Involved in putting the entries to external XML files whenever required Used Angular JS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server Developed Web API using NodeJS and hosted on multiple load balanced API instances Involved in building stable angular components and standalone functions to be added to any future pages Involved in implementing the complete application in the inbuild MVC Architecture with Angular 6 Used Javascript for the providing dynamic functionality and to create a highly responsive interface Involved in the design of the application using J2EE which employs ModelViewController MVC design pattern Single web page applications are coded using JavaScript client framework as well as restful API developments in Spring restful API and Spring boot Used JSON to load data into JQUERY data grid and also as a response type in REST services Created and injected Spring services Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes Involved in developing code for obtaining bean references in spring framework using Dependency Injection DI or Inversion of Control IOC using annotations Implemented Singleton Service Locator design patterns in MVC framework and developed command delegate model action script classes to interact with the backend Worked on the Multithreading Concepts Using executor frame work for file parsing the data or scheduling the Data into the application from the vendor services which are in both text and Xml into Json Used Spring Security for Authentication and authorization extensively Developed backend web services using Node JS and custom components for the web applications using angular 6 Experience working on Bootstrap Angularjs Backbonejs Knockoutjs Responsive design and Media Queries Implementing or exposing the Micro services based on RESTful API utilizing Spring MVC Jersey and Apache CXF Using Handlebar Js we can add templates to your HTML page that will be parsed and interpolated with the values from the data you passed to the Handlebarsjs function Configured the xml files for Hibernate and applied its Object Relational Mapping ORM to enable the data transactions between POJO and Oracle Database using caching on Session Factory as well as caching on query Involved in writing and modifying Procedure Queries Views and Triggers Used Hibernate Transaction Management Hibernate Batch Transactions and cache concepts Used Maven for dependencies and configuration management Developed Mean stack from Scratch including Mongo DB and Express JS server development Used Mongoose connector to connect Mongo DB through Express framework Performed configuration deployment and support of cloud services including Amazon Web Services AWS NoSQL database design and implementation with Cassandra and MongoDB Involved in writing MultiThreading Synchronization concepts in Java Programs Vuejs was used to fetch data from server using axios prepare and transform data to display in the forms validate userentered data and then post data Implemented Continuous Integration and Continuous Development CICD process using Jenkins Setup frontend application using Web pack NPM and Babel Used Jenkins for continuous integration and worked on Performance improvements for the application Used Docker for managing and running applications within containers Worked with Jasmine and Karma for performing unit testing of Angular JavaScript Writing test cases using JUnit Involved in Test driven software development by carrying out test plans Used Splunk for Log management monitoring alerts log analysis such as how many services consumed per hour based on the response methods response time analysis Involved in fixing existing bugs and also making modifications to already existing code Worked on Selenium for automating the test cases Implement technologies to improve development process using NPM and BOWER Used Grunt Task Runner for packaging Involved in taking the Clients requirement uptodate and working on them accordingly Environment HTML CSS Angular 6 Java Script JQuery Ajax JSON Backbone JS Bootstrap XML Spring MVC Spring IOC DAO Hibernate Multithreading JAXRS Apache CXF Jersey Apache Kafka Node JS Mongo DB Express JS AWS Jenkins Docker Jasmine and Karma JUnit Easy Mock Selenium NPM Bower Grunt Java Full Stack Developer Volkswagen group of America Auburn Hills MI June 2016 to July 2018 Description At Volkswagen Group is to develop innovations and technologies for future generations of cars and to transfer technologies from many industries and research institutions into the automotive domain My role in this position will be responsible for software infrastructure to bring new connected functionality and interfaces to the automotive market And develop prototype implementations and interfaces to enable future connected vehicle applications potentially developing system requirements and specifications that will influence future production systems Responsibilities The application is built Micro Service Oriented Architecture using MEAN 4 Mongo Express Angular and Node stack and developed Single Page Applications SPA Designed and developed efficient user Interaction screens using HTML5 CSS3SASS and Twitter Bootstrap CSS framework and media queries to create responsive web pages Used Web Pack module bundler for compilation of SAAS files into CSS and for monitoring the application Developed multiple Angular 40 components which are compatible with latest versions of typescript angular CLI Configured various routes directives for grid pagination conditional validations templating dynamic loading lazy loading Shadow DOM ngrx store Developed angular views to hook up models to the DOM and synchronize data with server as a SPA Builtin AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application Implemented Node JS as a serverside proxy for an eventdriven nonblocking IO model to make the application lightweight and efficient Developing RESTful web services using Node JS and Express JS and used Node JS server to interact with the Rest services and database hosted on multiple load balanced cloud instances Implemented services call from Angular at client to Express JS at Node JS server Utilized the inbuilt NPM package manager to configure the right versions of the packages and to achieve dependency management Configured Express JS node http framework to set up middlewares to respond to HTTP requests and used its frontend tooling like web packs starter packs boiler plates efficiently Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the spring bean profiling Implemented a robust RESTful web service using Spring Boot to modularize code and automated documentation to the web services in the application is provided by Swagger Unit testing of web services is done using Spock framework by extending Groovy syntax Configured Redis Remote Dictionary Server with node server for caching the responses via cat box Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application Testing for Node JS is done using Mocha and chai and for spring boot used Mokito junit mock mvc and thereby achieving Test Driven Development TDD Worked on ECMA 6 features as ES6 features implemented in Googles V8 which is used by Node JS Configured OIDC Open ID Connect on top of OAUTH 20 authentication and authorization framework to provide the security to rest web services Implemented Single Sign On and policy based authentication using Site Minder security framework Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used the functionalities of Hibernates second level EHCache Created dynamic schema design through NOSQL Mongo DB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding Implemented Mongoose Connector as our ODM framework Unstructured data was handled using MongoDB and used Mongoose Connector for connecting to database Configured Kibana data visualization plugin for Elastic search Log stash and created bar line and scatter plots or pie charts and maps on top of large volumes of data Configured Docker container service and build pipe line Jenkins CICD tool for continuous integrating and deploying application on servers Responsible for migrating existing modules in IBM MQ to Apache Kafka and worked on creating Kafka adaptors for decoupling the application dependency Installed configured and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud Implemented AWS solutions using E2C S3 RDS EBS Elastic Load Balancer Auto scaling groups Optimized volumes and EC2 instances and created monitors alarms and notifications for EC2 hosts using Cloud Watch Developed Micro Services using Spring Cloud Netflix OSS stack to address Load balancing using Ribbon API Gateway using Zuul Fault fa Kubernetes is configured in the application for automating deployment scaling and management of containerized applications Hands on experience on Dump Analysis and thread Dump common problem patterns Thread race deadlock hanging IO calls garbage collection OutOfMemoryError problems infinite looping etc Configured New Relic to measure and monitor the performance of application Provided production supporton call support to fix production issues after the deployment Environment Angular 5040 Node JS Express JS HTML5 CSS3SASS Twitter Bootstrap40 Site Minder Hibernate4x OAuth20 OIDC Eclipse Java EE IDE JIRA Apache Kafka IBM MQ Jenkins BabelLog4j Redis Mongo DB Mongoose Connector Oracle JBoss Kibana Elastic search Log stash NPM Web pack EC2 S3 RDS EBS Elastic Load Balancer Docker Apache tomcat Selenium Spock Karma Jasmine Mocha Chai Mokito Junit mock mvc Kubernetes New Relic Dump Analysis Netflix Zuul Eureka Swagger Maven30 Sr Java Full Stack Developer Epsilon Irving TX May 2014 to June 2016 Description At Epsilon provides unique solutions that strategically combine analytics rich data and technology It is committed to help their customers embrace the vast capabilities that the cloud has to offer Areas such as infrastructure development software applications business intelligence and platform solutions are all within our wheelhouse My role is in development of various applications and maintain quality for same and perform trouble shot to resolve all application issues Responsibilities Involved in developing user interface with HTML5 CSS3 SAAS JSON AJAX React JS Type script Es6 Implemented responsive web design using Bootstrap Used Bootstrap frontend framework for faster and easier web development Design website and maintain the website content up to date Create edit and maintain sites implementing responsive design themes using frontend development frameworks including Bootstrap Experienced in React JS and working with redux architecture Designed modular and reusable React components using Redux Architecture and MaterialUI Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Implemented various screens for the front end using Reactjs and used various predefined components from NPM Node Package Manager and redux library Worked in using React JS components Forms Events Keys Router Animations and Redux concept Responsible for React UI and architecture Building components library including Tree SlideView and Table Grid Implemented application testability and diagnostics and fixing bugs with the help of REDUX Reducers architecture Responsible for implementing UI mockups integrating third party react libraries and handlingcreating redux store data Developed ReactRedux code using functional programming best practices to enable efficient pure function testing Experienced in working with Redux and Alt JS architecture Used Oath 2 which is a lightweight authentication framework with a central authorization server and generates an access token to access a protected resource on a resource server Oath 2 simplifies all the communications between the client server and content provider Designed and developed Spring Boot adapter applications using rest API Developed REST full service interface using Spring Boot to the underlying Agent Services API and Implemented REST full web services Used Spring Boot which removes boilerplate configuration and makes application faster Developed some standalone Micro services using Spring Boot micro service architectural patterns Used spring Boot properties like actuators and health checkers to enhance micro service implementations Worked on SocketIO which enables the realtime bidirectional eventbased communication Documented Spring Restful APIs with Swagger to help customers better understand APIs Integrated spring with Hibernate for data access from MySQL Database Unstructured data was handled using Cassandra DB and used Cassandra Connector for connection Composed and executed Cassandra DB scripts and queries to fetch and test data from No SQL databases Used Apache Kafka Message Queues for reliable and asynchronous exchange of vital information between multiple business applications Used Jenkins for continuous deployment and integration of the build and release process Worked with the Node package manager NPM along with Grunt Experienced in working with Babel and Web pack in application build and deployment processes Extensively used Mocha and Chai JavaScript unit testing tools for testing JavaScript pages Worked on creation of custom Docker container images tagging and pushing the images Designed configured and deployed Microsoft Azure for a multitude of applications utilizing the Microsoft Azure Service focusing on highavailability fault tolerance and autoscaling Extensively used GIT for version controlling and regularly pushed the code to Git Hub Used MAVEN for building the project dependency and documentation which is based on POM project object model Environment HTML5 CSS3 SAAS JSON AJAX Bootstrap React JS Maven Spring Boot Spring IOC Oath 2 Node JS Express JS NPM Grunt Babel Web Pack Docker AWS Apache Kafka Restful JAXRS Swagger GIT Jenkins MySQL No SQL Cassandra DB Mocha Chai Java Full Stack Developer Connexions Loyality Richmond VA April 2012 to May 2014 Project Description The objective of Company is to have a framework in place for the organization which allows the business users to add new customer configurations customer product catalog excluded product details list etc without depending on the development team Responsibilities Involved in SDLC requirements gathering analysis design development and testing of application developed using agile methodology for building Service Oriented Architecture SOA Created userfriendly GUI interface and Web pages using HTML JQuery and AJAX Used AngularJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications SPA Worked on Angular JS expressions and builtin directives to render functionality to the UI and JQuery for DOM manipulation and twoway binding Implemented AngularJS controllers to update entity models and used custom AngularJS Filters to provide better search experience Implemented various AngularJS filters against data sets to filter and formatted data currency strings rendered in the UI Performed Verification and validation process for the code written by making use of Protractor framework by testing across various scenarios of the AngularJS applications Extensively used JSON to parse the data from server side to satisfy the business requirement Used SpringMVC and Dependency Injection for handling presentation and business logic To maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging User Interface exceptions Transactions using Spring AOP Integrated Spring DAO for data access using Hibernate and handled Transaction Management using the provided data Responsible for designing Hibernate mapping files based on business logic and Object relationships Integrated spring and hibernate together and worked on developing backend components and services Wrote PLSQL queries stored procedures triggers packages on Oracle database Used Spring JMS module for lookup for the queues and MDBs for the listeners Established Database Connectivity using Hibernate OR mapping with Spring ORM for Oracle Spring Batch was used for processing large volumes of records including loggingtracing job processing statistics job restart skip transaction management and resource management in the application using Quartz Scheduler Deployed the drools rules as a service in J2EE stack environment and packaged and deployed the application in JBoss Used Spring Security for Authentication and Authorization of the application Written LINUX shell scripts to identify user login information Used Log4J for application logging and notification tracing mechanisms Implemented Web service calls using SOAP JAXWS frameworks to provide significant prebuild extensibility in the form of the WS standards Created WSDL Web Services Description Language document for client application web services Developed SOAP web services JAXWS for sending and getting data from different applications WSDL generation and exposed the service at serverside over the Internet and tested the services using JUnit Modified WSDL and XSD schema while generating web service client artifacts by using jaxws in Jboss server and RAD 8x Used Maven tools for building and deploying the Web applications Did Analysis and Bug fix of the production problems and defects along with enhancements Implemented JUNIT test cases for unit testing and Suites for end to end testing Used Selenium web driver to run automation scripts Used JIRA for tracking the Project Stories in Agile Methodology Used Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts Environment HTML JQuery Ajax Java script Angular JS JQuery Drools J2EE Spring MVC Spring IOC Spring AOP Spring DAO Spring Security Spring JMS Spring ORM MDB JUnit Jasmine Karma Protractor Hibernate SQL PLSQL Oracle JMS SOAP JAXWS Maven Jira Tortoise SVN Linux Log4J Selenium Spring Batch Quartz Scheduler Jr Java Developer Ness USA inc Chicago IL March 2010 to April 2012 Description Andhra Bank is a mediumsized publicsector bank PSB of with a network of 2803 branches 4 extension counters 38 satellite offices and 3636 automated teller machines ATMs I worked to build a portal through which users can check their pending loan amounts and due dates Responsibilities The application is designed using J2EE design patterns and technologies based on MVC architecture Involved in various phases of Software Development Life Cycle SDLC and Agile methodology is used for development of the application Used J2EE design patterns like Value Object Pattern Session Faade Singleton Factory and DAO Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Implemented persistence layer with I BATISORM Involved in designing the user interfaces using JSPs Developed JSTL custom tags to support custom user interfaces Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Implemented Service Oriented Architecture SOA and web services using SOAP with JAXWS Used SOAP for transmission of large blocks of XML data over HTTP Involved in the development of underwriting process which involves communications without side systems using IBM MQ JMS Wrote Unit test cases using J Unit Mockito framework Used ANT for automated build and deployment on IBM WebSphere Handled Java Multithreading part in backend component one thread will be running for each user which serves that user Environment Db2 PLSQL Spring IOC Struts i Baits JSP JSTL Spring Security SOA SOAP JAXWS IBM MQ JMS J Unit Miskito ANT IBM WebSphere J2EE Education Bachelors Skills ECLIPSE EJB J2EE JAVA HIBERNATE",
    "unique_id": "e1486a58-3f67-41f1-beb4-84634feb9fa4"
}