{
    "clean_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Deutsche Bank Cary NC Around 9 years of IT experience in Design Development Support and Implementation of Web based applications using JAVAJ2EE Technologies Experienced in implementing Enterprise Application with each phase of software Development Life Cycle SDLC including Requirement gathering Analysis Design Reviews Coding Unit and Integration Testing Experience in developing Software applications using Core JAVAJ2EEand midlevel technologies such as Swing AWT Servlets JSP JSF JSTL JPA Filters EJB JMS and Web Services JAXRS and JAXWS Design Patterns Proficient in core Java concepts such as Collections Generics Multithreading and Serialization Expertise in all Spring Modules such as Spring Core Spring MVC Dependency Injection Spring AOP Spring Securty Spring JDBC Spring ORM Spring DAO and Spring Security Experienced in Struts framework Experience in Database persistence layer like Hibernate 4230 Experience with Java 18and Lambda Expression and Stream Functional methods Experience on a cloud platform and experience with Amazon S3 EC2 ElasticSearch VPC SQS RDS EBS SQS and LAMBDA Experience in a Monolithic web application as well as Microservices web applications and AWS cloud Experience on Containerization using Docker to achieve high scalability and high availability Experienced on Frontend technologies such as HTML CSS3 JavaScript Expertise in using SpringBoot to develop Restful controllers Service DAO classes and also Filter classes Security Working knowledge of PLSQL and databases like DB2 MySQL Server MS SQL Oracle DB and No SQL databases Apache Cassandra Experience in coding implementation unit testing and Performance Testing of various J2EE related projects Working Knowledge on Shell Scripting Experience in using version control systems like SVN and GIT Experience in bug tracking tools like JIRA Experience with TDD Test Driven Development using JUnit and Knowledge on BDD Behavior Driven Development Cucumber Experience in XML and related technologies Good working knowledge of Jenkins for CI Continuous Integration Maven for project builddeployment Log4j for logging and JUnit for the unit and integration testing Knowledge on Pivotal Gemfire Experience with IBM MQ and knowledge on Kafka for the distributed messaging systems Design and development of webbased applications using different Web and Application Servers such as Apache Tomcat WebLogic WebSphere JBoss Handson working experience with IDE tools like Eclipse Net Beans Spring Tool Suit and IntelliJ IDEA Authorized to work in the US for any employer Work Experience Java Developer Deutsche Bank Cary NC October 2017 to Present Deutsche Bank is a German global banking and financial services company The current project Galileo is on handling the different types of payments across 35 countries Most of the code is already existed for some countries So when we are implementing the same code to other new countries the existed source code is changed according to the financial rules specified to those countries and if those countries dont make particular type of payments then related channels or jobs Queues are removed from the code Responsibilities Requirement gathering from the Functional Analysts Business owners and analyze the business logic to be implemented Develop and add extra features to the application using EJB work flow Implement the code using various advance java concepts including Servlets JSP JNDI Web Services SOAP Working on ScrumAgile methodology using JIRA to manage the Sprint ActivitiesBacklogs Working with different Object Oriented Concepts like Inheritance Multithreading Exceptional Handling Working with various Design patterns like Singleton Factory Design patterns using EJB work flow implementation Working with Ibatis ORM tool to connect the java code to Database Oracle Working on PLSQL especially modifying or implementing the existed stored procedures Functions and Indexes Working with J2SE concepts includes Datastructures algorithms and Collections frameworkList MapSet Working with Web Logic12c Server in Deployment and Testing for the results Connect to the web logic using Linux commands Putty WinScp and perform the deployment actions Spring framework is implemented especially in configuring the beans and injecting the beans Dependency Injection Business rules of the banks are implemented using Drools Adding or deleting Queues from from the IBM MQ based on the requirement and country financial rules Working with various testing tools which are developed particularly for this project Code is controlled through SVN Multiple Databases are handled using Different DataSources in the project Used SOAP Web Services for secure extraction of client related data from database and to connect the application from UI to Java Backend Working on JSPs to map the requests to related java controller class Developed JasperReports based on business requirements and Prototyped PDF JasperReportsusing jasper assistant Team City is implemented in the project for the integration of the project components The application was tracked and logged using Log4J framework Writing new Unit tests or modifying the existed JUnit test cases and implement the Stub support using Mockitoframework Along with unit test manual tests are also performed on the application by creating scenarios Environment Java 18 J2EE Servlets JSP EJB JSP Maven IBM MQ Web Logic 12c Drools Team City JUnit Mockito HTML SOAP OraclePLSQL SharePoint Confluence and JIRA JNDI Ibatis Linux Spring Jasper Reports Java Developer Freddie Mac McLean VA January 2017 to September 2017 Freddie Mac is a Federal Home Loan Mortgage Corporation Freddie Mac has been developing the portal in a way that it provides the enough information to all kinds of users including Home Sellers and Buyers Real estate professionals Contractors Retail investors and Direct clients The portal is also available for the parties and customers to check their corresponding credit score equity and debt Responsibilities Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Used Spring Boot for developing individual component Micro services Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run underDockerhost Writing the code using Lambda Expression andStreamAPIon JDK 8 Java 18 Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream MultiThread Pooling is implemented by Executors Frame work ExcutorService Interface Synchronized threads are developed for the thread SafetyGarbage Collection is also implemented using daemon threads Worked on implementing and consuming RESTful web services using JAXRS annotations Developed OAuth2 Security on RESTful web services for the log in page and for the Payment Process Implemented RESTful services to consume as well as produce JSON and XML web services in the application Developed Clientside code is integrated with REST and processed the JSON response Worked with Hibernate framework to interact with the backend servers Developed POJOs for the Spring Batch to process large volumes of records and Worked on Spring XD Worked on CQL Cassandra Query Language using Cassandra Cluster Model Used Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Involved in ETL functions from a relational database to Cassandra Applied Object Oriented Programming OOP concepts including UML use cases class diagrams and interaction diagrams Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Java and Spring routing rules are Specified in XML to define for the Apache Camel Spring Security was implemented in the project Interacted with UI team in developing GUI using HTML5 JavaScript JSP JSON Presentation layer was developed using JSP and JavaScript Setting up the JENKINS continuous build path for Continuous Integration Worked with DevOps team in continuous integration Worked with the JIRA tool for Quality Center bug tracking Involved in the planning process of iterations under the Agile Scrum methodology Involved in Unit Integration and Performance Testing for the new enhancements Test cases were created using TestNG and previous test cases were transformed from Junit to TestNG Environment Java 18 J2EE UML Spring BOOT Spring MVC Spring Security Spring Batch JSP GemFire Apache Camel JMS AJAX Angular JS JSON Servlet JENKINS TestNG Agile Scrum JIRA Tomcat Application Server Docker XML HQL Hibernate IntelliJ IDEA Core Java Multithreading Rest API JAXRS Web services HTML5 JavaScript CSS3 Oracle database ETL Apache Cassandra GIT OOD Unix Linux Shell Scripting Java Developer BCBS Insurance San Francisco CA April 2015 to December 2016 Developed an online application that enables clients to access review and update their products purchased from BCBS Insurance The primary users of this application are BCBS insurance policy owners agents and customer service representatives The application provides an integrated environment for account management policy changesrenewals monthly premium dues alerts claims processing status Responsibilities Designed and developed Online Application using Spring MVC Framework and Spring Core Developed and enhanced the application using Java and J2EE Servlets JSP JDBC JNDI EJB Web Services RESTful Web Services HTML JSON XML Maven Log4J and MySQL DB The project was developed agile software development methodology Developed the code using Spring MVC dispatcher servlet to transfer on to different Controller classes components Wrote RestController with respect to RESTfulstandards in Spring MVC to connect model with view Tested Rest APIs in Spring Controller at the backend for JSON data using Postman Involved in working with J2EE Design Patterns Singleton Session Faade and DAO Involved in Object Modelling Techniques with Manager and clients Involved in creating Use Cases Class Diagrams and Sequence Diagrams using UML Worked with DevOps team in deploying the project on AWS Developed API for using AWS Lambda to manage the servers and run the code in AWS Designed configured and managed publicprivate cloud infrastructures using Amazon Web Services AWS which includes VPC EC2 ElasticSearch S3 Cloud Front ELB and Elastic Beanstalk Worked on Hibernate ORM Created Hibernate XML files and Java class files to map the object relation mappings Worked on Hibernate caching using Ehcache Used Hibernate Query Language HQL and Custom Queries to query data from Oracle database in DAO Used several Hibernate techniques such as lazy loading batch fetching and eager fetching to improve application performance Used CRUD operations using JPA query language Worked on messaging frameworks like Kafka tuning optimization meeting nonfunctional requirements and SLA mentioned latencies Migrated messaging system from JMS to Kafka Developed and maintained the Application Context files for the service layer using Spring Framework Used SOAPWSDL 20 Web Services for secure extraction of client related data from database Used RESTful in conjunction with Ajax calls using JAXRS and Jersey MultiThreading and Caching were used to improve the performance and user experience Implemented Marshalling and Unmarshalling using JAXB Developed JSPs for the presentation layer AJAX calls implemented for form validation and other interactive features and created HTML navigation menu that is role based menu items changes dynamically derived from the database in the form of XML Involved in Performance tuning of the application and documentation of troubleshooting Developed JasperReports based on business requirements and Prototyped PDF JasperReportsusing jasper assistant Involved in CICD using Jenkins and uDeploy Used SVN for version control Created and implemented JBosscentric architecture for entire environment and Created automated deployment scrips for JBossservers Created multihomed JBoss instances multiple clients on a single server to maximize hardware resources over a VM Integrated JBossmessaging into JBoss423 and upgraded large multinational clients to messaging Applied security practices and fixes to JBoss servers and Apache to be complaint with PCI regulations The application was logged using Log4J and exceptions were logged into the database using JDBC Used JUnit for testing the entire application rectified performance bottlenecks and eliminated critical bugs Created numerous test cases using JUnit framework and Mockito for testing modules Environment Java 17 J2EE JSP JDBC JNDI EJB UML Spring 30 Spring MVCAWS JasperReports OMT Apache Kafka HTML5Hibernate 4x Ehcache MongoDB JSP AJAX Oracle 11g Eclipse Maven Maven Script SVN Jenkins uDeploy XML 1x JAXB 2x Log4J JUnit Mockito JBoss SOAP Web Services Restful Postman WSDL 20 JAXRS JAXWS Jr Java Developer Ford Dearborn MI October 2013 to March 2015 RCS is the Retail Contract System which is used by business people in the Fordowned showrooms and other FS dealers who sell and lease cars to customers RCS is the major application where all the contract and leasing terms are calculated and printed out to customers before the final deal on a vehicle is made Both new and used vehicle taxes and description would be available for dealers and the information on the existing customers would be available Responsibilities Involved in the deployment of full Software Development Life Cycle SDLC of the tracking systems Requirement gathering Conceptual design Analysis Detail design Development System Testing and User Acceptance Used Agile methodology and effectively took part in Scrum gatherings to deliver quality deliverables within time Designed and developed all the user interfaces using JSP Servlets and Spring framework Developed the DAO layer using Hibernate and used the caching system for realtime performance Designed and developed various modules of the application with J2EE design architecture Worked on object oriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Implemented JMS API for the communication Used Spring IOC for dependency injection and Spring AOP for crosscutting concerns like logging security transaction management Developed the application for a new Spring batch based system to process transactions Involved in creating and extracting data from database using HQL queries PLSQL Stored procedures triggers and packages on Oracle database using Toad Software Developed Web Service provider methods bottomup approach using WSDL and RESTfulfor transferring data between the Applications Used AJAX for developing asynchronous web applications on the client side Developed action classes and action Forms performed validations using commons custom validator and Struts clientside JavaScript validation Used Shell Scripting for file manipulation program execution Used JDBC for accessing database DB2 to track all credit aspects of accounts which include financial review details security held actuarial exposure data and receivables Wrote JSP Servlets classes to generate dynamic HTML pages Adopted Spring framework for the development of the project Involved in fixing bugs and unit testing with test cases usingJUnit framework Used Maven for create the project archetype and build the interface modules for customizing WAR and EAR Files Used Spring ORM module for integration with Hibernate for persistence layer Developed Session Beans and Entity Beans JPA Involved in writing Hibernate Query Language HQL for persistence layer Used Splunk for application logging and debugging Used GitHub as Distributed version control system and branching for creating a new feature and making bug fixes Used Spring ORM module for integration with Hibernate for persistence layer Environment Java 17 JSP JMS UML HTML AJAX Servlets Spring Batch Hibernate EJB Session Beans IBM DB2 SOAP based Web Services Splunk WebSphere JNDI Maven GitHub JPA Oracle Windows XP UNIX Shell Scripting Eclipse Java Developer Model N June 2011 to August 2013 Model N Technology develops transparent relationships with clients and partners and provides them with custom innovative software solutions for banking manufacturing medical retail wholesale transportation etc Responsibilities Involved in understanding requirements Software Requirements Specification SRS and translating them into Detailed Function Specification document DFS for IDS Worked with technologies including SpringSecurity DAO AOP JPA Restful Web services Servlets JSP JSON XML and HTML Developed presentation layer using Struts framework and MVC design paradigm Extensive use of Struts Framework for Controller components and view components Involved in writing the exception and validation classes using Struts validation rules Used JPA Entity Manager and Spring JDBC templates for DAO layer Developed the application using Eclipse IDE and spring tool suite Architected Designed and implemented few of the key REST APIs which facilitated a huge data flow Designed and implemented the database startup scripts Used SAX DOM Parsers and XPath for parsing XML Identify the older modules code stack that can be reusable with minimal changes and define the interfaces that allow the communication with those modules Used Git Bitbucket for Design Development of Project Build System and version control Worked on preparing test cases and executing unit testing and Integration testing Involved in developing Presentation layer using JavaScript Used GWT to maintain JavaScript Applications Used ANT to build run and create JARs and WAR files Worked on JasperReport to report in various forms and used iReporteditor for the design of the Jasper template Worked on NetBeans IDE and Web Logic Server 11gR Worked with the automation team to understand the selenium scripts and review the code run the tests and review the results and provide inputs to the team Environment Java Spring JPA Spring AOP Struts JasperReports Restful Web services Servlets JSP JavaScript GWT JSON XML DOM SAXHTML HTTP client API NetBeans Web Logic Ant Git and Bitbucket Jr Java Developer Core Java Kesineni Travels September 2009 to May 2011 The project is on Kesineni Travels bus service web application This module allows the customer to book their bus tickets through a web application Various operations relating to their itinerary such as expediting canceling delay price variations based on timings duration of the journey can be seen on the web Apart from that the status of their reservation and itinerary is sent to their email The dynamic business data is retrieved from the Oracle database Responsibilities Developed the web application using Servlets JSP and JSTL Worked on Java Standard Edition includes Exception Handling Multithreading File Handling File IO and Collection Framework Writing the code using Executors framework on multithreading Writing the code to set the priority of each thread and Schedule the threads in multithreading Writing the code for InterThread Communication among multiple threads Implemented Service Provider Threads for the User Threads Handling the exceptions in Serialization process Writing the code on Collection List Set Map frameworks to persist the traveler data on the database Writing the code on Caches Implemented the code using Native Libraries and Native methods C language Implemented Business Delegate Session Facade DAO Singleton Factory and DTO Design Patterns Implemented Swing and Java FX Frames in developing user interfaces for inside desktop applications Involved in batch processing using JDBC Batch to extract data from database and load into corresponding Application Tables Designed UI using JSP HTML and validate with JavaScript for providing the user interface Involved in SQLdevelopment and worked on Joints Triggers Indexes Stored Procedures Views and involved in incorporating business logic in SQL code stored procedures Worked on converting the insert and update processes to utilize an XML stream and calling a servlet to save GLANCE data to database Used Junit to test the web application internally Involved in the team with Sr Developers to write JVM memory management code using different Object references and Garbage collector methods Used SVN version control tool Environment Java 7 J2EE Swing and Java FX Linux HTML Batch Processing JavaScript Eclipse MS SQL Apache Tomcat SOA Architecture Gradle SVN Education BE in Computer Science University College of Engineering Skills Apache 4 years Database 9 years Design patterns 5 years Eclipse 7 years J2EE 7 years Java 9 years JUnit 5 years Maven 4 years MODEL VIEW CONTROLLER 4 years MODELVIEWCONTROLLER 4 years MVC 4 years Oracle 7 years REST 4 years SOAP 4 years SQL 5 years Subversion 5 years SVN 5 years Testing 7 years Web Services 7 years XML 6 years",
    "entities": [
        "SafetyGarbage Collection",
        "Drools Adding",
        "CQL Cassandra Query Language",
        "OMT",
        "Contractors Retail",
        "Restful controllers Service DAO",
        "AJAX",
        "IDE",
        "GUI",
        "PDF JasperReportsusing",
        "JAVAJ2EE Technologies Experienced",
        "UML Worked",
        "SpringSecurity DAO AOP",
        "Worked on Hibernate",
        "Jasper",
        "ScrumAgile",
        "Database Oracle Working",
        "Kesineni Travels",
        "Spring Security Experienced",
        "JSON",
        "Design Development Support and Implementation of Web",
        "J2EE Design Patterns Singleton Session Faade",
        "the Retail Contract System",
        "IBM",
        "Containerization",
        "Amazon Web Services AWS",
        "JAXWS Design Patterns Proficient",
        "Ajax",
        "BCBS Insurance",
        "Home Sellers and Buyers Real",
        "Controller",
        "XML",
        "SOAP",
        "Executors Frame",
        "JIRA",
        "JUnit",
        "RESTfulfor",
        "DevOps",
        "Use Cases Class Diagrams",
        "Model N Technology",
        "Amazon",
        "SVN Multiple Databases",
        "Configuring AWS EC2",
        "Cassandra Applied Object Oriented Programming",
        "Developed",
        "DAO",
        "Jenkins",
        "Restful Postman",
        "NC",
        "Mockito",
        "Spring Sleuth",
        "San Francisco",
        "Java Developer BCBS Insurance",
        "TDD Test Driven Development",
        "UML",
        "Responsibilities Involved",
        "HTML Developed",
        "Sr Developers",
        "SpringBoot",
        "Created AWS Security Groups",
        "Java Developer Deutsche Bank",
        "Responsibilities Conducted",
        "Object Oriented Concepts",
        "BCBS",
        "Online Application",
        "Used Git Bitbucket for Design Development of Project Build System",
        "Swing AWT Servlets",
        "FS",
        "Develop",
        "Filter classes Security Working",
        "Linux",
        "JSP",
        "Mockitoframework Along",
        "Serialization",
        "Micro",
        "Software Requirements Specification",
        "Worked",
        "Postman Involved",
        "GitHub JPA Oracle Windows XP",
        "Shell Scripting",
        "DTO Design Patterns Implemented Swing",
        "JBoss",
        "Docker",
        "RCS",
        "the Payment Process Implemented",
        "MVC",
        "Federal Home Loan Mortgage Corporation Freddie Mac",
        "Java Backend Working",
        "EJB",
        "GIT",
        "the Sprint ActivitiesBacklogs Working",
        "BOOT Spring MVC",
        "Computer Science University College of Engineering Skills",
        "Core JAVAJ2EEand",
        "Web Services",
        "US",
        "Database",
        "JBossservers Created",
        "WebLogic WebSphere",
        "Created",
        "Toad Software Developed Web Service",
        "AWS",
        "Ehcache Used Hibernate Query Language HQL",
        "Oracle",
        "XML Involved",
        "HTML",
        "Present Deutsche Bank",
        "XPath",
        "Java 18and Lambda Expression",
        "J2EE Servlets JSP EJB",
        "Developed JasperReports",
        "Quality Center",
        "Native Libraries",
        "SQL",
        "GLANCE",
        "GitHub",
        "Application Tables Designed UI",
        "SAX DOM Parsers",
        "Garbage",
        "SQLdevelopment",
        "JAXRS",
        "Fordowned",
        "CICD",
        "Implemented Service",
        "Development Life Cycle SDLC",
        "NETFLIX",
        "Queues",
        "SQS",
        "ETL",
        "CRUD",
        "Hibernate Query Language",
        "Maven",
        "Architected Designed",
        "lJavaspan",
        "Stream Functional",
        "GWT",
        "JavaScript",
        "ANT",
        "TestNG",
        "InterThread Communication",
        "UI",
        "JSP Servlets",
        "Freddie Mac",
        "SVN",
        "J2EE Servlets",
        "Hibernate 4230",
        "Java Message Service",
        "REST",
        "NetBeans",
        "Working Knowledge on Shell Scripting",
        "JSP AJAX Oracle",
        "Singleton Factory Design",
        "Team City",
        "Stream MultiThread Pooling",
        "AWS Developed API",
        "SLA",
        "Used SOAP Web Services"
    ],
    "experience": "Experience in developing Software applications using Core JAVAJ2EEand midlevel technologies such as Swing AWT Servlets JSP JSF JSTL JPA Filters EJB JMS and Web Services JAXRS and JAXWS Design Patterns Proficient in core Java concepts such as Collections Generics Multithreading and Serialization Expertise in all Spring Modules such as Spring Core Spring MVC Dependency Injection Spring AOP Spring Securty Spring JDBC Spring ORM Spring DAO and Spring Security Experienced in Struts framework Experience in Database persistence layer like Hibernate 4230 Experience with Java 18and Lambda Expression and Stream Functional methods Experience on a cloud platform and experience with Amazon S3 EC2 ElasticSearch VPC SQS RDS EBS SQS and LAMBDA Experience in a Monolithic web application as well as Microservices web applications and AWS cloud Experience on Containerization using Docker to achieve high scalability and high availability Experienced on Frontend technologies such as HTML CSS3 JavaScript Expertise in using SpringBoot to develop Restful controllers Service DAO classes and also Filter classes Security Working knowledge of PLSQL and databases like DB2 MySQL Server MS SQL Oracle DB and No SQL databases Apache Cassandra Experience in coding implementation unit testing and Performance Testing of various J2EE related projects Working Knowledge on Shell Scripting Experience in using version control systems like SVN and GIT Experience in bug tracking tools like JIRA Experience with TDD Test Driven Development using JUnit and Knowledge on BDD Behavior Driven Development Cucumber Experience in XML and related technologies Good working knowledge of Jenkins for CI Continuous Integration Maven for project builddeployment Log4j for logging and JUnit for the unit and integration testing Knowledge on Pivotal Gemfire Experience with IBM MQ and knowledge on Kafka for the distributed messaging systems Design and development of webbased applications using different Web and Application Servers such as Apache Tomcat WebLogic WebSphere JBoss Handson working experience with IDE tools like Eclipse Net Beans Spring Tool Suit and IntelliJ IDEA Authorized to work in the US for any employer Work Experience Java Developer Deutsche Bank Cary NC October 2017 to Present Deutsche Bank is a German global banking and financial services company The current project Galileo is on handling the different types of payments across 35 countries Most of the code is already existed for some countries So when we are implementing the same code to other new countries the existed source code is changed according to the financial rules specified to those countries and if those countries do nt make particular type of payments then related channels or jobs Queues are removed from the code Responsibilities Requirement gathering from the Functional Analysts Business owners and analyze the business logic to be implemented Develop and add extra features to the application using EJB work flow Implement the code using various advance java concepts including Servlets JSP JNDI Web Services SOAP Working on ScrumAgile methodology using JIRA to manage the Sprint ActivitiesBacklogs Working with different Object Oriented Concepts like Inheritance Multithreading Exceptional Handling Working with various Design patterns like Singleton Factory Design patterns using EJB work flow implementation Working with Ibatis ORM tool to connect the java code to Database Oracle Working on PLSQL especially modifying or implementing the existed stored procedures Functions and Indexes Working with J2SE concepts includes Datastructures algorithms and Collections frameworkList MapSet Working with Web Logic12c Server in Deployment and Testing for the results Connect to the web logic using Linux commands Putty WinScp and perform the deployment actions Spring framework is implemented especially in configuring the beans and injecting the beans Dependency Injection Business rules of the banks are implemented using Drools Adding or deleting Queues from from the IBM MQ based on the requirement and country financial rules Working with various testing tools which are developed particularly for this project Code is controlled through SVN Multiple Databases are handled using Different DataSources in the project Used SOAP Web Services for secure extraction of client related data from database and to connect the application from UI to Java Backend Working on JSPs to map the requests to related java controller class Developed JasperReports based on business requirements and Prototyped PDF JasperReportsusing jasper assistant Team City is implemented in the project for the integration of the project components The application was tracked and logged using Log4J framework Writing new Unit tests or modifying the existed JUnit test cases and implement the Stub support using Mockitoframework Along with unit test manual tests are also performed on the application by creating scenarios Environment Java 18 J2EE Servlets JSP EJB JSP Maven IBM MQ Web Logic 12c Drools Team City JUnit Mockito HTML SOAP OraclePLSQL SharePoint Confluence and JIRA JNDI Ibatis Linux Spring Jasper Reports Java Developer Freddie Mac McLean VA January 2017 to September 2017 Freddie Mac is a Federal Home Loan Mortgage Corporation Freddie Mac has been developing the portal in a way that it provides the enough information to all kinds of users including Home Sellers and Buyers Real estate professionals Contractors Retail investors and Direct clients The portal is also available for the parties and customers to check their corresponding credit score equity and debt Responsibilities Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Used Spring Boot for developing individual component Micro services Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run underDockerhost Writing the code using Lambda Expression andStreamAPIon JDK 8 Java 18 Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream MultiThread Pooling is implemented by Executors Frame work ExcutorService Interface Synchronized threads are developed for the thread SafetyGarbage Collection is also implemented using daemon threads Worked on implementing and consuming RESTful web services using JAXRS annotations Developed OAuth2 Security on RESTful web services for the log in page and for the Payment Process Implemented RESTful services to consume as well as produce JSON and XML web services in the application Developed Clientside code is integrated with REST and processed the JSON response Worked with Hibernate framework to interact with the backend servers Developed POJOs for the Spring Batch to process large volumes of records and Worked on Spring XD Worked on CQL Cassandra Query Language using Cassandra Cluster Model Used Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Involved in ETL functions from a relational database to Cassandra Applied Object Oriented Programming OOP concepts including UML use cases class diagrams and interaction diagrams Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Java and Spring routing rules are Specified in XML to define for the Apache Camel Spring Security was implemented in the project Interacted with UI team in developing GUI using HTML5 JavaScript JSP JSON Presentation layer was developed using JSP and JavaScript Setting up the JENKINS continuous build path for Continuous Integration Worked with DevOps team in continuous integration Worked with the JIRA tool for Quality Center bug tracking Involved in the planning process of iterations under the Agile Scrum methodology Involved in Unit Integration and Performance Testing for the new enhancements Test cases were created using TestNG and previous test cases were transformed from Junit to TestNG Environment Java 18 J2EE UML Spring BOOT Spring MVC Spring Security Spring Batch JSP GemFire Apache Camel JMS AJAX Angular JS JSON Servlet JENKINS TestNG Agile Scrum JIRA Tomcat Application Server Docker XML HQL Hibernate IntelliJ IDEA Core Java Multithreading Rest API JAXRS Web services HTML5 JavaScript CSS3 Oracle database ETL Apache Cassandra GIT OOD Unix Linux Shell Scripting Java Developer BCBS Insurance San Francisco CA April 2015 to December 2016 Developed an online application that enables clients to access review and update their products purchased from BCBS Insurance The primary users of this application are BCBS insurance policy owners agents and customer service representatives The application provides an integrated environment for account management policy changesrenewals monthly premium dues alerts claims processing status Responsibilities Designed and developed Online Application using Spring MVC Framework and Spring Core Developed and enhanced the application using Java and J2EE Servlets JSP JDBC JNDI EJB Web Services RESTful Web Services HTML JSON XML Maven Log4J and MySQL DB The project was developed agile software development methodology Developed the code using Spring MVC dispatcher servlet to transfer on to different Controller classes components Wrote RestController with respect to RESTfulstandards in Spring MVC to connect model with view Tested Rest APIs in Spring Controller at the backend for JSON data using Postman Involved in working with J2EE Design Patterns Singleton Session Faade and DAO Involved in Object Modelling Techniques with Manager and clients Involved in creating Use Cases Class Diagrams and Sequence Diagrams using UML Worked with DevOps team in deploying the project on AWS Developed API for using AWS Lambda to manage the servers and run the code in AWS Designed configured and managed publicprivate cloud infrastructures using Amazon Web Services AWS which includes VPC EC2 ElasticSearch S3 Cloud Front ELB and Elastic Beanstalk Worked on Hibernate ORM Created Hibernate XML files and Java class files to map the object relation mappings Worked on Hibernate caching using Ehcache Used Hibernate Query Language HQL and Custom Queries to query data from Oracle database in DAO Used several Hibernate techniques such as lazy loading batch fetching and eager fetching to improve application performance Used CRUD operations using JPA query language Worked on messaging frameworks like Kafka tuning optimization meeting nonfunctional requirements and SLA mentioned latencies Migrated messaging system from JMS to Kafka Developed and maintained the Application Context files for the service layer using Spring Framework Used SOAPWSDL 20 Web Services for secure extraction of client related data from database Used RESTful in conjunction with Ajax calls using JAXRS and Jersey MultiThreading and Caching were used to improve the performance and user experience Implemented Marshalling and Unmarshalling using JAXB Developed JSPs for the presentation layer AJAX calls implemented for form validation and other interactive features and created HTML navigation menu that is role based menu items changes dynamically derived from the database in the form of XML Involved in Performance tuning of the application and documentation of troubleshooting Developed JasperReports based on business requirements and Prototyped PDF JasperReportsusing jasper assistant Involved in CICD using Jenkins and uDeploy Used SVN for version control Created and implemented JBosscentric architecture for entire environment and Created automated deployment scrips for JBossservers Created multihomed JBoss instances multiple clients on a single server to maximize hardware resources over a VM Integrated JBossmessaging into JBoss423 and upgraded large multinational clients to messaging Applied security practices and fixes to JBoss servers and Apache to be complaint with PCI regulations The application was logged using Log4J and exceptions were logged into the database using JDBC Used JUnit for testing the entire application rectified performance bottlenecks and eliminated critical bugs Created numerous test cases using JUnit framework and Mockito for testing modules Environment Java 17 J2EE JSP JDBC JNDI EJB UML Spring 30 Spring MVCAWS JasperReports OMT Apache Kafka HTML5Hibernate 4x Ehcache MongoDB JSP AJAX Oracle 11 g Eclipse Maven Maven Script SVN Jenkins uDeploy XML 1x JAXB 2x Log4J JUnit Mockito JBoss SOAP Web Services Restful Postman WSDL 20 JAXRS JAXWS Jr Java Developer Ford Dearborn MI October 2013 to March 2015 RCS is the Retail Contract System which is used by business people in the Fordowned showrooms and other FS dealers who sell and lease cars to customers RCS is the major application where all the contract and leasing terms are calculated and printed out to customers before the final deal on a vehicle is made Both new and used vehicle taxes and description would be available for dealers and the information on the existing customers would be available Responsibilities Involved in the deployment of full Software Development Life Cycle SDLC of the tracking systems Requirement gathering Conceptual design Analysis Detail design Development System Testing and User Acceptance Used Agile methodology and effectively took part in Scrum gatherings to deliver quality deliverables within time Designed and developed all the user interfaces using JSP Servlets and Spring framework Developed the DAO layer using Hibernate and used the caching system for realtime performance Designed and developed various modules of the application with J2EE design architecture Worked on object oriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Implemented JMS API for the communication Used Spring IOC for dependency injection and Spring AOP for crosscutting concerns like logging security transaction management Developed the application for a new Spring batch based system to process transactions Involved in creating and extracting data from database using HQL queries PLSQL Stored procedures triggers and packages on Oracle database using Toad Software Developed Web Service provider methods bottomup approach using WSDL and RESTfulfor transferring data between the Applications Used AJAX for developing asynchronous web applications on the client side Developed action classes and action Forms performed validations using commons custom validator and Struts clientside JavaScript validation Used Shell Scripting for file manipulation program execution Used JDBC for accessing database DB2 to track all credit aspects of accounts which include financial review details security held actuarial exposure data and receivables Wrote JSP Servlets classes to generate dynamic HTML pages Adopted Spring framework for the development of the project Involved in fixing bugs and unit testing with test cases usingJUnit framework Used Maven for create the project archetype and build the interface modules for customizing WAR and EAR Files Used Spring ORM module for integration with Hibernate for persistence layer Developed Session Beans and Entity Beans JPA Involved in writing Hibernate Query Language HQL for persistence layer Used Splunk for application logging and debugging Used GitHub as Distributed version control system and branching for creating a new feature and making bug fixes Used Spring ORM module for integration with Hibernate for persistence layer Environment Java 17 JSP JMS UML HTML AJAX Servlets Spring Batch Hibernate EJB Session Beans IBM DB2 SOAP based Web Services Splunk WebSphere JNDI Maven GitHub JPA Oracle Windows XP UNIX Shell Scripting Eclipse Java Developer Model N June 2011 to August 2013 Model N Technology develops transparent relationships with clients and partners and provides them with custom innovative software solutions for banking manufacturing medical retail wholesale transportation etc Responsibilities Involved in understanding requirements Software Requirements Specification SRS and translating them into Detailed Function Specification document DFS for IDS Worked with technologies including SpringSecurity DAO AOP JPA Restful Web services Servlets JSP JSON XML and HTML Developed presentation layer using Struts framework and MVC design paradigm Extensive use of Struts Framework for Controller components and view components Involved in writing the exception and validation classes using Struts validation rules Used JPA Entity Manager and Spring JDBC templates for DAO layer Developed the application using Eclipse IDE and spring tool suite Architected Designed and implemented few of the key REST APIs which facilitated a huge data flow Designed and implemented the database startup scripts Used SAX DOM Parsers and XPath for parsing XML Identify the older modules code stack that can be reusable with minimal changes and define the interfaces that allow the communication with those modules Used Git Bitbucket for Design Development of Project Build System and version control Worked on preparing test cases and executing unit testing and Integration testing Involved in developing Presentation layer using JavaScript Used GWT to maintain JavaScript Applications Used ANT to build run and create JARs and WAR files Worked on JasperReport to report in various forms and used iReporteditor for the design of the Jasper template Worked on NetBeans IDE and Web Logic Server 11gR Worked with the automation team to understand the selenium scripts and review the code run the tests and review the results and provide inputs to the team Environment Java Spring JPA Spring AOP Struts JasperReports Restful Web services Servlets JSP JavaScript GWT JSON XML DOM SAXHTML HTTP client API NetBeans Web Logic Ant Git and Bitbucket Jr Java Developer Core Java Kesineni Travels September 2009 to May 2011 The project is on Kesineni Travels bus service web application This module allows the customer to book their bus tickets through a web application Various operations relating to their itinerary such as expediting canceling delay price variations based on timings duration of the journey can be seen on the web Apart from that the status of their reservation and itinerary is sent to their email The dynamic business data is retrieved from the Oracle database Responsibilities Developed the web application using Servlets JSP and JSTL Worked on Java Standard Edition includes Exception Handling Multithreading File Handling File IO and Collection Framework Writing the code using Executors framework on multithreading Writing the code to set the priority of each thread and Schedule the threads in multithreading Writing the code for InterThread Communication among multiple threads Implemented Service Provider Threads for the User Threads Handling the exceptions in Serialization process Writing the code on Collection List Set Map frameworks to persist the traveler data on the database Writing the code on Caches Implemented the code using Native Libraries and Native methods C language Implemented Business Delegate Session Facade DAO Singleton Factory and DTO Design Patterns Implemented Swing and Java FX Frames in developing user interfaces for inside desktop applications Involved in batch processing using JDBC Batch to extract data from database and load into corresponding Application Tables Designed UI using JSP HTML and validate with JavaScript for providing the user interface Involved in SQLdevelopment and worked on Joints Triggers Indexes Stored Procedures Views and involved in incorporating business logic in SQL code stored procedures Worked on converting the insert and update processes to utilize an XML stream and calling a servlet to save GLANCE data to database Used Junit to test the web application internally Involved in the team with Sr Developers to write JVM memory management code using different Object references and Garbage collector methods Used SVN version control tool Environment Java 7 J2EE Swing and Java FX Linux HTML Batch Processing JavaScript Eclipse MS SQL Apache Tomcat SOA Architecture Gradle SVN Education BE in Computer Science University College of Engineering Skills Apache 4 years Database 9 years Design patterns 5 years Eclipse 7 years J2EE 7 years Java 9 years JUnit 5 years Maven 4 years MODEL VIEW CONTROLLER 4 years MODELVIEWCONTROLLER 4 years MVC 4 years Oracle 7 years REST 4 years SOAP 4 years SQL 5 years Subversion 5 years SVN 5 years Testing 7 years Web Services 7 years XML 6 years",
    "extracted_keywords": [
        "Java",
        "Developer",
        "lJavaspan",
        "span",
        "lDeveloperspan",
        "Java",
        "Developer",
        "Deutsche",
        "Bank",
        "Cary",
        "NC",
        "years",
        "IT",
        "experience",
        "Design",
        "Development",
        "Support",
        "Implementation",
        "Web",
        "applications",
        "JAVAJ2EE",
        "Technologies",
        "Enterprise",
        "Application",
        "phase",
        "software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Requirement",
        "Analysis",
        "Design",
        "Reviews",
        "Coding",
        "Unit",
        "Integration",
        "Testing",
        "Experience",
        "Software",
        "applications",
        "Core",
        "JAVAJ2EEand",
        "technologies",
        "Swing",
        "AWT",
        "Servlets",
        "JSP",
        "JSF",
        "JSTL",
        "JPA",
        "Filters",
        "EJB",
        "JMS",
        "Web",
        "Services",
        "JAXRS",
        "JAXWS",
        "Design",
        "Patterns",
        "Proficient",
        "core",
        "Java",
        "concepts",
        "Collections",
        "Generics",
        "Multithreading",
        "Serialization",
        "Expertise",
        "Spring",
        "Modules",
        "Spring",
        "Core",
        "Spring",
        "MVC",
        "Dependency",
        "Injection",
        "Spring",
        "AOP",
        "Spring",
        "Securty",
        "Spring",
        "JDBC",
        "Spring",
        "ORM",
        "Spring",
        "DAO",
        "Spring",
        "Security",
        "Struts",
        "framework",
        "Experience",
        "Database",
        "persistence",
        "layer",
        "Hibernate",
        "Experience",
        "Java",
        "18and",
        "Lambda",
        "Expression",
        "Stream",
        "methods",
        "Experience",
        "platform",
        "experience",
        "Amazon",
        "S3",
        "EC2",
        "ElasticSearch",
        "VPC",
        "SQS",
        "RDS",
        "EBS",
        "SQS",
        "LAMBDA",
        "Experience",
        "web",
        "application",
        "Microservices",
        "web",
        "applications",
        "AWS",
        "cloud",
        "Experience",
        "Containerization",
        "Docker",
        "scalability",
        "availability",
        "Frontend",
        "technologies",
        "HTML",
        "CSS3",
        "JavaScript",
        "Expertise",
        "SpringBoot",
        "controllers",
        "Service",
        "DAO",
        "classes",
        "Filter",
        "classes",
        "Security",
        "Working",
        "knowledge",
        "PLSQL",
        "databases",
        "DB2",
        "MySQL",
        "Server",
        "MS",
        "SQL",
        "Oracle",
        "DB",
        "SQL",
        "Apache",
        "Cassandra",
        "Experience",
        "implementation",
        "unit",
        "testing",
        "Performance",
        "Testing",
        "J2EE",
        "projects",
        "Working",
        "Knowledge",
        "Shell",
        "Scripting",
        "Experience",
        "version",
        "control",
        "systems",
        "SVN",
        "GIT",
        "Experience",
        "bug",
        "tools",
        "JIRA",
        "Experience",
        "TDD",
        "Test",
        "Driven",
        "Development",
        "JUnit",
        "Knowledge",
        "BDD",
        "Behavior",
        "Driven",
        "Development",
        "Cucumber",
        "Experience",
        "XML",
        "technologies",
        "knowledge",
        "Jenkins",
        "CI",
        "Continuous",
        "Integration",
        "Maven",
        "project",
        "builddeployment",
        "Log4j",
        "logging",
        "JUnit",
        "unit",
        "integration",
        "Knowledge",
        "Pivotal",
        "Gemfire",
        "Experience",
        "IBM",
        "MQ",
        "knowledge",
        "Kafka",
        "systems",
        "Design",
        "development",
        "applications",
        "Web",
        "Application",
        "Servers",
        "Apache",
        "Tomcat",
        "WebLogic",
        "WebSphere",
        "JBoss",
        "Handson",
        "experience",
        "IDE",
        "tools",
        "Eclipse",
        "Net",
        "Beans",
        "Spring",
        "Tool",
        "Suit",
        "IntelliJ",
        "IDEA",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Java",
        "Developer",
        "Deutsche",
        "Bank",
        "Cary",
        "NC",
        "October",
        "Present",
        "Deutsche",
        "Bank",
        "banking",
        "services",
        "company",
        "project",
        "Galileo",
        "types",
        "payments",
        "countries",
        "code",
        "countries",
        "code",
        "countries",
        "source",
        "code",
        "rules",
        "countries",
        "countries",
        "type",
        "payments",
        "channels",
        "jobs",
        "Queues",
        "code",
        "Responsibilities",
        "Requirement",
        "gathering",
        "Functional",
        "Analysts",
        "Business",
        "owners",
        "business",
        "logic",
        "Develop",
        "features",
        "application",
        "EJB",
        "work",
        "flow",
        "code",
        "advance",
        "concepts",
        "Servlets",
        "JSP",
        "JNDI",
        "Web",
        "Services",
        "SOAP",
        "Working",
        "ScrumAgile",
        "methodology",
        "JIRA",
        "Sprint",
        "ActivitiesBacklogs",
        "Working",
        "Object",
        "Concepts",
        "Inheritance",
        "Multithreading",
        "Exceptional",
        "Handling",
        "Working",
        "Design",
        "patterns",
        "Singleton",
        "Factory",
        "Design",
        "patterns",
        "EJB",
        "work",
        "flow",
        "implementation",
        "Ibatis",
        "ORM",
        "tool",
        "java",
        "code",
        "Database",
        "Oracle",
        "Working",
        "PLSQL",
        "procedures",
        "Functions",
        "Indexes",
        "Working",
        "J2SE",
        "concepts",
        "Datastructures",
        "algorithms",
        "Collections",
        "frameworkList",
        "MapSet",
        "Working",
        "Web",
        "Logic12c",
        "Server",
        "Deployment",
        "Testing",
        "results",
        "web",
        "logic",
        "Linux",
        "Putty",
        "WinScp",
        "actions",
        "Spring",
        "framework",
        "beans",
        "beans",
        "Dependency",
        "Injection",
        "Business",
        "rules",
        "banks",
        "Drools",
        "Adding",
        "Queues",
        "IBM",
        "MQ",
        "requirement",
        "country",
        "rules",
        "testing",
        "tools",
        "project",
        "Code",
        "SVN",
        "Multiple",
        "Databases",
        "Different",
        "DataSources",
        "project",
        "SOAP",
        "Web",
        "Services",
        "extraction",
        "client",
        "data",
        "database",
        "application",
        "UI",
        "Java",
        "Backend",
        "JSPs",
        "requests",
        "controller",
        "class",
        "Developed",
        "JasperReports",
        "business",
        "requirements",
        "Prototyped",
        "PDF",
        "JasperReportsusing",
        "jasper",
        "assistant",
        "Team",
        "City",
        "project",
        "integration",
        "project",
        "components",
        "application",
        "framework",
        "Unit",
        "tests",
        "JUnit",
        "test",
        "cases",
        "Stub",
        "support",
        "Mockitoframework",
        "Along",
        "unit",
        "test",
        "tests",
        "application",
        "scenarios",
        "Environment",
        "Java",
        "J2EE",
        "Servlets",
        "JSP",
        "EJB",
        "JSP",
        "Maven",
        "IBM",
        "MQ",
        "Web",
        "Logic",
        "12c",
        "Drools",
        "Team",
        "City",
        "JUnit",
        "Mockito",
        "HTML",
        "SOAP",
        "SharePoint",
        "Confluence",
        "JIRA",
        "JNDI",
        "Ibatis",
        "Linux",
        "Spring",
        "Jasper",
        "Reports",
        "Java",
        "Developer",
        "Freddie",
        "Mac",
        "McLean",
        "VA",
        "January",
        "September",
        "Freddie",
        "Mac",
        "Federal",
        "Home",
        "Loan",
        "Mortgage",
        "Corporation",
        "Freddie",
        "Mac",
        "portal",
        "way",
        "information",
        "kinds",
        "users",
        "Home",
        "Sellers",
        "Buyers",
        "estate",
        "professionals",
        "Contractors",
        "Retail",
        "investors",
        "clients",
        "portal",
        "parties",
        "customers",
        "credit",
        "score",
        "equity",
        "debt",
        "Responsibilities",
        "analysis",
        "needs",
        "goals",
        "development",
        "implementation",
        "application",
        "systems",
        "business",
        "personnel",
        "Spring",
        "Boot",
        "component",
        "Micro",
        "services",
        "AWS",
        "cloud",
        "resources",
        "troubleshooting",
        "EC2",
        "instances",
        "S3",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "Elastic",
        "Search",
        "Relational",
        "Database",
        "Services",
        "RDS",
        "AWS",
        "Route",
        "traffic",
        "regions",
        "AWS",
        "Security",
        "Groups",
        "Configuring",
        "AWS",
        "EC2",
        "instances",
        "Java",
        "API",
        "Amazon",
        "SQS",
        "emails",
        "micro",
        "services",
        "Spring",
        "Sleuth",
        "Config",
        "Server",
        "NETFLIX",
        "OSS",
        "Eureka",
        "Hystrix",
        "Zuul",
        "containerization",
        "tools",
        "Docker",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "code",
        "Lambda",
        "Expression",
        "JDK",
        "Java",
        "JDK",
        "code",
        "interfaces",
        "default",
        "methods",
        "interfaces",
        "filters",
        "Stream",
        "MultiThread",
        "Pooling",
        "Executors",
        "Frame",
        "work",
        "ExcutorService",
        "Interface",
        "threads",
        "thread",
        "SafetyGarbage",
        "Collection",
        "threads",
        "web",
        "services",
        "JAXRS",
        "annotations",
        "Developed",
        "OAuth2",
        "Security",
        "web",
        "services",
        "log",
        "page",
        "Payment",
        "Process",
        "services",
        "JSON",
        "XML",
        "web",
        "services",
        "application",
        "Clientside",
        "code",
        "REST",
        "response",
        "Hibernate",
        "framework",
        "servers",
        "POJOs",
        "Spring",
        "Batch",
        "volumes",
        "records",
        "Spring",
        "XD",
        "CQL",
        "Cassandra",
        "Query",
        "Language",
        "Cassandra",
        "Cluster",
        "Model",
        "Used",
        "Oracle",
        "PLSQL",
        "database",
        "HQL",
        "query",
        "data",
        "database",
        "Annotations",
        "Hibernate",
        "mapping",
        "ETL",
        "functions",
        "database",
        "Cassandra",
        "Applied",
        "Object",
        "Programming",
        "OOP",
        "concepts",
        "UML",
        "use",
        "cases",
        "class",
        "diagrams",
        "interaction",
        "diagrams",
        "Apache",
        "Camel",
        "Java",
        "Message",
        "Service",
        "JMS",
        "API",
        "email",
        "notifications",
        "employee",
        "notifications",
        "Java",
        "Spring",
        "routing",
        "rules",
        "XML",
        "Apache",
        "Camel",
        "Spring",
        "Security",
        "project",
        "UI",
        "team",
        "GUI",
        "HTML5",
        "JavaScript",
        "JSP",
        "JSON",
        "Presentation",
        "layer",
        "JSP",
        "JavaScript",
        "JENKINS",
        "build",
        "path",
        "Continuous",
        "Integration",
        "DevOps",
        "team",
        "integration",
        "JIRA",
        "tool",
        "Quality",
        "Center",
        "bug",
        "tracking",
        "planning",
        "process",
        "iterations",
        "Agile",
        "Scrum",
        "methodology",
        "Unit",
        "Integration",
        "Performance",
        "Testing",
        "enhancements",
        "Test",
        "cases",
        "TestNG",
        "test",
        "cases",
        "Junit",
        "TestNG",
        "Environment",
        "Java",
        "J2EE",
        "UML",
        "Spring",
        "BOOT",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "Batch",
        "JSP",
        "GemFire",
        "Apache",
        "Camel",
        "JMS",
        "AJAX",
        "JS",
        "JSON",
        "Servlet",
        "JENKINS",
        "TestNG",
        "Agile",
        "Scrum",
        "JIRA",
        "Tomcat",
        "Application",
        "Server",
        "Docker",
        "XML",
        "HQL",
        "Hibernate",
        "IntelliJ",
        "IDEA",
        "Core",
        "Java",
        "Multithreading",
        "Rest",
        "API",
        "JAXRS",
        "Web",
        "services",
        "HTML5",
        "JavaScript",
        "CSS3",
        "Oracle",
        "database",
        "ETL",
        "Apache",
        "Cassandra",
        "GIT",
        "OOD",
        "Unix",
        "Linux",
        "Shell",
        "Scripting",
        "Java",
        "Developer",
        "BCBS",
        "Insurance",
        "San",
        "Francisco",
        "CA",
        "April",
        "December",
        "application",
        "clients",
        "review",
        "products",
        "BCBS",
        "Insurance",
        "users",
        "application",
        "BCBS",
        "insurance",
        "policy",
        "owners",
        "agents",
        "customer",
        "service",
        "representatives",
        "application",
        "environment",
        "account",
        "management",
        "policy",
        "changesrenewals",
        "premium",
        "dues",
        "claims",
        "status",
        "Responsibilities",
        "Online",
        "Application",
        "Spring",
        "MVC",
        "Framework",
        "Spring",
        "Core",
        "Developed",
        "application",
        "Java",
        "J2EE",
        "Servlets",
        "JSP",
        "JDBC",
        "JNDI",
        "EJB",
        "Web",
        "Services",
        "Web",
        "Services",
        "HTML",
        "JSON",
        "XML",
        "Maven",
        "Log4J",
        "MySQL",
        "DB",
        "project",
        "software",
        "development",
        "methodology",
        "code",
        "Spring",
        "MVC",
        "dispatcher",
        "servlet",
        "Controller",
        "classes",
        "components",
        "Wrote",
        "RestController",
        "respect",
        "RESTfulstandards",
        "Spring",
        "MVC",
        "model",
        "view",
        "Rest",
        "APIs",
        "Spring",
        "Controller",
        "backend",
        "JSON",
        "data",
        "Postman",
        "J2EE",
        "Design",
        "Patterns",
        "Singleton",
        "Session",
        "Faade",
        "DAO",
        "Object",
        "Modelling",
        "Techniques",
        "Manager",
        "clients",
        "Use",
        "Cases",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "UML",
        "Worked",
        "DevOps",
        "team",
        "project",
        "AWS",
        "API",
        "AWS",
        "Lambda",
        "servers",
        "code",
        "AWS",
        "publicprivate",
        "cloud",
        "infrastructures",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "VPC",
        "EC2",
        "ElasticSearch",
        "S3",
        "Cloud",
        "Front",
        "ELB",
        "Elastic",
        "Beanstalk",
        "Hibernate",
        "ORM",
        "Hibernate",
        "XML",
        "files",
        "Java",
        "class",
        "files",
        "object",
        "relation",
        "mappings",
        "Hibernate",
        "Ehcache",
        "Used",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "Custom",
        "Queries",
        "data",
        "Oracle",
        "database",
        "DAO",
        "Hibernate",
        "techniques",
        "loading",
        "batch",
        "fetching",
        "fetching",
        "application",
        "performance",
        "CRUD",
        "operations",
        "JPA",
        "query",
        "language",
        "frameworks",
        "Kafka",
        "optimization",
        "requirements",
        "SLA",
        "latencies",
        "system",
        "JMS",
        "Kafka",
        "Developed",
        "Application",
        "Context",
        "files",
        "service",
        "layer",
        "Spring",
        "Framework",
        "SOAPWSDL",
        "Web",
        "Services",
        "extraction",
        "client",
        "data",
        "database",
        "conjunction",
        "calls",
        "JAXRS",
        "Jersey",
        "MultiThreading",
        "Caching",
        "performance",
        "user",
        "experience",
        "Marshalling",
        "Unmarshalling",
        "JAXB",
        "JSPs",
        "presentation",
        "layer",
        "AJAX",
        "calls",
        "form",
        "validation",
        "features",
        "HTML",
        "navigation",
        "menu",
        "role",
        "menu",
        "items",
        "changes",
        "database",
        "form",
        "XML",
        "Performance",
        "tuning",
        "application",
        "documentation",
        "Developed",
        "JasperReports",
        "business",
        "requirements",
        "Prototyped",
        "PDF",
        "JasperReportsusing",
        "jasper",
        "assistant",
        "CICD",
        "Jenkins",
        "uDeploy",
        "SVN",
        "version",
        "control",
        "JBosscentric",
        "architecture",
        "environment",
        "deployment",
        "scrips",
        "JBossservers",
        "Created",
        "JBoss",
        "clients",
        "server",
        "hardware",
        "resources",
        "VM",
        "Integrated",
        "JBossmessaging",
        "clients",
        "security",
        "practices",
        "fixes",
        "JBoss",
        "servers",
        "Apache",
        "PCI",
        "regulations",
        "application",
        "Log4J",
        "exceptions",
        "database",
        "JDBC",
        "JUnit",
        "application",
        "performance",
        "bottlenecks",
        "bugs",
        "test",
        "cases",
        "JUnit",
        "framework",
        "Mockito",
        "modules",
        "Environment",
        "Java",
        "J2EE",
        "JSP",
        "JDBC",
        "JNDI",
        "EJB",
        "UML",
        "Spring",
        "Spring",
        "MVCAWS",
        "JasperReports",
        "OMT",
        "Apache",
        "Kafka",
        "4x",
        "Ehcache",
        "MongoDB",
        "JSP",
        "AJAX",
        "Oracle",
        "g",
        "Eclipse",
        "Maven",
        "Maven",
        "Script",
        "SVN",
        "Jenkins",
        "uDeploy",
        "XML",
        "JAXB",
        "Log4J",
        "JUnit",
        "Mockito",
        "JBoss",
        "SOAP",
        "Web",
        "Services",
        "Restful",
        "Postman",
        "WSDL",
        "JAXRS",
        "JAXWS",
        "Jr",
        "Java",
        "Developer",
        "Ford",
        "Dearborn",
        "MI",
        "October",
        "March",
        "RCS",
        "Retail",
        "Contract",
        "System",
        "business",
        "people",
        "showrooms",
        "FS",
        "dealers",
        "cars",
        "customers",
        "RCS",
        "application",
        "contract",
        "leasing",
        "terms",
        "customers",
        "deal",
        "vehicle",
        "vehicle",
        "taxes",
        "description",
        "dealers",
        "information",
        "customers",
        "Responsibilities",
        "deployment",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "tracking",
        "systems",
        "Requirement",
        "design",
        "Analysis",
        "Detail",
        "design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "methodology",
        "part",
        "Scrum",
        "gatherings",
        "quality",
        "deliverables",
        "time",
        "user",
        "interfaces",
        "JSP",
        "Servlets",
        "Spring",
        "framework",
        "DAO",
        "layer",
        "Hibernate",
        "system",
        "performance",
        "modules",
        "application",
        "J2EE",
        "design",
        "architecture",
        "object",
        "analysis",
        "design",
        "UML",
        "uses",
        "cases",
        "domain",
        "model",
        "Activity",
        "diagrams",
        "sequence",
        "diagrams",
        "class",
        "diagrams",
        "generation",
        "engineering",
        "tool",
        "Rational",
        "Rose",
        "JMS",
        "API",
        "communication",
        "Spring",
        "IOC",
        "dependency",
        "injection",
        "Spring",
        "AOP",
        "concerns",
        "security",
        "transaction",
        "management",
        "application",
        "Spring",
        "batch",
        "system",
        "transactions",
        "data",
        "database",
        "HQL",
        "queries",
        "PLSQL",
        "procedures",
        "triggers",
        "packages",
        "Oracle",
        "database",
        "Toad",
        "Software",
        "Developed",
        "Web",
        "Service",
        "provider",
        "methods",
        "bottomup",
        "approach",
        "WSDL",
        "data",
        "Applications",
        "AJAX",
        "web",
        "applications",
        "client",
        "side",
        "action",
        "classes",
        "action",
        "Forms",
        "validations",
        "commons",
        "custom",
        "validator",
        "Struts",
        "JavaScript",
        "validation",
        "Shell",
        "Scripting",
        "file",
        "manipulation",
        "program",
        "execution",
        "JDBC",
        "database",
        "DB2",
        "credit",
        "aspects",
        "accounts",
        "review",
        "details",
        "security",
        "exposure",
        "data",
        "receivables",
        "Wrote",
        "JSP",
        "Servlets",
        "classes",
        "HTML",
        "pages",
        "Spring",
        "framework",
        "development",
        "project",
        "bugs",
        "unit",
        "testing",
        "test",
        "cases",
        "framework",
        "Maven",
        "project",
        "archetype",
        "interface",
        "modules",
        "WAR",
        "EAR",
        "Files",
        "Spring",
        "ORM",
        "module",
        "integration",
        "Hibernate",
        "persistence",
        "layer",
        "Developed",
        "Session",
        "Beans",
        "Entity",
        "Beans",
        "JPA",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "persistence",
        "layer",
        "Splunk",
        "application",
        "GitHub",
        "version",
        "control",
        "system",
        "feature",
        "bug",
        "fixes",
        "Spring",
        "ORM",
        "module",
        "integration",
        "Hibernate",
        "persistence",
        "layer",
        "Environment",
        "Java",
        "JSP",
        "JMS",
        "UML",
        "HTML",
        "AJAX",
        "Servlets",
        "Spring",
        "Batch",
        "Hibernate",
        "EJB",
        "Session",
        "Beans",
        "IBM",
        "DB2",
        "SOAP",
        "Web",
        "Services",
        "Splunk",
        "WebSphere",
        "JNDI",
        "Maven",
        "GitHub",
        "JPA",
        "Oracle",
        "Windows",
        "XP",
        "UNIX",
        "Shell",
        "Scripting",
        "Eclipse",
        "Java",
        "Developer",
        "Model",
        "N",
        "June",
        "August",
        "Model",
        "N",
        "Technology",
        "relationships",
        "clients",
        "partners",
        "custom",
        "software",
        "solutions",
        "banking",
        "manufacturing",
        "transportation",
        "Responsibilities",
        "understanding",
        "requirements",
        "Software",
        "Requirements",
        "Specification",
        "SRS",
        "Detailed",
        "Function",
        "Specification",
        "document",
        "DFS",
        "IDS",
        "technologies",
        "SpringSecurity",
        "DAO",
        "AOP",
        "JPA",
        "Restful",
        "Web",
        "services",
        "Servlets",
        "JSP",
        "JSON",
        "XML",
        "HTML",
        "presentation",
        "layer",
        "Struts",
        "framework",
        "MVC",
        "design",
        "paradigm",
        "use",
        "Struts",
        "Framework",
        "Controller",
        "components",
        "components",
        "exception",
        "validation",
        "classes",
        "Struts",
        "validation",
        "rules",
        "JPA",
        "Entity",
        "Manager",
        "Spring",
        "JDBC",
        "DAO",
        "layer",
        "application",
        "Eclipse",
        "IDE",
        "spring",
        "tool",
        "suite",
        "Architected",
        "Designed",
        "REST",
        "APIs",
        "data",
        "flow",
        "database",
        "scripts",
        "SAX",
        "DOM",
        "Parsers",
        "XPath",
        "XML",
        "modules",
        "code",
        "stack",
        "changes",
        "interfaces",
        "communication",
        "modules",
        "Git",
        "Bitbucket",
        "Design",
        "Development",
        "Project",
        "Build",
        "System",
        "version",
        "control",
        "test",
        "cases",
        "unit",
        "testing",
        "Integration",
        "testing",
        "Presentation",
        "layer",
        "JavaScript",
        "GWT",
        "JavaScript",
        "Applications",
        "ANT",
        "run",
        "JARs",
        "WAR",
        "files",
        "JasperReport",
        "forms",
        "iReporteditor",
        "design",
        "Jasper",
        "template",
        "NetBeans",
        "IDE",
        "Web",
        "Logic",
        "Server",
        "automation",
        "team",
        "selenium",
        "scripts",
        "code",
        "tests",
        "results",
        "inputs",
        "team",
        "Environment",
        "Java",
        "Spring",
        "JPA",
        "Spring",
        "AOP",
        "Struts",
        "JasperReports",
        "Restful",
        "Web",
        "services",
        "Servlets",
        "JSP",
        "JavaScript",
        "GWT",
        "JSON",
        "XML",
        "DOM",
        "SAXHTML",
        "HTTP",
        "client",
        "API",
        "NetBeans",
        "Web",
        "Logic",
        "Ant",
        "Git",
        "Bitbucket",
        "Jr",
        "Java",
        "Developer",
        "Core",
        "Java",
        "Kesineni",
        "September",
        "May",
        "project",
        "Kesineni",
        "Travels",
        "bus",
        "service",
        "web",
        "application",
        "module",
        "customer",
        "bus",
        "tickets",
        "web",
        "application",
        "operations",
        "itinerary",
        "delay",
        "price",
        "variations",
        "timings",
        "duration",
        "journey",
        "web",
        "status",
        "reservation",
        "itinerary",
        "email",
        "business",
        "data",
        "Oracle",
        "database",
        "Responsibilities",
        "web",
        "application",
        "Servlets",
        "JSP",
        "JSTL",
        "Worked",
        "Java",
        "Standard",
        "Edition",
        "Exception",
        "Handling",
        "Multithreading",
        "File",
        "Handling",
        "File",
        "IO",
        "Collection",
        "Framework",
        "code",
        "Executors",
        "framework",
        "code",
        "priority",
        "thread",
        "threads",
        "code",
        "InterThread",
        "Communication",
        "threads",
        "Service",
        "Provider",
        "Threads",
        "User",
        "Threads",
        "exceptions",
        "Serialization",
        "process",
        "code",
        "Collection",
        "List",
        "Set",
        "Map",
        "frameworks",
        "traveler",
        "data",
        "database",
        "code",
        "Caches",
        "code",
        "Native",
        "Libraries",
        "methods",
        "C",
        "language",
        "Implemented",
        "Business",
        "Delegate",
        "Session",
        "Facade",
        "DAO",
        "Singleton",
        "Factory",
        "DTO",
        "Design",
        "Patterns",
        "Swing",
        "Java",
        "FX",
        "Frames",
        "user",
        "interfaces",
        "desktop",
        "applications",
        "batch",
        "processing",
        "JDBC",
        "Batch",
        "data",
        "database",
        "load",
        "Application",
        "Tables",
        "UI",
        "JSP",
        "HTML",
        "JavaScript",
        "user",
        "interface",
        "SQLdevelopment",
        "Joints",
        "Triggers",
        "Indexes",
        "Stored",
        "Procedures",
        "Views",
        "business",
        "logic",
        "SQL",
        "code",
        "procedures",
        "processes",
        "XML",
        "stream",
        "servlet",
        "GLANCE",
        "data",
        "Junit",
        "web",
        "application",
        "team",
        "Sr",
        "Developers",
        "JVM",
        "memory",
        "management",
        "code",
        "Object",
        "references",
        "Garbage",
        "collector",
        "methods",
        "SVN",
        "version",
        "control",
        "tool",
        "Environment",
        "Java",
        "J2EE",
        "Swing",
        "Java",
        "FX",
        "Linux",
        "HTML",
        "Batch",
        "Processing",
        "JavaScript",
        "Eclipse",
        "MS",
        "SQL",
        "Apache",
        "Tomcat",
        "SOA",
        "Architecture",
        "Gradle",
        "SVN",
        "Education",
        "Computer",
        "Science",
        "University",
        "College",
        "Engineering",
        "Skills",
        "Apache",
        "years",
        "Database",
        "years",
        "Design",
        "patterns",
        "years",
        "Eclipse",
        "years",
        "J2EE",
        "years",
        "Java",
        "years",
        "JUnit",
        "years",
        "Maven",
        "years",
        "MODEL",
        "VIEW",
        "years",
        "MODELVIEWCONTROLLER",
        "years",
        "MVC",
        "years",
        "Oracle",
        "years",
        "REST",
        "years",
        "SOAP",
        "years",
        "SQL",
        "years",
        "Subversion",
        "years",
        "SVN",
        "years",
        "years",
        "Web",
        "Services",
        "years",
        "XML",
        "years"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:04:31.883285",
    "resume_data": "Java Developer span lJavaspan span lDeveloperspan Java Developer Deutsche Bank Cary NC Around 9 years of IT experience in Design Development Support and Implementation of Web based applications using JAVAJ2EE Technologies Experienced in implementing Enterprise Application with each phase of software Development Life Cycle SDLC including Requirement gathering Analysis Design Reviews Coding Unit and Integration Testing Experience in developing Software applications using Core JAVAJ2EEand midlevel technologies such as Swing AWT Servlets JSP JSF JSTL JPA Filters EJB JMS and Web Services JAXRS and JAXWS Design Patterns Proficient in core Java concepts such as Collections Generics Multithreading and Serialization Expertise in all Spring Modules such as Spring Core Spring MVC Dependency Injection Spring AOP Spring Securty Spring JDBC Spring ORM Spring DAO and Spring Security Experienced in Struts framework Experience in Database persistence layer like Hibernate 4230 Experience with Java 18and Lambda Expression and Stream Functional methods Experience on a cloud platform and experience with Amazon S3 EC2 ElasticSearch VPC SQS RDS EBS SQS and LAMBDA Experience in a Monolithic web application as well as Microservices web applications and AWS cloud Experience on Containerization using Docker to achieve high scalability and high availability Experienced on Frontend technologies such as HTML CSS3 JavaScript Expertise in using SpringBoot to develop Restful controllers Service DAO classes and also Filter classes Security Working knowledge of PLSQL and databases like DB2 MySQL Server MS SQL Oracle DB and No SQL databases Apache Cassandra Experience in coding implementation unit testing and Performance Testing of various J2EE related projects Working Knowledge on Shell Scripting Experience in using version control systems like SVN and GIT Experience in bug tracking tools like JIRA Experience with TDD Test Driven Development using JUnit and Knowledge on BDD Behavior Driven Development Cucumber Experience in XML and related technologies Good working knowledge of Jenkins for CI Continuous Integration Maven for project builddeployment Log4j for logging and JUnit for the unit and integration testing Knowledge on Pivotal Gemfire Experience with IBM MQ and knowledge on Kafka for the distributed messaging systems Design and development of webbased applications using different Web and Application Servers such as Apache Tomcat WebLogic WebSphere JBoss Handson working experience with IDE tools like Eclipse Net Beans Spring Tool Suit and IntelliJ IDEA Authorized to work in the US for any employer Work Experience Java Developer Deutsche Bank Cary NC October 2017 to Present Deutsche Bank is a German global banking and financial services company The current project Galileo is on handling the different types of payments across 35 countries Most of the code is already existed for some countries So when we are implementing the same code to other new countries the existed source code is changed according to the financial rules specified to those countries and if those countries dont make particular type of payments then related channels or jobs Queues are removed from the code Responsibilities Requirement gathering from the Functional Analysts Business owners and analyze the business logic to be implemented Develop and add extra features to the application using EJB work flow Implement the code using various advance java concepts including Servlets JSP JNDI Web Services SOAP Working on ScrumAgile methodology using JIRA to manage the Sprint ActivitiesBacklogs Working with different Object Oriented Concepts like Inheritance Multithreading Exceptional Handling Working with various Design patterns like Singleton Factory Design patterns using EJB work flow implementation Working with Ibatis ORM tool to connect the java code to Database Oracle Working on PLSQL especially modifying or implementing the existed stored procedures Functions and Indexes Working with J2SE concepts includes Datastructures algorithms and Collections frameworkList MapSet Working with Web Logic12c Server in Deployment and Testing for the results Connect to the web logic using Linux commands Putty WinScp and perform the deployment actions Spring framework is implemented especially in configuring the beans and injecting the beans Dependency Injection Business rules of the banks are implemented using Drools Adding or deleting Queues from from the IBM MQ based on the requirement and country financial rules Working with various testing tools which are developed particularly for this project Code is controlled through SVN Multiple Databases are handled using Different DataSources in the project Used SOAP Web Services for secure extraction of client related data from database and to connect the application from UI to Java Backend Working on JSPs to map the requests to related java controller class Developed JasperReports based on business requirements and Prototyped PDF JasperReportsusing jasper assistant Team City is implemented in the project for the integration of the project components The application was tracked and logged using Log4J framework Writing new Unit tests or modifying the existed JUnit test cases and implement the Stub support using Mockitoframework Along with unit test manual tests are also performed on the application by creating scenarios Environment Java 18 J2EE Servlets JSP EJB JSP Maven IBM MQ Web Logic 12c Drools Team City JUnit Mockito HTML SOAP OraclePLSQL SharePoint Confluence and JIRA JNDI Ibatis Linux Spring Jasper Reports Java Developer Freddie Mac McLean VA January 2017 to September 2017 Freddie Mac is a Federal Home Loan Mortgage Corporation Freddie Mac has been developing the portal in a way that it provides the enough information to all kinds of users including Home Sellers and Buyers Real estate professionals Contractors Retail investors and Direct clients The portal is also available for the parties and customers to check their corresponding credit score equity and debt Responsibilities Conducted analysis of organizational needs and goals for the development and implementation of the application systems by involving with business personnel Used Spring Boot for developing individual component Micro services Worked on AWS cloud resources which includes launching maintaining and troubleshooting of EC2 instances and S3 buckets Elastic Load Balancer ELB Elastic Search and Relational Database Services RDS Worked on Creating AWS Route 53 to route traffic between different regions Created AWS Security Groups for deploying and Configuring AWS EC2 instances Developed Java API to interact with the Amazon SQS used for sending bulk emails Developed the micro services using Spring Sleuth Config Server and NETFLIX OSS Eureka Hystrix and Zuul Worked on containerization using tools like Docker and Setup Docker on Linux and configured Jenkins to run underDockerhost Writing the code using Lambda Expression andStreamAPIon JDK 8 Java 18 Worked on JDK 8 to write the code on functional interfaces default methods in interfaces and filters using Stream MultiThread Pooling is implemented by Executors Frame work ExcutorService Interface Synchronized threads are developed for the thread SafetyGarbage Collection is also implemented using daemon threads Worked on implementing and consuming RESTful web services using JAXRS annotations Developed OAuth2 Security on RESTful web services for the log in page and for the Payment Process Implemented RESTful services to consume as well as produce JSON and XML web services in the application Developed Clientside code is integrated with REST and processed the JSON response Worked with Hibernate framework to interact with the backend servers Developed POJOs for the Spring Batch to process large volumes of records and Worked on Spring XD Worked on CQL Cassandra Query Language using Cassandra Cluster Model Used Oracle PLSQL database and wrote HQL query to access the data from the database Used Annotations in Hibernate mapping Involved in ETL functions from a relational database to Cassandra Applied Object Oriented Programming OOP concepts including UML use cases class diagrams and interaction diagrams Used Apache Camel to implement Java Message Service JMS API for sending and receiving email notifications to the employee about notifications to their portal Java and Spring routing rules are Specified in XML to define for the Apache Camel Spring Security was implemented in the project Interacted with UI team in developing GUI using HTML5 JavaScript JSP JSON Presentation layer was developed using JSP and JavaScript Setting up the JENKINS continuous build path for Continuous Integration Worked with DevOps team in continuous integration Worked with the JIRA tool for Quality Center bug tracking Involved in the planning process of iterations under the Agile Scrum methodology Involved in Unit Integration and Performance Testing for the new enhancements Test cases were created using TestNG and previous test cases were transformed from Junit to TestNG Environment Java 18 J2EE UML Spring BOOT Spring MVC Spring Security Spring Batch JSP GemFire Apache Camel JMS AJAX Angular JS JSON Servlet JENKINS TestNG Agile Scrum JIRA Tomcat Application Server Docker XML HQL Hibernate IntelliJ IDEA Core Java Multithreading Rest API JAXRS Web services HTML5 JavaScript CSS3 Oracle database ETL Apache Cassandra GIT OOD Unix Linux Shell Scripting Java Developer BCBS Insurance San Francisco CA April 2015 to December 2016 Developed an online application that enables clients to access review and update their products purchased from BCBS Insurance The primary users of this application are BCBS insurance policy owners agents and customer service representatives The application provides an integrated environment for account management policy changesrenewals monthly premium dues alerts claims processing status Responsibilities Designed and developed Online Application using Spring MVC Framework and Spring Core Developed and enhanced the application using Java and J2EE Servlets JSP JDBC JNDI EJB Web Services RESTful Web Services HTML JSON XML Maven Log4J and MySQL DB The project was developed agile software development methodology Developed the code using Spring MVC dispatcher servlet to transfer on to different Controller classes components Wrote RestController with respect to RESTfulstandards in Spring MVC to connect model with view Tested Rest APIs in Spring Controller at the backend for JSON data using Postman Involved in working with J2EE Design Patterns Singleton Session Faade and DAO Involved in Object Modelling Techniques with Manager and clients Involved in creating Use Cases Class Diagrams and Sequence Diagrams using UML Worked with DevOps team in deploying the project on AWS Developed API for using AWS Lambda to manage the servers and run the code in AWS Designed configured and managed publicprivate cloud infrastructures using Amazon Web Services AWS which includes VPC EC2 ElasticSearch S3 Cloud Front ELB and Elastic Beanstalk Worked on Hibernate ORM Created Hibernate XML files and Java class files to map the object relation mappings Worked on Hibernate caching using Ehcache Used Hibernate Query Language HQL and Custom Queries to query data from Oracle database in DAO Used several Hibernate techniques such as lazy loading batch fetching and eager fetching to improve application performance Used CRUD operations using JPA query language Worked on messaging frameworks like Kafka tuning optimization meeting nonfunctional requirements and SLA mentioned latencies Migrated messaging system from JMS to Kafka Developed and maintained the Application Context files for the service layer using Spring Framework Used SOAPWSDL 20 Web Services for secure extraction of client related data from database Used RESTful in conjunction with Ajax calls using JAXRS and Jersey MultiThreading and Caching were used to improve the performance and user experience Implemented Marshalling and Unmarshalling using JAXB Developed JSPs for the presentation layer AJAX calls implemented for form validation and other interactive features and created HTML navigation menu that is role based menu items changes dynamically derived from the database in the form of XML Involved in Performance tuning of the application and documentation of troubleshooting Developed JasperReports based on business requirements and Prototyped PDF JasperReportsusing jasper assistant Involved in CICD using Jenkins and uDeploy Used SVN for version control Created and implemented JBosscentric architecture for entire environment and Created automated deployment scrips for JBossservers Created multihomed JBoss instances multiple clients on a single server to maximize hardware resources over a VM Integrated JBossmessaging into JBoss423 and upgraded large multinational clients to messaging Applied security practices and fixes to JBoss servers and Apache to be complaint with PCI regulations The application was logged using Log4J and exceptions were logged into the database using JDBC Used JUnit for testing the entire application rectified performance bottlenecks and eliminated critical bugs Created numerous test cases using JUnit framework and Mockito for testing modules Environment Java 17 J2EE JSP JDBC JNDI EJB UML Spring 30 Spring MVCAWS JasperReports OMT Apache Kafka HTML5Hibernate 4x Ehcache MongoDB JSP AJAX Oracle 11g Eclipse Maven Maven Script SVN Jenkins uDeploy XML 1x JAXB 2x Log4J JUnit Mockito JBoss SOAP Web Services Restful Postman WSDL 20 JAXRS JAXWS Jr Java Developer Ford Dearborn MI October 2013 to March 2015 RCS is the Retail Contract System which is used by business people in the Fordowned showrooms and other FS dealers who sell and lease cars to customers RCS is the major application where all the contract and leasing terms are calculated and printed out to customers before the final deal on a vehicle is made Both new and used vehicle taxes and description would be available for dealers and the information on the existing customers would be available Responsibilities Involved in the deployment of full Software Development Life Cycle SDLC of the tracking systems Requirement gathering Conceptual design Analysis Detail design Development System Testing and User Acceptance Used Agile methodology and effectively took part in Scrum gatherings to deliver quality deliverables within time Designed and developed all the user interfaces using JSP Servlets and Spring framework Developed the DAO layer using Hibernate and used the caching system for realtime performance Designed and developed various modules of the application with J2EE design architecture Worked on object oriented analysis and design using UML uses cases domain model Activity diagrams sequence diagrams class diagrams reports generation reverse engineering with tool Rational Rose Implemented JMS API for the communication Used Spring IOC for dependency injection and Spring AOP for crosscutting concerns like logging security transaction management Developed the application for a new Spring batch based system to process transactions Involved in creating and extracting data from database using HQL queries PLSQL Stored procedures triggers and packages on Oracle database using Toad Software Developed Web Service provider methods bottomup approach using WSDL and RESTfulfor transferring data between the Applications Used AJAX for developing asynchronous web applications on the client side Developed action classes and action Forms performed validations using commons custom validator and Struts clientside JavaScript validation Used Shell Scripting for file manipulation program execution Used JDBC for accessing database DB2 to track all credit aspects of accounts which include financial review details security held actuarial exposure data and receivables Wrote JSP Servlets classes to generate dynamic HTML pages Adopted Spring framework for the development of the project Involved in fixing bugs and unit testing with test cases usingJUnit framework Used Maven for create the project archetype and build the interface modules for customizing WAR and EAR Files Used Spring ORM module for integration with Hibernate for persistence layer Developed Session Beans and Entity Beans JPA Involved in writing Hibernate Query Language HQL for persistence layer Used Splunk for application logging and debugging Used GitHub as Distributed version control system and branching for creating a new feature and making bug fixes Used Spring ORM module for integration with Hibernate for persistence layer Environment Java 17 JSP JMS UML HTML AJAX Servlets Spring Batch Hibernate EJB Session Beans IBM DB2 SOAP based Web Services Splunk WebSphere JNDI Maven GitHub JPA Oracle Windows XP UNIX Shell Scripting Eclipse Java Developer Model N June 2011 to August 2013 Model N Technology develops transparent relationships with clients and partners and provides them with custom innovative software solutions for banking manufacturing medical retail wholesale transportation etc Responsibilities Involved in understanding requirements Software Requirements Specification SRS and translating them into Detailed Function Specification document DFS for IDS Worked with technologies including SpringSecurity DAO AOP JPA Restful Web services Servlets JSP JSON XML and HTML Developed presentation layer using Struts framework and MVC design paradigm Extensive use of Struts Framework for Controller components and view components Involved in writing the exception and validation classes using Struts validation rules Used JPA Entity Manager and Spring JDBC templates for DAO layer Developed the application using Eclipse IDE and spring tool suite Architected Designed and implemented few of the key REST APIs which facilitated a huge data flow Designed and implemented the database startup scripts Used SAX DOM Parsers and XPath for parsing XML Identify the older modules code stack that can be reusable with minimal changes and define the interfaces that allow the communication with those modules Used Git Bitbucket for Design Development of Project Build System and version control Worked on preparing test cases and executing unit testing and Integration testing Involved in developing Presentation layer using JavaScript Used GWT to maintain JavaScript Applications Used ANT to build run and create JARs and WAR files Worked on JasperReport to report in various forms and used iReporteditor for the design of the Jasper template Worked on NetBeans IDE and Web Logic Server 11gR Worked with the automation team to understand the selenium scripts and review the code run the tests and review the results and provide inputs to the team Environment Java Spring JPA Spring AOP Struts JasperReports Restful Web services Servlets JSP JavaScript GWT JSON XML DOM SAXHTML HTTP client API NetBeans Web Logic Ant Git and Bitbucket Jr Java Developer Core Java Kesineni Travels September 2009 to May 2011 The project is on Kesineni Travels bus service web application This module allows the customer to book their bus tickets through a web application Various operations relating to their itinerary such as expediting canceling delay price variations based on timings duration of the journey can be seen on the web Apart from that the status of their reservation and itinerary is sent to their email The dynamic business data is retrieved from the Oracle database Responsibilities Developed the web application using Servlets JSP and JSTL Worked on Java Standard Edition includes Exception Handling Multithreading File Handling File IO and Collection Framework Writing the code using Executors framework on multithreading Writing the code to set the priority of each thread and Schedule the threads in multithreading Writing the code for InterThread Communication among multiple threads Implemented Service Provider Threads for the User Threads Handling the exceptions in Serialization process Writing the code on Collection List Set Map frameworks to persist the traveler data on the database Writing the code on Caches Implemented the code using Native Libraries and Native methods C language Implemented Business Delegate Session Facade DAO Singleton Factory and DTO Design Patterns Implemented Swing and Java FX Frames in developing user interfaces for inside desktop applications Involved in batch processing using JDBC Batch to extract data from database and load into corresponding Application Tables Designed UI using JSP HTML and validate with JavaScript for providing the user interface Involved in SQLdevelopment and worked on Joints Triggers Indexes Stored Procedures Views and involved in incorporating business logic in SQL code stored procedures Worked on converting the insert and update processes to utilize an XML stream and calling a servlet to save GLANCE data to database Used Junit to test the web application internally Involved in the team with Sr Developers to write JVM memory management code using different Object references and Garbage collector methods Used SVN version control tool Environment Java 7 J2EE Swing and Java FX Linux HTML Batch Processing JavaScript Eclipse MS SQL Apache Tomcat SOA Architecture Gradle SVN Education BE in Computer Science University College of Engineering Skills Apache 4 years Database 9 years Design patterns 5 years Eclipse 7 years J2EE 7 years Java 9 years JUnit 5 years Maven 4 years MODEL VIEW CONTROLLER 4 years MODELVIEWCONTROLLER 4 years MVC 4 years Oracle 7 years REST 4 years SOAP 4 years SQL 5 years Subversion 5 years SVN 5 years Testing 7 years Web Services 7 years XML 6 years",
    "unique_id": "38682868-983d-47cf-8398-d0a5966ba163"
}