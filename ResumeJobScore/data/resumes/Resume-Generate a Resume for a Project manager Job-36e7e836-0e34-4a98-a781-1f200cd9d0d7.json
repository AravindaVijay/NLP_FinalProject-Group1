{
    "clean_data": "Software Engineer Python Developer Software Engineer span lPythonspan span lDeveloperspan Data Engineer Python New York NY Around 4 years of experience includes Internship in Design Development Implementation of Python Flask Django JavaScript and clientserver technologybased applications A Graduate student specialized in Computer Technology from Harrisburg University Experience in working with Relational DB RDBMS like SQLite MYSQL PostgreSQL and NoSQL database MongoDB for database connectivity Used Python for data analytics data wrangling and extracting data using Pandas Pyexcel NumPy and SciPy Familiar with JSON based REST Web services and Amazon Web services Implemented responsive web pages using HTML CSS Bootstrap and XMLJSON Experienced with full software development lifecycle SDLC architecting scalable Platforms objectoriented programming database design and agile methodologies Extensive experience in implementation of the version control software like Git Good knowledge of web services with protocols SOAP and REST Excellent working knowledge in UNIX and Linux shell environments using command line utilities Assisted in Developing testing plans and procedures for Unit testingTest Driven Development system test and Load testing Hands on Amazon Web Services AWSfor creating and managing EC2 Elastic Map Reduce Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic File system RDS Cloud Watch Cloud Trail IAM Extensively worked on Jenkins for continuous integration and setup endtoend automation for all build and deployments Indepth understanding of the principles and best practices of Software Configuration Management SCM in agile and SCRUM methodologies Experienced with Using python OAuth and Security Packages for Creating Abstraction Layer Experienced in following PEP8 coding standards across various projects Experience with different IDEs like Sublime Text Jet Brains PyCharm and Visual Studio Ability to learn and adapt quickly to the emerging new technologies and paradigms Efficient team member with excellent worktime management skills communications and Interpersonal Skills ability to work under strict deadlines Work Experience Software Engineer Python Developer Capital One Plano TX February 2017 to November 2018 Project1 Flagship is a data product built completely inhouse that reimagines the way we run our Marketing Campaigns process via AWS Cloud an easy to use GUI and integration with Salesforce Marketing Cloud while staying true to our wellmanaged agenda which includes locked down suppressions reusable components seamless auditability and approval workflows It is true agile operating model and speed to market was reduced by 75 and the new campaigns build up time has been cut off by 80 Handoffs between multiple teams have been eliminated resulting in increased accuracy and faster execution time Responsibilities Worked with a team of 5 people in designing implementing and delivering a complete CRM analytic solution in AWS Developed Python based API RESTful Web Service to insert delete and update campaign rules in JOB Config DB using Flask SQLAlchemy and PostgreSQL Deployed all the APIs on AWS EC2 Used Git version control for code sharing in order to save the committed changes that are made to the project files by using different commands Developed and designed schema for Job Config DB to maintain and store business rules for all campaigns and the data from the DB is used for generating workflow for spark execution framework Contributed for Quantum Spark Execution FrameworkScala Classes which is an innersourced big data framework that enables users to easily ingest process and act on batch and realtime data using open source technologies Automated Testing Framework has been built to comply with CICD pipeline using Nose Test and PyTest Python code has been tested for quality using PyLint Worked on readingwriting Avro Parquet and ORC data format files from AWS S3 to AWS EMR for processing using Quantum Spark Execution Framework Created scripts on EMR to pull the scheme for JOB Config DB executed various scripts as required in sequence with exception handling for processing the input data and stored the required outputs on to AWS S3 Experienced in communicating with business users other technical teams and management to collect requirements describe software product features and technical designs Involved in daily SCRUM meetings to discuss the developmentprogress and was active in making scrum meetings more productive Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Project2 Airflow DAGger open source from Airbnb platform to programmatically author schedule and monitor workflows Use airflow to author workflows as directed acyclic graphs DAGs of tasks The Airflow scheduler executes tasks on an array of workers while following the specified dependencies Implemented DAG Level Access Control DLAC Limit access to views within Airflow UI which allows the DAG to declare association between DAG roles and usersgroups Integrated OAuth Single Sign on SSO Authentication to Airflow DAGger Performed Data Analysis on customer transaction records using big data tools such as pig and hive Worked on evaluation and analysis of Hadoop cluster and different big data analytic tools like HBase Developed MapReduce programs to perform data filtering for unstructured data Implemented Self Service Dag deployment model for DAGger using flask Rest AP endpoints available through the webserver and integrated with Jenkins GITHUB to deploy Dags from GitHub to AMAZON EC2 and EFS Worked on building and deploying Dag code through Jenkins Set up Jenkins jobs and build jobs to provide continuous automated builds based on polling the GIT source control system using Jenkins GIT and UnitTest Worked on integrating GIT into the continuous Integration CI environment along with Jenkins Established branching and merging with GIT Configured Celery to Scale out number of workers and setup installed and setup RabbitMQ as broker to Execute job in Workers that wait for messages from RabbitMQ and execute the tasks Developed and designed schema for DAGger to maintain and store DAG roles and usersgroups and the data from the DB is used for implementing Abstraction layer Project3 I was Responsible for building the Navigator Clientside Web Application Used python Flask framework along with markup languages like HTML to create userfriendly web pages Maintain and Improve Website Optimize Application for maximum speed and collaborate with web designers to improve Usability Developed Views and Templates with Flask view controller and template language to create a userfriendly website interface Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Created APIs database Model and Views Utilization Python in order to build responsive web page application Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using UnitTest Module Worked on Jenkins continuous integration tool for deployment of project Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Worked on front end frame works like CSS Bootstrap for development of Web application Used python scripts to update content in the database and manipulate files Worked on frontend and backend modules using Python on Django Web Framework Implemented and enhanced CRUD operations for the applications using the MVC Model View Controller architecture of Django framework and Python conducting code reviews Environment Python 3x Flask Django Html CSS Bootstrap RESTAPI Git GitHub MySQL PostgreSQL AWS Services PyTest UnitTest Jenkins Celery RabbitMQ OAUTH SSO Pylint Agile Jira Jr Python Developer Corus Soft Inc June 2016 to January 2017 Web APP Services Created entire application using Python Django MySQL and Linux and developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created UI using JavaScript and HTML5CSS and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Used Flask framework in developing web applications to implement the model view control architecture Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL database package Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Utilized PyUnit the Python unit test framework for testing the functionality of the application Used GITHUB for the version control Environment PYTHON HTML XHTML CSS JavaScript Eclipse MS SQL Windows OS PYTHON Programmer Analyst Ardent Technologies Hyderabad Telangana January 2014 to December 2014 Responsibilities Implemented Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity PySide Pickle Pandas data frame network urllib2 Develop programs to automate the testing of controller in CICD environment using Python Bash script Git and Linux command line Developed Python based API RESTful Web Service to track the events and perform analysis using Django Designed and developed Application based on the Django MVC Framework using MVC design pattern Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing configuration management packaging disaster recovery and delivery systems based on Python Implemented visualization using Elastic search Kibana and Logstash on Apache server Used Redis cache for storing used info and propagate the changes using RabbitMQ Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Virtualized the servers using the Docker for the test environments and devenvironments using Docker containers Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Project during Masters Web APP Developed rich user interface using CSS HTML JavaScript and jQuery Wrote PYTHON modules to extractload asset data from the MySQL source database Created database using MySQL wrote several queries to extractstore data from database Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL database package Integrated applications with designing database architecture and server scripting studying establishing Good knowledge in maintaining various version controls systems such as GIT SVN CVN and Source Tree Environment PYTHON HTML XHTML CSS JavaScript Eclipse MS SQL Windows OS Education Master of Science in Computer Technology in Computer Technology Harrisburg university Harrisburg PA February 2015 to October 2016 Technology JNT University September 2010 to May 2014 Skills CSS 3 years database 3 years Django 3 years Git 3 years HTML 3 years Embedded Additional Information TECHNICAL SKILLS Programming Languages Python JavaScript JSON Bootstrap Apex HTML CSS Frameworks Flask Django AWS Amazon EC2 Amazon S3 Amazon EMR AWS EFS Amazon RDS Operating System Mac OS X Unix Linux Windows DatabasesDatabase tools MySQL PostgreSQL MongoDB Teradata SQLite Version Controls Git GitHub Gitlab Web Services REST Web services MS Office Tools Outlook Excel PowerPoint MS Access Word Build Integration Jenkins Project Management Agile Jira SCRUM IDE PyCharm Subline2",
    "entities": [
        "CSS HTML JavaScript",
        "Implemented DAG Level Access Control DLAC Limit",
        "Test Driven Development TDD",
        "GUI",
        "New York",
        "Software Configuration Management SCM",
        "Project during Masters Web APP Developed",
        "UNIX",
        "Agile Software Methodology",
        "jQuery Wrote",
        "Pandas Pyexcel NumPy",
        "Model and Views Utilization Python",
        "Amazon Web Services AWS",
        "TestDriven Development TDD",
        "Indepth",
        "Hadoop",
        "DAGger",
        "jQuery Created",
        "OAuth",
        "Technology JNT University",
        "Mesos Migrated the Django",
        "Usability Developed Views",
        "Used EC2 Container Service",
        "the Django MVC Framework",
        "Amazon",
        "Developer Capital One Plano",
        "Computer Technology Harrisburg",
        "Automated Testing Framework",
        "Graduate",
        "Python",
        "Airbnb",
        "Developed",
        "Internship in Design Development Implementation of Python Flask Django JavaScript",
        "Jenkins",
        "CSS Bootstrap",
        "AWS S3",
        "Improve Website Optimize Application",
        "Git",
        "Amazon EMR AWS",
        "Embedded Additional Information TECHNICAL SKILLS Programming Languages Python JavaScript",
        "API RESTful Web Service",
        "Linux",
        "Quantum Spark Execution",
        "Airflow",
        "AWS S3 Experienced",
        "Flask",
        "Dags",
        "ORC",
        "UnitTest Worked",
        "Skills CSS",
        "GITHUB",
        "PEP8",
        "Refactored",
        "Harrisburg",
        "HerokuJenkins",
        "MVC",
        "GIT",
        "Python Bash",
        "AWS Developed Python",
        "SNS Worked",
        "HTML CSS JavaScript",
        "Airflow UI",
        "Visual Studio Ability",
        "Computer Technology",
        "Salesforce Marketing Cloud",
        "GIT Configured Celery",
        "Nose Test",
        "FrameworkScala Classes",
        "Integration CI",
        "UnitTest Module Worked",
        "Performed Unit",
        "SQL",
        "GitHub",
        "HBase Developed MapReduce",
        "lPythonspan",
        "SQLite MYSQL PostgreSQL",
        "Interpersonal Skills",
        "Scale",
        "Integration Testing GUI",
        "Developed Python",
        "CICD",
        "GIT SVN",
        "Python Implemented",
        "DAG",
        "Quantum Spark Execution Framework Created",
        "Implemented Self Service Dag",
        "SQLite",
        "CRUD",
        "Performed",
        "JavaScript",
        "Python Bootstrap CSS",
        "AMAZON",
        "Utilized PyUnit",
        "lDeveloperspan Data Engineer Python",
        "APP Services Created",
        "REST",
        "Jenkins Set",
        "Harrisburg University",
        "NoSQL",
        "Elastic Loadbalancers Elastic Container Service",
        "Teradata SQLite",
        "Application",
        "PyLint Worked",
        "Science in Computer Technology",
        "HTML CSS Bootstrap",
        "Bash Created"
    ],
    "experience": "Experience in working with Relational DB RDBMS like SQLite MYSQL PostgreSQL and NoSQL database MongoDB for database connectivity Used Python for data analytics data wrangling and extracting data using Pandas Pyexcel NumPy and SciPy Familiar with JSON based REST Web services and Amazon Web services Implemented responsive web pages using HTML CSS Bootstrap and XMLJSON Experienced with full software development lifecycle SDLC architecting scalable Platforms objectoriented programming database design and agile methodologies Extensive experience in implementation of the version control software like Git Good knowledge of web services with protocols SOAP and REST Excellent working knowledge in UNIX and Linux shell environments using command line utilities Assisted in Developing testing plans and procedures for Unit testingTest Driven Development system test and Load testing Hands on Amazon Web Services AWSfor creating and managing EC2 Elastic Map Reduce Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic File system RDS Cloud Watch Cloud Trail IAM Extensively worked on Jenkins for continuous integration and setup endtoend automation for all build and deployments Indepth understanding of the principles and best practices of Software Configuration Management SCM in agile and SCRUM methodologies Experienced with Using python OAuth and Security Packages for Creating Abstraction Layer Experienced in following PEP8 coding standards across various projects Experience with different IDEs like Sublime Text Jet Brains PyCharm and Visual Studio Ability to learn and adapt quickly to the emerging new technologies and paradigms Efficient team member with excellent worktime management skills communications and Interpersonal Skills ability to work under strict deadlines Work Experience Software Engineer Python Developer Capital One Plano TX February 2017 to November 2018 Project1 Flagship is a data product built completely inhouse that reimagines the way we run our Marketing Campaigns process via AWS Cloud an easy to use GUI and integration with Salesforce Marketing Cloud while staying true to our wellmanaged agenda which includes locked down suppressions reusable components seamless auditability and approval workflows It is true agile operating model and speed to market was reduced by 75 and the new campaigns build up time has been cut off by 80 Handoffs between multiple teams have been eliminated resulting in increased accuracy and faster execution time Responsibilities Worked with a team of 5 people in designing implementing and delivering a complete CRM analytic solution in AWS Developed Python based API RESTful Web Service to insert delete and update campaign rules in JOB Config DB using Flask SQLAlchemy and PostgreSQL Deployed all the APIs on AWS EC2 Used Git version control for code sharing in order to save the committed changes that are made to the project files by using different commands Developed and designed schema for Job Config DB to maintain and store business rules for all campaigns and the data from the DB is used for generating workflow for spark execution framework Contributed for Quantum Spark Execution FrameworkScala Classes which is an innersourced big data framework that enables users to easily ingest process and act on batch and realtime data using open source technologies Automated Testing Framework has been built to comply with CICD pipeline using Nose Test and PyTest Python code has been tested for quality using PyLint Worked on readingwriting Avro Parquet and ORC data format files from AWS S3 to AWS EMR for processing using Quantum Spark Execution Framework Created scripts on EMR to pull the scheme for JOB Config DB executed various scripts as required in sequence with exception handling for processing the input data and stored the required outputs on to AWS S3 Experienced in communicating with business users other technical teams and management to collect requirements describe software product features and technical designs Involved in daily SCRUM meetings to discuss the developmentprogress and was active in making scrum meetings more productive Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Project2 Airflow DAGger open source from Airbnb platform to programmatically author schedule and monitor workflows Use airflow to author workflows as directed acyclic graphs DAGs of tasks The Airflow scheduler executes tasks on an array of workers while following the specified dependencies Implemented DAG Level Access Control DLAC Limit access to views within Airflow UI which allows the DAG to declare association between DAG roles and usersgroups Integrated OAuth Single Sign on SSO Authentication to Airflow DAGger Performed Data Analysis on customer transaction records using big data tools such as pig and hive Worked on evaluation and analysis of Hadoop cluster and different big data analytic tools like HBase Developed MapReduce programs to perform data filtering for unstructured data Implemented Self Service Dag deployment model for DAGger using flask Rest AP endpoints available through the webserver and integrated with Jenkins GITHUB to deploy Dags from GitHub to AMAZON EC2 and EFS Worked on building and deploying Dag code through Jenkins Set up Jenkins jobs and build jobs to provide continuous automated builds based on polling the GIT source control system using Jenkins GIT and UnitTest Worked on integrating GIT into the continuous Integration CI environment along with Jenkins Established branching and merging with GIT Configured Celery to Scale out number of workers and setup installed and setup RabbitMQ as broker to Execute job in Workers that wait for messages from RabbitMQ and execute the tasks Developed and designed schema for DAGger to maintain and store DAG roles and usersgroups and the data from the DB is used for implementing Abstraction layer Project3 I was Responsible for building the Navigator Clientside Web Application Used python Flask framework along with markup languages like HTML to create userfriendly web pages Maintain and Improve Website Optimize Application for maximum speed and collaborate with web designers to improve Usability Developed Views and Templates with Flask view controller and template language to create a userfriendly website interface Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Created APIs database Model and Views Utilization Python in order to build responsive web page application Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using UnitTest Module Worked on Jenkins continuous integration tool for deployment of project Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Worked on front end frame works like CSS Bootstrap for development of Web application Used python scripts to update content in the database and manipulate files Worked on frontend and backend modules using Python on Django Web Framework Implemented and enhanced CRUD operations for the applications using the MVC Model View Controller architecture of Django framework and Python conducting code reviews Environment Python 3x Flask Django Html CSS Bootstrap RESTAPI Git GitHub MySQL PostgreSQL AWS Services PyTest UnitTest Jenkins Celery RabbitMQ OAUTH SSO Pylint Agile Jira Jr Python Developer Corus Soft Inc June 2016 to January 2017 Web APP Services Created entire application using Python Django MySQL and Linux and developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created UI using JavaScript and HTML5CSS and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Used Flask framework in developing web applications to implement the model view control architecture Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL database package Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Utilized PyUnit the Python unit test framework for testing the functionality of the application Used GITHUB for the version control Environment PYTHON HTML XHTML CSS JavaScript Eclipse MS SQL Windows OS PYTHON Programmer Analyst Ardent Technologies Hyderabad Telangana January 2014 to December 2014 Responsibilities Implemented Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity PySide Pickle Pandas data frame network urllib2 Develop programs to automate the testing of controller in CICD environment using Python Bash script Git and Linux command line Developed Python based API RESTful Web Service to track the events and perform analysis using Django Designed and developed Application based on the Django MVC Framework using MVC design pattern Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing configuration management packaging disaster recovery and delivery systems based on Python Implemented visualization using Elastic search Kibana and Logstash on Apache server Used Redis cache for storing used info and propagate the changes using RabbitMQ Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Virtualized the servers using the Docker for the test environments and devenvironments using Docker containers Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Project during Masters Web APP Developed rich user interface using CSS HTML JavaScript and jQuery Wrote PYTHON modules to extractload asset data from the MySQL source database Created database using MySQL wrote several queries to extractstore data from database Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL database package Integrated applications with designing database architecture and server scripting studying establishing Good knowledge in maintaining various version controls systems such as GIT SVN CVN and Source Tree Environment PYTHON HTML XHTML CSS JavaScript Eclipse MS SQL Windows OS Education Master of Science in Computer Technology in Computer Technology Harrisburg university Harrisburg PA February 2015 to October 2016 Technology JNT University September 2010 to May 2014 Skills CSS 3 years database 3 years Django 3 years Git 3 years HTML 3 years Embedded Additional Information TECHNICAL SKILLS Programming Languages Python JavaScript JSON Bootstrap Apex HTML CSS Frameworks Flask Django AWS Amazon EC2 Amazon S3 Amazon EMR AWS EFS Amazon RDS Operating System Mac OS X Unix Linux Windows DatabasesDatabase tools MySQL PostgreSQL MongoDB Teradata SQLite Version Controls Git GitHub Gitlab Web Services REST Web services MS Office Tools Outlook Excel PowerPoint MS Access Word Build Integration Jenkins Project Management Agile Jira SCRUM IDE PyCharm Subline2",
    "extracted_keywords": [
        "Software",
        "Engineer",
        "Python",
        "Developer",
        "Software",
        "Engineer",
        "span",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Data",
        "Engineer",
        "Python",
        "New",
        "York",
        "NY",
        "years",
        "experience",
        "Internship",
        "Design",
        "Development",
        "Implementation",
        "Python",
        "Flask",
        "Django",
        "JavaScript",
        "clientserver",
        "applications",
        "Graduate",
        "student",
        "Computer",
        "Technology",
        "Harrisburg",
        "University",
        "Experience",
        "Relational",
        "DB",
        "RDBMS",
        "MYSQL",
        "PostgreSQL",
        "NoSQL",
        "database",
        "MongoDB",
        "database",
        "connectivity",
        "Python",
        "data",
        "analytics",
        "data",
        "data",
        "Pandas",
        "Pyexcel",
        "NumPy",
        "SciPy",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "web",
        "pages",
        "HTML",
        "CSS",
        "Bootstrap",
        "XMLJSON",
        "software",
        "development",
        "lifecycle",
        "SDLC",
        "Platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "experience",
        "implementation",
        "version",
        "control",
        "software",
        "Git",
        "Good",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "Excellent",
        "knowledge",
        "UNIX",
        "Linux",
        "shell",
        "environments",
        "command",
        "line",
        "utilities",
        "testing",
        "plans",
        "procedures",
        "Unit",
        "Development",
        "system",
        "test",
        "Load",
        "Hands",
        "Amazon",
        "Web",
        "Services",
        "AWSfor",
        "EC2",
        "Elastic",
        "Map",
        "Elastic",
        "Loadbalancers",
        "Elastic",
        "Container",
        "Service",
        "Docker",
        "Containers",
        "S3",
        "Elastic",
        "File",
        "system",
        "RDS",
        "Cloud",
        "Cloud",
        "Trail",
        "IAM",
        "Jenkins",
        "integration",
        "setup",
        "automation",
        "build",
        "deployments",
        "understanding",
        "principles",
        "practices",
        "Software",
        "Configuration",
        "Management",
        "SCM",
        "methodologies",
        "python",
        "OAuth",
        "Security",
        "Packages",
        "Abstraction",
        "Layer",
        "PEP8",
        "standards",
        "projects",
        "IDEs",
        "Sublime",
        "Text",
        "Jet",
        "Brains",
        "PyCharm",
        "Visual",
        "Studio",
        "Ability",
        "technologies",
        "team",
        "member",
        "worktime",
        "management",
        "skills",
        "communications",
        "Interpersonal",
        "Skills",
        "ability",
        "deadlines",
        "Work",
        "Experience",
        "Software",
        "Engineer",
        "Python",
        "Developer",
        "Capital",
        "Plano",
        "TX",
        "February",
        "November",
        "Project1",
        "Flagship",
        "data",
        "product",
        "inhouse",
        "way",
        "Marketing",
        "Campaigns",
        "process",
        "AWS",
        "Cloud",
        "easy",
        "GUI",
        "integration",
        "Salesforce",
        "Marketing",
        "Cloud",
        "agenda",
        "suppressions",
        "components",
        "auditability",
        "approval",
        "workflows",
        "operating",
        "model",
        "speed",
        "market",
        "campaigns",
        "time",
        "Handoffs",
        "teams",
        "accuracy",
        "execution",
        "time",
        "Responsibilities",
        "team",
        "people",
        "CRM",
        "solution",
        "AWS",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "campaign",
        "rules",
        "JOB",
        "Config",
        "DB",
        "Flask",
        "SQLAlchemy",
        "PostgreSQL",
        "APIs",
        "AWS",
        "EC2",
        "Git",
        "version",
        "control",
        "code",
        "sharing",
        "order",
        "changes",
        "project",
        "files",
        "commands",
        "schema",
        "Job",
        "Config",
        "DB",
        "store",
        "business",
        "rules",
        "campaigns",
        "data",
        "DB",
        "workflow",
        "spark",
        "execution",
        "framework",
        "Contributed",
        "Quantum",
        "Spark",
        "Execution",
        "FrameworkScala",
        "Classes",
        "data",
        "framework",
        "users",
        "process",
        "batch",
        "data",
        "source",
        "technologies",
        "Automated",
        "Testing",
        "Framework",
        "CICD",
        "pipeline",
        "Nose",
        "Test",
        "PyTest",
        "Python",
        "code",
        "quality",
        "PyLint",
        "Worked",
        "Avro",
        "Parquet",
        "ORC",
        "data",
        "format",
        "AWS",
        "S3",
        "AWS",
        "EMR",
        "processing",
        "Quantum",
        "Spark",
        "Execution",
        "Framework",
        "scripts",
        "EMR",
        "scheme",
        "JOB",
        "Config",
        "DB",
        "scripts",
        "sequence",
        "exception",
        "input",
        "data",
        "outputs",
        "AWS",
        "S3",
        "business",
        "users",
        "teams",
        "management",
        "requirements",
        "software",
        "product",
        "features",
        "designs",
        "SCRUM",
        "meetings",
        "developmentprogress",
        "scrum",
        "meetings",
        "Hands",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "provisioning",
        "knowledge",
        "AWS",
        "services",
        "EC2",
        "Elastic",
        "Loadbalancers",
        "Elastic",
        "Container",
        "Service",
        "Docker",
        "Containers",
        "S3",
        "Project2",
        "Airflow",
        "DAGger",
        "source",
        "Airbnb",
        "platform",
        "author",
        "schedule",
        "workflows",
        "Use",
        "airflow",
        "author",
        "workflows",
        "graphs",
        "DAGs",
        "tasks",
        "Airflow",
        "scheduler",
        "tasks",
        "array",
        "workers",
        "dependencies",
        "DAG",
        "Level",
        "Access",
        "Control",
        "DLAC",
        "Limit",
        "access",
        "views",
        "Airflow",
        "UI",
        "DAG",
        "association",
        "DAG",
        "roles",
        "Integrated",
        "OAuth",
        "Single",
        "Sign",
        "SSO",
        "Authentication",
        "Airflow",
        "DAGger",
        "Performed",
        "Data",
        "Analysis",
        "customer",
        "transaction",
        "records",
        "data",
        "tools",
        "pig",
        "hive",
        "Worked",
        "evaluation",
        "analysis",
        "Hadoop",
        "cluster",
        "data",
        "tools",
        "HBase",
        "MapReduce",
        "programs",
        "data",
        "filtering",
        "data",
        "Self",
        "Service",
        "Dag",
        "deployment",
        "model",
        "DAGger",
        "flask",
        "Rest",
        "AP",
        "webserver",
        "Jenkins",
        "GITHUB",
        "Dags",
        "GitHub",
        "AMAZON",
        "EC2",
        "EFS",
        "Worked",
        "Dag",
        "code",
        "Jenkins",
        "Set",
        "Jenkins",
        "jobs",
        "jobs",
        "builds",
        "GIT",
        "source",
        "control",
        "system",
        "Jenkins",
        "GIT",
        "UnitTest",
        "GIT",
        "Integration",
        "CI",
        "environment",
        "Jenkins",
        "Established",
        "GIT",
        "Configured",
        "Celery",
        "number",
        "workers",
        "setup",
        "setup",
        "RabbitMQ",
        "broker",
        "job",
        "Workers",
        "messages",
        "RabbitMQ",
        "tasks",
        "schema",
        "DAGger",
        "DAG",
        "roles",
        "usersgroups",
        "data",
        "DB",
        "Abstraction",
        "layer",
        "Project3",
        "Navigator",
        "Clientside",
        "Web",
        "Application",
        "python",
        "Flask",
        "framework",
        "languages",
        "HTML",
        "web",
        "pages",
        "Website",
        "Optimize",
        "Application",
        "speed",
        "collaborate",
        "web",
        "designers",
        "Usability",
        "Developed",
        "Views",
        "Templates",
        "Flask",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "APIs",
        "database",
        "Model",
        "Views",
        "Utilization",
        "Python",
        "order",
        "web",
        "page",
        "application",
        "GitHub",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "Mesos",
        "Django",
        "database",
        "SQLite3",
        "PostgreSQL",
        "data",
        "integrity",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "UnitTest",
        "Module",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "Experience",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Auto",
        "Cloud",
        "watch",
        "SNS",
        "Worked",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "CRUD",
        "operations",
        "applications",
        "MVC",
        "Model",
        "View",
        "Controller",
        "architecture",
        "Django",
        "framework",
        "Python",
        "code",
        "reviews",
        "Environment",
        "Python",
        "Flask",
        "Django",
        "Html",
        "CSS",
        "Bootstrap",
        "RESTAPI",
        "Git",
        "GitHub",
        "MySQL",
        "PostgreSQL",
        "AWS",
        "Services",
        "PyTest",
        "UnitTest",
        "Jenkins",
        "Celery",
        "RabbitMQ",
        "OAUTH",
        "SSO",
        "Pylint",
        "Agile",
        "Jira",
        "Jr",
        "Python",
        "Developer",
        "Corus",
        "Soft",
        "Inc",
        "June",
        "January",
        "Web",
        "APP",
        "Services",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Created",
        "UI",
        "JavaScript",
        "HTML5CSS",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Flask",
        "framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "architecture",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "database",
        "package",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "project",
        "threadsafe",
        "unit",
        "tests",
        "ones",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "principles",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "functionality",
        "application",
        "GITHUB",
        "version",
        "control",
        "Environment",
        "PYTHON",
        "HTML",
        "XHTML",
        "CSS",
        "JavaScript",
        "Eclipse",
        "MS",
        "SQL",
        "Windows",
        "OS",
        "PYTHON",
        "Programmer",
        "Analyst",
        "Ardent",
        "Technologies",
        "Hyderabad",
        "Telangana",
        "January",
        "December",
        "Responsibilities",
        "Python",
        "libraries",
        "matplotlib",
        "charts",
        "graphs",
        "MySQL",
        "database",
        "connectivity",
        "PySide",
        "Pickle",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "Develop",
        "programs",
        "testing",
        "controller",
        "CICD",
        "environment",
        "Python",
        "Bash",
        "script",
        "Git",
        "Linux",
        "command",
        "line",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Django",
        "Application",
        "Django",
        "MVC",
        "Framework",
        "MVC",
        "design",
        "pattern",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "configuration",
        "management",
        "packaging",
        "disaster",
        "recovery",
        "delivery",
        "systems",
        "Python",
        "visualization",
        "search",
        "Kibana",
        "Logstash",
        "Apache",
        "server",
        "Redis",
        "cache",
        "info",
        "changes",
        "RabbitMQ",
        "EC2",
        "Container",
        "Service",
        "ECS",
        "Docker",
        "containers",
        "applications",
        "cluster",
        "Amazon",
        "EC2",
        "instances",
        "servers",
        "Docker",
        "test",
        "environments",
        "devenvironments",
        "Docker",
        "containers",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "team",
        "developers",
        "Python",
        "applications",
        "RISK",
        "management",
        "delivery",
        "code",
        "principles",
        "TestDriven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "project",
        "threadsafe",
        "unit",
        "tests",
        "ones",
        "Project",
        "Masters",
        "Web",
        "APP",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "Wrote",
        "PYTHON",
        "modules",
        "extractload",
        "asset",
        "data",
        "MySQL",
        "source",
        "database",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "database",
        "Integrated",
        "applications",
        "database",
        "architecture",
        "server",
        "scripting",
        "knowledge",
        "version",
        "controls",
        "systems",
        "GIT",
        "SVN",
        "CVN",
        "Source",
        "Tree",
        "Environment",
        "PYTHON",
        "HTML",
        "XHTML",
        "CSS",
        "JavaScript",
        "Eclipse",
        "MS",
        "SQL",
        "Windows",
        "OS",
        "Education",
        "Master",
        "Science",
        "Computer",
        "Technology",
        "Computer",
        "Technology",
        "Harrisburg",
        "university",
        "Harrisburg",
        "PA",
        "February",
        "October",
        "Technology",
        "JNT",
        "University",
        "September",
        "May",
        "Skills",
        "CSS",
        "years",
        "database",
        "years",
        "Django",
        "years",
        "Git",
        "years",
        "HTML",
        "years",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Programming",
        "Languages",
        "Python",
        "JavaScript",
        "JSON",
        "Bootstrap",
        "Apex",
        "HTML",
        "CSS",
        "Frameworks",
        "Flask",
        "Django",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "EMR",
        "AWS",
        "EFS",
        "Amazon",
        "RDS",
        "Operating",
        "System",
        "Mac",
        "OS",
        "X",
        "Unix",
        "Linux",
        "Windows",
        "DatabasesDatabase",
        "tools",
        "MySQL",
        "PostgreSQL",
        "Teradata",
        "SQLite",
        "Version",
        "Controls",
        "Git",
        "GitHub",
        "Gitlab",
        "Web",
        "Services",
        "REST",
        "Web",
        "services",
        "MS",
        "Office",
        "Tools",
        "Outlook",
        "Excel",
        "PowerPoint",
        "MS",
        "Access",
        "Word",
        "Build",
        "Integration",
        "Jenkins",
        "Project",
        "Management",
        "Agile",
        "Jira",
        "IDE",
        "PyCharm",
        "Subline2"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:51:32.180921",
    "resume_data": "Software Engineer Python Developer Software Engineer span lPythonspan span lDeveloperspan Data Engineer Python New York NY Around 4 years of experience includes Internship in Design Development Implementation of Python Flask Django JavaScript and clientserver technologybased applications A Graduate student specialized in Computer Technology from Harrisburg University Experience in working with Relational DB RDBMS like SQLite MYSQL PostgreSQL and NoSQL database MongoDB for database connectivity Used Python for data analytics data wrangling and extracting data using Pandas Pyexcel NumPy and SciPy Familiar with JSON based REST Web services and Amazon Web services Implemented responsive web pages using HTML CSS Bootstrap and XMLJSON Experienced with full software development lifecycle SDLC architecting scalable Platforms objectoriented programming database design and agile methodologies Extensive experience in implementation of the version control software like Git Good knowledge of web services with protocols SOAP and REST Excellent working knowledge in UNIX and Linux shell environments using command line utilities Assisted in Developing testing plans and procedures for Unit testingTest Driven Development system test and Load testing Hands on Amazon Web Services AWSfor creating and managing EC2 Elastic Map Reduce Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic File system RDS Cloud Watch Cloud Trail IAM Extensively worked on Jenkins for continuous integration and setup endtoend automation for all build and deployments Indepth understanding of the principles and best practices of Software Configuration Management SCM in agile and SCRUM methodologies Experienced with Using python OAuth and Security Packages for Creating Abstraction Layer Experienced in following PEP8 coding standards across various projects Experience with different IDEs like Sublime Text Jet Brains PyCharm and Visual Studio Ability to learn and adapt quickly to the emerging new technologies and paradigms Efficient team member with excellent worktime management skills communications and Interpersonal Skills ability to work under strict deadlines Work Experience Software Engineer Python Developer Capital One Plano TX February 2017 to November 2018 Project1 Flagship is a data product built completely inhouse that reimagines the way we run our Marketing Campaigns process via AWS Cloud an easy to use GUI and integration with Salesforce Marketing Cloud while staying true to our wellmanaged agenda which includes locked down suppressions reusable components seamless auditability and approval workflows It is true agile operating model and speed to market was reduced by 75 and the new campaigns build up time has been cut off by 80 Handoffs between multiple teams have been eliminated resulting in increased accuracy and faster execution time Responsibilities Worked with a team of 5 people in designing implementing and delivering a complete CRM analytic solution in AWS Developed Python based API RESTful Web Service to insert delete and update campaign rules in JOB Config DB using Flask SQLAlchemy and PostgreSQL Deployed all the APIs on AWS EC2 Used Git version control for code sharing in order to save the committed changes that are made to the project files by using different commands Developed and designed schema for Job Config DB to maintain and store business rules for all campaigns and the data from the DB is used for generating workflow for spark execution framework Contributed for Quantum Spark Execution FrameworkScala Classes which is an innersourced big data framework that enables users to easily ingest process and act on batch and realtime data using open source technologies Automated Testing Framework has been built to comply with CICD pipeline using Nose Test and PyTest Python code has been tested for quality using PyLint Worked on readingwriting Avro Parquet and ORC data format files from AWS S3 to AWS EMR for processing using Quantum Spark Execution Framework Created scripts on EMR to pull the scheme for JOB Config DB executed various scripts as required in sequence with exception handling for processing the input data and stored the required outputs on to AWS S3 Experienced in communicating with business users other technical teams and management to collect requirements describe software product features and technical designs Involved in daily SCRUM meetings to discuss the developmentprogress and was active in making scrum meetings more productive Hands on experience in Amazon Web Services AWS provisioning and good knowledge of AWS services like EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Project2 Airflow DAGger open source from Airbnb platform to programmatically author schedule and monitor workflows Use airflow to author workflows as directed acyclic graphs DAGs of tasks The Airflow scheduler executes tasks on an array of workers while following the specified dependencies Implemented DAG Level Access Control DLAC Limit access to views within Airflow UI which allows the DAG to declare association between DAG roles and usersgroups Integrated OAuth Single Sign on SSO Authentication to Airflow DAGger Performed Data Analysis on customer transaction records using big data tools such as pig and hive Worked on evaluation and analysis of Hadoop cluster and different big data analytic tools like HBase Developed MapReduce programs to perform data filtering for unstructured data Implemented Self Service Dag deployment model for DAGger using flask Rest AP endpoints available through the webserver and integrated with Jenkins GITHUB to deploy Dags from GitHub to AMAZON EC2 and EFS Worked on building and deploying Dag code through Jenkins Set up Jenkins jobs and build jobs to provide continuous automated builds based on polling the GIT source control system using Jenkins GIT and UnitTest Worked on integrating GIT into the continuous Integration CI environment along with Jenkins Established branching and merging with GIT Configured Celery to Scale out number of workers and setup installed and setup RabbitMQ as broker to Execute job in Workers that wait for messages from RabbitMQ and execute the tasks Developed and designed schema for DAGger to maintain and store DAG roles and usersgroups and the data from the DB is used for implementing Abstraction layer Project3 I was Responsible for building the Navigator Clientside Web Application Used python Flask framework along with markup languages like HTML to create userfriendly web pages Maintain and Improve Website Optimize Application for maximum speed and collaborate with web designers to improve Usability Developed Views and Templates with Flask view controller and template language to create a userfriendly website interface Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Created APIs database Model and Views Utilization Python in order to build responsive web page application Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Migrated the Django database from SQLite3 to PostgreSQL with complete data integrity Performed Unit testing Integration Testing GUI and web application testing using UnitTest Module Worked on Jenkins continuous integration tool for deployment of project Experience in project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 AWS S3 Auto scaling Cloud watch and SNS Worked on front end frame works like CSS Bootstrap for development of Web application Used python scripts to update content in the database and manipulate files Worked on frontend and backend modules using Python on Django Web Framework Implemented and enhanced CRUD operations for the applications using the MVC Model View Controller architecture of Django framework and Python conducting code reviews Environment Python 3x Flask Django Html CSS Bootstrap RESTAPI Git GitHub MySQL PostgreSQL AWS Services PyTest UnitTest Jenkins Celery RabbitMQ OAUTH SSO Pylint Agile Jira Jr Python Developer Corus Soft Inc June 2016 to January 2017 Web APP Services Created entire application using Python Django MySQL and Linux and developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created UI using JavaScript and HTML5CSS and developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Used Flask framework in developing web applications to implement the model view control architecture Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL database package Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Utilized PyUnit the Python unit test framework for testing the functionality of the application Used GITHUB for the version control Environment PYTHON HTML XHTML CSS JavaScript Eclipse MS SQL Windows OS PYTHON Programmer Analyst Ardent Technologies Hyderabad Telangana January 2014 to December 2014 Responsibilities Implemented Python alongside using various libraries such as matplotlib for charts and graphs MySQL dB for database connectivity PySide Pickle Pandas data frame network urllib2 Develop programs to automate the testing of controller in CICD environment using Python Bash script Git and Linux command line Developed Python based API RESTful Web Service to track the events and perform analysis using Django Designed and developed Application based on the Django MVC Framework using MVC design pattern Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Involved in Developing configuration management packaging disaster recovery and delivery systems based on Python Implemented visualization using Elastic search Kibana and Logstash on Apache server Used Redis cache for storing used info and propagate the changes using RabbitMQ Used EC2 Container Service ECS to support Docker containers to easily run applications on a managed cluster of Amazon EC2 instances Virtualized the servers using the Docker for the test environments and devenvironments using Docker containers Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Build SQL queries for performing various CRUD operations like create update read and delete and worked with team of developers on Python applications for RISK management Performed efficient delivery of code based on principles of TestDriven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Refactored existing project to make it more RESTful and threadsafe and added unit tests and improved existing ones Project during Masters Web APP Developed rich user interface using CSS HTML JavaScript and jQuery Wrote PYTHON modules to extractload asset data from the MySQL source database Created database using MySQL wrote several queries to extractstore data from database Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL database package Integrated applications with designing database architecture and server scripting studying establishing Good knowledge in maintaining various version controls systems such as GIT SVN CVN and Source Tree Environment PYTHON HTML XHTML CSS JavaScript Eclipse MS SQL Windows OS Education Master of Science in Computer Technology in Computer Technology Harrisburg university Harrisburg PA February 2015 to October 2016 Technology JNT University September 2010 to May 2014 Skills CSS 3 years database 3 years Django 3 years Git 3 years HTML 3 years Embedded Additional Information TECHNICAL SKILLS Programming Languages Python JavaScript JSON Bootstrap Apex HTML CSS Frameworks Flask Django AWS Amazon EC2 Amazon S3 Amazon EMR AWS EFS Amazon RDS Operating System Mac OS X Unix Linux Windows DatabasesDatabase tools MySQL PostgreSQL MongoDB Teradata SQLite Version Controls Git GitHub Gitlab Web Services REST Web services MS Office Tools Outlook Excel PowerPoint MS Access Word Build Integration Jenkins Project Management Agile Jira SCRUM IDE PyCharm Subline2",
    "unique_id": "36e7e836-0e34-4a98-a781-1f200cd9d0d7"
}