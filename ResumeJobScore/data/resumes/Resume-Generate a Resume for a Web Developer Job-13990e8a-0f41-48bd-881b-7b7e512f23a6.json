{
    "clean_data": "Full Stack Software Developer Full Stack Software span lDeveloperspan Full Stack Software Developer Metro Sports Inc Highlyskilled Full Stack Net Developer with 5 years of experience in both FrontEnd and BackEnd Web Application Design and has worked in various diverse handson projects with the implementation of ObjectOriented Design Software Design Patterns NTier Architecture Onion Architecture and Relational Database Design Highlyskilled knowledge of developing Web Application using ASPNET Web API ASPNET MVC 5 Web Services Windows Communication FoundationWCF and ASPNET Web Forms Implemented CRUD operations through HTTP service both in Web API and ASPNET MVC Proficiency in objectoriented programming language in Microsoft C and C Hands on experience in ADONET Entity Framework and LINQ design Hands on experience in Database design like Normalization create Store Procedures and UserDefined Functions using MS Sql Server Deep understanding in javascript jQuery Ajax and Typescript Extensive knowledge of frontend design and development using HTML5 CSS3 4 javascript Frequently used Bootstrap Primeng Angular Material Font Awesome and other third party Libraries Worked on projects consuming the RESTful Web API using Angular Services Expertise in Angular features like Routing Data Binding Directives Page Loading Component Communication Dependency Injection Service HTTP server Forms and Exception Handling Solid understanding of testing software like Postman Jasmine and Karma Experienced in both Agile and Waterfall SDLC methodologies Experienced in Source and Version Control using Microsoft Azure DevOps and Git Responsible detailoriented as a Full Stack Developer good at selfproblem solving understanding the requirement and fulfilling the expectations Successful at ontime execution and delivery Work Experience Full Stack Software Developer Metro Sports Inc Stirling NJ January 2018 to Present Metro Sport is an Ecommerce which provides all kinds of swimming suits goggles apparel to teams and individuals The project was aimed to replace the old Web Application so that it can provide efficient ways for the customers to search and purchase I was responsible for developing the webbased search and purchase system to allow customers to shop the swimming items online Angular 6 ASPNET Web API and MS Sql Server are the technologies used in this project Roles and Responsibilities Experienced in frontend development using Angular 6 backend using Web API and Database Design Handled Frontend components using Angular 6 Bootstrap HTML5 and CSS3 Created UI pages with Angular Material and Angular Font Awesome Built the Account Login page using Validation Authentication Router Module Route Guard and Exception Handling Implemented Authentication and Authorization using local storage token based Polished the Details page using Angular Material like Pagination and Filter Implemented form validation error messages form reset and search functions in components Used Angular Dependency Injection Created TemplateDriven Forms and DataBiding to display the related items Deployed redirection links using Routing router navigation events to trace the events Built the Admin management pages with Angular Modules Observable and Services to implement the CRUD functionalities such as viewing Items add update and delete tasks in front and backend Built RESTful ASPNET Web API services that support different function calls Deployed 4layer structure for the project such as DataAccessLayer RepositoryLayer DataBusinessLayer and UILayer Implemented Dependency Injection in DataBusinessLayer Created database using database first approach by Entity Framework Used Auto Mappers to map the Models and Controller Configured Postman to test the Web API functions Used GIT for source control and JIRA for project management Deployed Jasmine and Karma to do the Unit testing on Components and services methods Environment Angular 6 Bootstrap Angular Material HTML5 CSS3 TypeScript Web API Microsoft C Microsoft Sql Server 2017 Entity Framework 6 Postman GIT JIRA and Jasmine and Karma Full Stack Application Developer Wines Til SoldOut Pennsauken NJ July 2016 to December 2017 WTSOcom Wines Til Sold Out is the leader in Wine Flash Sale sites with over 25 million bottles sold The project is about Web Application that provides information about wines with an option to purchase I worked as a Full Stack developer and was responsible for improving both customer and employee facing web applications and bugs fixes using ASPNET framework Web API and Angular 4 Roles and Responsibilities Contributed to frontend using Angular 4 and backend using Web API Developed Frontend components using Angular 4 Bootstrap Primeng and Angular Font Awesome Improved the Login page using Reactive Form Validation Authentication Authorization Router Module Routing Guard and Exception Handling Implemented Authentication and Authorization using local storage token based for logging in Angular components Built the Details pages using Angular Material like Pagination Filter Using TemplateDriven Forms and DataBiding to display the related items Arranged navigation links using Routing route parameters Coded the products display page with Angular Modules Observable Services to implement the CRUD Functionalities such as viewing Items add update and delete tasks both in front and backend Built RESTful ASPNET Web API services that support different function calls Improved the Database and Created DataAccessLayer using Entity Framework Enabled the CORS by MicrosoftOwinCors Implemented the Authentication and Error Handling with Exception Filter Built Postman simulating page as the frontend to test the Web API functions Worked on the project using GIT source version control Used Jasmine and Karma to do the Unit testing on Components and services methods Environment Angular 4 Bootstrap Primeng HTML5 CSS3 TypeScript Web API Miscrosoft C Microsoft Sql Server 2014 Entity Framework 6 Postman GIT and Jasmine and Karma Web Developer Decusoft Ramsey NJ March 2015 to June 2016 Decusoft is a premier developer of configurable and webbased software solutions This Web Application project focuses on the Employee Management System EMS so that the employer can manage the time salary bonus work days projects distribution of employees efficiently I worked on the COMPOSE project which is a specialized compensation software solution about login page employees management page bonus calculation page using ASPNET MVC and MS Sql Server Roles and Responsibilities Designed Web Application using ASPNET MVC 5 ModelViewController with ASPNET Razor View Engine Generated data models in MVC using Entity Framework Database first Approach Implemented Onion Architecture by using Entity Framework Generic Repository and Unit of work pattern in project Created 4layers such as DataAccesslayer Repository DataBusinesslayer and UIlayer Implemented Repository pattern to isolate the DAL and to apply centrally managed consistent access rules and logic Implemented ASPNET MVC routing using ConventionBased and AttributeBased routing as well as routing with passing parameters Built the strongly typed Views and Controllers Used C Partial Class for better distribution method and better code merge collaboration Created dynamic amount of filter sliders with jQuery Ajax Used jQuery Ajax to pass filtration data from frontend to backend and display the data to view with JSON object Implemented Action Filter in controllers Created different ViewModels to manage the data in different views Used HTML5 CSS3 jQuery Ajax javascript and Bootstrap to beautify the view and add animation Implemented Error Handler and Data annotation for login page and signup page to validate the input data Used NUnit for unit testing in C Collaborated with other developers through Git source control tool Experienced in Agile and Scrum based environment for project development Used Jasmine and Karma to do the Unit testing on MVC Environment Microsoft C ASPNET MVC MS Sql Server 2014 HTML5 CSS3 jQueryAjax javascript Bootstrap Entity Framework GIT Postman and Jasmine and Karma Web Developer Hetony Inc West Orange NJ January 2014 to February 2015 Hetony Inc was founded by a group of electric motor experts who are specialized in the designing the motor with robust and efficient features at the cost effective budget utilizing the latest motor technology This project is to build up the website for displaying the kinds of motors and providing the solutions for the customers using ASPNET WCF and MS Sql Server 2012 Roles and Responsibilities Designed database using TSQL Stored Procedures User Defined Functions Views Indexes Views Triggers and Error Handling Designed the application architecture and flowcharts based on business requirement Implemented the NTier Architecture Worked on ADONET Data Reader Data adapter Data Set and Data View to provide connection to the database Used LINQ to fulfill the functionality of searching by different categories Styled application using Bootstrap for user interface Used ViewBag TempData and ViewModel to display data Displayed result in the table format Implemented model bindings to retrieve data from user input to controller Created the frontend view to display data and fulfilled an autocomplete function Developed WCF in an SOA Architecture participating in architecture definition coding standards and naming conventions Set up required functions in Service Layer with Data Annotations Used Partial Class for code maintainability and further merging convincing Implemented host layer for hosting services Created SoapUI to do Unit testing on WCF methods Used Git for version controls and code merges Able to coordinate and provide support within a team environment with problem solving and strong analytical skills Environment MS C ASPNET WCF ADONET MS Sql Server 2012 HTML5 CSS3 SoapUI and GIT Education Master of Science in Electrical and Computer Science New Jersey Institute of Technology Newark NJ Skills ADO DATABASE ADONET MICROSOFT SQL SERVER MICROSOFT SQL SERVER 2012 Additional Information Skills Programming Microsoft C CC Web HTML5 CSS3 4 JavaScript jQueryAjax TypeScript Angular 46 Bootstrap Primeng Angular Material Net Web API ASPNET MVC 5 Web Service WCF ASPNET Web Forms ADONET LINQ Entity Framework Database Microsoft Sql Server 2012 2014 2016 2017 IDE Visual Studio Visual Studio Code Test Postman Unit Testing Jasmine Karma Others GIT Azure DevOps JSON XML Slack",
    "entities": [
        "Exception Handling Implemented Authentication and Authorization",
        "Created 4layers",
        "Used ViewBag TempData",
        "Angular Material and Angular Font Awesome Built the Account Login",
        "Implemented Error Handler",
        "UIlayer Implemented Repository",
        "HTTP",
        "TSQL Stored Procedures User Defined Functions Views Indexes Views Triggers",
        "MVC Environment",
        "ASPNET Web Forms Implemented CRUD",
        "Web Application",
        "Angular Material like Pagination Filter Using TemplateDriven Forms",
        "DevOps",
        "GIT Education",
        "Angular 4 Bootstrap Primeng",
        "COMPOSE",
        "the Employee Management System EMS",
        "Hetony Inc",
        "Entity Framework Generic Repository",
        "Version Control",
        "Approach Implemented Onion Architecture",
        "NUnit",
        "ViewModels",
        "ObjectOriented Design Software Design Patterns NTier Architecture Onion Architecture",
        "Bootstrap Entity Framework GIT Postman",
        "Git",
        "Web Services Windows Communication FoundationWCF",
        "HTML5",
        "Angular 6 Bootstrap HTML5",
        "DataAccesslayer Repository DataBusinesslayer",
        "C Collaborated",
        "the NTier Architecture Worked",
        "Source",
        "Built",
        "Admin",
        "Routing Data Binding Directives Page Loading Component Communication Dependency Injection Service",
        "DAL",
        "FrontEnd",
        "API Microsoft",
        "Roles",
        "Views",
        "Reactive Form Validation Authentication Authorization Router Module Routing Guard",
        "MVC",
        "ASPNET WCF",
        "GIT",
        "Postman Jasmine",
        "LINQ",
        "Angular Modules Observable",
        "Database",
        "jQuery Ajax",
        "MICROSOFT",
        "BackEnd Web Application Design",
        "Created",
        "Implemented",
        "UILayer Implemented Dependency Injection",
        "Coded",
        "This Web Application",
        "CSS3 Created",
        "TypeScript",
        "ASPNET Razor View Engine Generated",
        "Bootstrap",
        "IDE Visual Studio Visual Studio",
        "Routing",
        "ViewModel",
        "Microsoft C",
        "Polished the Details",
        "Validation Authentication",
        "CRUD",
        "DataBusinessLayer Created",
        "Angular Modules Observable Services",
        "Relational Database Design Highlyskilled",
        "JavaScript",
        "Microsoft",
        "Angular Material like Pagination",
        "Data View",
        "Service Layer with Data Annotations Used Partial Class",
        "ASPNET",
        "Data",
        "UserDefined Functions",
        "ASPNET MVC",
        "ASPNET MVC Proficiency",
        "SOA Architecture",
        "Science in Electrical and Computer Science New Jersey Institute of Technology Newark NJ Skills"
    ],
    "experience": "Experience Full Stack Software Developer Metro Sports Inc Stirling NJ January 2018 to Present Metro Sport is an Ecommerce which provides all kinds of swimming suits goggles apparel to teams and individuals The project was aimed to replace the old Web Application so that it can provide efficient ways for the customers to search and purchase I was responsible for developing the webbased search and purchase system to allow customers to shop the swimming items online Angular 6 ASPNET Web API and MS Sql Server are the technologies used in this project Roles and Responsibilities Experienced in frontend development using Angular 6 backend using Web API and Database Design Handled Frontend components using Angular 6 Bootstrap HTML5 and CSS3 Created UI pages with Angular Material and Angular Font Awesome Built the Account Login page using Validation Authentication Router Module Route Guard and Exception Handling Implemented Authentication and Authorization using local storage token based Polished the Details page using Angular Material like Pagination and Filter Implemented form validation error messages form reset and search functions in components Used Angular Dependency Injection Created TemplateDriven Forms and DataBiding to display the related items Deployed redirection links using Routing router navigation events to trace the events Built the Admin management pages with Angular Modules Observable and Services to implement the CRUD functionalities such as viewing Items add update and delete tasks in front and backend Built RESTful ASPNET Web API services that support different function calls Deployed 4layer structure for the project such as DataAccessLayer RepositoryLayer DataBusinessLayer and UILayer Implemented Dependency Injection in DataBusinessLayer Created database using database first approach by Entity Framework Used Auto Mappers to map the Models and Controller Configured Postman to test the Web API functions Used GIT for source control and JIRA for project management Deployed Jasmine and Karma to do the Unit testing on Components and services methods Environment Angular 6 Bootstrap Angular Material HTML5 CSS3 TypeScript Web API Microsoft C Microsoft Sql Server 2017 Entity Framework 6 Postman GIT JIRA and Jasmine and Karma Full Stack Application Developer Wines Til SoldOut Pennsauken NJ July 2016 to December 2017 WTSOcom Wines Til Sold Out is the leader in Wine Flash Sale sites with over 25 million bottles sold The project is about Web Application that provides information about wines with an option to purchase I worked as a Full Stack developer and was responsible for improving both customer and employee facing web applications and bugs fixes using ASPNET framework Web API and Angular 4 Roles and Responsibilities Contributed to frontend using Angular 4 and backend using Web API Developed Frontend components using Angular 4 Bootstrap Primeng and Angular Font Awesome Improved the Login page using Reactive Form Validation Authentication Authorization Router Module Routing Guard and Exception Handling Implemented Authentication and Authorization using local storage token based for logging in Angular components Built the Details pages using Angular Material like Pagination Filter Using TemplateDriven Forms and DataBiding to display the related items Arranged navigation links using Routing route parameters Coded the products display page with Angular Modules Observable Services to implement the CRUD Functionalities such as viewing Items add update and delete tasks both in front and backend Built RESTful ASPNET Web API services that support different function calls Improved the Database and Created DataAccessLayer using Entity Framework Enabled the CORS by MicrosoftOwinCors Implemented the Authentication and Error Handling with Exception Filter Built Postman simulating page as the frontend to test the Web API functions Worked on the project using GIT source version control Used Jasmine and Karma to do the Unit testing on Components and services methods Environment Angular 4 Bootstrap Primeng HTML5 CSS3 TypeScript Web API Miscrosoft C Microsoft Sql Server 2014 Entity Framework 6 Postman GIT and Jasmine and Karma Web Developer Decusoft Ramsey NJ March 2015 to June 2016 Decusoft is a premier developer of configurable and webbased software solutions This Web Application project focuses on the Employee Management System EMS so that the employer can manage the time salary bonus work days projects distribution of employees efficiently I worked on the COMPOSE project which is a specialized compensation software solution about login page employees management page bonus calculation page using ASPNET MVC and MS Sql Server Roles and Responsibilities Designed Web Application using ASPNET MVC 5 ModelViewController with ASPNET Razor View Engine Generated data models in MVC using Entity Framework Database first Approach Implemented Onion Architecture by using Entity Framework Generic Repository and Unit of work pattern in project Created 4layers such as DataAccesslayer Repository DataBusinesslayer and UIlayer Implemented Repository pattern to isolate the DAL and to apply centrally managed consistent access rules and logic Implemented ASPNET MVC routing using ConventionBased and AttributeBased routing as well as routing with passing parameters Built the strongly typed Views and Controllers Used C Partial Class for better distribution method and better code merge collaboration Created dynamic amount of filter sliders with jQuery Ajax Used jQuery Ajax to pass filtration data from frontend to backend and display the data to view with JSON object Implemented Action Filter in controllers Created different ViewModels to manage the data in different views Used HTML5 CSS3 jQuery Ajax javascript and Bootstrap to beautify the view and add animation Implemented Error Handler and Data annotation for login page and signup page to validate the input data Used NUnit for unit testing in C Collaborated with other developers through Git source control tool Experienced in Agile and Scrum based environment for project development Used Jasmine and Karma to do the Unit testing on MVC Environment Microsoft C ASPNET MVC MS Sql Server 2014 HTML5 CSS3 jQueryAjax javascript Bootstrap Entity Framework GIT Postman and Jasmine and Karma Web Developer Hetony Inc West Orange NJ January 2014 to February 2015 Hetony Inc was founded by a group of electric motor experts who are specialized in the designing the motor with robust and efficient features at the cost effective budget utilizing the latest motor technology This project is to build up the website for displaying the kinds of motors and providing the solutions for the customers using ASPNET WCF and MS Sql Server 2012 Roles and Responsibilities Designed database using TSQL Stored Procedures User Defined Functions Views Indexes Views Triggers and Error Handling Designed the application architecture and flowcharts based on business requirement Implemented the NTier Architecture Worked on ADONET Data Reader Data adapter Data Set and Data View to provide connection to the database Used LINQ to fulfill the functionality of searching by different categories Styled application using Bootstrap for user interface Used ViewBag TempData and ViewModel to display data Displayed result in the table format Implemented model bindings to retrieve data from user input to controller Created the frontend view to display data and fulfilled an autocomplete function Developed WCF in an SOA Architecture participating in architecture definition coding standards and naming conventions Set up required functions in Service Layer with Data Annotations Used Partial Class for code maintainability and further merging convincing Implemented host layer for hosting services Created SoapUI to do Unit testing on WCF methods Used Git for version controls and code merges Able to coordinate and provide support within a team environment with problem solving and strong analytical skills Environment MS C ASPNET WCF ADONET MS Sql Server 2012 HTML5 CSS3 SoapUI and GIT Education Master of Science in Electrical and Computer Science New Jersey Institute of Technology Newark NJ Skills ADO DATABASE ADONET MICROSOFT SQL SERVER MICROSOFT SQL SERVER 2012 Additional Information Skills Programming Microsoft C CC Web HTML5 CSS3 4 JavaScript jQueryAjax TypeScript Angular 46 Bootstrap Primeng Angular Material Net Web API ASPNET MVC 5 Web Service WCF ASPNET Web Forms ADONET LINQ Entity Framework Database Microsoft Sql Server 2012 2014 2016 2017 IDE Visual Studio Visual Studio Code Test Postman Unit Testing Jasmine Karma Others GIT Azure DevOps JSON XML Slack",
    "extracted_keywords": [
        "Stack",
        "Software",
        "Developer",
        "Full",
        "Stack",
        "Software",
        "span",
        "lDeveloperspan",
        "Full",
        "Stack",
        "Software",
        "Developer",
        "Metro",
        "Sports",
        "Inc",
        "Full",
        "Stack",
        "Net",
        "Developer",
        "years",
        "experience",
        "FrontEnd",
        "BackEnd",
        "Web",
        "Application",
        "Design",
        "handson",
        "projects",
        "implementation",
        "ObjectOriented",
        "Design",
        "Software",
        "Design",
        "Patterns",
        "NTier",
        "Architecture",
        "Onion",
        "Architecture",
        "Relational",
        "Database",
        "Design",
        "knowledge",
        "Web",
        "Application",
        "ASPNET",
        "Web",
        "API",
        "ASPNET",
        "MVC",
        "Web",
        "Services",
        "Windows",
        "Communication",
        "FoundationWCF",
        "ASPNET",
        "Web",
        "Forms",
        "CRUD",
        "operations",
        "HTTP",
        "service",
        "Web",
        "API",
        "ASPNET",
        "MVC",
        "Proficiency",
        "programming",
        "language",
        "Microsoft",
        "C",
        "C",
        "Hands",
        "experience",
        "ADONET",
        "Entity",
        "Framework",
        "design",
        "Hands",
        "experience",
        "Database",
        "design",
        "Normalization",
        "Store",
        "Procedures",
        "UserDefined",
        "Functions",
        "MS",
        "Sql",
        "Server",
        "Deep",
        "understanding",
        "javascript",
        "jQuery",
        "Ajax",
        "Typescript",
        "knowledge",
        "frontend",
        "design",
        "development",
        "HTML5",
        "CSS3",
        "javascript",
        "Bootstrap",
        "Primeng",
        "Angular",
        "Material",
        "Font",
        "Awesome",
        "party",
        "Libraries",
        "projects",
        "Web",
        "API",
        "Angular",
        "Services",
        "Expertise",
        "features",
        "Routing",
        "Data",
        "Binding",
        "Directives",
        "Page",
        "Loading",
        "Component",
        "Communication",
        "Dependency",
        "Injection",
        "Service",
        "HTTP",
        "server",
        "Forms",
        "Exception",
        "Handling",
        "understanding",
        "testing",
        "software",
        "Postman",
        "Jasmine",
        "Karma",
        "Agile",
        "Waterfall",
        "SDLC",
        "methodologies",
        "Source",
        "Version",
        "Control",
        "Microsoft",
        "Azure",
        "DevOps",
        "Git",
        "Responsible",
        "Stack",
        "Developer",
        "selfproblem",
        "requirement",
        "expectations",
        "execution",
        "delivery",
        "Work",
        "Experience",
        "Full",
        "Stack",
        "Software",
        "Developer",
        "Metro",
        "Sports",
        "Inc",
        "Stirling",
        "NJ",
        "January",
        "Present",
        "Metro",
        "Sport",
        "Ecommerce",
        "kinds",
        "swimming",
        "suits",
        "goggles",
        "apparel",
        "teams",
        "individuals",
        "project",
        "Web",
        "Application",
        "ways",
        "customers",
        "purchase",
        "search",
        "purchase",
        "system",
        "customers",
        "swimming",
        "items",
        "Angular",
        "ASPNET",
        "Web",
        "API",
        "MS",
        "Sql",
        "Server",
        "technologies",
        "project",
        "Roles",
        "Responsibilities",
        "frontend",
        "development",
        "Angular",
        "backend",
        "Web",
        "API",
        "Database",
        "Design",
        "Frontend",
        "components",
        "Angular",
        "Bootstrap",
        "HTML5",
        "CSS3",
        "UI",
        "pages",
        "Angular",
        "Material",
        "Angular",
        "Font",
        "Awesome",
        "Account",
        "Login",
        "page",
        "Validation",
        "Authentication",
        "Router",
        "Module",
        "Route",
        "Guard",
        "Exception",
        "Handling",
        "Authentication",
        "Authorization",
        "storage",
        "Polished",
        "Details",
        "page",
        "Angular",
        "Material",
        "Pagination",
        "Filter",
        "form",
        "validation",
        "error",
        "messages",
        "reset",
        "search",
        "functions",
        "components",
        "Angular",
        "Dependency",
        "Injection",
        "TemplateDriven",
        "Forms",
        "DataBiding",
        "items",
        "redirection",
        "links",
        "Routing",
        "router",
        "navigation",
        "events",
        "events",
        "Admin",
        "management",
        "pages",
        "Angular",
        "Modules",
        "Services",
        "CRUD",
        "functionalities",
        "Items",
        "update",
        "tasks",
        "front",
        "ASPNET",
        "Web",
        "API",
        "services",
        "function",
        "calls",
        "structure",
        "project",
        "DataAccessLayer",
        "RepositoryLayer",
        "DataBusinessLayer",
        "UILayer",
        "Dependency",
        "Injection",
        "DataBusinessLayer",
        "Created",
        "database",
        "database",
        "approach",
        "Entity",
        "Framework",
        "Auto",
        "Mappers",
        "Models",
        "Controller",
        "Configured",
        "Postman",
        "Web",
        "API",
        "functions",
        "GIT",
        "source",
        "control",
        "JIRA",
        "project",
        "management",
        "Jasmine",
        "Karma",
        "Unit",
        "testing",
        "Components",
        "services",
        "methods",
        "Environment",
        "Angular",
        "Bootstrap",
        "Angular",
        "Material",
        "HTML5",
        "CSS3",
        "TypeScript",
        "Web",
        "API",
        "Microsoft",
        "C",
        "Microsoft",
        "Sql",
        "Server",
        "Entity",
        "Framework",
        "Postman",
        "GIT",
        "JIRA",
        "Jasmine",
        "Karma",
        "Full",
        "Stack",
        "Application",
        "Developer",
        "Wines",
        "Til",
        "SoldOut",
        "Pennsauken",
        "NJ",
        "July",
        "December",
        "WTSOcom",
        "Wines",
        "Til",
        "leader",
        "Wine",
        "Flash",
        "Sale",
        "sites",
        "bottles",
        "project",
        "Web",
        "Application",
        "information",
        "wines",
        "option",
        "Stack",
        "developer",
        "customer",
        "employee",
        "web",
        "applications",
        "bugs",
        "fixes",
        "ASPNET",
        "framework",
        "Web",
        "API",
        "Angular",
        "Roles",
        "Responsibilities",
        "Angular",
        "Web",
        "API",
        "Frontend",
        "components",
        "Angular",
        "Bootstrap",
        "Primeng",
        "Angular",
        "Font",
        "Awesome",
        "Login",
        "page",
        "Reactive",
        "Form",
        "Validation",
        "Authentication",
        "Authorization",
        "Router",
        "Module",
        "Routing",
        "Guard",
        "Exception",
        "Handling",
        "Authentication",
        "Authorization",
        "storage",
        "components",
        "Details",
        "pages",
        "Angular",
        "Material",
        "Pagination",
        "Filter",
        "TemplateDriven",
        "Forms",
        "DataBiding",
        "items",
        "navigation",
        "links",
        "Routing",
        "route",
        "parameters",
        "products",
        "display",
        "page",
        "Angular",
        "Modules",
        "Observable",
        "Services",
        "CRUD",
        "Functionalities",
        "Items",
        "update",
        "tasks",
        "front",
        "ASPNET",
        "Web",
        "API",
        "services",
        "function",
        "calls",
        "Database",
        "Created",
        "DataAccessLayer",
        "Entity",
        "Framework",
        "CORS",
        "MicrosoftOwinCors",
        "Authentication",
        "Error",
        "Handling",
        "Exception",
        "Filter",
        "Postman",
        "page",
        "frontend",
        "Web",
        "API",
        "functions",
        "project",
        "GIT",
        "source",
        "version",
        "control",
        "Jasmine",
        "Karma",
        "Unit",
        "testing",
        "Components",
        "services",
        "methods",
        "Environment",
        "Angular",
        "Bootstrap",
        "Primeng",
        "HTML5",
        "CSS3",
        "TypeScript",
        "Web",
        "API",
        "Miscrosoft",
        "C",
        "Microsoft",
        "Sql",
        "Server",
        "Entity",
        "Framework",
        "Postman",
        "GIT",
        "Jasmine",
        "Karma",
        "Web",
        "Developer",
        "Decusoft",
        "Ramsey",
        "NJ",
        "March",
        "June",
        "Decusoft",
        "premier",
        "developer",
        "software",
        "solutions",
        "Web",
        "Application",
        "project",
        "Employee",
        "Management",
        "System",
        "EMS",
        "employer",
        "time",
        "salary",
        "bonus",
        "work",
        "days",
        "distribution",
        "employees",
        "COMPOSE",
        "project",
        "compensation",
        "software",
        "solution",
        "login",
        "page",
        "employees",
        "management",
        "page",
        "bonus",
        "calculation",
        "page",
        "ASPNET",
        "MVC",
        "MS",
        "Sql",
        "Server",
        "Roles",
        "Responsibilities",
        "Web",
        "Application",
        "ASPNET",
        "MVC",
        "ModelViewController",
        "ASPNET",
        "Razor",
        "View",
        "Engine",
        "data",
        "models",
        "MVC",
        "Entity",
        "Framework",
        "Database",
        "Approach",
        "Onion",
        "Architecture",
        "Entity",
        "Framework",
        "Generic",
        "Repository",
        "Unit",
        "work",
        "pattern",
        "project",
        "4layers",
        "DataAccesslayer",
        "Repository",
        "DataBusinesslayer",
        "UIlayer",
        "Repository",
        "pattern",
        "DAL",
        "access",
        "rules",
        "logic",
        "ASPNET",
        "MVC",
        "ConventionBased",
        "AttributeBased",
        "parameters",
        "Views",
        "Controllers",
        "C",
        "Partial",
        "Class",
        "distribution",
        "method",
        "code",
        "merge",
        "collaboration",
        "amount",
        "filter",
        "sliders",
        "jQuery",
        "Ajax",
        "jQuery",
        "Ajax",
        "filtration",
        "data",
        "frontend",
        "data",
        "object",
        "Action",
        "Filter",
        "controllers",
        "ViewModels",
        "data",
        "views",
        "HTML5",
        "CSS3",
        "jQuery",
        "javascript",
        "Bootstrap",
        "view",
        "animation",
        "Error",
        "Handler",
        "Data",
        "annotation",
        "login",
        "page",
        "page",
        "input",
        "data",
        "NUnit",
        "unit",
        "testing",
        "C",
        "developers",
        "Git",
        "source",
        "control",
        "tool",
        "Agile",
        "Scrum",
        "environment",
        "project",
        "development",
        "Jasmine",
        "Karma",
        "Unit",
        "testing",
        "MVC",
        "Environment",
        "Microsoft",
        "C",
        "ASPNET",
        "MVC",
        "MS",
        "Sql",
        "Server",
        "HTML5",
        "CSS3",
        "jQueryAjax",
        "javascript",
        "Bootstrap",
        "Entity",
        "Framework",
        "GIT",
        "Postman",
        "Jasmine",
        "Karma",
        "Web",
        "Developer",
        "Hetony",
        "Inc",
        "West",
        "Orange",
        "NJ",
        "January",
        "February",
        "Hetony",
        "Inc",
        "group",
        "motor",
        "experts",
        "motor",
        "features",
        "cost",
        "budget",
        "motor",
        "technology",
        "project",
        "website",
        "kinds",
        "motors",
        "solutions",
        "customers",
        "ASPNET",
        "WCF",
        "MS",
        "Sql",
        "Server",
        "Roles",
        "Responsibilities",
        "database",
        "TSQL",
        "Stored",
        "Procedures",
        "User",
        "Defined",
        "Functions",
        "Views",
        "Indexes",
        "Views",
        "Triggers",
        "Error",
        "Handling",
        "application",
        "architecture",
        "flowcharts",
        "business",
        "requirement",
        "NTier",
        "Architecture",
        "ADONET",
        "Data",
        "Reader",
        "Data",
        "adapter",
        "Data",
        "Set",
        "Data",
        "View",
        "connection",
        "database",
        "LINQ",
        "functionality",
        "categories",
        "application",
        "Bootstrap",
        "user",
        "interface",
        "ViewBag",
        "TempData",
        "ViewModel",
        "data",
        "table",
        "format",
        "model",
        "bindings",
        "data",
        "user",
        "input",
        "controller",
        "frontend",
        "view",
        "data",
        "function",
        "WCF",
        "SOA",
        "Architecture",
        "architecture",
        "definition",
        "standards",
        "naming",
        "conventions",
        "functions",
        "Service",
        "Layer",
        "Data",
        "Annotations",
        "Partial",
        "Class",
        "code",
        "maintainability",
        "host",
        "layer",
        "services",
        "SoapUI",
        "Unit",
        "testing",
        "WCF",
        "methods",
        "Git",
        "version",
        "controls",
        "code",
        "merges",
        "support",
        "team",
        "environment",
        "problem",
        "skills",
        "Environment",
        "MS",
        "C",
        "ASPNET",
        "WCF",
        "ADONET",
        "MS",
        "Sql",
        "Server",
        "HTML5",
        "CSS3",
        "SoapUI",
        "GIT",
        "Education",
        "Master",
        "Science",
        "Electrical",
        "Computer",
        "Science",
        "New",
        "Jersey",
        "Institute",
        "Technology",
        "Newark",
        "NJ",
        "Skills",
        "ADO",
        "DATABASE",
        "ADONET",
        "MICROSOFT",
        "SQL",
        "SERVER",
        "MICROSOFT",
        "SQL",
        "SERVER",
        "Additional",
        "Information",
        "Skills",
        "Programming",
        "Microsoft",
        "C",
        "CC",
        "Web",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQueryAjax",
        "TypeScript",
        "Angular",
        "Bootstrap",
        "Primeng",
        "Angular",
        "Material",
        "Net",
        "Web",
        "API",
        "ASPNET",
        "MVC",
        "Web",
        "Service",
        "WCF",
        "ASPNET",
        "Web",
        "Forms",
        "ADONET",
        "Entity",
        "Framework",
        "Database",
        "Microsoft",
        "Sql",
        "Server",
        "IDE",
        "Visual",
        "Studio",
        "Visual",
        "Studio",
        "Code",
        "Test",
        "Postman",
        "Unit",
        "Testing",
        "Jasmine",
        "Karma",
        "Others",
        "GIT",
        "Azure",
        "DevOps",
        "JSON",
        "XML",
        "Slack"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:13:03.221463",
    "resume_data": "Full Stack Software Developer Full Stack Software span lDeveloperspan Full Stack Software Developer Metro Sports Inc Highlyskilled Full Stack Net Developer with 5 years of experience in both FrontEnd and BackEnd Web Application Design and has worked in various diverse handson projects with the implementation of ObjectOriented Design Software Design Patterns NTier Architecture Onion Architecture and Relational Database Design Highlyskilled knowledge of developing Web Application using ASPNET Web API ASPNET MVC 5 Web Services Windows Communication FoundationWCF and ASPNET Web Forms Implemented CRUD operations through HTTP service both in Web API and ASPNET MVC Proficiency in objectoriented programming language in Microsoft C and C Hands on experience in ADONET Entity Framework and LINQ design Hands on experience in Database design like Normalization create Store Procedures and UserDefined Functions using MS Sql Server Deep understanding in javascript jQuery Ajax and Typescript Extensive knowledge of frontend design and development using HTML5 CSS3 4 javascript Frequently used Bootstrap Primeng Angular Material Font Awesome and other third party Libraries Worked on projects consuming the RESTful Web API using Angular Services Expertise in Angular features like Routing Data Binding Directives Page Loading Component Communication Dependency Injection Service HTTP server Forms and Exception Handling Solid understanding of testing software like Postman Jasmine and Karma Experienced in both Agile and Waterfall SDLC methodologies Experienced in Source and Version Control using Microsoft Azure DevOps and Git Responsible detailoriented as a Full Stack Developer good at selfproblem solving understanding the requirement and fulfilling the expectations Successful at ontime execution and delivery Work Experience Full Stack Software Developer Metro Sports Inc Stirling NJ January 2018 to Present Metro Sport is an Ecommerce which provides all kinds of swimming suits goggles apparel to teams and individuals The project was aimed to replace the old Web Application so that it can provide efficient ways for the customers to search and purchase I was responsible for developing the webbased search and purchase system to allow customers to shop the swimming items online Angular 6 ASPNET Web API and MS Sql Server are the technologies used in this project Roles and Responsibilities Experienced in frontend development using Angular 6 backend using Web API and Database Design Handled Frontend components using Angular 6 Bootstrap HTML5 and CSS3 Created UI pages with Angular Material and Angular Font Awesome Built the Account Login page using Validation Authentication Router Module Route Guard and Exception Handling Implemented Authentication and Authorization using local storage token based Polished the Details page using Angular Material like Pagination and Filter Implemented form validation error messages form reset and search functions in components Used Angular Dependency Injection Created TemplateDriven Forms and DataBiding to display the related items Deployed redirection links using Routing router navigation events to trace the events Built the Admin management pages with Angular Modules Observable and Services to implement the CRUD functionalities such as viewing Items add update and delete tasks in front and backend Built RESTful ASPNET Web API services that support different function calls Deployed 4layer structure for the project such as DataAccessLayer RepositoryLayer DataBusinessLayer and UILayer Implemented Dependency Injection in DataBusinessLayer Created database using database first approach by Entity Framework Used Auto Mappers to map the Models and Controller Configured Postman to test the Web API functions Used GIT for source control and JIRA for project management Deployed Jasmine and Karma to do the Unit testing on Components and services methods Environment Angular 6 Bootstrap Angular Material HTML5 CSS3 TypeScript Web API Microsoft C Microsoft Sql Server 2017 Entity Framework 6 Postman GIT JIRA and Jasmine and Karma Full Stack Application Developer Wines Til SoldOut Pennsauken NJ July 2016 to December 2017 WTSOcom Wines Til Sold Out is the leader in Wine Flash Sale sites with over 25 million bottles sold The project is about Web Application that provides information about wines with an option to purchase I worked as a Full Stack developer and was responsible for improving both customer and employee facing web applications and bugs fixes using ASPNET framework Web API and Angular 4 Roles and Responsibilities Contributed to frontend using Angular 4 and backend using Web API Developed Frontend components using Angular 4 Bootstrap Primeng and Angular Font Awesome Improved the Login page using Reactive Form Validation Authentication Authorization Router Module Routing Guard and Exception Handling Implemented Authentication and Authorization using local storage token based for logging in Angular components Built the Details pages using Angular Material like Pagination Filter Using TemplateDriven Forms and DataBiding to display the related items Arranged navigation links using Routing route parameters Coded the products display page with Angular Modules Observable Services to implement the CRUD Functionalities such as viewing Items add update and delete tasks both in front and backend Built RESTful ASPNET Web API services that support different function calls Improved the Database and Created DataAccessLayer using Entity Framework Enabled the CORS by MicrosoftOwinCors Implemented the Authentication and Error Handling with Exception Filter Built Postman simulating page as the frontend to test the Web API functions Worked on the project using GIT source version control Used Jasmine and Karma to do the Unit testing on Components and services methods Environment Angular 4 Bootstrap Primeng HTML5 CSS3 TypeScript Web API Miscrosoft C Microsoft Sql Server 2014 Entity Framework 6 Postman GIT and Jasmine and Karma Web Developer Decusoft Ramsey NJ March 2015 to June 2016 Decusoft is a premier developer of configurable and webbased software solutions This Web Application project focuses on the Employee Management System EMS so that the employer can manage the time salary bonus work days projects distribution of employees efficiently I worked on the COMPOSE project which is a specialized compensation software solution about login page employees management page bonus calculation page using ASPNET MVC and MS Sql Server Roles and Responsibilities Designed Web Application using ASPNET MVC 5 ModelViewController with ASPNET Razor View Engine Generated data models in MVC using Entity Framework Database first Approach Implemented Onion Architecture by using Entity Framework Generic Repository and Unit of work pattern in project Created 4layers such as DataAccesslayer Repository DataBusinesslayer and UIlayer Implemented Repository pattern to isolate the DAL and to apply centrally managed consistent access rules and logic Implemented ASPNET MVC routing using ConventionBased and AttributeBased routing as well as routing with passing parameters Built the strongly typed Views and Controllers Used C Partial Class for better distribution method and better code merge collaboration Created dynamic amount of filter sliders with jQuery Ajax Used jQuery Ajax to pass filtration data from frontend to backend and display the data to view with JSON object Implemented Action Filter in controllers Created different ViewModels to manage the data in different views Used HTML5 CSS3 jQuery Ajax javascript and Bootstrap to beautify the view and add animation Implemented Error Handler and Data annotation for login page and signup page to validate the input data Used NUnit for unit testing in C Collaborated with other developers through Git source control tool Experienced in Agile and Scrum based environment for project development Used Jasmine and Karma to do the Unit testing on MVC Environment Microsoft C ASPNET MVC MS Sql Server 2014 HTML5 CSS3 jQueryAjax javascript Bootstrap Entity Framework GIT Postman and Jasmine and Karma Web Developer Hetony Inc West Orange NJ January 2014 to February 2015 Hetony Inc was founded by a group of electric motor experts who are specialized in the designing the motor with robust and efficient features at the cost effective budget utilizing the latest motor technology This project is to build up the website for displaying the kinds of motors and providing the solutions for the customers using ASPNET WCF and MS Sql Server 2012 Roles and Responsibilities Designed database using TSQL Stored Procedures User Defined Functions Views Indexes Views Triggers and Error Handling Designed the application architecture and flowcharts based on business requirement Implemented the NTier Architecture Worked on ADONET Data Reader Data adapter Data Set and Data View to provide connection to the database Used LINQ to fulfill the functionality of searching by different categories Styled application using Bootstrap for user interface Used ViewBag TempData and ViewModel to display data Displayed result in the table format Implemented model bindings to retrieve data from user input to controller Created the frontend view to display data and fulfilled an autocomplete function Developed WCF in an SOA Architecture participating in architecture definition coding standards and naming conventions Set up required functions in Service Layer with Data Annotations Used Partial Class for code maintainability and further merging convincing Implemented host layer for hosting services Created SoapUI to do Unit testing on WCF methods Used Git for version controls and code merges Able to coordinate and provide support within a team environment with problem solving and strong analytical skills Environment MS C ASPNET WCF ADONET MS Sql Server 2012 HTML5 CSS3 SoapUI and GIT Education Master of Science in Electrical and Computer Science New Jersey Institute of Technology Newark NJ Skills ADO DATABASE ADONET MICROSOFT SQL SERVER MICROSOFT SQL SERVER 2012 Additional Information Skills Programming Microsoft C CC Web HTML5 CSS3 4 JavaScript jQueryAjax TypeScript Angular 46 Bootstrap Primeng Angular Material Net Web API ASPNET MVC 5 Web Service WCF ASPNET Web Forms ADONET LINQ Entity Framework Database Microsoft Sql Server 2012 2014 2016 2017 IDE Visual Studio Visual Studio Code Test Postman Unit Testing Jasmine Karma Others GIT Azure DevOps JSON XML Slack",
    "unique_id": "13990e8a-0f41-48bd-881b-7b7e512f23a6"
}