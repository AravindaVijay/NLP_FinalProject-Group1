{
    "clean_data": "Python developer span lPythonspan span ldeveloperspan Python developer T Rowe Price San Francisco CA Experienced professional with 5 years of technical exposure in diverse technologies like Python Django PostgreSQL Linux MySQL and AWS Experienced in developing webbased applications using Python DJANGO GTK QT C JSON CSS HTML DHTML JavaScript and JQuery Handson experience in SOAP and RESTful web services Handson experience in relational database connections like DBAPI connection management and querybased access to databases like PostgreSQL and MySQL in Python Experienced in MVW frameworks like Django Angularjs Java Script JQuery and Nodejs Having working Knowledge of Amazon AWS S3 Experienced in developing Web Services with Python programming language Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Expertise in PIP community most used Python Package Manager PyVows BDD tool for Python Expertise in working with GUI frameworksPyjamas Jytho guidata  PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Excellent written and oral communication skills with resultsoriented attitude Experienced in Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Authorized to work in the US for any employer Work Experience Python developer T Rowe Price San Francisco CA November 2018 to Present Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Worked on Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Amazon Elastic Beanstalk with Amazon EC2 instance to deploy Django project into AWS Configured continuous integration with Jenkins on Amazon EC2 Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created Data pipelines and configured EMR Cluster to offload the data to Redshift Configured Data pipelines with EMR Cluster to offload the data to Redshift Configured and administered Jenkins for continuous integration and deployment into Tomcat Application Server and to improve reusability for building pipelines Created data pipelines in AWS using AWS native services like LambdaEC2 and are aware of big data transformation Python Developer HP Palo Alto CA September 2017 to October 2018 Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Using SQL Alchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Wrote Python scripts to XML documents and load the data in the database Designed and developed application frontend GUI using JSP HTML JavaScript CSS Ajax Designed controller and business logic using Spring MVC module Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap Extensively developed stored procedures triggers functions and packages in oracle SQL PLSQL Utilized Python in the handling of all the hits on Django Redis and other applications Implemented SOAP using web services to interact with various devices to pull realtime data on the network Loading analyzing and extracting data to and from Oracle Database with Python Used standard Python modules eg csv itertools jinja for development Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Cleansing data generated from weblogs with automated scripts in Python Using Mongo DBNoSQL database for storing the information Used SVN repository for software configuration management and version control Python Developer BNY Mellon IN August 2012 to March 2015 Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Implemented Test Driven Development TDD strategy for the project Developed Python batch processors to consume and produce various feeds Created database access layer using JDBC and PLSQL stored procedures Responsible for search engine optimization to improve the visibility of the website Developed Merge jobs in Python to extract and load data into MySQL database Used AngularJS builtin directives custom directives and services for developing interceptor and complex UI data table grids Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Utilized Python specific tools including Django Django Rest Framework Django ORM Flask SQL Alchemy Pandas NumPy Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Deployed the project into WebLogic using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Python Developer Accenture IN July 2011 to July 2012 Participated in frontend development using Angular JS JavaScript jQuery HTML CSS and bootstrap Experience with Requests NumPy SciPy Matplotlib and Pandas python libraries during development Developed python scripting to automate parameter upload into Oracle Database from Excel Used python to generate reports for management showing the quality of data migration and migration data load success percentage overtime to understand the area of improvement Have Knowledge of multithreading multiprocessing asynchronous GIL in python Have experience in JWT based authentication for RESTFUL API Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB Help the bank and functional product consultant on the gap fitment and changes All the existing REST API are built in Flask for future project where the number of users is more we are implementing in Django REST API framework recently done POC for feasibility Worked on Django in built library Testcase library for continuous integration and also Django ORM object relational mapper Used bulk collections for better performance and easy retrieval of data by reducing context switching between SQL and PLSQL engines Created database objects like tables views procedures functions dynamic SQL and packages using PLSQL developer Developed PLSQL procedure to merge tables when we are integrating commercial loans with consumer loans Skilled in ObjectOriented Design and Programming using Python Education Bachelors Skills Amazon web services Hadoop Bootstrap Reactjs Json MYSQL Javascript CSS Jquery Git PHP HTML 5 Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix AJAX JQuery JSON XML XSLT LDAP OAuth SOAP REST Selenium Splinter PyChecker Komodo PyCharm PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Kafka Swagger OpenStack Amazon Web Services AWS NumPy PyDev Data pipelines",
    "entities": [
        "DAO Added",
        "Python Flask",
        "GUI",
        "PyCharm PyScripter PyStudio",
        "XMLJSON",
        "HTML AJAX CSS",
        "UNIX",
        "SQL PLSQL Utilized Python",
        "CSS HTML",
        "ObjectOriented Design and Programming",
        "Hadoop",
        "Python Django PostgreSQL Linux MySQL",
        "SOAP",
        "XML",
        "DHTML",
        "Spec Involved",
        "MAC",
        "Functional",
        "J2EE Design",
        "WebLogic",
        "Bash Successfully",
        "HBase",
        "Amazon",
        "Kubernetes Created Data",
        "UserAcceptance",
        "Python",
        "Integrated Development Environments",
        "Docker AWS Lambda Serverless",
        "DBAPI",
        "Amazon AWS S3",
        "Stored Procedures",
        "Bash",
        "HDFS Hive Leveraged AWS",
        "NOVA",
        "PyWebkitGtk",
        "Redshift Configured Data",
        "Django",
        "Spring MVC",
        "San Francisco",
        "Developed Business Logic",
        "Hadoop MapReduce",
        "Python Developer Accenture",
        "RESTFUL API",
        "Bash Involved",
        "T Rowe Price",
        "API RESTful Web Service",
        "Linux",
        "Created Data",
        "JSP",
        "Flask",
        "SQL Queries",
        "Shell Scripting",
        "Docker",
        "DOM",
        "RDS",
        "Views",
        "PyQt",
        "Oracle Database",
        "Hadoop Bootstrap Reactjs Json",
        "Spark",
        "Scala Container",
        "GIT",
        "WebSphere WebLogic Tomcat Web Servers",
        "US",
        "NGINX",
        "Python Using Mongo DBNoSQL",
        "JQuery Handson",
        "Created",
        "Bootstrap Big Data Hadoop",
        "AWS",
        "GitHub Bitbucket",
        "Python Developer BNY Mellon",
        "Worked on Microservices",
        "RAD Expertise",
        "HTML",
        "SAS",
        "SQL",
        "Design",
        "Fiddler",
        "Bootstrap",
        "lPythonspan",
        "Nodejs Having",
        "Oracle SQLite PostgreSQL MySQL DB2",
        "Wireshark",
        "Integration Testing GUI",
        "Developed Python",
        "MVW",
        "Handson",
        "SQLite",
        "CRUD",
        "Build",
        "Tomcat Application Server",
        "JWT",
        "Djangos",
        "AWS Configured",
        "Redshift Configured",
        "UI",
        "Python Package",
        "Spark shark Streams",
        "Using SQL Alchemy",
        "Created Business Logic",
        "Implemented Test Driven Development TDD",
        "SVN",
        "Present Developed",
        "REST",
        "CA Experienced",
        "Python Developer HP Palo Alto",
        "Python Developed",
        "PIP"
    ],
    "experience": "Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Excellent written and oral communication skills with resultsoriented attitude Experienced in Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Authorized to work in the US for any employer Work Experience Python developer T Rowe Price San Francisco CA November 2018 to Present Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Worked on Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Amazon Elastic Beanstalk with Amazon EC2 instance to deploy Django project into AWS Configured continuous integration with Jenkins on Amazon EC2 Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created Data pipelines and configured EMR Cluster to offload the data to Redshift Configured Data pipelines with EMR Cluster to offload the data to Redshift Configured and administered Jenkins for continuous integration and deployment into Tomcat Application Server and to improve reusability for building pipelines Created data pipelines in AWS using AWS native services like LambdaEC2 and are aware of big data transformation Python Developer HP Palo Alto CA September 2017 to October 2018 Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Using SQL Alchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Wrote Python scripts to XML documents and load the data in the database Designed and developed application frontend GUI using JSP HTML JavaScript CSS Ajax Designed controller and business logic using Spring MVC module Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap Extensively developed stored procedures triggers functions and packages in oracle SQL PLSQL Utilized Python in the handling of all the hits on Django Redis and other applications Implemented SOAP using web services to interact with various devices to pull realtime data on the network Loading analyzing and extracting data to and from Oracle Database with Python Used standard Python modules eg csv itertools jinja for development Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Cleansing data generated from weblogs with automated scripts in Python Using Mongo DBNoSQL database for storing the information Used SVN repository for software configuration management and version control Python Developer BNY Mellon IN August 2012 to March 2015 Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Implemented Test Driven Development TDD strategy for the project Developed Python batch processors to consume and produce various feeds Created database access layer using JDBC and PLSQL stored procedures Responsible for search engine optimization to improve the visibility of the website Developed Merge jobs in Python to extract and load data into MySQL database Used AngularJS builtin directives custom directives and services for developing interceptor and complex UI data table grids Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Utilized Python specific tools including Django Django Rest Framework Django ORM Flask SQL Alchemy Pandas NumPy Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Deployed the project into WebLogic using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Python Developer Accenture IN July 2011 to July 2012 Participated in frontend development using Angular JS JavaScript jQuery HTML CSS and bootstrap Experience with Requests NumPy SciPy Matplotlib and Pandas python libraries during development Developed python scripting to automate parameter upload into Oracle Database from Excel Used python to generate reports for management showing the quality of data migration and migration data load success percentage overtime to understand the area of improvement Have Knowledge of multithreading multiprocessing asynchronous GIL in python Have experience in JWT based authentication for RESTFUL API Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB Help the bank and functional product consultant on the gap fitment and changes All the existing REST API are built in Flask for future project where the number of users is more we are implementing in Django REST API framework recently done POC for feasibility Worked on Django in built library Testcase library for continuous integration and also Django ORM object relational mapper Used bulk collections for better performance and easy retrieval of data by reducing context switching between SQL and PLSQL engines Created database objects like tables views procedures functions dynamic SQL and packages using PLSQL developer Developed PLSQL procedure to merge tables when we are integrating commercial loans with consumer loans Skilled in ObjectOriented Design and Programming using Python Education Bachelors Skills Amazon web services Hadoop Bootstrap Reactjs Json MYSQL Javascript CSS Jquery Git PHP HTML 5 Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix AJAX JQuery JSON XML XSLT LDAP OAuth SOAP REST Selenium Splinter PyChecker Komodo PyCharm PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Kafka Swagger OpenStack Amazon Web Services AWS NumPy PyDev Data pipelines",
    "extracted_keywords": [
        "developer",
        "span",
        "lPythonspan",
        "span",
        "ldeveloperspan",
        "Python",
        "developer",
        "T",
        "Rowe",
        "Price",
        "San",
        "Francisco",
        "CA",
        "years",
        "exposure",
        "technologies",
        "Python",
        "Django",
        "PostgreSQL",
        "Linux",
        "MySQL",
        "AWS",
        "applications",
        "Python",
        "DJANGO",
        "GTK",
        "QT",
        "C",
        "JSON",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Handson",
        "experience",
        "SOAP",
        "web",
        "services",
        "Handson",
        "experience",
        "database",
        "connections",
        "DBAPI",
        "connection",
        "management",
        "access",
        "databases",
        "PostgreSQL",
        "MySQL",
        "Python",
        "MVW",
        "frameworks",
        "Django",
        "Angularjs",
        "Java",
        "Script",
        "JQuery",
        "Nodejs",
        "Knowledge",
        "Amazon",
        "AWS",
        "S3",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "Application",
        "Servers",
        "WebSphere",
        "WebLogic",
        "Tomcat",
        "Web",
        "Servers",
        "Apache",
        "server",
        "NGINX",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "Eclipse",
        "MyEclipse",
        "JDeveloper",
        "RAD",
        "Expertise",
        "PIP",
        "community",
        "Python",
        "Package",
        "Manager",
        "BDD",
        "tool",
        "Python",
        "Expertise",
        "GUI",
        "Jytho",
        "PyQt",
        "PyWebkitGtk",
        "Elasticsearch",
        "Log",
        "stash",
        "Kibana",
        "ELK",
        "Expertise",
        "Crypto",
        "Blockchain",
        "Bitcoin",
        "Monaro",
        "Bitcoin",
        "Cash",
        "Ecommerce",
        "platform",
        "Python",
        "Flask",
        "backend",
        "JinjaJavaScript",
        "experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Open",
        "stack",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "UserAcceptance",
        "testing",
        "testing",
        "Experience",
        "operating",
        "systems",
        "Windows",
        "NT",
        "XP",
        "Vista",
        "UNIX",
        "MAC",
        "OS",
        "X",
        "Excellent",
        "communication",
        "skills",
        "attitude",
        "Microservices",
        "architecture",
        "technologies",
        "Docker",
        "AWS",
        "Lambda",
        "Serverless",
        "design",
        "patterns",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "developer",
        "T",
        "Rowe",
        "Price",
        "San",
        "Francisco",
        "CA",
        "November",
        "Present",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "companys",
        "website",
        "Django",
        "framework",
        "design",
        "server",
        "applications",
        "Wrote",
        "Python",
        "code",
        "procedure",
        "automate",
        "processes",
        "Build",
        "test",
        "functionality",
        "production",
        "pipeline",
        "Python",
        "code",
        "bugs",
        "upgrades",
        "functionality",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "solution",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "web",
        "middleware",
        "end",
        "systems",
        "Python",
        "SQL",
        "Linux",
        "Windows",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Wireshark",
        "http",
        "headers",
        "Fiddler",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "editors",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "PyDev",
        "Wing",
        "IDE",
        "Spyder",
        "services",
        "NOVA",
        "SWIFT",
        "KEYSTONE",
        "NEUTRON",
        "CINDER",
        "GLANCE",
        "J2EE",
        "Design",
        "patterns",
        "Singleton",
        "Service",
        "Locator",
        "DAO",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Developed",
        "Kafka",
        "producer",
        "consumers",
        "HBase",
        "Spark",
        "shark",
        "Streams",
        "Hadoop",
        "MapReduce",
        "jobs",
        "components",
        "HDFS",
        "Hive",
        "Leveraged",
        "AWS",
        "cloud",
        "services",
        "EC2",
        "auto",
        "scaling",
        "systems",
        "load",
        "servers",
        "Microservices",
        "architecture",
        "technologies",
        "Docker",
        "AWS",
        "Lambda",
        "Serverless",
        "design",
        "patterns",
        "Hadoop",
        "stack",
        "data",
        "tools",
        "Pig",
        "Hive",
        "HBase",
        "database",
        "DynamoDB",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "instance",
        "Django",
        "project",
        "AWS",
        "integration",
        "Jenkins",
        "Amazon",
        "EC2",
        "Connected",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "HiveSQL",
        "queries",
        "Spark",
        "transformations",
        "Spark",
        "RDDs",
        "Python",
        "Scala",
        "Container",
        "management",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "Created",
        "Data",
        "pipelines",
        "EMR",
        "Cluster",
        "data",
        "Configured",
        "Data",
        "pipelines",
        "EMR",
        "Cluster",
        "data",
        "Redshift",
        "Configured",
        "Jenkins",
        "integration",
        "deployment",
        "Tomcat",
        "Application",
        "Server",
        "reusability",
        "pipelines",
        "data",
        "pipelines",
        "AWS",
        "AWS",
        "services",
        "LambdaEC2",
        "data",
        "transformation",
        "Python",
        "Developer",
        "HP",
        "Palo",
        "Alto",
        "CA",
        "September",
        "October",
        "REST",
        "APIs",
        "part",
        "applications",
        "insurance",
        "premium",
        "calculations",
        "Django",
        "REST",
        "framework",
        "Pythons",
        "graphics",
        "APIs",
        "graphics",
        "serialization",
        "libraries",
        "data",
        "XMLJSON",
        "formats",
        "REST",
        "APIs",
        "Django",
        "framework",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Experience",
        "collections",
        "Python",
        "user",
        "objects",
        "Design",
        "custom",
        "Bash",
        "scripts",
        "data",
        "flow",
        "PostgreSQL",
        "database",
        "development",
        "team",
        "data",
        "query",
        "strings",
        "PostgreSQL",
        "backend",
        "data",
        "SQL",
        "Alchemy",
        "Flask",
        "PostgreSQL",
        "database",
        "web",
        "application",
        "REST",
        "API",
        "testing",
        "web",
        "service",
        "serverside",
        "changes",
        "scripts",
        "build",
        "deployment",
        "maintain",
        "task",
        "Jenkins",
        "Maven",
        "Python",
        "Bash",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Managed",
        "code",
        "GitHub",
        "Bitbucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Wrote",
        "Python",
        "scripts",
        "documents",
        "data",
        "database",
        "application",
        "frontend",
        "GUI",
        "JSP",
        "HTML",
        "JavaScript",
        "CSS",
        "Ajax",
        "controller",
        "business",
        "logic",
        "Spring",
        "MVC",
        "module",
        "forms",
        "HTML",
        "validations",
        "JavaScript",
        "JQuery",
        "Bootstrap",
        "procedures",
        "functions",
        "packages",
        "oracle",
        "SQL",
        "PLSQL",
        "Python",
        "handling",
        "hits",
        "Django",
        "Redis",
        "applications",
        "SOAP",
        "web",
        "services",
        "devices",
        "data",
        "network",
        "Loading",
        "data",
        "Oracle",
        "Database",
        "Python",
        "Python",
        "modules",
        "eg",
        "csv",
        "itertools",
        "jinja",
        "development",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Cleansing",
        "data",
        "weblogs",
        "scripts",
        "Python",
        "Mongo",
        "DBNoSQL",
        "database",
        "information",
        "SVN",
        "repository",
        "software",
        "configuration",
        "management",
        "version",
        "control",
        "Python",
        "Developer",
        "BNY",
        "Mellon",
        "August",
        "March",
        "Design",
        "development",
        "test",
        "deploy",
        "maintenance",
        "website",
        "UI",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "property",
        "list",
        "application",
        "Python",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "CSS",
        "HTML",
        "framework",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "strategy",
        "project",
        "Python",
        "batch",
        "processors",
        "feeds",
        "database",
        "access",
        "layer",
        "JDBC",
        "procedures",
        "search",
        "engine",
        "optimization",
        "visibility",
        "website",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "builtin",
        "directives",
        "custom",
        "directives",
        "services",
        "interceptor",
        "UI",
        "data",
        "table",
        "grids",
        "services",
        "filters",
        "filter",
        "functionality",
        "search",
        "box",
        "integrator",
        "functionalities",
        "Python",
        "tools",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "Django",
        "ORM",
        "Flask",
        "SQL",
        "Alchemy",
        "Pandas",
        "NumPy",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "web",
        "application",
        "testing",
        "Spec",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "Cursors",
        "project",
        "WebLogic",
        "GIT",
        "version",
        "control",
        "system",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Python",
        "Developer",
        "Accenture",
        "July",
        "July",
        "frontend",
        "development",
        "JS",
        "JavaScript",
        "jQuery",
        "HTML",
        "CSS",
        "bootstrap",
        "Experience",
        "Requests",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Pandas",
        "libraries",
        "development",
        "python",
        "scripting",
        "parameter",
        "upload",
        "Oracle",
        "Database",
        "Excel",
        "python",
        "reports",
        "management",
        "quality",
        "data",
        "migration",
        "migration",
        "data",
        "load",
        "success",
        "percentage",
        "overtime",
        "area",
        "improvement",
        "Knowledge",
        "GIL",
        "python",
        "experience",
        "JWT",
        "authentication",
        "RESTFUL",
        "API",
        "Experience",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "DB2",
        "databases",
        "MongoDB",
        "bank",
        "product",
        "consultant",
        "gap",
        "fitment",
        "REST",
        "API",
        "Flask",
        "project",
        "number",
        "users",
        "Django",
        "REST",
        "API",
        "framework",
        "POC",
        "feasibility",
        "Django",
        "library",
        "Testcase",
        "library",
        "integration",
        "Django",
        "ORM",
        "mapper",
        "collections",
        "performance",
        "retrieval",
        "data",
        "context",
        "switching",
        "SQL",
        "PLSQL",
        "engines",
        "database",
        "tables",
        "views",
        "procedures",
        "functions",
        "SQL",
        "packages",
        "PLSQL",
        "developer",
        "PLSQL",
        "procedure",
        "tables",
        "loans",
        "consumer",
        "loans",
        "ObjectOriented",
        "Design",
        "Programming",
        "Python",
        "Education",
        "Bachelors",
        "Skills",
        "Amazon",
        "web",
        "services",
        "Hadoop",
        "Bootstrap",
        "Reactjs",
        "Json",
        "MYSQL",
        "Javascript",
        "CSS",
        "Jquery",
        "Git",
        "PHP",
        "HTML",
        "Information",
        "SKILLS",
        "Python",
        "Scala",
        "SQL",
        "PLSQL",
        "SAS",
        "PEP8",
        "PIP",
        "Spark",
        "Requests",
        "Scrapy",
        "SQLAlchemy",
        "BeautifulSoup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "EmberJS",
        "ReactJS",
        "Bootstrap",
        "Big",
        "Data",
        "Hadoop",
        "Linux",
        "Unix",
        "AJAX",
        "JQuery",
        "JSON",
        "XML",
        "XSLT",
        "LDAP",
        "OAuth",
        "SOAP",
        "REST",
        "Selenium",
        "Splinter",
        "PyChecker",
        "Komodo",
        "PyCharm",
        "PyScripter",
        "PyShield",
        "Spyder",
        "Jupyter",
        "MySQL",
        "Teradata",
        "SQL",
        "Server",
        "IntelliJ",
        "Kafka",
        "Swagger",
        "OpenStack",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "NumPy",
        "PyDev",
        "Data",
        "pipelines"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:20:45.528489",
    "resume_data": "Python developer span lPythonspan span ldeveloperspan Python developer T Rowe Price San Francisco CA Experienced professional with 5 years of technical exposure in diverse technologies like Python Django PostgreSQL Linux MySQL and AWS Experienced in developing webbased applications using Python DJANGO GTK QT C JSON CSS HTML DHTML JavaScript and JQuery Handson experience in SOAP and RESTful web services Handson experience in relational database connections like DBAPI connection management and querybased access to databases like PostgreSQL and MySQL in Python Experienced in MVW frameworks like Django Angularjs Java Script JQuery and Nodejs Having working Knowledge of Amazon AWS S3 Experienced in developing Web Services with Python programming language Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse MyEclipse JDeveloper and RAD Expertise in PIP community most used Python Package Manager PyVows BDD tool for Python Expertise in working with GUI frameworksPyjamas Jytho guidata PyGUI PyQt PyWebkitGtk and Experienced with Elasticsearch Log stash and Kibana ELK Expertise in Crypto Blockchain Bitcoin Monaro Bitcoin Cash Ecommerce platform built utilizing Python with Flask backend and JinjaJavaScript frontend Good experience in Shell Scripting SQL Server UNIX and Linux Open stack Involved in Unit testing Integration testing UserAcceptance testing and Functional testing Experience in working with different operating systems Windows 98 NT 2000 XP Vista 7 8 UNIX and MAC OS X Excellent written and oral communication skills with resultsoriented attitude Experienced in Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Authorized to work in the US for any employer Work Experience Python developer T Rowe Price San Francisco CA November 2018 to Present Developed and designed Python based API RESTful Web Service to interact with companys website Successfully implemented Django framework to design server applications Wrote Python code and actively participated in the procedure to automate processes Build and test functionality within a production pipeline Implemented Python code to fix bugs and provides upgrades to existing functionality Created Business Logic using Python to create Planning and Tracking functions Involved in building database Model APIs and Views utilizing Python in order to build an interactive webbased solution Developed Business Logic using Python on Django Web Framework Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Developed complex web middleware and back end systems in Python SQL for Linux and Windows Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Involved in front end and utilized Bootstrap and Angularjs for page design Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting particular DOM elements when parsing HTML Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Worked with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Worked with openstack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Used J2EE Design patterns Singleton Service Locator and DAO Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed Kafka producer and consumers HBase clients Spark shark Streams and Hadoop MapReduce jobs along with components on HDFS Hive Leveraged AWS cloud services such as EC2 auto scaling and VPC to build secure highly scalable and flexible systems that handled load on the servers Worked on Microservices architecture using technologies such as Docker AWS Lambda Serverless design patterns Worked on analyzing Hadoop stack and different big data analytic tools including Pig Hive HBase database and DynamoDB Used Amazon Elastic Beanstalk with Amazon EC2 instance to deploy Django project into AWS Configured continuous integration with Jenkins on Amazon EC2 Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Involved in converting HiveSQL queries into Spark transformations using Spark RDDs Python and Scala Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installed and configured Kubernetes Created Data pipelines and configured EMR Cluster to offload the data to Redshift Configured Data pipelines with EMR Cluster to offload the data to Redshift Configured and administered Jenkins for continuous integration and deployment into Tomcat Application Server and to improve reusability for building pipelines Created data pipelines in AWS using AWS native services like LambdaEC2 and are aware of big data transformation Python Developer HP Palo Alto CA September 2017 to October 2018 Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Using SQL Alchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Wrote Python scripts to XML documents and load the data in the database Designed and developed application frontend GUI using JSP HTML JavaScript CSS Ajax Designed controller and business logic using Spring MVC module Developed forms using HTML and performing clientside validations using JavaScript JQuery and Bootstrap Extensively developed stored procedures triggers functions and packages in oracle SQL PLSQL Utilized Python in the handling of all the hits on Django Redis and other applications Implemented SOAP using web services to interact with various devices to pull realtime data on the network Loading analyzing and extracting data to and from Oracle Database with Python Used standard Python modules eg csv itertools jinja for development Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Cleansing data generated from weblogs with automated scripts in Python Using Mongo DBNoSQL database for storing the information Used SVN repository for software configuration management and version control Python Developer BNY Mellon IN August 2012 to March 2015 Involved in the Design development test deploy and maintenance of the website UI was developed using HTML AJAX CSS and JavaScript Developed entire frontend and backend modules using Python on Django Web Framework Generated property list for every application dynamically using Python Developed internal auxiliary web apps using Python Flask framework with CSS HTML framework Implemented Test Driven Development TDD strategy for the project Developed Python batch processors to consume and produce various feeds Created database access layer using JDBC and PLSQL stored procedures Responsible for search engine optimization to improve the visibility of the website Developed Merge jobs in Python to extract and load data into MySQL database Used AngularJS builtin directives custom directives and services for developing interceptor and complex UI data table grids Created AngularJS controllers services and used AngularJS filters for filter functionality in search box and integrator functionalities Utilized Python specific tools including Django Django Rest Framework Django ORM Flask SQL Alchemy Pandas NumPy Performed Unit testing Integration Testing GUI and web application testing using Spec Involved in writing SQL Queries and implementing stored procedures functions packages tables views Cursors triggers Deployed the project into WebLogic using GIT version control system Worked in MySQL database on simple queries and writing Stored Procedures for normalization and renormalization Build SQL queries for performing various CRUD operations like create update read and delete Python Developer Accenture IN July 2011 to July 2012 Participated in frontend development using Angular JS JavaScript jQuery HTML CSS and bootstrap Experience with Requests NumPy SciPy Matplotlib and Pandas python libraries during development Developed python scripting to automate parameter upload into Oracle Database from Excel Used python to generate reports for management showing the quality of data migration and migration data load success percentage overtime to understand the area of improvement Have Knowledge of multithreading multiprocessing asynchronous GIL in python Have experience in JWT based authentication for RESTFUL API Experience of working with relational databases like Oracle SQLite PostgreSQL MySQL DB2 and nonrelational databases like MongoDB Help the bank and functional product consultant on the gap fitment and changes All the existing REST API are built in Flask for future project where the number of users is more we are implementing in Django REST API framework recently done POC for feasibility Worked on Django in built library Testcase library for continuous integration and also Django ORM object relational mapper Used bulk collections for better performance and easy retrieval of data by reducing context switching between SQL and PLSQL engines Created database objects like tables views procedures functions dynamic SQL and packages using PLSQL developer Developed PLSQL procedure to merge tables when we are integrating commercial loans with consumer loans Skilled in ObjectOriented Design and Programming using Python Education Bachelors Skills Amazon web services Hadoop Bootstrap Reactjs Json MYSQL Javascript CSS Jquery Git PHP HTML 5 Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix AJAX JQuery JSON XML XSLT LDAP OAuth SOAP REST Selenium Splinter PyChecker Komodo PyCharm PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Kafka Swagger OpenStack Amazon Web Services AWS NumPy PyDev Data pipelines",
    "unique_id": "423dd78b-2bf2-4609-bedd-0f0ef316a791"
}