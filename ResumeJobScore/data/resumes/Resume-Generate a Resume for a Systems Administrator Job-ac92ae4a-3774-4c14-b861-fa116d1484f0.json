{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Sprint Kansas City MO Over 3 years of IT Experience in designing developing testing and implementing various standalone and clientserver Architectures based enterprise application software on different domains Expertise in developing webbased applications using Bash Perl Python PHP XML DHTML XHTML Ajax JOOMLA CSS HTML JSON JavaScript and Bootstrap Expertise in various Python packages such as Celery NumPy SQLAlchemy Beautiful soup Pickle PySide PyMongo SciPy PyTables PyUnit Efficient knowledge in using different version control systems like Git Perforce and GitHub Proficient intranet portal for managing Amazon EC2 servers using Tornado and MongoDB Expertise in all the phases of Software Development Life Cycle SDLC using Project management tool JIRA Expertise in Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Expertise in reporting tools like Grafana Kibana ELK for setting up charts and graphs for better visual representation of test results Expertise in Machine Learning algorithms like Linear Regression Logistic Regression knn SVM Neural Networks CNNs LSTMs RNNs xgboost and machine learning libraries like tensorflow pytorch Theano Expertise with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS Expertise in Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Expertise in using Shell scripting for automation by following Python PEP Expertise in Bash Shell Scripting SQL and Java libraries such as NumPy SciPy and Pandas for data analysis and numerical computations Proficient in web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB Proficient in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Expertise infrastructure from inhouse servers to AWS cloud Used Docker Container EC2 IAM RDS Route 53 REST API gateway and Lambda of AWS Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Expertise in Python Development and Scientific Programing and using Numpy and Pandas in Python for Data Manipulation Expertise in entire frontend and backend modules using Python on Django Web Framework Expertise with most of the web scale services on Amazon Web Services AWS Expertise in AWS like Amazon EC2 Amazon S3 Amazon Redshift Amazon EMR and Amazon SQS Expertise with Querying RDBMS such as My SQL SQL server and SAS Expertise in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django and MYSQL Expertise on various applications using python integrated IDEs Sublime Text PyCharm Spyder and IntelliJ Expertise in JavaScript frameworks to replace frontend of a Flask application and began implementing a React solution Expertise with automation tools such as Puppet or Chef Expertise in managing datasets using Panda data frames and MySQL Expertise in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django and MYSQL Expertise in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL database Expertise in using CI tools Hudson Build Forge and Jenkins for automated builds Expertise in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse Expertise with agile development methods like agilescrum TDD BDD peer code reviews continuous integration Developed responsive web product features using React JS SASS on Golang with REST Proficient in SQL and databases MS SQL MySQL Oracle noSQL Mongo DB Expertise in PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Expertise working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Expertise in deployment tools using Jenkins rpm dpkg Python Packages Expertise working in both Water fall and agile software methodologies Expertise building mockups GUI layouts by using HTML5 DHTML XHTML XML CSS and JavaScript Expertise in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups and Code review Expertise in User Interfaces using JSF Primefaces AngularJS JavaScript AJAX jQuery and CSS Expertise in developing webbased applications using Python 2730 Django 1718 PHP Angularjs C XML CSS HTML JavaScript and JQuery Expertise in using NOSQL libraries like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MYSQL databases Expertise in UNIX shell scripts for business process and loading data from different interfaces to HDFS Expertise in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Proficiency with the application servers like WebSphere WebLogic JBOSS and Tomcat Expertise in using ScikitLearn and Statsmodels in Python for Machine Learning and Data Mining Expertise in NLTK OpenNLP StanfordNLP for Natural Language Processing and sentiment analysis Expertise with SQL Server Management Studio SQL Developer Toad and MySQL GUI Tool Work Experience Python Developer Sprint Overland Park KS August 2018 to Present Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript JQuery Developed views and templates with Python and Djangos to create a userfriendly website interface Expertise in configuration management automation tools such as Chef Puppet and Salt Good coding experience with scripting languages like Perl Ruby and Bash Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop Map Reduce Designed recognition models for both handwritten and textbased characters capable of continuous learning using deep neural networks leveraging both Keras and TensorFlow machine learning frameworks in addition to NumPy Proficient working with Bot Frameworks IBM Watson Google Cloud PlatformTensor Flow or Amazon Web Services Sagemaker and open source Utilized Python libraries like wxPython NumPy SciPy Web2py Designed RESTful Webservices using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Extracted transformed and loaded data from various heterogeneous data sources and destinations like Access Excel CSV Oracle flat files using connectors tasks and transformations provided by SSIS Developed SonarQube for code quality check and Nexus repository and integrated them into Jenkins to achieve Continuous Integration Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed python script to compare performance between support vector machine and deep neural network using Scikitlearn and NumPy Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Used GO lang scripts for uploading a file to S3 and deploying them an d creating GO serverless application and deploying it to AWS lambda Worked with RDBMS like Oracle 11g10i and MySQL databases to query and read data Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Used Jenkins to deploy web services and run unit tests REST API test Developed scripts to migrate data from proprietary database to PostgreSQL Created backend database TSQL stored procedures and Jasper Reports Performed Unit testing Integration Testing GUI testing using Pytest and web application testing using Selenium Python bindings Proficient in specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boot fabric and AWS Cloud Formation Templates Used Numpy for Numerical analysis for Insurance premium Built database Model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Built development environment with Kubernetes and Docker in AWS using JupyterHub Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOP code for quality logging monitoring and debugging code PYTHON DEVELOPER Intel Technology Company February 2016 to November 2017 Designed JQuery libraries for all clientside JavaScript manipulations Utilized Python libraries wxPython numPY Twisted and matPlotLib Used Go Lang to create backend servers Developed Micro services using Go language and developed corresponding test cases Implemented SQLAlchemy which is a python library for complete access over SQL Worked on Element Tree XML API in python to parse XML documents and load the data in database Application of various machine learning algorithms and statistical modeling like decision trees text analytics natural language processing NLP supervised and unsupervised regression models social network analysis neural networks deep learning SVM clustering to identify Volume using scikitlearn package in python Matlab Designing and evaluating business using historical current data from Google Analytics Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Executed Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Anisole Managed worldwide data in Omniture for data collection and analysis and also worked on the library like pandas NumPy SciPy Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Wrote with objectoriented Python AWSFlask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Accessed database objects using Django Database APIs Worked on Python OpenStack APIs and used Numpy for Numerical analysis Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Implemented business logic using Python Web frame work Django Designed applications implementing MVC architecture in Pyramid Zope frame works Designing mobile search application system requirements and coded backend and frontend in Python Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Developed Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Designed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Proficient in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Carried out various mathematical operations for calculation purpose using python pandas libraries Uses Edward is a Python library for probabilistic modeling inference and criticism It is a testbed for fast experimentation and research with probabilistic models Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Built various graphs for business decision making using Python matplotlib library Used Python library NumPy Beautiful Soup for webscraping Used Django Database APIs to access database objects Developed serverbased web traffic statistical analysis tool using Flask Pandas Utilized Python libraries like NumPy and matplotlib for generating graphical reports Worked on the development of SQL and stored procedures for normalization and denormalization in MYSQL Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information PYTHON DEVELOPER HewlettPackard Software Company July 2014 to January 2016 Created an Application was based on serviceoriented architecture and used Python Django JSF Spring Ajax HTML CSS for the frontend Developed complex web middleware and back end systems in Python SQL for Linux and Windows Used scikitlearn in modeling various classification regression and clustering algorithms including support vector machines random forests gradient boosting kmeans Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Aggregated the CPU and GPU temperature for the model as the model was using TensorFlow as bankend Implemented Machine Learning Computer Vision Deep Learning and Neural Networks algorithms using TensorFlow and designed Prediction Model using Data Mining Techniques with help of Python and Libraries like NumPy SciPy Matplotlib Pandas scikitlearn Led the design and development of Converged Enhanced Ethernet features to ensure traffic will be lossless within the Microsoft Azure Stack in a layer 2 and layer 3 environment Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Experience working on Python Nameko decorators generators list comprehensions list tuples cache pandas and NumPy Managed large datasets using Panda data frames and MySQL Used Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Developed web applications and RESTful web services and APIs using Django Pyramid Work with team of developers on python applications for RISK management Developed webbased application using Django framework with python concepts Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Worked on several standard Python packages like Numpy matPlotLib Scipy Pandas and PyTables etc Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Developed dynamic web pages using Python Django Frameworks Created a Python based web application using Python scripting for data processing MySQL for the database and HTMLCSS Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Worked on creation of custom Docker container images tagging and pushing the images Worked on Ansible Vagrant and Docker for managing the application environments Worked with a team on planning designing configurations deployments and support of LANWANWLAN infrastructure Utilized Python libraries like NumPy and matplotlib for generating graphical reports Worked on the development of SQL and stored procedures for normalization and denormalization in MYSQL Troubleshooting problems related to packet or frame transfer across routers or switches using Wireshark Deployed the project into Jenkins using GIT version control system Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Automated the existing scripts for performance calculations using NumPy and SQLAlchemy Used SVN as version control for existing system Creating and modifying web services and stored procedures to implement new requirements using Python Exposing services as RESTful service in JSON format for AdminUI which is developed using Django Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented unit testing using PyUnit and tested several RESTful services using SOAPUI Experienced in Agile Methodologies and SCRUM Process Worked in development of applications especially in LINUX environment and familiar with all commands Used tools such a uchiwa and kibana for monitoring systems Devops Perform upgrades on development and production systems worldwide Performed various finetuning tricks on my own CNN as well as VGG16Data Augmentation Transfer Learning implemented in Keras and Tensorflow Achieved a testing accuracy of 96 Education Masters Skills AWS 4 years Chef 4 years CSS 4 years Django 4 years Git 4 years Javascript Android PHP ASP MySQL SymPy 3 years Python ScalaSQLPLSQLSASPEP8PIP Spark 3 years RequestsScrapySQLAlchemy BeautifulSoup NumPySciPy matplotlib PyGame 3 years Pyglet PyQTPyGtkpywin32 ntlk noseOpenCV SymPy 3 years IpythonCaffeTorchDjangoFlaskPyramidTwistedMuffin 3 years Selenium Splinter PyChecker Komodo PyCharm PyDev PyScripter PyShield Spyder Jupyter MySQLTeradataSQL Server InfluxDB MongoDB 3 years Links httpAlenb099gmailcom Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib PyGame Pyglet PyQT PyGtk pywin32 ntlk nose OpenCV SymPy Ipython Caffe Torch Django Flask Pyramid Twisted Muffin Git Mercurial SVN GitHub Jenkins Chef Puppet Ansible Docker Kubernetes Selenium Splinter PyChecker Komodo PyCharm PyDev PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Cassandra Jira HP ALM HP Quality Center Software Development Life Cycle SDLC Agile Waterfall Hybrid Pair Programming Scrum ELK Elasticsearch Logstash Kibana Kanban Kafka Swagger OpenStack Amazon Web Services AWS Microsoft Azure Boto3 Jinja Mako AMQP Celery Apache Tomcat Tensorflow Keras ScikitLearn Edward Lime RabbitMQ Heroku Samba Confluence Bamboo AJAX jQuery JSON XML XSLT LDAP OAuth SOAP REST Microservices Active Directory design patterns HTMLHTML5 CSSCSS3 JavaScript PhosphorJS AngularJS NodeJS EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix",
    "entities": [
        "PyGame Pyglet PyQT PyGtk",
        "NLTK",
        "TDD BDD",
        "Bash Implemented Multithreading",
        "AWS Lambda and CloudWatch Implemented",
        "HTMLHTML5 CSSCSS3",
        "GUI",
        "Python PEP Expertise",
        "Bash Shell",
        "Chef and Anisole Managed",
        "UNIX",
        "Tornado",
        "Python Django AWS J2EE PostgreSQL",
        "Bash Proficient",
        "User Interfaces",
        "JSON",
        "LAMP Linux",
        "FLASKHTTPAuth",
        "Panda",
        "Project",
        "Amazon Web Services Sagemaker",
        "XML",
        "DHTML",
        "Flask Pandas Utilized Python",
        "NOSQL",
        "SVM Neural Networks",
        "Bootstrap CSS",
        "PyUnit",
        "Software Development Life Cycle SDLC",
        "Natural Language Processing",
        "Chef Serverworkstation",
        "Shell",
        "Implemented Terraform",
        "Automated",
        "Amazon",
        "ELK",
        "NumPy Proficient",
        "Python",
        "Tomcat Expertise",
        "Integrated Development Environments",
        "Python Installed",
        "Developed",
        "Salt Good",
        "AutoScaling of AWS stacks Expertise",
        "Jenkins",
        "Neural Networks",
        "Django",
        "Amazon Web Services AWS Expertise",
        "Oracle 11g10i",
        "Windows",
        "Quality Center Software Development Life Cycle SDLC",
        "ScikitLearn",
        "PythonPHP",
        "Linux",
        "Installed and Administered Jenkins CI",
        "Perl Ruby",
        "Flask",
        "AWS Wrote",
        "Implemented Machine Learning Computer Vision Deep Learning",
        "SQL Queries",
        "Bot Frameworks IBM",
        "Created an Application",
        "CPU",
        "Docker",
        "Amazon SQS Expertise",
        "Nexus",
        "CLI",
        "MVC",
        "SQL Server Management Studio SQL Developer Toad",
        "Integration Testing",
        "Chef Puppet",
        "GIT",
        "Pytorch TensorFlow Scikitlearn Apache Open",
        "log analytics full text search",
        "HTML CSS",
        "PythonBash Created Terraform",
        "API",
        "WebSphere WebLogic Tomcat Web Servers",
        "NGINX",
        "My SQL SQL",
        "Developed Terraform",
        "Python Django Frameworks Created",
        "LINUX",
        "Python Django JSF Spring Ajax HTML CSS",
        "Bootstrap Big Data Hadoop",
        "AI",
        "AWS",
        "Implemented",
        "WAMP Windows Apache",
        "JQuery Expertise",
        "Developed Micro",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "REST Proficient",
        "Present Implemented",
        "ELB",
        "INSERTS UPDATES",
        "SAS",
        "SOAPUI Experienced",
        "Stash",
        "SQL",
        "Links httpAlenb099gmailcom",
        "Linear Regression Logistic Regression",
        "GitHub",
        "ntlk",
        "Git Perforce",
        "NLP",
        "lPythonspan",
        "Kubernetes",
        "GPU",
        "FLASK",
        "Ant",
        "S3",
        "PostgreSQL Created",
        "CI",
        "Integration Testing GUI",
        "JupyterHub",
        "Amazon AWS",
        "CSS Expertise",
        "the Microsoft Azure Stack",
        "Chef for Cloud Automation Automated",
        "Python AWSFlask SQL Beautiful Soup httplib2 Jinja2",
        "Pandas",
        "Omniture",
        "PythonPHP Architecture Expertise",
        "JIRA Expertise",
        "Maven Builds Developed",
        "Google Analytics Used",
        "SSIS Developed SonarQube",
        "Maven",
        "Performed",
        "Django Configured",
        "Used Docker Container",
        "Djangos",
        "JavaScript",
        "Oracle Application Server Proficiency",
        "Devops Perform",
        "GitHub Jenkins Chef Puppet Ansible Docker Kubernetes Selenium Splinter PyChecker Komodo",
        "IAM RDS Route",
        "Sublime Text PyCharm Spyder",
        "SMTP",
        "CNN",
        "GIT Expertise",
        "SQL Worked",
        "SVN",
        "Executed Terraform",
        "Expertise",
        "JSF Primefaces",
        "Jasper Reports Performed Unit",
        "GitHub Proficient",
        "Python Development and Scientific Programing",
        "Puppet or Chef Expertise",
        "PHP",
        "Selenium Python",
        "Machine Learning",
        "Kubernetes Carried",
        "Sprint",
        "Oracle SQLite PostgreSQL",
        "SVM",
        "WebSphere WebLogic JBOSS",
        "Data Mining Expertise"
    ],
    "experience": "Experience in designing developing testing and implementing various standalone and clientserver Architectures based enterprise application software on different domains Expertise in developing webbased applications using Bash Perl Python PHP XML DHTML XHTML Ajax JOOMLA CSS HTML JSON JavaScript and Bootstrap Expertise in various Python packages such as Celery NumPy SQLAlchemy Beautiful soup Pickle PySide PyMongo SciPy PyTables PyUnit Efficient knowledge in using different version control systems like Git Perforce and GitHub Proficient intranet portal for managing Amazon EC2 servers using Tornado and MongoDB Expertise in all the phases of Software Development Life Cycle SDLC using Project management tool JIRA Expertise in Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Expertise in reporting tools like Grafana Kibana ELK for setting up charts and graphs for better visual representation of test results Expertise in Machine Learning algorithms like Linear Regression Logistic Regression knn SVM Neural Networks CNNs LSTMs RNNs xgboost and machine learning libraries like tensorflow pytorch Theano Expertise with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS Expertise in Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Expertise in using Shell scripting for automation by following Python PEP Expertise in Bash Shell Scripting SQL and Java libraries such as NumPy SciPy and Pandas for data analysis and numerical computations Proficient in web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10 g and MongoDB Proficient in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Expertise infrastructure from inhouse servers to AWS cloud Used Docker Container EC2 IAM RDS Route 53 REST API gateway and Lambda of AWS Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Expertise in Python Development and Scientific Programing and using Numpy and Pandas in Python for Data Manipulation Expertise in entire frontend and backend modules using Python on Django Web Framework Expertise with most of the web scale services on Amazon Web Services AWS Expertise in AWS like Amazon EC2 Amazon S3 Amazon Redshift Amazon EMR and Amazon SQS Expertise with Querying RDBMS such as My SQL SQL server and SAS Expertise in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django and MYSQL Expertise on various applications using python integrated IDEs Sublime Text PyCharm Spyder and IntelliJ Expertise in JavaScript frameworks to replace frontend of a Flask application and began implementing a React solution Expertise with automation tools such as Puppet or Chef Expertise in managing datasets using Panda data frames and MySQL Expertise in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django and MYSQL Expertise in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL database Expertise in using CI tools Hudson Build Forge and Jenkins for automated builds Expertise in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse Expertise with agile development methods like agilescrum TDD BDD peer code reviews continuous integration Developed responsive web product features using React JS SASS on Golang with REST Proficient in SQL and databases MS SQL MySQL Oracle noSQL Mongo DB Expertise in PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Expertise working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Expertise in deployment tools using Jenkins rpm dpkg Python Packages Expertise working in both Water fall and agile software methodologies Expertise building mockups GUI layouts by using HTML5 DHTML XHTML XML CSS and JavaScript Expertise in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups and Code review Expertise in User Interfaces using JSF Primefaces AngularJS JavaScript AJAX jQuery and CSS Expertise in developing webbased applications using Python 2730 Django 1718 PHP Angularjs C XML CSS HTML JavaScript and JQuery Expertise in using NOSQL libraries like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MYSQL databases Expertise in UNIX shell scripts for business process and loading data from different interfaces to HDFS Expertise in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Proficiency with the application servers like WebSphere WebLogic JBOSS and Tomcat Expertise in using ScikitLearn and Statsmodels in Python for Machine Learning and Data Mining Expertise in NLTK OpenNLP StanfordNLP for Natural Language Processing and sentiment analysis Expertise with SQL Server Management Studio SQL Developer Toad and MySQL GUI Tool Work Experience Python Developer Sprint Overland Park KS August 2018 to Present Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript JQuery Developed views and templates with Python and Djangos to create a userfriendly website interface Expertise in configuration management automation tools such as Chef Puppet and Salt Good coding experience with scripting languages like Perl Ruby and Bash Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop Map Reduce Designed recognition models for both handwritten and textbased characters capable of continuous learning using deep neural networks leveraging both Keras and TensorFlow machine learning frameworks in addition to NumPy Proficient working with Bot Frameworks IBM Watson Google Cloud PlatformTensor Flow or Amazon Web Services Sagemaker and open source Utilized Python libraries like wxPython NumPy SciPy Web2py Designed RESTful Webservices using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Extracted transformed and loaded data from various heterogeneous data sources and destinations like Access Excel CSV Oracle flat files using connectors tasks and transformations provided by SSIS Developed SonarQube for code quality check and Nexus repository and integrated them into Jenkins to achieve Continuous Integration Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed python script to compare performance between support vector machine and deep neural network using Scikitlearn and NumPy Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Used GO lang scripts for uploading a file to S3 and deploying them an d creating GO serverless application and deploying it to AWS lambda Worked with RDBMS like Oracle 11g10i and MySQL databases to query and read data Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Used Jenkins to deploy web services and run unit tests REST API test Developed scripts to migrate data from proprietary database to PostgreSQL Created backend database TSQL stored procedures and Jasper Reports Performed Unit testing Integration Testing GUI testing using Pytest and web application testing using Selenium Python bindings Proficient in specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boot fabric and AWS Cloud Formation Templates Used Numpy for Numerical analysis for Insurance premium Built database Model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Built development environment with Kubernetes and Docker in AWS using JupyterHub Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOP code for quality logging monitoring and debugging code PYTHON DEVELOPER Intel Technology Company February 2016 to November 2017 Designed JQuery libraries for all clientside JavaScript manipulations Utilized Python libraries wxPython numPY Twisted and matPlotLib Used Go Lang to create backend servers Developed Micro services using Go language and developed corresponding test cases Implemented SQLAlchemy which is a python library for complete access over SQL Worked on Element Tree XML API in python to parse XML documents and load the data in database Application of various machine learning algorithms and statistical modeling like decision trees text analytics natural language processing NLP supervised and unsupervised regression models social network analysis neural networks deep learning SVM clustering to identify Volume using scikitlearn package in python Matlab Designing and evaluating business using historical current data from Google Analytics Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Executed Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Anisole Managed worldwide data in Omniture for data collection and analysis and also worked on the library like pandas NumPy SciPy Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Wrote with objectoriented Python AWSFlask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Accessed database objects using Django Database APIs Worked on Python OpenStack APIs and used Numpy for Numerical analysis Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Implemented business logic using Python Web frame work Django Designed applications implementing MVC architecture in Pyramid Zope frame works Designing mobile search application system requirements and coded backend and frontend in Python Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Developed Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Designed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Proficient in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Carried out various mathematical operations for calculation purpose using python pandas libraries Uses Edward is a Python library for probabilistic modeling inference and criticism It is a testbed for fast experimentation and research with probabilistic models Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Built various graphs for business decision making using Python matplotlib library Used Python library NumPy Beautiful Soup for webscraping Used Django Database APIs to access database objects Developed serverbased web traffic statistical analysis tool using Flask Pandas Utilized Python libraries like NumPy and matplotlib for generating graphical reports Worked on the development of SQL and stored procedures for normalization and denormalization in MYSQL Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information PYTHON DEVELOPER HewlettPackard Software Company July 2014 to January 2016 Created an Application was based on serviceoriented architecture and used Python Django JSF Spring Ajax HTML CSS for the frontend Developed complex web middleware and back end systems in Python SQL for Linux and Windows Used scikitlearn in modeling various classification regression and clustering algorithms including support vector machines random forests gradient boosting kmeans Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Aggregated the CPU and GPU temperature for the model as the model was using TensorFlow as bankend Implemented Machine Learning Computer Vision Deep Learning and Neural Networks algorithms using TensorFlow and designed Prediction Model using Data Mining Techniques with help of Python and Libraries like NumPy SciPy Matplotlib Pandas scikitlearn Led the design and development of Converged Enhanced Ethernet features to ensure traffic will be lossless within the Microsoft Azure Stack in a layer 2 and layer 3 environment Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Experience working on Python Nameko decorators generators list comprehensions list tuples cache pandas and NumPy Managed large datasets using Panda data frames and MySQL Used Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Developed web applications and RESTful web services and APIs using Django Pyramid Work with team of developers on python applications for RISK management Developed webbased application using Django framework with python concepts Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Worked on several standard Python packages like Numpy matPlotLib Scipy Pandas and PyTables etc Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Developed dynamic web pages using Python Django Frameworks Created a Python based web application using Python scripting for data processing MySQL for the database and HTMLCSS Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Worked on creation of custom Docker container images tagging and pushing the images Worked on Ansible Vagrant and Docker for managing the application environments Worked with a team on planning designing configurations deployments and support of LANWANWLAN infrastructure Utilized Python libraries like NumPy and matplotlib for generating graphical reports Worked on the development of SQL and stored procedures for normalization and denormalization in MYSQL Troubleshooting problems related to packet or frame transfer across routers or switches using Wireshark Deployed the project into Jenkins using GIT version control system Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Automated the existing scripts for performance calculations using NumPy and SQLAlchemy Used SVN as version control for existing system Creating and modifying web services and stored procedures to implement new requirements using Python Exposing services as RESTful service in JSON format for AdminUI which is developed using Django Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented unit testing using PyUnit and tested several RESTful services using SOAPUI Experienced in Agile Methodologies and SCRUM Process Worked in development of applications especially in LINUX environment and familiar with all commands Used tools such a uchiwa and kibana for monitoring systems Devops Perform upgrades on development and production systems worldwide Performed various finetuning tricks on my own CNN as well as VGG16Data Augmentation Transfer Learning implemented in Keras and Tensorflow Achieved a testing accuracy of 96 Education Masters Skills AWS 4 years Chef 4 years CSS 4 years Django 4 years Git 4 years Javascript Android PHP ASP MySQL SymPy 3 years Python ScalaSQLPLSQLSASPEP8PIP Spark 3 years RequestsScrapySQLAlchemy BeautifulSoup NumPySciPy matplotlib PyGame 3 years Pyglet PyQTPyGtkpywin32 ntlk noseOpenCV SymPy 3 years IpythonCaffeTorchDjangoFlaskPyramidTwistedMuffin 3 years Selenium Splinter PyChecker Komodo PyCharm PyDev PyScripter PyShield Spyder Jupyter MySQLTeradataSQL Server InfluxDB MongoDB 3 years Links httpAlenb099gmailcom Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib PyGame Pyglet PyQT PyGtk pywin32 ntlk nose OpenCV SymPy Ipython Caffe Torch Django Flask Pyramid Twisted Muffin Git Mercurial SVN GitHub Jenkins Chef Puppet Ansible Docker Kubernetes Selenium Splinter PyChecker Komodo PyCharm PyDev PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Cassandra Jira HP ALM HP Quality Center Software Development Life Cycle SDLC Agile Waterfall Hybrid Pair Programming Scrum ELK Elasticsearch Logstash Kibana Kanban Kafka Swagger OpenStack Amazon Web Services AWS Microsoft Azure Boto3 Jinja Mako AMQP Celery Apache Tomcat Tensorflow Keras ScikitLearn Edward Lime RabbitMQ Heroku Samba Confluence Bamboo AJAX jQuery JSON XML XSLT LDAP OAuth SOAP REST Microservices Active Directory design patterns HTMLHTML5 CSSCSS3 JavaScript PhosphorJS AngularJS NodeJS EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Sprint",
        "Kansas",
        "City",
        "MO",
        "years",
        "IT",
        "Experience",
        "testing",
        "standalone",
        "clientserver",
        "Architectures",
        "enterprise",
        "application",
        "software",
        "domains",
        "Expertise",
        "applications",
        "Bash",
        "Perl",
        "Python",
        "PHP",
        "XML",
        "DHTML",
        "XHTML",
        "JOOMLA",
        "CSS",
        "HTML",
        "JSON",
        "JavaScript",
        "Bootstrap",
        "Expertise",
        "Python",
        "packages",
        "Celery",
        "NumPy",
        "SQLAlchemy",
        "Beautiful",
        "soup",
        "Pickle",
        "PySide",
        "PyMongo",
        "SciPy",
        "PyTables",
        "PyUnit",
        "Efficient",
        "knowledge",
        "version",
        "control",
        "systems",
        "Git",
        "Perforce",
        "GitHub",
        "Proficient",
        "intranet",
        "portal",
        "Amazon",
        "EC2",
        "servers",
        "Tornado",
        "MongoDB",
        "Expertise",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Project",
        "management",
        "tool",
        "JIRA",
        "Expertise",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "generating",
        "test",
        "cases",
        "web",
        "applications",
        "Junit",
        "Python",
        "Unit",
        "test",
        "framework",
        "HudsonJenkins",
        "builds",
        "push",
        "GIT",
        "Expertise",
        "tools",
        "Grafana",
        "Kibana",
        "ELK",
        "charts",
        "graphs",
        "representation",
        "test",
        "results",
        "Expertise",
        "Machine",
        "Learning",
        "Linear",
        "Regression",
        "Logistic",
        "Regression",
        "SVM",
        "Neural",
        "Networks",
        "CNNs",
        "LSTMs",
        "RNNs",
        "xgboost",
        "machine",
        "learning",
        "libraries",
        "tensorflow",
        "pytorch",
        "Theano",
        "Expertise",
        "AWS",
        "services",
        "S3",
        "ELB",
        "EBS",
        "AutoScaling",
        "Route53",
        "Storefront",
        "IAM",
        "Cloud",
        "Watch",
        "RDS",
        "Expertise",
        "Kubernetes",
        "scale",
        "load",
        "balance",
        "Docker",
        "containers",
        "namespace",
        "versions",
        "Expertise",
        "Shell",
        "scripting",
        "automation",
        "Python",
        "PEP",
        "Expertise",
        "Bash",
        "Shell",
        "Scripting",
        "SQL",
        "Java",
        "NumPy",
        "SciPy",
        "Pandas",
        "data",
        "analysis",
        "computations",
        "Proficient",
        "web",
        "application",
        "Python",
        "Django",
        "J2EE",
        "PostgreSQL",
        "MySQL",
        "Oracle",
        "g",
        "Proficient",
        "Amazon",
        "AWS",
        "concepts",
        "EMR",
        "EC2",
        "web",
        "services",
        "processing",
        "Big",
        "Data",
        "Expertise",
        "infrastructure",
        "inhouse",
        "servers",
        "AWS",
        "cloud",
        "Used",
        "Docker",
        "Container",
        "EC2",
        "IAM",
        "RDS",
        "Route",
        "REST",
        "API",
        "gateway",
        "Lambda",
        "AWS",
        "Expertise",
        "configure",
        "manage",
        "Amazon",
        "Elastic",
        "Search",
        "cluster",
        "Log",
        "Stash",
        "Kibana",
        "ELK",
        "Stack",
        "logging",
        "stores",
        "logs",
        "metrics",
        "S3",
        "bucket",
        "Lambda",
        "functions",
        "Glacier",
        "storage",
        "maintenance",
        "AutoScaling",
        "AWS",
        "Expertise",
        "Python",
        "Development",
        "Scientific",
        "Programing",
        "Numpy",
        "Pandas",
        "Python",
        "Data",
        "Manipulation",
        "Expertise",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Expertise",
        "web",
        "scale",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Expertise",
        "AWS",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "Redshift",
        "Amazon",
        "EMR",
        "Amazon",
        "SQS",
        "Expertise",
        "Querying",
        "RDBMS",
        "SQL",
        "SQL",
        "server",
        "SAS",
        "Expertise",
        "Object",
        "Python",
        "Hash",
        "Tables",
        "Dictionaries",
        "Multithreading",
        "Django",
        "MYSQL",
        "Expertise",
        "applications",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "Spyder",
        "IntelliJ",
        "Expertise",
        "JavaScript",
        "frameworks",
        "frontend",
        "Flask",
        "application",
        "React",
        "solution",
        "Expertise",
        "automation",
        "tools",
        "Puppet",
        "Chef",
        "Expertise",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Expertise",
        "Object",
        "Python",
        "Hash",
        "Tables",
        "Dictionaries",
        "Multithreading",
        "Django",
        "MYSQL",
        "Expertise",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "SQL",
        "database",
        "Expertise",
        "CI",
        "tools",
        "Hudson",
        "Build",
        "Forge",
        "Jenkins",
        "builds",
        "Expertise",
        "Application",
        "Servers",
        "WebSphere",
        "WebLogic",
        "Tomcat",
        "Web",
        "Servers",
        "Apache",
        "server",
        "NGINX",
        "Integrated",
        "Development",
        "Environments",
        "PyCharm",
        "Eclipse",
        "Expertise",
        "development",
        "methods",
        "agilescrum",
        "TDD",
        "BDD",
        "peer",
        "code",
        "integration",
        "web",
        "product",
        "features",
        "React",
        "JS",
        "SASS",
        "Golang",
        "REST",
        "Proficient",
        "SQL",
        "MS",
        "SQL",
        "MySQL",
        "Oracle",
        "noSQL",
        "Mongo",
        "DB",
        "Expertise",
        "PHP",
        "Angular",
        "JS",
        "VB",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "JQuery",
        "Expertise",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Expertise",
        "tools",
        "Jenkins",
        "rpm",
        "Python",
        "Packages",
        "Expertise",
        "Water",
        "fall",
        "software",
        "methodologies",
        "Expertise",
        "building",
        "mockups",
        "GUI",
        "layouts",
        "HTML5",
        "DHTML",
        "XHTML",
        "XML",
        "CSS",
        "JavaScript",
        "Expertise",
        "Agile",
        "Methodologies",
        "SCRUM",
        "process",
        "Sprint",
        "planning",
        "backlog",
        "Daily",
        "Standups",
        "Code",
        "review",
        "Expertise",
        "User",
        "Interfaces",
        "JSF",
        "Primefaces",
        "JavaScript",
        "AJAX",
        "jQuery",
        "CSS",
        "Expertise",
        "applications",
        "Python",
        "Django",
        "PHP",
        "Angularjs",
        "C",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Expertise",
        "NOSQL",
        "libraries",
        "MongoDB",
        "Cassandra",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MYSQL",
        "Expertise",
        "UNIX",
        "shell",
        "scripts",
        "business",
        "process",
        "loading",
        "data",
        "interfaces",
        "HDFS",
        "Expertise",
        "applications",
        "Application",
        "Servers",
        "TOMCAT",
        "Web",
        "Logic",
        "Oracle",
        "Application",
        "Server",
        "Proficiency",
        "application",
        "servers",
        "WebSphere",
        "WebLogic",
        "JBOSS",
        "Tomcat",
        "Expertise",
        "ScikitLearn",
        "Statsmodels",
        "Python",
        "Machine",
        "Learning",
        "Data",
        "Mining",
        "Expertise",
        "NLTK",
        "OpenNLP",
        "StanfordNLP",
        "Natural",
        "Language",
        "Processing",
        "sentiment",
        "analysis",
        "Expertise",
        "SQL",
        "Server",
        "Management",
        "Studio",
        "SQL",
        "Developer",
        "Toad",
        "MySQL",
        "GUI",
        "Tool",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Sprint",
        "Overland",
        "Park",
        "KS",
        "August",
        "Present",
        "user",
        "interface",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Developed",
        "views",
        "templates",
        "Python",
        "Djangos",
        "website",
        "interface",
        "Expertise",
        "configuration",
        "management",
        "automation",
        "tools",
        "Chef",
        "Puppet",
        "Salt",
        "Good",
        "experience",
        "scripting",
        "languages",
        "Perl",
        "Ruby",
        "Bash",
        "Proficient",
        "structures",
        "data",
        "range",
        "data",
        "science",
        "programming",
        "languages",
        "data",
        "tools",
        "R",
        "Python",
        "Spark",
        "SQL",
        "Scikit",
        "Learn",
        "Hadoop",
        "Map",
        "recognition",
        "models",
        "characters",
        "learning",
        "networks",
        "Keras",
        "TensorFlow",
        "machine",
        "frameworks",
        "addition",
        "NumPy",
        "Proficient",
        "Bot",
        "Frameworks",
        "IBM",
        "Watson",
        "Google",
        "Cloud",
        "PlatformTensor",
        "Flow",
        "Amazon",
        "Web",
        "Services",
        "Sagemaker",
        "source",
        "Python",
        "wxPython",
        "NumPy",
        "SciPy",
        "Web2py",
        "RESTful",
        "Webservices",
        "FLASK",
        "emphasis",
        "Security",
        "service",
        "FLASKHTTPAuth",
        "HTTPS",
        "search",
        "stash",
        "Kibana",
        "ELK",
        "logs",
        "metrics",
        "S3",
        "bucket",
        "Lambda",
        "function",
        "data",
        "data",
        "sources",
        "destinations",
        "Access",
        "Excel",
        "CSV",
        "Oracle",
        "files",
        "connectors",
        "tasks",
        "transformations",
        "SSIS",
        "Developed",
        "SonarQube",
        "code",
        "quality",
        "check",
        "Nexus",
        "repository",
        "Jenkins",
        "Continuous",
        "Integration",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Developed",
        "python",
        "script",
        "performance",
        "support",
        "vector",
        "machine",
        "network",
        "Scikitlearn",
        "NumPy",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Multithreading",
        "module",
        "networking",
        "operations",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Python",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Recording",
        "Scripts",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "SoapUI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "GO",
        "lang",
        "scripts",
        "file",
        "S3",
        "d",
        "GO",
        "serverless",
        "application",
        "AWS",
        "lambda",
        "RDBMS",
        "Oracle",
        "11g10i",
        "MySQL",
        "data",
        "Python",
        "scripts",
        "vulnerabilities",
        "SQL",
        "Queries",
        "SQL",
        "injection",
        "permission",
        "checks",
        "performance",
        "analysis",
        "configuration",
        "tool",
        "Chef",
        "Serverworkstation",
        "nodes",
        "CLI",
        "tools",
        "AWS",
        "nodes",
        "Jenkins",
        "web",
        "services",
        "unit",
        "REST",
        "API",
        "test",
        "scripts",
        "data",
        "database",
        "PostgreSQL",
        "database",
        "TSQL",
        "procedures",
        "Jasper",
        "Reports",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "testing",
        "Pytest",
        "web",
        "application",
        "testing",
        "Selenium",
        "Python",
        "bindings",
        "Proficient",
        "specialization",
        "areas",
        "Chef",
        "Cloud",
        "Automation",
        "cloud",
        "deployments",
        "chef",
        "Python",
        "boot",
        "fabric",
        "AWS",
        "Cloud",
        "Formation",
        "Templates",
        "Numpy",
        "Numerical",
        "analysis",
        "Insurance",
        "premium",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "data",
        "files",
        "Python",
        "Django",
        "websites",
        "development",
        "environment",
        "Kubernetes",
        "Docker",
        "AWS",
        "JupyterHub",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "application",
        "Django",
        "framework",
        "concepts",
        "Python",
        "Django",
        "record",
        "users",
        "Django",
        "APIs",
        "database",
        "Python",
        "OOP",
        "code",
        "quality",
        "monitoring",
        "code",
        "PYTHON",
        "DEVELOPER",
        "Intel",
        "Technology",
        "Company",
        "February",
        "November",
        "JQuery",
        "JavaScript",
        "manipulations",
        "Python",
        "wxPython",
        "numPY",
        "Twisted",
        "matPlotLib",
        "Go",
        "Lang",
        "servers",
        "Developed",
        "Micro",
        "services",
        "Go",
        "language",
        "test",
        "cases",
        "SQLAlchemy",
        "library",
        "access",
        "SQL",
        "Worked",
        "Element",
        "Tree",
        "XML",
        "API",
        "python",
        "XML",
        "documents",
        "data",
        "database",
        "Application",
        "machine",
        "algorithms",
        "modeling",
        "decision",
        "trees",
        "text",
        "analytics",
        "language",
        "processing",
        "NLP",
        "regression",
        "models",
        "network",
        "analysis",
        "networks",
        "SVM",
        "Volume",
        "package",
        "python",
        "Matlab",
        "Designing",
        "business",
        "data",
        "Google",
        "Analytics",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "manipulation",
        "retrieval",
        "data",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Anisole",
        "Managed",
        "data",
        "Omniture",
        "data",
        "collection",
        "analysis",
        "library",
        "NumPy",
        "SciPy",
        "Docker",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "Wrote",
        "Python",
        "AWSFlask",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "database",
        "Django",
        "Database",
        "APIs",
        "Python",
        "OpenStack",
        "APIs",
        "Numpy",
        "Numerical",
        "analysis",
        "Ajax",
        "JQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "business",
        "logic",
        "Python",
        "Web",
        "frame",
        "work",
        "Django",
        "applications",
        "MVC",
        "architecture",
        "Pyramid",
        "Zope",
        "frame",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Python",
        "Installed",
        "ELK",
        "Elastic",
        "Search",
        "Log",
        "Facilitated",
        "Scrum",
        "ceremonies",
        "Sprint",
        "planning",
        "Daily",
        "standups",
        "Stash",
        "Kibana",
        "Log",
        "management",
        "EC2",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "search",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Proficient",
        "Container",
        "management",
        "Docker",
        "Docker",
        "files",
        "build",
        "Docker",
        "HUB",
        "Kubernetes",
        "operations",
        "calculation",
        "purpose",
        "python",
        "pandas",
        "Uses",
        "Edward",
        "Python",
        "library",
        "modeling",
        "inference",
        "criticism",
        "experimentation",
        "research",
        "models",
        "source",
        "AI",
        "Pytorch",
        "TensorFlow",
        "Scikitlearn",
        "Apache",
        "Open",
        "Source",
        "Kafka",
        "Storm",
        "Spark",
        "NLP",
        "ML",
        "Algorithms",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Python",
        "library",
        "NumPy",
        "Beautiful",
        "Soup",
        "Used",
        "Django",
        "Database",
        "APIs",
        "database",
        "Developed",
        "web",
        "traffic",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "Python",
        "NumPy",
        "matplotlib",
        "reports",
        "development",
        "SQL",
        "procedures",
        "normalization",
        "denormalization",
        "MYSQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "PYTHON",
        "DEVELOPER",
        "HewlettPackard",
        "Software",
        "Company",
        "July",
        "January",
        "Created",
        "Application",
        "architecture",
        "Python",
        "Django",
        "JSF",
        "Spring",
        "Ajax",
        "HTML",
        "CSS",
        "frontend",
        "web",
        "middleware",
        "end",
        "systems",
        "Python",
        "SQL",
        "Linux",
        "Windows",
        "classification",
        "regression",
        "algorithms",
        "support",
        "vector",
        "machines",
        "forests",
        "kmeans",
        "features",
        "dashboard",
        "Python",
        "ROBOT",
        "framework",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "CPU",
        "GPU",
        "temperature",
        "model",
        "model",
        "TensorFlow",
        "bankend",
        "Machine",
        "Learning",
        "Computer",
        "Vision",
        "Deep",
        "Learning",
        "Neural",
        "Networks",
        "TensorFlow",
        "Prediction",
        "Model",
        "Data",
        "Mining",
        "Techniques",
        "help",
        "Python",
        "Libraries",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "Pandas",
        "scikitlearn",
        "design",
        "development",
        "Converged",
        "Enhanced",
        "Ethernet",
        "traffic",
        "Microsoft",
        "Azure",
        "Stack",
        "layer",
        "layer",
        "environment",
        "delta",
        "file",
        "file",
        "UPDATES",
        "DELETES",
        "python",
        "pyspark",
        "modules",
        "S3",
        "Experience",
        "Python",
        "Nameko",
        "decorators",
        "generators",
        "comprehensions",
        "list",
        "tuples",
        "cache",
        "pandas",
        "NumPy",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Used",
        "Chef",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "Jenkins",
        "Continuous",
        "Integration",
        "builds",
        "deployments",
        "Build",
        "Jenkins",
        "jobs",
        "AWS",
        "infrastructure",
        "GitHub",
        "repos",
        "terraform",
        "code",
        "Installed",
        "Administered",
        "Jenkins",
        "CI",
        "Maven",
        "Builds",
        "Developed",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Django",
        "Pyramid",
        "Work",
        "team",
        "developers",
        "applications",
        "RISK",
        "management",
        "application",
        "Django",
        "framework",
        "concepts",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "MVC",
        "architecture",
        "Python",
        "packages",
        "Numpy",
        "matPlotLib",
        "Scipy",
        "Pandas",
        "PyTables",
        "ELK",
        "clusters",
        "Elasticsearch",
        "Logstash",
        "Graphite",
        "Kibana",
        "Kafka",
        "zookeeper",
        "web",
        "pages",
        "Python",
        "Django",
        "Frameworks",
        "Python",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSS",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "Ansible",
        "Vagrant",
        "Docker",
        "application",
        "environments",
        "team",
        "designing",
        "configurations",
        "deployments",
        "support",
        "LANWANWLAN",
        "infrastructure",
        "Python",
        "NumPy",
        "matplotlib",
        "reports",
        "development",
        "SQL",
        "procedures",
        "normalization",
        "denormalization",
        "MYSQL",
        "Troubleshooting",
        "problems",
        "packet",
        "frame",
        "transfer",
        "routers",
        "switches",
        "Wireshark",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "scripts",
        "performance",
        "calculations",
        "NumPy",
        "SQLAlchemy",
        "SVN",
        "version",
        "control",
        "system",
        "web",
        "services",
        "procedures",
        "requirements",
        "Python",
        "services",
        "service",
        "format",
        "AdminUI",
        "Django",
        "Configured",
        "Jenkins",
        "CI",
        "process",
        "tool",
        "Ant",
        "Maven",
        "builds",
        "unit",
        "testing",
        "PyUnit",
        "services",
        "SOAPUI",
        "Experienced",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "development",
        "applications",
        "LINUX",
        "environment",
        "commands",
        "tools",
        "uchiwa",
        "kibana",
        "systems",
        "Devops",
        "Perform",
        "upgrades",
        "development",
        "production",
        "systems",
        "Performed",
        "tricks",
        "CNN",
        "VGG16Data",
        "Augmentation",
        "Transfer",
        "Learning",
        "Keras",
        "Tensorflow",
        "testing",
        "accuracy",
        "Education",
        "Masters",
        "Skills",
        "AWS",
        "years",
        "Chef",
        "years",
        "CSS",
        "years",
        "Django",
        "years",
        "Git",
        "years",
        "Javascript",
        "Android",
        "PHP",
        "ASP",
        "MySQL",
        "SymPy",
        "years",
        "Python",
        "Spark",
        "years",
        "RequestsScrapySQLAlchemy",
        "BeautifulSoup",
        "NumPySciPy",
        "matplotlib",
        "PyGame",
        "years",
        "Pyglet",
        "PyQTPyGtkpywin32",
        "ntlk",
        "noseOpenCV",
        "SymPy",
        "years",
        "IpythonCaffeTorchDjangoFlaskPyramidTwistedMuffin",
        "years",
        "Selenium",
        "Splinter",
        "PyChecker",
        "Komodo",
        "PyCharm",
        "PyDev",
        "PyScripter",
        "PyShield",
        "Spyder",
        "Jupyter",
        "MySQLTeradataSQL",
        "Server",
        "InfluxDB",
        "MongoDB",
        "years",
        "Links",
        "httpAlenb099gmailcom",
        "Information",
        "SKILLS",
        "Python",
        "Scala",
        "SQL",
        "PLSQL",
        "SAS",
        "PEP8",
        "PIP",
        "Spark",
        "Requests",
        "Scrapy",
        "SQLAlchemy",
        "BeautifulSoup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "PyGame",
        "Pyglet",
        "PyQT",
        "PyGtk",
        "ntlk",
        "nose",
        "OpenCV",
        "SymPy",
        "Ipython",
        "Caffe",
        "Torch",
        "Django",
        "Flask",
        "Pyramid",
        "Twisted",
        "Muffin",
        "Git",
        "Mercurial",
        "SVN",
        "GitHub",
        "Jenkins",
        "Chef",
        "Puppet",
        "Ansible",
        "Docker",
        "Kubernetes",
        "Selenium",
        "Splinter",
        "PyChecker",
        "Komodo",
        "PyCharm",
        "PyDev",
        "PyScripter",
        "PyShield",
        "Spyder",
        "Jupyter",
        "MySQL",
        "Teradata",
        "SQL",
        "Server",
        "Cassandra",
        "Jira",
        "HP",
        "ALM",
        "HP",
        "Quality",
        "Center",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Agile",
        "Waterfall",
        "Hybrid",
        "Pair",
        "Programming",
        "Scrum",
        "ELK",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "Kanban",
        "Kafka",
        "Swagger",
        "OpenStack",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Microsoft",
        "Azure",
        "Jinja",
        "Mako",
        "AMQP",
        "Celery",
        "Apache",
        "Tomcat",
        "Tensorflow",
        "Keras",
        "ScikitLearn",
        "Edward",
        "Lime",
        "RabbitMQ",
        "Heroku",
        "Samba",
        "Confluence",
        "Bamboo",
        "AJAX",
        "jQuery",
        "JSON",
        "XML",
        "XSLT",
        "LDAP",
        "OAuth",
        "SOAP",
        "REST",
        "Microservices",
        "Active",
        "Directory",
        "design",
        "HTMLHTML5",
        "CSSCSS3",
        "JavaScript",
        "PhosphorJS",
        "NodeJS",
        "EmberJS",
        "ReactJS",
        "Bootstrap",
        "Big",
        "Data",
        "Hadoop",
        "Linux",
        "Unix"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:33:22.176043",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Sprint Kansas City MO Over 3 years of IT Experience in designing developing testing and implementing various standalone and clientserver Architectures based enterprise application software on different domains Expertise in developing webbased applications using Bash Perl Python PHP XML DHTML XHTML Ajax JOOMLA CSS HTML JSON JavaScript and Bootstrap Expertise in various Python packages such as Celery NumPy SQLAlchemy Beautiful soup Pickle PySide PyMongo SciPy PyTables PyUnit Efficient knowledge in using different version control systems like Git Perforce and GitHub Proficient intranet portal for managing Amazon EC2 servers using Tornado and MongoDB Expertise in all the phases of Software Development Life Cycle SDLC using Project management tool JIRA Expertise in Unit testing Integration Testing and generating of test cases for web applications using Junit and Python Unit test framework HudsonJenkins in the builds triggered by each push to GIT Expertise in reporting tools like Grafana Kibana ELK for setting up charts and graphs for better visual representation of test results Expertise in Machine Learning algorithms like Linear Regression Logistic Regression knn SVM Neural Networks CNNs LSTMs RNNs xgboost and machine learning libraries like tensorflow pytorch Theano Expertise with AWS services like S3 ELB EBS AutoScaling Route53 Storefront IAM Cloud Watch RDS Expertise in Kubernetes to deploy scale load balance and manage Docker containers with multiple namespace versions Expertise in using Shell scripting for automation by following Python PEP Expertise in Bash Shell Scripting SQL and Java libraries such as NumPy SciPy and Pandas for data analysis and numerical computations Proficient in web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle 10g and MongoDB Proficient in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Expertise infrastructure from inhouse servers to AWS cloud Used Docker Container EC2 IAM RDS Route 53 REST API gateway and Lambda of AWS Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Expertise in Python Development and Scientific Programing and using Numpy and Pandas in Python for Data Manipulation Expertise in entire frontend and backend modules using Python on Django Web Framework Expertise with most of the web scale services on Amazon Web Services AWS Expertise in AWS like Amazon EC2 Amazon S3 Amazon Redshift Amazon EMR and Amazon SQS Expertise with Querying RDBMS such as My SQL SQL server and SAS Expertise in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django and MYSQL Expertise on various applications using python integrated IDEs Sublime Text PyCharm Spyder and IntelliJ Expertise in JavaScript frameworks to replace frontend of a Flask application and began implementing a React solution Expertise with automation tools such as Puppet or Chef Expertise in managing datasets using Panda data frames and MySQL Expertise in implementing Object Oriented Python Hash Tables Dictionaries and Multithreading Django and MYSQL Expertise in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL database Expertise in using CI tools Hudson Build Forge and Jenkins for automated builds Expertise in working on Application Servers like WebSphere WebLogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like PyCharm Eclipse Expertise with agile development methods like agilescrum TDD BDD peer code reviews continuous integration Developed responsive web product features using React JS SASS on Golang with REST Proficient in SQL and databases MS SQL MySQL Oracle noSQL Mongo DB Expertise in PHP Angular JS VB C XML CSS HTML DHTML JavaScript and JQuery Expertise working in WAMP Windows Apache MYSQL and PythonPHP and LAMP Linux Apache MySQL and PythonPHP Architecture Expertise in deployment tools using Jenkins rpm dpkg Python Packages Expertise working in both Water fall and agile software methodologies Expertise building mockups GUI layouts by using HTML5 DHTML XHTML XML CSS and JavaScript Expertise in Agile Methodologies and SCRUM process including Sprint planning backlog grooming Daily Standups and Code review Expertise in User Interfaces using JSF Primefaces AngularJS JavaScript AJAX jQuery and CSS Expertise in developing webbased applications using Python 2730 Django 1718 PHP Angularjs C XML CSS HTML JavaScript and JQuery Expertise in using NOSQL libraries like MongoDB Cassandra Redis and relational databases like Oracle SQLite PostgreSQL and MYSQL databases Expertise in UNIX shell scripts for business process and loading data from different interfaces to HDFS Expertise in deploying applications in heterogeneous Application Servers TOMCAT Web Logic and Oracle Application Server Proficiency with the application servers like WebSphere WebLogic JBOSS and Tomcat Expertise in using ScikitLearn and Statsmodels in Python for Machine Learning and Data Mining Expertise in NLTK OpenNLP StanfordNLP for Natural Language Processing and sentiment analysis Expertise with SQL Server Management Studio SQL Developer Toad and MySQL GUI Tool Work Experience Python Developer Sprint Overland Park KS August 2018 to Present Implemented responsive user interface and standards throughout the development and maintenance of the website using the HTML CSS JavaScript JQuery Developed views and templates with Python and Djangos to create a userfriendly website interface Expertise in configuration management automation tools such as Chef Puppet and Salt Good coding experience with scripting languages like Perl Ruby and Bash Proficient with structures semistructured and unstructured data using a broad range of data science programming languages and big data tools including R Python Spark SQL Scikit Learn Hadoop Map Reduce Designed recognition models for both handwritten and textbased characters capable of continuous learning using deep neural networks leveraging both Keras and TensorFlow machine learning frameworks in addition to NumPy Proficient working with Bot Frameworks IBM Watson Google Cloud PlatformTensor Flow or Amazon Web Services Sagemaker and open source Utilized Python libraries like wxPython NumPy SciPy Web2py Designed RESTful Webservices using FLASK with emphasis on improved Security for the service using FLASKHTTPAuth with HTTPS Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Extracted transformed and loaded data from various heterogeneous data sources and destinations like Access Excel CSV Oracle flat files using connectors tasks and transformations provided by SSIS Developed SonarQube for code quality check and Nexus repository and integrated them into Jenkins to achieve Continuous Integration Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Developed python script to compare performance between support vector machine and deep neural network using Scikitlearn and NumPy Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like raceroute SMTP mail server and web server Using Python Automated RabbitMQ cluster installations and configuration using PythonBash Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Used GO lang scripts for uploading a file to S3 and deploying them an d creating GO serverless application and deploying it to AWS lambda Worked with RDBMS like Oracle 11g10i and MySQL databases to query and read data Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Used Jenkins to deploy web services and run unit tests REST API test Developed scripts to migrate data from proprietary database to PostgreSQL Created backend database TSQL stored procedures and Jasper Reports Performed Unit testing Integration Testing GUI testing using Pytest and web application testing using Selenium Python bindings Proficient in specialization areas related to Chef for Cloud Automation Automated the cloud deployments using chef Python boot fabric and AWS Cloud Formation Templates Used Numpy for Numerical analysis for Insurance premium Built database Model Views and APIs using Python for interactive web based solutions Placed data into JSON files using Python to test Django websites Built development environment with Kubernetes and Docker in AWS using JupyterHub Used Python scripts to update the content in database and manipulate files Developed webbased application using Django framework with python concepts Generated Python Django forms to maintain the record of online users Used Django APIs to access the database Involved in Python OOP code for quality logging monitoring and debugging code PYTHON DEVELOPER Intel Technology Company February 2016 to November 2017 Designed JQuery libraries for all clientside JavaScript manipulations Utilized Python libraries wxPython numPY Twisted and matPlotLib Used Go Lang to create backend servers Developed Micro services using Go language and developed corresponding test cases Implemented SQLAlchemy which is a python library for complete access over SQL Worked on Element Tree XML API in python to parse XML documents and load the data in database Application of various machine learning algorithms and statistical modeling like decision trees text analytics natural language processing NLP supervised and unsupervised regression models social network analysis neural networks deep learning SVM clustering to identify Volume using scikitlearn package in python Matlab Designing and evaluating business using historical current data from Google Analytics Used Pandas as API to put the data as time series and tabular format for manipulation and retrieval of data Executed Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Anisole Managed worldwide data in Omniture for data collection and analysis and also worked on the library like pandas NumPy SciPy Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS Wrote with objectoriented Python AWSFlask SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Accessed database objects using Django Database APIs Worked on Python OpenStack APIs and used Numpy for Numerical analysis Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Implemented business logic using Python Web frame work Django Designed applications implementing MVC architecture in Pyramid Zope frame works Designing mobile search application system requirements and coded backend and frontend in Python Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Developed Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Designed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Proficient in Container management using Docker by writing Docker files and set up the automated build on Docker HUB and installing and configuring Kubernetes Carried out various mathematical operations for calculation purpose using python pandas libraries Uses Edward is a Python library for probabilistic modeling inference and criticism It is a testbed for fast experimentation and research with probabilistic models Designed and implemented open source AI frameworks Pytorch TensorFlow Scikitlearn Apache Open Source Kafka Storm Spark for NLP and ML Algorithms Built various graphs for business decision making using Python matplotlib library Used Python library NumPy Beautiful Soup for webscraping Used Django Database APIs to access database objects Developed serverbased web traffic statistical analysis tool using Flask Pandas Utilized Python libraries like NumPy and matplotlib for generating graphical reports Worked on the development of SQL and stored procedures for normalization and denormalization in MYSQL Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information PYTHON DEVELOPER HewlettPackard Software Company July 2014 to January 2016 Created an Application was based on serviceoriented architecture and used Python Django JSF Spring Ajax HTML CSS for the frontend Developed complex web middleware and back end systems in Python SQL for Linux and Windows Used scikitlearn in modeling various classification regression and clustering algorithms including support vector machines random forests gradient boosting kmeans Developed and tested many features for dashboard using Python ROBOT framework Bootstrap CSS and JavaScript Aggregated the CPU and GPU temperature for the model as the model was using TensorFlow as bankend Implemented Machine Learning Computer Vision Deep Learning and Neural Networks algorithms using TensorFlow and designed Prediction Model using Data Mining Techniques with help of Python and Libraries like NumPy SciPy Matplotlib Pandas scikitlearn Led the design and development of Converged Enhanced Ethernet features to ensure traffic will be lossless within the Microsoft Azure Stack in a layer 2 and layer 3 environment Built a delta file from full file by identifying only INSERTS UPDATES and DELETES by using python and pyspark modules and store it in S3 Experience working on Python Nameko decorators generators list comprehensions list tuples cache pandas and NumPy Managed large datasets using Panda data frames and MySQL Used Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Implemented in Jenkins for Continuous Integration and for automating all builds and deployments and Build Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code and Installed and Administered Jenkins CI for Maven Builds Developed web applications and RESTful web services and APIs using Django Pyramid Work with team of developers on python applications for RISK management Developed webbased application using Django framework with python concepts Developed entire frontend and backend modules using Python on Django Web Framework by implementing MVC architecture Worked on several standard Python packages like Numpy matPlotLib Scipy Pandas and PyTables etc Responsible for designing and deploying new ELK clusters Elasticsearch Logstash Graphite Kibana beats Kafka zookeeper etc Developed dynamic web pages using Python Django Frameworks Created a Python based web application using Python scripting for data processing MySQL for the database and HTMLCSS Executed MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Worked on creation of custom Docker container images tagging and pushing the images Worked on Ansible Vagrant and Docker for managing the application environments Worked with a team on planning designing configurations deployments and support of LANWANWLAN infrastructure Utilized Python libraries like NumPy and matplotlib for generating graphical reports Worked on the development of SQL and stored procedures for normalization and denormalization in MYSQL Troubleshooting problems related to packet or frame transfer across routers or switches using Wireshark Deployed the project into Jenkins using GIT version control system Developed consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Automated the existing scripts for performance calculations using NumPy and SQLAlchemy Used SVN as version control for existing system Creating and modifying web services and stored procedures to implement new requirements using Python Exposing services as RESTful service in JSON format for AdminUI which is developed using Django Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds Implemented unit testing using PyUnit and tested several RESTful services using SOAPUI Experienced in Agile Methodologies and SCRUM Process Worked in development of applications especially in LINUX environment and familiar with all commands Used tools such a uchiwa and kibana for monitoring systems Devops Perform upgrades on development and production systems worldwide Performed various finetuning tricks on my own CNN as well as VGG16Data Augmentation Transfer Learning implemented in Keras and Tensorflow Achieved a testing accuracy of 96 Education Masters Skills AWS 4 years Chef 4 years CSS 4 years Django 4 years Git 4 years Javascript Android PHP ASP MySQL SymPy 3 years Python ScalaSQLPLSQLSASPEP8PIP Spark 3 years RequestsScrapySQLAlchemy BeautifulSoup NumPySciPy matplotlib PyGame 3 years Pyglet PyQTPyGtkpywin32 ntlk noseOpenCV SymPy 3 years IpythonCaffeTorchDjangoFlaskPyramidTwistedMuffin 3 years Selenium Splinter PyChecker Komodo PyCharm PyDev PyScripter PyShield Spyder Jupyter MySQLTeradataSQL Server InfluxDB MongoDB 3 years Links httpAlenb099gmailcom Additional Information SKILLS Python Scala SQL PLSQL SAS PEP8 PIP Spark Requests Scrapy SQLAlchemy BeautifulSoup NumPy SciPy matplotlib PyGame Pyglet PyQT PyGtk pywin32 ntlk nose OpenCV SymPy Ipython Caffe Torch Django Flask Pyramid Twisted Muffin Git Mercurial SVN GitHub Jenkins Chef Puppet Ansible Docker Kubernetes Selenium Splinter PyChecker Komodo PyCharm PyDev PyScripter PyShield Spyder Jupyter MySQL Teradata SQL Server InfluxDB MongoDB IntelliJ Cassandra Jira HP ALM HP Quality Center Software Development Life Cycle SDLC Agile Waterfall Hybrid Pair Programming Scrum ELK Elasticsearch Logstash Kibana Kanban Kafka Swagger OpenStack Amazon Web Services AWS Microsoft Azure Boto3 Jinja Mako AMQP Celery Apache Tomcat Tensorflow Keras ScikitLearn Edward Lime RabbitMQ Heroku Samba Confluence Bamboo AJAX jQuery JSON XML XSLT LDAP OAuth SOAP REST Microservices Active Directory design patterns HTMLHTML5 CSSCSS3 JavaScript PhosphorJS AngularJS NodeJS EmberJS ReactJS Bootstrap Big Data Hadoop technologies Linux Unix",
    "unique_id": "ac92ae4a-3774-4c14-b861-fa116d1484f0"
}