{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer American Express Having 5 years of experience in developing webbased applications software development and design using Python Django XML CSS HTML C DHTML Java JavaScript jQuery and AngularJS Experience in IT industry with proficiency in Analysis Design Development Testing of Enterprise Applications and Database Development using Python Django Flask and SQL projects Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Handson experience in relational database connections like DBAPI connection management and querybased access to databases like PostgreSQL and MySQL in Python Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm Spyder Studio and Sublime Text Experienced in all facets of full CM process with tools such as SVN GIT PVCS Clear Case Clear Quest Perforce Cruise Control Jenkins Bamboo Chef and Puppet Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Experience in implementing Model View Control MVC architecture using serverside applications like Django Flask and Pyramid for developing web applications Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Strong experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Experience in software development in Python libraries used Turtle Tkinter Beautiful Soup NumPy SciPy matplotlib Pythontwitter Pandas data frame MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Experience in working with Amazon Web Services AWS like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience in developing applications using agile methodologies like Test Driven Development TDD Worked on various operating systems Windows XP7810 UNIX and Linux Experienced with integration of MongoDB and Casandra databases Python open stack APIs Experience in various environments such as Python Django HTMLCSS MS SQL Server Script Eclipse GIT GitHub AWS Linux Shell Scripting Experience with JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Extensively worked on Jenkins and Hudson by installing configuring and maintaining for the purpose of continuous integration CI and for End to End automation for all build and deployments Ability to build deployment build scripts and automated solutions using scripting languages such as Shell scripting kasha Bash Python Ruby PHP PERL Experience with continuous integration and automation using Jenkins Experience in working with deployment tools like AWS Elastic Beanstalk Jenkins Ansible Docker and Kubernetes Hands on experience with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Working Knowledge of Pandas NumPy SciPy Good working knowledge of Deep Learning Python libraries Work Experience Python Developer American Express New York NY April 2018 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications with Python Django HTML Behavior Driven Development BDD and pairbased programming Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Used NumPy SciPy Matplotlib libraries for ndimensional representation of data and plotting graphs Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ETL process for continuously bulk importing catalog data from MySQL into Elastic search wrote python scripts to perform CRUD operations on MySQL database Involved in Sprint planning sessions and participated in the daily Agile SCRUM meetings And monitored on JIRA Agile Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web and also worked with selenium and Mockito Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Developed Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular2 Refactored existing batch jobs and migrated existing legacy extracts from Informatica to Python based micro services and deployed in AWS with minimal downtime Involved in service based RESTful technologies and used Bootstrap and Angularjs for page design Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Implemented SOAP using web services to interact with various devices to pull realtime data on the network Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Build highly available content distribution sites by using CICD tools like Chef Ansible Docker Maven Jenkins Jira Kubernetes etc Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Exposure to the real time implementation of Artificial Intelligence and Machine Learning conducted by a Software Firm Developed a web application selfservice portal using Python Flask Flask RESTful VueJS HTML CSS Bootstrap POSTGRESQL database These portal enables users for requesting Namespacestorage and Server provisioning Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Created SQL loader Scripts to load data into the temporary staging tables Scripted PowerShell reports to check for user account audit compliance Python developer Bank of America Manhattan NY October 2016 to August 2017 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Working as an application developer experienced with controllers views and models in Django Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased scheme Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Developed internal auxiliary web apps using python Django framework with Angularjs and Bootstrap CSS HTML framework Involved in tokenizing the sensitive data before archiving in AWSS3 using based Enterprise Tokenization service and encrypting the data before sending it over wire to external systems Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Generating various capacity planning reports graphical using Python packages like NumPy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Monitoring Python scripts run as daemons in the UNIXLinux system background to collect trigger and feed arrival information Helped calculating SLA misses Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Worked on Creating Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Implemented the Spring MVC architecture Worked on Restful API development using Jersey API Worked on different J2EE Design Patterns such as Factory Pattern and Singleton Created User Interface screens using HTML AJAX CSS Java script Python Developer HSBC Mumbai Maharashtra May 2014 to September 2016 Responsibilities Developed webbased applications using Python Django XML CSS HTML JavaScript Angular JS and jQuery Worked with JSON based REST Web services and Amazon Web Services AWS and worked on Amazon services like Amazon Cloud EC2 Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed the required XML Schema documents and implemented the framework for parsing XML documents Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Used spark SQL and spark data frame extensively to cleanse and integrate imported data into more meaningful insights Used Django frame and MYSQL for the backend work post sales customer feedback and complaint management system Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Coded various business process methods required for creation of Web Services related to customer information and provider information using JAXWS SOAP WSDL and JAXRS REST web services Worked with Requests Pysftp Gnupg Report Lab NumPy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Developed highperformance distributed queueing system Redis Akka closure MQ messaging Json Developed new functionality for interactive healthcare system Implemented presentation layer using CSS framework NodeJS AngularJS Angular2 Angular4 WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Angular2 Angular4 Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like jQuery JavaScript HTML CSS files Developed Restful APIs using Python Flask and SQL Alchemy data models as well as ensured code quality by writing unit tests using Pytest Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMware API calls Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQL dB package to retrieve information Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database",
    "entities": [
        "Working Knowledge",
        "Bash ETL",
        "Object Oriented Programming",
        "Amazon EBS",
        "JAXWS SOAP WSDL",
        "Informatica",
        "jQuery Worked",
        "Java PHP Nodejs Python Ruby",
        "Kubernetes Hands",
        "RESTful technologies",
        "UNIX",
        "webapp2",
        "Working",
        "API Integration Exposure",
        "jQuery JavaScript HTML CSS",
        "VMware API",
        "Amazon Web Services AWS",
        "Panda",
        "ER",
        "Model View Control MVC",
        "Test Driven Development TDD Worked",
        "XML",
        "Used React JS",
        "Bootstrap Involved",
        "Developed Chef Cookbooks",
        "Bootstrap CSS",
        "Turtle Tkinter Beautiful Soup NumPy SciPy",
        "Software Development Life Cycle SDLC",
        "Enterprise Tokenization",
        "Shell",
        "Developed Single Page Applications",
        "Kubernetes Created Python",
        "Apache Spark",
        "Amazon",
        "AWSS3",
        "UNIXLinux",
        "Bigdata Integration and Analytics",
        "Python",
        "Sublime Text Experienced",
        "DBAPI",
        "Oracle Relational",
        "Mockito Developed Serverside",
        "AWS Elastic Beanstalk Jenkins Ansible Docker",
        "Bash",
        "Django",
        "Factory Pattern",
        "AutoScaling of AWS",
        "Git",
        "Artificial Intelligence and Machine Learning",
        "MQ",
        "Virtual DOM React Props Lifecycle",
        "JSP",
        "Python Django HTMLCSS MS",
        "Flask",
        "HTML CSS jQuery",
        "Bank of America Manhattan",
        "Implemented SOAP",
        "RDS",
        "Refactored",
        "SQLbased",
        "MVC",
        "Interface",
        "PythonDjango",
        "GIT",
        "Node JS",
        "HTML CSS JavaScript",
        "Created",
        "AWS",
        "Created SQL",
        "Singleton",
        "Python Developer HSBC Mumbai",
        "SQL PostgreSQL Handson",
        "JSX",
        "Python Spring IOC Inversion",
        "SQL",
        "PowerShell",
        "Django Oracle DB PostgreSQL",
        "lPythonspan",
        "Administrators",
        "Apache Spark Hadoop HDFS Hive MongoDB Expertise",
        "Python Spring Security",
        "Bash Developed GUI",
        "SQL Alchemy",
        "CICD",
        "HTML AJAX CSS Java",
        "the React States",
        "Pandas",
        "Python Integrated Development Environments",
        "CRUD",
        "Build",
        "Performed",
        "Windows XP7810",
        "CM",
        "Djangos",
        "JavaScript",
        "API Integration Created",
        "VueJS HTML CSS Bootstrap",
        "UI",
        "Analysis Design Development Testing of Enterprise Applications and Database Development",
        "Utilized PyUnit",
        "SVN",
        "CSS",
        "PythonFlaskDjango",
        "Bash Python Ruby PHP",
        "Data",
        "REST",
        "Namespacestorage",
        "MultiThreading Exception Handling and Collections Experience",
        "Requirement Analysis Design Development Database Design Deployment Testing Debugging",
        "NoSQL",
        "HTMLCSSjQuery",
        "Software Development Life Cycle",
        "Sprint",
        "EBS",
        "Monitoring Python",
        "Node",
        "Sublime Text PyCharm NetBeans Spyder"
    ],
    "experience": "Experience in IT industry with proficiency in Analysis Design Development Testing of Enterprise Applications and Database Development using Python Django Flask and SQL projects Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Handson experience in relational database connections like DBAPI connection management and querybased access to databases like PostgreSQL and MySQL in Python Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm Spyder Studio and Sublime Text Experienced in all facets of full CM process with tools such as SVN GIT PVCS Clear Case Clear Quest Perforce Cruise Control Jenkins Bamboo Chef and Puppet Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Experience in implementing Model View Control MVC architecture using serverside applications like Django Flask and Pyramid for developing web applications Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Strong experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Experience in software development in Python libraries used Turtle Tkinter Beautiful Soup NumPy SciPy matplotlib Pythontwitter Pandas data frame MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Experience in working with Amazon Web Services AWS like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience in developing applications using agile methodologies like Test Driven Development TDD Worked on various operating systems Windows XP7810 UNIX and Linux Experienced with integration of MongoDB and Casandra databases Python open stack APIs Experience in various environments such as Python Django HTMLCSS MS SQL Server Script Eclipse GIT GitHub AWS Linux Shell Scripting Experience with JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Extensively worked on Jenkins and Hudson by installing configuring and maintaining for the purpose of continuous integration CI and for End to End automation for all build and deployments Ability to build deployment build scripts and automated solutions using scripting languages such as Shell scripting kasha Bash Python Ruby PHP PERL Experience with continuous integration and automation using Jenkins Experience in working with deployment tools like AWS Elastic Beanstalk Jenkins Ansible Docker and Kubernetes Hands on experience with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Working Knowledge of Pandas NumPy SciPy Good working knowledge of Deep Learning Python libraries Work Experience Python Developer American Express New York NY April 2018 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications with Python Django HTML Behavior Driven Development BDD and pairbased programming Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Used NumPy SciPy Matplotlib libraries for ndimensional representation of data and plotting graphs Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ETL process for continuously bulk importing catalog data from MySQL into Elastic search wrote python scripts to perform CRUD operations on MySQL database Involved in Sprint planning sessions and participated in the daily Agile SCRUM meetings And monitored on JIRA Agile Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web and also worked with selenium and Mockito Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Developed Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular2 Refactored existing batch jobs and migrated existing legacy extracts from Informatica to Python based micro services and deployed in AWS with minimal downtime Involved in service based RESTful technologies and used Bootstrap and Angularjs for page design Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Implemented SOAP using web services to interact with various devices to pull realtime data on the network Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Build highly available content distribution sites by using CICD tools like Chef Ansible Docker Maven Jenkins Jira Kubernetes etc Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Exposure to the real time implementation of Artificial Intelligence and Machine Learning conducted by a Software Firm Developed a web application selfservice portal using Python Flask Flask RESTful VueJS HTML CSS Bootstrap POSTGRESQL database These portal enables users for requesting Namespacestorage and Server provisioning Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Created SQL loader Scripts to load data into the temporary staging tables Scripted PowerShell reports to check for user account audit compliance Python developer Bank of America Manhattan NY October 2016 to August 2017 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Working as an application developer experienced with controllers views and models in Django Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased scheme Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Developed internal auxiliary web apps using python Django framework with Angularjs and Bootstrap CSS HTML framework Involved in tokenizing the sensitive data before archiving in AWSS3 using based Enterprise Tokenization service and encrypting the data before sending it over wire to external systems Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Generating various capacity planning reports graphical using Python packages like NumPy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Monitoring Python scripts run as daemons in the UNIXLinux system background to collect trigger and feed arrival information Helped calculating SLA misses Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Worked on Creating Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Implemented the Spring MVC architecture Worked on Restful API development using Jersey API Worked on different J2EE Design Patterns such as Factory Pattern and Singleton Created User Interface screens using HTML AJAX CSS Java script Python Developer HSBC Mumbai Maharashtra May 2014 to September 2016 Responsibilities Developed webbased applications using Python Django XML CSS HTML JavaScript Angular JS and jQuery Worked with JSON based REST Web services and Amazon Web Services AWS and worked on Amazon services like Amazon Cloud EC2 Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed the required XML Schema documents and implemented the framework for parsing XML documents Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Used spark SQL and spark data frame extensively to cleanse and integrate imported data into more meaningful insights Used Django frame and MYSQL for the backend work post sales customer feedback and complaint management system Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Coded various business process methods required for creation of Web Services related to customer information and provider information using JAXWS SOAP WSDL and JAXRS REST web services Worked with Requests Pysftp Gnupg Report Lab NumPy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Developed highperformance distributed queueing system Redis Akka closure MQ messaging Json Developed new functionality for interactive healthcare system Implemented presentation layer using CSS framework NodeJS AngularJS Angular2 Angular4 WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Angular2 Angular4 Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like jQuery JavaScript HTML CSS files Developed Restful APIs using Python Flask and SQL Alchemy data models as well as ensured code quality by writing unit tests using Pytest Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMware API calls Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQL dB package to retrieve information Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "American",
        "Express",
        "years",
        "experience",
        "applications",
        "software",
        "development",
        "design",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "C",
        "DHTML",
        "Java",
        "JavaScript",
        "jQuery",
        "AngularJS",
        "Experience",
        "IT",
        "industry",
        "proficiency",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Enterprise",
        "Applications",
        "Database",
        "Development",
        "Python",
        "Django",
        "Flask",
        "SQL",
        "projects",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "aspects",
        "projects",
        "Requirement",
        "Analysis",
        "Design",
        "Development",
        "Database",
        "Design",
        "Deployment",
        "Testing",
        "Debugging",
        "Application",
        "Maintenance",
        "Handson",
        "experience",
        "database",
        "connections",
        "DBAPI",
        "connection",
        "management",
        "access",
        "databases",
        "PostgreSQL",
        "MySQL",
        "Python",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Beans",
        "PyCharm",
        "Spyder",
        "Studio",
        "Sublime",
        "Text",
        "facets",
        "process",
        "tools",
        "SVN",
        "GIT",
        "PVCS",
        "Clear",
        "Case",
        "Clear",
        "Quest",
        "Perforce",
        "Cruise",
        "Control",
        "Jenkins",
        "Bamboo",
        "Chef",
        "Puppet",
        "Sound",
        "experience",
        "Object",
        "Oriented",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Experience",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Pyramid",
        "web",
        "applications",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "Kubernetes",
        "Mongo",
        "DB",
        "Orient",
        "DBF",
        "net",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "Data",
        "analytics",
        "data",
        "Excel",
        "data",
        "experience",
        "data",
        "Bigdata",
        "Integration",
        "Analytics",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "Kafka",
        "Storm",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "Turtle",
        "Tkinter",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "Pythontwitter",
        "Pandas",
        "data",
        "frame",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "PyCharm",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "S3",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "identity",
        "access",
        "management",
        "AWS",
        "Cloud",
        "Amazon",
        "EBS",
        "Amazon",
        "Cloud",
        "front",
        "Backend",
        "applications",
        "PythonFlaskDjango",
        "SQL",
        "PostgreSQL",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "Experience",
        "applications",
        "methodologies",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "operating",
        "systems",
        "Windows",
        "XP7810",
        "UNIX",
        "Linux",
        "integration",
        "MongoDB",
        "Casandra",
        "Python",
        "stack",
        "APIs",
        "Experience",
        "environments",
        "Python",
        "Django",
        "HTMLCSS",
        "MS",
        "SQL",
        "Server",
        "Script",
        "Eclipse",
        "GIT",
        "GitHub",
        "AWS",
        "Linux",
        "Shell",
        "Scripting",
        "Experience",
        "JIRA",
        "bug",
        "tracking",
        "communicating",
        "results",
        "Strong",
        "Experience",
        "data",
        "technologies",
        "Apache",
        "Spark",
        "Hadoop",
        "HDFS",
        "Hive",
        "MongoDB",
        "Expertise",
        "configure",
        "manage",
        "Amazon",
        "Elastic",
        "Search",
        "cluster",
        "Log",
        "Stash",
        "Kibana",
        "ELK",
        "Stack",
        "logging",
        "stores",
        "logs",
        "metrics",
        "S3",
        "bucket",
        "Lambda",
        "functions",
        "Glacier",
        "storage",
        "maintenance",
        "AutoScaling",
        "AWS",
        "Jenkins",
        "Hudson",
        "configuring",
        "purpose",
        "integration",
        "CI",
        "End",
        "End",
        "automation",
        "build",
        "Ability",
        "deployment",
        "build",
        "scripts",
        "solutions",
        "scripting",
        "languages",
        "Shell",
        "kasha",
        "Bash",
        "Python",
        "Ruby",
        "PHP",
        "PERL",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Experience",
        "tools",
        "AWS",
        "Elastic",
        "Beanstalk",
        "Jenkins",
        "Ansible",
        "Docker",
        "Kubernetes",
        "Hands",
        "experience",
        "tools",
        "GitGitHub",
        "Ansible",
        "Artifactory",
        "Jenkins",
        "OpenStack",
        "Balance",
        "NodeProxy",
        "VMWare",
        "Open",
        "Source",
        "software",
        "testing",
        "delivery",
        "pipelines",
        "Working",
        "Knowledge",
        "Pandas",
        "NumPy",
        "SciPy",
        "knowledge",
        "Deep",
        "Learning",
        "Python",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "American",
        "Express",
        "New",
        "York",
        "NY",
        "April",
        "Present",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Developed",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Developed",
        "Chef",
        "Cookbooks",
        "Apache",
        "Tomcat",
        "Jenkins",
        "deployment",
        "automation",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "representation",
        "data",
        "plotting",
        "graphs",
        "business",
        "process",
        "automation",
        "applications",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "ETL",
        "process",
        "bulk",
        "catalog",
        "data",
        "MySQL",
        "search",
        "python",
        "scripts",
        "CRUD",
        "operations",
        "MySQL",
        "database",
        "Sprint",
        "planning",
        "sessions",
        "Agile",
        "SCRUM",
        "meetings",
        "JIRA",
        "Agile",
        "Developed",
        "Restful",
        "Microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "UI",
        "HTML",
        "CSS",
        "jQuery",
        "Bootstrap",
        "multitude",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Dynamo",
        "DB",
        "SNS",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "AWS",
        "Cloud",
        "Formation",
        "application",
        "Python",
        "Spring",
        "IOC",
        "Inversion",
        "Control",
        "Django",
        "Framework",
        "security",
        "Python",
        "Spring",
        "Security",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "selenium",
        "Mockito",
        "Developed",
        "Serverside",
        "automation",
        "Node",
        "JS",
        "scripting",
        "types",
        "SQL",
        "NoSQL",
        "stores",
        "Node",
        "JS",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "JavaScript",
        "frameworks",
        "ReactJS",
        "Angular2",
        "batch",
        "jobs",
        "legacy",
        "extracts",
        "Informatica",
        "Python",
        "micro",
        "services",
        "AWS",
        "downtime",
        "service",
        "technologies",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "applications",
        "IDEs",
        "Sublime",
        "Text",
        "PyCharm",
        "NetBeans",
        "Spyder",
        "IntelliJ",
        "operations",
        "calculation",
        "purpose",
        "Python",
        "libraries",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "interface",
        "MVC",
        "architecture",
        "SOAP",
        "web",
        "services",
        "devices",
        "data",
        "network",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "auto",
        "scaling",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "Build",
        "distribution",
        "sites",
        "CICD",
        "tools",
        "Chef",
        "Ansible",
        "Docker",
        "Maven",
        "Jenkins",
        "Jira",
        "Kubernetes",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "container",
        "replicas",
        "cluster",
        "Kubernetes",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Exposure",
        "time",
        "implementation",
        "Artificial",
        "Intelligence",
        "Machine",
        "Learning",
        "Software",
        "Firm",
        "web",
        "application",
        "selfservice",
        "portal",
        "Python",
        "Flask",
        "Flask",
        "VueJS",
        "HTML",
        "CSS",
        "Bootstrap",
        "POSTGRESQL",
        "database",
        "users",
        "Namespacestorage",
        "Server",
        "provisioning",
        "UI",
        "website",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "mechanism",
        "html",
        "page",
        "layout",
        "Created",
        "SQL",
        "loader",
        "Scripts",
        "data",
        "staging",
        "tables",
        "Scripted",
        "PowerShell",
        "user",
        "account",
        "audit",
        "compliance",
        "Python",
        "developer",
        "Bank",
        "America",
        "Manhattan",
        "NY",
        "October",
        "August",
        "Responsibilities",
        "analysis",
        "specification",
        "design",
        "implementation",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "application",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "mapping",
        "ORM",
        "solution",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "scheme",
        "Jenkins",
        "integration",
        "code",
        "quality",
        "inspection",
        "repository",
        "mirror",
        "source",
        "code",
        "management",
        "Git",
        "hub",
        "Python",
        "Django",
        "development",
        "frontend",
        "application",
        "React",
        "Webpack",
        "Redux",
        "ES67",
        "PostgreSQL",
        "database",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "stack",
        "provision",
        "machines",
        "clients",
        "Django",
        "API",
        "profiling",
        "techniques",
        "information",
        "Ansible",
        "Vagrant",
        "Docker",
        "application",
        "environments",
        "React",
        "JS",
        "components",
        "JSX",
        "React",
        "components",
        "DOM",
        "React",
        "Props",
        "Lifecycle",
        "methods",
        "React",
        "States",
        "Events",
        "Developed",
        "Restful",
        "Microservices",
        "Flask",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "Developed",
        "views",
        "templates",
        "Django",
        "controller",
        "template",
        "website",
        "interface",
        "web",
        "apps",
        "python",
        "Django",
        "framework",
        "Angularjs",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "data",
        "AWSS3",
        "Enterprise",
        "Tokenization",
        "service",
        "data",
        "wire",
        "systems",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "Python",
        "code",
        "web",
        "browser",
        "capacity",
        "planning",
        "reports",
        "Python",
        "packages",
        "NumPy",
        "matplotlib",
        "workflows",
        "Python",
        "scripts",
        "UNIX",
        "shell",
        "scripting",
        "Monitoring",
        "Python",
        "scripts",
        "daemons",
        "UNIXLinux",
        "system",
        "background",
        "trigger",
        "feed",
        "arrival",
        "information",
        "SLA",
        "misses",
        "JIRA",
        "bug",
        "tracking",
        "issue",
        "tracking",
        "options",
        "application",
        "algorithm",
        "data",
        "address",
        "generation",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "GIT",
        "Source",
        "control",
        "repositories",
        "code",
        "reviews",
        "pullmerge",
        "requests",
        "reality",
        "solution",
        "form",
        "video",
        "Premiere",
        "Pro",
        "Pylatte",
        "Python",
        "Git",
        "Adobe",
        "Effects",
        "Spring",
        "MVC",
        "architecture",
        "API",
        "development",
        "Jersey",
        "API",
        "J2EE",
        "Design",
        "Patterns",
        "Factory",
        "Pattern",
        "Singleton",
        "Created",
        "User",
        "Interface",
        "screens",
        "HTML",
        "AJAX",
        "CSS",
        "Java",
        "script",
        "Python",
        "Developer",
        "HSBC",
        "Mumbai",
        "Maharashtra",
        "May",
        "September",
        "Responsibilities",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "jQuery",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Amazon",
        "services",
        "Amazon",
        "Cloud",
        "EC2",
        "Worked",
        "methodologies",
        "quality",
        "deliverables",
        "ontime",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Django",
        "admin",
        "site",
        "dashboard",
        "custom",
        "Django",
        "dashboard",
        "end",
        "users",
        "custom",
        "Django",
        "APIs",
        "database",
        "access",
        "role",
        "development",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "spark",
        "SQL",
        "spark",
        "data",
        "frame",
        "data",
        "insights",
        "Django",
        "frame",
        "MYSQL",
        "work",
        "post",
        "sales",
        "customer",
        "feedback",
        "complaint",
        "management",
        "system",
        "AWS",
        "Beanstalk",
        "web",
        "applications",
        "services",
        "Java",
        "PHP",
        "Nodejs",
        "Python",
        "Ruby",
        "Docker",
        "servers",
        "Apache",
        "IIS",
        "business",
        "process",
        "methods",
        "creation",
        "Web",
        "Services",
        "customer",
        "information",
        "provider",
        "information",
        "JAXWS",
        "SOAP",
        "WSDL",
        "JAXRS",
        "REST",
        "web",
        "services",
        "Requests",
        "Pysftp",
        "Gnupg",
        "Report",
        "Lab",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "HTTPLib2",
        "Urllib2",
        "Beautiful",
        "Soup",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "highperformance",
        "system",
        "Redis",
        "Akka",
        "closure",
        "MQ",
        "Json",
        "functionality",
        "healthcare",
        "system",
        "presentation",
        "layer",
        "CSS",
        "framework",
        "NodeJS",
        "Angular2",
        "Angular4",
        "WireFraming",
        "HTML5",
        "Responsible",
        "framework",
        "UI",
        "development",
        "Developed",
        "html",
        "HTML5",
        "CSS3",
        "JSON",
        "Angular2",
        "Angular4",
        "Adobe",
        "JSP",
        "views",
        "functionality",
        "UI",
        "screens",
        "client",
        "technologies",
        "jQuery",
        "JavaScript",
        "HTML",
        "CSS",
        "APIs",
        "Python",
        "Flask",
        "SQL",
        "Alchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMware",
        "API",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MySQL",
        "database",
        "Python",
        "Python",
        "MySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "PyUnit",
        "Python",
        "Unit",
        "test",
        "framework",
        "Python",
        "applications",
        "Django",
        "Database",
        "APIs",
        "database",
        "Data",
        "mapping",
        "data",
        "class",
        "diagrams",
        "ER",
        "diagrams",
        "SQL",
        "queries",
        "data",
        "Oracle",
        "database"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:40:42.838241",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer American Express Having 5 years of experience in developing webbased applications software development and design using Python Django XML CSS HTML C DHTML Java JavaScript jQuery and AngularJS Experience in IT industry with proficiency in Analysis Design Development Testing of Enterprise Applications and Database Development using Python Django Flask and SQL projects Experienced in complete Software Development Life Cycle and major aspects of technological projects including Requirement Analysis Design Development Database Design Deployment Testing Debugging and Application Maintenance Handson experience in relational database connections like DBAPI connection management and querybased access to databases like PostgreSQL and MySQL in Python Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm Spyder Studio and Sublime Text Experienced in all facets of full CM process with tools such as SVN GIT PVCS Clear Case Clear Quest Perforce Cruise Control Jenkins Bamboo Chef and Puppet Sound experience in Object Oriented Programming using concepts like MultiThreading Exception Handling and Collections Experience in implementing Model View Control MVC architecture using serverside applications like Django Flask and Pyramid for developing web applications Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 Kubernetes and Mongo DB 26 24 Orient DBF net Having experienced in Agile Methodologies PCI Scrum stories and sprints experience in a Python based environment Data analytics data wrangling and Excel data extracts Strong experience in Big data Bigdata Integration and Analytics technologies including Apache Spark Hadoop Kafka Storm Experience in software development in Python libraries used Turtle Tkinter Beautiful Soup NumPy SciPy matplotlib Pythontwitter Pandas data frame MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm Experience in working with Amazon Web Services AWS like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS identity and access management AWS Cloud watch Amazon EBS and Amazon Cloud front Experienced in Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Experience in developing applications using agile methodologies like Test Driven Development TDD Worked on various operating systems Windows XP7810 UNIX and Linux Experienced with integration of MongoDB and Casandra databases Python open stack APIs Experience in various environments such as Python Django HTMLCSS MS SQL Server Script Eclipse GIT GitHub AWS Linux Shell Scripting Experience with JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache Spark Hadoop HDFS Hive MongoDB Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Extensively worked on Jenkins and Hudson by installing configuring and maintaining for the purpose of continuous integration CI and for End to End automation for all build and deployments Ability to build deployment build scripts and automated solutions using scripting languages such as Shell scripting kasha Bash Python Ruby PHP PERL Experience with continuous integration and automation using Jenkins Experience in working with deployment tools like AWS Elastic Beanstalk Jenkins Ansible Docker and Kubernetes Hands on experience with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Working Knowledge of Pandas NumPy SciPy Good working knowledge of Deep Learning Python libraries Work Experience Python Developer American Express New York NY April 2018 to Present Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Designed front end and backend of the application utilizing Python on Django Web Framework Developed consumerbased features and applications with Python Django HTML Behavior Driven Development BDD and pairbased programming Developed Chef Cookbooks to install and configure Apache Tomcat Jenkins and deployment automation Used NumPy SciPy Matplotlib libraries for ndimensional representation of data and plotting graphs Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash ETL process for continuously bulk importing catalog data from MySQL into Elastic search wrote python scripts to perform CRUD operations on MySQL database Involved in Sprint planning sessions and participated in the daily Agile SCRUM meetings And monitored on JIRA Agile Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Development Life Cycle SDLC and used agile methodology for developing application Upgraded existing UI with HTML CSS jQuery and Bootstrap Involved in designing and deploying multitude applications utilizing almost all of the AWS stack Including EC2 Route53 S3 RDS Dynamo DB SNS SQS IAM focusing on highavailability fault tolerance and autoscaling in AWS Cloud Formation Implemented the application using Python Spring IOC Inversion of Control Django Framework and handled the security using Python Spring Security Tested entire frontend and backend modules using Python on Django Web and also worked with selenium and Mockito Developed Serverside automation using Node JS scripting and connecting different types of SQL and NoSQL stores from Node JS Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased schema Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Developed Single Page Applications SPA using JavaScript frameworks like ReactJS and Angular2 Refactored existing batch jobs and migrated existing legacy extracts from Informatica to Python based micro services and deployed in AWS with minimal downtime Involved in service based RESTful technologies and used Bootstrap and Angularjs for page design Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Worked on various applications using python integrated IDEs Sublime Text PyCharm NetBeans Spyder and IntelliJ Carried out various mathematical operations for calculation purpose using Python libraries NUMPY Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly interface using MVC architecture Implemented SOAP using web services to interact with various devices to pull realtime data on the network Build servers using AWS importing volumes launching EC2 RDS creating security groups auto scaling load balancers ELBs in the defined virtual private connection Build highly available content distribution sites by using CICD tools like Chef Ansible Docker Maven Jenkins Jira Kubernetes etc Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Scheduled deployed and managed container replicas onto a node cluster using Kubernetes Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Exposure to the real time implementation of Artificial Intelligence and Machine Learning conducted by a Software Firm Developed a web application selfservice portal using Python Flask Flask RESTful VueJS HTML CSS Bootstrap POSTGRESQL database These portal enables users for requesting Namespacestorage and Server provisioning Designed and developed the UI of the website using HTML XHTML AJAX CSS and JavaScript Also used Bootstrap as a mechanism to manage and organize the html page layout Created SQL loader Scripts to load data into the temporary staging tables Scripted PowerShell reports to check for user account audit compliance Python developer Bank of America Manhattan NY October 2016 to August 2017 Responsibilities Involved in analysis specification design and implementation and testing phases of Software Development Life Cycle SDLC and used agile methodology for developing application Working as an application developer experienced with controllers views and models in Django Used objectrelational mapping ORM solution technique of mapping data representation from MVC model to Oracle Relational data model with an SQLbased scheme Used Jenkins for continuous integration for code quality inspection and worked on building local repository mirror and source code management using Git hub Architected and developed Python and Django for the backend development and frontend application using React Webpack Redux and ES67 and PostgreSQL for the database Build servers using AWS importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection and open stack to provision new machines for clients Defined different Django API profiling techniques for faster rendering information Used Ansible Vagrant and Docker for managing the application environments Used React JS in components like JSX creating React components Virtual DOM React Props Lifecycle methods working with the React States and Events Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2 Developed views and templates with Django view controller and template to create a userfriendly website interface Developed internal auxiliary web apps using python Django framework with Angularjs and Bootstrap CSS HTML framework Involved in tokenizing the sensitive data before archiving in AWSS3 using based Enterprise Tokenization service and encrypting the data before sending it over wire to external systems Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser Generating various capacity planning reports graphical using Python packages like NumPy matplotlib Automated different workflows which are initiated manually with Python scripts and UNIX shell scripting Monitoring Python scripts run as daemons in the UNIXLinux system background to collect trigger and feed arrival information Helped calculating SLA misses Used JIRA for bug tracking and issue tracking and added several options to the application to choose particular algorithm for data and address generation Worked on Creating Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Used GIT as Source control repositories with regular code reviews and pullmerge requests Prototyped an augmented reality solution in the form of a video using Premiere Pro Pylatte and Python Git Adobe After Effects Implemented the Spring MVC architecture Worked on Restful API development using Jersey API Worked on different J2EE Design Patterns such as Factory Pattern and Singleton Created User Interface screens using HTML AJAX CSS Java script Python Developer HSBC Mumbai Maharashtra May 2014 to September 2016 Responsibilities Developed webbased applications using Python Django XML CSS HTML JavaScript Angular JS and jQuery Worked with JSON based REST Web services and Amazon Web Services AWS and worked on Amazon services like Amazon Cloud EC2 Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed the required XML Schema documents and implemented the framework for parsing XML documents Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Used spark SQL and spark data frame extensively to cleanse and integrate imported data into more meaningful insights Used Django frame and MYSQL for the backend work post sales customer feedback and complaint management system Used AWS Beanstalk for deploying and scaling web applications and services developed with Java PHP Nodejs Python Ruby and Docker on familiar servers such as Apache and IIS Coded various business process methods required for creation of Web Services related to customer information and provider information using JAXWS SOAP WSDL and JAXRS REST web services Worked with Requests Pysftp Gnupg Report Lab NumPy SciPy Matplotlib HTTPLib2 Urllib2 Beautiful Soup and Pandas python libraries during development lifecycle Developed highperformance distributed queueing system Redis Akka closure MQ messaging Json Developed new functionality for interactive healthcare system Implemented presentation layer using CSS framework NodeJS AngularJS Angular2 Angular4 WireFraming and HTML5 Responsible for setting up AngularJS framework for UI development Developed html views with HTML5 CSS3 JSON and AngularJS Angular2 Angular4 Adobe flash Created new JSP views to incorporate backend functionality to display on the UI screens using client rich technologies like jQuery JavaScript HTML CSS files Developed Restful APIs using Python Flask and SQL Alchemy data models as well as ensured code quality by writing unit tests using Pytest Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMware API calls Managed datasets using Panda data frames and MySQL queried MySQL database queries from Python using Python MySQL connector MySQL dB package to retrieve information Utilized PyUnit the Python Unit test framework for all Python applications and used Django Database APIs to access database objects Data mapping logical data modeling created class diagrams and ER diagrams and used SQL queries to filter data within the Oracle database",
    "unique_id": "a5f61bf1-2875-4056-bcf0-41a87b29f001"
}