{
    "clean_data": "Lead Python Developer Lead span lPythonspan span lDeveloperspan Lead Python Developer Peoples United Bank Bridgeport CT Qualified Python Developer with 10 years of experience as a Web Application Developer and Software Engineer using Python Expertise in MVW frameworks like Django Angular JS Java Script JQuery and Nodejs Carried out various mathematical operations for calculation purpose using pythonlibraries Experience object oriented programming OOP concepts using Python Django and Linux Familiar with JSON based REST Web services and Amazon Web Services AWS Hands on experience on deployment and packaging tool like Ansible Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL Oracle and Postgre and SQLite3 concepts Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLT IBM MQ libraries Perl Python scripting Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Experienced in developing Web Services with Python programming language Did sites configuration on Apache2 Ngnix web servers Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Extensive experience with Object Oriented Design and SDLC methodologies using Rational Rose Unified Modelling Language UML Understanding of Python best Practices PEP8 andpackage management system PIP in Python ExperienceinwritingSubQueriesStoredProceduresTriggersCursorsandFunctionsonMySQLand PL SQL database Good experience with RDMS like SQL Postgre SQL Oracle and NOSQL database like Mongo DB Good exposure to STLC Methodologies including Updating test cases test case execution defect tracking test reporting and documentation Worked in agile and waterfall methodologies with high quality deliverables delivered on time Experience with continuous integration and continuous deployment using Jenkins Good Knowledge in building and running python modules in spark environment Well versed with versioning tools like GIT and SVN Experience with Communication protocols CANLIN MOST Experienced with Effective root cause analysis and ability to solve complex issues Authorized to work in the US for any employer Work Experience Lead Python Developer Peoples United Bank Bridgeport CT August 2016 to Present Responsibilities Django Framework that was used in developing web applications Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonDjango based web application Postgresql DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Delivered automated solutions for science models Implemented configuration changes for data models Handled potential points of failure through error handling and communication of failure Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Extensively used python modules such as requests urllib urllib2 for web crawling Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sql alchemy Strong Object Oriented Analysis and Design OOAD ERD documentation UML artifacts modeling with Rational Rose and Enterprise Architect Applied the requirements engineering analysis and design disciplines of the RUP to J2EE projects Environment Python 30 Django HTML5CSS MS SQL Server 2013 MySQL Javascript Eclipse Linux Shell Scripting JQuery J2EE GitHub AngularJS Jira Lead Python Developer Entrust Dallas TX October 2015 to July 2016 Responsibilities Extensively used Python Django Framework for developing backend of applications Responsible for analysing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Worked with JSON based REST Web services and Amazon Web Services AWS Worked on Angular JS framework to develop interactive websites based on client needs Successfully migrated the websites main database from MySQL to PostgreSQL Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Involved in Developing a Restful service using Python Flask framework Actively involved in Initial software development life cycle SDLC of requirement gathering and also in suggesting system configuration specifications during client interaction Analysis the logs data and filter required columns by logstash configuration and send it to elastic search Handled Business logics by backend Python programming to achieve optimal results Implementing admin sites to manage database information with Flask Admin MySQL and SQLite Involved building Hadoop platforms maximizing business value by combining data science with big data Generated various graphs for business decision making using Python matplotlib library Tested various regular expressions in URL Dispatchers in Django Developed frontends using HTML5 CSS3 JavaScript andJQuery Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Designed and created the database tables and wrote SQL queries to access PostgreSQL Analysed and Designed workflows based on business logic Designed user friendly Interface using Bootstrap framework Wrote python code within the Hadoop framework to solve Natural Language Processing problems Strong Expertise in working with server side technologies including databases Restful API and MVC design patterns Executed asynchronous tasks with help of Celery and Rabbit MQ Participated in implementation design development and testing stages of projects Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed a portal to manage and entities in a content management system using Flask Design and developed applications to be crossbrowser and crossplatform compatible Developer multiple Angular JS controllers and configured Routes Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Deployed the project into Heroku and also used Github version control system Followed best practices and standards throughout the development of the project while implementing various design patterns Used SOAP and Restful API for information extraction Modified existing webpages to enhance the usability Maintained Puppet rspec for testing various unitsystem automation schemes EnvironmentsTools Python 3427 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Sr Python Developer Guide One Insurance Des Moines IA March 2014 to September 2015 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Interactive in providing change requests trouble reports and requirements collection with the client Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Used Numpy for Numerical analysis for Insurance premium Used Robot Test automation framework for Testing of the GUI of the application Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MongoDB using PyMongo module Improved code reuse and performance by making effective use of various design patterns and refactoring code base Involved in development of a Map based application for integral analysis purpose Updated and maintained Puppet rspec unitsystem test Involved in analysis and design of the application features Experience in debugging and troubleshooting programming related issues Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployment of the web application using the Linux server Environment Python Django HTML CSS XML KML MySQL JavaScript Angular JS JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Apache CQ TFS Amazon s3 Jenkins Map Box Mongo DB zope pytest Robot GitHub Bit Bucket Linux and Windows Sr Python Developer EXAMITY Natick MA December 2012 to February 2014 Examity offers live online proctoring for academic institutions universities by using a webcam to monitor students taking exams online to prevent cheating Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Environment Python Django Cassandra RabbitMQ Vugen Soap UI NodeJS REST API Bash PyDev Spyder Agile Python Developer ANZ Bank Bengaluru Karnataka February 2011 to September 2012 Responsibilities Worked on requirement gathering and High level design Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Used HTMLCSS XML and JavaScript for UI development Converted Visual basic Application to Python MySQL Generated Python Django Forms Crispy forms to record data login and signup of online users Experience in development test automation Designed and Implemented a Random Unique Test Selector Package on processing large volume of data using Python and Django ORM Skilled in using collections in Python for manipulating and looping through different user defined objects Designed email marketing campaigns and also created responsive web forms that saved data into a database using Python Django Framework Skilled in using collections in Python for manipulating and looping through different user defined objects Created data base tables functions stored procedures and wrote prepared statements using PLSQL Modified queries functions cursors triggers and stored procedures for MySQL database to improve performance while processing data Involved in capturing the requirements for serial functional interface and other software requirements specification document Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Responsible for Parsing XML data using XML parser and Testing fixing of the bugs and coding modifications Database Administration activities like taking backup checking log messages looking for database optimization Environment Python27 Django 14 Jenkins MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Web developer Rofous Hyderabad Telangana November 2007 to January 2011 Responsibilities Developed the web application using MS SQL SERVER HTML CSS and JavaScript Developed the front end of the portal using HTML JavaScript AJAX and CSS Used JavaScript as the scripting language and is used for detecting the visitors browser validating the forms providing event functions animation etc Used JavaScript to provide AJAX functionality to make website perform better for image loading and for dynamic loading of the web page without refreshing Designed and Developed Database using MS SQL Extensively used CRUD operations while maintaining the database Used jQuery extensively for event handling DOM manipulation and crossbrowser compatibility Performed extensive unit testing endtoend and prepared detailed test scripts as part of it Involved in setting up the environment installing the application and web servers EnvironmentMS SQL HTML AJAX JavaScript CSS DOM XML jQuery SVN Skills CSS 9 years DATABASE 9 years JAVASCRIPT 9 years SQL 8 years XML 8 years Additional Information Operating Systems Unix Linux Windows and Mac Web technologies JavaScript XML HTML CSS Languages Python Java C SQL Shell Scripting Database SQL SERVER MYSQL Oracle Software Tools Microsoft Visual Studio Net 2008 MS Visio Valgrind Frameworks Django web2py Flask Struts pylons and CSS Bootstrap Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA",
    "entities": [
        "Python Flask",
        "Nodejs Carried",
        "AJAX",
        "Test Driven Development TDD",
        "Karnataka",
        "AIX",
        "UNIX",
        "Agile Software Methodology",
        "webapp2",
        "Working",
        "Oracle Software Tools",
        "Panda",
        "Created a PythonDjango",
        "Heroku",
        "Hadoop",
        "XML",
        "Rational Rose and Enterprise Architect Applied",
        "HTMLCSSJQuery",
        "Telangana",
        "Strong Object Oriented Analysis and Design OOAD ERD documentation",
        "NOSQL",
        "XSLT IBM",
        "Bash Design",
        "Maintained",
        "API Integration Used Celery",
        "Automated",
        "TX",
        "GitHub Bit Bucket",
        "Python Django Framework Skilled",
        "Python",
        "Bugzilla Planning",
        "FF Interactive",
        "Stored Procedures",
        "Bash",
        "RDMS",
        "Dallas",
        "MultiThreading",
        "UML",
        "Kanban",
        "RUP",
        "Windows",
        "Amazon Web Services AWS Worked on Angular JS",
        "SQLite Involved",
        "Responsibilities Created Python",
        "Linux",
        "Flask",
        "Interface using Bootstrap framework Wrote",
        "VMWare API",
        "DOM",
        "Additional Information Operating Systems",
        "Amazon Web Services AWS Hands",
        "Created a",
        "CSS Bootstrap Deployment Tools Heroku Jenkins",
        "Routes Extensive",
        "Team Foundation",
        "MVC",
        "PythonDjango",
        "GIT",
        "Handled Business logics",
        "Flask Design",
        "API",
        "Object Oriented Design",
        "US",
        "Sqoop",
        "Flask Admin MySQL and",
        "Python Django Framework",
        "IA",
        "Created",
        "AWS",
        "Sqlite3",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "PyMongo",
        "Django HTML5CSS MS",
        "HTML",
        "Converted Visual",
        "MS SQL SERVER",
        "SQL",
        "Present Responsibilities Django Framework",
        "GitHub",
        "Django Oracle DB PostgreSQL",
        "Troubleshoot",
        "lPythonspan",
        "Database Administration",
        "Github",
        "Administrators",
        "Practices PEP8",
        "RESTAPI",
        "MVW",
        "Ngnix",
        "Amazon AWS",
        "Python Implemented",
        "Created PHPMySQL",
        "Pandas",
        "CRUD",
        "Performed",
        "Django Python",
        "JavaScript",
        "UI",
        "the Silent Circle Management System SCMC",
        "Selenium",
        "SMTP",
        "SVN",
        "Rofous Hyderabad",
        "CSS",
        "jQuery",
        "Des Moines",
        "REST",
        "Communication",
        "Used Apache CQ Team Foundation Server",
        "Data",
        "STLC Methodologies",
        "PIP",
        "Jenkins Mongo DB Elastic",
        "Integration",
        "Developed GUI"
    ],
    "experience": "Experience object oriented programming OOP concepts using Python Django and Linux Familiar with JSON based REST Web services and Amazon Web Services AWS Hands on experience on deployment and packaging tool like Ansible Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL Oracle and Postgre and SQLite3 concepts Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLT IBM MQ libraries Perl Python scripting Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Experienced in developing Web Services with Python programming language Did sites configuration on Apache2 Ngnix web servers Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Extensive experience with Object Oriented Design and SDLC methodologies using Rational Rose Unified Modelling Language UML Understanding of Python best Practices PEP8 andpackage management system PIP in Python ExperienceinwritingSubQueriesStoredProceduresTriggersCursorsandFunctionsonMySQLand PL SQL database Good experience with RDMS like SQL Postgre SQL Oracle and NOSQL database like Mongo DB Good exposure to STLC Methodologies including Updating test cases test case execution defect tracking test reporting and documentation Worked in agile and waterfall methodologies with high quality deliverables delivered on time Experience with continuous integration and continuous deployment using Jenkins Good Knowledge in building and running python modules in spark environment Well versed with versioning tools like GIT and SVN Experience with Communication protocols CANLIN MOST Experienced with Effective root cause analysis and ability to solve complex issues Authorized to work in the US for any employer Work Experience Lead Python Developer Peoples United Bank Bridgeport CT August 2016 to Present Responsibilities Django Framework that was used in developing web applications Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonDjango based web application Postgresql DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Delivered automated solutions for science models Implemented configuration changes for data models Handled potential points of failure through error handling and communication of failure Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Extensively used python modules such as requests urllib urllib2 for web crawling Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sql alchemy Strong Object Oriented Analysis and Design OOAD ERD documentation UML artifacts modeling with Rational Rose and Enterprise Architect Applied the requirements engineering analysis and design disciplines of the RUP to J2EE projects Environment Python 30 Django HTML5CSS MS SQL Server 2013 MySQL Javascript Eclipse Linux Shell Scripting JQuery J2EE GitHub AngularJS Jira Lead Python Developer Entrust Dallas TX October 2015 to July 2016 Responsibilities Extensively used Python Django Framework for developing backend of applications Responsible for analysing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Worked with JSON based REST Web services and Amazon Web Services AWS Worked on Angular JS framework to develop interactive websites based on client needs Successfully migrated the websites main database from MySQL to PostgreSQL Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Involved in Developing a Restful service using Python Flask framework Actively involved in Initial software development life cycle SDLC of requirement gathering and also in suggesting system configuration specifications during client interaction Analysis the logs data and filter required columns by logstash configuration and send it to elastic search Handled Business logics by backend Python programming to achieve optimal results Implementing admin sites to manage database information with Flask Admin MySQL and SQLite Involved building Hadoop platforms maximizing business value by combining data science with big data Generated various graphs for business decision making using Python matplotlib library Tested various regular expressions in URL Dispatchers in Django Developed frontends using HTML5 CSS3 JavaScript andJQuery Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Designed and created the database tables and wrote SQL queries to access PostgreSQL Analysed and Designed workflows based on business logic Designed user friendly Interface using Bootstrap framework Wrote python code within the Hadoop framework to solve Natural Language Processing problems Strong Expertise in working with server side technologies including databases Restful API and MVC design patterns Executed asynchronous tasks with help of Celery and Rabbit MQ Participated in implementation design development and testing stages of projects Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed a portal to manage and entities in a content management system using Flask Design and developed applications to be crossbrowser and crossplatform compatible Developer multiple Angular JS controllers and configured Routes Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Deployed the project into Heroku and also used Github version control system Followed best practices and standards throughout the development of the project while implementing various design patterns Used SOAP and Restful API for information extraction Modified existing webpages to enhance the usability Maintained Puppet rspec for testing various unitsystem automation schemes EnvironmentsTools Python 3427 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Sr Python Developer Guide One Insurance Des Moines IA March 2014 to September 2015 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Interactive in providing change requests trouble reports and requirements collection with the client Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Used Numpy for Numerical analysis for Insurance premium Used Robot Test automation framework for Testing of the GUI of the application Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MongoDB using PyMongo module Improved code reuse and performance by making effective use of various design patterns and refactoring code base Involved in development of a Map based application for integral analysis purpose Updated and maintained Puppet rspec unitsystem test Involved in analysis and design of the application features Experience in debugging and troubleshooting programming related issues Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployment of the web application using the Linux server Environment Python Django HTML CSS XML KML MySQL JavaScript Angular JS JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Apache CQ TFS Amazon s3 Jenkins Map Box Mongo DB zope pytest Robot GitHub Bit Bucket Linux and Windows Sr Python Developer EXAMITY Natick MA December 2012 to February 2014 Examity offers live online proctoring for academic institutions universities by using a webcam to monitor students taking exams online to prevent cheating Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Environment Python Django Cassandra RabbitMQ Vugen Soap UI NodeJS REST API Bash PyDev Spyder Agile Python Developer ANZ Bank Bengaluru Karnataka February 2011 to September 2012 Responsibilities Worked on requirement gathering and High level design Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Used HTMLCSS XML and JavaScript for UI development Converted Visual basic Application to Python MySQL Generated Python Django Forms Crispy forms to record data login and signup of online users Experience in development test automation Designed and Implemented a Random Unique Test Selector Package on processing large volume of data using Python and Django ORM Skilled in using collections in Python for manipulating and looping through different user defined objects Designed email marketing campaigns and also created responsive web forms that saved data into a database using Python Django Framework Skilled in using collections in Python for manipulating and looping through different user defined objects Created data base tables functions stored procedures and wrote prepared statements using PLSQL Modified queries functions cursors triggers and stored procedures for MySQL database to improve performance while processing data Involved in capturing the requirements for serial functional interface and other software requirements specification document Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Responsible for Parsing XML data using XML parser and Testing fixing of the bugs and coding modifications Database Administration activities like taking backup checking log messages looking for database optimization Environment Python27 Django 14 Jenkins MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Web developer Rofous Hyderabad Telangana November 2007 to January 2011 Responsibilities Developed the web application using MS SQL SERVER HTML CSS and JavaScript Developed the front end of the portal using HTML JavaScript AJAX and CSS Used JavaScript as the scripting language and is used for detecting the visitors browser validating the forms providing event functions animation etc Used JavaScript to provide AJAX functionality to make website perform better for image loading and for dynamic loading of the web page without refreshing Designed and Developed Database using MS SQL Extensively used CRUD operations while maintaining the database Used jQuery extensively for event handling DOM manipulation and crossbrowser compatibility Performed extensive unit testing endtoend and prepared detailed test scripts as part of it Involved in setting up the environment installing the application and web servers EnvironmentMS SQL HTML AJAX JavaScript CSS DOM XML jQuery SVN Skills CSS 9 years DATABASE 9 years JAVASCRIPT 9 years SQL 8 years XML 8 years Additional Information Operating Systems Unix Linux Windows and Mac Web technologies JavaScript XML HTML CSS Languages Python Java C SQL Shell Scripting Database SQL SERVER MYSQL Oracle Software Tools Microsoft Visual Studio Net 2008 MS Visio Valgrind Frameworks Django web2py Flask Struts pylons and CSS Bootstrap Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA",
    "extracted_keywords": [
        "Python",
        "Developer",
        "Lead",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Lead",
        "Python",
        "Developer",
        "Peoples",
        "United",
        "Bank",
        "Bridgeport",
        "CT",
        "Qualified",
        "Python",
        "Developer",
        "years",
        "experience",
        "Web",
        "Application",
        "Developer",
        "Software",
        "Engineer",
        "Python",
        "Expertise",
        "MVW",
        "frameworks",
        "Django",
        "Angular",
        "JS",
        "Java",
        "Script",
        "JQuery",
        "Nodejs",
        "operations",
        "calculation",
        "purpose",
        "pythonlibraries",
        "Experience",
        "object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "Django",
        "Linux",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "Hands",
        "experience",
        "deployment",
        "packaging",
        "tool",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "Oracle",
        "Postgre",
        "SQLite3",
        "concepts",
        "availability",
        "time",
        "system",
        "financialBanking",
        "transactions",
        "components",
        "Linux",
        "UNIX",
        "AIX",
        "platforms",
        "Tools",
        "C",
        "STL",
        "BOOST",
        "XML",
        "XPath",
        "XSLT",
        "IBM",
        "MQ",
        "Perl",
        "Python",
        "scripting",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJQuery",
        "High",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Web",
        "Services",
        "Python",
        "programming",
        "language",
        "configuration",
        "Apache2",
        "Ngnix",
        "web",
        "servers",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "experience",
        "Object",
        "Oriented",
        "Design",
        "SDLC",
        "methodologies",
        "Rational",
        "Rose",
        "Unified",
        "Modelling",
        "Language",
        "UML",
        "Understanding",
        "Python",
        "Practices",
        "PEP8",
        "management",
        "system",
        "PIP",
        "Python",
        "PL",
        "SQL",
        "database",
        "experience",
        "RDMS",
        "SQL",
        "Postgre",
        "SQL",
        "Oracle",
        "NOSQL",
        "database",
        "Mongo",
        "DB",
        "exposure",
        "STLC",
        "Methodologies",
        "test",
        "cases",
        "test",
        "case",
        "execution",
        "tracking",
        "test",
        "reporting",
        "documentation",
        "methodologies",
        "quality",
        "deliverables",
        "time",
        "Experience",
        "integration",
        "deployment",
        "Jenkins",
        "Good",
        "Knowledge",
        "modules",
        "spark",
        "environment",
        "tools",
        "GIT",
        "SVN",
        "Experience",
        "Communication",
        "protocols",
        "CANLIN",
        "root",
        "analysis",
        "ability",
        "issues",
        "US",
        "employer",
        "Work",
        "Experience",
        "Lead",
        "Python",
        "Developer",
        "Peoples",
        "United",
        "Bank",
        "Bridgeport",
        "CT",
        "August",
        "Present",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "Exposure",
        "MultiThreading",
        "factory",
        "learning",
        "process",
        "worker",
        "processes",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "testing",
        "methodologies",
        "unit",
        "testing",
        "Integration",
        "testing",
        "web",
        "application",
        "testing",
        "Selenium",
        "testing",
        "Lock",
        "mechanisms",
        "functionality",
        "multithreading",
        "PythonDjango",
        "web",
        "application",
        "Postgresql",
        "DB",
        "integrations",
        "party",
        "email",
        "storage",
        "services",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Design",
        "custom",
        "scripts",
        "use",
        "version",
        "controller",
        "Team",
        "Foundation",
        "Server",
        "TFS",
        "Test",
        "custom",
        "scripts",
        "solutions",
        "science",
        "models",
        "configuration",
        "changes",
        "data",
        "models",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "parts",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "process",
        "execution",
        "team",
        "members",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "Numpy",
        "Numerical",
        "analysis",
        "Insurance",
        "premium",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "packages",
        "AON",
        "unit",
        "test",
        "data",
        "models",
        "modules",
        "requests",
        "urllib2",
        "web",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "scripts",
        "performance",
        "calculations",
        "Numpy",
        "alchemy",
        "Strong",
        "Object",
        "Oriented",
        "Analysis",
        "Design",
        "OOAD",
        "ERD",
        "documentation",
        "UML",
        "artifacts",
        "Rational",
        "Rose",
        "Enterprise",
        "Architect",
        "requirements",
        "analysis",
        "design",
        "disciplines",
        "RUP",
        "J2EE",
        "projects",
        "Environment",
        "Python",
        "Django",
        "HTML5CSS",
        "MS",
        "SQL",
        "Server",
        "MySQL",
        "Javascript",
        "Eclipse",
        "Linux",
        "Shell",
        "Scripting",
        "JQuery",
        "J2EE",
        "GitHub",
        "Jira",
        "Lead",
        "Python",
        "Developer",
        "Entrust",
        "Dallas",
        "TX",
        "October",
        "July",
        "Responsibilities",
        "Python",
        "Django",
        "Framework",
        "backend",
        "applications",
        "multiplatform",
        "applications",
        "systems",
        "Python",
        "practices",
        "guidance",
        "term",
        "design",
        "decisions",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "JS",
        "framework",
        "websites",
        "client",
        "needs",
        "websites",
        "database",
        "MySQL",
        "PostgreSQL",
        "data",
        "analytics",
        "team",
        "implementation",
        "scripts",
        "Sqoop",
        "spark",
        "Hadoop",
        "batch",
        "data",
        "streaming",
        "service",
        "Python",
        "Flask",
        "framework",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirement",
        "gathering",
        "system",
        "configuration",
        "specifications",
        "client",
        "interaction",
        "Analysis",
        "logs",
        "data",
        "filter",
        "columns",
        "logstash",
        "configuration",
        "search",
        "Business",
        "logics",
        "Python",
        "programming",
        "results",
        "admin",
        "sites",
        "database",
        "information",
        "Flask",
        "Admin",
        "MySQL",
        "building",
        "Hadoop",
        "platforms",
        "business",
        "value",
        "data",
        "science",
        "data",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "expressions",
        "URL",
        "Dispatchers",
        "Django",
        "frontends",
        "HTML5",
        "CSS3",
        "JavaScript",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "database",
        "tables",
        "SQL",
        "access",
        "PostgreSQL",
        "workflows",
        "business",
        "logic",
        "user",
        "Interface",
        "Bootstrap",
        "framework",
        "Wrote",
        "python",
        "code",
        "Hadoop",
        "framework",
        "Natural",
        "Language",
        "Processing",
        "Strong",
        "Expertise",
        "server",
        "side",
        "technologies",
        "API",
        "MVC",
        "design",
        "patterns",
        "tasks",
        "help",
        "Celery",
        "Rabbit",
        "MQ",
        "implementation",
        "design",
        "development",
        "testing",
        "stages",
        "projects",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "portal",
        "entities",
        "content",
        "management",
        "system",
        "Flask",
        "Design",
        "applications",
        "crossbrowser",
        "Developer",
        "Angular",
        "JS",
        "controllers",
        "Routes",
        "code",
        "reviewing",
        "GitHub",
        "pull",
        "requests",
        "code",
        "quality",
        "meetings",
        "peer",
        "project",
        "Heroku",
        "Github",
        "version",
        "control",
        "system",
        "practices",
        "standards",
        "development",
        "project",
        "design",
        "patterns",
        "SOAP",
        "API",
        "information",
        "extraction",
        "webpages",
        "usability",
        "Puppet",
        "rspec",
        "unitsystem",
        "automation",
        "schemes",
        "EnvironmentsTools",
        "Python",
        "Java",
        "Django",
        "HTML5",
        "CSS3",
        "XML",
        "JSON",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "Puppet",
        "Postgre",
        "SQL",
        "Amazon",
        "s3",
        "Jenkins",
        "Mongo",
        "DB",
        "search",
        "TSQL",
        "Beautiful",
        "soup",
        "TFS",
        "nose",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Sr",
        "Python",
        "Developer",
        "Guide",
        "One",
        "Insurance",
        "Des",
        "Moines",
        "IA",
        "March",
        "September",
        "Responsibilities",
        "software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "requirements",
        "analysis",
        "design",
        "development",
        "system",
        "testing",
        "user",
        "acceptance",
        "testing",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "user",
        "web",
        "pages",
        "part",
        "web",
        "application",
        "web",
        "technologies",
        "HTML",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "AJAX",
        "CSS",
        "appearance",
        "Knowledge",
        "crossbrowser",
        "development",
        "HTML",
        "CSS",
        "websites",
        "Windows",
        "IE",
        "IE",
        "IE",
        "FF",
        "Interactive",
        "change",
        "requests",
        "trouble",
        "reports",
        "requirements",
        "collection",
        "client",
        "methods",
        "Create",
        "Read",
        "Update",
        "Delete",
        "CRUD",
        "Active",
        "Record",
        "Numpy",
        "Numerical",
        "analysis",
        "Insurance",
        "premium",
        "Robot",
        "Test",
        "automation",
        "framework",
        "Testing",
        "GUI",
        "application",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "Managed",
        "code",
        "GitHub",
        "Bit",
        "Bucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "MVC",
        "architecture",
        "web",
        "application",
        "help",
        "Django",
        "framework",
        "Celery",
        "task",
        "queue",
        "Rabbit",
        "MQ",
        "Redis",
        "broker",
        "tasks",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "code",
        "reviews",
        "GitHub",
        "pull",
        "requests",
        "bugs",
        "code",
        "quality",
        "knowledge",
        "monitoring",
        "practices",
        "search",
        "Install",
        "monitoring",
        "scripts",
        "AWS",
        "EC2",
        "instances",
        "task",
        "object",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "UNIX",
        "environment",
        "development",
        "application",
        "Python",
        "commands",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "Automated",
        "Production",
        "tasks",
        "Jenkins",
        "building",
        "jobs",
        "deployment",
        "Used",
        "Apache",
        "CQ",
        "Team",
        "Foundation",
        "Server",
        "content",
        "management",
        "expressions",
        "order",
        "pattern",
        "data",
        "base",
        "basis",
        "code",
        "CRUD",
        "operations",
        "MongoDB",
        "PyMongo",
        "module",
        "Improved",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "refactoring",
        "code",
        "base",
        "development",
        "Map",
        "application",
        "analysis",
        "purpose",
        "Puppet",
        "rspec",
        "unitsystem",
        "test",
        "analysis",
        "design",
        "application",
        "Experience",
        "debugging",
        "troubleshooting",
        "programming",
        "issues",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "Deployment",
        "web",
        "application",
        "Linux",
        "server",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "XML",
        "KML",
        "MySQL",
        "JavaScript",
        "Angular",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "MS",
        "SQL",
        "Server",
        "Elastic",
        "Search",
        "Ubuntu",
        "server",
        "Apache",
        "CQ",
        "TFS",
        "Amazon",
        "s3",
        "Jenkins",
        "Map",
        "Box",
        "Mongo",
        "DB",
        "zope",
        "Robot",
        "GitHub",
        "Bit",
        "Bucket",
        "Linux",
        "Windows",
        "Sr",
        "Python",
        "Developer",
        "EXAMITY",
        "Natick",
        "MA",
        "December",
        "February",
        "Examity",
        "institutions",
        "universities",
        "webcam",
        "students",
        "exams",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbit",
        "MQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Celery",
        "Rabbit",
        "MQ",
        "MySQL",
        "Django",
        "Flask",
        "worker",
        "framework",
        "Recording",
        "Scripts",
        "Web",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "Soap",
        "UI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "Scripting",
        "web",
        "web",
        "services",
        "Application",
        "service",
        "architecture",
        "Python",
        "Django15",
        "JSF",
        "Spring",
        "HTML",
        "CSS",
        "frontend",
        "server",
        "monitoring",
        "daemon",
        "Psutil",
        "Django",
        "app",
        "analytics",
        "data",
        "solutions",
        "Cassandra",
        "database",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "Apache",
        "Cassandra",
        "database",
        "Cassandra",
        "data",
        "model",
        "implementation",
        "monitoring",
        "DSE",
        "Dev",
        "Centre",
        "Data",
        "stax",
        "Ops",
        "center",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Django",
        "Python",
        "NodeJS",
        "infrastructure",
        "services",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJQuery",
        "High",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Strong",
        "Socket",
        "programming",
        "experience",
        "Python",
        "networking",
        "operations",
        "race",
        "route",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "Python",
        "modules",
        "eg",
        "csv",
        "robot",
        "parser",
        "iter",
        "tools",
        "jinja2",
        "lxml",
        "development",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "RESTAPI",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "graphs",
        "business",
        "decision",
        "Python",
        "mat",
        "plotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Planning",
        "test",
        "cases",
        "test",
        "cases",
        "methodologies",
        "scrum",
        "stand",
        "ups",
        "Kanban",
        "mode",
        "requirements",
        "clients",
        "Environment",
        "Python",
        "Django",
        "Cassandra",
        "Vugen",
        "Soap",
        "UI",
        "NodeJS",
        "REST",
        "API",
        "Bash",
        "PyDev",
        "Spyder",
        "Agile",
        "Python",
        "Developer",
        "ANZ",
        "Bank",
        "Bengaluru",
        "Karnataka",
        "February",
        "September",
        "Responsibilities",
        "requirement",
        "gathering",
        "level",
        "design",
        "PHPMySQL",
        "backend",
        "data",
        "entry",
        "Flash",
        "Flash",
        "developer",
        "data",
        "query",
        "strings",
        "HTMLCSS",
        "XML",
        "JavaScript",
        "UI",
        "development",
        "Application",
        "Python",
        "MySQL",
        "Python",
        "Django",
        "Forms",
        "Crispy",
        "forms",
        "data",
        "login",
        "users",
        "Experience",
        "development",
        "test",
        "automation",
        "Random",
        "Unique",
        "Test",
        "Selector",
        "Package",
        "volume",
        "data",
        "Python",
        "Django",
        "ORM",
        "collections",
        "Python",
        "user",
        "objects",
        "email",
        "marketing",
        "campaigns",
        "web",
        "forms",
        "data",
        "database",
        "Python",
        "Django",
        "Framework",
        "Skilled",
        "collections",
        "Python",
        "user",
        "objects",
        "data",
        "base",
        "tables",
        "functions",
        "procedures",
        "statements",
        "PLSQL",
        "Modified",
        "queries",
        "functions",
        "cursors",
        "triggers",
        "procedures",
        "MySQL",
        "database",
        "performance",
        "data",
        "requirements",
        "interface",
        "software",
        "requirements",
        "specification",
        "document",
        "code",
        "reviewing",
        "GitHub",
        "pull",
        "requests",
        "code",
        "quality",
        "meetings",
        "peer",
        "XML",
        "data",
        "XML",
        "parser",
        "Testing",
        "fixing",
        "bugs",
        "modifications",
        "Database",
        "Administration",
        "activities",
        "backup",
        "log",
        "messages",
        "database",
        "optimization",
        "Environment",
        "Python27",
        "Django",
        "Jenkins",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Git",
        "Web",
        "developer",
        "Rofous",
        "Hyderabad",
        "Telangana",
        "November",
        "January",
        "Responsibilities",
        "web",
        "application",
        "MS",
        "SQL",
        "SERVER",
        "HTML",
        "CSS",
        "JavaScript",
        "end",
        "HTML",
        "JavaScript",
        "AJAX",
        "CSS",
        "JavaScript",
        "scripting",
        "language",
        "visitors",
        "browser",
        "forms",
        "event",
        "functions",
        "animation",
        "JavaScript",
        "AJAX",
        "functionality",
        "website",
        "image",
        "loading",
        "loading",
        "web",
        "page",
        "Developed",
        "Database",
        "MS",
        "SQL",
        "CRUD",
        "operations",
        "database",
        "jQuery",
        "event",
        "DOM",
        "manipulation",
        "crossbrowser",
        "compatibility",
        "unit",
        "testing",
        "endtoend",
        "test",
        "scripts",
        "part",
        "environment",
        "application",
        "web",
        "servers",
        "SQL",
        "HTML",
        "AJAX",
        "JavaScript",
        "CSS",
        "DOM",
        "XML",
        "jQuery",
        "SVN",
        "Skills",
        "CSS",
        "years",
        "DATABASE",
        "years",
        "JAVASCRIPT",
        "years",
        "SQL",
        "years",
        "XML",
        "years",
        "Additional",
        "Information",
        "Operating",
        "Systems",
        "Unix",
        "Linux",
        "Windows",
        "Mac",
        "Web",
        "technologies",
        "JavaScript",
        "XML",
        "HTML",
        "CSS",
        "Languages",
        "Python",
        "Java",
        "C",
        "SQL",
        "Shell",
        "Scripting",
        "Database",
        "SQL",
        "SERVER",
        "MYSQL",
        "Oracle",
        "Software",
        "Tools",
        "Microsoft",
        "Visual",
        "Studio",
        "Net",
        "MS",
        "Visio",
        "Valgrind",
        "Frameworks",
        "Django",
        "web2py",
        "Flask",
        "Struts",
        "pylons",
        "CSS",
        "Bootstrap",
        "Deployment",
        "Tools",
        "Heroku",
        "Jenkins",
        "Tracking",
        "Tools",
        "Bugzilla",
        "JIRA"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:33:25.298244",
    "resume_data": "Lead Python Developer Lead span lPythonspan span lDeveloperspan Lead Python Developer Peoples United Bank Bridgeport CT Qualified Python Developer with 10 years of experience as a Web Application Developer and Software Engineer using Python Expertise in MVW frameworks like Django Angular JS Java Script JQuery and Nodejs Carried out various mathematical operations for calculation purpose using pythonlibraries Experience object oriented programming OOP concepts using Python Django and Linux Familiar with JSON based REST Web services and Amazon Web Services AWS Hands on experience on deployment and packaging tool like Ansible Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL Oracle and Postgre and SQLite3 concepts Developing high availability real time Messaging system for financialBanking transactions and developed associated components in Linux UNIX AIX platforms Tools C STL BOOST XML XPath and XSLT IBM MQ libraries Perl Python scripting Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Experienced in developing Web Services with Python programming language Did sites configuration on Apache2 Ngnix web servers Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Extensive experience with Object Oriented Design and SDLC methodologies using Rational Rose Unified Modelling Language UML Understanding of Python best Practices PEP8 andpackage management system PIP in Python ExperienceinwritingSubQueriesStoredProceduresTriggersCursorsandFunctionsonMySQLand PL SQL database Good experience with RDMS like SQL Postgre SQL Oracle and NOSQL database like Mongo DB Good exposure to STLC Methodologies including Updating test cases test case execution defect tracking test reporting and documentation Worked in agile and waterfall methodologies with high quality deliverables delivered on time Experience with continuous integration and continuous deployment using Jenkins Good Knowledge in building and running python modules in spark environment Well versed with versioning tools like GIT and SVN Experience with Communication protocols CANLIN MOST Experienced with Effective root cause analysis and ability to solve complex issues Authorized to work in the US for any employer Work Experience Lead Python Developer Peoples United Bank Bridgeport CT August 2016 to Present Responsibilities Django Framework that was used in developing web applications Exposure on MultiThreading factory to distribute learning process backtesting and the into various worker processes Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Different testing methodologies like unit testing Integration testing web application testing Selenium testing performed Lock mechanisms were implemented and the functionality of multithreading has been used PythonDjango based web application Postgresql DB and integrations with 3rd party email messaging storage services Developed a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Design and implemented custom scripts Extensive use of version controller Team Foundation Server TFS Test and validated the custom scripts Delivered automated solutions for science models Implemented configuration changes for data models Handled potential points of failure through error handling and communication of failure Anticipated potential parts of failure database communication points file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Used Pandas library for statistics Analysis Used Numpy for Numerical analysis for Insurance premium Managed large datasets using Panda data frames and MySQL Used advanced packages in AON PATHWISE for performing unit test and deploying data models Extensively used python modules such as requests urllib urllib2 for web crawling Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Developed the required XML Schema documents and implemented the framework for parsing XML documents Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using Numpy and sql alchemy Strong Object Oriented Analysis and Design OOAD ERD documentation UML artifacts modeling with Rational Rose and Enterprise Architect Applied the requirements engineering analysis and design disciplines of the RUP to J2EE projects Environment Python 30 Django HTML5CSS MS SQL Server 2013 MySQL Javascript Eclipse Linux Shell Scripting JQuery J2EE GitHub AngularJS Jira Lead Python Developer Entrust Dallas TX October 2015 to July 2016 Responsibilities Extensively used Python Django Framework for developing backend of applications Responsible for analysing various crossfunctional multiplatform applications systems enforcing Python best practices and provide guidance in making long term architectural design decisions Worked with JSON based REST Web services and Amazon Web Services AWS Worked on Angular JS framework to develop interactive websites based on client needs Successfully migrated the websites main database from MySQL to PostgreSQL Helped the big data analytics team with implementation of python scripts for Sqoop spark and Hadoop batch data streaming Involved in Developing a Restful service using Python Flask framework Actively involved in Initial software development life cycle SDLC of requirement gathering and also in suggesting system configuration specifications during client interaction Analysis the logs data and filter required columns by logstash configuration and send it to elastic search Handled Business logics by backend Python programming to achieve optimal results Implementing admin sites to manage database information with Flask Admin MySQL and SQLite Involved building Hadoop platforms maximizing business value by combining data science with big data Generated various graphs for business decision making using Python matplotlib library Tested various regular expressions in URL Dispatchers in Django Developed frontends using HTML5 CSS3 JavaScript andJQuery Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Designed and created the database tables and wrote SQL queries to access PostgreSQL Analysed and Designed workflows based on business logic Designed user friendly Interface using Bootstrap framework Wrote python code within the Hadoop framework to solve Natural Language Processing problems Strong Expertise in working with server side technologies including databases Restful API and MVC design patterns Executed asynchronous tasks with help of Celery and Rabbit MQ Participated in implementation design development and testing stages of projects Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Developed a portal to manage and entities in a content management system using Flask Design and developed applications to be crossbrowser and crossplatform compatible Developer multiple Angular JS controllers and configured Routes Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Deployed the project into Heroku and also used Github version control system Followed best practices and standards throughout the development of the project while implementing various design patterns Used SOAP and Restful API for information extraction Modified existing webpages to enhance the usability Maintained Puppet rspec for testing various unitsystem automation schemes EnvironmentsTools Python 3427 Java 17 Django 1917 HTML5 CSS3 XML JSON MySQL JavaScript Angular JS Backbone JS JQuery CSS Bootstrap Puppet Postgre SQL Amazon s3 Jenkins Mongo DB Elastic search TSQL Beautiful soup TFS nose JavaScript Eclipse Git GitHub Linux Sr Python Developer Guide One Insurance Des Moines IA March 2014 to September 2015 Responsibilities Involved in software development life cycle SDLC of tracking the requirements gathering analysis detailed design development system testing and user acceptance testing Developed entire frontend and backend modules using Python on Django Web Framework Involved in designing user interactive web pages as the front end part of the web application using various web technologies like HTML JavaScript Angular JS JQuery AJAX and implemented CSS for better appearance and feel Knowledge of crossbrowser and crossplatform development of HTML and CSS based websites in Windows like IE 6 IE 7 IE 8 and FF Interactive in providing change requests trouble reports and requirements collection with the client Actively involved in developing the methods for Create Read Update and Delete CRUD in Active Record Used Numpy for Numerical analysis for Insurance premium Used Robot Test automation framework for Testing of the GUI of the application Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Managed code versioning with GitHub Bit Bucket and deployment to staging and production servers Implemented MVC architecture in developing the web application with the help of Django framework Used Celery as task queue and Rabbit MQ Redis as messaging broker to execute asynchronous tasks Designed and managed API system deployment using fast http server and Amazon AWS architecture Involved in code reviews using GitHub pull requests reducing bugs improving code quality and increasing knowledge sharing Implemented monitoring and established best practices around using elastic search Install and configuring monitoring scripts for AWS EC2 instances Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Working under UNIX environment in development of application using Python and familiar with all of its commands Developed remote integration with third party platforms by using RESTful web services Automated Production tasks Updated and maintained Jenkins for automatic building jobs and deployment Used Apache CQ Team Foundation Server for the content management Used many regular expressions in order to match the pattern with the existing one and store them in data base on a chronological basis Implemented code to perform CRUD operations on MongoDB using PyMongo module Improved code reuse and performance by making effective use of various design patterns and refactoring code base Involved in development of a Map based application for integral analysis purpose Updated and maintained Puppet rspec unitsystem test Involved in analysis and design of the application features Experience in debugging and troubleshooting programming related issues Worked in MySQL database on simple queries and writing Stored Procedures for normalization Deployment of the web application using the Linux server Environment Python Django HTML CSS XML KML MySQL JavaScript Angular JS JQuery CSS Bootstrap RESTful MS SQL Server MongoDB Elastic Search Ubuntu server Apache CQ TFS Amazon s3 Jenkins Map Box Mongo DB zope pytest Robot GitHub Bit Bucket Linux and Windows Sr Python Developer EXAMITY Natick MA December 2012 to February 2014 Examity offers live online proctoring for academic institutions universities by using a webcam to monitor students taking exams online to prevent cheating Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Environment Python Django Cassandra RabbitMQ Vugen Soap UI NodeJS REST API Bash PyDev Spyder Agile Python Developer ANZ Bank Bengaluru Karnataka February 2011 to September 2012 Responsibilities Worked on requirement gathering and High level design Created PHPMySQL backend for data entry from Flash I had to assist the Flash developer send the correct data via query strings Used HTMLCSS XML and JavaScript for UI development Converted Visual basic Application to Python MySQL Generated Python Django Forms Crispy forms to record data login and signup of online users Experience in development test automation Designed and Implemented a Random Unique Test Selector Package on processing large volume of data using Python and Django ORM Skilled in using collections in Python for manipulating and looping through different user defined objects Designed email marketing campaigns and also created responsive web forms that saved data into a database using Python Django Framework Skilled in using collections in Python for manipulating and looping through different user defined objects Created data base tables functions stored procedures and wrote prepared statements using PLSQL Modified queries functions cursors triggers and stored procedures for MySQL database to improve performance while processing data Involved in capturing the requirements for serial functional interface and other software requirements specification document Extensive code reviewing using GitHub pull requests improved code quality and also conducted meetings among peer Responsible for Parsing XML data using XML parser and Testing fixing of the bugs and coding modifications Database Administration activities like taking backup checking log messages looking for database optimization Environment Python27 Django 14 Jenkins MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Web developer Rofous Hyderabad Telangana November 2007 to January 2011 Responsibilities Developed the web application using MS SQL SERVER HTML CSS and JavaScript Developed the front end of the portal using HTML JavaScript AJAX and CSS Used JavaScript as the scripting language and is used for detecting the visitors browser validating the forms providing event functions animation etc Used JavaScript to provide AJAX functionality to make website perform better for image loading and for dynamic loading of the web page without refreshing Designed and Developed Database using MS SQL Extensively used CRUD operations while maintaining the database Used jQuery extensively for event handling DOM manipulation and crossbrowser compatibility Performed extensive unit testing endtoend and prepared detailed test scripts as part of it Involved in setting up the environment installing the application and web servers EnvironmentMS SQL HTML AJAX JavaScript CSS DOM XML jQuery SVN Skills CSS 9 years DATABASE 9 years JAVASCRIPT 9 years SQL 8 years XML 8 years Additional Information Operating Systems Unix Linux Windows and Mac Web technologies JavaScript XML HTML CSS Languages Python Java C SQL Shell Scripting Database SQL SERVER MYSQL Oracle Software Tools Microsoft Visual Studio Net 2008 MS Visio Valgrind Frameworks Django web2py Flask Struts pylons and CSS Bootstrap Deployment Tools Heroku Jenkins Tracking Tools Bugzilla and JIRA",
    "unique_id": "78178895-1bdf-4dc0-afe7-4286ccdabf79"
}