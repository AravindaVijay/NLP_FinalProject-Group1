{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Bloomfield NJ Around 8 years experience in IT industry with proficiency in Design and Development using Python Django JavaJ2EE and Flask projects Experience in various stage of SDLC Software Development Life Cycle Software Testing Life CycleSTLC and QA methodologies from project definition to postdeployment documentation Strong experience of software development in python libraries used Beautiful Soup numpy scipy matplotlib Pandas data frame urllib MySQL DB for database connectivity Experienced in working on Application Servers like WebSphere Weblogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like Pycharm Eclipse and RAD Applied OOP concepts like MultiThreading Exception Handling and Collections and created a ModelViewControl architecture using Django for web applications Used HTML CSS Bootstrap JavaScript and jQuery to develop a web based UI design and Interface development Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle and MongoDB and Knowledgeable with continuous deployment using Heroku Jenkins and Ansible Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache spark Hadoop HDFS Hive Cassandra MongoDB Experience in developing webbased applications using python Django PHP C XML CSS HTML DHTML JavaScript jQuery Bootstrap RUBY and AJAX Created applications using Python under Linux OS Debian Ubuntu SUSE Linux RedHAt Linux environment Expertise in working with GUI frameworksPyJamas Jytho guidata  PyQt WebkitGtk Elasticsearch Logstash and Kibana ELK Proficient using Python packages such as NumPy SciPy Requests matPlotLib Pickle Pandas PySide wxPython QT PyGTK PyTables and Scikitlearn Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Written Python Scripts mappers to run on Hadoop distributed file system HDFS Developmental experience on various embedded products modem WIFI rputers last meter telecommunication products networkenabled settop box media player products and embedded system for automative application Experience in design development and testing of embedded firmwaresoftware development for real time multithreadingmultitasking embedded applications Experience in Agile Methodologies Scrum stories and Sprints experience in a python based environment along with analytics data wrangling and Excel data extracts Experience in C and C languages Written C and C applications and also migrated many legacy applications to pythonGood knowledge in testing tools like Bugzilla Junit and JIRA Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Authorized to work in the US for any employer Work Experience Sr Python Developer Glacier Bancorp New Jersey November 2016 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Used Django Framework in developing web applications to implement the model view control MVC architecture Developed analytical component using Scala and KAFKA Designed Forms Modules Views and Templates using Django and Python Installedconfiguresmaintained Apache servers on all machines production server and developmental servers Created script in python for calling REST APIs REST API development via Django REST Framework Implemented Business logic data exchange XML processing and graphics creation using Pythonand Django Implemented RESTful Webservices for sending and receiving the data between multiple systems Implemented Business logic data exchange XML processing and graphics creation using Pythonand Django Rewrite existing PythonFlask module to deliver certain format of data Created authorization scheme which enforced limitations on API clients Overwritten Django Rest Framework internals to allow for more dynamic routing Developed an application in Linux environment and dealt with all its commands Worked with SCRUM Agile methodology to ensure delivery of high quality work with monthly iterationtime box Installedconfiguredmaintained Apache servers on all machines production server and development servers Administrate Continuous Integration services Jenkins Nexus Artifactory and Repository Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Installedconfiguredmaintained MySQL database and MongoDB database Executed Backend and Database Tests using SQL queries validating the data for database editing and debugging is conducted using selenium Created a database using MySQL and wrote various queries for the extraction of data from the database Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JS JavaScript JQuery JSON and AJAX Used NoSQL database Apache Cassandra to load the data in database Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Developed Business Logic using Python on Django Web Framework DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Using jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Resolve tune maintain manage clients Jboss weblogic WAS ATG instances on cluster connectivity producing optimal performance results in each environment throughout the life cycle Prepare Test scripts for different applications using QTP Selenium Worked with RDBMS like Oracle and MySQL databases to query and read data Utilized standard Python modules such as csv robot parser itertools and pickle for development Developed user interface by using the Reactjs Flux for SPA development Installation and Configuration of Apache Tomcat Eclipse WSAD and AXIS Transfer Object for Lookups Value List Handler for search and DAO Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and linux server Designed and led big data algorithms using Hadoop and Java to improve forecasting and used HiveQL to generate reports Environment Python Django HTML CSS JavaScript jQuery PHP MySQL JSON UNIX XML AJAX KAFKA Bootstrap Django Flask MySQL PostgreSQL PyCharm PyDev wxPython numPY matPlotLib PyQT REST Eclipse Apache Tomcat WSAD SOAP Web Logic Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs Javascript JSP JSTL Servlet Oracle Crud PL SQL JDBC UML Junit Maven Itext GWT Google Web Toolkit Clear Case Jasper Report ILog Agile Web 20 SOA Sr Python Developer CVB Financial New Jersey May 2015 to October 2016 Responsibilities Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for Loading via Elasticache DOLETAnoSQL Grants Program Document Data to AWSDynamoDB for AWSEMR Grant Fulfillment Analysis Write scripts using python modules and its libraries to develop programs that improve processing of access requests Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Utilized Python in the handling of all hits on Django Redis and other applications Used OOP concepts in overall design and development of system applications Involved in all phases of Software Development Life Cycle SDLC and Worked on all activities related to the development implementation and support for Hadoop Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Build all database mapping classes using Django models Managed datasets using Panda data frames and MySQL queries MYSQL database queries from Python using PythonMySQL connector MySQLdb package to retrieve information Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Developed UI using HTML AJAX JavaScript and jQuery and jQueryUI Used MySQL as backend database and Mysqldb of python as database connector to interact with MySQL server Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous Integration to keep in line with Agile Software Methodology principles Integrated data from multiple applications using ETL tools like SSIS Informatica Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Created scripts for system administration and AWS using languages such as BASH and Python Wrote django admin pages and developed REST API get post delete put functionalities for the application Developed Python daemon processes that filter price and load CDR data to Oracle DB This script utilized multithreading sockets and grid queues Developed SOAP web service to provide serverside info on user attributes channel descriptions and other ondemand live show information Designed and developed a horizontally scalable APIs using Python Flask Fixed existing user interface bugs with CSS and JavaScript functionalities Used GitHub Crucible and Fisheye to maintain and utilize the repository Used Postgresql with python database API for database manipulation Used react google charts to show data in column charts combo chart bar charts Maintained and tracked bugs and Scrum stories in JIRA Environment scipy Pandas Bugzilla SVN C Java jQuery MySQL Linux Eclipse Shell Scripting HTML5CSS agile Python Django Flask PostgreSQL PyCharm PyDev wxPython numPY matPlotLib PyQT Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs Javascript JSP JSTL Servlet Oracle Crud PL SQL JDBC Python Developer First Republic Bank Seattle WA May 2014 to April 2015 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib and urllib for web crawling Used other packages such as Beautifulsoup for data parsing Worked on writing and as well as read data from csv and excel file formats Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Worked on resulting reports of the application and Tableau reports Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of Mongodb with shards and replicasets DevTest and Production Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo Fabric Git Tenjin Selenium Sphinx and Nose Modifying data using SASBASE SAS MACROS Extracting data from the database using SASAccess SAS SQL procedures and create SAS data sets Performed QA testing on the application Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Implemented the presentation layer with HTML CSS JavaScript JQuery Angular JS and AJAX Environment Python Django HTML JavaScript JQuery CSS AJAX Angular JS MySQL PostgreSQL Linux Flask PyCharm PyDev wxPython numPY matPlotLib PyQT Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs JSP JSTL Servlet Oracle Crud PL SQL Python Developer FCB Financial Holdings Columbus OH May 2012 to April 2014 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Experienced in Install setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Experienced hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Managing of internet security and acceleration throughout the network using Microsofts ISA server Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Writing Python scripts with CloudFormation templates to automate installation of Autoscaling EC2 VPC and other services Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party JQuery based plugins like JQueryUI Datatables etc Heavily used JavaScript for Form Submit and other UI elements during development Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAP UI for testing web service for server side changes Environment Python Django MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Flask PostgreSQL PyDev wxPython numPY matPlotLib PyQT Python Developer Home BancShares Dallas TX November 2010 to April 2012 Responsibilities Designed and developed presentation layer for web applications using HTML XML CSS JavaScript Worked on developing Web services and Amazon Web Services S3 and RDS to host files into Amazon cloud Involved in front end and utilized Bootstrap and Angularjs for page design Worked in Agile and waterfall methodologies with high quality deliverables delivered ontime Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Worked on continuous integration and automation using jerkins Developed required XML schema documents and developed the framework for parsing XML documents Extensive use of Linux SSH Flask and Django Used Django Database APIs to access database objects Used Python based GUI components for front end functionality Created test harness to enable comprehensive testing using Python Created Business logic using python to create planning and tracking functions Used PyQuery for selecting particular DOM elements when analyzing HTML Created Data tables using PyQt to display customer and policy information and add delete and update customer records Implemented AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Worked on creating UI screens for initiation and validation using HTM5 CSS3 and JavaScript Developed multithreaded standalone app in python and PHP to monitor performance Interfacing with system administrators supervisors and production to ensure customer deadlines are met Environment Python Django Shell Scripting AWS PyQuery PyQt Flash DOM JSON PHP HTML5 CSS3 JavaScript Angularjs Bootstrap Apache Web Server MySQL LINUX Python Developer WesBanco New York NY March 2009 to October 2010 Responsibilities Involved in preparing engineering specification with OOA and OOD Used UML Tools to develop Use Case diagrams Class diagrams Collaboration and Sequence Diagrams State Diagrams and Data Modeling Used latest advances in NLP data science and machine leaning to enhance our products and create new experiences Scale machine learning algorithm that powers our platform to support our growing customer base and increasing data volume Utilized machine learning algorithms such as Decision Tree linear regression multivariate regression Naive Bayes Random Forests Kmeans KNN Worked on different data formats such as JSON XML and performed machine learning algorithms in R Worked on MapReduceSpark Python modules for machine learning predictive analytics in Hadoop Used MLlib Sparks Machine learning library to build and evaluate different models Implemented public segmentation using unsupervised machine learning algorithms by implementing kmeans algorithm using Spark Identified and targeted welfare highrisk groups with Machine learning algorithms Keen attention to detail and willingness to get hands dirty in checking and cleaning data quality Exposure to python and python packages and on experience with Supervised or Unsupervised machine learning algorithms Developed application logic using Python Java script Java C Used JMS for updating Mailing plans and tracking them Used Java Server Pages for content layout and presentation Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Worked with the Database Schema design and normalization for database accessed by the procedural PHP pages Supported Java application for Media portal management Generated SWIG interfaces to coordinate between C Java and Python Used JNI for communication between C and Java Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Creating unit testregression test framework for workingnew code Debugging and testing of the applications finetuning performance Provided maintenance support in production environment Environment Java Python JavaScript HTMLCSS MySQL PLSQL JDBC Unix Shell Scripting TCPIP UDP SNMP Red Hat Linux Machine Learning Education Master of Science in Computer Science KANSAS STATE UNIVERSITY November 2016 to Present engineering specification State Diagrams and Data Modeling March 2009 to October 2010",
    "entities": [
        "CSS HTML JavaScript",
        "Nose Modifying",
        "NLP File Prep SettlementPrepare",
        "JavaScript jQuery Bootstrap RUBY",
        "AJAX",
        "Test Driven Development TDD",
        "GUI",
        "PyCharm PyScripter PyStudio",
        "Media",
        "UNIX",
        "Agile Software Methodology",
        "Oracle Crud PL",
        "Python Created Business",
        "Prepare Test",
        "CDR",
        "Interfacing",
        "Amazon Web Services S3",
        "Hadoop HDFS Hive Cassandra",
        "Panda",
        "Django PHP C XML",
        "Hadoop",
        "SOAP",
        "XML",
        "DHTML",
        "CherryPy",
        "Microsofts ISA",
        "Hadoop Used MLlib Sparks Machine",
        "Science in Computer Science KANSAS STATE UNIVERSITY",
        "Software Development Life Cycle SDLC",
        "Maintained",
        "Creating",
        "csv",
        "Shell",
        "SASAccess SAS SQL",
        "Docker Successfully",
        "LAMP",
        "TX",
        "DataLayer",
        "Amazon",
        "SSIS",
        "AJAX Created",
        "WebSphere",
        "Data ImportExport",
        "Generated",
        "Integrated Development Environments",
        "Amazon AWS S3",
        "Developed",
        "Bash",
        "GET PUT POST",
        "MATLAB",
        "Dallas",
        "Utilized",
        "Maven Itext",
        "Developed Business Logic",
        "Python Django Flask PostgreSQL",
        "New Jersey",
        "Fisheye",
        "API Integration Authorized",
        "HTML5",
        "Linux",
        "Created Data",
        "HTML CSS JavaScript JQuery Angular JS",
        "Flask",
        "GitHub Crucible",
        "DOM JSON PHP HTML5",
        "JIRA Created Python",
        "JQuery Utilized Python",
        "PyQT",
        "Linux SSH Flask",
        "DOM",
        "Nodejs Bootstrap Coherence Mongo DB",
        "Bootstrap JS",
        "RDS",
        "PyQt",
        "PyQtto",
        "MVC",
        "Interface",
        "Django Curl XML JSON",
        "Design and Development",
        "SDLC Software Development Life Cycle Software Testing Life CycleSTLC",
        "Bugzilla Junit",
        "API",
        "Executed Backend",
        "US",
        "HTML CSS JavaScript",
        "NGINX",
        "QA",
        "HTML XML",
        "Heroku Jenkins",
        "Spark Identified",
        "Kibana ELK Proficient",
        "Microsoft Excel Parsers",
        "Created",
        "HTML AJAX JavaScript",
        "AWS",
        "Sprints",
        "Oracle",
        "the Reactjs Flux for SPA development Installation and Configuration of Apache Tomcat",
        "Autoscaling EC2 VPC",
        "Oracle DB",
        "First Republic Bank",
        "Seattle",
        "WIFI",
        "SAS",
        "SQL",
        "Administrate Continuous Integration",
        "Grants Program Document Data",
        "Fiddler",
        "NLP",
        "lPythonspan",
        "Python Django",
        "Jenkins Ansible",
        "DELETE",
        "Oracle Crud PL SQL Python Developer FCB Financial Holdings",
        "Scale",
        "Wireshark",
        "State Diagrams",
        "Used Django Framework",
        "Pandas",
        "SQLite",
        "ETL",
        "CRUD",
        "JQuery Created",
        "cat5",
        "MultiThreading Exception Handling and Collections",
        "Build",
        "Performed",
        "Djangos",
        "Cisco",
        "UI",
        "Work Experience Sr Python Developer Glacier Bancorp",
        "Implemented Business logic data",
        "CSS",
        "the Global Shipping Team Created",
        "Data Modeling",
        "jQuery",
        "Templates using Django and Python Installedconfiguresmaintained Apache",
        "REST",
        "Developed UI",
        "PHP",
        "Tableau",
        "BASH",
        "PythonFlask",
        "Informatica Successfully",
        "HTML Created Data",
        "KAFKA",
        "SPRINT",
        "CloudFormation",
        "DevTest",
        "JSON XML"
    ],
    "experience": "Experience in various stage of SDLC Software Development Life Cycle Software Testing Life CycleSTLC and QA methodologies from project definition to postdeployment documentation Strong experience of software development in python libraries used Beautiful Soup numpy scipy matplotlib Pandas data frame urllib MySQL DB for database connectivity Experienced in working on Application Servers like WebSphere Weblogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like Pycharm Eclipse and RAD Applied OOP concepts like MultiThreading Exception Handling and Collections and created a ModelViewControl architecture using Django for web applications Used HTML CSS Bootstrap JavaScript and jQuery to develop a web based UI design and Interface development Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle and MongoDB and Knowledgeable with continuous deployment using Heroku Jenkins and Ansible Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache spark Hadoop HDFS Hive Cassandra MongoDB Experience in developing webbased applications using python Django PHP C XML CSS HTML DHTML JavaScript jQuery Bootstrap RUBY and AJAX Created applications using Python under Linux OS Debian Ubuntu SUSE Linux RedHAt Linux environment Expertise in working with GUI frameworksPyJamas Jytho guidata   PyQt WebkitGtk Elasticsearch Logstash and Kibana ELK Proficient using Python packages such as NumPy SciPy Requests matPlotLib Pickle Pandas PySide wxPython QT PyGTK PyTables and Scikitlearn Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Written Python Scripts mappers to run on Hadoop distributed file system HDFS Developmental experience on various embedded products modem WIFI rputers last meter telecommunication products networkenabled settop box media player products and embedded system for automative application Experience in design development and testing of embedded firmwaresoftware development for real time multithreadingmultitasking embedded applications Experience in Agile Methodologies Scrum stories and Sprints experience in a python based environment along with analytics data wrangling and Excel data extracts Experience in C and C languages Written C and C applications and also migrated many legacy applications to pythonGood knowledge in testing tools like Bugzilla Junit and JIRA Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Authorized to work in the US for any employer Work Experience Sr Python Developer Glacier Bancorp New Jersey November 2016 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Used Django Framework in developing web applications to implement the model view control MVC architecture Developed analytical component using Scala and KAFKA Designed Forms Modules Views and Templates using Django and Python Installedconfiguresmaintained Apache servers on all machines production server and developmental servers Created script in python for calling REST APIs REST API development via Django REST Framework Implemented Business logic data exchange XML processing and graphics creation using Pythonand Django Implemented RESTful Webservices for sending and receiving the data between multiple systems Implemented Business logic data exchange XML processing and graphics creation using Pythonand Django Rewrite existing PythonFlask module to deliver certain format of data Created authorization scheme which enforced limitations on API clients Overwritten Django Rest Framework internals to allow for more dynamic routing Developed an application in Linux environment and dealt with all its commands Worked with SCRUM Agile methodology to ensure delivery of high quality work with monthly iterationtime box Installedconfiguredmaintained Apache servers on all machines production server and development servers Administrate Continuous Integration services Jenkins Nexus Artifactory and Repository Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Installedconfiguredmaintained MySQL database and MongoDB database Executed Backend and Database Tests using SQL queries validating the data for database editing and debugging is conducted using selenium Created a database using MySQL and wrote various queries for the extraction of data from the database Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JS JavaScript JQuery JSON and AJAX Used NoSQL database Apache Cassandra to load the data in database Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Developed Business Logic using Python on Django Web Framework DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Using jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Resolve tune maintain manage clients Jboss weblogic WAS ATG instances on cluster connectivity producing optimal performance results in each environment throughout the life cycle Prepare Test scripts for different applications using QTP Selenium Worked with RDBMS like Oracle and MySQL databases to query and read data Utilized standard Python modules such as csv robot parser itertools and pickle for development Developed user interface by using the Reactjs Flux for SPA development Installation and Configuration of Apache Tomcat Eclipse WSAD and AXIS Transfer Object for Lookups Value List Handler for search and DAO Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and linux server Designed and led big data algorithms using Hadoop and Java to improve forecasting and used HiveQL to generate reports Environment Python Django HTML CSS JavaScript jQuery PHP MySQL JSON UNIX XML AJAX KAFKA Bootstrap Django Flask MySQL PostgreSQL PyCharm PyDev wxPython numPY matPlotLib PyQT REST Eclipse Apache Tomcat WSAD SOAP Web Logic Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs Javascript JSP JSTL Servlet Oracle Crud PL SQL JDBC UML Junit Maven Itext GWT Google Web Toolkit Clear Case Jasper Report ILog Agile Web 20 SOA Sr Python Developer CVB Financial New Jersey May 2015 to October 2016 Responsibilities Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for Loading via Elasticache DOLETAnoSQL Grants Program Document Data to AWSDynamoDB for AWSEMR Grant Fulfillment Analysis Write scripts using python modules and its libraries to develop programs that improve processing of access requests Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Utilized Python in the handling of all hits on Django Redis and other applications Used OOP concepts in overall design and development of system applications Involved in all phases of Software Development Life Cycle SDLC and Worked on all activities related to the development implementation and support for Hadoop Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Build all database mapping classes using Django models Managed datasets using Panda data frames and MySQL queries MYSQL database queries from Python using PythonMySQL connector MySQLdb package to retrieve information Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Developed UI using HTML AJAX JavaScript and jQuery and jQueryUI Used MySQL as backend database and Mysqldb of python as database connector to interact with MySQL server Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous Integration to keep in line with Agile Software Methodology principles Integrated data from multiple applications using ETL tools like SSIS Informatica Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Created scripts for system administration and AWS using languages such as BASH and Python Wrote django admin pages and developed REST API get post delete put functionalities for the application Developed Python daemon processes that filter price and load CDR data to Oracle DB This script utilized multithreading sockets and grid queues Developed SOAP web service to provide serverside info on user attributes channel descriptions and other ondemand live show information Designed and developed a horizontally scalable APIs using Python Flask Fixed existing user interface bugs with CSS and JavaScript functionalities Used GitHub Crucible and Fisheye to maintain and utilize the repository Used Postgresql with python database API for database manipulation Used react google charts to show data in column charts combo chart bar charts Maintained and tracked bugs and Scrum stories in JIRA Environment scipy Pandas Bugzilla SVN C Java jQuery MySQL Linux Eclipse Shell Scripting HTML5CSS agile Python Django Flask PostgreSQL PyCharm PyDev wxPython numPY matPlotLib PyQT Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs Javascript JSP JSTL Servlet Oracle Crud PL SQL JDBC Python Developer First Republic Bank Seattle WA May 2014 to April 2015 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib and urllib for web crawling Used other packages such as Beautifulsoup for data parsing Worked on writing and as well as read data from csv and excel file formats Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Worked on resulting reports of the application and Tableau reports Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of Mongodb with shards and replicasets DevTest and Production Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo Fabric Git Tenjin Selenium Sphinx and Nose Modifying data using SASBASE SAS MACROS Extracting data from the database using SASAccess SAS SQL procedures and create SAS data sets Performed QA testing on the application Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Implemented the presentation layer with HTML CSS JavaScript JQuery Angular JS and AJAX Environment Python Django HTML JavaScript JQuery CSS AJAX Angular JS MySQL PostgreSQL Linux Flask PyCharm PyDev wxPython numPY matPlotLib PyQT Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs JSP JSTL Servlet Oracle Crud PL SQL Python Developer FCB Financial Holdings Columbus OH May 2012 to April 2014 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Experienced in Install setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Experienced hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Managing of internet security and acceleration throughout the network using Microsofts ISA server Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Writing Python scripts with CloudFormation templates to automate installation of Autoscaling EC2 VPC and other services Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party JQuery based plugins like JQueryUI Datatables etc Heavily used JavaScript for Form Submit and other UI elements during development Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAP UI for testing web service for server side changes Environment Python Django MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Flask PostgreSQL PyDev wxPython numPY matPlotLib PyQT Python Developer Home BancShares Dallas TX November 2010 to April 2012 Responsibilities Designed and developed presentation layer for web applications using HTML XML CSS JavaScript Worked on developing Web services and Amazon Web Services S3 and RDS to host files into Amazon cloud Involved in front end and utilized Bootstrap and Angularjs for page design Worked in Agile and waterfall methodologies with high quality deliverables delivered ontime Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Worked on continuous integration and automation using jerkins Developed required XML schema documents and developed the framework for parsing XML documents Extensive use of Linux SSH Flask and Django Used Django Database APIs to access database objects Used Python based GUI components for front end functionality Created test harness to enable comprehensive testing using Python Created Business logic using python to create planning and tracking functions Used PyQuery for selecting particular DOM elements when analyzing HTML Created Data tables using PyQt to display customer and policy information and add delete and update customer records Implemented AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Worked on creating UI screens for initiation and validation using HTM5 CSS3 and JavaScript Developed multithreaded standalone app in python and PHP to monitor performance Interfacing with system administrators supervisors and production to ensure customer deadlines are met Environment Python Django Shell Scripting AWS PyQuery PyQt Flash DOM JSON PHP HTML5 CSS3 JavaScript Angularjs Bootstrap Apache Web Server MySQL LINUX Python Developer WesBanco New York NY March 2009 to October 2010 Responsibilities Involved in preparing engineering specification with OOA and OOD Used UML Tools to develop Use Case diagrams Class diagrams Collaboration and Sequence Diagrams State Diagrams and Data Modeling Used latest advances in NLP data science and machine leaning to enhance our products and create new experiences Scale machine learning algorithm that powers our platform to support our growing customer base and increasing data volume Utilized machine learning algorithms such as Decision Tree linear regression multivariate regression Naive Bayes Random Forests Kmeans KNN Worked on different data formats such as JSON XML and performed machine learning algorithms in R Worked on MapReduceSpark Python modules for machine learning predictive analytics in Hadoop Used MLlib Sparks Machine learning library to build and evaluate different models Implemented public segmentation using unsupervised machine learning algorithms by implementing kmeans algorithm using Spark Identified and targeted welfare highrisk groups with Machine learning algorithms Keen attention to detail and willingness to get hands dirty in checking and cleaning data quality Exposure to python and python packages and on experience with Supervised or Unsupervised machine learning algorithms Developed application logic using Python Java script Java C Used JMS for updating Mailing plans and tracking them Used Java Server Pages for content layout and presentation Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Worked with the Database Schema design and normalization for database accessed by the procedural PHP pages Supported Java application for Media portal management Generated SWIG interfaces to coordinate between C Java and Python Used JNI for communication between C and Java Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Creating unit testregression test framework for workingnew code Debugging and testing of the applications finetuning performance Provided maintenance support in production environment Environment Java Python JavaScript HTMLCSS MySQL PLSQL JDBC Unix Shell Scripting TCPIP UDP SNMP Red Hat Linux Machine Learning Education Master of Science in Computer Science KANSAS STATE UNIVERSITY November 2016 to Present engineering specification State Diagrams and Data Modeling March 2009 to October 2010",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Bloomfield",
        "NJ",
        "years",
        "experience",
        "IT",
        "industry",
        "proficiency",
        "Design",
        "Development",
        "Python",
        "Django",
        "JavaJ2EE",
        "Flask",
        "Experience",
        "stage",
        "SDLC",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Software",
        "Testing",
        "Life",
        "QA",
        "methodologies",
        "project",
        "definition",
        "postdeployment",
        "documentation",
        "experience",
        "software",
        "development",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "numpy",
        "matplotlib",
        "Pandas",
        "data",
        "frame",
        "urllib",
        "MySQL",
        "DB",
        "database",
        "connectivity",
        "Application",
        "Servers",
        "WebSphere",
        "Weblogic",
        "Tomcat",
        "Web",
        "Servers",
        "Apache",
        "server",
        "NGINX",
        "Integrated",
        "Development",
        "Environments",
        "Pycharm",
        "Eclipse",
        "RAD",
        "OOP",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "ModelViewControl",
        "architecture",
        "Django",
        "web",
        "applications",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "web",
        "UI",
        "design",
        "Interface",
        "development",
        "web",
        "application",
        "Python",
        "Django",
        "J2EE",
        "PostgreSQL",
        "MySQL",
        "Oracle",
        "MongoDB",
        "Knowledgeable",
        "deployment",
        "Heroku",
        "Jenkins",
        "Ansible",
        "Worked",
        "JIRA",
        "bug",
        "tracking",
        "communicating",
        "results",
        "Strong",
        "Experience",
        "data",
        "technologies",
        "Apache",
        "spark",
        "Hadoop",
        "HDFS",
        "Hive",
        "Cassandra",
        "MongoDB",
        "Experience",
        "applications",
        "python",
        "Django",
        "PHP",
        "C",
        "XML",
        "CSS",
        "HTML",
        "DHTML",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "RUBY",
        "AJAX",
        "applications",
        "Python",
        "Linux",
        "OS",
        "Debian",
        "Ubuntu",
        "Linux",
        "RedHAt",
        "Linux",
        "environment",
        "Expertise",
        "GUI",
        "frameworksPyJamas",
        "Jytho",
        "PyQt",
        "WebkitGtk",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "Proficient",
        "Python",
        "packages",
        "NumPy",
        "SciPy",
        "Requests",
        "matPlotLib",
        "Pickle",
        "Pandas",
        "PySide",
        "wxPython",
        "QT",
        "PyGTK",
        "PyTables",
        "Scikitlearn",
        "Sound",
        "experience",
        "editors",
        "PyCharm",
        "PyScripter",
        "PyStudio",
        "PyDev",
        "Wing",
        "IDE",
        "Spyder",
        "Written",
        "Python",
        "Scripts",
        "mappers",
        "Hadoop",
        "file",
        "system",
        "HDFS",
        "experience",
        "products",
        "modem",
        "WIFI",
        "rputers",
        "meter",
        "telecommunication",
        "products",
        "settop",
        "box",
        "media",
        "player",
        "products",
        "system",
        "automative",
        "application",
        "Experience",
        "design",
        "development",
        "testing",
        "development",
        "time",
        "multithreadingmultitasking",
        "applications",
        "Experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "Sprints",
        "experience",
        "python",
        "environment",
        "analytics",
        "data",
        "Excel",
        "data",
        "Experience",
        "C",
        "C",
        "languages",
        "Written",
        "C",
        "C",
        "applications",
        "legacy",
        "applications",
        "knowledge",
        "testing",
        "tools",
        "Bugzilla",
        "Junit",
        "JIRA",
        "Created",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Glacier",
        "Bancorp",
        "New",
        "Jersey",
        "November",
        "Present",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "component",
        "Scala",
        "KAFKA",
        "Forms",
        "Modules",
        "Views",
        "Templates",
        "Django",
        "Python",
        "Apache",
        "servers",
        "machines",
        "production",
        "server",
        "servers",
        "script",
        "python",
        "REST",
        "APIs",
        "REST",
        "API",
        "development",
        "Django",
        "REST",
        "Framework",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Pythonand",
        "Django",
        "RESTful",
        "Webservices",
        "data",
        "systems",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Pythonand",
        "Django",
        "Rewrite",
        "PythonFlask",
        "module",
        "format",
        "data",
        "authorization",
        "scheme",
        "limitations",
        "API",
        "clients",
        "Overwritten",
        "Django",
        "Rest",
        "Framework",
        "internals",
        "routing",
        "application",
        "Linux",
        "environment",
        "commands",
        "SCRUM",
        "methodology",
        "delivery",
        "quality",
        "work",
        "iterationtime",
        "box",
        "Installedconfiguredmaintained",
        "Apache",
        "servers",
        "machines",
        "production",
        "server",
        "development",
        "servers",
        "Administrate",
        "Continuous",
        "Integration",
        "services",
        "Jenkins",
        "Nexus",
        "Artifactory",
        "Repository",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "MySQL",
        "database",
        "MongoDB",
        "database",
        "Executed",
        "Backend",
        "Database",
        "Tests",
        "SQL",
        "queries",
        "data",
        "database",
        "editing",
        "debugging",
        "selenium",
        "database",
        "MySQL",
        "queries",
        "extraction",
        "data",
        "database",
        "UI",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JS",
        "JavaScript",
        "JQuery",
        "JSON",
        "AJAX",
        "NoSQL",
        "database",
        "Apache",
        "Cassandra",
        "data",
        "database",
        "C",
        "SOAP",
        "web",
        "service",
        "application",
        "XML",
        "Requests",
        "scheduler",
        "option",
        "things",
        "times",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Resolve",
        "tune",
        "manage",
        "clients",
        "Jboss",
        "weblogic",
        "ATG",
        "instances",
        "cluster",
        "connectivity",
        "performance",
        "results",
        "environment",
        "life",
        "cycle",
        "Prepare",
        "Test",
        "scripts",
        "applications",
        "QTP",
        "Selenium",
        "RDBMS",
        "Oracle",
        "MySQL",
        "data",
        "Python",
        "modules",
        "csv",
        "robot",
        "parser",
        "itertools",
        "pickle",
        "development",
        "user",
        "interface",
        "Reactjs",
        "Flux",
        "SPA",
        "development",
        "Installation",
        "Configuration",
        "Apache",
        "Tomcat",
        "Eclipse",
        "WSAD",
        "Transfer",
        "Object",
        "Lookups",
        "Value",
        "List",
        "Handler",
        "search",
        "DAO",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "ports",
        "source",
        "events",
        "python",
        "scripts",
        "linux",
        "server",
        "data",
        "algorithms",
        "Hadoop",
        "Java",
        "forecasting",
        "HiveQL",
        "reports",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "PHP",
        "MySQL",
        "JSON",
        "UNIX",
        "XML",
        "AJAX",
        "KAFKA",
        "Bootstrap",
        "Django",
        "Flask",
        "MySQL",
        "PostgreSQL",
        "PyCharm",
        "PyDev",
        "wxPython",
        "numPY",
        "matPlotLib",
        "PyQT",
        "REST",
        "Eclipse",
        "Apache",
        "Tomcat",
        "WSAD",
        "SOAP",
        "Web",
        "Logic",
        "Apache",
        "CXF",
        "Rest",
        "Angularjs",
        "Backbonejs",
        "Nodejs",
        "Bootstrap",
        "Coherence",
        "Mongo",
        "DB",
        "HTML",
        "CSS",
        "Sencha",
        "Extjs",
        "Javascript",
        "JSP",
        "JSTL",
        "Servlet",
        "Oracle",
        "Crud",
        "PL",
        "SQL",
        "JDBC",
        "UML",
        "Junit",
        "Maven",
        "Itext",
        "GWT",
        "Google",
        "Web",
        "Toolkit",
        "Clear",
        "Case",
        "Jasper",
        "Report",
        "ILog",
        "Agile",
        "Web",
        "SOA",
        "Sr",
        "Python",
        "Developer",
        "CVB",
        "Financial",
        "New",
        "Jersey",
        "May",
        "October",
        "Responsibilities",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Loading",
        "Elasticache",
        "DOLETAnoSQL",
        "Grants",
        "Program",
        "Document",
        "Data",
        "AWSDynamoDB",
        "AWSEMR",
        "Grant",
        "Fulfillment",
        "Analysis",
        "Write",
        "scripts",
        "modules",
        "libraries",
        "programs",
        "processing",
        "access",
        "requests",
        "AGILE",
        "SCRUM",
        "practices",
        "planning",
        "sprint",
        "SCRUM",
        "meetings",
        "meetings",
        "quality",
        "deliverables",
        "time",
        "Python",
        "handling",
        "hits",
        "Django",
        "Redis",
        "applications",
        "OOP",
        "concepts",
        "design",
        "development",
        "system",
        "applications",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "activities",
        "development",
        "implementation",
        "support",
        "Hadoop",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Ajax",
        "JQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "WEB",
        "APIs",
        "calls",
        "web",
        "services",
        "URLs",
        "GET",
        "PUT",
        "POST",
        "DELETE",
        "operations",
        "server",
        "Build",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQLdb",
        "package",
        "information",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "Developed",
        "UI",
        "HTML",
        "AJAX",
        "JavaScript",
        "jQuery",
        "jQueryUI",
        "MySQL",
        "database",
        "Mysqldb",
        "python",
        "database",
        "connector",
        "MySQL",
        "server",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "data",
        "applications",
        "ETL",
        "tools",
        "SSIS",
        "Informatica",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "scripts",
        "system",
        "administration",
        "AWS",
        "languages",
        "BASH",
        "Python",
        "Wrote",
        "django",
        "pages",
        "REST",
        "API",
        "post",
        "functionalities",
        "application",
        "Python",
        "daemon",
        "processes",
        "filter",
        "price",
        "CDR",
        "data",
        "Oracle",
        "DB",
        "script",
        "sockets",
        "grid",
        "queues",
        "SOAP",
        "web",
        "service",
        "serverside",
        "info",
        "user",
        "channel",
        "descriptions",
        "ondemand",
        "show",
        "information",
        "APIs",
        "Python",
        "Flask",
        "user",
        "interface",
        "bugs",
        "CSS",
        "JavaScript",
        "functionalities",
        "GitHub",
        "Crucible",
        "Fisheye",
        "repository",
        "Postgresql",
        "python",
        "database",
        "API",
        "database",
        "manipulation",
        "react",
        "google",
        "charts",
        "data",
        "column",
        "charts",
        "combo",
        "chart",
        "bar",
        "charts",
        "bugs",
        "Scrum",
        "stories",
        "JIRA",
        "Environment",
        "Pandas",
        "Bugzilla",
        "SVN",
        "C",
        "Java",
        "jQuery",
        "MySQL",
        "Linux",
        "Eclipse",
        "Shell",
        "Scripting",
        "HTML5CSS",
        "Python",
        "Django",
        "Flask",
        "PostgreSQL",
        "PyCharm",
        "PyDev",
        "wxPython",
        "numPY",
        "matPlotLib",
        "PyQT",
        "Apache",
        "CXF",
        "Rest",
        "Angularjs",
        "Backbonejs",
        "Nodejs",
        "Bootstrap",
        "Coherence",
        "Mongo",
        "DB",
        "HTML",
        "CSS",
        "Sencha",
        "Extjs",
        "Javascript",
        "JSP",
        "JSTL",
        "Servlet",
        "Oracle",
        "Crud",
        "PL",
        "SQL",
        "JDBC",
        "Python",
        "Developer",
        "First",
        "Republic",
        "Bank",
        "Seattle",
        "WA",
        "May",
        "April",
        "Responsibilities",
        "Wrote",
        "Python",
        "websites",
        "data",
        "options",
        "Python",
        "modules",
        "requests",
        "web",
        "packages",
        "Beautifulsoup",
        "data",
        "writing",
        "data",
        "csv",
        "file",
        "formats",
        "MATLAB",
        "algorithm",
        "objects",
        "dimensions",
        "images",
        "Webservices",
        "development",
        "Python",
        "CherryPy",
        "Django",
        "SQLAlchemy",
        "companys",
        "framework",
        "Python",
        "framework",
        "basement",
        "services",
        "development",
        "Framework",
        "CherryPy",
        "GnuPg",
        "encryption",
        "reGnuPg",
        "module",
        "top",
        "reports",
        "application",
        "Tableau",
        "HTML5",
        "CSS3",
        "JavaScript",
        "NodeJS",
        "Git",
        "REST",
        "API",
        "Mongo",
        "DB",
        "intelliJ",
        "IDEA",
        "Design",
        "environment",
        "Mongodb",
        "shards",
        "DevTest",
        "Production",
        "VPN",
        "Ubuntu",
        "Python",
        "Django",
        "CherryPy",
        "Postgres",
        "Redis",
        "Bootstrap",
        "Jquery",
        "Mongo",
        "Fabric",
        "Git",
        "Tenjin",
        "Selenium",
        "Sphinx",
        "Nose",
        "Modifying",
        "data",
        "SASBASE",
        "SAS",
        "MACROS",
        "data",
        "database",
        "SASAccess",
        "SAS",
        "SQL",
        "procedures",
        "SAS",
        "data",
        "Performed",
        "QA",
        "testing",
        "application",
        "approaches",
        "NLP",
        "pipeline",
        "custom",
        "VB",
        "scripts",
        "applications",
        "NLP",
        "File",
        "Prep",
        "SettlementPrepare",
        "review",
        "Settlement",
        "meetings",
        "client",
        "project",
        "help",
        "client",
        "SDLC",
        "process",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Python",
        "GUI",
        "application",
        "Freight",
        "Tracking",
        "processing",
        "Django",
        "framework",
        "application",
        "development",
        "web",
        "tools",
        "effort",
        "efficiency",
        "Global",
        "Shipping",
        "Team",
        "database",
        "MySQL",
        "queries",
        "data",
        "database",
        "Setup",
        "cron",
        "jobs",
        "data",
        "database",
        "graphs",
        "bar",
        "charts",
        "charts",
        "wiki",
        "database",
        "scripts",
        "Python",
        "data",
        "HTML",
        "file",
        "vendors",
        "queries",
        "Perforce",
        "version",
        "control",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "backend",
        "application",
        "Active",
        "Records",
        "presentation",
        "layer",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Angular",
        "JS",
        "AJAX",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "JavaScript",
        "JQuery",
        "CSS",
        "AJAX",
        "Angular",
        "JS",
        "MySQL",
        "PostgreSQL",
        "Linux",
        "Flask",
        "PyCharm",
        "PyDev",
        "wxPython",
        "numPY",
        "matPlotLib",
        "PyQT",
        "Nodejs",
        "Bootstrap",
        "Coherence",
        "Mongo",
        "DB",
        "HTML",
        "CSS",
        "Sencha",
        "Extjs",
        "JSP",
        "JSTL",
        "Servlet",
        "Oracle",
        "Crud",
        "PL",
        "SQL",
        "Python",
        "Developer",
        "FCB",
        "Financial",
        "Holdings",
        "Columbus",
        "OH",
        "April",
        "Responsibilities",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Refactor",
        "PythonDjango",
        "format",
        "data",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "package",
        "information",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Python",
        "wxPython",
        "numPY",
        "Twisted",
        "matPlotLib",
        "Wrote",
        "Python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Used",
        "Wireshark",
        "http",
        "headers",
        "Fiddler",
        "proxy",
        "Flash",
        "object",
        "developer",
        "component",
        "PHP",
        "page",
        "data",
        "AJAX",
        "data",
        "page",
        "data",
        "csv",
        "Microsoft",
        "Excel",
        "Parsers",
        "Python",
        "data",
        "design",
        "data",
        "base",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Install",
        "setup",
        "Cisco",
        "TCPIP",
        "intranetwork",
        "access",
        "point",
        "network",
        "area",
        "network",
        "WiFi",
        "hardware",
        "installation",
        "patch",
        "panels",
        "fiber",
        "optic",
        "connectivity",
        "hubs",
        "cat5",
        "RJ45",
        "connectors",
        "internet",
        "security",
        "acceleration",
        "network",
        "Microsofts",
        "ISA",
        "server",
        "phpunit",
        "test",
        "cases",
        "DataLayer",
        "Searchserver",
        "classes",
        "Django",
        "Curl",
        "XML",
        "REST",
        "base",
        "services",
        "MongoDB",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "Jersey",
        "MySQL",
        "MongoDB",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "reports",
        "package",
        "Numpy",
        "matPlotLib",
        "Usage",
        "advance",
        "features",
        "pickleunpickle",
        "python",
        "information",
        "applications",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "Data",
        "tables",
        "PyQtto",
        "display",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "selection",
        "criteria",
        "Administration",
        "RHEL",
        "machine",
        "Apache",
        "configuration",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Python",
        "scripts",
        "CloudFormation",
        "installation",
        "Autoscaling",
        "EC2",
        "VPC",
        "services",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "party",
        "JQuery",
        "plugins",
        "JQueryUI",
        "Datatables",
        "JavaScript",
        "Form",
        "Submit",
        "UI",
        "elements",
        "development",
        "Utilize",
        "knowledge",
        "experience",
        "LAMP",
        "leadingedge",
        "products",
        "technology",
        "conjunction",
        "industry",
        "business",
        "skills",
        "solutions",
        "customer",
        "Representation",
        "system",
        "hierarchy",
        "form",
        "components",
        "subcomponents",
        "Python",
        "set",
        "library",
        "functions",
        "system",
        "user",
        "REST",
        "UI",
        "testing",
        "web",
        "service",
        "server",
        "side",
        "changes",
        "Environment",
        "Python",
        "Django",
        "MongoDB",
        "MySQL",
        "AJAX",
        "SOAP",
        "REST",
        "JQuery",
        "JavaScript",
        "Bootstrap",
        "PyCharm",
        "EC2",
        "S3",
        "RDS",
        "Flask",
        "PostgreSQL",
        "PyDev",
        "wxPython",
        "numPY",
        "matPlotLib",
        "PyQT",
        "Python",
        "Developer",
        "Home",
        "BancShares",
        "Dallas",
        "TX",
        "November",
        "April",
        "Responsibilities",
        "presentation",
        "layer",
        "web",
        "applications",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "S3",
        "RDS",
        "files",
        "Amazon",
        "cloud",
        "end",
        "Bootstrap",
        "Angularjs",
        "page",
        "design",
        "Agile",
        "methodologies",
        "quality",
        "deliverables",
        "documentation",
        "solutions",
        "IT",
        "infrastructure",
        "sales",
        "systems",
        "integration",
        "automation",
        "jerkins",
        "Developed",
        "XML",
        "schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "use",
        "Linux",
        "SSH",
        "Flask",
        "Django",
        "Django",
        "Database",
        "APIs",
        "database",
        "Python",
        "GUI",
        "components",
        "end",
        "functionality",
        "test",
        "harness",
        "testing",
        "Python",
        "Created",
        "Business",
        "logic",
        "python",
        "planning",
        "tracking",
        "functions",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "customer",
        "records",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "HTTP",
        "strings",
        "UI",
        "screens",
        "initiation",
        "validation",
        "HTM5",
        "CSS3",
        "JavaScript",
        "Developed",
        "app",
        "python",
        "PHP",
        "performance",
        "system",
        "administrators",
        "supervisors",
        "production",
        "customer",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "Shell",
        "Scripting",
        "AWS",
        "PyQuery",
        "PyQt",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Angularjs",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MySQL",
        "LINUX",
        "Python",
        "Developer",
        "WesBanco",
        "New",
        "York",
        "NY",
        "March",
        "October",
        "Responsibilities",
        "engineering",
        "specification",
        "OOA",
        "OOD",
        "UML",
        "Tools",
        "Use",
        "Case",
        "diagrams",
        "Class",
        "diagrams",
        "Collaboration",
        "Sequence",
        "Diagrams",
        "State",
        "Diagrams",
        "Data",
        "Modeling",
        "advances",
        "NLP",
        "data",
        "science",
        "machine",
        "products",
        "experiences",
        "Scale",
        "machine",
        "learning",
        "algorithm",
        "platform",
        "customer",
        "base",
        "data",
        "volume",
        "machine",
        "learning",
        "algorithms",
        "Decision",
        "Tree",
        "linear",
        "regression",
        "multivariate",
        "regression",
        "Naive",
        "Bayes",
        "Random",
        "Forests",
        "Kmeans",
        "KNN",
        "data",
        "formats",
        "JSON",
        "XML",
        "machine",
        "algorithms",
        "R",
        "MapReduceSpark",
        "Python",
        "modules",
        "machine",
        "analytics",
        "Hadoop",
        "MLlib",
        "Sparks",
        "Machine",
        "library",
        "models",
        "segmentation",
        "machine",
        "algorithms",
        "kmeans",
        "algorithm",
        "Spark",
        "welfare",
        "highrisk",
        "groups",
        "Machine",
        "learning",
        "attention",
        "detail",
        "willingness",
        "hands",
        "data",
        "quality",
        "Exposure",
        "packages",
        "experience",
        "machine",
        "learning",
        "application",
        "logic",
        "Python",
        "Java",
        "script",
        "Java",
        "C",
        "JMS",
        "Mailing",
        "plans",
        "Java",
        "Server",
        "Pages",
        "content",
        "layout",
        "presentation",
        "Created",
        "Data",
        "layer",
        "MYSQL",
        "data",
        "Python",
        "scripts",
        "PLSQL",
        "packages",
        "Database",
        "Schema",
        "design",
        "normalization",
        "database",
        "PHP",
        "pages",
        "Java",
        "application",
        "Media",
        "management",
        "SWIG",
        "interfaces",
        "C",
        "Java",
        "Python",
        "JNI",
        "communication",
        "C",
        "Java",
        "Wrote",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "python",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Debugging",
        "testing",
        "applications",
        "performance",
        "maintenance",
        "support",
        "production",
        "environment",
        "Environment",
        "Java",
        "Python",
        "JavaScript",
        "HTMLCSS",
        "MySQL",
        "PLSQL",
        "JDBC",
        "Unix",
        "Shell",
        "Scripting",
        "UDP",
        "SNMP",
        "Red",
        "Hat",
        "Linux",
        "Machine",
        "Learning",
        "Education",
        "Master",
        "Science",
        "Computer",
        "Science",
        "KANSAS",
        "STATE",
        "UNIVERSITY",
        "November",
        "Present",
        "engineering",
        "specification",
        "State",
        "Diagrams",
        "Data",
        "Modeling",
        "March",
        "October"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:26:30.597980",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Bloomfield NJ Around 8 years experience in IT industry with proficiency in Design and Development using Python Django JavaJ2EE and Flask projects Experience in various stage of SDLC Software Development Life Cycle Software Testing Life CycleSTLC and QA methodologies from project definition to postdeployment documentation Strong experience of software development in python libraries used Beautiful Soup numpy scipy matplotlib Pandas data frame urllib MySQL DB for database connectivity Experienced in working on Application Servers like WebSphere Weblogic Tomcat Web Servers like Apache server NGINX and Integrated Development Environments like Pycharm Eclipse and RAD Applied OOP concepts like MultiThreading Exception Handling and Collections and created a ModelViewControl architecture using Django for web applications Used HTML CSS Bootstrap JavaScript and jQuery to develop a web based UI design and Interface development Built the web application by using Python Django AWS J2EE PostgreSQL MySQL Oracle and MongoDB and Knowledgeable with continuous deployment using Heroku Jenkins and Ansible Worked on JIRA for bug tracking and communicating for better results Strong Experience in Big data technologies including Apache spark Hadoop HDFS Hive Cassandra MongoDB Experience in developing webbased applications using python Django PHP C XML CSS HTML DHTML JavaScript jQuery Bootstrap RUBY and AJAX Created applications using Python under Linux OS Debian Ubuntu SUSE Linux RedHAt Linux environment Expertise in working with GUI frameworksPyJamas Jytho guidata PyGUI PyQt WebkitGtk Elasticsearch Logstash and Kibana ELK Proficient using Python packages such as NumPy SciPy Requests matPlotLib Pickle Pandas PySide wxPython QT PyGTK PyTables and Scikitlearn Sound experience in working with python editors like PyCharm PyScripter PyStudio PyDev Wing IDE and Spyder Written Python Scripts mappers to run on Hadoop distributed file system HDFS Developmental experience on various embedded products modem WIFI rputers last meter telecommunication products networkenabled settop box media player products and embedded system for automative application Experience in design development and testing of embedded firmwaresoftware development for real time multithreadingmultitasking embedded applications Experience in Agile Methodologies Scrum stories and Sprints experience in a python based environment along with analytics data wrangling and Excel data extracts Experience in C and C languages Written C and C applications and also migrated many legacy applications to pythonGood knowledge in testing tools like Bugzilla Junit and JIRA Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts REST JSON and CRUD scripts for API Integration Authorized to work in the US for any employer Work Experience Sr Python Developer Glacier Bancorp New Jersey November 2016 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Used Django Framework in developing web applications to implement the model view control MVC architecture Developed analytical component using Scala and KAFKA Designed Forms Modules Views and Templates using Django and Python Installedconfiguresmaintained Apache servers on all machines production server and developmental servers Created script in python for calling REST APIs REST API development via Django REST Framework Implemented Business logic data exchange XML processing and graphics creation using Pythonand Django Implemented RESTful Webservices for sending and receiving the data between multiple systems Implemented Business logic data exchange XML processing and graphics creation using Pythonand Django Rewrite existing PythonFlask module to deliver certain format of data Created authorization scheme which enforced limitations on API clients Overwritten Django Rest Framework internals to allow for more dynamic routing Developed an application in Linux environment and dealt with all its commands Worked with SCRUM Agile methodology to ensure delivery of high quality work with monthly iterationtime box Installedconfiguredmaintained Apache servers on all machines production server and development servers Administrate Continuous Integration services Jenkins Nexus Artifactory and Repository Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Installedconfiguredmaintained MySQL database and MongoDB database Executed Backend and Database Tests using SQL queries validating the data for database editing and debugging is conducted using selenium Created a database using MySQL and wrote various queries for the extraction of data from the database Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JS JavaScript JQuery JSON and AJAX Used NoSQL database Apache Cassandra to load the data in database Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Developed Business Logic using Python on Django Web Framework DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Using jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Resolve tune maintain manage clients Jboss weblogic WAS ATG instances on cluster connectivity producing optimal performance results in each environment throughout the life cycle Prepare Test scripts for different applications using QTP Selenium Worked with RDBMS like Oracle and MySQL databases to query and read data Utilized standard Python modules such as csv robot parser itertools and pickle for development Developed user interface by using the Reactjs Flux for SPA development Installation and Configuration of Apache Tomcat Eclipse WSAD and AXIS Transfer Object for Lookups Value List Handler for search and DAO Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and linux server Designed and led big data algorithms using Hadoop and Java to improve forecasting and used HiveQL to generate reports Environment Python Django HTML CSS JavaScript jQuery PHP MySQL JSON UNIX XML AJAX KAFKA Bootstrap Django Flask MySQL PostgreSQL PyCharm PyDev wxPython numPY matPlotLib PyQT REST Eclipse Apache Tomcat WSAD SOAP Web Logic Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs Javascript JSP JSTL Servlet Oracle Crud PL SQL JDBC UML Junit Maven Itext GWT Google Web Toolkit Clear Case Jasper Report ILog Agile Web 20 SOA Sr Python Developer CVB Financial New Jersey May 2015 to October 2016 Responsibilities Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Responsible for Loading via Elasticache DOLETAnoSQL Grants Program Document Data to AWSDynamoDB for AWSEMR Grant Fulfillment Analysis Write scripts using python modules and its libraries to develop programs that improve processing of access requests Involved in doing AGILE SCRUM practices and planning of sprint attending daily agile SCRUM meetings and SPRINT retrospective meetings to produce quality deliverables within time Utilized Python in the handling of all hits on Django Redis and other applications Used OOP concepts in overall design and development of system applications Involved in all phases of Software Development Life Cycle SDLC and Worked on all activities related to the development implementation and support for Hadoop Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Worked with WEB APIs to make calls to the web services using URLs which would perform GET PUT POST and DELETE operations on the server Build all database mapping classes using Django models Managed datasets using Panda data frames and MySQL queries MYSQL database queries from Python using PythonMySQL connector MySQLdb package to retrieve information Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Developed UI using HTML AJAX JavaScript and jQuery and jQueryUI Used MySQL as backend database and Mysqldb of python as database connector to interact with MySQL server Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous Integration to keep in line with Agile Software Methodology principles Integrated data from multiple applications using ETL tools like SSIS Informatica Successfully migrated the Django database from SQLite to PostgreSQL with complete data integrity Created scripts for system administration and AWS using languages such as BASH and Python Wrote django admin pages and developed REST API get post delete put functionalities for the application Developed Python daemon processes that filter price and load CDR data to Oracle DB This script utilized multithreading sockets and grid queues Developed SOAP web service to provide serverside info on user attributes channel descriptions and other ondemand live show information Designed and developed a horizontally scalable APIs using Python Flask Fixed existing user interface bugs with CSS and JavaScript functionalities Used GitHub Crucible and Fisheye to maintain and utilize the repository Used Postgresql with python database API for database manipulation Used react google charts to show data in column charts combo chart bar charts Maintained and tracked bugs and Scrum stories in JIRA Environment scipy Pandas Bugzilla SVN C Java jQuery MySQL Linux Eclipse Shell Scripting HTML5CSS agile Python Django Flask PostgreSQL PyCharm PyDev wxPython numPY matPlotLib PyQT Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs Javascript JSP JSTL Servlet Oracle Crud PL SQL JDBC Python Developer First Republic Bank Seattle WA May 2014 to April 2015 Responsibilities Wrote Python routines to log into the websites and fetch data for selected options Used Python modules such as requests urllib and urllib for web crawling Used other packages such as Beautifulsoup for data parsing Worked on writing and as well as read data from csv and excel file formats Developed a MATLAB algorithm which determines an objects dimensions from digital images Webservices backend development using Python CherryPy Django SQLAlchemy Participated in developing the companys internal framework on Python This framework became a basement for the quick services development Framework based on CherryPy with GnuPg encryption reGnuPg module on the top Worked on resulting reports of the application and Tableau reports Worked on HTML5 CSS3 JavaScript AngularJS NodeJS Git REST API Mongo DB intelliJ IDEA Design and Setting up of environment of Mongodb with shards and replicasets DevTest and Production Private VPN using Ubuntu Python Django CherryPy Postgres Redis Bootstrap Jquery Mongo Fabric Git Tenjin Selenium Sphinx and Nose Modifying data using SASBASE SAS MACROS Extracting data from the database using SASAccess SAS SQL procedures and create SAS data sets Performed QA testing on the application Developed approaches for improving NLP pipeline Create custom VB scripts in repackaging applications as needed NLP File Prep SettlementPrepare files for review for Settlement Held meetings with client and worked all alone for the entire project with limited help from the client Participated in the complete SDLC process Developed rich user interface using CSS HTML JavaScript and JQuery Created a Python based GUI application For Freight Tracking and processing Used Django framework for application development Developed and maintained various automated web tools for reducing manual effort and increasing efficiency of the Global Shipping Team Created database using MySQL wrote several queries to extract data from database Setup automated cron jobs to upload data into database generate graphs bar charts upload these charts to wiki and backup the database Wrote scripts in Python for extracting data from HTML file Effectively communicated with the external vendors to resolve queries Used Perforce for the version control Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Worked on backend of the application mainly using Active Records Implemented the presentation layer with HTML CSS JavaScript JQuery Angular JS and AJAX Environment Python Django HTML JavaScript JQuery CSS AJAX Angular JS MySQL PostgreSQL Linux Flask PyCharm PyDev wxPython numPY matPlotLib PyQT Nodejs Bootstrap Coherence Mongo DB HTML CSS Sencha Extjs JSP JSTL Servlet Oracle Crud PL SQL Python Developer FCB Financial Holdings Columbus OH May 2012 to April 2014 Responsibilities Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Refactor PythonDjango modules to deliver certain format of data Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQLdb package to retrieve information Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Utilized Python libraries wxPython numPY Twisted and matPlotLib Wrote Python scripts to parse XML documents and load the data in database Used Wireshark live http headers and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component The PHP page for displaying the data uses AJAX to sort and display the data The page also outputs data to csv for viewing in Microsoft Excel Parsers written in Python for extracting useful data from the design data base Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Experienced in Install setup and configured Cisco switches for TCPIP intranetwork and wireless access point across the network for the local area network and WiFi Experienced hardware installation of patch panels and fiber optic connectivity hubs cabling of cat5 and RJ45 connectors Managing of internet security and acceleration throughout the network using Microsofts ISA server Written functional phpunit test cases for DataLayer and Searchserver classes using Django Curl XML JSON REST base services and MongoDB Creating restful web services for Catalog and Pricing with Django MVT Jersey MySQL and MongoDB Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Generated graphical reports using python package Numpy and matPlotLib Usage of advance features like pickleunpickle in python for sharing the information across the applications Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Created Data tables utilizing PyQtto display customer and policy information and add delete update customer records Used Python and Django creating graphics XML processing data exchange and business logic implementation Used Python based GUI components for the front end functionality such as selection criteria Administration of dedicated collocated RHEL 4 machine and configured complex Apache configuration files Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Writing Python scripts with CloudFormation templates to automate installation of Autoscaling EC2 VPC and other services Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used third party JQuery based plugins like JQueryUI Datatables etc Heavily used JavaScript for Form Submit and other UI elements during development Utilize indepth knowledge of Technical experience in LAMP and other leadingedge products and technology in conjunction with industry and business skills to deliver solutions to customer Representation of the system in hierarchy form by defining the components subcomponents using Python and developed set of library functions over the system based on the user needs Used REST and SOAP UI for testing web service for server side changes Environment Python Django MongoDB MySQL AJAX SOAP REST JQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Flask PostgreSQL PyDev wxPython numPY matPlotLib PyQT Python Developer Home BancShares Dallas TX November 2010 to April 2012 Responsibilities Designed and developed presentation layer for web applications using HTML XML CSS JavaScript Worked on developing Web services and Amazon Web Services S3 and RDS to host files into Amazon cloud Involved in front end and utilized Bootstrap and Angularjs for page design Worked in Agile and waterfall methodologies with high quality deliverables delivered ontime Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Worked on continuous integration and automation using jerkins Developed required XML schema documents and developed the framework for parsing XML documents Extensive use of Linux SSH Flask and Django Used Django Database APIs to access database objects Used Python based GUI components for front end functionality Created test harness to enable comprehensive testing using Python Created Business logic using python to create planning and tracking functions Used PyQuery for selecting particular DOM elements when analyzing HTML Created Data tables using PyQt to display customer and policy information and add delete and update customer records Implemented AJAX framework to transform Datasets and Data tables into HTTP serializable JSON strings Worked on creating UI screens for initiation and validation using HTM5 CSS3 and JavaScript Developed multithreaded standalone app in python and PHP to monitor performance Interfacing with system administrators supervisors and production to ensure customer deadlines are met Environment Python Django Shell Scripting AWS PyQuery PyQt Flash DOM JSON PHP HTML5 CSS3 JavaScript Angularjs Bootstrap Apache Web Server MySQL LINUX Python Developer WesBanco New York NY March 2009 to October 2010 Responsibilities Involved in preparing engineering specification with OOA and OOD Used UML Tools to develop Use Case diagrams Class diagrams Collaboration and Sequence Diagrams State Diagrams and Data Modeling Used latest advances in NLP data science and machine leaning to enhance our products and create new experiences Scale machine learning algorithm that powers our platform to support our growing customer base and increasing data volume Utilized machine learning algorithms such as Decision Tree linear regression multivariate regression Naive Bayes Random Forests Kmeans KNN Worked on different data formats such as JSON XML and performed machine learning algorithms in R Worked on MapReduceSpark Python modules for machine learning predictive analytics in Hadoop Used MLlib Sparks Machine learning library to build and evaluate different models Implemented public segmentation using unsupervised machine learning algorithms by implementing kmeans algorithm using Spark Identified and targeted welfare highrisk groups with Machine learning algorithms Keen attention to detail and willingness to get hands dirty in checking and cleaning data quality Exposure to python and python packages and on experience with Supervised or Unsupervised machine learning algorithms Developed application logic using Python Java script Java C Used JMS for updating Mailing plans and tracking them Used Java Server Pages for content layout and presentation Created Data layer in MYSQL Extracted and loaded data using Python scripts and PLSQL packages Worked with the Database Schema design and normalization for database accessed by the procedural PHP pages Supported Java application for Media portal management Generated SWIG interfaces to coordinate between C Java and Python Used JNI for communication between C and Java Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Creating unit testregression test framework for workingnew code Debugging and testing of the applications finetuning performance Provided maintenance support in production environment Environment Java Python JavaScript HTMLCSS MySQL PLSQL JDBC Unix Shell Scripting TCPIP UDP SNMP Red Hat Linux Machine Learning Education Master of Science in Computer Science KANSAS STATE UNIVERSITY November 2016 to Present engineering specification State Diagrams and Data Modeling March 2009 to October 2010",
    "unique_id": "cec1956d-0e55-43d5-9496-03321c021a07"
}