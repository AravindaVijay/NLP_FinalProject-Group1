{
    "clean_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER Hamilton Bank Work Experience PYTHON DEVELOPER Hamilton Bank September 2018 to Present Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture and developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance and recorded the online users data using Python Django forms and implemented test case using Pytest Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Experience in setting up CICD pipeline integrating various tools with Jenkins to build and run Terraform jobs to create infrastructure in AWS Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application and developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application and managed datasets using Panda data frames and MYSQL Queried the database queries using Python Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Experience in all areas of Jenkins like Plugin Management Securing and scaling Jenkins integrating Code Analysis Performance issues Analytics and Test Phases to complete the CICD pipelines within Jenkins Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angularjs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JSON and AJAX Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Installed SWM CICD for building automation deployments for upgrades and installs which was carried out by Jenkins Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Implemented REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Designed and developed MySQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Responsible for debugging and troubleshooting programming related issues Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Created and configured new JIRA projects and worked with departments to maintain existing JIRA Used Pandas library for statistics Analysis NumPy for Numerical analysis Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using NumPy and SQLalchemy python developer Welspun ltd September 2013 to December 2015 RESPONSIBILITIES Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspect the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Expertise in delivering Agile projects from end to end Continuous IntegrationContinuous Delivery CICD pipeline by integration of tools like Jenkins Chef and AWS for VM provisioning Integrated Jenkins with Docker container using Cloud bees Docker pipeline plugin and provisioned the EC2 instance using Amazon EC2 plugin Experience in working with automation setup and administration of build and deployment CICD tools such as Jenkins Anthill Pro and UDeployUcode and integrated with Build Automation tools like ANT Maven Gradle and other Atlassian products Bamboo JIRA BitBucket for building of deployable artifacts JAR WAR EAR and DLL EXE from source code Used Jenkins with SonarQube to get the better quality of the Source code Automate the installation of ELK agent filebeat with Ansible playbook Used Python NumPy spicy pandas scikitlearn seaborn and Spark PySpark MLlib to develop variety of models and algorithms for analytic purposes Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application and developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application and managed datasets using Panda data frames and MYSQL Queried the database queries using Python Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Recorded the online users data using Python Django forms and implemented test case using PytestDeveloped the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Implemented CICD for J2EE and Microservices Architecture environment Net Core Zookeeper Kafka Redis using Anthill Pro and uDeploy and integrated SonarQube to get better Source code Having Knowledge on AWS Lambda Auto scaling Cloud Front RDS Route53 AWS SNS SQS SES Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Skills Ajax 2 years Apache 2 years Aws 2 years Bootstrap 2 years Css 2 years Django 2 years Git 2 years Html 2 years Html5 Less than 1 year Javascript 2 years jquery 2 years Json 2 years Mongodb 2 years Mysql 2 years python 2 years Rest 2 years Restful web services Less than 1 year scripting Less than 1 year Shell scripting Less than 1 year web services 2 years Additional Information SKILLS Python Golang HTML5 CSS3 Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows PostgreSQL NumPy SQL Alchemy AWS Tableau soup CSSCSS3 Bootstrap XML JavaScript jQuery Flask SciPy Pandas NumPy Backbone JS Restful Web services Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse CSS XML MongoDB JavaScript jQuery CSS Bootstrap Rabbit MQ JavaScript Eclipse Git GitHub Linux Radis Go language AWS Pandas PyQt DOM PHP HTML CSS AJAX JavaScript Bootstrap MYSQL GitHub LINUX NoSQL MongoDB SOAP jQuery",
    "entities": [
        "uDeploy",
        "JAR WAR EAR",
        "Continuous Deployment Application Server",
        "AJAX",
        "GUI",
        "Nodejs",
        "UNIX",
        "webapp2",
        "Working",
        "Created Terraform",
        "OpenStack",
        "Node Package",
        "Panda",
        "Created a PythonDjango",
        "Build Automation",
        "SQLalchemy",
        "Model View Control MVC",
        "jQuery Created",
        "Pandas PyQt DOM",
        "Integrated Jenkins",
        "DevOps",
        "Chef Serverworkstation",
        "Shell",
        "Jenkins Chef",
        "Implemented Terraform",
        "Automated",
        "PytestDeveloped",
        "Amazon",
        "ELK",
        "Python",
        "AWS Lambda and CloudWatch Built Elastic",
        "Stored Procedures",
        "Mongo",
        "Developed",
        "AutoScaling of AWS stacks Expertise",
        "CSS Bootstrap",
        "J2EE and Microservices Architecture",
        "Mesos Develop",
        "Django",
        "Utilized",
        "Python Unit",
        "Pytest Developed Ruby Python",
        "DjangoREST",
        "HTML5",
        "Develop",
        "AGILE",
        "Flask",
        "Built",
        "SonarQube",
        "Automate",
        "VMWare API",
        "Docker",
        "Views",
        "CLI",
        "PyQt",
        "Developed Ruby Python",
        "PythonDjango",
        "Agile",
        "Redux",
        "GIT",
        "API RESTful Web Services",
        "AWS Managed",
        "Python on Django",
        "ANT Maven Gradle",
        "log analytics full text search",
        "API",
        "Terraform",
        "Created",
        "AWS",
        "Django PostgreSQL Designed",
        "Bash Designed",
        "Worked with View Sets",
        "Stash",
        "Development of Isomorphic",
        "Django Oracle DB PostgreSQL",
        "Python Django",
        "Git Collect",
        "Jenkins Ansible",
        "Administrators",
        "SSH",
        "SQL Alchemy",
        "Jenkins Created",
        "Jenkins like Plugin Management Securing",
        "CICD",
        "Amazon AWS",
        "DLL EXE",
        "CICD Pipeline",
        "TestDriven",
        "google analytics",
        "Pandas",
        "Apache Cassandra Created Terraform",
        "CRUD",
        "Maven",
        "JavaScript",
        "AJAX Created Python",
        "Django Supportedmaintained",
        "Installed SWM CICD",
        "Python Using Chef",
        "View Sets",
        "jQuery",
        "Spark PySpark MLlib",
        "REST",
        "Mesos Used",
        "TDD",
        "Tableau",
        "Sprint",
        "Integration"
    ],
    "experience": "Experience PYTHON DEVELOPER Hamilton Bank September 2018 to Present Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture and developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance and recorded the online users data using Python Django forms and implemented test case using Pytest Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Experience in setting up CICD pipeline integrating various tools with Jenkins to build and run Terraform jobs to create infrastructure in AWS Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application and developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application and managed datasets using Panda data frames and MYSQL Queried the database queries using Python Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Experience in all areas of Jenkins like Plugin Management Securing and scaling Jenkins integrating Code Analysis Performance issues Analytics and Test Phases to complete the CICD pipelines within Jenkins Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angularjs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JSON and AJAX Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Installed SWM CICD for building automation deployments for upgrades and installs which was carried out by Jenkins Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Implemented REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Designed and developed MySQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Responsible for debugging and troubleshooting programming related issues Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Created and configured new JIRA projects and worked with departments to maintain existing JIRA Used Pandas library for statistics Analysis NumPy for Numerical analysis Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using NumPy and SQLalchemy python developer Welspun ltd September 2013 to December 2015 RESPONSIBILITIES Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspect the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Expertise in delivering Agile projects from end to end Continuous IntegrationContinuous Delivery CICD pipeline by integration of tools like Jenkins Chef and AWS for VM provisioning Integrated Jenkins with Docker container using Cloud bees Docker pipeline plugin and provisioned the EC2 instance using Amazon EC2 plugin Experience in working with automation setup and administration of build and deployment CICD tools such as Jenkins Anthill Pro and UDeployUcode and integrated with Build Automation tools like ANT Maven Gradle and other Atlassian products Bamboo JIRA BitBucket for building of deployable artifacts JAR WAR EAR and DLL EXE from source code Used Jenkins with SonarQube to get the better quality of the Source code Automate the installation of ELK agent filebeat with Ansible playbook Used Python NumPy spicy pandas scikitlearn seaborn and Spark PySpark MLlib to develop variety of models and algorithms for analytic purposes Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application and developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application and managed datasets using Panda data frames and MYSQL Queried the database queries using Python Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Recorded the online users data using Python Django forms and implemented test case using PytestDeveloped the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Implemented CICD for J2EE and Microservices Architecture environment Net Core Zookeeper Kafka Redis using Anthill Pro and uDeploy and integrated SonarQube to get better Source code Having Knowledge on AWS Lambda Auto scaling Cloud Front RDS Route53 AWS SNS SQS SES Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Skills Ajax 2 years Apache 2 years Aws 2 years Bootstrap 2 years Css 2 years Django 2 years Git 2 years Html 2 years Html5 Less than 1 year Javascript 2 years jquery 2 years Json 2 years Mongodb 2 years Mysql 2 years python 2 years Rest 2 years Restful web services Less than 1 year scripting Less than 1 year Shell scripting Less than 1 year web services 2 years Additional Information SKILLS Python Golang HTML5 CSS3 Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows PostgreSQL NumPy SQL Alchemy AWS Tableau soup CSSCSS3 Bootstrap XML JavaScript jQuery Flask SciPy Pandas NumPy Backbone JS Restful Web services Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse CSS XML MongoDB JavaScript jQuery CSS Bootstrap Rabbit MQ JavaScript Eclipse Git GitHub Linux Radis Go language AWS Pandas PyQt DOM PHP HTML CSS AJAX JavaScript Bootstrap MYSQL GitHub LINUX NoSQL MongoDB SOAP jQuery",
    "extracted_keywords": [
        "PYTHON",
        "DEVELOPER",
        "lPYTHONspan",
        "span",
        "lDEVELOPERspan",
        "PYTHON",
        "DEVELOPER",
        "Hamilton",
        "Bank",
        "Work",
        "Experience",
        "PYTHON",
        "DEVELOPER",
        "Hamilton",
        "Bank",
        "September",
        "Present",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "application",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "solution",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "Collect",
        "data",
        "performance",
        "query",
        "operations",
        "instance",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "Pytest",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Worked",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "familiarity",
        "technologies",
        "kubernetes",
        "Mesos",
        "expression",
        "search",
        "results",
        "combination",
        "Angular2",
        "builtin",
        "custom",
        "pipes",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "web",
        "services",
        "Nodejs",
        "dependencies",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "serverside",
        "applications",
        "Django",
        "Python",
        "programming",
        "python",
        "libraries",
        "Beautiful",
        "Soup",
        "matplotlib",
        "SciPy",
        "NumPy",
        "Nodejs",
        "backend",
        "client",
        "web",
        "application",
        "Experience",
        "CICD",
        "Pipeline",
        "code",
        "release",
        "process",
        "Integration",
        "tools",
        "GitSVN",
        "GitHub",
        "Jenkins",
        "tools",
        "base",
        "tasks",
        "Python",
        "Shell",
        "scripting",
        "XML",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Experience",
        "CICD",
        "pipeline",
        "tools",
        "Jenkins",
        "Terraform",
        "jobs",
        "infrastructure",
        "AWS",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "calls",
        "development",
        "Python",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "analysis",
        "Django",
        "PostgreSQL",
        "automation",
        "scripts",
        "records",
        "Mongo",
        "DB",
        "export",
        "command",
        "files",
        "machine",
        "help",
        "ftplib",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Golang",
        "API",
        "chatbot",
        "TDD",
        "software",
        "deployments",
        "Used",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "Python",
        "application",
        "TestDriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Installed",
        "ELK",
        "Elastic",
        "Search",
        "Log",
        "Facilitated",
        "Scrum",
        "ceremonies",
        "Sprint",
        "planning",
        "Daily",
        "standups",
        "Stash",
        "Kibana",
        "Log",
        "management",
        "EC2",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "search",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "Experience",
        "areas",
        "Jenkins",
        "Plugin",
        "Management",
        "Securing",
        "Jenkins",
        "Code",
        "Analysis",
        "Performance",
        "Analytics",
        "Test",
        "Phases",
        "CICD",
        "pipelines",
        "Jenkins",
        "Worked",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "webapps",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "Angularjs",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "project",
        "Flask",
        "report",
        "google",
        "analytics",
        "basis",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "Web",
        "Scraping",
        "data",
        "graphs",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Developed",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Services",
        "events",
        "analysis",
        "Django",
        "client",
        "website",
        "DJANGO",
        "CMS",
        "system",
        "website",
        "UI",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JSON",
        "AJAX",
        "Created",
        "Python",
        "Bash",
        "scripts",
        "increase",
        "efficiency",
        "management",
        "application",
        "system",
        "operations",
        "SWM",
        "CICD",
        "automation",
        "deployments",
        "upgrades",
        "installs",
        "Jenkins",
        "playbooks",
        "Continuous",
        "Delivery",
        "pipeline",
        "Jenkins",
        "Sonar",
        "server",
        "infrastructure",
        "packages",
        "software",
        "components",
        "Maven",
        "PythonDjango",
        "web",
        "application",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJavaScript",
        "frontend",
        "development",
        "D3",
        "JavaScript",
        "Data",
        "Visualization",
        "REST",
        "APIs",
        "Python",
        "python",
        "microframework",
        "Flask",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "Worked",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "MySQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "troubleshooting",
        "programming",
        "issues",
        "tools",
        "Bamboo",
        "Jira",
        "confluence",
        "configuration",
        "tool",
        "Chef",
        "Serverworkstation",
        "nodes",
        "CLI",
        "tools",
        "AWS",
        "nodes",
        "JIRA",
        "projects",
        "departments",
        "JIRA",
        "Pandas",
        "library",
        "statistics",
        "Analysis",
        "NumPy",
        "analysis",
        "Developed",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "scripts",
        "performance",
        "calculations",
        "NumPy",
        "SQLalchemy",
        "python",
        "developer",
        "Welspun",
        "ltd",
        "September",
        "December",
        "RESPONSIBILITIES",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "Pie",
        "Web",
        "Framework",
        "Git",
        "Collect",
        "data",
        "performance",
        "query",
        "operations",
        "instance",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Worked",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "familiarity",
        "technologies",
        "kubernetes",
        "Mesos",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Development",
        "Isomorphic",
        "ReactJS",
        "Redux",
        "API",
        "client",
        "applications",
        "web",
        "services",
        "Nodejs",
        "dependencies",
        "Node",
        "Package",
        "Manager",
        "NPM",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Expertise",
        "configure",
        "manage",
        "Amazon",
        "Elastic",
        "Search",
        "cluster",
        "Log",
        "Stash",
        "Kibana",
        "ELK",
        "Stack",
        "logging",
        "stores",
        "logs",
        "metrics",
        "S3",
        "bucket",
        "Lambda",
        "functions",
        "Glacier",
        "storage",
        "maintenance",
        "AutoScaling",
        "AWS",
        "Expertise",
        "projects",
        "end",
        "Continuous",
        "IntegrationContinuous",
        "Delivery",
        "CICD",
        "pipeline",
        "integration",
        "tools",
        "Jenkins",
        "Chef",
        "AWS",
        "VM",
        "Integrated",
        "Jenkins",
        "Docker",
        "container",
        "Cloud",
        "bees",
        "Docker",
        "pipeline",
        "plugin",
        "EC2",
        "instance",
        "Amazon",
        "EC2",
        "Experience",
        "automation",
        "setup",
        "administration",
        "build",
        "deployment",
        "CICD",
        "tools",
        "Jenkins",
        "Anthill",
        "Pro",
        "UDeployUcode",
        "Build",
        "Automation",
        "tools",
        "ANT",
        "Maven",
        "Gradle",
        "products",
        "Bamboo",
        "JIRA",
        "BitBucket",
        "building",
        "artifacts",
        "JAR",
        "WAR",
        "EAR",
        "DLL",
        "EXE",
        "source",
        "code",
        "Jenkins",
        "SonarQube",
        "quality",
        "Source",
        "code",
        "installation",
        "ELK",
        "agent",
        "filebeat",
        "playbook",
        "Python",
        "NumPy",
        "spicy",
        "Spark",
        "PySpark",
        "MLlib",
        "variety",
        "models",
        "algorithms",
        "purposes",
        "ELK",
        "Elastic",
        "Search",
        "Log",
        "Facilitated",
        "Scrum",
        "ceremonies",
        "Sprint",
        "planning",
        "Daily",
        "standups",
        "Stash",
        "Kibana",
        "Log",
        "management",
        "EC2",
        "Elastic",
        "Load",
        "Balancer",
        "ELB",
        "search",
        "Amazon",
        "Elastic",
        "Beanstalk",
        "Amazon",
        "EC2",
        "project",
        "AWS",
        "experience",
        "AWS",
        "storage",
        "services",
        "S3",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "Oracle",
        "DB",
        "PostgreSQL",
        "VMWare",
        "API",
        "calls",
        "automation",
        "scripts",
        "records",
        "Mongo",
        "DB",
        "export",
        "command",
        "files",
        "machine",
        "help",
        "ftplib",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Golang",
        "API",
        "chatbot",
        "TDD",
        "software",
        "deployments",
        "Used",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MYSQL",
        "database",
        "Python",
        "Using",
        "Chef",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "search",
        "stash",
        "Kibana",
        "ELK",
        "logs",
        "metrics",
        "S3",
        "bucket",
        "Lambda",
        "function",
        "users",
        "data",
        "Python",
        "Django",
        "forms",
        "test",
        "case",
        "PytestDeveloped",
        "application",
        "TestDriven",
        "methodology",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Working",
        "application",
        "developer",
        "controllers",
        "views",
        "models",
        "Django",
        "end",
        "backend",
        "application",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "test",
        "Development",
        "programming",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "serverside",
        "applications",
        "Django",
        "Flask",
        "Developed",
        "features",
        "dashboard",
        "Python",
        "Java",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "jQuery",
        "data",
        "charts",
        "web",
        "application",
        "charts",
        "JavaScript",
        "library",
        "data",
        "Apache",
        "Cassandra",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "CICD",
        "J2EE",
        "Microservices",
        "Architecture",
        "environment",
        "Net",
        "Core",
        "Zookeeper",
        "Kafka",
        "Redis",
        "Anthill",
        "Pro",
        "uDeploy",
        "SonarQube",
        "Source",
        "code",
        "Knowledge",
        "AWS",
        "Lambda",
        "Auto",
        "Cloud",
        "Front",
        "RDS",
        "Route53",
        "AWS",
        "SNS",
        "SQS",
        "SES",
        "Worked",
        "frontend",
        "frameworks",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "application",
        "MySQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "denormalization",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "View",
        "Sets",
        "DjangoREST",
        "framework",
        "web",
        "services",
        "web",
        "services",
        "CRUD",
        "operations",
        "Wrote",
        "ANSIBLE",
        "Playbooks",
        "Python",
        "SSH",
        "Wrapper",
        "Manage",
        "Configurations",
        "AWS",
        "Nodes",
        "Test",
        "Playbooks",
        "AWS",
        "instances",
        "Python",
        "Run",
        "Ansible",
        "Scripts",
        "provision",
        "Dev",
        "servers",
        "Flask",
        "framework",
        "application",
        "development",
        "MYSQL",
        "database",
        "server",
        "webapps",
        "progress",
        "python",
        "Script",
        "files",
        "drop",
        "box",
        "Amazon",
        "server",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "Angular",
        "Developed",
        "views",
        "templates",
        "python",
        "Django",
        "controller",
        "templating",
        "language",
        "Website",
        "interface",
        "infrastructure",
        "activities",
        "Continuous",
        "Deployment",
        "Application",
        "Server",
        "setup",
        "Stack",
        "Monitoring",
        "playbooks",
        "Ansible",
        "Run",
        "deck",
        "Jenkins",
        "PythonDjango",
        "web",
        "application",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJavaScript",
        "frontend",
        "development",
        "D3",
        "JavaScript",
        "Data",
        "Visualization",
        "DevOps",
        "group",
        "Jenkins",
        "Docker",
        "container",
        "EC2",
        "slaves",
        "Amazon",
        "AWS",
        "cloud",
        "configuration",
        "DevOps",
        "tools",
        "team",
        "scripts",
        "deployment",
        "tools",
        "environment",
        "Docker",
        "Skills",
        "Ajax",
        "years",
        "Apache",
        "years",
        "Aws",
        "years",
        "Bootstrap",
        "years",
        "Css",
        "years",
        "Django",
        "years",
        "Git",
        "years",
        "Html",
        "years",
        "Html5",
        "year",
        "Javascript",
        "years",
        "jquery",
        "years",
        "Json",
        "years",
        "Mongodb",
        "years",
        "Mysql",
        "years",
        "python",
        "years",
        "Rest",
        "years",
        "web",
        "services",
        "year",
        "scripting",
        "year",
        "Shell",
        "year",
        "web",
        "services",
        "years",
        "Information",
        "SKILLS",
        "Python",
        "Golang",
        "HTML5",
        "CSS3",
        "Angularjs",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "SQL",
        "UNIX",
        "Windows",
        "PostgreSQL",
        "NumPy",
        "SQL",
        "Alchemy",
        "AWS",
        "Tableau",
        "soup",
        "CSSCSS3",
        "Bootstrap",
        "XML",
        "JavaScript",
        "jQuery",
        "Flask",
        "SciPy",
        "Pandas",
        "NumPy",
        "Backbone",
        "JS",
        "Restful",
        "Web",
        "services",
        "Linux",
        "Git",
        "Amazon",
        "s3",
        "Jenkins",
        "MySQL",
        "Mongo",
        "DB",
        "TSQL",
        "Eclipse",
        "CSS",
        "XML",
        "JavaScript",
        "jQuery",
        "CSS",
        "Bootstrap",
        "Rabbit",
        "MQ",
        "JavaScript",
        "Eclipse",
        "Git",
        "GitHub",
        "Linux",
        "Radis",
        "Go",
        "language",
        "AWS",
        "Pandas",
        "PyQt",
        "DOM",
        "PHP",
        "HTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "MYSQL",
        "GitHub",
        "LINUX",
        "NoSQL",
        "MongoDB",
        "SOAP",
        "jQuery"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:47:03.738402",
    "resume_data": "PYTHON DEVELOPER span lPYTHONspan span lDEVELOPERspan PYTHON DEVELOPER Hamilton Bank Work Experience PYTHON DEVELOPER Hamilton Bank September 2018 to Present Designed database Model APIs and Views utilizing Python to build an interactive webbased application Involved in building database Model APIs and Views utilizing Python to build an interactive webbased solution Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Designed and managed API system deployment using fast http server and Amazon AWS architecture and developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspects the performance of query and update operations on a MongoDB instance and recorded the online users data using Python Django forms and implemented test case using Pytest Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Used regular expression for faster search results in combination with Angular2 builtin and custom pipes Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Worked on serverside applications with Django using Python programming and used python libraries like Beautiful Soup matplotlib SciPy NumPy and Built efficient Nodejs backend for client web application Experience to build CICD Pipeline to automate the code release process using Integration tools like GitSVN GitHub Jenkins Developed tools to automate some base tasks using Python Shell scripting and XML Used PyQt to implement GUI for the user to create modify and view reports based on client data Experience in setting up CICD pipeline integrating various tools with Jenkins to build and run Terraform jobs to create infrastructure in AWS Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django PostgreSQL Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application and developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application and managed datasets using Panda data frames and MYSQL Queried the database queries using Python Developed the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Experience in all areas of Jenkins like Plugin Management Securing and scaling Jenkins integrating Code Analysis Performance issues Analytics and Test Phases to complete the CICD pipelines within Jenkins Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angularjs Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Developed internal project in Flask to generate report from google analytics on daily monthly and weekly basis Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Used Python Library Beautiful Soup for Web Scraping to extract data for building graphs Worked in development of applications especially in UNIX environment and familiar with all its commands Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed Python based API RESTful Web Services to track the events and perform analysis using Django Supportedmaintained client website within the DJANGO CMS system for various website needs Performed dynamic UI designing with HTML5 CSS3 less Bootstrap JSON and AJAX Created Python and Bash scripts to monitor increase efficiency of retail management application system and operations Installed SWM CICD for building automation deployments for upgrades and installs which was carried out by Jenkins Used Ansible playbooks to setup Continuous Delivery pipeline This primarily consists of a Jenkins and Sonar server the infrastructure to run these packages and various supporting software components such as Maven etc Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Implemented REST APIs in Python using python based microframework called Flask with SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Designed and developed MySQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Responsible for debugging and troubleshooting programming related issues Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Created and configured new JIRA projects and worked with departments to maintain existing JIRA Used Pandas library for statistics Analysis NumPy for Numerical analysis Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Responsible for user validations on client side as well as server side Automated the existing scripts for performance calculations using NumPy and SQLalchemy python developer Welspun ltd September 2013 to December 2015 RESPONSIBILITIES Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git Collect data that introspect the performance of query and update operations on a MongoDB instance Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Also gained familiarity with supporting technologies like kubernetes and Mesos Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework and Development of Isomorphic ReactJS and Redux driven API client applications Developed backend web services using Nodejs and stored dependencies using Node Package Manager NPM Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Expertise in setting up configure manage and scale Amazon Elastic Search cluster and used Log Stash along with Kibana ELK Stack for centralized logging which stores logs and metrics into an S3 bucket using Lambda functions utilized Glacier for storage for setting up and maintenance of AutoScaling of AWS stacks Expertise in delivering Agile projects from end to end Continuous IntegrationContinuous Delivery CICD pipeline by integration of tools like Jenkins Chef and AWS for VM provisioning Integrated Jenkins with Docker container using Cloud bees Docker pipeline plugin and provisioned the EC2 instance using Amazon EC2 plugin Experience in working with automation setup and administration of build and deployment CICD tools such as Jenkins Anthill Pro and UDeployUcode and integrated with Build Automation tools like ANT Maven Gradle and other Atlassian products Bamboo JIRA BitBucket for building of deployable artifacts JAR WAR EAR and DLL EXE from source code Used Jenkins with SonarQube to get the better quality of the Source code Automate the installation of ELK agent filebeat with Ansible playbook Used Python NumPy spicy pandas scikitlearn seaborn and Spark PySpark MLlib to develop variety of models and algorithms for analytic purposes Installed configured and managed the ELK Elastic Search Log Facilitated Scrum ceremonies like Sprint planning retrospectives Daily standups etc Stash and Kibana for Log management within EC2 Elastic Load Balancer ELB for Elastic search Used Amazon Elastic Beanstalk with Amazon EC2 to deploy project into AWS and good experience with AWS storage services S3 Managed developed and designed a dashboard control panel for customers and Administrators using Django Oracle DB PostgreSQL and VMWare API calls Designed automation scripts to back up the old records by using Mongo DB export command and transferred the files into backup machine with the help of ftplib Followed AGILE development methodology to develop the application and developed Golang API and chatbot using TDD to automate software deployments and rollbacks Used Test driven approach TDD for developing services required for the application and managed datasets using Panda data frames and MYSQL Queried the database queries using Python Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Built Elastic search Log stash and Kibana ELK to store logs and metrics into S3 bucket using Lambda function Recorded the online users data using Python Django forms and implemented test case using PytestDeveloped the application using the TestDriven methodology and designed the unit tests using Python Unit test framework Working as an application developer experienced with controllers views and models in Django Designed front end and backend of the application using Python on Django Web Framework Develop consumerbased features and applications using Python and Django in test driven Development and pairbased programming Good experience in developing web applications and implementing Model View Control MVC architecture using serverside applications like Django and Flask Developed and tested many features for dashboard using Python Java Bootstrap CSS JavaScript and jQuery Created interactive data charts on web application using High charts JavaScript library with data coming from Apache Cassandra Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Implemented CICD for J2EE and Microservices Architecture environment Net Core Zookeeper Kafka Redis using Anthill Pro and uDeploy and integrated SonarQube to get better Source code Having Knowledge on AWS Lambda Auto scaling Cloud Front RDS Route53 AWS SNS SQS SES Worked on frontend frameworks like CSS Bootstrap for development of Web application Worked in MySQL database on simple queries and writing Stored Procedures for normalization and denormalization Used Python based GUI components for the frontend functionality such as selection criteria Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Worked with View Sets in DjangoREST framework for providing web services and consumed web services performing CRUD operations Wrote ANSIBLE Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Run Ansible Scripts to provision Dev servers Used Flask framework for application development Designed and implemented a dedicated MYSQL database server to drive the webapps and report on daily progress Developed python Script for moving files from drop box to Amazon server Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Developed views and templates with python and Django view controller and templating language to create a userfriendly Website interface Automated various infrastructure activities like Continuous Deployment Application Server setup Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins Created a PythonDjango based web application for data processing using MySQL as database and HTMLCSSJavaScript for frontend development and D3 JavaScript for Data Visualization Worked in DevOps group running Jenkins in a Docker container with EC2 slaves in Amazon AWS cloud configuration Created and maintained various DevOps related tools for the team such as provisioning scripts deployment tools and staged virtual environment using Docker Skills Ajax 2 years Apache 2 years Aws 2 years Bootstrap 2 years Css 2 years Django 2 years Git 2 years Html 2 years Html5 Less than 1 year Javascript 2 years jquery 2 years Json 2 years Mongodb 2 years Mysql 2 years python 2 years Rest 2 years Restful web services Less than 1 year scripting Less than 1 year Shell scripting Less than 1 year web services 2 years Additional Information SKILLS Python Golang HTML5 CSS3 Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows PostgreSQL NumPy SQL Alchemy AWS Tableau soup CSSCSS3 Bootstrap XML JavaScript jQuery Flask SciPy Pandas NumPy Backbone JS Restful Web services Linux Git Amazon s3 Jenkins MySQL Mongo DB TSQL Eclipse CSS XML MongoDB JavaScript jQuery CSS Bootstrap Rabbit MQ JavaScript Eclipse Git GitHub Linux Radis Go language AWS Pandas PyQt DOM PHP HTML CSS AJAX JavaScript Bootstrap MYSQL GitHub LINUX NoSQL MongoDB SOAP jQuery",
    "unique_id": "01583a83-2b39-440a-8cc2-0ee7e0371b8b"
}