{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Allstate insurance company Having 8 years of experience as a Python Developer proficient coder in multiple languages and experience in Design Development Implementation of Python Django Flask Pyramid and clientserver technologiesbased applications RESTful services AWS C C JAVA and SQL Skilled experience in Python with proven expertise in using new tools and technical developments libraries used libraries Beautiful Soup Jasy NumPy SciPy matplotlib Pickle PySide pythontwitter Pandas data frame networks urllib2 MySQL dB for database connectivity to drive com Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Strong expertise in development of webbased applications using Python Django HTML XML Angular JS CSS DHTML JavaScript JSON and jQuery Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Sound experience in Core Java and ObjectOriented Programming using concepts like MultiThreading Exception Handling and Collections Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Strongly follow PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and Pylint Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and Mongo DB 26 24 Orient DB Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Write maintain and improve automation scripts in Perl BASH PHP Python The methodology used here will be to introduce in a simple and abbreviated manner the components of the Jython language most likely to be used in wsadmin scripts Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Good knowledge in working with application server Apache Tomcat 60 70 80 Experience in working with Python ORM Libraries including Django ORM Experience in Test Driven Development and Behaviour Driven Development methodologies for consulting firms and enterprise projects Evaluates engineering approaches and risks to produce development plans that ensure high quality low cost products and systems Reviews mentors and coaches while defining and promoting use of standards best practices and lessons learned Work Experience Python Developer Allstate insurance company Chicago IL July 2017 to Present Description The Allstate Corporation is the one of the largest insurance providers in the United States and one of the largest that is publicly held The company also has personal lines insurance operations in Canada Allstate was founded in 1931 as part of Sears Roebuck and Co and was spun off in 1993 The company has had its headquarters in Northfield Township Illinois near Northbrook since 1967Its current advertising campaign in use since 2004 asks Are you in good hands The corporate spokesperson is Dennis Haysbert Responsibilities Created Business Logic using Python to create Planning and Tracking functions Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashovers stored in the Django models Also created XML with Django to be used by the Flash Developed multithreaded standalone app in Python PHP C to view Circuit parameters and performance Involved in building database Model APIs and Views using Python so as to manufacture an intuitive electronic arrangement Used Python based GUI parts for the frontend usefulness for example determination criteria made test saddle to empower exhaustive testing using Python Used Amazon Web Services AWS for enhanced productivity of capacity and quick access Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Worked on messaging solutions like ActiveMQ and worked on unit test plans UTP integrated test plans ITP and user acceptance testing UAT and involved in development of main modules like CSV import xlsx import bulk content upload Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Also Used jQuery as library to create a Single Page Application Phases which can bind data to specific views and synchronize data with server and Worked with JQX widgets functionality Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Python based GUI segments for the frontend usefulness for example choice criteria Created test outfit to empower exhaustive testing using Python Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed Merge jobs in Python to extract and load data into MySQL database Used Couchbase Python SDK to build applications that use Couchbase Server Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Used advanced packages like Mock patch and Beautiful soup b4 in extracting the Data during development phase and perform unit testing Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Implemented Garbage collection with CPython to enhance the performance by garbage collecting the older generated objects Automated RabbitMQ cluster installations and configuration using PythonBash Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCentre Datastax Ops center Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful webservice MongoDB MySQL SQLite Cassandra Docker AWS EC2 S3 PyUnit Karma Jenkins Selenium Automation Testing Python Developer PGE San Francisco CA April 2016 to June 2017 Description The Pacific Gas and Electric Company PGE is an investorowned electric utility IOU with publicly traded stock that is headquartered in the Pacific Gas Electric Building in San Francisco PGE provides natural gas and electricity to most of the northern twothirds of California from Bakersfield almost to the Oregon border which represents 52 million households Responsibilities Involved in the project life cycle including design development and implementation and verification and validation Developed the application front end using HTML CSS JavaScript Bootstrap Django framework Extensively utilized Python frameworks like Django Flask Sanic PyUnit and libraries like matplotlib Designed applications implementing MVC architecture in Pyramid Zope frame works Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts matplotlib for data visualization of sales tracking progress identifying trends Developed dataaccessible web applications for employee accesses using HTML5 CSS3 JavaScript and Django Fetched twitter feeds for certain important keyword using pythontwitter libraryTweepy Used JSON to store the twitter data which was further represented using matplotlib visualization and generated graphical reports for business decision using matplotlib library Participate in the design build and deployment of NoSQL implementations like MongoDB Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on creation of custom Docker container images tagging and pushing the images Integrated to Google Cloud platform for large scale computing workloads Extensive code reviewing using GitHub pull requests improved code quality also conducted meetings among Team Developed serverbased web traffic using RESTful APIs statistical analysis tool using Flask Pandas Wrote PLSQL views Stored Procedures database triggers Packages Implemented table sorting feature on the webpages regardless of the type of data types with the use of JavaScript Enhanced by adding Python XML SOAP requestresponse handlers to add accounts modify trades and security updates Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Worked with RDBMS like Oracle 11g10i and MySQL databases to query and read data Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Developed scripts to migrate data from proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of application with Ansible automation engine Created backend database TSQL stored procedures and Jasper Reports Performed Unit testing Integration Testing GUI testing using PyTest and web application testing using Selenium Python bindings Designed many UML diagrams in Magic Draw for generating C code on the fly Used Embedded Coder for translating models into model source code and executable in QNX Real Time Operating SystemRTOS singletasking mode Writing the assembly language program and debugging Developed applications in QT creator Conversion of the analog to a digital voltmeter with the help assembly language and plc programming Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Debugged and Tested Android app using Charles debugging session as maninmiddle proxy and monitored traffic flow through the devices logged user stories and acceptance criteria in JIRA for features by evaluating output requirements and formats Executing regression tests on each release and verified bugs found from automation test in Bugzilla Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Environment Python 3427 Hadoop Django 17 HTML5 CSS Bootstrap jQuery JSON JavaScript PostgreSQL TSQL MongoDB SoapUI Docker Oracle 11g10i Charles Web Debugging Ansible MySQL Google Cloud Amazon AWS S3 Bugzilla JIRA Python Developer Santander Bank Boston MA December 2014 to March 2016 Description Santander Bank N A formerly Sovereign Bank is a wholly owned subsidiary of Spanish Santander Group It is based in Boston and its principal market is the northeastern United States It has 547 billion in deposits operates about 650 retail banking offices and over 2000 ATMs and employs approximately 9800 people It offers an array of financial services and products including retail banking mortgages corporate banking cash management credit card capital markets trust and wealth management and insurance Responsibilities Designed and Developed UI for creating Dashboard application using AngularJS D3 C3 HTML CSS Bootstrap JavaScript and jQuery Developed and implemented Python scripts to automate retrieval parsing and reporting of configuration parameters from Network Devices connected to customer networks Involved in user interface design and development using JSP Servlet HTML5 CSS3 and JavaScript Wrote and tested Python scripts to create new data files for Linux server configuration using a Python template tool Modified controlling databases using SQL generated via Python and Perl code collected and analyzed data with Python programs using SQL queries from the database of data collected from the systems under tests Developed new user interface components for different modules using Kendo UI with various controls including Grid controls and chart controls etc Updated the client admin tool to have the new features like support for internalization support for customer service etc Tested and assessed comes about for incorporation into programming item Designed and sent machine learning arrangements in Python to group a large number of already unclassified Twitter clients into center information item Used Pandas API to put the information as time arrangement and forbidden frame for east timestamp information control and recovery to deal with time arrangement information and do information control Used Pandas library for factual Analysis utilizing R Studio Skilled in using collections in Python for manipulating and looping through different userdefined objects Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Automated different workflows which are initiated manually with Python scripts and Unix shell scripting Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL DB package Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Developed Sqoop scripts to handle change data capture for processing incremental records between new arrived and existing data in RDBMS tables Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Involved in the WebApplication development using Python HTML5 CSS3 AJAX JSON and jQuery Generated Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Cleaned data and processed thirdparty spending data into Manoeuvrable deliverables within specific format with Excel macros and python libraries such as NumPy SQL Alchemy and Matplotlib Prototype proposal for Issue Tracker website using PythonDjango connecting MySQL as Database Environment Python HTML5 CSS3 AJAX JSON jQuery MySQL NumPy SQL Alchemy Matplotlib Hadoop Pig Scripts Python Developer Qualcomm San Diego CA April 2013 to November 2014 Description Qualcomm is an American multinational semiconductor and telecommunications equipment company that designs and markets wireless telecommunications products and services It derives most of its revenue from chipmaking and the bulk of its profit from patent licensing businesses Responsibilities Used Django Framework in developing web applications to implement the model view control MVC architecture A developed analytical component using Scala and KAFKA Designed Forms Modules Views and Templates using Django and Python Installedconfiguresmaintained Apache servers on all machines production server and developmental servers The created script in python for calling REST APIs Implemented Business logic data exchange XML processing and graphics creation using Python and Django Implemented RESTful Webservices for sending and receiving the data between multiple systems Implemented Business logic data exchange XML processing and graphics creation using Python and Django Rewrite existing PythonFlask module to deliver certain format of data Created authorization scheme which enforced limitations on API clients Overwritten Django Rest Framework internals to allow for more dynamic routing Worked with SCRUM Agile methodology to ensure delivery of highquality work with monthly iterationtime box Installedconfiguredmaintained Apache servers on all machines production server and development servers Administrate Continuous Integration services Jenkins Nexus Artifactory and Repository Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Installedconfiguredmaintained MySQL database and MongoDB database Executed Backend and Database Tests using SQL queries validating the data for database editing and debugging is conducted using selenium Created a database using MySQL and wrote various queries for the extraction of data from the database Used NoSQL database Apache Cassandra to load the data in the database Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Developed Business Logic using Python on Django Web Framework DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Using jQuery and AJAX calls for transmitting JSON data objects between the front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Resolve tune maintain manage clients JBoss WebLogic WAS ATG instances on cluster connectivity producing optimal performance results in each environment throughout the life cycle Prepare Test scripts for different applications using QTP Selenium Worked with RDBMS like Oracle and MySQL databases to query and read data Transfer Object for Lookups Value List Handler for search and DAO Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and Linux server Designed and led big data algorithms using Hadoop and Java to improve forecasting and used HiveQL to generate reports Environment Python Django Bootstrap Django Flask MySQL PostgreSQL PyCharm Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS JSP JSTL Servlet Oracle Crud PL SQL JDBC UML JUnit Maven GWT Clear Case Jasper Report ILog Agile Web 20 SOA Python Developer Xylem Water Solution India Pvt Ltd Gujarat IN November 2011 to March 2013 Description Xylem Inc is a large American water technology provider enabling customers worldwide to transport treat test and efficiently use water in public utility residential commercial agricultural and industrial settings The company does business in more than 150 countries Launched in 2011 from the spinoff of the waterrelated businesses of ITT Corporation Xylem is headquartered in Rye Brook NY with 2015 revenues of 365 billion and 12500 employees worldwide Responsibilities Extensively used Python Django Framework for developing backend of applications Responsible for analyzing various crossfunctional multiplatform applications Developed a Restful service using Python Flask framework Worked with team of developers on Pythonapplications for RISK management Developed entire frontend and backend modules using Java and Python using Web Frameworks Designed and developed data management system using MySQL Generated property list for every application dynamically using Python Handled all the clientside validation using JavaScript Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Implemented the MVC pattern with Struts framework with Tiles for the presentation layer Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Created a Git repository and added the project to GitHub Developed Python batch processors to consume and produce various feeds Responsible for Creating Python APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Interacted with QA to develop test plans from highlevel design documentation Environment Python 26 Django REST Web services Struts PHP C HTML5 CSS3 JQuery API AJAX XHTML Bootstrap JavaScript XML GitHub Flash SQLite MYSQL SQL PLSQL Oracle and Windows Linux Java Developer Sparx Infosys Chicago IL April 2009 to October 2011 Description Spark Infosys is one of The Best Professional Web Designing Web Development Mobile Application Development SEO Digital Marketing Company in Hyderabad with more than 10 years of experience in designing and development of web applications and has successfully completed more than 500 projects for clients around the world Responsibilities Involved and interacted with Business analysts for conversion business requirements to development Developed Servlets and several JSPs for web development Developed several User Interface using swings and applets Designed and implemented several drags and drop functionalities for various elements using Swing Java AWT Wrote several PLSQL procedures and SQL queries to retrieve data from database Designed and developed several complex SQL queries Used explain plan for slow running queries and made necessary changes to code to expedite the query execution Established JDBC connections for data retrieval and update Involved in making GUI JSP HTML and JS and java classes using Struts Framework Used Struts framework to implement J2EE design pattern MVC Used STL Algorithms and Data structures widely to store data on accounts Order history securities etc for fast retrievalupdate in C programming Also Debugged with GDB Part of a development team for implementing Equity Order Management system to accept orders from UI FIX sendroute to Exchanges and other broker dealers and fill the trades in C on Unix and Linux platforms By using Eclipse developed and debugged the JSP and EJB components Developed automatic emailing system and JNDI to interact with the server Documented the design documents using Class Diagrams and Sequence Diagrams using the Rational Application Developer Designed and developed a webbased client using Servlets JSP Tag Libraries Java Script HTML and XML using Struts Framework Used SOA Suite ESB Mediators components for the validation filter and transformation of the document data from one xml schema to another Used SOAP Technology for exchanging the XML application using HTTP Used SVN for version control of the code and configuration file Extensively used MAVEN as build tool Configured JMS and EJB on Web Logic Server in Eclipse environment Used PLSQL tables REF cursors to process huge volume of data and used BULK collect and BULK bind for mass update as performance improvement process Environment J2EE JNDI Servlets JSP EJB JMS JDBC PLSQL Struts Framework Apache Tomcat 50 Oracle Database WebLogic JBoss 405 Apache Tomcat HTML MVC IBM Rational Rose Education Bachelors Skills SQL 8 years LINUX 8 years C 8 years XML 8 years DATABASE 7 years Python Java Additional Information TECHNICAL SKILLS Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case AccuRev GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Database Postgre SQL MS Access SQL Server MYSQL and Sybase Oracle DB2 Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis Delivery Tools Saltstack Chef Puppet",
    "entities": [
        "another Used SOAP Technology",
        "Python Flask",
        "QNX Real Time Operating SystemRTOS",
        "Hadoop Clusters",
        "Bash Implemented Multithreading",
        "Network Devices",
        "UTP",
        "AJAX",
        "GUI",
        "the Rational Application Developer Designed",
        "PythonBash",
        "CVS Git GitHub",
        "Bakersfield",
        "UNIX",
        "The Pacific Gas and Electric Company PGE",
        "Oracle Crud PL",
        "Oregon",
        "Django Implemented RESTful Webservices",
        "HTTP",
        "Prepare Test",
        "Interfacing",
        "STL Algorithms",
        "IBM",
        "Panda",
        "Hadoop",
        "XML",
        "REF",
        "QT",
        "Created PyUnit",
        "PyUnit",
        "JIRA",
        "Shell",
        "Automated",
        "Docker Successfully",
        "Perl BASH PHP Python",
        "jQuery Having",
        "Used Embedded Coder",
        "UAT",
        "Canada Allstate",
        "Amazon",
        "Selenium Automation",
        "Responsibilities Used Django Framework",
        "Data ImportExport",
        "Python",
        "Spanish Santander Group",
        "Northbrook",
        "Amazon AWS S3",
        "Developed",
        "Team Developed",
        "Servlets JSP Tag Libraries",
        "Django",
        "Recording of Scripts Web Services",
        "a Single Page Application Phases",
        "Utilized",
        "San Francisco",
        "Developed Business Logic",
        "Responsibilities Involved",
        "UML",
        "ITT Corporation Xylem",
        "Oracle 11g10i",
        "the Pacific Gas Electric Building",
        "JQX",
        "Struts PHP",
        "GitHub Developed Python",
        "Swing Java AWT Wrote",
        "HTML5",
        "Cleaned",
        "JNDI",
        "Present Description The Allstate Corporation",
        "Linux",
        "jQuery Developed",
        "JSP",
        "Collaborated",
        "Oracle DB2",
        "SQL Queries",
        "Hyderabad",
        "Description Santander Bank",
        "Django Flask Sanic PyUnit",
        "Nodejs Bootstrap Coherence Mongo DB",
        "RDS",
        "Created a Git",
        "Developed Servlets",
        "Views",
        "ObjectOriented Programming",
        "Description Xylem Inc",
        "UI FIX",
        "MVC",
        "PythonDjango",
        "AntMaven Strongly",
        "EJB",
        "Sears Roebuck and Co",
        "CSV",
        "Development of Python",
        "HTML CSS",
        "JS",
        "API",
        "Executed Backend",
        "QA",
        "ITP",
        "Python Java Additional Information TECHNICAL SKILLS Languages C C Python",
        "Heroku Write",
        "Created",
        "Python Django Framework",
        "Transfer Object for Lookups Value List Handler",
        "Sqlite3",
        "DSE DevCentre Datastax Ops center Written",
        "Sybase Oracle DB2 Application Servers Web",
        "Oracle",
        "Python Developer",
        "Bugzilla Collaborate",
        "Design Development Implementation of Python Django Flask Pyramid",
        "HTML",
        "java",
        "California",
        "Python ORM Libraries",
        "SQL",
        "Administrate Continuous Integration",
        "GitHub",
        "JBoss IBM",
        "Developer Allstate",
        "Test Driven Development",
        "MAVEN",
        "lPythonspan",
        "Jenkins Ansible",
        "Chicago",
        "the United States",
        "Model View Control",
        "Integration Testing GUI",
        "JenkinsHudson",
        "Hive",
        "Northfield Township Illinois",
        "Amazon AWS",
        "Product Management and User Experience",
        "JBoss WebLogic",
        "Pandas",
        "Python Integrated Development Environments",
        "United States",
        "SQLite",
        "Agile Software Development",
        "Kendo UI",
        "Oracle Database WebLogic",
        "Order",
        "ATG",
        "NumPy SQL Alchemy",
        "unittest2",
        "GWT",
        "Djangos",
        "WebApplication",
        "Continuous Integration",
        "SMTP",
        "SQL Queries Stored",
        "SVN",
        "Implemented Business logic data",
        "CSS",
        "CMS",
        "Python PHP C",
        "SDK",
        "REST",
        "Data",
        "Boston",
        "Jasper Reports Performed Unit",
        "Templates using Django and Python Installedconfiguresmaintained Apache",
        "BULK",
        "Python HTML5 CSS3 AJAX JSON",
        "MultiThreading Exception Handling and Collections Experience",
        "TDD",
        "NoSQL",
        "Selenium Python",
        "HTMLCSSjQuery",
        "Worked with JSON",
        "Sovereign Bank",
        "PythonFlask",
        "PyTest",
        "KAFKA",
        "The Best Professional Web Designing Web Development Mobile Application Development SEO Digital Marketing Company",
        "Description Spark Infosys"
    ],
    "experience": "Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Strongly follow PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and Pylint Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and Mongo DB 26 24 Orient DB Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Write maintain and improve automation scripts in Perl BASH PHP Python The methodology used here will be to introduce in a simple and abbreviated manner the components of the Jython language most likely to be used in wsadmin scripts Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Good knowledge in working with application server Apache Tomcat 60 70 80 Experience in working with Python ORM Libraries including Django ORM Experience in Test Driven Development and Behaviour Driven Development methodologies for consulting firms and enterprise projects Evaluates engineering approaches and risks to produce development plans that ensure high quality low cost products and systems Reviews mentors and coaches while defining and promoting use of standards best practices and lessons learned Work Experience Python Developer Allstate insurance company Chicago IL July 2017 to Present Description The Allstate Corporation is the one of the largest insurance providers in the United States and one of the largest that is publicly held The company also has personal lines insurance operations in Canada Allstate was founded in 1931 as part of Sears Roebuck and Co and was spun off in 1993 The company has had its headquarters in Northfield Township Illinois near Northbrook since 1967Its current advertising campaign in use since 2004 asks Are you in good hands The corporate spokesperson is Dennis Haysbert Responsibilities Created Business Logic using Python to create Planning and Tracking functions Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashovers stored in the Django models Also created XML with Django to be used by the Flash Developed multithreaded standalone app in Python PHP C to view Circuit parameters and performance Involved in building database Model APIs and Views using Python so as to manufacture an intuitive electronic arrangement Used Python based GUI parts for the frontend usefulness for example determination criteria made test saddle to empower exhaustive testing using Python Used Amazon Web Services AWS for enhanced productivity of capacity and quick access Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Worked on messaging solutions like ActiveMQ and worked on unit test plans UTP integrated test plans ITP and user acceptance testing UAT and involved in development of main modules like CSV import xlsx import bulk content upload Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Also Used jQuery as library to create a Single Page Application Phases which can bind data to specific views and synchronize data with server and Worked with JQX widgets functionality Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Python based GUI segments for the frontend usefulness for example choice criteria Created test outfit to empower exhaustive testing using Python Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed Merge jobs in Python to extract and load data into MySQL database Used Couchbase Python SDK to build applications that use Couchbase Server Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Used advanced packages like Mock patch and Beautiful soup b4 in extracting the Data during development phase and perform unit testing Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Implemented Garbage collection with CPython to enhance the performance by garbage collecting the older generated objects Automated RabbitMQ cluster installations and configuration using PythonBash Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCentre Datastax Ops center Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful webservice MongoDB MySQL SQLite Cassandra Docker AWS EC2 S3 PyUnit Karma Jenkins Selenium Automation Testing Python Developer PGE San Francisco CA April 2016 to June 2017 Description The Pacific Gas and Electric Company PGE is an investorowned electric utility IOU with publicly traded stock that is headquartered in the Pacific Gas Electric Building in San Francisco PGE provides natural gas and electricity to most of the northern twothirds of California from Bakersfield almost to the Oregon border which represents 52 million households Responsibilities Involved in the project life cycle including design development and implementation and verification and validation Developed the application front end using HTML CSS JavaScript Bootstrap Django framework Extensively utilized Python frameworks like Django Flask Sanic PyUnit and libraries like matplotlib Designed applications implementing MVC architecture in Pyramid Zope frame works Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts matplotlib for data visualization of sales tracking progress identifying trends Developed dataaccessible web applications for employee accesses using HTML5 CSS3 JavaScript and Django Fetched twitter feeds for certain important keyword using pythontwitter libraryTweepy Used JSON to store the twitter data which was further represented using matplotlib visualization and generated graphical reports for business decision using matplotlib library Participate in the design build and deployment of NoSQL implementations like MongoDB Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on creation of custom Docker container images tagging and pushing the images Integrated to Google Cloud platform for large scale computing workloads Extensive code reviewing using GitHub pull requests improved code quality also conducted meetings among Team Developed serverbased web traffic using RESTful APIs statistical analysis tool using Flask Pandas Wrote PLSQL views Stored Procedures database triggers Packages Implemented table sorting feature on the webpages regardless of the type of data types with the use of JavaScript Enhanced by adding Python XML SOAP requestresponse handlers to add accounts modify trades and security updates Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Worked with RDBMS like Oracle 11g10i and MySQL databases to query and read data Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Developed scripts to migrate data from proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of application with Ansible automation engine Created backend database TSQL stored procedures and Jasper Reports Performed Unit testing Integration Testing GUI testing using PyTest and web application testing using Selenium Python bindings Designed many UML diagrams in Magic Draw for generating C code on the fly Used Embedded Coder for translating models into model source code and executable in QNX Real Time Operating SystemRTOS singletasking mode Writing the assembly language program and debugging Developed applications in QT creator Conversion of the analog to a digital voltmeter with the help assembly language and plc programming Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Debugged and Tested Android app using Charles debugging session as maninmiddle proxy and monitored traffic flow through the devices logged user stories and acceptance criteria in JIRA for features by evaluating output requirements and formats Executing regression tests on each release and verified bugs found from automation test in Bugzilla Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Environment Python 3427 Hadoop Django 17 HTML5 CSS Bootstrap jQuery JSON JavaScript PostgreSQL TSQL MongoDB SoapUI Docker Oracle 11g10i Charles Web Debugging Ansible MySQL Google Cloud Amazon AWS S3 Bugzilla JIRA Python Developer Santander Bank Boston MA December 2014 to March 2016 Description Santander Bank N A formerly Sovereign Bank is a wholly owned subsidiary of Spanish Santander Group It is based in Boston and its principal market is the northeastern United States It has 547 billion in deposits operates about 650 retail banking offices and over 2000 ATMs and employs approximately 9800 people It offers an array of financial services and products including retail banking mortgages corporate banking cash management credit card capital markets trust and wealth management and insurance Responsibilities Designed and Developed UI for creating Dashboard application using AngularJS D3 C3 HTML CSS Bootstrap JavaScript and jQuery Developed and implemented Python scripts to automate retrieval parsing and reporting of configuration parameters from Network Devices connected to customer networks Involved in user interface design and development using JSP Servlet HTML5 CSS3 and JavaScript Wrote and tested Python scripts to create new data files for Linux server configuration using a Python template tool Modified controlling databases using SQL generated via Python and Perl code collected and analyzed data with Python programs using SQL queries from the database of data collected from the systems under tests Developed new user interface components for different modules using Kendo UI with various controls including Grid controls and chart controls etc Updated the client admin tool to have the new features like support for internalization support for customer service etc Tested and assessed comes about for incorporation into programming item Designed and sent machine learning arrangements in Python to group a large number of already unclassified Twitter clients into center information item Used Pandas API to put the information as time arrangement and forbidden frame for east timestamp information control and recovery to deal with time arrangement information and do information control Used Pandas library for factual Analysis utilizing R Studio Skilled in using collections in Python for manipulating and looping through different userdefined objects Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Automated different workflows which are initiated manually with Python scripts and Unix shell scripting Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL DB package Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Developed Sqoop scripts to handle change data capture for processing incremental records between new arrived and existing data in RDBMS tables Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Involved in the WebApplication development using Python HTML5 CSS3 AJAX JSON and jQuery Generated Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Cleaned data and processed thirdparty spending data into Manoeuvrable deliverables within specific format with Excel macros and python libraries such as NumPy SQL Alchemy and Matplotlib Prototype proposal for Issue Tracker website using PythonDjango connecting MySQL as Database Environment Python HTML5 CSS3 AJAX JSON jQuery MySQL NumPy SQL Alchemy Matplotlib Hadoop Pig Scripts Python Developer Qualcomm San Diego CA April 2013 to November 2014 Description Qualcomm is an American multinational semiconductor and telecommunications equipment company that designs and markets wireless telecommunications products and services It derives most of its revenue from chipmaking and the bulk of its profit from patent licensing businesses Responsibilities Used Django Framework in developing web applications to implement the model view control MVC architecture A developed analytical component using Scala and KAFKA Designed Forms Modules Views and Templates using Django and Python Installedconfiguresmaintained Apache servers on all machines production server and developmental servers The created script in python for calling REST APIs Implemented Business logic data exchange XML processing and graphics creation using Python and Django Implemented RESTful Webservices for sending and receiving the data between multiple systems Implemented Business logic data exchange XML processing and graphics creation using Python and Django Rewrite existing PythonFlask module to deliver certain format of data Created authorization scheme which enforced limitations on API clients Overwritten Django Rest Framework internals to allow for more dynamic routing Worked with SCRUM Agile methodology to ensure delivery of highquality work with monthly iterationtime box Installedconfiguredmaintained Apache servers on all machines production server and development servers Administrate Continuous Integration services Jenkins Nexus Artifactory and Repository Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Installedconfiguredmaintained MySQL database and MongoDB database Executed Backend and Database Tests using SQL queries validating the data for database editing and debugging is conducted using selenium Created a database using MySQL and wrote various queries for the extraction of data from the database Used NoSQL database Apache Cassandra to load the data in the database Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Developed Business Logic using Python on Django Web Framework DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Using jQuery and AJAX calls for transmitting JSON data objects between the front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Resolve tune maintain manage clients JBoss WebLogic WAS ATG instances on cluster connectivity producing optimal performance results in each environment throughout the life cycle Prepare Test scripts for different applications using QTP Selenium Worked with RDBMS like Oracle and MySQL databases to query and read data Transfer Object for Lookups Value List Handler for search and DAO Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and Linux server Designed and led big data algorithms using Hadoop and Java to improve forecasting and used HiveQL to generate reports Environment Python Django Bootstrap Django Flask MySQL PostgreSQL PyCharm Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS JSP JSTL Servlet Oracle Crud PL SQL JDBC UML JUnit Maven GWT Clear Case Jasper Report ILog Agile Web 20 SOA Python Developer Xylem Water Solution India Pvt Ltd Gujarat IN November 2011 to March 2013 Description Xylem Inc is a large American water technology provider enabling customers worldwide to transport treat test and efficiently use water in public utility residential commercial agricultural and industrial settings The company does business in more than 150 countries Launched in 2011 from the spinoff of the waterrelated businesses of ITT Corporation Xylem is headquartered in Rye Brook NY with 2015 revenues of 365 billion and 12500 employees worldwide Responsibilities Extensively used Python Django Framework for developing backend of applications Responsible for analyzing various crossfunctional multiplatform applications Developed a Restful service using Python Flask framework Worked with team of developers on Pythonapplications for RISK management Developed entire frontend and backend modules using Java and Python using Web Frameworks Designed and developed data management system using MySQL Generated property list for every application dynamically using Python Handled all the clientside validation using JavaScript Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Implemented the MVC pattern with Struts framework with Tiles for the presentation layer Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Created a Git repository and added the project to GitHub Developed Python batch processors to consume and produce various feeds Responsible for Creating Python APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Interacted with QA to develop test plans from highlevel design documentation Environment Python 26 Django REST Web services Struts PHP C HTML5 CSS3 JQuery API AJAX XHTML Bootstrap JavaScript XML GitHub Flash SQLite MYSQL SQL PLSQL Oracle and Windows Linux Java Developer Sparx Infosys Chicago IL April 2009 to October 2011 Description Spark Infosys is one of The Best Professional Web Designing Web Development Mobile Application Development SEO Digital Marketing Company in Hyderabad with more than 10 years of experience in designing and development of web applications and has successfully completed more than 500 projects for clients around the world Responsibilities Involved and interacted with Business analysts for conversion business requirements to development Developed Servlets and several JSPs for web development Developed several User Interface using swings and applets Designed and implemented several drags and drop functionalities for various elements using Swing Java AWT Wrote several PLSQL procedures and SQL queries to retrieve data from database Designed and developed several complex SQL queries Used explain plan for slow running queries and made necessary changes to code to expedite the query execution Established JDBC connections for data retrieval and update Involved in making GUI JSP HTML and JS and java classes using Struts Framework Used Struts framework to implement J2EE design pattern MVC Used STL Algorithms and Data structures widely to store data on accounts Order history securities etc for fast retrievalupdate in C programming Also Debugged with GDB Part of a development team for implementing Equity Order Management system to accept orders from UI FIX sendroute to Exchanges and other broker dealers and fill the trades in C on Unix and Linux platforms By using Eclipse developed and debugged the JSP and EJB components Developed automatic emailing system and JNDI to interact with the server Documented the design documents using Class Diagrams and Sequence Diagrams using the Rational Application Developer Designed and developed a webbased client using Servlets JSP Tag Libraries Java Script HTML and XML using Struts Framework Used SOA Suite ESB Mediators components for the validation filter and transformation of the document data from one xml schema to another Used SOAP Technology for exchanging the XML application using HTTP Used SVN for version control of the code and configuration file Extensively used MAVEN as build tool Configured JMS and EJB on Web Logic Server in Eclipse environment Used PLSQL tables REF cursors to process huge volume of data and used BULK collect and BULK bind for mass update as performance improvement process Environment J2EE JNDI Servlets JSP EJB JMS JDBC PLSQL Struts Framework Apache Tomcat 50 Oracle Database WebLogic JBoss 405 Apache Tomcat HTML MVC IBM Rational Rose Education Bachelors Skills SQL 8 years LINUX 8 years C 8 years XML 8 years DATABASE 7 years Python Java Additional Information TECHNICAL SKILLS Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case AccuRev GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Database Postgre SQL MS Access SQL Server MYSQL and Sybase Oracle DB2 Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis Delivery Tools Saltstack Chef Puppet",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Allstate",
        "insurance",
        "company",
        "years",
        "experience",
        "Python",
        "Developer",
        "proficient",
        "coder",
        "languages",
        "experience",
        "Design",
        "Development",
        "Implementation",
        "Python",
        "Django",
        "Flask",
        "Pyramid",
        "clientserver",
        "applications",
        "services",
        "AWS",
        "C",
        "C",
        "JAVA",
        "SQL",
        "experience",
        "Python",
        "expertise",
        "tools",
        "developments",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "Jasy",
        "NumPy",
        "SciPy",
        "matplotlib",
        "Pickle",
        "PySide",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "networks",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "com",
        "experience",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "architecture",
        "Django",
        "Flask",
        "Pyramid",
        "Zope",
        "Python",
        "web",
        "application",
        "frameworks",
        "Python",
        "Integrated",
        "Development",
        "Environments",
        "Beans",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Sublime",
        "Text",
        "expertise",
        "development",
        "applications",
        "Python",
        "Django",
        "HTML",
        "XML",
        "JS",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "jQuery",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "experience",
        "Core",
        "Java",
        "ObjectOriented",
        "Programming",
        "concepts",
        "MultiThreading",
        "Exception",
        "Handling",
        "Collections",
        "Experience",
        "JenkinsHudson",
        "Continuous",
        "Integration",
        "server",
        "configure",
        "AntMaven",
        "PEP8",
        "standard",
        "program",
        "test",
        "cases",
        "validity",
        "effectiveness",
        "code",
        "PyChecker",
        "Pylint",
        "knowledge",
        "databases",
        "Apache",
        "Cassandra",
        "Mongo",
        "DB",
        "Orient",
        "DB",
        "Experience",
        "version",
        "control",
        "systems",
        "CVS",
        "Git",
        "GitHub",
        "Amazon",
        "EC2",
        "deployment",
        "Heroku",
        "Write",
        "automation",
        "scripts",
        "Perl",
        "BASH",
        "PHP",
        "Python",
        "methodology",
        "manner",
        "components",
        "Jython",
        "language",
        "wsadmin",
        "scripts",
        "Proficient",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "tables",
        "views",
        "triggers",
        "databases",
        "Oracle",
        "DB2",
        "MySQL",
        "knowledge",
        "application",
        "server",
        "Apache",
        "Tomcat",
        "Experience",
        "Python",
        "ORM",
        "Libraries",
        "Django",
        "ORM",
        "Experience",
        "Test",
        "Driven",
        "Development",
        "Behaviour",
        "Driven",
        "Development",
        "methodologies",
        "firms",
        "enterprise",
        "projects",
        "Evaluates",
        "engineering",
        "approaches",
        "risks",
        "development",
        "plans",
        "quality",
        "cost",
        "products",
        "systems",
        "Reviews",
        "mentors",
        "coaches",
        "use",
        "standards",
        "practices",
        "lessons",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Allstate",
        "insurance",
        "company",
        "Chicago",
        "IL",
        "July",
        "Present",
        "Description",
        "Allstate",
        "Corporation",
        "insurance",
        "providers",
        "United",
        "States",
        "company",
        "lines",
        "insurance",
        "operations",
        "Canada",
        "Allstate",
        "part",
        "Sears",
        "Roebuck",
        "Co",
        "company",
        "headquarters",
        "Northfield",
        "Township",
        "Illinois",
        "Northbrook",
        "advertising",
        "campaign",
        "use",
        "hands",
        "spokesperson",
        "Dennis",
        "Haysbert",
        "Responsibilities",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashovers",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "Developed",
        "app",
        "Python",
        "PHP",
        "C",
        "Circuit",
        "parameters",
        "performance",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "arrangement",
        "Python",
        "GUI",
        "parts",
        "frontend",
        "usefulness",
        "example",
        "determination",
        "criteria",
        "test",
        "saddle",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "productivity",
        "capacity",
        "access",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "web",
        "apps",
        "Python",
        "Flask",
        "framework",
        "Angularjs",
        "Twitter",
        "Bootstrap",
        "CSS",
        "HTML",
        "framework",
        "solutions",
        "ActiveMQ",
        "unit",
        "test",
        "UTP",
        "test",
        "plans",
        "user",
        "acceptance",
        "testing",
        "UAT",
        "development",
        "modules",
        "CSV",
        "import",
        "xlsx",
        "import",
        "bulk",
        "content",
        "jQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "jQuery",
        "library",
        "Single",
        "Page",
        "Application",
        "Phases",
        "data",
        "views",
        "data",
        "server",
        "JQX",
        "widgets",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "GUI",
        "segments",
        "frontend",
        "usefulness",
        "example",
        "choice",
        "criteria",
        "test",
        "outfit",
        "testing",
        "Python",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Created",
        "PyUnit",
        "test",
        "scripts",
        "unit",
        "testing",
        "JSON",
        "REST",
        "Web",
        "services",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Couchbase",
        "Python",
        "SDK",
        "applications",
        "Couchbase",
        "Server",
        "data",
        "form",
        "JSON",
        "documents",
        "collection",
        "MongoDB",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "Docker",
        "host",
        "packages",
        "patch",
        "soup",
        "b4",
        "Data",
        "development",
        "phase",
        "unit",
        "Development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "bugs",
        "production",
        "support",
        "applications",
        "code",
        "reuse",
        "performance",
        "use",
        "design",
        "patterns",
        "team",
        "development",
        "workflow",
        "collaboration",
        "practices",
        "Git",
        "Developed",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Multithreading",
        "module",
        "networking",
        "operations",
        "race",
        "route",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Python",
        "Garbage",
        "collection",
        "CPython",
        "performance",
        "garbage",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "Apache",
        "Cassandra",
        "database",
        "Cassandra",
        "data",
        "model",
        "implementation",
        "monitoring",
        "DSE",
        "DevCentre",
        "Datastax",
        "Ops",
        "center",
        "test",
        "cases",
        "PyUnit",
        "Selenium",
        "Automation",
        "testing",
        "manipulation",
        "test",
        "scripts",
        "automation",
        "Jenkins",
        "integration",
        "Amazon",
        "EC2",
        "JIRA",
        "Bug",
        "tracking",
        "issue",
        "part",
        "AgileScrum",
        "development",
        "team",
        "TDD",
        "approach",
        "applications",
        "Environment",
        "Python",
        "Django",
        "CherryPy",
        "HTML5",
        "CSS",
        "Bootstrap",
        "JSON",
        "JavaScript",
        "AJAX",
        "webservice",
        "MongoDB",
        "MySQL",
        "SQLite",
        "Cassandra",
        "Docker",
        "AWS",
        "EC2",
        "S3",
        "PyUnit",
        "Karma",
        "Jenkins",
        "Selenium",
        "Automation",
        "Testing",
        "Python",
        "Developer",
        "PGE",
        "San",
        "Francisco",
        "CA",
        "April",
        "June",
        "Description",
        "Pacific",
        "Gas",
        "Electric",
        "Company",
        "PGE",
        "utility",
        "IOU",
        "stock",
        "Pacific",
        "Gas",
        "Electric",
        "Building",
        "San",
        "Francisco",
        "PGE",
        "gas",
        "electricity",
        "twothirds",
        "California",
        "Bakersfield",
        "Oregon",
        "border",
        "households",
        "Responsibilities",
        "project",
        "life",
        "cycle",
        "design",
        "development",
        "implementation",
        "verification",
        "validation",
        "application",
        "end",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "Django",
        "framework",
        "Python",
        "frameworks",
        "Django",
        "Flask",
        "Sanic",
        "PyUnit",
        "libraries",
        "applications",
        "MVC",
        "architecture",
        "Pyramid",
        "Zope",
        "frame",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "High",
        "Charts",
        "matplotlib",
        "data",
        "visualization",
        "sales",
        "tracking",
        "progress",
        "trends",
        "web",
        "applications",
        "employee",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Django",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "libraryTweepy",
        "JSON",
        "twitter",
        "data",
        "visualization",
        "reports",
        "business",
        "decision",
        "matplotlib",
        "library",
        "Participate",
        "design",
        "build",
        "deployment",
        "NoSQL",
        "implementations",
        "MongoDB",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "creation",
        "custom",
        "Docker",
        "container",
        "images",
        "images",
        "Google",
        "Cloud",
        "platform",
        "scale",
        "computing",
        "code",
        "reviewing",
        "GitHub",
        "pull",
        "requests",
        "code",
        "quality",
        "meetings",
        "Team",
        "Developed",
        "web",
        "traffic",
        "APIs",
        "analysis",
        "tool",
        "Flask",
        "Pandas",
        "Wrote",
        "PLSQL",
        "Stored",
        "Procedures",
        "database",
        "Packages",
        "table",
        "feature",
        "webpages",
        "type",
        "data",
        "types",
        "use",
        "JavaScript",
        "Python",
        "XML",
        "SOAP",
        "requestresponse",
        "handlers",
        "accounts",
        "trades",
        "security",
        "updates",
        "Recording",
        "Scripts",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "SoapUI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "RDBMS",
        "Oracle",
        "11g10i",
        "MySQL",
        "data",
        "Python",
        "scripts",
        "vulnerabilities",
        "SQL",
        "Queries",
        "SQL",
        "injection",
        "permission",
        "checks",
        "performance",
        "analysis",
        "scripts",
        "data",
        "database",
        "PostgreSQL",
        "integration",
        "Jenkins",
        "deployment",
        "application",
        "automation",
        "engine",
        "database",
        "TSQL",
        "procedures",
        "Jasper",
        "Reports",
        "Performed",
        "Unit",
        "testing",
        "Integration",
        "Testing",
        "GUI",
        "testing",
        "PyTest",
        "web",
        "application",
        "testing",
        "Selenium",
        "Python",
        "bindings",
        "UML",
        "diagrams",
        "Magic",
        "Draw",
        "C",
        "code",
        "fly",
        "Embedded",
        "Coder",
        "models",
        "model",
        "source",
        "code",
        "QNX",
        "Real",
        "Time",
        "mode",
        "assembly",
        "language",
        "program",
        "applications",
        "QT",
        "creator",
        "Conversion",
        "analog",
        "voltmeter",
        "help",
        "assembly",
        "language",
        "plc",
        "programming",
        "Used",
        "Selenium",
        "Library",
        "test",
        "automation",
        "process",
        "simulation",
        "requests",
        "browsers",
        "web",
        "application",
        "Tested",
        "Android",
        "app",
        "Charles",
        "debugging",
        "session",
        "maninmiddle",
        "proxy",
        "traffic",
        "flow",
        "devices",
        "user",
        "stories",
        "acceptance",
        "criteria",
        "JIRA",
        "features",
        "output",
        "requirements",
        "formats",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Collaborate",
        "Product",
        "Management",
        "User",
        "Experience",
        "experts",
        "product",
        "definition",
        "schedule",
        "scope",
        "decisions",
        "Environment",
        "Python",
        "Hadoop",
        "Django",
        "HTML5",
        "CSS",
        "Bootstrap",
        "jQuery",
        "JSON",
        "JavaScript",
        "PostgreSQL",
        "TSQL",
        "MongoDB",
        "SoapUI",
        "Docker",
        "Oracle",
        "Charles",
        "Web",
        "Debugging",
        "Ansible",
        "MySQL",
        "Google",
        "Cloud",
        "Amazon",
        "S3",
        "Bugzilla",
        "JIRA",
        "Python",
        "Developer",
        "Santander",
        "Bank",
        "Boston",
        "MA",
        "December",
        "March",
        "Description",
        "Santander",
        "Bank",
        "N",
        "A",
        "Sovereign",
        "Bank",
        "subsidiary",
        "Santander",
        "Group",
        "Boston",
        "market",
        "United",
        "States",
        "deposits",
        "banking",
        "offices",
        "ATMs",
        "people",
        "array",
        "services",
        "products",
        "banking",
        "mortgages",
        "banking",
        "cash",
        "management",
        "credit",
        "card",
        "capital",
        "markets",
        "trust",
        "wealth",
        "management",
        "insurance",
        "Responsibilities",
        "UI",
        "Dashboard",
        "application",
        "D3",
        "C3",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "Developed",
        "Python",
        "scripts",
        "retrieval",
        "parsing",
        "reporting",
        "configuration",
        "parameters",
        "Network",
        "Devices",
        "customer",
        "networks",
        "user",
        "interface",
        "design",
        "development",
        "JSP",
        "Servlet",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Wrote",
        "Python",
        "scripts",
        "data",
        "files",
        "Linux",
        "server",
        "configuration",
        "Python",
        "template",
        "tool",
        "Modified",
        "databases",
        "SQL",
        "Python",
        "Perl",
        "code",
        "data",
        "Python",
        "programs",
        "SQL",
        "queries",
        "database",
        "data",
        "systems",
        "tests",
        "user",
        "interface",
        "components",
        "modules",
        "Kendo",
        "UI",
        "controls",
        "Grid",
        "controls",
        "chart",
        "controls",
        "client",
        "admin",
        "tool",
        "features",
        "support",
        "internalization",
        "support",
        "customer",
        "service",
        "incorporation",
        "programming",
        "item",
        "machine",
        "arrangements",
        "Python",
        "number",
        "Twitter",
        "clients",
        "information",
        "item",
        "Pandas",
        "API",
        "information",
        "time",
        "arrangement",
        "frame",
        "east",
        "timestamp",
        "information",
        "control",
        "recovery",
        "time",
        "arrangement",
        "information",
        "information",
        "control",
        "Pandas",
        "library",
        "Analysis",
        "R",
        "Studio",
        "collections",
        "Python",
        "objects",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "workflows",
        "Python",
        "scripts",
        "Unix",
        "shell",
        "scripting",
        "Python",
        "unit",
        "testing",
        "modules",
        "unit",
        "test",
        "custom",
        "frameworks",
        "Agile",
        "Software",
        "Development",
        "methodologies",
        "Wrote",
        "MYSQL",
        "database",
        "Python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "DB",
        "package",
        "documentation",
        "Hadoop",
        "Clusters",
        "Hive",
        "queries",
        "Pig",
        "Scripts",
        "Developed",
        "Sqoop",
        "scripts",
        "change",
        "data",
        "capture",
        "records",
        "data",
        "tables",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "WebApplication",
        "development",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "jQuery",
        "Python",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "SQL",
        "queries",
        "Functions",
        "Cursors",
        "Triggers",
        "client",
        "requirements",
        "data",
        "thirdparty",
        "spending",
        "data",
        "deliverables",
        "format",
        "Excel",
        "macros",
        "python",
        "libraries",
        "NumPy",
        "SQL",
        "Alchemy",
        "Matplotlib",
        "Prototype",
        "proposal",
        "Issue",
        "Tracker",
        "website",
        "PythonDjango",
        "MySQL",
        "Database",
        "Environment",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "jQuery",
        "MySQL",
        "NumPy",
        "SQL",
        "Alchemy",
        "Matplotlib",
        "Hadoop",
        "Pig",
        "Scripts",
        "Python",
        "Developer",
        "Qualcomm",
        "San",
        "Diego",
        "CA",
        "April",
        "November",
        "Description",
        "Qualcomm",
        "semiconductor",
        "telecommunications",
        "equipment",
        "company",
        "telecommunications",
        "products",
        "services",
        "revenue",
        "bulk",
        "profit",
        "patent",
        "licensing",
        "businesses",
        "Responsibilities",
        "Django",
        "Framework",
        "web",
        "applications",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "component",
        "Scala",
        "KAFKA",
        "Forms",
        "Modules",
        "Views",
        "Templates",
        "Django",
        "Python",
        "Apache",
        "servers",
        "machines",
        "production",
        "server",
        "servers",
        "script",
        "python",
        "REST",
        "APIs",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Python",
        "Django",
        "RESTful",
        "Webservices",
        "data",
        "systems",
        "Business",
        "logic",
        "data",
        "exchange",
        "XML",
        "processing",
        "graphics",
        "creation",
        "Python",
        "Django",
        "Rewrite",
        "PythonFlask",
        "module",
        "format",
        "data",
        "authorization",
        "scheme",
        "limitations",
        "API",
        "clients",
        "Overwritten",
        "Django",
        "Rest",
        "Framework",
        "internals",
        "routing",
        "SCRUM",
        "methodology",
        "delivery",
        "highquality",
        "work",
        "iterationtime",
        "box",
        "Installedconfiguredmaintained",
        "Apache",
        "servers",
        "machines",
        "production",
        "server",
        "development",
        "servers",
        "Administrate",
        "Continuous",
        "Integration",
        "services",
        "Jenkins",
        "Nexus",
        "Artifactory",
        "Repository",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "MySQL",
        "database",
        "MongoDB",
        "database",
        "Executed",
        "Backend",
        "Database",
        "Tests",
        "SQL",
        "queries",
        "data",
        "database",
        "editing",
        "debugging",
        "selenium",
        "database",
        "MySQL",
        "queries",
        "extraction",
        "data",
        "database",
        "NoSQL",
        "database",
        "Apache",
        "Cassandra",
        "data",
        "database",
        "C",
        "SOAP",
        "web",
        "service",
        "application",
        "XML",
        "Requests",
        "scheduler",
        "option",
        "things",
        "times",
        "Developed",
        "Business",
        "Logic",
        "Python",
        "Django",
        "Web",
        "Framework",
        "DB2",
        "SQL",
        "Procedures",
        "UNIX",
        "Shell",
        "Scripts",
        "Data",
        "ImportExport",
        "Conversions",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Resolve",
        "tune",
        "manage",
        "clients",
        "JBoss",
        "WebLogic",
        "ATG",
        "instances",
        "cluster",
        "connectivity",
        "performance",
        "results",
        "environment",
        "life",
        "cycle",
        "Prepare",
        "Test",
        "scripts",
        "applications",
        "QTP",
        "Selenium",
        "RDBMS",
        "Oracle",
        "MySQL",
        "data",
        "Transfer",
        "Object",
        "Lookups",
        "Value",
        "List",
        "Handler",
        "search",
        "DAO",
        "AWS",
        "EC2",
        "instances",
        "security",
        "groups",
        "ports",
        "source",
        "events",
        "python",
        "scripts",
        "Linux",
        "server",
        "data",
        "algorithms",
        "Hadoop",
        "Java",
        "forecasting",
        "HiveQL",
        "reports",
        "Environment",
        "Python",
        "Django",
        "Bootstrap",
        "Django",
        "Flask",
        "PostgreSQL",
        "PyCharm",
        "Apache",
        "CXF",
        "Rest",
        "Angularjs",
        "Backbonejs",
        "Nodejs",
        "Bootstrap",
        "Coherence",
        "Mongo",
        "DB",
        "HTML",
        "CSS",
        "JSP",
        "JSTL",
        "Servlet",
        "Oracle",
        "Crud",
        "PL",
        "SQL",
        "JDBC",
        "UML",
        "JUnit",
        "Maven",
        "GWT",
        "Clear",
        "Case",
        "Jasper",
        "Report",
        "ILog",
        "Agile",
        "Web",
        "SOA",
        "Python",
        "Developer",
        "Xylem",
        "Water",
        "Solution",
        "India",
        "Pvt",
        "Ltd",
        "Gujarat",
        "November",
        "March",
        "Description",
        "Xylem",
        "Inc",
        "water",
        "technology",
        "provider",
        "customers",
        "treat",
        "test",
        "water",
        "utility",
        "settings",
        "company",
        "business",
        "countries",
        "spinoff",
        "businesses",
        "ITT",
        "Corporation",
        "Xylem",
        "Rye",
        "Brook",
        "NY",
        "revenues",
        "employees",
        "Responsibilities",
        "Python",
        "Django",
        "Framework",
        "backend",
        "applications",
        "multiplatform",
        "applications",
        "service",
        "Python",
        "Flask",
        "framework",
        "team",
        "developers",
        "Pythonapplications",
        "RISK",
        "management",
        "frontend",
        "modules",
        "Java",
        "Python",
        "Web",
        "Frameworks",
        "data",
        "management",
        "system",
        "MySQL",
        "property",
        "list",
        "application",
        "Python",
        "validation",
        "JavaScript",
        "PyQt",
        "functionality",
        "filtering",
        "columns",
        "customers",
        "transactions",
        "statements",
        "navigation",
        "rules",
        "application",
        "page",
        "MVC",
        "pattern",
        "Struts",
        "framework",
        "Tiles",
        "presentation",
        "layer",
        "integration",
        "system",
        "Git",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Python",
        "Django",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Bootstrap",
        "Angularjs",
        "mechanism",
        "HTML",
        "page",
        "layout",
        "Git",
        "repository",
        "project",
        "Python",
        "batch",
        "processors",
        "feeds",
        "Python",
        "APIs",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "QA",
        "test",
        "plans",
        "highlevel",
        "design",
        "documentation",
        "Environment",
        "Python",
        "Django",
        "REST",
        "Web",
        "services",
        "Struts",
        "PHP",
        "C",
        "HTML5",
        "CSS3",
        "JQuery",
        "API",
        "AJAX",
        "XHTML",
        "Bootstrap",
        "JavaScript",
        "XML",
        "GitHub",
        "Flash",
        "SQLite",
        "MYSQL",
        "SQL",
        "PLSQL",
        "Oracle",
        "Windows",
        "Linux",
        "Java",
        "Developer",
        "Sparx",
        "Infosys",
        "Chicago",
        "IL",
        "April",
        "October",
        "Description",
        "Spark",
        "Infosys",
        "Best",
        "Professional",
        "Web",
        "Designing",
        "Web",
        "Development",
        "Mobile",
        "Application",
        "Development",
        "SEO",
        "Digital",
        "Marketing",
        "Company",
        "Hyderabad",
        "years",
        "experience",
        "designing",
        "development",
        "web",
        "applications",
        "projects",
        "clients",
        "world",
        "Responsibilities",
        "Business",
        "analysts",
        "conversion",
        "business",
        "requirements",
        "Developed",
        "Servlets",
        "JSPs",
        "web",
        "development",
        "User",
        "Interface",
        "swings",
        "applets",
        "drags",
        "functionalities",
        "elements",
        "Swing",
        "Java",
        "AWT",
        "PLSQL",
        "procedures",
        "SQL",
        "data",
        "database",
        "SQL",
        "queries",
        "plan",
        "running",
        "queries",
        "changes",
        "query",
        "execution",
        "JDBC",
        "connections",
        "data",
        "retrieval",
        "GUI",
        "JSP",
        "HTML",
        "JS",
        "classes",
        "Struts",
        "Framework",
        "Struts",
        "framework",
        "J2EE",
        "design",
        "pattern",
        "MVC",
        "STL",
        "Algorithms",
        "Data",
        "structures",
        "data",
        "accounts",
        "Order",
        "history",
        "securities",
        "retrievalupdate",
        "C",
        "programming",
        "GDB",
        "Part",
        "development",
        "team",
        "Equity",
        "Order",
        "Management",
        "system",
        "orders",
        "UI",
        "FIX",
        "sendroute",
        "Exchanges",
        "broker",
        "dealers",
        "trades",
        "C",
        "Unix",
        "Linux",
        "platforms",
        "Eclipse",
        "JSP",
        "EJB",
        "components",
        "emailing",
        "system",
        "JNDI",
        "server",
        "design",
        "documents",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "Rational",
        "Application",
        "Developer",
        "client",
        "Servlets",
        "JSP",
        "Tag",
        "Libraries",
        "Java",
        "Script",
        "HTML",
        "XML",
        "Struts",
        "Framework",
        "SOA",
        "Suite",
        "ESB",
        "Mediators",
        "components",
        "validation",
        "filter",
        "transformation",
        "document",
        "data",
        "xml",
        "schema",
        "SOAP",
        "Technology",
        "XML",
        "application",
        "HTTP",
        "SVN",
        "version",
        "control",
        "code",
        "configuration",
        "file",
        "MAVEN",
        "build",
        "tool",
        "Configured",
        "JMS",
        "EJB",
        "Web",
        "Logic",
        "Server",
        "Eclipse",
        "environment",
        "PLSQL",
        "REF",
        "cursors",
        "volume",
        "data",
        "BULK",
        "collect",
        "bind",
        "mass",
        "update",
        "performance",
        "improvement",
        "process",
        "Environment",
        "J2EE",
        "JNDI",
        "Servlets",
        "JSP",
        "EJB",
        "JMS",
        "JDBC",
        "PLSQL",
        "Struts",
        "Framework",
        "Apache",
        "Tomcat",
        "Oracle",
        "Database",
        "WebLogic",
        "JBoss",
        "Apache",
        "Tomcat",
        "HTML",
        "MVC",
        "IBM",
        "Rational",
        "Rose",
        "Education",
        "Bachelors",
        "Skills",
        "SQL",
        "years",
        "LINUX",
        "years",
        "C",
        "years",
        "XML",
        "years",
        "DATABASE",
        "years",
        "Python",
        "Java",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Languages",
        "C",
        "C",
        "Python",
        "JavaScript",
        "PHP",
        "XML",
        "SQL",
        "SCM",
        "Tools",
        "Subversion",
        "Perforce",
        "JenkinsHudson",
        "Sonar",
        "Jira",
        "TFS",
        "Confluence",
        "Clear",
        "Case",
        "AccuRev",
        "GIT",
        "GitHub",
        "Build",
        "Tools",
        "Ant",
        "Maven",
        "Operating",
        "Systems",
        "UNIX",
        "Linux",
        "Solaris",
        "Windows",
        "DOS",
        "VMware",
        "Database",
        "Postgre",
        "SQL",
        "MS",
        "Access",
        "SQL",
        "Server",
        "MYSQL",
        "Sybase",
        "Oracle",
        "DB2",
        "Application",
        "Servers",
        "Web",
        "logic",
        "JBoss",
        "IBM",
        "WebSphere",
        "Apache",
        "tomcat55",
        "IIS",
        "Issue",
        "Tracking",
        "Tools",
        "ATLASSIAN",
        "JIRA",
        "BUGZILLA",
        "Mantis",
        "Delivery",
        "Tools",
        "Saltstack",
        "Chef",
        "Puppet"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:07:45.372208",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Allstate insurance company Having 8 years of experience as a Python Developer proficient coder in multiple languages and experience in Design Development Implementation of Python Django Flask Pyramid and clientserver technologiesbased applications RESTful services AWS C C JAVA and SQL Skilled experience in Python with proven expertise in using new tools and technical developments libraries used libraries Beautiful Soup Jasy NumPy SciPy matplotlib Pickle PySide pythontwitter Pandas data frame networks urllib2 MySQL dB for database connectivity to drive com Good experience in developing web applications implementing Model View Control architecture using Django Flask Pyramid and Zope Python web application frameworks Experienced in working with various Python Integrated Development Environments like Net Beans PyCharm PyScripter Spyder PyStudio PyDev and Sublime Text Strong expertise in development of webbased applications using Python Django HTML XML Angular JS CSS DHTML JavaScript JSON and jQuery Having experienced in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Sound experience in Core Java and ObjectOriented Programming using concepts like MultiThreading Exception Handling and Collections Experience in using JenkinsHudson as a Continuous Integration server to configure with AntMaven Strongly follow PEP8 coding standard and test a program by running it across test cases to ensure validity and effectiveness of code using PyChecker and Pylint Having good knowledge in using NoSQL databases like Apache Cassandra 12 20 and 21 and Mongo DB 26 24 Orient DB Experience in using various version control systems like CVS Git GitHub and Amazon EC2 and deployment using Heroku Write maintain and improve automation scripts in Perl BASH PHP Python The methodology used here will be to introduce in a simple and abbreviated manner the components of the Jython language most likely to be used in wsadmin scripts Proficient in writing SQL Queries Stored procedures functions packages tables views triggers using relational databases like Oracle DB2 and MySQL Good knowledge in working with application server Apache Tomcat 60 70 80 Experience in working with Python ORM Libraries including Django ORM Experience in Test Driven Development and Behaviour Driven Development methodologies for consulting firms and enterprise projects Evaluates engineering approaches and risks to produce development plans that ensure high quality low cost products and systems Reviews mentors and coaches while defining and promoting use of standards best practices and lessons learned Work Experience Python Developer Allstate insurance company Chicago IL July 2017 to Present Description The Allstate Corporation is the one of the largest insurance providers in the United States and one of the largest that is publicly held The company also has personal lines insurance operations in Canada Allstate was founded in 1931 as part of Sears Roebuck and Co and was spun off in 1993 The company has had its headquarters in Northfield Township Illinois near Northbrook since 1967Its current advertising campaign in use since 2004 asks Are you in good hands The corporate spokesperson is Dennis Haysbert Responsibilities Created Business Logic using Python to create Planning and Tracking functions Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashovers stored in the Django models Also created XML with Django to be used by the Flash Developed multithreaded standalone app in Python PHP C to view Circuit parameters and performance Involved in building database Model APIs and Views using Python so as to manufacture an intuitive electronic arrangement Used Python based GUI parts for the frontend usefulness for example determination criteria made test saddle to empower exhaustive testing using Python Used Amazon Web Services AWS for enhanced productivity of capacity and quick access Designed and managed API system deployment using fast http server and Amazon AWS architecture Developed tools using Python Shell scripting XML to automate some of the menial tasks Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Developed internal auxiliary web apps using Python Flask framework with Angularjs and Twitter Bootstrap CSS HTML framework Worked on messaging solutions like ActiveMQ and worked on unit test plans UTP integrated test plans ITP and user acceptance testing UAT and involved in development of main modules like CSV import xlsx import bulk content upload Used jQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Also Used jQuery as library to create a Single Page Application Phases which can bind data to specific views and synchronize data with server and Worked with JQX widgets functionality Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Used Python based GUI segments for the frontend usefulness for example choice criteria Created test outfit to empower exhaustive testing using Python Used Django configuration to manage URLs and application parameters Utilized PyQt to provide GUI for the user to create modify and view reports based on client data Created PyUnit test scripts and used for unit testing Worked with JSON based REST Web services Developed Merge jobs in Python to extract and load data into MySQL database Used Couchbase Python SDK to build applications that use Couchbase Server Stored the data in the form of JSON structurebased documents stored in a collection using MongoDB Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Used advanced packages like Mock patch and Beautiful soup b4 in extracting the Data during development phase and perform unit testing Development of Python APIs to dump the array structures in the Processor at the failure point for debugging Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Creating RESTful web services for Catalog and Pricing with Django MVT MySQL and MongoDB Fixed bugs providing production support enhanced applications by improving code reuse and performance by making effective use of various design patterns Collaborated within a team using an agile development workflow and widelyaccepted collaboration practices using Git Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Implemented Multithreading module and complex networking operations like race route SMTP mail server and web server Using Python Implemented Garbage collection with CPython to enhance the performance by garbage collecting the older generated objects Automated RabbitMQ cluster installations and configuration using PythonBash Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE DevCentre Datastax Ops center Written test cases using PyUnit and Selenium Automation testing for better manipulation of test scripts Used automation Jenkins for continuous integration on Amazon EC2 Used JIRA for Bug tracking and issue tracking Worked as part of an AgileScrum based development team and exposed to TDD approach in developing applications Environment Python 3427 Django 17 CherryPy HTML5 CSS Bootstrap JSON JavaScript AJAX RESTful webservice MongoDB MySQL SQLite Cassandra Docker AWS EC2 S3 PyUnit Karma Jenkins Selenium Automation Testing Python Developer PGE San Francisco CA April 2016 to June 2017 Description The Pacific Gas and Electric Company PGE is an investorowned electric utility IOU with publicly traded stock that is headquartered in the Pacific Gas Electric Building in San Francisco PGE provides natural gas and electricity to most of the northern twothirds of California from Bakersfield almost to the Oregon border which represents 52 million households Responsibilities Involved in the project life cycle including design development and implementation and verification and validation Developed the application front end using HTML CSS JavaScript Bootstrap Django framework Extensively utilized Python frameworks like Django Flask Sanic PyUnit and libraries like matplotlib Designed applications implementing MVC architecture in Pyramid Zope frame works Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts matplotlib for data visualization of sales tracking progress identifying trends Developed dataaccessible web applications for employee accesses using HTML5 CSS3 JavaScript and Django Fetched twitter feeds for certain important keyword using pythontwitter libraryTweepy Used JSON to store the twitter data which was further represented using matplotlib visualization and generated graphical reports for business decision using matplotlib library Participate in the design build and deployment of NoSQL implementations like MongoDB Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Worked on creation of custom Docker container images tagging and pushing the images Integrated to Google Cloud platform for large scale computing workloads Extensive code reviewing using GitHub pull requests improved code quality also conducted meetings among Team Developed serverbased web traffic using RESTful APIs statistical analysis tool using Flask Pandas Wrote PLSQL views Stored Procedures database triggers Packages Implemented table sorting feature on the webpages regardless of the type of data types with the use of JavaScript Enhanced by adding Python XML SOAP requestresponse handlers to add accounts modify trades and security updates Recording of Scripts Web Services HTML using Vugen and SoapUI and script validation through co correlations parameterizations and other methods Worked with RDBMS like Oracle 11g10i and MySQL databases to query and read data Developed various Python scripts to find vulnerabilities with SQL Queries by doing SQL injection permission checks and performance analysis Developed scripts to migrate data from proprietary database to PostgreSQL Implemented continuous integration using Jenkins and involved in the deployment of application with Ansible automation engine Created backend database TSQL stored procedures and Jasper Reports Performed Unit testing Integration Testing GUI testing using PyTest and web application testing using Selenium Python bindings Designed many UML diagrams in Magic Draw for generating C code on the fly Used Embedded Coder for translating models into model source code and executable in QNX Real Time Operating SystemRTOS singletasking mode Writing the assembly language program and debugging Developed applications in QT creator Conversion of the analog to a digital voltmeter with the help assembly language and plc programming Used Selenium Library to write fully functioning test automation process that allowed the simulation of submitting different requests from multiple browsers to web application Debugged and Tested Android app using Charles debugging session as maninmiddle proxy and monitored traffic flow through the devices logged user stories and acceptance criteria in JIRA for features by evaluating output requirements and formats Executing regression tests on each release and verified bugs found from automation test in Bugzilla Collaborate with Product Management and User Experience experts regarding product definition schedule scope and projectrelated decisions Environment Python 3427 Hadoop Django 17 HTML5 CSS Bootstrap jQuery JSON JavaScript PostgreSQL TSQL MongoDB SoapUI Docker Oracle 11g10i Charles Web Debugging Ansible MySQL Google Cloud Amazon AWS S3 Bugzilla JIRA Python Developer Santander Bank Boston MA December 2014 to March 2016 Description Santander Bank N A formerly Sovereign Bank is a wholly owned subsidiary of Spanish Santander Group It is based in Boston and its principal market is the northeastern United States It has 547 billion in deposits operates about 650 retail banking offices and over 2000 ATMs and employs approximately 9800 people It offers an array of financial services and products including retail banking mortgages corporate banking cash management credit card capital markets trust and wealth management and insurance Responsibilities Designed and Developed UI for creating Dashboard application using AngularJS D3 C3 HTML CSS Bootstrap JavaScript and jQuery Developed and implemented Python scripts to automate retrieval parsing and reporting of configuration parameters from Network Devices connected to customer networks Involved in user interface design and development using JSP Servlet HTML5 CSS3 and JavaScript Wrote and tested Python scripts to create new data files for Linux server configuration using a Python template tool Modified controlling databases using SQL generated via Python and Perl code collected and analyzed data with Python programs using SQL queries from the database of data collected from the systems under tests Developed new user interface components for different modules using Kendo UI with various controls including Grid controls and chart controls etc Updated the client admin tool to have the new features like support for internalization support for customer service etc Tested and assessed comes about for incorporation into programming item Designed and sent machine learning arrangements in Python to group a large number of already unclassified Twitter clients into center information item Used Pandas API to put the information as time arrangement and forbidden frame for east timestamp information control and recovery to deal with time arrangement information and do information control Used Pandas library for factual Analysis utilizing R Studio Skilled in using collections in Python for manipulating and looping through different userdefined objects Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Automated different workflows which are initiated manually with Python scripts and Unix shell scripting Used Python unit and functional testing modules such as unit test unittest2 mock and custom frameworks inline with Agile Software Development methodologies Wrote and executed various MYSQL database queries from Python using PythonMySQL connector and MySQL DB package Created and maintained Technical documentation for launching Hadoop Clusters and for executing Hive queries and Pig Scripts Developed Sqoop scripts to handle change data capture for processing incremental records between new arrived and existing data in RDBMS tables Managed datasets using Panda data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector and MySQL dB package to retrieve information Involved in the WebApplication development using Python HTML5 CSS3 AJAX JSON and jQuery Generated Python Django forms to record data of online users and used PyTest for writing test cases Implemented and modified various SQL queries and Functions Cursors and Triggers as per the client requirements Cleaned data and processed thirdparty spending data into Manoeuvrable deliverables within specific format with Excel macros and python libraries such as NumPy SQL Alchemy and Matplotlib Prototype proposal for Issue Tracker website using PythonDjango connecting MySQL as Database Environment Python HTML5 CSS3 AJAX JSON jQuery MySQL NumPy SQL Alchemy Matplotlib Hadoop Pig Scripts Python Developer Qualcomm San Diego CA April 2013 to November 2014 Description Qualcomm is an American multinational semiconductor and telecommunications equipment company that designs and markets wireless telecommunications products and services It derives most of its revenue from chipmaking and the bulk of its profit from patent licensing businesses Responsibilities Used Django Framework in developing web applications to implement the model view control MVC architecture A developed analytical component using Scala and KAFKA Designed Forms Modules Views and Templates using Django and Python Installedconfiguresmaintained Apache servers on all machines production server and developmental servers The created script in python for calling REST APIs Implemented Business logic data exchange XML processing and graphics creation using Python and Django Implemented RESTful Webservices for sending and receiving the data between multiple systems Implemented Business logic data exchange XML processing and graphics creation using Python and Django Rewrite existing PythonFlask module to deliver certain format of data Created authorization scheme which enforced limitations on API clients Overwritten Django Rest Framework internals to allow for more dynamic routing Worked with SCRUM Agile methodology to ensure delivery of highquality work with monthly iterationtime box Installedconfiguredmaintained Apache servers on all machines production server and development servers Administrate Continuous Integration services Jenkins Nexus Artifactory and Repository Designed and Developed DB2 SQL Procedures and UNIX Shell Scripts for Data ImportExport and Conversions Installedconfiguredmaintained MySQL database and MongoDB database Executed Backend and Database Tests using SQL queries validating the data for database editing and debugging is conducted using selenium Created a database using MySQL and wrote various queries for the extraction of data from the database Used NoSQL database Apache Cassandra to load the data in the database Developed a multithreaded C SOAP web service application to process XML Requests with a scheduler option to run things at dedicated times Developed Business Logic using Python on Django Web Framework DB2 SQL Procedures and UNIX Shell Scripts were designed and developed for Data ImportExport and Conversions Using jQuery and AJAX calls for transmitting JSON data objects between the front end and controllers and Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Resolve tune maintain manage clients JBoss WebLogic WAS ATG instances on cluster connectivity producing optimal performance results in each environment throughout the life cycle Prepare Test scripts for different applications using QTP Selenium Worked with RDBMS like Oracle and MySQL databases to query and read data Transfer Object for Lookups Value List Handler for search and DAO Worked on AWS using EC2 instances setting security groups ports source handling events between python scripts and Linux server Designed and led big data algorithms using Hadoop and Java to improve forecasting and used HiveQL to generate reports Environment Python Django Bootstrap Django Flask MySQL PostgreSQL PyCharm Apache CXF Rest Angularjs Backbonejs Nodejs Bootstrap Coherence Mongo DB HTML CSS JSP JSTL Servlet Oracle Crud PL SQL JDBC UML JUnit Maven GWT Clear Case Jasper Report ILog Agile Web 20 SOA Python Developer Xylem Water Solution India Pvt Ltd Gujarat IN November 2011 to March 2013 Description Xylem Inc is a large American water technology provider enabling customers worldwide to transport treat test and efficiently use water in public utility residential commercial agricultural and industrial settings The company does business in more than 150 countries Launched in 2011 from the spinoff of the waterrelated businesses of ITT Corporation Xylem is headquartered in Rye Brook NY with 2015 revenues of 365 billion and 12500 employees worldwide Responsibilities Extensively used Python Django Framework for developing backend of applications Responsible for analyzing various crossfunctional multiplatform applications Developed a Restful service using Python Flask framework Worked with team of developers on Pythonapplications for RISK management Developed entire frontend and backend modules using Java and Python using Web Frameworks Designed and developed data management system using MySQL Generated property list for every application dynamically using Python Handled all the clientside validation using JavaScript Used PyQt for the functionality filtering of columns helping customers to effectively view their transactions and statements Implemented navigation rules for the application and page Implemented the MVC pattern with Struts framework with Tiles for the presentation layer Developed a fully automated continuous integration system using Git Jenkins MySQL and custom tools developed in Python and Bash Used Python and Django to interface with the JQuery UI and manage the storage and deletion of content Also used Bootstrap and Angularjs as a mechanism to manage and organize the HTML page layout Created a Git repository and added the project to GitHub Developed Python batch processors to consume and produce various feeds Responsible for Creating Python APIs Developed tools using Python Shell scripting XML to automate some of the menial tasks Interacted with QA to develop test plans from highlevel design documentation Environment Python 26 Django REST Web services Struts PHP C HTML5 CSS3 JQuery API AJAX XHTML Bootstrap JavaScript XML GitHub Flash SQLite MYSQL SQL PLSQL Oracle and Windows Linux Java Developer Sparx Infosys Chicago IL April 2009 to October 2011 Description Spark Infosys is one of The Best Professional Web Designing Web Development Mobile Application Development SEO Digital Marketing Company in Hyderabad with more than 10 years of experience in designing and development of web applications and has successfully completed more than 500 projects for clients around the world Responsibilities Involved and interacted with Business analysts for conversion business requirements to development Developed Servlets and several JSPs for web development Developed several User Interface using swings and applets Designed and implemented several drags and drop functionalities for various elements using Swing Java AWT Wrote several PLSQL procedures and SQL queries to retrieve data from database Designed and developed several complex SQL queries Used explain plan for slow running queries and made necessary changes to code to expedite the query execution Established JDBC connections for data retrieval and update Involved in making GUI JSP HTML and JS and java classes using Struts Framework Used Struts framework to implement J2EE design pattern MVC Used STL Algorithms and Data structures widely to store data on accounts Order history securities etc for fast retrievalupdate in C programming Also Debugged with GDB Part of a development team for implementing Equity Order Management system to accept orders from UI FIX sendroute to Exchanges and other broker dealers and fill the trades in C on Unix and Linux platforms By using Eclipse developed and debugged the JSP and EJB components Developed automatic emailing system and JNDI to interact with the server Documented the design documents using Class Diagrams and Sequence Diagrams using the Rational Application Developer Designed and developed a webbased client using Servlets JSP Tag Libraries Java Script HTML and XML using Struts Framework Used SOA Suite ESB Mediators components for the validation filter and transformation of the document data from one xml schema to another Used SOAP Technology for exchanging the XML application using HTTP Used SVN for version control of the code and configuration file Extensively used MAVEN as build tool Configured JMS and EJB on Web Logic Server in Eclipse environment Used PLSQL tables REF cursors to process huge volume of data and used BULK collect and BULK bind for mass update as performance improvement process Environment J2EE JNDI Servlets JSP EJB JMS JDBC PLSQL Struts Framework Apache Tomcat 50 Oracle Database WebLogic JBoss 405 Apache Tomcat HTML MVC IBM Rational Rose Education Bachelors Skills SQL 8 years LINUX 8 years C 8 years XML 8 years DATABASE 7 years Python Java Additional Information TECHNICAL SKILLS Languages C C Python JavaScript PHP XML JAVA SQL SCM Tools Subversion Perforce JenkinsHudson Sonar Jira TFS Confluence Clear Case AccuRev GIT GitHub Build Tools Ant Maven Make Operating Systems UNIX Linux Solaris Windows DOS VMware Database Postgre SQL MS Access SQL Server MYSQL and Sybase Oracle DB2 Application Servers Web logic JBoss IBM WebSphere Apache tomcat55 IIS Issue Tracking Tools ATLASSIAN JIRA BUGZILLA Mantis Delivery Tools Saltstack Chef Puppet",
    "unique_id": "d07a53b2-e0fe-49b9-b6b5-6e4003b0122c"
}