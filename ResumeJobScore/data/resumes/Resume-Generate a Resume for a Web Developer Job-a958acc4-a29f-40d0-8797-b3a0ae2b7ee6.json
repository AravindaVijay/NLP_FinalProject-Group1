{
    "clean_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer Wells Fargo Seattle WA Over 8years of rich indigenous experience in designing developing and testing of distributed applications internetintranet base database J2EE and SOA compliant applications Experienced in Java Webbased Desktop Based Developmentwith Concepts of Object Oriented Design OOD Object Oriented Analysis OOA Object Oriented Programming OOP and its implementation Experienced in implementing clientserver business applications using MVC SOA architecture and MicroServices Experience in AgileScrum Pair Programming Test Driven Development TDD and Waterfall model Expertise in Core java concepts likeCollections Generics Multithreading Serialization and Exception Handling As a Java Full stack SME has expertise in developing Enterprise Applications using Java and J2EE technologies Such as JSP Servlets EnterpriseJavaBeans RESTfulWebServices SOAPWebServices JDBC JMS JAXB SOA Experienced in Middleware persistence framework likeHibernateJPA JDBC iBatisfor mapping Java POJO classesObjects with database and using Hibernate Query Language HQL Experienced in front End technologies such asHTML5 CSS3 JQuery JavaScriptReactJS NodeJS AngularJS ExtJS Bootstrap VBScript Perl AJAX Adobe Flex Action Script JSONXSD XSTL Tiles Tag Libraries Experienced in developing an enterprise applications by writing server side code with NodeJS and Express Framework a database to store and retrieve data with MongoDB and frontend web pages designing with ReactJS Experienced in creating dashboards reports using BackboneJS Experience in developing Mobile web applications using JQuery Mobile and phonegap for Smartphones Tablets Experience in working with Service Oriented Architecture which includes Universal Description and Discovery Integration UDDI lookups and Web Services Description Language WSDL using SOAP protocol Expertise in XML technologies such as DTDSchemas DOM SAX and XSLT Extensively used different Tag Libraries like JSF Tags Struts Tags JSTL Spring Tags Display Tag XMLXSD Experienced in frameworks Spring MVC Jakarta struts framework JSF spring and Hibernate Strong experience in Spring Framework including SpringCoreIOC SpringSecurity and implement the authentication authorization and accesscontrol features by using SpringSecurity Experienced in Distributed Transaction Management system with Spring JTA Based on Atomikos Experienced in Working with Spring JDBC Template JMS Template EMS and JavaBeans Developed applications using latest technologies like EJB30 Spring2x3x4x Hibernate324x and REST based Web services axis20 JAX WS 20 Rule Engines Drools41 ILOG XML API and tools Extensive experience in using NPM BOWER Grunt and Gulp for build process Proficient in taking care of web and application servers in making Domain configuring connection pool JMS Deploying applications on WebLogic WebSphere ApacheTomcat Glassfish and JBoss Experienced in developing UNIXshell scripts for batch processing Experienced in developing modern applicationsusingMEAN Stack MongoDB ExpressJS AngularJS and NodeJS Experienced on ELK Stack Elastic Search Logstash and Kibana Experienced in working with multiple databases like Oracle 10g11g SQL Server MySQL DB2 NOSQL DB Worked on Mule soft studio with Sound knowledge on Enterprise Service Bus Experienced in performing unit testing using JUnitframework with Mockito and Easymock integration and deployment of applications using tools such as ANT and Maven debugging through log4j Experienced in creating and updating Java test scripts using Selenium IDE and Selenium Webdriver Experience in creating test suites using Jasmine Karma and worked on tools NPM Bower Gruntand Testem Involved in BPM business process management tools like JBPM and Adobe LiveCycle Experience in using various AWS components like EC2 for virtual servers S3 and Glacier for storing objects EBS CloudFront Elasticcache IAM CloudWatch CloudFormation and DynamoDB Experience in Microsoft Azure Cloud Computing development and support Strong Knowledge in scripting technologies like Python Scala Shell GroovyonGrails and Perl Expertise in design and development of various web applications using technologies Scala Play framework Experienced in Development testing and deployment of enterprise applications on WindowsUNIX platforms using IDEs such as Eclipse Rational Application Developer NetBeansSpring Tool Suite STSIntelliJ 14x15x Experience in different version controllingtracking systems Subversion CVSSVNGITand Rational Clear Case Experienced in Splunk Log Management Creating dashboardsmonitoringreporting Email Notification to Users for threshold limit Experience working in Kafka and Camel with indepth understanding of Scala Experience with messaging frameworks  RabbitMQ Kafka Good knowledge of SAPMM Module MDM Principles Architecture Authorized to work in the US for any employer Work Experience Sr Java Full Stack Developer Wells Fargo Des Moines IA January 2016 to Present Description Wells Fargo is a multinational banking and financial services holding company which provides banking mortgage credit cards insurance and commercial financial services Involved in development of an intranet based loan servicing application The Application automates the loan servicing application The application is also integrated into automatic pay system so as to deduct loan payments directly from the employees monthly paycheck The Application has sophisticated alerts and monitoring components as well Responsibilities Interacted with the business analysts to gather the requirements FSD for the requirements Actively involved in Analysis Design Development System Testing and User Acceptance Testing Used Agile approaches Including TestDriven Development TDD and Scrum Developed the multiple enterprise applications which are developed using SpringMVCframework Hibernateframework Primefaces RESTFul web services Designed and developed UI using spring view component HTML5 CSS3 Bootstrap AngularJS and Vuejs Built custom UI widgets directives filters and Application logic using AngularJSMVC Architecture Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 20 Used Vuex to work with Vuejs and refactored the Vue Component structure to gain frontend state management Vuejs was used to fetch data from server using axios prepare and transform data to display in the forms validate userentered data and then post data Used Spring and Hibernate for implementing IOC AOP and ORM for back end tiers Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Used Multithreading and Concurrency and implemented threads while preparing and generating mails Developed Hibernate with SpringIntegration as the data abstraction to interact with the database of MongoDB Used Hibernate objectrelationalmapping ORM solutionand technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used a Microservice architecture with Spring Bootbased services interacting through REST and Apache Kafka Developed Microservices using SpringBoot NetflixOSS SpringCloud and deploying to AWSCloud Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers Implemented Pre Authentication and database security with Site Minder and spring security Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Building search feature based on open source tool ElasticSearch Implemented system logging solution using Elastic Search Kibana and Logstash Used Adobe flex framework for building and maintaining applications that deploy on all major device platforms CreatedRESTful web services using SpringRESTfulAPIsending JSONdatabetween Frontend middletier Controller Created proof of concept Data As A Service DaaS based RESTful Jersey web service which is connected to a MongoDB based data store running on Tomcat 8 Used J2EE design patterns like Value Object Pattern Service locator Session facade Singleton Factory and DAO Involved in writing Thread Safe blocks for multithread access to make valid transactions Deployed TDD through Unit Integration and Performance Test Cases using Junit and Selenium Also set up the Vuejs unit testing with Karma and Jasmine Used SOAPUI for testing web services Process Avro Data to Store in Parquet Files Stored data toHDFS for analysis Created HIVE tables on top of them Performed deployment of applications on WebSphere Application Server Application Server Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in OracleDB and NoSQLDB Developed database adapter web services adapter messaging adapter and custom workflow for nonoracle system using Camel and Implemented Apache Camel routes using CamelSpring XML and CamelSpring processor beans Used Scala for coding the components in Play and Akka Involved in developing and modifying the credit card customer loan business rules in ILog JRules Conducted Performance tuning including JVM tuning JMS to the maximum throughput form Application server Used Continuous delivery Continuous Integration tools Docker Jenkins to deploy this application to AWS and used GIT for version control of code for incremental development Experienced in Splunk development Splunk search language Splunk Web Framework simple xml alerts configuration report building custom dashboard building and data modeling Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Environment Java 80 Spring 4 Hibernate 42 Spring batch Spring security Spring Boot JPA JavaScript AngularJS Vuejs HTML5 CSS3 WebSphere Application Server 85 Eclipse Oracle 11g MongoDB ILOG Apache Camel log4j JunitTestNG Selenium EasyMock XML Web Services SOAP UI Kafka Adobe FlexScala DevOps AWS Hive HDFS Splunk Sr Java Full Stack Developer BCBS Detroit MI January 2014 to December 2015 Description BCBS is the health insurance and health provider company BCBS provides individual and family plans Dental Plans Medicare Medicare State Plans Group Plans and other plans This Project had division of groups which was Provider and Clinical Data IAAS Information as a Service End to End Enrollment Product Member Benefits and Tracking Summary Responsibilities As a Java developer involved in backend and frontend developing team Took part in developing maintaining reviewing and supporting quality code and services Followed Agile Software Development Methodology and TestDriven Development TDD to build the application iteratively and incrementally Enhanced and optimized the functionality of Web UI using RichFaces JSF AJAX CSS HTML and JavaScript Fetched JSON data within Orchestration Layer with SpringBootApplication and displaying it in UI using ReactJS Developed various screens for frontend using ReactJS Used predefined components from NPM and Redux library Software is built as a web app on NodeJS with BackboneJS ReactJS CSS is compiled with LESS and HTML template engine in Jade Implemented various features of spring framework such as Dependency Injection IOC Annotations and Spring integration with Hibernate Implemented application architecture of the System is based on Spring MVC and J2EE specifications Experienced in SecuritySystem development for Web Applications Involved and developed all phases of security implementation using spring security system against modes of authentications LDAP authentication Database authentication and PreAuthentication Integrated application with Spring Security for form based authentication and authorization by used spring security JSP tags to provide UI level spring security Worked on SpringQuartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies All the functionality is implemented using Spring IO Spring Boot Thymeleaf and Hibernate ORM Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules Implementing or exposing the Micro services to base onRESTful API utilizing Spring Boot with Spring MVC Experienced in using Spring Cloud for wiring service dependencies in Micro service systems Kubernetes were used as the best ecosystem to deploy and manage Micro services Developed Applications using Rule Engines Drools 4xand ILOG corresponding to validate the business User Roles Used Hive QL Map Reduce Cassandra bulk loads Java Web Services UNIX Shell Scripts Active MQs Implemented a distributed messaging queue to integrate with Cassandra using ApacheKafka and Zookeeper Implemented the application using design patterns such as Session Facade Business Delegate Bean Factory Singleton Data Access Object and Service Locator Rewrite existing Java application in Python module to deliver certain format of data Generated Python Django forms to record data of online users Initially we have used NodeJSExpressJS to mock REST services and built the UI app using that mocked backend Later we integrated with the real backend system and coordinated with serverside development team Used NodeJS to run Grunt tasks and build properly the projectcompile minify Concat etc and implement modules into NodeJS to integrate with designs and requirements Used Grunt Bower Express from NodeJS Used JUnit for unit testing and log4j for logging Developed test cases for Front EndusingJasmine and Karma Used Rabbit MQqueues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Handled Java MultiThreading part in backend one thread will be running for each user which serves that user Defined strategic initiatives on Continuous Integration Delivery CICD model with Testdriven development Extreme programming XP and build automation in an AGILE development environment to help respond quickly to business needs and to ship world class Quality products Utilized Hibernate for ObjectRelational Mapping ORM purposes for persistence onto the Oracle database Involved in PLSQL changes whenever needed in the application and used TOAD as Oracle client to access tables Packages Jobs and stored procedures Integration of automation batch run job with Jenkins Worked with Jenkins CI tool and Build Tool Ant Involved in JAD sessions to gather requirements from the end clients Used GIT as version management JIRA for defect management system Environment Java 70 Spring 3 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring BootPython KubernetesJPA JavaScripts ReactJS BackboneJS NodeJS HTML50 CSS3 JMS Rabbit MQ ILOG JAXP SAX DOM JBoss Eclipse Oracle 11g Cassandra Kafka Spring Cloud RESTful log4j JUnit XML Web ServicesGIT Java Full Stack Developer Priceline Group Norwalk CT June 2012 to December 2013 DescriptionPriceline is an American based ecommerce website which provides discount rates for the different travel related purchases and services Priceline is not the direct supplier but this facilitates the provision of the travel services to the customers The Priceline group consists of different brands in different countries with different services that provide flight tickets car rentals hotel rooms and also cruises Priceline operates in more than 200 countries having different brand names Responsibilities Involved in various SDLC phases like Requirement gathering Design Analysis and Code development with both iterative AgileWater fall Interacted with Managers Business usersfor performance issues discussed about keyAspects based on requirements and its relational mappingto the application with users Collaborated on responsive frontend development using AngularJS NodeJS JavaScript and CoffeeScript with DevOps development principles Develop various screens for the front end using AngularJS and used various predefined components from NPM Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using NodeJS Extensively worked on developing UI components using AngularJS and JSON to interact Restful web services Involved in Migrating the application deployment procedures Googles Version Controlfor development with GAE google app EngineUnFuddlegitsvn as defect management system Used GAE version control for the Day to Day development activities while migrating Worked on integrating GWT google web tool kit for generating the JavaScript files for reporting the high frequency of usages of functionality in minipie chart Developed Application using Spring MVC 3 widely with annotations DependencyinjectionIOC integrated with the Struts 3 framework with views based on JSP Used various Core Java concepts such as MultiThreading ExceptionHandling CollectionAPIs to implement various features and enhancements Used MultiThreading and concurrency and implemented threads while preparing and generating mails Worked extensively on Core Java low latency side using Java Concurrency on the backend of the application Developed critical components of the application including Spring forms Spring controllers JSP views and business logic and data logic components that include Hibernate Entities SpringHibernate DAO and Spring models following MVC architecture Developed the application using industry standard design patterns like Singleton Business Delegate MVC and Factory Pattern etc for reusability Developed datatables using Ace componentsimplemented Sorting Filtering and Pagination functionalities to it Developed reusable utility classes in core java for validation that are used across all modules Implemented app using design patterns Session Facade Business Delegate Adaptor BeanFactory and Singleton Utilized MEAN stack REST design pattern MVC framework and SPA framework based on Node JS Used MVC architecture of ExtJS Framework to simplify the code complexity and increase clean code Transaction management is done by JTA API specification by implementing them Developed an API to write XML documents from a database Utilized XML and XSL Transformation for dynamic webcontent and database connectivity Implemented NoSQL persistence pattern for some data within app to increase performance by indexing Implemented Mapreduce functionality in MongoDB to maintain customer order tracking Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Implemented CRUD operations with MongoDB NoSQL and manage all the details of Customer Worked on Drools Rule Engines with corresponding to validate the business User Roles Used Apache Maven for project management and building the application Developed Junits using Mockito and SpringJunitRunnerframework Involved in Web Services Testing using SoapUI to create and execute automated functional regression compliance and load tests Provided JUnit support for the application for debugging the system and Test Driven Development TDD Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Involved in fixing bugs the bugs or defects in the application Environment Core Java Spring MVC 3 Spring integration Components Spring JDBC Spring RestSpring Dependency Injection Struts 3 JMS JIRA AngularJS NodeJS  Mobile Javascript Html CSSApache Tomcat 70 Restful Eclipse MongoDB Maven Drools MockitoSpringJunit SVN Java Developer AXA Financials New York NY June 2011 to May 2012 DescriptionFinancial planner helps the financial advisors for advising customers on Retirement Insurance Education Tax Estate and Mortgage planning It gives the monetary benefits at each period and projection till the end of period It also helps the customers to apply online for insurance claims and online purchase of insurance plans Online payment system for insurance premiums and Retirement plans are integrated with the system The system has the facility to give insurance and investment plans and offers quotes based on the information provided by the customer Responsibilities Involved in various SDLC phases like Requirement gathering Design Analysis and Code development and the project was developed using Agile based SCRUM Methodology Successfully executing offshore modeling by effective and on time knowledge sharing with offshore project groups through weekly team meetings and daily status update calls Implemented Struts Framework and Hibernate in the new version of the Application Involved in coding for the presentation layer using Struts and JavaScript Developed Action classes Dyna Action Forms and used Validation framework Used EJB StatelessStateful session beans to implement business logic session handling and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server Implement modules into NodeJS to integrate with designs and requirements Developed real time tracking of class schedules using NodeJS socketio Express JS framework Used Microsoft Azure to provide the cloud services for the application developed Developed web services component APIs for inter application communication and worked on the cloud based web services to connect to Azure services Taken care of java MultiThreading in common java classeslibrary Extensively used Javascripts to enforce client side validations and also used JQuery for Ajax processing Involved in development of various web services using IBM WebSphere to interact with other Applications Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Developed the UNIX shell scripts to automate jobs Developed Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to DB2 Worked on Redhat Linux environment for deploying the application running scripts for jobs Environment Jakarta Struts Framework 20 Core Java Hibernate 30EJB Web Services CSS NodeJSEclipse CVS WebSphere Application Server 65 Azure JUnit UNIX JavaScript Servlets JSP JDBC JQuery DB2 Java Developer Provident Financial Services Inc Jersey City NJ October 2009 to May 2011 DescriptionThe Provident Bank emphasizes personal service and customer convenience in attending to the financial needs of businesses individuals and families in 11 counties in northern and central New Jersey The bank offers a broad array of deposit loan and investment products as well as trust fiduciary and wealth management services Provident Financial Services Inc Services fulfilling the needs of all categories The services provided by Bank include bank accounts and loans for all needs It provides complete information regarding various schemes of the bank in this site In addition to that site allows doing online banking transactions Members can view their account details and able to do transactions on the fly Responsibilities Project modeled using MVC ModelViewController Architecture framework Used Spring Framework for Dependency injection and integrated with the Struts and Hibernate Developed the Web Tier of the application using Jakarta Struts Framework Developed the application using Java JSP Servlets and Oracle 9i Developed a standalone JAXWS client to invoke the available web services It involved creating autogenerated classes from WSDL using JAXB implementation in IBM RAD Wrote GWT code to create presentation layer using GWT widgets and event handlers Used Cucumber to reveal and document drive development of behavior in a large legacy code base Added Ajax functionality to Java Server Faces using Ajax4 JSF framework Used JMS PointtoPoint queuing model and developed Message Driven beans to consume messages from JMS Used PLSQL stored procedures for applications that needed to execute as part of scheduling DesigningDeveloping J2EE applicationsPOCs using JavaJ2EE with DROOLS AspectJ on BEA Weblogic server Customized RESTful Web Service using Spring RESTful API sending JSON and XML format data packets between frontend and middletier controller Developed a Servlet which was tested on Apache Tomcat Jboss and Weblogic Developed Stored Procedures triggered stored procedures using Hibernate in secondary project involved in developing Programmatic transactions using Hibernate Designed developed and deployed EJB components Session and Message Driven beans Expertise in developing integration services in SOA by offering Web Services based on XML on SOAP Layer Involved in design and developing web services using SOAP XML WSDL XML Schemas JAXP and XSL Used Rational Rose for UML diagrams Environment Core Java J2EE JSP Servlets XML XSLT EJB JDBC JBuilder 80 JBoss Swing JavaScript JMS HTML CSS MySQL Server CVS Jr Java Developer Triumph Systems NY June 2008 to August 2009 DescriptionMedical billing system is developed using java for medical equipment store This is advanced billing system which includes all billing functionalities It supports functions to accept various payment types such as cash debit card credit card PayPal personal checks etc system consist of two types of account Administrator and user All product information and details are loaded into the system The system also saves payers details and purchase information Responsibilities Gathering the requirements from the users application analysis and making UML diagrams Involved in preparation of Detailed Design Documents Developed Servlet and JSP screens for client view by embedding the Struts framework Developed Action classes Action Form and worked on switch Actions and Dispatch Actions Worked in Struts Validation framework and involved in customizing Rules per business requirements Developed Custom Tag libraries for the client view Implemented Multithreading logic using Java Concurrency APIs for parallel processing of service requests Involved in the development of client view custom components using JavaScripts HTML and DHTML Developed Java classes which generate reports for the transactions Wrote stored procedures and JDBC routines to update the ORACLE tables depend on the information Involved in the bug fixing and Change requests in the life cycle of the entire application Involved in Unittesting IntegrationTesting and Maintenance stage DevelopedModified the SQL Stored Procedure and Triggers Code Review and Code Level PerformanceTuning to the code Environment Servlets 25 JSP 21 Struts JDBC JavaScript HTML PLSQL SVN JDBC WebLogic 70 Oracle Education Bachelors Bachelors",
    "entities": [
        "Oracle Database Environment",
        "SpringQuartz",
        "PreAuthentication Integrated",
        "Spring Bootbased",
        "Spring Framework",
        "Detailed Design Documents Developed Servlet",
        "AngularJSMVC Architecture Created Typescript",
        "Web Services Description Language",
        "Analysis Design Development System Testing",
        "ORM",
        "New York",
        "XP",
        "Implemented Apache Camel",
        "Component",
        "MQ ILOG JAXP",
        "UNIX",
        "the Vue Component",
        "Created Stacks",
        "the Application Involved",
        "Selenium IDE",
        "ILOG",
        "Drools Rule Engines",
        "Retirement Insurance Education Tax Estate and Mortgage",
        "Working",
        "DTDSchemas DOM SAX",
        "Singleton Business Delegate MVC",
        "Universal Description and Discovery Integration",
        "Implemented Pre Authentication",
        "IBM",
        "SpringCoreIOC SpringSecurity",
        "CamelSpring",
        "Mobile",
        "RESTful Jersey",
        "Ajax",
        "Spring JTA Based on",
        "Python Scala Shell GroovyonGrails",
        "Camel",
        "SVN Subversion",
        "Customized RESTful Web Service",
        "XML",
        "Smartphones Tablets Experience",
        "Tomcat 8 Used",
        "Jade Implemented",
        "JAD",
        "JAXWS",
        "JUnit",
        "SAPMM Module MDM Principles Architecture Authorized",
        "DevOps",
        "Shell Scripts Active",
        "DescriptionMedical",
        "Atomikos Experienced",
        "JavaJ2EE",
        "Amazon",
        "Hibernate Query Language HQL Experienced",
        "CamelSpring XML",
        "Maven Drools",
        "Provider and Clinical Data IAAS Information",
        "Data As A Service DaaS",
        "EngineUnFuddlegitsvn",
        "Used Spring Framework for Dependency",
        "DAO Involved",
        "Developed",
        "AWS Infrastructure",
        "Oracle Relational",
        "Integration of automation",
        "Wells Fargo",
        "Middleware",
        "NodeJS Used JUnit",
        "Responsibilities Project",
        "Splunk Log Management Creating",
        "SME",
        "Hibernateframework Primefaces",
        "Java Server Faces",
        "Mockito",
        "Spring MVC",
        "Expression Query",
        "Responsibilities Involved",
        "UML",
        "New Jersey",
        "Waterfall",
        "the Struts and Hibernate Developed",
        "BCBS",
        "Provident Financial Services Inc Services",
        "ElasticSearch",
        "Applications Involved",
        "Core",
        "ORACLE",
        "Develop",
        "SOA",
        "Spring Security",
        "JQuery Mobile",
        "JSP",
        "MultiThreading ExceptionHandling CollectionAPIs",
        "WebSphere Application Server Application Server Responsible for Configuring Kafka Consumer",
        "Collaborated",
        "Micro",
        "Value Object Pattern Service",
        "Build Tool Ant Involved",
        "Web Framework",
        "DescriptionThe Provident Bank",
        "JTA API",
        "Oracle Education",
        "Bank",
        "Distributed Transaction Management",
        "Followed Agile Software Development Methodology",
        "Session Facade Business Delegate Bean Factory",
        "Unit Integration",
        "Hibernate Entities SpringHibernate",
        "DROOLS",
        "TestDriven Development",
        "MVC",
        "Agile",
        "Redux",
        "NodeJSExpressJS",
        "EJB",
        "GIT",
        "Implemented Multithreading",
        "Used Grunt Bower Express",
        "Dependency Injection IOC Annotations",
        "API",
        "Developed Custom Tag",
        "US",
        "DevelopedModified",
        "Session Facade Business Delegate Adaptor",
        "JSF Tags Struts Tags",
        "WebLogic WebSphere",
        "Vuex",
        "Priceline",
        "IA",
        "Created",
        "AWS",
        "APP",
        "Ace componentsimplemented Sorting Filtering and Pagination",
        "WindowsUNIX",
        "Oracle",
        "DescriptionPriceline",
        "JSF",
        "ILog",
        "DB2 Worked on Redhat Linux",
        "the SQL Stored",
        "BeanFactory",
        "SQL",
        "Transaction",
        "Worked on Splunk DB Connect",
        "Oracle 9i Developed",
        "Kubernetes",
        "NPM",
        "Subversion CVSSVNGITand Rational Clear Case Experienced",
        "Developed Hibernate with SpringIntegration",
        "AgileScrum Pair Programming Test Driven Development TDD",
        "FSD",
        "Process Avro Data",
        "WebSphere Application Server Implement",
        "Implemented Struts Framework and Hibernate",
        "Testdriven",
        "CoffeeScript",
        "Googles Version Controlfor",
        "Jakarta",
        "Vuejs",
        "Customer Worked",
        "The Application",
        "Singleton Factory",
        "Business Customers",
        "ExtJS Framework",
        "Express JS",
        "NodeJS Experienced",
        "JavaScript Servlets",
        "Maven",
        "XSLT",
        "Site Minder",
        "Hibernate Implemented",
        "EBS CloudFront Elasticcache",
        "GWT",
        "Developed Application",
        "Continuous Integration Delivery CICD",
        "JBoss Experienced",
        "JavaScript",
        "ANT",
        "UI",
        "BEA Weblogic",
        "BPM",
        "HQL Named Parameters Named Queries",
        "JSP Servlets",
        "Microsoft",
        "Kafka System",
        "DependencyinjectionIOC",
        "JavaBeans Developed",
        "CSS",
        "XML Schemas JAXP",
        "Implemented Mapreduce",
        "SPA",
        "REST",
        "Java JSP Servlets",
        "UNIXshell",
        "Dental Plans Medicare Medicare State Plans Group",
        "Java Developer Triumph Systems",
        "TDD",
        "NoSQL",
        "Application",
        "Eclipse Rational Application Developer NetBeansSpring Tool",
        "TOAD",
        "WebSphere Application Server",
        "GAE",
        "keyAspects",
        "NPM Developed",
        "Node",
        "JBPM",
        "CloudWatch CloudFormation",
        "SpringSecurity Experienced"
    ],
    "experience": "Experience in AgileScrum Pair Programming Test Driven Development TDD and Waterfall model Expertise in Core java concepts likeCollections Generics Multithreading Serialization and Exception Handling As a Java Full stack SME has expertise in developing Enterprise Applications using Java and J2EE technologies Such as JSP Servlets EnterpriseJavaBeans RESTfulWebServices SOAPWebServices JDBC JMS JAXB SOA Experienced in Middleware persistence framework likeHibernateJPA JDBC iBatisfor mapping Java POJO classesObjects with database and using Hibernate Query Language HQL Experienced in front End technologies such asHTML5 CSS3 JQuery JavaScriptReactJS NodeJS AngularJS ExtJS Bootstrap VBScript Perl AJAX Adobe Flex Action Script JSONXSD XSTL Tiles Tag Libraries Experienced in developing an enterprise applications by writing server side code with NodeJS and Express Framework a database to store and retrieve data with MongoDB and frontend web pages designing with ReactJS Experienced in creating dashboards reports using BackboneJS Experience in developing Mobile web applications using JQuery Mobile and phonegap for Smartphones Tablets Experience in working with Service Oriented Architecture which includes Universal Description and Discovery Integration UDDI lookups and Web Services Description Language WSDL using SOAP protocol Expertise in XML technologies such as DTDSchemas DOM SAX and XSLT Extensively used different Tag Libraries like JSF Tags Struts Tags JSTL Spring Tags Display Tag XMLXSD Experienced in frameworks Spring MVC Jakarta struts framework JSF spring and Hibernate Strong experience in Spring Framework including SpringCoreIOC SpringSecurity and implement the authentication authorization and accesscontrol features by using SpringSecurity Experienced in Distributed Transaction Management system with Spring JTA Based on Atomikos Experienced in Working with Spring JDBC Template JMS Template EMS and JavaBeans Developed applications using latest technologies like EJB30 Spring2x3x4x Hibernate324x and REST based Web services axis20 JAX WS 20 Rule Engines Drools41 ILOG XML API and tools Extensive experience in using NPM BOWER Grunt and Gulp for build process Proficient in taking care of web and application servers in making Domain configuring connection pool JMS Deploying applications on WebLogic WebSphere ApacheTomcat Glassfish and JBoss Experienced in developing UNIXshell scripts for batch processing Experienced in developing modern applicationsusingMEAN Stack MongoDB ExpressJS AngularJS and NodeJS Experienced on ELK Stack Elastic Search Logstash and Kibana Experienced in working with multiple databases like Oracle 10g11 g SQL Server MySQL DB2 NOSQL DB Worked on Mule soft studio with Sound knowledge on Enterprise Service Bus Experienced in performing unit testing using JUnitframework with Mockito and Easymock integration and deployment of applications using tools such as ANT and Maven debugging through log4j Experienced in creating and updating Java test scripts using Selenium IDE and Selenium Webdriver Experience in creating test suites using Jasmine Karma and worked on tools NPM Bower Gruntand Testem Involved in BPM business process management tools like JBPM and Adobe LiveCycle Experience in using various AWS components like EC2 for virtual servers S3 and Glacier for storing objects EBS CloudFront Elasticcache IAM CloudWatch CloudFormation and DynamoDB Experience in Microsoft Azure Cloud Computing development and support Strong Knowledge in scripting technologies like Python Scala Shell GroovyonGrails and Perl Expertise in design and development of various web applications using technologies Scala Play framework Experienced in Development testing and deployment of enterprise applications on WindowsUNIX platforms using IDEs such as Eclipse Rational Application Developer NetBeansSpring Tool Suite STSIntelliJ 14x15x Experience in different version controllingtracking systems Subversion CVSSVNGITand Rational Clear Case Experienced in Splunk Log Management Creating dashboardsmonitoringreporting Email Notification to Users for threshold limit Experience working in Kafka and Camel with indepth understanding of Scala Experience with messaging frameworks   RabbitMQ Kafka Good knowledge of SAPMM Module MDM Principles Architecture Authorized to work in the US for any employer Work Experience Sr Java Full Stack Developer Wells Fargo Des Moines IA January 2016 to Present Description Wells Fargo is a multinational banking and financial services holding company which provides banking mortgage credit cards insurance and commercial financial services Involved in development of an intranet based loan servicing application The Application automates the loan servicing application The application is also integrated into automatic pay system so as to deduct loan payments directly from the employees monthly paycheck The Application has sophisticated alerts and monitoring components as well Responsibilities Interacted with the business analysts to gather the requirements FSD for the requirements Actively involved in Analysis Design Development System Testing and User Acceptance Testing Used Agile approaches Including TestDriven Development TDD and Scrum Developed the multiple enterprise applications which are developed using SpringMVCframework Hibernateframework Primefaces RESTFul web services Designed and developed UI using spring view component HTML5 CSS3 Bootstrap AngularJS and Vuejs Built custom UI widgets directives filters and Application logic using AngularJSMVC Architecture Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 20 Used Vuex to work with Vuejs and refactored the Vue Component structure to gain frontend state management Vuejs was used to fetch data from server using axios prepare and transform data to display in the forms validate userentered data and then post data Used Spring and Hibernate for implementing IOC AOP and ORM for back end tiers Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Used Multithreading and Concurrency and implemented threads while preparing and generating mails Developed Hibernate with SpringIntegration as the data abstraction to interact with the database of MongoDB Used Hibernate objectrelationalmapping ORM solutionand technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used a Microservice architecture with Spring Bootbased services interacting through REST and Apache Kafka Developed Microservices using SpringBoot NetflixOSS SpringCloud and deploying to AWSCloud Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers Implemented Pre Authentication and database security with Site Minder and spring security Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Building search feature based on open source tool ElasticSearch Implemented system logging solution using Elastic Search Kibana and Logstash Used Adobe flex framework for building and maintaining applications that deploy on all major device platforms CreatedRESTful web services using SpringRESTfulAPIsending JSONdatabetween Frontend middletier Controller Created proof of concept Data As A Service DaaS based RESTful Jersey web service which is connected to a MongoDB based data store running on Tomcat 8 Used J2EE design patterns like Value Object Pattern Service locator Session facade Singleton Factory and DAO Involved in writing Thread Safe blocks for multithread access to make valid transactions Deployed TDD through Unit Integration and Performance Test Cases using Junit and Selenium Also set up the Vuejs unit testing with Karma and Jasmine Used SOAPUI for testing web services Process Avro Data to Store in Parquet Files Stored data toHDFS for analysis Created HIVE tables on top of them Performed deployment of applications on WebSphere Application Server Application Server Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in OracleDB and NoSQLDB Developed database adapter web services adapter messaging adapter and custom workflow for nonoracle system using Camel and Implemented Apache Camel routes using CamelSpring XML and CamelSpring processor beans Used Scala for coding the components in Play and Akka Involved in developing and modifying the credit card customer loan business rules in ILog JRules Conducted Performance tuning including JVM tuning JMS to the maximum throughput form Application server Used Continuous delivery Continuous Integration tools Docker Jenkins to deploy this application to AWS and used GIT for version control of code for incremental development Experienced in Splunk development Splunk search language Splunk Web Framework simple xml alerts configuration report building custom dashboard building and data modeling Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Environment Java 80 Spring 4 Hibernate 42 Spring batch Spring security Spring Boot JPA JavaScript AngularJS Vuejs HTML5 CSS3 WebSphere Application Server 85 Eclipse Oracle 11 g MongoDB ILOG Apache Camel log4j JunitTestNG Selenium EasyMock XML Web Services SOAP UI Kafka Adobe FlexScala DevOps AWS Hive HDFS Splunk Sr Java Full Stack Developer BCBS Detroit MI January 2014 to December 2015 Description BCBS is the health insurance and health provider company BCBS provides individual and family plans Dental Plans Medicare Medicare State Plans Group Plans and other plans This Project had division of groups which was Provider and Clinical Data IAAS Information as a Service End to End Enrollment Product Member Benefits and Tracking Summary Responsibilities As a Java developer involved in backend and frontend developing team Took part in developing maintaining reviewing and supporting quality code and services Followed Agile Software Development Methodology and TestDriven Development TDD to build the application iteratively and incrementally Enhanced and optimized the functionality of Web UI using RichFaces JSF AJAX CSS HTML and JavaScript Fetched JSON data within Orchestration Layer with SpringBootApplication and displaying it in UI using ReactJS Developed various screens for frontend using ReactJS Used predefined components from NPM and Redux library Software is built as a web app on NodeJS with BackboneJS ReactJS CSS is compiled with LESS and HTML template engine in Jade Implemented various features of spring framework such as Dependency Injection IOC Annotations and Spring integration with Hibernate Implemented application architecture of the System is based on Spring MVC and J2EE specifications Experienced in SecuritySystem development for Web Applications Involved and developed all phases of security implementation using spring security system against modes of authentications LDAP authentication Database authentication and PreAuthentication Integrated application with Spring Security for form based authentication and authorization by used spring security JSP tags to provide UI level spring security Worked on SpringQuartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies All the functionality is implemented using Spring IO Spring Boot Thymeleaf and Hibernate ORM Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules Implementing or exposing the Micro services to base onRESTful API utilizing Spring Boot with Spring MVC Experienced in using Spring Cloud for wiring service dependencies in Micro service systems Kubernetes were used as the best ecosystem to deploy and manage Micro services Developed Applications using Rule Engines Drools 4xand ILOG corresponding to validate the business User Roles Used Hive QL Map Reduce Cassandra bulk loads Java Web Services UNIX Shell Scripts Active MQs Implemented a distributed messaging queue to integrate with Cassandra using ApacheKafka and Zookeeper Implemented the application using design patterns such as Session Facade Business Delegate Bean Factory Singleton Data Access Object and Service Locator Rewrite existing Java application in Python module to deliver certain format of data Generated Python Django forms to record data of online users Initially we have used NodeJSExpressJS to mock REST services and built the UI app using that mocked backend Later we integrated with the real backend system and coordinated with serverside development team Used NodeJS to run Grunt tasks and build properly the projectcompile minify Concat etc and implement modules into NodeJS to integrate with designs and requirements Used Grunt Bower Express from NodeJS Used JUnit for unit testing and log4j for logging Developed test cases for Front EndusingJasmine and Karma Used Rabbit MQqueues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Handled Java MultiThreading part in backend one thread will be running for each user which serves that user Defined strategic initiatives on Continuous Integration Delivery CICD model with Testdriven development Extreme programming XP and build automation in an AGILE development environment to help respond quickly to business needs and to ship world class Quality products Utilized Hibernate for ObjectRelational Mapping ORM purposes for persistence onto the Oracle database Involved in PLSQL changes whenever needed in the application and used TOAD as Oracle client to access tables Packages Jobs and stored procedures Integration of automation batch run job with Jenkins Worked with Jenkins CI tool and Build Tool Ant Involved in JAD sessions to gather requirements from the end clients Used GIT as version management JIRA for defect management system Environment Java 70 Spring 3 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring BootPython KubernetesJPA JavaScripts ReactJS BackboneJS NodeJS HTML50 CSS3 JMS Rabbit MQ ILOG JAXP SAX DOM JBoss Eclipse Oracle 11 g Cassandra Kafka Spring Cloud RESTful log4j JUnit XML Web ServicesGIT Java Full Stack Developer Priceline Group Norwalk CT June 2012 to December 2013 DescriptionPriceline is an American based ecommerce website which provides discount rates for the different travel related purchases and services Priceline is not the direct supplier but this facilitates the provision of the travel services to the customers The Priceline group consists of different brands in different countries with different services that provide flight tickets car rentals hotel rooms and also cruises Priceline operates in more than 200 countries having different brand names Responsibilities Involved in various SDLC phases like Requirement gathering Design Analysis and Code development with both iterative AgileWater fall Interacted with Managers Business usersfor performance issues discussed about keyAspects based on requirements and its relational mappingto the application with users Collaborated on responsive frontend development using AngularJS NodeJS JavaScript and CoffeeScript with DevOps development principles Develop various screens for the front end using AngularJS and used various predefined components from NPM Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using NodeJS Extensively worked on developing UI components using AngularJS and JSON to interact Restful web services Involved in Migrating the application deployment procedures Googles Version Controlfor development with GAE google app EngineUnFuddlegitsvn as defect management system Used GAE version control for the Day to Day development activities while migrating Worked on integrating GWT google web tool kit for generating the JavaScript files for reporting the high frequency of usages of functionality in minipie chart Developed Application using Spring MVC 3 widely with annotations DependencyinjectionIOC integrated with the Struts 3 framework with views based on JSP Used various Core Java concepts such as MultiThreading ExceptionHandling CollectionAPIs to implement various features and enhancements Used MultiThreading and concurrency and implemented threads while preparing and generating mails Worked extensively on Core Java low latency side using Java Concurrency on the backend of the application Developed critical components of the application including Spring forms Spring controllers JSP views and business logic and data logic components that include Hibernate Entities SpringHibernate DAO and Spring models following MVC architecture Developed the application using industry standard design patterns like Singleton Business Delegate MVC and Factory Pattern etc for reusability Developed datatables using Ace componentsimplemented Sorting Filtering and Pagination functionalities to it Developed reusable utility classes in core java for validation that are used across all modules Implemented app using design patterns Session Facade Business Delegate Adaptor BeanFactory and Singleton Utilized MEAN stack REST design pattern MVC framework and SPA framework based on Node JS Used MVC architecture of ExtJS Framework to simplify the code complexity and increase clean code Transaction management is done by JTA API specification by implementing them Developed an API to write XML documents from a database Utilized XML and XSL Transformation for dynamic webcontent and database connectivity Implemented NoSQL persistence pattern for some data within app to increase performance by indexing Implemented Mapreduce functionality in MongoDB to maintain customer order tracking Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Implemented CRUD operations with MongoDB NoSQL and manage all the details of Customer Worked on Drools Rule Engines with corresponding to validate the business User Roles Used Apache Maven for project management and building the application Developed Junits using Mockito and SpringJunitRunnerframework Involved in Web Services Testing using SoapUI to create and execute automated functional regression compliance and load tests Provided JUnit support for the application for debugging the system and Test Driven Development TDD Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Involved in fixing bugs the bugs or defects in the application Environment Core Java Spring MVC 3 Spring integration Components Spring JDBC Spring RestSpring Dependency Injection Struts 3 JMS JIRA AngularJS NodeJS   Mobile Javascript Html CSSApache Tomcat 70 Restful Eclipse MongoDB Maven Drools MockitoSpringJunit SVN Java Developer AXA Financials New York NY June 2011 to May 2012 DescriptionFinancial planner helps the financial advisors for advising customers on Retirement Insurance Education Tax Estate and Mortgage planning It gives the monetary benefits at each period and projection till the end of period It also helps the customers to apply online for insurance claims and online purchase of insurance plans Online payment system for insurance premiums and Retirement plans are integrated with the system The system has the facility to give insurance and investment plans and offers quotes based on the information provided by the customer Responsibilities Involved in various SDLC phases like Requirement gathering Design Analysis and Code development and the project was developed using Agile based SCRUM Methodology Successfully executing offshore modeling by effective and on time knowledge sharing with offshore project groups through weekly team meetings and daily status update calls Implemented Struts Framework and Hibernate in the new version of the Application Involved in coding for the presentation layer using Struts and JavaScript Developed Action classes Dyna Action Forms and used Validation framework Used EJB StatelessStateful session beans to implement business logic session handling and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server Implement modules into NodeJS to integrate with designs and requirements Developed real time tracking of class schedules using NodeJS socketio Express JS framework Used Microsoft Azure to provide the cloud services for the application developed Developed web services component APIs for inter application communication and worked on the cloud based web services to connect to Azure services Taken care of java MultiThreading in common java classeslibrary Extensively used Javascripts to enforce client side validations and also used JQuery for Ajax processing Involved in development of various web services using IBM WebSphere to interact with other Applications Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Developed the UNIX shell scripts to automate jobs Developed Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to DB2 Worked on Redhat Linux environment for deploying the application running scripts for jobs Environment Jakarta Struts Framework 20 Core Java Hibernate 30EJB Web Services CSS NodeJSEclipse CVS WebSphere Application Server 65 Azure JUnit UNIX JavaScript Servlets JSP JDBC JQuery DB2 Java Developer Provident Financial Services Inc Jersey City NJ October 2009 to May 2011 DescriptionThe Provident Bank emphasizes personal service and customer convenience in attending to the financial needs of businesses individuals and families in 11 counties in northern and central New Jersey The bank offers a broad array of deposit loan and investment products as well as trust fiduciary and wealth management services Provident Financial Services Inc Services fulfilling the needs of all categories The services provided by Bank include bank accounts and loans for all needs It provides complete information regarding various schemes of the bank in this site In addition to that site allows doing online banking transactions Members can view their account details and able to do transactions on the fly Responsibilities Project modeled using MVC ModelViewController Architecture framework Used Spring Framework for Dependency injection and integrated with the Struts and Hibernate Developed the Web Tier of the application using Jakarta Struts Framework Developed the application using Java JSP Servlets and Oracle 9i Developed a standalone JAXWS client to invoke the available web services It involved creating autogenerated classes from WSDL using JAXB implementation in IBM RAD Wrote GWT code to create presentation layer using GWT widgets and event handlers Used Cucumber to reveal and document drive development of behavior in a large legacy code base Added Ajax functionality to Java Server Faces using Ajax4 JSF framework Used JMS PointtoPoint queuing model and developed Message Driven beans to consume messages from JMS Used PLSQL stored procedures for applications that needed to execute as part of scheduling DesigningDeveloping J2EE applicationsPOCs using JavaJ2EE with DROOLS AspectJ on BEA Weblogic server Customized RESTful Web Service using Spring RESTful API sending JSON and XML format data packets between frontend and middletier controller Developed a Servlet which was tested on Apache Tomcat Jboss and Weblogic Developed Stored Procedures triggered stored procedures using Hibernate in secondary project involved in developing Programmatic transactions using Hibernate Designed developed and deployed EJB components Session and Message Driven beans Expertise in developing integration services in SOA by offering Web Services based on XML on SOAP Layer Involved in design and developing web services using SOAP XML WSDL XML Schemas JAXP and XSL Used Rational Rose for UML diagrams Environment Core Java J2EE JSP Servlets XML XSLT EJB JDBC JBuilder 80 JBoss Swing JavaScript JMS HTML CSS MySQL Server CVS Jr Java Developer Triumph Systems NY June 2008 to August 2009 DescriptionMedical billing system is developed using java for medical equipment store This is advanced billing system which includes all billing functionalities It supports functions to accept various payment types such as cash debit card credit card PayPal personal checks etc system consist of two types of account Administrator and user All product information and details are loaded into the system The system also saves payers details and purchase information Responsibilities Gathering the requirements from the users application analysis and making UML diagrams Involved in preparation of Detailed Design Documents Developed Servlet and JSP screens for client view by embedding the Struts framework Developed Action classes Action Form and worked on switch Actions and Dispatch Actions Worked in Struts Validation framework and involved in customizing Rules per business requirements Developed Custom Tag libraries for the client view Implemented Multithreading logic using Java Concurrency APIs for parallel processing of service requests Involved in the development of client view custom components using JavaScripts HTML and DHTML Developed Java classes which generate reports for the transactions Wrote stored procedures and JDBC routines to update the ORACLE tables depend on the information Involved in the bug fixing and Change requests in the life cycle of the entire application Involved in Unittesting IntegrationTesting and Maintenance stage DevelopedModified the SQL Stored Procedure and Triggers Code Review and Code Level PerformanceTuning to the code Environment Servlets 25 JSP 21 Struts JDBC JavaScript HTML PLSQL SVN JDBC WebLogic 70 Oracle Education Bachelors Bachelors",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Sr",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Wells",
        "Fargo",
        "Seattle",
        "WA",
        "8years",
        "experience",
        "testing",
        "applications",
        "internetintranet",
        "base",
        "database",
        "J2EE",
        "SOA",
        "applications",
        "Java",
        "Webbased",
        "Desktop",
        "Based",
        "Developmentwith",
        "Concepts",
        "Object",
        "Oriented",
        "Design",
        "OOD",
        "Object",
        "Oriented",
        "Analysis",
        "OOA",
        "Object",
        "Programming",
        "OOP",
        "implementation",
        "business",
        "applications",
        "MVC",
        "SOA",
        "architecture",
        "MicroServices",
        "Experience",
        "AgileScrum",
        "Pair",
        "Programming",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "Waterfall",
        "model",
        "Expertise",
        "Core",
        "likeCollections",
        "Generics",
        "Multithreading",
        "Serialization",
        "Exception",
        "Handling",
        "Java",
        "stack",
        "SME",
        "expertise",
        "Enterprise",
        "Applications",
        "Java",
        "J2EE",
        "technologies",
        "JSP",
        "Servlets",
        "EnterpriseJavaBeans",
        "RESTfulWebServices",
        "SOAPWebServices",
        "JDBC",
        "JMS",
        "JAXB",
        "SOA",
        "Middleware",
        "persistence",
        "framework",
        "likeHibernateJPA",
        "JDBC",
        "iBatisfor",
        "mapping",
        "Java",
        "POJO",
        "classesObjects",
        "database",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "End",
        "technologies",
        "asHTML5",
        "CSS3",
        "JQuery",
        "JavaScriptReactJS",
        "NodeJS",
        "ExtJS",
        "Bootstrap",
        "VBScript",
        "Perl",
        "AJAX",
        "Adobe",
        "Flex",
        "Action",
        "Script",
        "JSONXSD",
        "XSTL",
        "Tiles",
        "Tag",
        "Libraries",
        "enterprise",
        "applications",
        "server",
        "side",
        "code",
        "NodeJS",
        "Express",
        "Framework",
        "database",
        "data",
        "MongoDB",
        "frontend",
        "web",
        "pages",
        "ReactJS",
        "dashboards",
        "reports",
        "BackboneJS",
        "Experience",
        "Mobile",
        "web",
        "applications",
        "JQuery",
        "Mobile",
        "phonegap",
        "Smartphones",
        "Tablets",
        "Experience",
        "Service",
        "Oriented",
        "Architecture",
        "Universal",
        "Description",
        "Discovery",
        "Integration",
        "UDDI",
        "lookups",
        "Web",
        "Services",
        "Description",
        "Language",
        "WSDL",
        "SOAP",
        "protocol",
        "Expertise",
        "XML",
        "technologies",
        "DTDSchemas",
        "DOM",
        "SAX",
        "XSLT",
        "Tag",
        "Libraries",
        "JSF",
        "Struts",
        "JSTL",
        "Spring",
        "Tags",
        "Display",
        "Tag",
        "XMLXSD",
        "frameworks",
        "Spring",
        "MVC",
        "Jakarta",
        "JSF",
        "spring",
        "Hibernate",
        "Strong",
        "experience",
        "Spring",
        "Framework",
        "SpringCoreIOC",
        "SpringSecurity",
        "authentication",
        "authorization",
        "features",
        "SpringSecurity",
        "Experienced",
        "Distributed",
        "Transaction",
        "Management",
        "system",
        "Spring",
        "JTA",
        "Atomikos",
        "Working",
        "Spring",
        "JDBC",
        "Template",
        "JMS",
        "Template",
        "EMS",
        "JavaBeans",
        "applications",
        "technologies",
        "EJB30",
        "Spring2x3x4x",
        "Hibernate324x",
        "REST",
        "Web",
        "services",
        "JAX",
        "WS",
        "Rule",
        "Engines",
        "XML",
        "API",
        "experience",
        "NPM",
        "BOWER",
        "Grunt",
        "Gulp",
        "build",
        "process",
        "Proficient",
        "care",
        "web",
        "application",
        "servers",
        "Domain",
        "connection",
        "pool",
        "JMS",
        "Deploying",
        "applications",
        "WebLogic",
        "WebSphere",
        "ApacheTomcat",
        "Glassfish",
        "JBoss",
        "UNIXshell",
        "scripts",
        "batch",
        "processing",
        "applicationsusingMEAN",
        "Stack",
        "MongoDB",
        "ExpressJS",
        "AngularJS",
        "NodeJS",
        "ELK",
        "Stack",
        "Elastic",
        "Search",
        "Logstash",
        "Kibana",
        "databases",
        "Oracle",
        "g",
        "SQL",
        "Server",
        "MySQL",
        "DB2",
        "NOSQL",
        "DB",
        "studio",
        "knowledge",
        "Enterprise",
        "Service",
        "Bus",
        "unit",
        "testing",
        "JUnitframework",
        "Mockito",
        "Easymock",
        "integration",
        "deployment",
        "applications",
        "tools",
        "ANT",
        "Maven",
        "log4j",
        "Java",
        "test",
        "scripts",
        "Selenium",
        "IDE",
        "Selenium",
        "Webdriver",
        "Experience",
        "test",
        "suites",
        "Jasmine",
        "Karma",
        "tools",
        "NPM",
        "Bower",
        "Gruntand",
        "Testem",
        "BPM",
        "business",
        "process",
        "management",
        "tools",
        "JBPM",
        "Adobe",
        "LiveCycle",
        "Experience",
        "AWS",
        "components",
        "EC2",
        "servers",
        "S3",
        "Glacier",
        "EBS",
        "CloudFront",
        "Elasticcache",
        "IAM",
        "CloudWatch",
        "CloudFormation",
        "DynamoDB",
        "Experience",
        "Microsoft",
        "Azure",
        "Cloud",
        "Computing",
        "development",
        "Strong",
        "Knowledge",
        "technologies",
        "Python",
        "Scala",
        "Shell",
        "GroovyonGrails",
        "Perl",
        "Expertise",
        "design",
        "development",
        "web",
        "applications",
        "technologies",
        "Scala",
        "Play",
        "framework",
        "Development",
        "testing",
        "deployment",
        "enterprise",
        "applications",
        "platforms",
        "IDEs",
        "Eclipse",
        "Rational",
        "Application",
        "Developer",
        "Tool",
        "Suite",
        "STSIntelliJ",
        "Experience",
        "version",
        "systems",
        "Subversion",
        "CVSSVNGITand",
        "Rational",
        "Clear",
        "Case",
        "Splunk",
        "Log",
        "Management",
        "Creating",
        "Email",
        "Notification",
        "Users",
        "threshold",
        "limit",
        "Experience",
        "Kafka",
        "Camel",
        "understanding",
        "Scala",
        "Experience",
        "frameworks",
        "Kafka",
        "knowledge",
        "SAPMM",
        "Module",
        "MDM",
        "Principles",
        "Architecture",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Wells",
        "Fargo",
        "Des",
        "Moines",
        "IA",
        "January",
        "Present",
        "Description",
        "Wells",
        "Fargo",
        "banking",
        "services",
        "company",
        "banking",
        "mortgage",
        "credit",
        "cards",
        "insurance",
        "services",
        "development",
        "intranet",
        "loan",
        "servicing",
        "application",
        "Application",
        "loan",
        "servicing",
        "application",
        "application",
        "pay",
        "system",
        "loan",
        "payments",
        "employees",
        "paycheck",
        "Application",
        "alerts",
        "components",
        "Responsibilities",
        "business",
        "analysts",
        "requirements",
        "FSD",
        "requirements",
        "Analysis",
        "Design",
        "Development",
        "System",
        "Testing",
        "User",
        "Acceptance",
        "Testing",
        "approaches",
        "TestDriven",
        "Development",
        "TDD",
        "Scrum",
        "enterprise",
        "applications",
        "SpringMVCframework",
        "Hibernateframework",
        "Primefaces",
        "RESTFul",
        "web",
        "services",
        "UI",
        "spring",
        "view",
        "component",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "AngularJS",
        "Vuejs",
        "custom",
        "UI",
        "directives",
        "filters",
        "Application",
        "logic",
        "Architecture",
        "Created",
        "Typescript",
        "components",
        "services",
        "REST",
        "APIs",
        "Component",
        "architecture",
        "Angular",
        "Used",
        "Vuex",
        "Vuejs",
        "Vue",
        "Component",
        "structure",
        "frontend",
        "state",
        "management",
        "Vuejs",
        "data",
        "server",
        "axios",
        "data",
        "forms",
        "data",
        "data",
        "Spring",
        "Hibernate",
        "IOC",
        "AOP",
        "ORM",
        "end",
        "tiers",
        "Hibernate",
        "Template",
        "extent",
        "use",
        "HQL",
        "Parameters",
        "Queries",
        "interfaces",
        "Expression",
        "Query",
        "Criteria",
        "Multithreading",
        "Concurrency",
        "threads",
        "generating",
        "mails",
        "Hibernate",
        "SpringIntegration",
        "data",
        "abstraction",
        "database",
        "Hibernate",
        "ORM",
        "solutionand",
        "technique",
        "mapping",
        "data",
        "representation",
        "MVC",
        "model",
        "Oracle",
        "Relational",
        "data",
        "model",
        "schema",
        "Microservice",
        "architecture",
        "Spring",
        "Bootbased",
        "services",
        "REST",
        "Apache",
        "Kafka",
        "Developed",
        "Microservices",
        "SpringBoot",
        "NetflixOSS",
        "SpringCloud",
        "AWSCloud",
        "Deployed",
        "Spring",
        "Boot",
        "microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "Spring",
        "Quartz",
        "functionality",
        "scheduling",
        "tasks",
        "reports",
        "customers",
        "Pre",
        "Authentication",
        "database",
        "security",
        "Site",
        "Minder",
        "spring",
        "security",
        "Created",
        "Stacks",
        "Amazon",
        "Cloud",
        "Formation",
        "AWS",
        "Infrastructure",
        "resources",
        "AWS",
        "Lambda",
        "code",
        "AWS",
        "search",
        "feature",
        "source",
        "tool",
        "ElasticSearch",
        "system",
        "solution",
        "Elastic",
        "Search",
        "Kibana",
        "Logstash",
        "Adobe",
        "framework",
        "applications",
        "device",
        "web",
        "services",
        "JSONdatabetween",
        "Frontend",
        "Controller",
        "proof",
        "concept",
        "Data",
        "A",
        "Service",
        "DaaS",
        "RESTful",
        "Jersey",
        "web",
        "service",
        "data",
        "store",
        "Tomcat",
        "J2EE",
        "design",
        "patterns",
        "Value",
        "Object",
        "Pattern",
        "Service",
        "locator",
        "Session",
        "facade",
        "Singleton",
        "Factory",
        "DAO",
        "Thread",
        "Safe",
        "blocks",
        "multithread",
        "access",
        "transactions",
        "TDD",
        "Unit",
        "Integration",
        "Performance",
        "Test",
        "Cases",
        "Junit",
        "Selenium",
        "Vuejs",
        "unit",
        "Karma",
        "Jasmine",
        "SOAPUI",
        "testing",
        "web",
        "services",
        "Process",
        "Avro",
        "Data",
        "Store",
        "Parquet",
        "Files",
        "Stored",
        "data",
        "toHDFS",
        "analysis",
        "HIVE",
        "tables",
        "top",
        "deployment",
        "applications",
        "WebSphere",
        "Application",
        "Server",
        "Application",
        "Server",
        "Configuring",
        "Kafka",
        "Consumer",
        "Producer",
        "metrics",
        "Kafka",
        "System",
        "performance",
        "project",
        "messages",
        "Kafka",
        "topic",
        "conversation",
        "JSON",
        "String",
        "data",
        "format",
        "OracleDB",
        "NoSQLDB",
        "Developed",
        "database",
        "adapter",
        "web",
        "services",
        "adapter",
        "custom",
        "workflow",
        "nonoracle",
        "system",
        "Camel",
        "Implemented",
        "Apache",
        "Camel",
        "routes",
        "CamelSpring",
        "XML",
        "CamelSpring",
        "processor",
        "beans",
        "Scala",
        "components",
        "Play",
        "Akka",
        "credit",
        "card",
        "customer",
        "loan",
        "business",
        "rules",
        "ILog",
        "JRules",
        "Conducted",
        "Performance",
        "tuning",
        "JVM",
        "JMS",
        "throughput",
        "form",
        "Application",
        "server",
        "delivery",
        "Continuous",
        "Integration",
        "tools",
        "Docker",
        "Jenkins",
        "application",
        "AWS",
        "GIT",
        "version",
        "control",
        "code",
        "development",
        "Splunk",
        "development",
        "Splunk",
        "search",
        "language",
        "Splunk",
        "Web",
        "Framework",
        "xml",
        "configuration",
        "report",
        "custom",
        "dashboard",
        "building",
        "data",
        "Splunk",
        "DB",
        "APP",
        "data",
        "Splunk",
        "Oracle",
        "Database",
        "Environment",
        "Java",
        "Spring",
        "Hibernate",
        "Spring",
        "batch",
        "Spring",
        "security",
        "Spring",
        "Boot",
        "JPA",
        "JavaScript",
        "Vuejs",
        "HTML5",
        "CSS3",
        "WebSphere",
        "Application",
        "Server",
        "Eclipse",
        "Oracle",
        "g",
        "MongoDB",
        "Apache",
        "Camel",
        "log4j",
        "JunitTestNG",
        "Selenium",
        "EasyMock",
        "XML",
        "Web",
        "Services",
        "SOAP",
        "UI",
        "Kafka",
        "Adobe",
        "FlexScala",
        "DevOps",
        "AWS",
        "Hive",
        "HDFS",
        "Splunk",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "BCBS",
        "Detroit",
        "MI",
        "January",
        "December",
        "Description",
        "BCBS",
        "health",
        "insurance",
        "health",
        "provider",
        "company",
        "BCBS",
        "family",
        "Dental",
        "Plans",
        "Medicare",
        "Medicare",
        "State",
        "Group",
        "Plans",
        "plans",
        "Project",
        "division",
        "groups",
        "Provider",
        "Clinical",
        "Data",
        "IAAS",
        "Information",
        "Service",
        "End",
        "End",
        "Enrollment",
        "Product",
        "Member",
        "Benefits",
        "Tracking",
        "Summary",
        "Responsibilities",
        "Java",
        "developer",
        "backend",
        "team",
        "part",
        "quality",
        "code",
        "services",
        "Agile",
        "Software",
        "Development",
        "Methodology",
        "TestDriven",
        "Development",
        "TDD",
        "application",
        "functionality",
        "Web",
        "UI",
        "RichFaces",
        "JSF",
        "CSS",
        "HTML",
        "JavaScript",
        "Fetched",
        "data",
        "Orchestration",
        "Layer",
        "SpringBootApplication",
        "UI",
        "ReactJS",
        "screens",
        "frontend",
        "ReactJS",
        "components",
        "NPM",
        "Redux",
        "library",
        "Software",
        "web",
        "app",
        "NodeJS",
        "BackboneJS",
        "ReactJS",
        "CSS",
        "HTML",
        "template",
        "engine",
        "Jade",
        "features",
        "spring",
        "framework",
        "Dependency",
        "Injection",
        "IOC",
        "Annotations",
        "Spring",
        "integration",
        "Hibernate",
        "application",
        "architecture",
        "System",
        "Spring",
        "MVC",
        "J2EE",
        "specifications",
        "SecuritySystem",
        "development",
        "Web",
        "Applications",
        "phases",
        "security",
        "implementation",
        "spring",
        "security",
        "system",
        "modes",
        "authentications",
        "LDAP",
        "authentication",
        "Database",
        "authentication",
        "PreAuthentication",
        "Integrated",
        "application",
        "Spring",
        "Security",
        "form",
        "authentication",
        "authorization",
        "spring",
        "security",
        "JSP",
        "tags",
        "UI",
        "level",
        "spring",
        "security",
        "SpringQuartz",
        "functionality",
        "scheduling",
        "tasks",
        "reports",
        "customers",
        "mails",
        "policies",
        "functionality",
        "Spring",
        "IO",
        "Spring",
        "Boot",
        "Thymeleaf",
        "Hibernate",
        "ORM",
        "Java",
        "EE",
        "components",
        "Spring",
        "MVC",
        "Spring",
        "IOC",
        "Spring",
        "transactions",
        "Spring",
        "security",
        "modules",
        "Micro",
        "services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "Cloud",
        "wiring",
        "service",
        "dependencies",
        "Micro",
        "service",
        "systems",
        "Kubernetes",
        "ecosystem",
        "Micro",
        "services",
        "Developed",
        "Applications",
        "Rule",
        "Engines",
        "Drools",
        "business",
        "User",
        "Roles",
        "Hive",
        "QL",
        "Map",
        "Cassandra",
        "bulk",
        "Java",
        "Web",
        "Services",
        "UNIX",
        "Shell",
        "Scripts",
        "Active",
        "MQs",
        "queue",
        "Cassandra",
        "ApacheKafka",
        "Zookeeper",
        "application",
        "design",
        "patterns",
        "Session",
        "Facade",
        "Business",
        "Delegate",
        "Bean",
        "Factory",
        "Singleton",
        "Data",
        "Access",
        "Object",
        "Service",
        "Locator",
        "Rewrite",
        "Java",
        "application",
        "Python",
        "module",
        "format",
        "data",
        "Python",
        "Django",
        "data",
        "users",
        "NodeJSExpressJS",
        "REST",
        "services",
        "UI",
        "app",
        "backend",
        "system",
        "serverside",
        "development",
        "team",
        "NodeJS",
        "Grunt",
        "tasks",
        "Concat",
        "modules",
        "NodeJS",
        "designs",
        "requirements",
        "Grunt",
        "Bower",
        "Express",
        "NodeJS",
        "JUnit",
        "unit",
        "testing",
        "log4j",
        "test",
        "cases",
        "Front",
        "EndusingJasmine",
        "Karma",
        "Rabbit",
        "MQqueues",
        "implementation",
        "synchronization",
        "processes",
        "JMS",
        "queues",
        "consumption",
        "requests",
        "procedures",
        "applications",
        "part",
        "scheduling",
        "mechanisms",
        "Java",
        "MultiThreading",
        "part",
        "thread",
        "user",
        "user",
        "initiatives",
        "Continuous",
        "Integration",
        "Delivery",
        "CICD",
        "model",
        "Testdriven",
        "development",
        "Extreme",
        "programming",
        "XP",
        "automation",
        "AGILE",
        "development",
        "environment",
        "business",
        "needs",
        "world",
        "class",
        "Quality",
        "products",
        "Hibernate",
        "ObjectRelational",
        "Mapping",
        "ORM",
        "purposes",
        "persistence",
        "Oracle",
        "database",
        "PLSQL",
        "changes",
        "application",
        "TOAD",
        "Oracle",
        "client",
        "tables",
        "Packages",
        "Jobs",
        "procedures",
        "Integration",
        "automation",
        "batch",
        "run",
        "job",
        "Jenkins",
        "Worked",
        "Jenkins",
        "CI",
        "tool",
        "Build",
        "Tool",
        "Ant",
        "JAD",
        "sessions",
        "requirements",
        "end",
        "clients",
        "GIT",
        "version",
        "management",
        "JIRA",
        "management",
        "system",
        "Environment",
        "Java",
        "Spring",
        "Hibernate",
        "Spring",
        "batch",
        "Spring",
        "quartz",
        "Spring",
        "security",
        "Spring",
        "Jta",
        "Spring",
        "BootPython",
        "KubernetesJPA",
        "JavaScripts",
        "ReactJS",
        "BackboneJS",
        "NodeJS",
        "HTML50",
        "CSS3",
        "JMS",
        "Rabbit",
        "MQ",
        "JAXP",
        "SAX",
        "DOM",
        "JBoss",
        "Eclipse",
        "Oracle",
        "g",
        "Cassandra",
        "Kafka",
        "Spring",
        "Cloud",
        "log4j",
        "JUnit",
        "XML",
        "Web",
        "ServicesGIT",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Priceline",
        "Group",
        "Norwalk",
        "CT",
        "June",
        "December",
        "DescriptionPriceline",
        "American",
        "ecommerce",
        "website",
        "discount",
        "rates",
        "travel",
        "purchases",
        "services",
        "Priceline",
        "supplier",
        "provision",
        "travel",
        "services",
        "customers",
        "Priceline",
        "group",
        "brands",
        "countries",
        "services",
        "flight",
        "tickets",
        "car",
        "rentals",
        "hotel",
        "rooms",
        "Priceline",
        "countries",
        "brand",
        "names",
        "Responsibilities",
        "SDLC",
        "phases",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "AgileWater",
        "Managers",
        "Business",
        "performance",
        "issues",
        "keyAspects",
        "requirements",
        "mappingto",
        "application",
        "users",
        "frontend",
        "development",
        "NodeJS",
        "JavaScript",
        "CoffeeScript",
        "DevOps",
        "development",
        "principles",
        "screens",
        "end",
        "AngularJS",
        "components",
        "NPM",
        "Developed",
        "dashboard",
        "calls",
        "Business",
        "Customers",
        "Count",
        "Flags",
        "Realtime",
        "graphs",
        "Analytical",
        "Reporting",
        "NodeJS",
        "UI",
        "components",
        "AngularJS",
        "JSON",
        "web",
        "services",
        "Migrating",
        "application",
        "deployment",
        "procedures",
        "Googles",
        "Version",
        "Controlfor",
        "development",
        "GAE",
        "google",
        "app",
        "EngineUnFuddlegitsvn",
        "management",
        "system",
        "GAE",
        "version",
        "control",
        "Day",
        "Day",
        "development",
        "activities",
        "GWT",
        "google",
        "web",
        "tool",
        "kit",
        "JavaScript",
        "files",
        "frequency",
        "usages",
        "functionality",
        "minipie",
        "chart",
        "Developed",
        "Application",
        "Spring",
        "MVC",
        "annotations",
        "DependencyinjectionIOC",
        "Struts",
        "framework",
        "views",
        "JSP",
        "Core",
        "Java",
        "concepts",
        "MultiThreading",
        "ExceptionHandling",
        "CollectionAPIs",
        "features",
        "enhancements",
        "MultiThreading",
        "concurrency",
        "threads",
        "generating",
        "mails",
        "Core",
        "Java",
        "latency",
        "side",
        "Java",
        "Concurrency",
        "backend",
        "application",
        "components",
        "application",
        "Spring",
        "forms",
        "Spring",
        "JSP",
        "views",
        "business",
        "logic",
        "data",
        "logic",
        "components",
        "Hibernate",
        "Entities",
        "SpringHibernate",
        "DAO",
        "Spring",
        "models",
        "MVC",
        "architecture",
        "application",
        "industry",
        "design",
        "patterns",
        "Singleton",
        "Business",
        "Delegate",
        "MVC",
        "Factory",
        "Pattern",
        "reusability",
        "datatables",
        "Ace",
        "Sorting",
        "Filtering",
        "Pagination",
        "functionalities",
        "utility",
        "classes",
        "core",
        "validation",
        "modules",
        "app",
        "design",
        "patterns",
        "Session",
        "Facade",
        "Business",
        "Delegate",
        "Adaptor",
        "BeanFactory",
        "Singleton",
        "Utilized",
        "MEAN",
        "REST",
        "design",
        "pattern",
        "MVC",
        "framework",
        "SPA",
        "framework",
        "Node",
        "JS",
        "Used",
        "MVC",
        "architecture",
        "ExtJS",
        "Framework",
        "code",
        "complexity",
        "code",
        "Transaction",
        "management",
        "JTA",
        "API",
        "specification",
        "API",
        "XML",
        "documents",
        "database",
        "XML",
        "XSL",
        "Transformation",
        "webcontent",
        "database",
        "connectivity",
        "NoSQL",
        "persistence",
        "pattern",
        "data",
        "app",
        "performance",
        "Mapreduce",
        "functionality",
        "customer",
        "order",
        "MongoDB",
        "scripts",
        "NoSQL",
        "database",
        "data",
        "changes",
        "CRUD",
        "operations",
        "MongoDB",
        "NoSQL",
        "details",
        "Customer",
        "Drools",
        "Rule",
        "Engines",
        "business",
        "User",
        "Roles",
        "Apache",
        "Maven",
        "project",
        "management",
        "application",
        "Junits",
        "Mockito",
        "SpringJunitRunnerframework",
        "Web",
        "Services",
        "Testing",
        "SoapUI",
        "regression",
        "compliance",
        "load",
        "tests",
        "JUnit",
        "support",
        "application",
        "system",
        "Driven",
        "Development",
        "TDD",
        "version",
        "control",
        "repository",
        "SVN",
        "Subversion",
        "apache",
        "JIRA",
        "issue",
        "Maven",
        "build",
        "tool",
        "dependencies",
        "application",
        "bugs",
        "bugs",
        "defects",
        "application",
        "Environment",
        "Core",
        "Java",
        "Spring",
        "MVC",
        "Spring",
        "integration",
        "Components",
        "Spring",
        "JDBC",
        "Spring",
        "RestSpring",
        "Dependency",
        "Injection",
        "Struts",
        "JMS",
        "JIRA",
        "AngularJS",
        "NodeJS",
        "Mobile",
        "Javascript",
        "Html",
        "CSSApache",
        "Tomcat",
        "Restful",
        "Eclipse",
        "MongoDB",
        "Maven",
        "Drools",
        "MockitoSpringJunit",
        "SVN",
        "Java",
        "Developer",
        "AXA",
        "Financials",
        "New",
        "York",
        "NY",
        "June",
        "May",
        "DescriptionFinancial",
        "planner",
        "advisors",
        "customers",
        "Retirement",
        "Insurance",
        "Education",
        "Tax",
        "Estate",
        "Mortgage",
        "planning",
        "benefits",
        "period",
        "projection",
        "end",
        "period",
        "customers",
        "insurance",
        "claims",
        "purchase",
        "insurance",
        "payment",
        "system",
        "insurance",
        "premiums",
        "Retirement",
        "plans",
        "system",
        "system",
        "facility",
        "insurance",
        "investment",
        "plans",
        "quotes",
        "information",
        "customer",
        "Responsibilities",
        "SDLC",
        "phases",
        "Requirement",
        "Design",
        "Analysis",
        "Code",
        "development",
        "project",
        "Agile",
        "SCRUM",
        "Methodology",
        "modeling",
        "time",
        "knowledge",
        "sharing",
        "project",
        "groups",
        "team",
        "meetings",
        "status",
        "update",
        "calls",
        "Struts",
        "Framework",
        "Hibernate",
        "version",
        "Application",
        "presentation",
        "layer",
        "Struts",
        "JavaScript",
        "Developed",
        "Action",
        "classes",
        "Dyna",
        "Action",
        "Forms",
        "Validation",
        "framework",
        "EJB",
        "StatelessStateful",
        "session",
        "beans",
        "business",
        "logic",
        "session",
        "handling",
        "transaction",
        "Enterprise",
        "Java",
        "Beans",
        "Session",
        "Entity",
        "WebSphere",
        "Application",
        "Server",
        "Implement",
        "modules",
        "NodeJS",
        "designs",
        "requirements",
        "time",
        "tracking",
        "class",
        "schedules",
        "NodeJS",
        "socketio",
        "Express",
        "JS",
        "framework",
        "Microsoft",
        "Azure",
        "cloud",
        "services",
        "application",
        "web",
        "services",
        "component",
        "APIs",
        "application",
        "communication",
        "cloud",
        "web",
        "services",
        "services",
        "care",
        "MultiThreading",
        "java",
        "classeslibrary",
        "Javascripts",
        "client",
        "side",
        "validations",
        "JQuery",
        "processing",
        "development",
        "web",
        "services",
        "IBM",
        "WebSphere",
        "Applications",
        "unit",
        "testing",
        "troubleshooting",
        "Modifying",
        "programs",
        "enhancements",
        "UNIX",
        "shell",
        "scripts",
        "jobs",
        "Entity",
        "Beans",
        "Bean",
        "Managed",
        "Persistence",
        "Entity",
        "Beans",
        "JDBC",
        "DB2",
        "Worked",
        "Redhat",
        "Linux",
        "environment",
        "application",
        "scripts",
        "jobs",
        "Environment",
        "Jakarta",
        "Struts",
        "Framework",
        "Core",
        "Java",
        "Hibernate",
        "30EJB",
        "Web",
        "Services",
        "CSS",
        "NodeJSEclipse",
        "CVS",
        "WebSphere",
        "Application",
        "Server",
        "Azure",
        "JUnit",
        "UNIX",
        "JavaScript",
        "Servlets",
        "JSP",
        "JDBC",
        "JQuery",
        "DB2",
        "Java",
        "Developer",
        "Provident",
        "Financial",
        "Services",
        "Inc",
        "Jersey",
        "City",
        "NJ",
        "October",
        "May",
        "DescriptionThe",
        "Provident",
        "Bank",
        "service",
        "customer",
        "convenience",
        "needs",
        "businesses",
        "individuals",
        "families",
        "counties",
        "New",
        "Jersey",
        "bank",
        "array",
        "deposit",
        "loan",
        "investment",
        "products",
        "trust",
        "wealth",
        "management",
        "services",
        "Provident",
        "Financial",
        "Services",
        "Inc",
        "Services",
        "needs",
        "categories",
        "services",
        "Bank",
        "bank",
        "accounts",
        "loans",
        "needs",
        "information",
        "schemes",
        "bank",
        "site",
        "addition",
        "site",
        "banking",
        "transactions",
        "Members",
        "account",
        "details",
        "transactions",
        "fly",
        "Responsibilities",
        "Project",
        "MVC",
        "ModelViewController",
        "Architecture",
        "framework",
        "Spring",
        "Framework",
        "Dependency",
        "injection",
        "Struts",
        "Hibernate",
        "Web",
        "Tier",
        "application",
        "Jakarta",
        "Struts",
        "Framework",
        "application",
        "Java",
        "JSP",
        "Servlets",
        "Oracle",
        "9i",
        "JAXWS",
        "client",
        "web",
        "services",
        "classes",
        "WSDL",
        "JAXB",
        "implementation",
        "IBM",
        "RAD",
        "Wrote",
        "GWT",
        "code",
        "presentation",
        "layer",
        "GWT",
        "widgets",
        "event",
        "handlers",
        "Cucumber",
        "document",
        "drive",
        "development",
        "behavior",
        "legacy",
        "code",
        "base",
        "functionality",
        "Java",
        "Server",
        "Faces",
        "JSF",
        "framework",
        "JMS",
        "PointtoPoint",
        "model",
        "Message",
        "beans",
        "messages",
        "JMS",
        "procedures",
        "applications",
        "part",
        "DesigningDeveloping",
        "J2EE",
        "applicationsPOCs",
        "JavaJ2EE",
        "DROOLS",
        "AspectJ",
        "BEA",
        "Weblogic",
        "server",
        "Web",
        "Service",
        "Spring",
        "API",
        "JSON",
        "XML",
        "format",
        "data",
        "packets",
        "frontend",
        "controller",
        "Servlet",
        "Apache",
        "Tomcat",
        "Jboss",
        "Weblogic",
        "Developed",
        "Stored",
        "Procedures",
        "procedures",
        "Hibernate",
        "project",
        "transactions",
        "Hibernate",
        "EJB",
        "components",
        "Session",
        "Message",
        "Driven",
        "Expertise",
        "integration",
        "services",
        "SOA",
        "Web",
        "Services",
        "XML",
        "SOAP",
        "Layer",
        "design",
        "web",
        "services",
        "SOAP",
        "XML",
        "WSDL",
        "XML",
        "Schemas",
        "JAXP",
        "XSL",
        "Rational",
        "Rose",
        "UML",
        "diagrams",
        "Environment",
        "Core",
        "Java",
        "J2EE",
        "JSP",
        "Servlets",
        "XML",
        "XSLT",
        "EJB",
        "JDBC",
        "JBuilder",
        "JBoss",
        "Swing",
        "JavaScript",
        "JMS",
        "HTML",
        "CSS",
        "MySQL",
        "Server",
        "CVS",
        "Jr",
        "Java",
        "Developer",
        "Triumph",
        "Systems",
        "NY",
        "June",
        "August",
        "DescriptionMedical",
        "billing",
        "system",
        "equipment",
        "store",
        "billing",
        "system",
        "billing",
        "functionalities",
        "functions",
        "payment",
        "types",
        "cash",
        "debit",
        "card",
        "credit",
        "card",
        "PayPal",
        "checks",
        "system",
        "consist",
        "types",
        "account",
        "Administrator",
        "user",
        "product",
        "information",
        "details",
        "system",
        "system",
        "payers",
        "details",
        "purchase",
        "information",
        "Responsibilities",
        "requirements",
        "users",
        "application",
        "analysis",
        "UML",
        "diagrams",
        "preparation",
        "Detailed",
        "Design",
        "Documents",
        "Developed",
        "Servlet",
        "JSP",
        "screens",
        "client",
        "view",
        "Struts",
        "framework",
        "Developed",
        "Action",
        "classes",
        "Action",
        "Form",
        "switch",
        "Actions",
        "Dispatch",
        "Actions",
        "Struts",
        "Validation",
        "framework",
        "Rules",
        "business",
        "requirements",
        "Custom",
        "Tag",
        "client",
        "view",
        "Multithreading",
        "logic",
        "Java",
        "Concurrency",
        "APIs",
        "processing",
        "service",
        "requests",
        "development",
        "client",
        "custom",
        "components",
        "JavaScripts",
        "HTML",
        "DHTML",
        "Developed",
        "Java",
        "classes",
        "reports",
        "transactions",
        "Wrote",
        "procedures",
        "JDBC",
        "routines",
        "ORACLE",
        "tables",
        "information",
        "bug",
        "fixing",
        "Change",
        "requests",
        "life",
        "cycle",
        "application",
        "Unittesting",
        "IntegrationTesting",
        "Maintenance",
        "stage",
        "DevelopedModified",
        "SQL",
        "Stored",
        "Procedure",
        "Triggers",
        "Code",
        "Review",
        "Code",
        "Level",
        "PerformanceTuning",
        "code",
        "Environment",
        "Servlets",
        "JSP",
        "Struts",
        "JDBC",
        "JavaScript",
        "HTML",
        "SVN",
        "JDBC",
        "WebLogic",
        "Oracle",
        "Education",
        "Bachelors",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T23:12:44.341806",
    "resume_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer Wells Fargo Seattle WA Over 8years of rich indigenous experience in designing developing and testing of distributed applications internetintranet base database J2EE and SOA compliant applications Experienced in Java Webbased Desktop Based Developmentwith Concepts of Object Oriented Design OOD Object Oriented Analysis OOA Object Oriented Programming OOP and its implementation Experienced in implementing clientserver business applications using MVC SOA architecture and MicroServices Experience in AgileScrum Pair Programming Test Driven Development TDD and Waterfall model Expertise in Core java concepts likeCollections Generics Multithreading Serialization and Exception Handling As a Java Full stack SME has expertise in developing Enterprise Applications using Java and J2EE technologies Such as JSP Servlets EnterpriseJavaBeans RESTfulWebServices SOAPWebServices JDBC JMS JAXB SOA Experienced in Middleware persistence framework likeHibernateJPA JDBC iBatisfor mapping Java POJO classesObjects with database and using Hibernate Query Language HQL Experienced in front End technologies such asHTML5 CSS3 JQuery JavaScriptReactJS NodeJS AngularJS ExtJS Bootstrap VBScript Perl AJAX Adobe Flex Action Script JSONXSD XSTL Tiles Tag Libraries Experienced in developing an enterprise applications by writing server side code with NodeJS and Express Framework a database to store and retrieve data with MongoDB and frontend web pages designing with ReactJS Experienced in creating dashboards reports using BackboneJS Experience in developing Mobile web applications using JQuery Mobile and phonegap for Smartphones Tablets Experience in working with Service Oriented Architecture which includes Universal Description and Discovery Integration UDDI lookups and Web Services Description Language WSDL using SOAP protocol Expertise in XML technologies such as DTDSchemas DOM SAX and XSLT Extensively used different Tag Libraries like JSF Tags Struts Tags JSTL Spring Tags Display Tag XMLXSD Experienced in frameworks Spring MVC Jakarta struts framework JSF spring and Hibernate Strong experience in Spring Framework including SpringCoreIOC SpringSecurity and implement the authentication authorization and accesscontrol features by using SpringSecurity Experienced in Distributed Transaction Management system with Spring JTA Based on Atomikos Experienced in Working with Spring JDBC Template JMS Template EMS and JavaBeans Developed applications using latest technologies like EJB30 Spring2x3x4x Hibernate324x and REST based Web services axis20 JAX WS 20 Rule Engines Drools41 ILOG XML API and tools Extensive experience in using NPM BOWER Grunt and Gulp for build process Proficient in taking care of web and application servers in making Domain configuring connection pool JMS Deploying applications on WebLogic WebSphere ApacheTomcat Glassfish and JBoss Experienced in developing UNIXshell scripts for batch processing Experienced in developing modern applicationsusingMEAN Stack MongoDB ExpressJS AngularJS and NodeJS Experienced on ELK Stack Elastic Search Logstash and Kibana Experienced in working with multiple databases like Oracle 10g11g SQL Server MySQL DB2 NOSQL DB Worked on Mule soft studio with Sound knowledge on Enterprise Service Bus Experienced in performing unit testing using JUnitframework with Mockito and Easymock integration and deployment of applications using tools such as ANT and Maven debugging through log4j Experienced in creating and updating Java test scripts using Selenium IDE and Selenium Webdriver Experience in creating test suites using Jasmine Karma and worked on tools NPM Bower Gruntand Testem Involved in BPM business process management tools like JBPM and Adobe LiveCycle Experience in using various AWS components like EC2 for virtual servers S3 and Glacier for storing objects EBS CloudFront Elasticcache IAM CloudWatch CloudFormation and DynamoDB Experience in Microsoft Azure Cloud Computing development and support Strong Knowledge in scripting technologies like Python Scala Shell GroovyonGrails and Perl Expertise in design and development of various web applications using technologies Scala Play framework Experienced in Development testing and deployment of enterprise applications on WindowsUNIX platforms using IDEs such as Eclipse Rational Application Developer NetBeansSpring Tool Suite STSIntelliJ 14x15x Experience in different version controllingtracking systems Subversion CVSSVNGITand Rational Clear Case Experienced in Splunk Log Management Creating dashboardsmonitoringreporting Email Notification to Users for threshold limit Experience working in Kafka and Camel with indepth understanding of Scala Experience with messaging frameworks ActiveMQ RabbitMQ Kafka Good knowledge of SAPMM Module MDM Principles Architecture Authorized to work in the US for any employer Work Experience Sr Java Full Stack Developer Wells Fargo Des Moines IA January 2016 to Present Description Wells Fargo is a multinational banking and financial services holding company which provides banking mortgage credit cards insurance and commercial financial services Involved in development of an intranet based loan servicing application The Application automates the loan servicing application The application is also integrated into automatic pay system so as to deduct loan payments directly from the employees monthly paycheck The Application has sophisticated alerts and monitoring components as well Responsibilities Interacted with the business analysts to gather the requirements FSD for the requirements Actively involved in Analysis Design Development System Testing and User Acceptance Testing Used Agile approaches Including TestDriven Development TDD and Scrum Developed the multiple enterprise applications which are developed using SpringMVCframework Hibernateframework Primefaces RESTFul web services Designed and developed UI using spring view component HTML5 CSS3 Bootstrap AngularJS and Vuejs Built custom UI widgets directives filters and Application logic using AngularJSMVC Architecture Created Typescript reusable components and services to consume REST APIs using Component based architecture provided by Angular 20 Used Vuex to work with Vuejs and refactored the Vue Component structure to gain frontend state management Vuejs was used to fetch data from server using axios prepare and transform data to display in the forms validate userentered data and then post data Used Spring and Hibernate for implementing IOC AOP and ORM for back end tiers Implemented Hibernate Template to great extent making use of HQL Named Parameters Named Queries and interfaces such as Expression Query and Criteria Used Multithreading and Concurrency and implemented threads while preparing and generating mails Developed Hibernate with SpringIntegration as the data abstraction to interact with the database of MongoDB Used Hibernate objectrelationalmapping ORM solutionand technique of mapping data representation from MVC model to Oracle Relational data model with SQLbased schema Used a Microservice architecture with Spring Bootbased services interacting through REST and Apache Kafka Developed Microservices using SpringBoot NetflixOSS SpringCloud and deploying to AWSCloud Deployed Spring Boot based microservices Docker container using Amazon EC2 container services Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers Implemented Pre Authentication and database security with Site Minder and spring security Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Building search feature based on open source tool ElasticSearch Implemented system logging solution using Elastic Search Kibana and Logstash Used Adobe flex framework for building and maintaining applications that deploy on all major device platforms CreatedRESTful web services using SpringRESTfulAPIsending JSONdatabetween Frontend middletier Controller Created proof of concept Data As A Service DaaS based RESTful Jersey web service which is connected to a MongoDB based data store running on Tomcat 8 Used J2EE design patterns like Value Object Pattern Service locator Session facade Singleton Factory and DAO Involved in writing Thread Safe blocks for multithread access to make valid transactions Deployed TDD through Unit Integration and Performance Test Cases using Junit and Selenium Also set up the Vuejs unit testing with Karma and Jasmine Used SOAPUI for testing web services Process Avro Data to Store in Parquet Files Stored data toHDFS for analysis Created HIVE tables on top of them Performed deployment of applications on WebSphere Application Server Application Server Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance Designed and developed a project that reads messages from Kafka topic and applied conversation from JSON to pipe delimited String data format to be saved in OracleDB and NoSQLDB Developed database adapter web services adapter messaging adapter and custom workflow for nonoracle system using Camel and Implemented Apache Camel routes using CamelSpring XML and CamelSpring processor beans Used Scala for coding the components in Play and Akka Involved in developing and modifying the credit card customer loan business rules in ILog JRules Conducted Performance tuning including JVM tuning JMS to the maximum throughput form Application server Used Continuous delivery Continuous Integration tools Docker Jenkins to deploy this application to AWS and used GIT for version control of code for incremental development Experienced in Splunk development Splunk search language Splunk Web Framework simple xml alerts configuration report building custom dashboard building and data modeling Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Environment Java 80 Spring 4 Hibernate 42 Spring batch Spring security Spring Boot JPA JavaScript AngularJS Vuejs HTML5 CSS3 WebSphere Application Server 85 Eclipse Oracle 11g MongoDB ILOG Apache Camel log4j JunitTestNG Selenium EasyMock XML Web Services SOAP UI Kafka Adobe FlexScala DevOps AWS Hive HDFS Splunk Sr Java Full Stack Developer BCBS Detroit MI January 2014 to December 2015 Description BCBS is the health insurance and health provider company BCBS provides individual and family plans Dental Plans Medicare Medicare State Plans Group Plans and other plans This Project had division of groups which was Provider and Clinical Data IAAS Information as a Service End to End Enrollment Product Member Benefits and Tracking Summary Responsibilities As a Java developer involved in backend and frontend developing team Took part in developing maintaining reviewing and supporting quality code and services Followed Agile Software Development Methodology and TestDriven Development TDD to build the application iteratively and incrementally Enhanced and optimized the functionality of Web UI using RichFaces JSF AJAX CSS HTML and JavaScript Fetched JSON data within Orchestration Layer with SpringBootApplication and displaying it in UI using ReactJS Developed various screens for frontend using ReactJS Used predefined components from NPM and Redux library Software is built as a web app on NodeJS with BackboneJS ReactJS CSS is compiled with LESS and HTML template engine in Jade Implemented various features of spring framework such as Dependency Injection IOC Annotations and Spring integration with Hibernate Implemented application architecture of the System is based on Spring MVC and J2EE specifications Experienced in SecuritySystem development for Web Applications Involved and developed all phases of security implementation using spring security system against modes of authentications LDAP authentication Database authentication and PreAuthentication Integrated application with Spring Security for form based authentication and authorization by used spring security JSP tags to provide UI level spring security Worked on SpringQuartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies All the functionality is implemented using Spring IO Spring Boot Thymeleaf and Hibernate ORM Implemented Java EE components using Spring MVC Spring IOC Spring transactions and Spring security modules Implementing or exposing the Micro services to base onRESTful API utilizing Spring Boot with Spring MVC Experienced in using Spring Cloud for wiring service dependencies in Micro service systems Kubernetes were used as the best ecosystem to deploy and manage Micro services Developed Applications using Rule Engines Drools 4xand ILOG corresponding to validate the business User Roles Used Hive QL Map Reduce Cassandra bulk loads Java Web Services UNIX Shell Scripts Active MQs Implemented a distributed messaging queue to integrate with Cassandra using ApacheKafka and Zookeeper Implemented the application using design patterns such as Session Facade Business Delegate Bean Factory Singleton Data Access Object and Service Locator Rewrite existing Java application in Python module to deliver certain format of data Generated Python Django forms to record data of online users Initially we have used NodeJSExpressJS to mock REST services and built the UI app using that mocked backend Later we integrated with the real backend system and coordinated with serverside development team Used NodeJS to run Grunt tasks and build properly the projectcompile minify Concat etc and implement modules into NodeJS to integrate with designs and requirements Used Grunt Bower Express from NodeJS Used JUnit for unit testing and log4j for logging Developed test cases for Front EndusingJasmine and Karma Used Rabbit MQqueues for implementation of multithreaded synchronization processes and used JMS queues for consumption requests Used PLSQL stored procedures for applications that needed to execute as part of a scheduling mechanisms Handled Java MultiThreading part in backend one thread will be running for each user which serves that user Defined strategic initiatives on Continuous Integration Delivery CICD model with Testdriven development Extreme programming XP and build automation in an AGILE development environment to help respond quickly to business needs and to ship world class Quality products Utilized Hibernate for ObjectRelational Mapping ORM purposes for persistence onto the Oracle database Involved in PLSQL changes whenever needed in the application and used TOAD as Oracle client to access tables Packages Jobs and stored procedures Integration of automation batch run job with Jenkins Worked with Jenkins CI tool and Build Tool Ant Involved in JAD sessions to gather requirements from the end clients Used GIT as version management JIRA for defect management system Environment Java 70 Spring 3 Hibernate 42 Spring batch Spring quartz Spring security Spring Jta Spring BootPython KubernetesJPA JavaScripts ReactJS BackboneJS NodeJS HTML50 CSS3 JMS Rabbit MQ ILOG JAXP SAX DOM JBoss Eclipse Oracle 11g Cassandra Kafka Spring Cloud RESTful log4j JUnit XML Web ServicesGIT Java Full Stack Developer Priceline Group Norwalk CT June 2012 to December 2013 DescriptionPriceline is an American based ecommerce website which provides discount rates for the different travel related purchases and services Priceline is not the direct supplier but this facilitates the provision of the travel services to the customers The Priceline group consists of different brands in different countries with different services that provide flight tickets car rentals hotel rooms and also cruises Priceline operates in more than 200 countries having different brand names Responsibilities Involved in various SDLC phases like Requirement gathering Design Analysis and Code development with both iterative AgileWater fall Interacted with Managers Business usersfor performance issues discussed about keyAspects based on requirements and its relational mappingto the application with users Collaborated on responsive frontend development using AngularJS NodeJS JavaScript and CoffeeScript with DevOps development principles Develop various screens for the front end using AngularJS and used various predefined components from NPM Developed a dashboard based on Ajax calls with Business Customers Count Flags Realtime graphs for Analytical Reporting using NodeJS Extensively worked on developing UI components using AngularJS and JSON to interact Restful web services Involved in Migrating the application deployment procedures Googles Version Controlfor development with GAE google app EngineUnFuddlegitsvn as defect management system Used GAE version control for the Day to Day development activities while migrating Worked on integrating GWT google web tool kit for generating the JavaScript files for reporting the high frequency of usages of functionality in minipie chart Developed Application using Spring MVC 3 widely with annotations DependencyinjectionIOC integrated with the Struts 3 framework with views based on JSP Used various Core Java concepts such as MultiThreading ExceptionHandling CollectionAPIs to implement various features and enhancements Used MultiThreading and concurrency and implemented threads while preparing and generating mails Worked extensively on Core Java low latency side using Java Concurrency on the backend of the application Developed critical components of the application including Spring forms Spring controllers JSP views and business logic and data logic components that include Hibernate Entities SpringHibernate DAO and Spring models following MVC architecture Developed the application using industry standard design patterns like Singleton Business Delegate MVC and Factory Pattern etc for reusability Developed datatables using Ace componentsimplemented Sorting Filtering and Pagination functionalities to it Developed reusable utility classes in core java for validation that are used across all modules Implemented app using design patterns Session Facade Business Delegate Adaptor BeanFactory and Singleton Utilized MEAN stack REST design pattern MVC framework and SPA framework based on Node JS Used MVC architecture of ExtJS Framework to simplify the code complexity and increase clean code Transaction management is done by JTA API specification by implementing them Developed an API to write XML documents from a database Utilized XML and XSL Transformation for dynamic webcontent and database connectivity Implemented NoSQL persistence pattern for some data within app to increase performance by indexing Implemented Mapreduce functionality in MongoDB to maintain customer order tracking Composed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting Implemented CRUD operations with MongoDB NoSQL and manage all the details of Customer Worked on Drools Rule Engines with corresponding to validate the business User Roles Used Apache Maven for project management and building the application Developed Junits using Mockito and SpringJunitRunnerframework Involved in Web Services Testing using SoapUI to create and execute automated functional regression compliance and load tests Provided JUnit support for the application for debugging the system and Test Driven Development TDD Used version control repository SVN Subversion by apache and JIRA for issue tracking Used Maven as a build tool and retrieved all the dependencies required for the application Involved in fixing bugs the bugs or defects in the application Environment Core Java Spring MVC 3 Spring integration Components Spring JDBC Spring RestSpring Dependency Injection Struts 3 JMS JIRA AngularJS NodeJS ExtJSJQueryJQuery Mobile Javascript Html CSSApache Tomcat 70 Restful Eclipse MongoDB Maven Drools MockitoSpringJunit SVN Java Developer AXA Financials New York NY June 2011 to May 2012 DescriptionFinancial planner helps the financial advisors for advising customers on Retirement Insurance Education Tax Estate and Mortgage planning It gives the monetary benefits at each period and projection till the end of period It also helps the customers to apply online for insurance claims and online purchase of insurance plans Online payment system for insurance premiums and Retirement plans are integrated with the system The system has the facility to give insurance and investment plans and offers quotes based on the information provided by the customer Responsibilities Involved in various SDLC phases like Requirement gathering Design Analysis and Code development and the project was developed using Agile based SCRUM Methodology Successfully executing offshore modeling by effective and on time knowledge sharing with offshore project groups through weekly team meetings and daily status update calls Implemented Struts Framework and Hibernate in the new version of the Application Involved in coding for the presentation layer using Struts and JavaScript Developed Action classes Dyna Action Forms and used Validation framework Used EJB StatelessStateful session beans to implement business logic session handling and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server Implement modules into NodeJS to integrate with designs and requirements Developed real time tracking of class schedules using NodeJS socketio Express JS framework Used Microsoft Azure to provide the cloud services for the application developed Developed web services component APIs for inter application communication and worked on the cloud based web services to connect to Azure services Taken care of java MultiThreading in common java classeslibrary Extensively used Javascripts to enforce client side validations and also used JQuery for Ajax processing Involved in development of various web services using IBM WebSphere to interact with other Applications Involved in unit testing troubleshooting and debugging Modifying existing programs with enhancements Developed the UNIX shell scripts to automate jobs Developed Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to DB2 Worked on Redhat Linux environment for deploying the application running scripts for jobs Environment Jakarta Struts Framework 20 Core Java Hibernate 30EJB Web Services CSS NodeJSEclipse CVS WebSphere Application Server 65 Azure JUnit UNIX JavaScript Servlets JSP JDBC JQuery DB2 Java Developer Provident Financial Services Inc Jersey City NJ October 2009 to May 2011 DescriptionThe Provident Bank emphasizes personal service and customer convenience in attending to the financial needs of businesses individuals and families in 11 counties in northern and central New Jersey The bank offers a broad array of deposit loan and investment products as well as trust fiduciary and wealth management services Provident Financial Services Inc Services fulfilling the needs of all categories The services provided by Bank include bank accounts and loans for all needs It provides complete information regarding various schemes of the bank in this site In addition to that site allows doing online banking transactions Members can view their account details and able to do transactions on the fly Responsibilities Project modeled using MVC ModelViewController Architecture framework Used Spring Framework for Dependency injection and integrated with the Struts and Hibernate Developed the Web Tier of the application using Jakarta Struts Framework Developed the application using Java JSP Servlets and Oracle 9i Developed a standalone JAXWS client to invoke the available web services It involved creating autogenerated classes from WSDL using JAXB implementation in IBM RAD Wrote GWT code to create presentation layer using GWT widgets and event handlers Used Cucumber to reveal and document drive development of behavior in a large legacy code base Added Ajax functionality to Java Server Faces using Ajax4 JSF framework Used JMS PointtoPoint queuing model and developed Message Driven beans to consume messages from JMS Used PLSQL stored procedures for applications that needed to execute as part of scheduling DesigningDeveloping J2EE applicationsPOCs using JavaJ2EE with DROOLS AspectJ on BEA Weblogic server Customized RESTful Web Service using Spring RESTful API sending JSON and XML format data packets between frontend and middletier controller Developed a Servlet which was tested on Apache Tomcat Jboss and Weblogic Developed Stored Procedures triggered stored procedures using Hibernate in secondary project involved in developing Programmatic transactions using Hibernate Designed developed and deployed EJB components Session and Message Driven beans Expertise in developing integration services in SOA by offering Web Services based on XML on SOAP Layer Involved in design and developing web services using SOAP XML WSDL XML Schemas JAXP and XSL Used Rational Rose for UML diagrams Environment Core Java J2EE JSP Servlets XML XSLT EJB JDBC JBuilder 80 JBoss Swing JavaScript JMS HTML CSS MySQL Server CVS Jr Java Developer Triumph Systems NY June 2008 to August 2009 DescriptionMedical billing system is developed using java for medical equipment store This is advanced billing system which includes all billing functionalities It supports functions to accept various payment types such as cash debit card credit card PayPal personal checks etc system consist of two types of account Administrator and user All product information and details are loaded into the system The system also saves payers details and purchase information Responsibilities Gathering the requirements from the users application analysis and making UML diagrams Involved in preparation of Detailed Design Documents Developed Servlet and JSP screens for client view by embedding the Struts framework Developed Action classes Action Form and worked on switch Actions and Dispatch Actions Worked in Struts Validation framework and involved in customizing Rules per business requirements Developed Custom Tag libraries for the client view Implemented Multithreading logic using Java Concurrency APIs for parallel processing of service requests Involved in the development of client view custom components using JavaScripts HTML and DHTML Developed Java classes which generate reports for the transactions Wrote stored procedures and JDBC routines to update the ORACLE tables depend on the information Involved in the bug fixing and Change requests in the life cycle of the entire application Involved in Unittesting IntegrationTesting and Maintenance stage DevelopedModified the SQL Stored Procedure and Triggers Code Review and Code Level PerformanceTuning to the code Environment Servlets 25 JSP 21 Struts JDBC JavaScript HTML PLSQL SVN JDBC WebLogic 70 Oracle Education Bachelors Bachelors",
    "unique_id": "a958acc4-a29f-40d0-8797-b3a0ae2b7ee6"
}