{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Shire Pharmaceuticals Lexington MA Over 8 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python C Django Django Rest Framework in various domains Experienced with Object Oriented Programming Software Development Life Cycle Database designs agile methodologies coding and testing of enterprise applications Experienced in developing webbased applications using Python Django XML CSS HTML JavaScript jQuery Experienced in LAMP Linux Apache MySQL and PythonPHP and WAMP Windows Apache MYSQL and PythonPHP Architecture Skilled in Developing Microservices based on Restful web service using Akka Actors and AkkaHttp framework in Scala which handles high concurrency and high volume of traffic Experience in configuring and implementing various AWS components such as Elastic IPs EBS ElastiCache Elastic Beanstalk DynamoDB Redshift and Cloud Formation Strong Development Skills on Cloud Amazon Web Service AWS Familiar with JSON based REST Web services and Amazon Web services Strong Operational skills on Cloud Services EC2 S3 VPC Cloud Formation Cloud Watch RDS Dynamo DB SQS SNS API Gateway Experience in writing scripts using Gherkin Syntax in Behave framework in Python Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on refactoring the code Struts JSP and JavaScript by restructuring it for better performance Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat Web logic Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in Unit testing Testdriven Development TDD Load Testing and Integration Testing Experienced in using SVN Eclipse Pycharm Pyscript Spyder JIRA and GIT Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Written Python Code using Ansible Python API to Automate Cloud Deployment Process Good knowledge in strategy and implementation of AWS technologies such as EC2 S3 and EBS Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Work Experience Sr Python Developer Shire Pharmaceuticals Lexington MA October 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS JavaScript and JQuery Implemented AJAX for dynamic functionality of webpages for front end applications Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Worked on front end frameworks like CSS Bootstrap for responsive web pages Implemented a presentation layer using a CSS framework WireFraming andHTML5 Worked on serverside applications with Django using Python programming Associated with working cloud computing platforms like Open Stack Used Machine learning techniques like unsupervised Classification optimization and prediction Developed views and templates with Python and Djangos view controller and templatinglanguage to create a userfriendly website interface Implemented machine learning schemes using python libraries like scikitlearn and SciPy Wrote scripts in Python for automation of testing Framework jobs Building and supporting libraries in the test automation infrastructure Created tools in Python and R perform Web scraping Data Mining Sentiment Analysis Machine Learning Document Comparison Data Compression and other NLP analyses Worked on SOAP UI Postman as part of SoapRest API calls testing Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Developed Wrapper in Python for instantiating multithreaded application Developed various algorithms for generating several data patterns Validated the data of reports by writing SQL queries in PLSQL Developer against ODS Good Understanding of the Database Schema Data Dictionary Data Models for testing the data in an ETL process Created data access using SQL and PLSQL stored procedures Good experience in Shell Scripting SQL Server UNIX and Linux Open Stack Participated in the complete SDLC process Worked on UI using HTML5 CSS3 and Java Scripts Worked on AWS Cloud Formation and TerraformAPI to create infrastructure on AWS as a code Used Amazon EC2 command line interface along with Bash Python to automate repetitive work Worked in containerbased technologies like Docker Kubernetes and Open shift Used Jenkins pipelines to drive all microservices builds out to the Dockerregistry and then deployed to Kubernetes Created Pods and managed using Kubernetes Managing the Open shift cluster that includes scaling up and down the AWS app nodes Created Python script to monitor server load performance in a production environment and horizontally scale the servers by deploying new instances Developed entire frontend and backend modules using Python on Django Web Framework Used the Django Framework to develop the application Build all database mapping classes using Django models Environment Python 37 PyUnit HTML AJAX CSS JavaScript Django Amazon Web Services AWS JSON REST MySQL NoSQL Bootstrap Git JIRA SoapSQL Machine Learning TableauDocker Agile Windows and Linux Python Developer RedFlex Phoenix AZ August 2016 to October 2017 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in all stages of the SDLC process Developed user interface using CSS HTML JavaScript and JQuery Wrote Python modules to extract data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web applications and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Designed and managed API system development using fast http server and Amazon AWSarchitecture Installed configured and monitored scripts for AWS EC2 instances Liaised with business analysts and manual test team leaders to perform risk analysis and assessment associated with automation testing Performed Data Driven Test DDT with Quick Test Professional QTP to test the application for different sets of data Implemented Restful Web Services for the data transportation between multiple systems Developed remote integration with third party platforms by using Restful web services Built various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web Scrapping Maintained Puppet Rspec for testing various unitsystem automation schemes Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed an application in Linux environment and dealt with all of its commands Experienced in Linux shell commands and command line utilities Explored and identified new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Determined problems solved them and precisely documented progress of the project Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Environment Python 27 Django 14 AWS Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Python Developer Time Warner Cable Renton VA November 2015 to August 2016 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation created websockets by using Django to get a handle on what we needed to be done on the backend of the applications Deployed Application using AWS EC2 Standard Deployment Techniques Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked in MySQL and NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Developed most of the application part in Linux environment and very much familiar with all of its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented Restful WebServices for sending and receiving the data between multiple systems Written Cloud formation templates and deployed AWS resources using it We used to send text data through we sockets with most APis and JSON Gained Knowledge on Deploying app using AWS Cloud Formation Used Python Library Beautiful Soup for webScrapping ss Responsible for debugging and troubleshooting the web application Environment Python 27 Flask Java Script Matplotlib HTML Angular JS JQuery JSON AJAX XML CSS Oracle 10G SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub SVN Linux PyCharm Python Developer Value Labs Chicago IL September 2014 to November 2015 Responsibilities Develop and maintain automated tests using Python and the Robot test framework Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI using ReactJs HTML AJAX CSS and JavaScript Implemented several Socket TCPIP UDP XMLRPC programs to retrieve data from various data centers Built python framework to transform Datasets and Data tables into HTTPserializable JSON strings Used Python inbuilt libraries urllib2 and beautiful soup modules for web scraping Developed Python scripts to store read and write data to CSV files Developed scripts to read and dump data to MySQL database Worked in Agile and scrum environment which includes daily standup and sprint planning Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that cannot be scraped normally Wrote python scripts to read and write from csv files to database using Django ORM Used RAnalytics for analyzing data and plotting Pie Charts Bar Charts Box plots Histograms Line Graphs Scatter plots Implemented Google Python Coding Style and PEP8 while working with various teams Built python frameworks using Numpy and Pandas for data analysis Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Merchant Link Silver Spring MD November 2012 to September 2014 Responsibilities Managed datasets using data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector MySQL dB package to retrieve information Development of realtime multitasking systems using Python Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Used Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Worked on development of backend services using Python SQL and Linux Created many APIs for I scrum project which involves creating and maintaining projects in an organization and developed UI using HTML CSS and JavaScript Developed backend services and created many APIs using Python Programming Language and SQL Involved in developing a video calling application using python websockets Performed research regarding Python Programming and its uses and efficiency Developed GUI screens for XTT LD application using JSP HTML and CSS Wrote JavaScript functions to get Dynamic data and Clientside validation Used jQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Implemented a Nodejs server to manage authentication Created Nodejs middleware application server to encapsulate modern JS widget framework Worked with JSON objects and JavaScript and jQuery intensively to create interactive web pages Implemented web based frontend using HTML CSS jQuery and AngularJS Involved in developing the UI panels using JSF XHTML CSS DOJO and jQuery Set up the deployment environment on Web Logic Developed system preferences UI screens using JSP and HTML Created a Rich Single Page Application using HTML CSS Angularjs JQuery and REST Services Designed and implemented UI layer using JSP JavaScript HTML DHTML JSON XML XHTML XSL XSLT XSLFO Used Backbonejs Nodejs Bootstrap and other javascript libraries to create intuitive and rich Single Page Applications Used JQuery JavaScript libraries for providing richer user interface and facilitates asynchronous request invocations using AJAX Developed DashBoard to monitor and report Cache Coherence Servers Prepared statements are used for communication Sql database Involved in Requirement analysis design and Implementation applying the Water fall model Environment Python Django HTML CSS JavaScript Ajax JSON jQuery MySQL TOAD SQL DB2 Apache Axis WSDL NetBeans JBOSS Mercurial Coherence ClearCase Selenium Water Fall Model UML JSP Servlet Ant XML Jira Swing Congos Python Developer SkyREC TW November 2010 to June 2012 Responsibilities Involved in the development of front end of the application using Python 27 HTML CSS AJAX JSON and Jquery Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Used python packages like cx oracle pyodbc and MySQL data base for working with Oracle SQL Server and MySQL DB respectively Designed the front end of the application using Python HTML CSS AJAX JSON and Jquery Responsible for setting up Angular JS framework for UI development Developed html views with HTML CSS JSON and Angular JS Adobe flash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S CloudFront Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Writing SOAP and RESTful web services in house ESB for a web claims application Spring MVC Angular JS Active MQ SOAP UI Mockito JSON Build forge Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Wrote python scripts to parse XML documents and load the data in database Developed entire frontend and backend modules using Python on Django Web Framework Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Node Js Angular Js Pandas SOAPUI Mockito Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Education Bachelors Skills C Git HTML JENKINS JSON OBJECT ORIENTED OBJECT ORIENTED PROGRAMMING PERL PYTHON MATPLOTLIB NUMPY PANDAS Ruby SCRIPTING SVN XML SQL SERVER MYSQL ORACLE ORACLE 10",
    "entities": [
        "CSS HTML JavaScript",
        "Python 3627",
        "Oracle SQL Server",
        "Robot",
        "ELB S CloudFront Deploy",
        "GUI",
        "Nodejs",
        "Testdriven Development TDD Load Testing",
        "Building",
        "ORACLE ORACLE",
        "Kubernetes Created Pods",
        "the Database Schema Data Dictionary Data Models",
        "LAMP Linux",
        "AJAX Developed DashBoard",
        "Amazon Web Services AWS",
        "TKinter",
        "XML",
        "JavaScript Implemented",
        "HTML Created",
        "MA",
        "Amazon",
        "Oracle apps to PostgreSQL",
        "ElastiCache",
        "Python",
        "SQL Involved",
        "Created Nodejs",
        "Stored Procedures",
        "Amazon AWS S3",
        "Developed",
        "Jquery Responsible",
        "Jenkins",
        "Present Responsibilities Responsible",
        "CSS Bootstrap",
        "Bash",
        "Python Experienced",
        "Created Python",
        "Developer Time Warner",
        "Django",
        "Rspec",
        "Git",
        "Restful",
        "Bash Python",
        "Akka Actors",
        "Technologies",
        "PythonPHP",
        "CSS Wrote",
        "Develop",
        "PythonPHP Architecture Skilled",
        "Linux",
        "Renton VA",
        "JSP",
        "Collaborated",
        "Classification",
        "Built",
        "JavaScript Developed",
        "Shell Scripting",
        "HTML CSS jQuery",
        "RDS",
        "Implemented Restful Web Services",
        "Responsibilities Developed Views",
        "GIT",
        "Bugzilla",
        "Rabbit MQ",
        "CSV",
        "HTML CSS",
        "JS",
        "API",
        "HTML CSS JavaScript",
        "Created",
        "AWS",
        "WAMP Windows Apache",
        "Writing SOAP",
        "Cache Coherence Servers Prepared",
        "REST Services Designed",
        "Amazon Web Services AWS Education Bachelors Skills C Git HTML JENKINS JSON OBJECT ORIENTED OBJECT ORIENTED PROGRAMMING",
        "Sub Queries Stored Procedures Triggers Cursors Subroutines",
        "Amazon Web Services AWS Python Developer Merchant Link",
        "RESTFUL",
        "SQL",
        "Amazon Cloud Implemented Restful WebServices",
        "Quick Test Professional",
        "Performed Data Driven Test DDT",
        "NLP",
        "lPythonspan",
        "JS Angular JS CSS",
        "SQL PLSQL and PostgreSQL",
        "Analysis Design Development Testing Customization Bug",
        "Behave",
        "Python Programming",
        "Nodejs Bootstrap",
        "Pandas",
        "HTML CSS JSON",
        "JS Active",
        "SQS",
        "ETL",
        "Amazon AWSarchitecture Installed",
        "Object Oriented Programming Software Development Life Cycle Database",
        "Build",
        "Created UI",
        "Djangos",
        "JavaScript",
        "Cloud Services",
        "UI",
        "Front",
        "Microsoft",
        "SVN",
        "Data Mining Sentiment Analysis Machine Learning Document Comparison Data Compression",
        "CSS",
        "Amazon Web Service",
        "jQuery",
        "Responsibilities Develop",
        "REST",
        "XTT",
        "JQuery Hands",
        "JQuery Implemented AJAX",
        "PHP",
        "NoSQL",
        "EBS",
        "Deployed Application",
        "ESB"
    ],
    "experience": "Experience in configuring and implementing various AWS components such as Elastic IPs EBS ElastiCache Elastic Beanstalk DynamoDB Redshift and Cloud Formation Strong Development Skills on Cloud Amazon Web Service AWS Familiar with JSON based REST Web services and Amazon Web services Strong Operational skills on Cloud Services EC2 S3 VPC Cloud Formation Cloud Watch RDS Dynamo DB SQS SNS API Gateway Experience in writing scripts using Gherkin Syntax in Behave framework in Python Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on refactoring the code Struts JSP and JavaScript by restructuring it for better performance Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat Web logic Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in Unit testing Testdriven Development TDD Load Testing and Integration Testing Experienced in using SVN Eclipse Pycharm Pyscript Spyder JIRA and GIT Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Written Python Code using Ansible Python API to Automate Cloud Deployment Process Good knowledge in strategy and implementation of AWS technologies such as EC2 S3 and EBS Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Work Experience Sr Python Developer Shire Pharmaceuticals Lexington MA October 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS JavaScript and JQuery Implemented AJAX for dynamic functionality of webpages for front end applications Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Worked on front end frameworks like CSS Bootstrap for responsive web pages Implemented a presentation layer using a CSS framework WireFraming andHTML5 Worked on serverside applications with Django using Python programming Associated with working cloud computing platforms like Open Stack Used Machine learning techniques like unsupervised Classification optimization and prediction Developed views and templates with Python and Djangos view controller and templatinglanguage to create a userfriendly website interface Implemented machine learning schemes using python libraries like scikitlearn and SciPy Wrote scripts in Python for automation of testing Framework jobs Building and supporting libraries in the test automation infrastructure Created tools in Python and R perform Web scraping Data Mining Sentiment Analysis Machine Learning Document Comparison Data Compression and other NLP analyses Worked on SOAP UI Postman as part of SoapRest API calls testing Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Developed Wrapper in Python for instantiating multithreaded application Developed various algorithms for generating several data patterns Validated the data of reports by writing SQL queries in PLSQL Developer against ODS Good Understanding of the Database Schema Data Dictionary Data Models for testing the data in an ETL process Created data access using SQL and PLSQL stored procedures Good experience in Shell Scripting SQL Server UNIX and Linux Open Stack Participated in the complete SDLC process Worked on UI using HTML5 CSS3 and Java Scripts Worked on AWS Cloud Formation and TerraformAPI to create infrastructure on AWS as a code Used Amazon EC2 command line interface along with Bash Python to automate repetitive work Worked in containerbased technologies like Docker Kubernetes and Open shift Used Jenkins pipelines to drive all microservices builds out to the Dockerregistry and then deployed to Kubernetes Created Pods and managed using Kubernetes Managing the Open shift cluster that includes scaling up and down the AWS app nodes Created Python script to monitor server load performance in a production environment and horizontally scale the servers by deploying new instances Developed entire frontend and backend modules using Python on Django Web Framework Used the Django Framework to develop the application Build all database mapping classes using Django models Environment Python 37 PyUnit HTML AJAX CSS JavaScript Django Amazon Web Services AWS JSON REST MySQL NoSQL Bootstrap Git JIRA SoapSQL Machine Learning TableauDocker Agile Windows and Linux Python Developer RedFlex Phoenix AZ August 2016 to October 2017 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in all stages of the SDLC process Developed user interface using CSS HTML JavaScript and JQuery Wrote Python modules to extract data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web applications and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Designed and managed API system development using fast http server and Amazon AWSarchitecture Installed configured and monitored scripts for AWS EC2 instances Liaised with business analysts and manual test team leaders to perform risk analysis and assessment associated with automation testing Performed Data Driven Test DDT with Quick Test Professional QTP to test the application for different sets of data Implemented Restful Web Services for the data transportation between multiple systems Developed remote integration with third party platforms by using Restful web services Built various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web Scrapping Maintained Puppet Rspec for testing various unitsystem automation schemes Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed an application in Linux environment and dealt with all of its commands Experienced in Linux shell commands and command line utilities Explored and identified new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Determined problems solved them and precisely documented progress of the project Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Environment Python 27 Django 14 AWS Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Python Developer Time Warner Cable Renton VA November 2015 to August 2016 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation created websockets by using Django to get a handle on what we needed to be done on the backend of the applications Deployed Application using AWS EC2 Standard Deployment Techniques Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked in MySQL and NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Developed most of the application part in Linux environment and very much familiar with all of its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented Restful WebServices for sending and receiving the data between multiple systems Written Cloud formation templates and deployed AWS resources using it We used to send text data through we sockets with most APis and JSON Gained Knowledge on Deploying app using AWS Cloud Formation Used Python Library Beautiful Soup for webScrapping ss Responsible for debugging and troubleshooting the web application Environment Python 27 Flask Java Script Matplotlib HTML Angular JS JQuery JSON AJAX XML CSS Oracle 10 G SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub SVN Linux PyCharm Python Developer Value Labs Chicago IL September 2014 to November 2015 Responsibilities Develop and maintain automated tests using Python and the Robot test framework Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI using ReactJs HTML AJAX CSS and JavaScript Implemented several Socket TCPIP UDP XMLRPC programs to retrieve data from various data centers Built python framework to transform Datasets and Data tables into HTTPserializable JSON strings Used Python inbuilt libraries urllib2 and beautiful soup modules for web scraping Developed Python scripts to store read and write data to CSV files Developed scripts to read and dump data to MySQL database Worked in Agile and scrum environment which includes daily standup and sprint planning Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that can not be scraped normally Wrote python scripts to read and write from csv files to database using Django ORM Used RAnalytics for analyzing data and plotting Pie Charts Bar Charts Box plots Histograms Line Graphs Scatter plots Implemented Google Python Coding Style and PEP8 while working with various teams Built python frameworks using Numpy and Pandas for data analysis Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Merchant Link Silver Spring MD November 2012 to September 2014 Responsibilities Managed datasets using data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector MySQL dB package to retrieve information Development of realtime multitasking systems using Python Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Used Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Worked on development of backend services using Python SQL and Linux Created many APIs for I scrum project which involves creating and maintaining projects in an organization and developed UI using HTML CSS and JavaScript Developed backend services and created many APIs using Python Programming Language and SQL Involved in developing a video calling application using python websockets Performed research regarding Python Programming and its uses and efficiency Developed GUI screens for XTT LD application using JSP HTML and CSS Wrote JavaScript functions to get Dynamic data and Clientside validation Used jQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Implemented a Nodejs server to manage authentication Created Nodejs middleware application server to encapsulate modern JS widget framework Worked with JSON objects and JavaScript and jQuery intensively to create interactive web pages Implemented web based frontend using HTML CSS jQuery and AngularJS Involved in developing the UI panels using JSF XHTML CSS DOJO and jQuery Set up the deployment environment on Web Logic Developed system preferences UI screens using JSP and HTML Created a Rich Single Page Application using HTML CSS Angularjs JQuery and REST Services Designed and implemented UI layer using JSP JavaScript HTML DHTML JSON XML XHTML XSL XSLT XSLFO Used Backbonejs Nodejs Bootstrap and other javascript libraries to create intuitive and rich Single Page Applications Used JQuery JavaScript libraries for providing richer user interface and facilitates asynchronous request invocations using AJAX Developed DashBoard to monitor and report Cache Coherence Servers Prepared statements are used for communication Sql database Involved in Requirement analysis design and Implementation applying the Water fall model Environment Python Django HTML CSS JavaScript Ajax JSON jQuery MySQL TOAD SQL DB2 Apache Axis WSDL NetBeans JBOSS Mercurial Coherence ClearCase Selenium Water Fall Model UML JSP Servlet Ant XML Jira Swing Congos Python Developer SkyREC TW November 2010 to June 2012 Responsibilities Involved in the development of front end of the application using Python 27 HTML CSS AJAX JSON and Jquery Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Used python packages like cx oracle pyodbc and MySQL data base for working with Oracle SQL Server and MySQL DB respectively Designed the front end of the application using Python HTML CSS AJAX JSON and Jquery Responsible for setting up Angular JS framework for UI development Developed html views with HTML CSS JSON and Angular JS Adobe flash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S CloudFront Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Writing SOAP and RESTful web services in house ESB for a web claims application Spring MVC Angular JS Active MQ SOAP UI Mockito JSON Build forge Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Wrote python scripts to parse XML documents and load the data in database Developed entire frontend and backend modules using Python on Django Web Framework Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Node Js Angular Js Pandas SOAPUI Mockito Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Education Bachelors Skills C Git HTML JENKINS JSON OBJECT ORIENTED OBJECT ORIENTED PROGRAMMING PERL PYTHON MATPLOTLIB NUMPY PANDAS Ruby SCRIPTING SVN XML SQL SERVER MYSQL ORACLE ORACLE 10",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Shire",
        "Pharmaceuticals",
        "Lexington",
        "MA",
        "Years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Customization",
        "Bug",
        "fixes",
        "Enhancement",
        "Support",
        "Implementation",
        "web",
        "standalone",
        "enterprise",
        "applications",
        "Python",
        "C",
        "Django",
        "Django",
        "Rest",
        "Framework",
        "domains",
        "Object",
        "Oriented",
        "Programming",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Database",
        "methodologies",
        "testing",
        "enterprise",
        "applications",
        "applications",
        "Python",
        "Django",
        "XML",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "Architecture",
        "Skilled",
        "Developing",
        "Microservices",
        "Restful",
        "web",
        "service",
        "Akka",
        "Actors",
        "AkkaHttp",
        "framework",
        "Scala",
        "concurrency",
        "volume",
        "traffic",
        "Experience",
        "AWS",
        "components",
        "IPs",
        "EBS",
        "ElastiCache",
        "Elastic",
        "Beanstalk",
        "DynamoDB",
        "Redshift",
        "Cloud",
        "Formation",
        "Strong",
        "Development",
        "Skills",
        "Cloud",
        "Amazon",
        "Web",
        "Service",
        "AWS",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "Strong",
        "skills",
        "Cloud",
        "Services",
        "EC2",
        "S3",
        "VPC",
        "Cloud",
        "Formation",
        "Cloud",
        "RDS",
        "Dynamo",
        "DB",
        "SQS",
        "SNS",
        "API",
        "Gateway",
        "Experience",
        "scripts",
        "Gherkin",
        "Syntax",
        "Behave",
        "framework",
        "Python",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Subroutines",
        "functions",
        "SQL",
        "PLSQL",
        "PostgreSQL",
        "database",
        "code",
        "Struts",
        "JSP",
        "JavaScript",
        "performance",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "Python",
        "Django",
        "HTML",
        "XML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "JSON",
        "Angularjs",
        "Nodejs",
        "knowledge",
        "web",
        "services",
        "protocols",
        "SOAP",
        "REST",
        "knowledge",
        "server",
        "Apache",
        "Tomcat",
        "Web",
        "logic",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "Hands",
        "experience",
        "SVN",
        "Git",
        "JIRA",
        "Bugzilla",
        "SQL",
        "MS",
        "SQL",
        "Apache",
        "Cassandra",
        "Oracle",
        "MongoDB",
        "SQL",
        "PLSQL",
        "programming",
        "code",
        "units",
        "database",
        "triggers",
        "features",
        "performance",
        "Bulk",
        "Binds",
        "views",
        "Inline",
        "Global",
        "Temporary",
        "Tables",
        "architectures",
        "Rabbit",
        "MQ",
        "scalability",
        "performance",
        "Proficient",
        "Unit",
        "testing",
        "Testdriven",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Integration",
        "Testing",
        "SVN",
        "Eclipse",
        "Pycharm",
        "Pyscript",
        "Spyder",
        "JIRA",
        "GIT",
        "Ansible",
        "Ansible",
        "Tower",
        "Configuration",
        "management",
        "tool",
        "tasks",
        "applications",
        "change",
        "Written",
        "Python",
        "Code",
        "Ansible",
        "Python",
        "API",
        "Automate",
        "Cloud",
        "Deployment",
        "Process",
        "knowledge",
        "strategy",
        "implementation",
        "AWS",
        "technologies",
        "EC2",
        "S3",
        "EBS",
        "experience",
        "Agile",
        "Methodologies",
        "Scrum",
        "stories",
        "sprints",
        "experience",
        "Python",
        "environment",
        "data",
        "analytics",
        "data",
        "Excel",
        "data",
        "extracts",
        "types",
        "testing",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "Ability",
        "initiative",
        "part",
        "team",
        "Willingness",
        "Technologies",
        "openness",
        "ideas",
        "ability",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Shire",
        "Pharmaceuticals",
        "Lexington",
        "MA",
        "October",
        "Present",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "JQuery",
        "AJAX",
        "functionality",
        "webpages",
        "end",
        "applications",
        "Ajax",
        "JQuery",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "end",
        "frameworks",
        "CSS",
        "Bootstrap",
        "web",
        "pages",
        "presentation",
        "layer",
        "CSS",
        "framework",
        "WireFraming",
        "andHTML5",
        "serverside",
        "applications",
        "Django",
        "Python",
        "programming",
        "Associated",
        "cloud",
        "platforms",
        "Open",
        "Stack",
        "Machine",
        "techniques",
        "Classification",
        "optimization",
        "prediction",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templatinglanguage",
        "website",
        "interface",
        "machine",
        "learning",
        "schemes",
        "python",
        "libraries",
        "SciPy",
        "Wrote",
        "scripts",
        "Python",
        "automation",
        "Framework",
        "jobs",
        "Building",
        "libraries",
        "test",
        "automation",
        "infrastructure",
        "tools",
        "Python",
        "R",
        "Web",
        "Data",
        "Mining",
        "Sentiment",
        "Analysis",
        "Machine",
        "Learning",
        "Document",
        "Comparison",
        "Data",
        "Compression",
        "NLP",
        "analyses",
        "SOAP",
        "UI",
        "Postman",
        "part",
        "API",
        "calls",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "infrastructure",
        "automation",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Puppet",
        "Developed",
        "Wrapper",
        "Python",
        "application",
        "algorithms",
        "data",
        "patterns",
        "data",
        "reports",
        "SQL",
        "queries",
        "PLSQL",
        "Developer",
        "ODS",
        "Good",
        "Understanding",
        "Database",
        "Schema",
        "Data",
        "Dictionary",
        "Data",
        "Models",
        "data",
        "ETL",
        "process",
        "data",
        "access",
        "SQL",
        "procedures",
        "experience",
        "Shell",
        "Scripting",
        "SQL",
        "Server",
        "UNIX",
        "Linux",
        "Open",
        "Stack",
        "SDLC",
        "process",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "AWS",
        "Cloud",
        "Formation",
        "TerraformAPI",
        "infrastructure",
        "AWS",
        "code",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "Bash",
        "Python",
        "work",
        "technologies",
        "Docker",
        "Kubernetes",
        "shift",
        "Jenkins",
        "pipelines",
        "microservices",
        "Dockerregistry",
        "Kubernetes",
        "Created",
        "Pods",
        "Kubernetes",
        "shift",
        "cluster",
        "AWS",
        "app",
        "nodes",
        "Created",
        "Python",
        "script",
        "server",
        "load",
        "performance",
        "production",
        "environment",
        "servers",
        "instances",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Django",
        "Framework",
        "application",
        "Build",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "Environment",
        "Python",
        "PyUnit",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Django",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "REST",
        "MySQL",
        "NoSQL",
        "Bootstrap",
        "Git",
        "JIRA",
        "SoapSQL",
        "Machine",
        "Learning",
        "TableauDocker",
        "Agile",
        "Windows",
        "Linux",
        "Python",
        "Developer",
        "RedFlex",
        "Phoenix",
        "AZ",
        "August",
        "October",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "stages",
        "SDLC",
        "process",
        "user",
        "interface",
        "CSS",
        "HTML",
        "JavaScript",
        "JQuery",
        "Wrote",
        "Python",
        "modules",
        "data",
        "MySQL",
        "source",
        "database",
        "MYSQL",
        "database",
        "server",
        "web",
        "applications",
        "report",
        "progress",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Django",
        "framework",
        "application",
        "development",
        "application",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "API",
        "system",
        "development",
        "http",
        "server",
        "Amazon",
        "AWSarchitecture",
        "Installed",
        "scripts",
        "AWS",
        "EC2",
        "instances",
        "business",
        "analysts",
        "test",
        "team",
        "leaders",
        "risk",
        "analysis",
        "assessment",
        "automation",
        "Performed",
        "Data",
        "Driven",
        "Test",
        "DDT",
        "Quick",
        "Test",
        "Professional",
        "QTP",
        "application",
        "sets",
        "data",
        "Restful",
        "Web",
        "Services",
        "data",
        "transportation",
        "systems",
        "integration",
        "party",
        "platforms",
        "web",
        "services",
        "graphs",
        "business",
        "decision",
        "Python",
        "matplotlib",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "Scrapping",
        "Puppet",
        "Rspec",
        "automation",
        "schemes",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "project",
        "Jenkins",
        "GIT",
        "version",
        "control",
        "system",
        "application",
        "Linux",
        "environment",
        "commands",
        "Linux",
        "shell",
        "commands",
        "command",
        "line",
        "utilities",
        "platforms",
        "teams",
        "end",
        "user",
        "feedback",
        "solutions",
        "problems",
        "progress",
        "project",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "Environment",
        "Python",
        "Django",
        "AWS",
        "Puppet",
        "Rspec",
        "Jenkins",
        "GrafanaGraphite",
        "MySQL",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Linux",
        "Git",
        "Python",
        "Developer",
        "Time",
        "Warner",
        "Cable",
        "Renton",
        "VA",
        "November",
        "August",
        "Responsibilities",
        "Views",
        "Templates",
        "Django",
        "controller",
        "template",
        "language",
        "website",
        "interface",
        "Django",
        "admin",
        "site",
        "dashboard",
        "custom",
        "Django",
        "dashboard",
        "end",
        "users",
        "custom",
        "Django",
        "APIs",
        "database",
        "access",
        "Python",
        "Django",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "websockets",
        "Django",
        "handle",
        "backend",
        "applications",
        "Deployed",
        "Application",
        "AWS",
        "EC2",
        "Standard",
        "Deployment",
        "Techniques",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "web",
        "solutions",
        "Python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "UI",
        "JavaScript",
        "HTML5",
        "data",
        "management",
        "system",
        "MySQL",
        "Worked",
        "MySQL",
        "NoSQL",
        "database",
        "queries",
        "Procedures",
        "normalization",
        "renormalization",
        "Jenkins",
        "integration",
        "tool",
        "deployment",
        "project",
        "role",
        "development",
        "transition",
        "Subversion",
        "Git",
        "increase",
        "efficiency",
        "development",
        "community",
        "application",
        "part",
        "Linux",
        "environment",
        "commands",
        "TKinter",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Restful",
        "WebServices",
        "data",
        "systems",
        "Cloud",
        "formation",
        "templates",
        "AWS",
        "resources",
        "text",
        "data",
        "APis",
        "JSON",
        "Knowledge",
        "app",
        "AWS",
        "Cloud",
        "Formation",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "ss",
        "web",
        "application",
        "Environment",
        "Python",
        "Flask",
        "Java",
        "Script",
        "Matplotlib",
        "HTML",
        "Angular",
        "JS",
        "JQuery",
        "JSON",
        "AJAX",
        "XML",
        "CSS",
        "Oracle",
        "G",
        "SQL",
        "MySQL",
        "Bootstrap",
        "Restful",
        "Web",
        "Services",
        "Beautiful",
        "Soup",
        "Jenkins",
        "GitHub",
        "SVN",
        "Linux",
        "PyCharm",
        "Python",
        "Developer",
        "Value",
        "Labs",
        "Chicago",
        "IL",
        "September",
        "November",
        "Responsibilities",
        "tests",
        "Python",
        "Robot",
        "test",
        "framework",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "UI",
        "ReactJs",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "Socket",
        "UDP",
        "XMLRPC",
        "programs",
        "data",
        "data",
        "centers",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "Python",
        "libraries",
        "soup",
        "modules",
        "web",
        "Developed",
        "Python",
        "scripts",
        "data",
        "CSV",
        "files",
        "scripts",
        "data",
        "MySQL",
        "database",
        "Agile",
        "scrum",
        "environment",
        "standup",
        "sprint",
        "planning",
        "automation",
        "script",
        "Crontab",
        "python",
        "web",
        "crawler",
        "cURL",
        "web",
        "contents",
        "python",
        "scripts",
        "files",
        "database",
        "Django",
        "ORM",
        "RAnalytics",
        "data",
        "Pie",
        "Charts",
        "Bar",
        "Charts",
        "Box",
        "Histograms",
        "Line",
        "Graphs",
        "Scatter",
        "Google",
        "Python",
        "Coding",
        "Style",
        "PEP8",
        "teams",
        "python",
        "frameworks",
        "Numpy",
        "Pandas",
        "data",
        "analysis",
        "Environment",
        "Python",
        "Python",
        "Django",
        "Django",
        "REST",
        "Framework",
        "Flask",
        "XML",
        "HTTP",
        "Ajax",
        "Bootstrap",
        "JSON",
        "HTML",
        "CSS",
        "jQuery",
        "Pandas",
        "Bugzilla",
        "GITHUB",
        "Java",
        "Script",
        "PLSQL",
        "Microsoft",
        "SQL",
        "Server",
        "Shell",
        "Scripting",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Python",
        "Developer",
        "Merchant",
        "Link",
        "Silver",
        "Spring",
        "MD",
        "November",
        "September",
        "Responsibilities",
        "datasets",
        "data",
        "frames",
        "MySQL",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "information",
        "Development",
        "systems",
        "Python",
        "components",
        "Python",
        "Django",
        "framework",
        "code",
        "python",
        "manipulate",
        "data",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "documents",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "servers",
        "development",
        "services",
        "Python",
        "SQL",
        "Linux",
        "APIs",
        "project",
        "projects",
        "organization",
        "UI",
        "HTML",
        "CSS",
        "JavaScript",
        "services",
        "APIs",
        "Python",
        "Programming",
        "Language",
        "SQL",
        "video",
        "calling",
        "application",
        "python",
        "websockets",
        "Performed",
        "research",
        "Python",
        "Programming",
        "uses",
        "efficiency",
        "GUI",
        "screens",
        "XTT",
        "LD",
        "application",
        "JSP",
        "HTML",
        "CSS",
        "Wrote",
        "JavaScript",
        "functions",
        "data",
        "validation",
        "jQuery",
        "frontend",
        "components",
        "JavaScript",
        "functions",
        "dynamism",
        "web",
        "pages",
        "client",
        "side",
        "Nodejs",
        "server",
        "authentication",
        "Nodejs",
        "middleware",
        "application",
        "server",
        "JS",
        "widget",
        "framework",
        "objects",
        "JavaScript",
        "jQuery",
        "web",
        "pages",
        "web",
        "frontend",
        "HTML",
        "CSS",
        "jQuery",
        "AngularJS",
        "UI",
        "panels",
        "JSF",
        "XHTML",
        "CSS",
        "DOJO",
        "jQuery",
        "deployment",
        "environment",
        "Web",
        "system",
        "preferences",
        "UI",
        "screens",
        "JSP",
        "HTML",
        "Rich",
        "Single",
        "Page",
        "Application",
        "HTML",
        "CSS",
        "Angularjs",
        "JQuery",
        "REST",
        "Services",
        "UI",
        "layer",
        "JSP",
        "JavaScript",
        "HTML",
        "DHTML",
        "JSON",
        "XML",
        "XHTML",
        "XSL",
        "XSLT",
        "XSLFO",
        "Backbonejs",
        "Nodejs",
        "Bootstrap",
        "javascript",
        "Single",
        "Page",
        "Applications",
        "JQuery",
        "JavaScript",
        "user",
        "interface",
        "request",
        "invocations",
        "AJAX",
        "Developed",
        "DashBoard",
        "Cache",
        "Coherence",
        "Servers",
        "statements",
        "communication",
        "Sql",
        "database",
        "Requirement",
        "analysis",
        "design",
        "Implementation",
        "Water",
        "fall",
        "model",
        "Environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Ajax",
        "JSON",
        "jQuery",
        "MySQL",
        "TOAD",
        "SQL",
        "DB2",
        "Apache",
        "Axis",
        "WSDL",
        "NetBeans",
        "JBOSS",
        "Mercurial",
        "Coherence",
        "ClearCase",
        "Selenium",
        "Water",
        "Fall",
        "Model",
        "UML",
        "JSP",
        "Servlet",
        "Ant",
        "XML",
        "Jira",
        "Swing",
        "Congos",
        "Python",
        "Developer",
        "SkyREC",
        "TW",
        "November",
        "June",
        "Responsibilities",
        "development",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "Jquery",
        "Developed",
        "GUI",
        "Python",
        "Django",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "applications",
        "RESTFUL",
        "architecture",
        "Nodejs",
        "PHP",
        "languages",
        "python",
        "packages",
        "cx",
        "oracle",
        "pyodbc",
        "MySQL",
        "data",
        "base",
        "Oracle",
        "SQL",
        "Server",
        "MySQL",
        "DB",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "Jquery",
        "Responsible",
        "Angular",
        "JS",
        "framework",
        "UI",
        "development",
        "Developed",
        "html",
        "HTML",
        "CSS",
        "JSON",
        "JS",
        "Adobe",
        "flash",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "application",
        "Amazon",
        "Web",
        "Service",
        "EC2",
        "cloud",
        "search",
        "load",
        "balancer",
        "ELB",
        "S",
        "CloudFront",
        "Deploy",
        "infrastructure",
        "Amazon",
        "web",
        "services",
        "AWS",
        "configuration",
        "management",
        "puppet",
        "Writing",
        "SOAP",
        "web",
        "services",
        "house",
        "ESB",
        "web",
        "claims",
        "application",
        "Spring",
        "MVC",
        "JS",
        "Active",
        "MQ",
        "SOAP",
        "UI",
        "Mockito",
        "JSON",
        "Build",
        "forge",
        "Develop",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Python",
        "Django",
        "jQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "migration",
        "tasks",
        "Oracle",
        "apps",
        "PostgreSQL",
        "scripts",
        "sh",
        "ksh",
        "Bash",
        "daytoday",
        "administration",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tastypie",
        "Web",
        "Framework",
        "Git",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "JSON",
        "REST",
        "SOAP",
        "Environment",
        "Python",
        "Python",
        "Django",
        "Django",
        "REST",
        "Framework",
        "Flask",
        "XML",
        "HTTP",
        "Ajax",
        "Bootstrap",
        "JSON",
        "HTML",
        "CSS",
        "jQuery",
        "Node",
        "Js",
        "Angular",
        "Js",
        "Pandas",
        "SOAPUI",
        "Mockito",
        "Bugzilla",
        "GITHUB",
        "Java",
        "Script",
        "PLSQL",
        "Microsoft",
        "SQL",
        "Server",
        "Shell",
        "Scripting",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Education",
        "Bachelors",
        "Skills",
        "C",
        "Git",
        "HTML",
        "JENKINS",
        "JSON",
        "OBJECT",
        "OBJECT",
        "PROGRAMMING",
        "PERL",
        "PYTHON",
        "MATPLOTLIB",
        "NUMPY",
        "Ruby",
        "SCRIPTING",
        "SVN",
        "XML",
        "SQL",
        "SERVER",
        "MYSQL",
        "ORACLE",
        "ORACLE"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:32:14.247442",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer Shire Pharmaceuticals Lexington MA Over 8 Years of experience in Analysis Design Development Testing Customization Bug fixes Enhancement Support and Implementation of various web standalone clientserver enterprise applications using Python C Django Django Rest Framework in various domains Experienced with Object Oriented Programming Software Development Life Cycle Database designs agile methodologies coding and testing of enterprise applications Experienced in developing webbased applications using Python Django XML CSS HTML JavaScript jQuery Experienced in LAMP Linux Apache MySQL and PythonPHP and WAMP Windows Apache MYSQL and PythonPHP Architecture Skilled in Developing Microservices based on Restful web service using Akka Actors and AkkaHttp framework in Scala which handles high concurrency and high volume of traffic Experience in configuring and implementing various AWS components such as Elastic IPs EBS ElastiCache Elastic Beanstalk DynamoDB Redshift and Cloud Formation Strong Development Skills on Cloud Amazon Web Service AWS Familiar with JSON based REST Web services and Amazon Web services Strong Operational skills on Cloud Services EC2 S3 VPC Cloud Formation Cloud Watch RDS Dynamo DB SQS SNS API Gateway Experience in writing scripts using Gherkin Syntax in Behave framework in Python Experienced in writing Sub Queries Stored Procedures Triggers Cursors Subroutines functions on SQL PLSQL and PostgreSQL database Worked on refactoring the code Struts JSP and JavaScript by restructuring it for better performance Proficient in Front end development experience using Python 3627 Django 1718 HTML XML CSS JavaScript Bootstrap JQuery JSON and Angularjs Nodejs Good knowledge of web services with protocols SOAP REST and knowledge of server Apache Tomcat Web logic Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and JQuery Hands on experience in SVN Git JIRA and Bugzilla worked in SQL databases MS SQL Apache Cassandra Oracle and MongoDB SQL and PLSQL programming developing complex code units database triggers and using the latest features to optimize performance Bulk Binds Materialized views Inline views Global Temporary Tables Leveraging queueing architectures with Rabbit MQ for scalability performance and building Proficient in Unit testing Testdriven Development TDD Load Testing and Integration Testing Experienced in using SVN Eclipse Pycharm Pyscript Spyder JIRA and GIT Used Ansible and Ansible Tower as Configuration management tool to automate repetitive tasks quickly deploys critical applications and proactively manages change Written Python Code using Ansible Python API to Automate Cloud Deployment Process Good knowledge in strategy and implementation of AWS technologies such as EC2 S3 and EBS Having experience in Agile Methodologies Scrum stories and sprints experience in a Python based environment along with data analytics data wrangling and Excel data extracts Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Ability to work on own initiative and as a part of team Willingness to learn new Technologies openness to new ideas and ability to learn very quickly Work Experience Sr Python Developer Shire Pharmaceuticals Lexington MA October 2017 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Implemented user interface guidelines and standards throughout the development and maintenance of the website using HTML CSS JavaScript and JQuery Implemented AJAX for dynamic functionality of webpages for front end applications Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers Worked on front end frameworks like CSS Bootstrap for responsive web pages Implemented a presentation layer using a CSS framework WireFraming andHTML5 Worked on serverside applications with Django using Python programming Associated with working cloud computing platforms like Open Stack Used Machine learning techniques like unsupervised Classification optimization and prediction Developed views and templates with Python and Djangos view controller and templatinglanguage to create a userfriendly website interface Implemented machine learning schemes using python libraries like scikitlearn and SciPy Wrote scripts in Python for automation of testing Framework jobs Building and supporting libraries in the test automation infrastructure Created tools in Python and R perform Web scraping Data Mining Sentiment Analysis Machine Learning Document Comparison Data Compression and other NLP analyses Worked on SOAP UI Postman as part of SoapRest API calls testing Worked on Amazon Web Services AWS infrastructure with automation and configuration management tools such as Chef and Puppet Developed Wrapper in Python for instantiating multithreaded application Developed various algorithms for generating several data patterns Validated the data of reports by writing SQL queries in PLSQL Developer against ODS Good Understanding of the Database Schema Data Dictionary Data Models for testing the data in an ETL process Created data access using SQL and PLSQL stored procedures Good experience in Shell Scripting SQL Server UNIX and Linux Open Stack Participated in the complete SDLC process Worked on UI using HTML5 CSS3 and Java Scripts Worked on AWS Cloud Formation and TerraformAPI to create infrastructure on AWS as a code Used Amazon EC2 command line interface along with Bash Python to automate repetitive work Worked in containerbased technologies like Docker Kubernetes and Open shift Used Jenkins pipelines to drive all microservices builds out to the Dockerregistry and then deployed to Kubernetes Created Pods and managed using Kubernetes Managing the Open shift cluster that includes scaling up and down the AWS app nodes Created Python script to monitor server load performance in a production environment and horizontally scale the servers by deploying new instances Developed entire frontend and backend modules using Python on Django Web Framework Used the Django Framework to develop the application Build all database mapping classes using Django models Environment Python 37 PyUnit HTML AJAX CSS JavaScript Django Amazon Web Services AWS JSON REST MySQL NoSQL Bootstrap Git JIRA SoapSQL Machine Learning TableauDocker Agile Windows and Linux Python Developer RedFlex Phoenix AZ August 2016 to October 2017 Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Participated in all stages of the SDLC process Developed user interface using CSS HTML JavaScript and JQuery Wrote Python modules to extract data from the MySQL source database Designed and implemented a dedicated MYSQL database server to drive the web applications and report on daily progress Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Django framework for application development Created entire application using Python Django MySQL and Linux Designed and managed API system development using fast http server and Amazon AWSarchitecture Installed configured and monitored scripts for AWS EC2 instances Liaised with business analysts and manual test team leaders to perform risk analysis and assessment associated with automation testing Performed Data Driven Test DDT with Quick Test Professional QTP to test the application for different sets of data Implemented Restful Web Services for the data transportation between multiple systems Developed remote integration with third party platforms by using Restful web services Built various graphs for business decision making using Python matplotlib library Used Python library Beautiful Soup for web Scrapping Maintained Puppet Rspec for testing various unitsystem automation schemes Worked on Jenkins continuous integration tool for deployment of project Deployed the project into Jenkins using GIT version control system Developed an application in Linux environment and dealt with all of its commands Experienced in Linux shell commands and command line utilities Explored and identified new technological platforms Collaborated with internal teams to convert end user feedback into meaningful and improved solutions Determined problems solved them and precisely documented progress of the project Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Environment Python 27 Django 14 AWS Puppet Rspec Jenkins GrafanaGraphite MySQL Linux HTML CSS JQuery JavaScript Apache Linux Git Python Developer Time Warner Cable Renton VA November 2015 to August 2016 Responsibilities Developed Views and Templates with Django view controller and template language to create a userfriendly website interface Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Used Python and Django for XML JSON processing data exchange and business logic implementation created websockets by using Django to get a handle on what we needed to be done on the backend of the applications Deployed Application using AWS EC2 Standard Deployment Techniques Built database Model Views and APIs using Python for interactive web based solutions Used Python scripts to update the content in database and manipulate files Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Worked in MySQL and NoSQL database on simple queries and writing Stored Procedures for normalization and renormalization Worked on Jenkins continuous integration tool for deployment of project Played a key role in a development wide transition from Subversion to Git which resulted in increase in efficiency for the development community Developed most of the application part in Linux environment and very much familiar with all of its commands Used TKinter to implement GUI for the user to create modify and view reports based on client data Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Implemented Restful WebServices for sending and receiving the data between multiple systems Written Cloud formation templates and deployed AWS resources using it We used to send text data through we sockets with most APis and JSON Gained Knowledge on Deploying app using AWS Cloud Formation Used Python Library Beautiful Soup for webScrapping ss Responsible for debugging and troubleshooting the web application Environment Python 27 Flask Java Script Matplotlib HTML Angular JS JQuery JSON AJAX XML CSS Oracle 10G SQL MySQL Bootstrap Restful Web Services Beautiful Soup Jenkins GitHub SVN Linux PyCharm Python Developer Value Labs Chicago IL September 2014 to November 2015 Responsibilities Develop and maintain automated tests using Python and the Robot test framework Developed entire frontend and backend modules using Python on Django Web Framework Designed and developed the UI using ReactJs HTML AJAX CSS and JavaScript Implemented several Socket TCPIP UDP XMLRPC programs to retrieve data from various data centers Built python framework to transform Datasets and Data tables into HTTPserializable JSON strings Used Python inbuilt libraries urllib2 and beautiful soup modules for web scraping Developed Python scripts to store read and write data to CSV files Developed scripts to read and dump data to MySQL database Worked in Agile and scrum environment which includes daily standup and sprint planning Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that cannot be scraped normally Wrote python scripts to read and write from csv files to database using Django ORM Used RAnalytics for analyzing data and plotting Pie Charts Bar Charts Box plots Histograms Line Graphs Scatter plots Implemented Google Python Coding Style and PEP8 while working with various teams Built python frameworks using Numpy and Pandas for data analysis Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Pandas Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Python Developer Merchant Link Silver Spring MD November 2012 to September 2014 Responsibilities Managed datasets using data frames and MySQL queried MYSQL database queries from python using PythonMySQL connector MySQL dB package to retrieve information Development of realtime multitasking systems using Python Designed and developed components using Python with Django framework Implemented code in python to retrieve and manipulate data Used Python Django creating graphics XML processing of documents data exchange business logic implementation between servers Worked on development of backend services using Python SQL and Linux Created many APIs for I scrum project which involves creating and maintaining projects in an organization and developed UI using HTML CSS and JavaScript Developed backend services and created many APIs using Python Programming Language and SQL Involved in developing a video calling application using python websockets Performed research regarding Python Programming and its uses and efficiency Developed GUI screens for XTT LD application using JSP HTML and CSS Wrote JavaScript functions to get Dynamic data and Clientside validation Used jQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side Implemented a Nodejs server to manage authentication Created Nodejs middleware application server to encapsulate modern JS widget framework Worked with JSON objects and JavaScript and jQuery intensively to create interactive web pages Implemented web based frontend using HTML CSS jQuery and AngularJS Involved in developing the UI panels using JSF XHTML CSS DOJO and jQuery Set up the deployment environment on Web Logic Developed system preferences UI screens using JSP and HTML Created a Rich Single Page Application using HTML CSS Angularjs JQuery and REST Services Designed and implemented UI layer using JSP JavaScript HTML DHTML JSON XML XHTML XSL XSLT XSLFO Used Backbonejs Nodejs Bootstrap and other javascript libraries to create intuitive and rich Single Page Applications Used JQuery JavaScript libraries for providing richer user interface and facilitates asynchronous request invocations using AJAX Developed DashBoard to monitor and report Cache Coherence Servers Prepared statements are used for communication Sql database Involved in Requirement analysis design and Implementation applying the Water fall model Environment Python Django HTML CSS JavaScript Ajax JSON jQuery MySQL TOAD SQL DB2 Apache Axis WSDL NetBeans JBOSS Mercurial Coherence ClearCase Selenium Water Fall Model UML JSP Servlet Ant XML Jira Swing Congos Python Developer SkyREC TW November 2010 to June 2012 Responsibilities Involved in the development of front end of the application using Python 27 HTML CSS AJAX JSON and Jquery Developed GUI using Python and Django for dynamically displaying the test block documentation and other features of python code using a web browser Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Used python packages like cx oracle pyodbc and MySQL data base for working with Oracle SQL Server and MySQL DB respectively Designed the front end of the application using Python HTML CSS AJAX JSON and Jquery Responsible for setting up Angular JS framework for UI development Developed html views with HTML CSS JSON and Angular JS Adobe flash Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Developed application using Amazon Web Service like EC2 cloud search Elastic load balancer ELB S CloudFront Deploy and monitor scalable infrastructure on Amazon web services AWS configuration management using puppet Writing SOAP and RESTful web services in house ESB for a web claims application Spring MVC Angular JS Active MQ SOAP UI Mockito JSON Build forge Develop consumerbased features and applications using Python Django HTML Behavior Driven Development BDD and pairbased programming Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content Implemented migration tasks from Oracle apps to PostgreSQL databases Responsible for writingmodifying scripts using sh ksh and Bash for daytoday administration Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Designed front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Wrote python scripts to parse XML documents and load the data in database Developed entire frontend and backend modules using Python on Django Web Framework Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST SOAP Environment Python 27 Python Django 16 Django REST Framework Flask XML HTTP Ajax Bootstrap JSON HTML CSS jQuery Node Js Angular Js Pandas SOAPUI Mockito Bugzilla GITHUB Java Script PLSQL Microsoft SQL Server Shell Scripting Amazon Web Services AWS Education Bachelors Skills C Git HTML JENKINS JSON OBJECT ORIENTED OBJECT ORIENTED PROGRAMMING PERL PYTHON MATPLOTLIB NUMPY PANDAS Ruby SCRIPTING SVN XML SQL SERVER MYSQL ORACLE ORACLE 10",
    "unique_id": "fb390510-157f-4cf7-b323-32d32477505f"
}