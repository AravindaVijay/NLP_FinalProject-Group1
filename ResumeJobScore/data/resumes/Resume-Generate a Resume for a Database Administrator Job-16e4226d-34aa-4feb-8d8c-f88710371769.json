{
    "clean_data": "Python Programmer Python Programmer Python Programmer United Airlines Work Experience Python Programmer United Airlines Houston TX July 2017 to Present Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Utilized PyUnit the Python unit test framework for all Python applications Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Setup database in AWS using RDS and configuring backups for S3 bucket Setting up Elastic Load Balancers ELBs and Auto Scaling groups on Production EC2 Instances to build FaultTolerant and High Availability applications Using Amazon EC2 command line interface along with BashPython to automate repetitive work Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Worked no Amazon Web Services AWS Cloud services such as EC2 EBS S3 VPC Cloud Watch and Elastic Load Balancer Interacting with supervisors artists systems administrators and production to ensure production deadlines are met Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Created Data tables utilizing MySQL utilized Jinja to access data and display it in the front end Used Python based GUI components for the frontend functionality such as selection criteria Implemented navigation rules for the application and page outcomes written controllers using annotations Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Designed Test Plans and Test Cases Verifying and Validating Web based applications Imported and managed multiple corporate applications into Subversion SVN Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Performed testing with RSpec Capybara and Selenium Performed Continuous Integration with Jenkins Environment Python AWS EC2 EBS S3 VPC PyCharm Selenium IDE JQuery MySQL HTML CSS JavaScript Ajax Web Services Pandas JSON Angularjs Bootstrap Jinja Flask MongoDB SQL Workbench Python Developer John Deere East Moline IL January 2016 to June 2017 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Created servermonitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Opscenter Build the Silent Circle Management System SCMC in Django Python NodeJS and Oracle  while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap J Query and RESTAPI calls Automated Rabbit MQ cluster installations and configuration using PythonBash Deployed the project into Heroku using GIT version control system Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked extensively with Bootstrap Cassandra with MySQL Java script and J Query to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decisionmaking using Python mat plot lib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python 27 Django 14 Cassandra Rabbit MQ Soap UI NodeJS REST API Bash PyDev HTML5 CSS MySQL JavaScript Cassandra with MySQL Backbone JS JQuery CSS Bootstrap SQL server JavaScript Eclipse GitHub Linux Shell Scripting Visual basic JavaPython Developer Pacetime Solutions May 2014 to November 2015 Responsibilities Design develop test deploy and maintain the website Worked closely with designer Converted Photoshop images into XHTMLCSS complex Flash integration Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Developed entire frontend and backend modules using PHPPython Maintenances PHPMySQL primarily Joomla Classic ASPMSSQL Communicating and interfacing with previous developers on a regular basis Used AWstat and Google Analytics to analyze web traffic Started developing with Django 096 and currently developing with Django 10 Deployed production site using Apache 20 with mod_python Designed and developed data management system using MySQL Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Rewrite existing PythonC Java module to deliver certain format of data Wrote python scripts to parse XML documents and load the data in database Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Creating unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 27 PHP C MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django Cassandra with MySQL JQuery Json Education Masters in Computer Science in Computer Science Cumberland Univ TN",
    "entities": [
        "Subversion SVN Development Quality Assurance and Management",
        "GIT",
        "Flashvars",
        "Bugzilla Planning",
        "AJAX",
        "RSpec Capybara",
        "SQLite",
        "API",
        "GUI",
        "CRUD",
        "Responsibilities Design",
        "Bash",
        "AWstat",
        "HTML AJAX CSS",
        "Performed",
        "Automation Test",
        "Django",
        "Created",
        "AWS",
        "Sqlite3",
        "Django Python",
        "JavaScript",
        "BashPython",
        "Oracle",
        "webapp2",
        "the Silent Circle Management System SCMC",
        "HTTP",
        "Google Analytics",
        "Automated Rabbit MQ",
        "Configs",
        "Django 10 Deployed",
        "Utilized PyUnit",
        "J Query",
        "CMS",
        "Heroku",
        "Created Data",
        "SQL",
        "Data",
        "XML",
        "MySQL Successfully",
        "Administrators",
        "RDS",
        "Shell",
        "API Integration Used Celery",
        "HTMLCSSjQuery",
        "Programmer United Airlines",
        "Created a",
        "RESTAPI",
        "Amazon Web Services AWS Cloud",
        "PHPPython Maintenances PHPMySQL",
        "PHP C",
        "Amazon",
        "Flask SQL Alchemy",
        "PythonDjango",
        "Amazon AWS"
    ],
    "experience": "Experience Python Programmer United Airlines Houston TX July 2017 to Present Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Utilized PyUnit the Python unit test framework for all Python applications Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Setup database in AWS using RDS and configuring backups for S3 bucket Setting up Elastic Load Balancers ELBs and Auto Scaling groups on Production EC2 Instances to build FaultTolerant and High Availability applications Using Amazon EC2 command line interface along with BashPython to automate repetitive work Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Worked no Amazon Web Services AWS Cloud services such as EC2 EBS S3 VPC Cloud Watch and Elastic Load Balancer Interacting with supervisors artists systems administrators and production to ensure production deadlines are met Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Created Data tables utilizing MySQL utilized Jinja to access data and display it in the front end Used Python based GUI components for the frontend functionality such as selection criteria Implemented navigation rules for the application and page outcomes written controllers using annotations Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Designed Test Plans and Test Cases Verifying and Validating Web based applications Imported and managed multiple corporate applications into Subversion SVN Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Performed testing with RSpec Capybara and Selenium Performed Continuous Integration with Jenkins Environment Python AWS EC2 EBS S3 VPC PyCharm Selenium IDE JQuery MySQL HTML CSS JavaScript Ajax Web Services Pandas JSON Angularjs Bootstrap Jinja Flask MongoDB SQL Workbench Python Developer John Deere East Moline IL January 2016 to June 2017 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Created servermonitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Opscenter Build the Silent Circle Management System SCMC in Django Python NodeJS and Oracle   while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap J Query and RESTAPI calls Automated Rabbit MQ cluster installations and configuration using PythonBash Deployed the project into Heroku using GIT version control system Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked extensively with Bootstrap Cassandra with MySQL Java script and J Query to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decisionmaking using Python mat plot lib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python 27 Django 14 Cassandra Rabbit MQ Soap UI NodeJS REST API Bash PyDev HTML5 CSS MySQL JavaScript Cassandra with MySQL Backbone JS JQuery CSS Bootstrap SQL server JavaScript Eclipse GitHub Linux Shell Scripting Visual basic JavaPython Developer Pacetime Solutions May 2014 to November 2015 Responsibilities Design develop test deploy and maintain the website Worked closely with designer Converted Photoshop images into XHTMLCSS complex Flash integration Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Developed entire frontend and backend modules using PHPPython Maintenances PHPMySQL primarily Joomla Classic ASPMSSQL Communicating and interfacing with previous developers on a regular basis Used AWstat and Google Analytics to analyze web traffic Started developing with Django 096 and currently developing with Django 10 Deployed production site using Apache 20 with mod_python Designed and developed data management system using MySQL Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Rewrite existing PythonC Java module to deliver certain format of data Wrote python scripts to parse XML documents and load the data in database Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Creating unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 27 PHP C MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django Cassandra with MySQL JQuery Json Education Masters in Computer Science in Computer Science Cumberland Univ TN",
    "extracted_keywords": [
        "Python",
        "Programmer",
        "Python",
        "Programmer",
        "Python",
        "Programmer",
        "United",
        "Airlines",
        "Work",
        "Experience",
        "Python",
        "Programmer",
        "United",
        "Airlines",
        "Houston",
        "TX",
        "July",
        "Present",
        "Responsibilities",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "API",
        "system",
        "deployment",
        "HTTP",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Python",
        "scripts",
        "networking",
        "tasks",
        "Ex",
        "auto",
        "Config",
        "generation",
        "information",
        "network",
        "devices",
        "data",
        "custom",
        "Fortigate",
        "firewall",
        "Config",
        "generator",
        "functionality",
        "Configs",
        "firewalls",
        "PyUnit",
        "Python",
        "unit",
        "test",
        "framework",
        "Python",
        "applications",
        "databases",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "Setup",
        "database",
        "AWS",
        "RDS",
        "backups",
        "S3",
        "bucket",
        "Elastic",
        "Load",
        "Balancers",
        "ELBs",
        "Auto",
        "Scaling",
        "groups",
        "Production",
        "EC2",
        "Instances",
        "FaultTolerant",
        "Availability",
        "applications",
        "Amazon",
        "EC2",
        "command",
        "line",
        "interface",
        "BashPython",
        "work",
        "GUI",
        "webapp2",
        "test",
        "block",
        "documentation",
        "features",
        "python",
        "code",
        "web",
        "browser",
        "Worked",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "Cloud",
        "services",
        "EC2",
        "EBS",
        "S3",
        "VPC",
        "Cloud",
        "Watch",
        "Elastic",
        "Load",
        "Balancer",
        "Interacting",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "SQL",
        "functions",
        "triggers",
        "cursors",
        "types",
        "sequences",
        "indexes",
        "Created",
        "Data",
        "tables",
        "MySQL",
        "Jinja",
        "data",
        "end",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "navigation",
        "rules",
        "application",
        "page",
        "outcomes",
        "controllers",
        "annotations",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "Participated",
        "release",
        "meetings",
        "Technology",
        "stakeholders",
        "risks",
        "releases",
        "designing",
        "developing",
        "Automation",
        "Test",
        "cases",
        "Selenium",
        "WebDriver",
        "Java",
        "TestNG",
        "Test",
        "Plans",
        "Test",
        "Cases",
        "Verifying",
        "Web",
        "applications",
        "applications",
        "Subversion",
        "SVN",
        "Development",
        "Quality",
        "Assurance",
        "Management",
        "teams",
        "cross",
        "communication",
        "approval",
        "production",
        "changes",
        "integration",
        "system",
        "GIT",
        "version",
        "control",
        "repository",
        "checkins",
        "developer",
        "Performed",
        "testing",
        "RSpec",
        "Capybara",
        "Selenium",
        "Performed",
        "Continuous",
        "Integration",
        "Jenkins",
        "Environment",
        "Python",
        "EC2",
        "EBS",
        "S3",
        "VPC",
        "PyCharm",
        "Selenium",
        "IDE",
        "JQuery",
        "MySQL",
        "HTML",
        "CSS",
        "JavaScript",
        "Ajax",
        "Web",
        "Services",
        "Pandas",
        "JSON",
        "Angularjs",
        "Bootstrap",
        "Jinja",
        "Flask",
        "MongoDB",
        "SQL",
        "Workbench",
        "Python",
        "Developer",
        "John",
        "Deere",
        "East",
        "Moline",
        "IL",
        "January",
        "June",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbit",
        "MQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Celery",
        "Rabbit",
        "MQ",
        "MySQL",
        "Django",
        "worker",
        "framework",
        "Recording",
        "Scripts",
        "Web",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "Soap",
        "UI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "Scripting",
        "web",
        "web",
        "services",
        "Application",
        "service",
        "architecture",
        "Python",
        "Django15",
        "JSF",
        "Spring",
        "HTML",
        "CSS",
        "frontend",
        "daemon",
        "Psutil",
        "Django",
        "app",
        "analytics",
        "data",
        "solutions",
        "Cassandra",
        "database",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "Apache",
        "Cassandra",
        "database",
        "Cassandra",
        "data",
        "model",
        "implementation",
        "monitoring",
        "DSE",
        "Dev",
        "Centre",
        "Data",
        "stax",
        "Opscenter",
        "Build",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Django",
        "Python",
        "NodeJS",
        "Oracle",
        "infrastructure",
        "services",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "J",
        "Query",
        "RESTAPI",
        "Automated",
        "Rabbit",
        "MQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "standards",
        "code",
        "performance",
        "applications",
        "use",
        "design",
        "patterns",
        "Front",
        "Controller",
        "DAO",
        "Bootstrap",
        "Cassandra",
        "MySQL",
        "Java",
        "script",
        "J",
        "Query",
        "user",
        "experience",
        "operations",
        "calculation",
        "purpose",
        "python",
        "libraries",
        "graphs",
        "business",
        "Python",
        "mat",
        "plot",
        "lib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Python",
        "Library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Planning",
        "test",
        "cases",
        "automation",
        "test",
        "cases",
        "Environment",
        "Python",
        "Django",
        "Cassandra",
        "Rabbit",
        "MQ",
        "Soap",
        "UI",
        "NodeJS",
        "REST",
        "API",
        "Bash",
        "PyDev",
        "HTML5",
        "CSS",
        "MySQL",
        "JavaScript",
        "Cassandra",
        "MySQL",
        "Backbone",
        "JS",
        "JQuery",
        "CSS",
        "Bootstrap",
        "SQL",
        "server",
        "JavaScript",
        "Eclipse",
        "GitHub",
        "Linux",
        "Shell",
        "Scripting",
        "Visual",
        "JavaPython",
        "Developer",
        "Pacetime",
        "Solutions",
        "May",
        "November",
        "Responsibilities",
        "Design",
        "test",
        "deploy",
        "website",
        "designer",
        "Photoshop",
        "images",
        "XHTMLCSS",
        "Flash",
        "integration",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "frontend",
        "modules",
        "PHPPython",
        "Maintenances",
        "Joomla",
        "Classic",
        "Communicating",
        "developers",
        "basis",
        "AWstat",
        "Google",
        "Analytics",
        "web",
        "traffic",
        "Django",
        "Django",
        "production",
        "site",
        "Apache",
        "mod_python",
        "data",
        "management",
        "system",
        "MySQL",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "Postgres",
        "SQL",
        "data",
        "integrity",
        "Rewrite",
        "Java",
        "module",
        "format",
        "data",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "designer",
        "Flash",
        "CMS",
        "use",
        "Flashvars",
        "Django",
        "models",
        "XML",
        "Django",
        "Flash",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "web",
        "application",
        "Environment",
        "Python",
        "PHP",
        "C",
        "MySQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Django",
        "Cassandra",
        "MySQL",
        "JQuery",
        "Json",
        "Education",
        "Masters",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "Cumberland",
        "Univ",
        "TN"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:44:12.445968",
    "resume_data": "Python Programmer Python Programmer Python Programmer United Airlines Work Experience Python Programmer United Airlines Houston TX July 2017 to Present Responsibilities Developed tools using Python Shell scripting XML to automate some of the menial tasks Designed and managed API system deployment using fast HTTP server and Amazon AWS architecture Developed entire frontend and backend modules using Python on Django Web Framework Used Python and Django creating graphics XML processing data exchange and business logic implementation Creating Python scripts to automate daily networking tasks Ex auto Config generation retrieving information from network devices parsing data etc including a custom Fortigate firewall Config generator which included multithreaded functionality to generate Configs for multiple firewalls at once Utilized PyUnit the Python unit test framework for all Python applications Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Setup database in AWS using RDS and configuring backups for S3 bucket Setting up Elastic Load Balancers ELBs and Auto Scaling groups on Production EC2 Instances to build FaultTolerant and High Availability applications Using Amazon EC2 command line interface along with BashPython to automate repetitive work Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser Worked no Amazon Web Services AWS Cloud services such as EC2 EBS S3 VPC Cloud Watch and Elastic Load Balancer Interacting with supervisors artists systems administrators and production to ensure production deadlines are met Involved in writing SQL queries implementing functions triggers cursors object types sequences indexes etc Created Data tables utilizing MySQL utilized Jinja to access data and display it in the front end Used Python based GUI components for the frontend functionality such as selection criteria Implemented navigation rules for the application and page outcomes written controllers using annotations Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Participated in weekly release meetings with Technology stakeholders to identify and migrate potential risks associated with the releases Involved in designing and developing of Automation Test cases using Selenium WebDriver Java and TestNG Designed Test Plans and Test Cases Verifying and Validating Web based applications Imported and managed multiple corporate applications into Subversion SVN Development Quality Assurance and Management teams to ensure cross communication and confirmed approval of all production changes Connected continuous integration system with GIT version control repository and continually build as the checkins come from the developer Performed testing with RSpec Capybara and Selenium Performed Continuous Integration with Jenkins Environment Python AWS EC2 EBS S3 VPC PyCharm Selenium IDE JQuery MySQL HTML CSS JavaScript Ajax Web Services Pandas JSON Angularjs Bootstrap Jinja Flask MongoDB SQL Workbench Python Developer John Deere East Moline IL January 2016 to June 2017 Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on service oriented architecture and used Python 27 Django15 JSF 2 Spring 2 Ajax HTML CSS for the frontend Created servermonitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Opscenter Build the Silent Circle Management System SCMC in Django Python NodeJS and Oracle dB while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap J Query and RESTAPI calls Automated Rabbit MQ cluster installations and configuration using PythonBash Deployed the project into Heroku using GIT version control system Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked extensively with Bootstrap Cassandra with MySQL Java script and J Query to optimize the user experience Carried out various mathematical operations for calculation purpose using python libraries Built various graphs for business decisionmaking using Python mat plot lib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python Library Beautiful Soup for web scrapping to extract data for building graphs Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Environment Python 27 Django 14 Cassandra Rabbit MQ Soap UI NodeJS REST API Bash PyDev HTML5 CSS MySQL JavaScript Cassandra with MySQL Backbone JS JQuery CSS Bootstrap SQL server JavaScript Eclipse GitHub Linux Shell Scripting Visual basic JavaPython Developer Pacetime Solutions May 2014 to November 2015 Responsibilities Design develop test deploy and maintain the website Worked closely with designer Converted Photoshop images into XHTMLCSS complex Flash integration Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Worked on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Developed entire frontend and backend modules using PHPPython Maintenances PHPMySQL primarily Joomla Classic ASPMSSQL Communicating and interfacing with previous developers on a regular basis Used AWstat and Google Analytics to analyze web traffic Started developing with Django 096 and currently developing with Django 10 Deployed production site using Apache 20 with mod_python Designed and developed data management system using MySQL Successfully migrated the Django database from SQLite to MySQL to Postgres SQL with complete data integrity Rewrite existing PythonC Java module to deliver certain format of data Wrote python scripts to parse XML documents and load the data in database Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Worked very closely with designer tightly integrating Flash into the CMS with the use of Flashvars stored in the Django models Also created XML with Django to be used by the Flash Creating unit testregression test framework for workingnew code Responsible for debugging and troubleshooting the web application Environment Python 27 PHP C MySQL Linux HTML XHTML CSS AJAX JavaScript Apache Web Server Django Cassandra with MySQL JQuery Json Education Masters in Computer Science in Computer Science Cumberland Univ TN",
    "unique_id": "16e4226d-34aa-4feb-8d8c-f88710371769"
}