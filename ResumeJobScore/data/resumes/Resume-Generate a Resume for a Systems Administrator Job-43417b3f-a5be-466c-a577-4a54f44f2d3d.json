{
    "clean_data": "Senior Android Developer Senior Android span lDeveloperspan Senior Android Developer Bank of America Newark NJ 12 years of experience as Software Developer combining around 4 years in Designing Development of Android Applications for Smart Phone Tablet using Java Android SDK Eclipse IDE Android Studio SQL SQLite Java XML JSON Experience in each phase of software development life cycle like requirements gathering analysis design development testing deployment and maintenance of Software Applications Strong Knowledge in Waterfall AgileScrum TDD BDD software development models Good understanding in Android OS interactive application development and memory management and also worked on Linux kernel level Extensively worked on almost every stage of application development right from collecting requirements providing guidelines for design creating application architecture implementation that includes various stages in development QA code signing and releasing to Market Proficient in Working with different Android frameworks Bluetooth Location Camera Notifications Maps Good Exposure in working with ASYNC Task Threads and Services in Android Experience working with MVC Model View Controller and MVP Model view Presenter MVVM Model View View Model design patterns Experience in developing elegant user interfaces with rich features and also worked on Android open source projects AOSP and OTA package tools Experience in delivering products using objectoriented software engineering Good understanding of Android Backend and UI guidelines Handson experience on memory leaks push notifications multiple screen support data offline usage audio features video features graphic design and animation Indepth Knowledge on Android basic components ie Activity Fragment Service Broadcast Receiver and Content Provider Expertize in Android UI toolkit basicpickerlist views adapters dialogs menus and Layout Managers Knowledge on Firebase Android in implementing for Realtime Database Analytics Cloud Messaging Storage and Remote Config Experience in Kotlin Programming Language Proficient in using Google Map spinners Views Camera Toast messages Camera integrating third party libraries Dialogs Notifications Custom Buttons Binders Have experience and knowledge regarding web services like RESTful SOAP to fetch the data and parse JSON response to frontend UI using GSON Experience in using Java Native Interface JNI and Knowledge in Crashlytics and Fabrics which help in crash reporting and experience in Android performance profilers which helps to measure the application performance Undertook full life cycle of Android Application Development which includes testing on device and simulator as well and writing JUnit test cases using Mockito Espresso Robotium for Android applications Experience in web service protocols and architecture such as JSON SOAP REST HTTP and XML Implemented Several Android Applications using Google Maps API Geocoder API Used different version control systems like BitBucket SVN and GIT Experience in developing applications using thirdparty libraries Retrofit Volley Picasso Active Android Butter Knife Event Bus Lotties Hands on experience with building the crossplatform mobile applications using Cordova using HTML CSS JavaScript Excellent knowledge and practice in building crossplatform native mobile applications using Xamarin with Visual Studio C and Ionic React Native with JavaScript Libraries Proficient in Internet Application Programming using technologies like Core Java Struts Spring Web Services Restful and SOAP Hibernate EJB JSP Servlets JDBC RMI RDBMS JNDI Good Exposure with HTTP GET and POST Requests and parsing different types of responses Hands on Experience in developing webbased GUI using Java Applet Servlets JSP AJAX JavaScript HTML and CSS3 Solid Understanding in Core Java concepts like Collections MultiThreading SocketProgramming and Exception handling Excellent knowledge on Web Application servers Apache Tomcat JBOSS WebSphere Experience in localizing the application to support multiple languages Knowledge of scripting in UNIX LINUX XML XSLT XML Schema Built different Applications using databases like Oracle SQLite and MySQL Excellent communication analytical and problemsolving skills passionate to learn new skills and technologies Authorized to work in the US for any employer Work Experience Senior Android Developer Bank of America Richardson TX August 2018 to Present Description Bank of America is one of the largest multinational banking and Financial services in United States We Developed a mobile banking app for Android Devices for the Bank This application allows users to manage their Bank of America accounts and Bank of America creditdebit cards and options to check their account balance recent transactions available credit deposit check minimum payment due and due date Responsibilities Involved in application Android development defect validation deployment and production maintenance Developed the Mobile Agent application using Android Studio 0814 and Android SDK package Collaborating with designers on a regular basis to implement the best Android user experience possible Refactoring the application using MVP Design Pattern used Dagger for Dependency Injection for creating instances for entire application Converted java code to Kotlin and used Kotlin programming in Android studio with autocomplete lint checker refactoring debugging Designed the User Interface according to the requirements using UI Groups UI components Worked with Google Maps Android API V2 to display the nearby bank locations based on user geolocation Developed userfriendly User interfaces using widgets like Menus Dialogs Buttons Edit Boxes and selection widgets like view and scroll as per client needs Registered the Broadcast Receivers for the Android system announcements Integrated camera for capturing images of the card and other documents Integrated ZXing Library to scan the barcode and display barcode image Designed the Custom Dialog using the Fragment Activity Designed the Custom Action bar Custom Progress bar while making service calls Spearheaded creation of four new informationsecurity departments Risk assessment vulnerability penetration testing and security engineering services Enabled digital content using digital rights management Designed networking for the application using Android library layer and Android framework layer Implemented capturing the screenshot of the payment screen Bitmap to PDF conversion features using Android NDK Making the Restful Service Calls at the various stages of the app development cycle and parsing the JSON responses back from the web servers according to the application requirement Implemented feature for sharing offer using Mail Facebook Twitter push notifications and other social networking sites Created a local database using SQLite to store and retrieve the data Implemented GIT for code management and JIRA for bug tracking and project management Developed detailed test plan and test summary documents that outlined the tests to be performed for the given requirements and the results of these tests Worked with Application Activity Lifecycle callbacks for providing the security and showing the login screen when the app goes to background Worked on using RxJava framework with MVP architecture in the application Ported the existing network stack of the app to Retrofit GSON and  Implemented UI using Cordova Assisted in creating an analysis and reports Summarized in client discovery sessions Updated the app with new features like push notifications Responsible for adding the update module for checking the latest version of the app Used third party libraries like Retrofit for providing powerful framework for authenticating and interacting with APIs and sending network requests Butter Knife used to inject views Extensively worked on designing the layouts to compatible with screens with different resolutions Responsible for making the application compatible with the Latest Android Version Lollipop 50 Used ADB logcat and DDMS tools for testing and debugging purposes Used Espresso and Junit tools for testing Espresso can run commands at the appropriate time to improve reliability of tests Responsible for testing the application in the stage code review fixing the bugs and providing postproduction support Environment Android Android Studio IDE Windows Java Kotlin JDK Dagger GPS Google Maps API V2 REST CORDOVA NDK JUnit Jira Logcat DDMS Retrofit Butter Knife XML Espresso APN JSON SQLite GIT RxJava Sr Android Developer Aetna Insurance Hartford CT May 2016 to August 2018 Description Aetna Inc is an American managed health care company which sells traditional and consumer directed health care Insurance plans and related services such as medical pharmaceutical dental behavioral health longterm care and disability plans The Android application we developed is used to look up the status of claim and to see users their virtual card on the phone The application uses GPS function to help users no matter where they are Responsibilities Involved in requirement gathering UI design and development Written application logic using Android Studio and followed TDD approach in developing the application Handling JSON data using efficient parsing techniques such as GSON and Parcebale Constructing http requests fetching server response and parsing feeds wherever required Involved in development and enhancements of features to restrict the usage based on Authorization and Authentication tokens Used Jenkins for continuous integration and worked on Android Frameworks such as Notifications and Location in developing the application Used sliding side menu library for easy navigation through the app and Used AOSP for development of application with middle ware Used React Native in creating cross platform application which stores the data and can be reused in the application and worked as Triage Engineer on ADB and debugging bug reports Responsible for design of user interface using custom layouts and different form of widgets Used web views list views populated lists to display the lists from database using simple adapters Used services Async tasks and Alert Notification API to implement parking status reminder into the mobile app Used Google Firebase for creating customized notifications Used Android content providers for implementing features like sharing using Facebook Email Twitter SMS etc from the app and designed suitable GUI for these applications Worked extensively on local data storage using Shared Preferences SQLite databases and File system Used Parceler for passing Parcelable objects between various components of the app Embedded Google Maps API GPS Location Data into app with zooming controls for finding out the store and navigation details to the store Integrating RESTful API services with Basic Authentication process and worked with unit testing and automation testing with the help of Mockito Robotium Espresso and Robolectric frameworks Involved in working with Location Manager and Restful Web service with JSON and also used Dagger for dependency injection and worked on Linux kernel which helps the applications to communicate with the hardware Integrated crashlytics based app distribution Integrated Push Notifications GCM to notify user about new instock apparels and worked on CTS test cases to ensure that the applications support the google standards Used ProGuard for code shrinking optimizing and obfuscating the remaining classes fields and methods with short names This helped in preventing the APK from reverse engineering Worked on memory leaks using DDMS and Leak Canary Used GIT for version control and followed Agile with JIRA for implementing this project Environment Android SDK SQLite Core Java Android studio IDE Android APIs ADT plugin Location Manager JDK JNI XML JSON GSON REST services GPS service Bitbucket Log cat Junit Mockito Espresso Dagger Android Developer Kaiser Permanente Pasadena CA October 2013 to April 2016 Description Kaiser Permanente is one of the nations largest notforprofit health care company The Android application we developed allows the mobile users to manage their health care The application let the users access menus that let them get advice schedule appointments and refill prescriptions The navigation feature of the application puts the features and information you need within reach at all times Responsibilities Implemented offline functionality for a shopping list to display the message If the user is offline and hasnt been shown the message that day display the message Fixed the bugs identified by the QA testing team Worked in an Agile based environment and finished all the tasks assigned in each sprint Tracked issues using JIRA Contribution in code refactoring code optimization Refactoring application using dagger Discussed and provided suggestions on usability suitability and improvements in interface design Worked on the backend database and integrated with JDBC to retrieve Data Access Objects Involved in writing SQL queries PL SQLStored Procedures functions cursors triggers indexes sequences etc Involved in fixing QA defects and tracked them using QC Implementing the dashboard action bar video players quick action UI design pattern using Android interface definition language and AMF Implemented Web views component to load HTML5 based flashcard pages Facilitating local data storage using SQLite for user preferences and progress Involved in developer testing by porting the app to multiple devices with various screen sizes Worked with an offshore team and took part in meeting every day to keep track of different tasks or to add a new task for a story Used GitHub as project version controller Tracked the bugs using HockeyApp crash reports Established and executed test procedures analyzed test results logged defects analyzed defect data recommended process improvements Implemented Custom and Compound View to match the UIUX specifications Integrated activity and fragmentbased navigation to adapt to portrait and landscape orientations to better use the screen real state adapting to phones and tablets Added animated transitions when calling other activities to improve the user experience Responsible for code optimization and testing of the website across different browsers The implemented interaction between frontend and backend using the JSON object Validated input values to make sure that they will be accepted before they are submitted to the server Wrote extensive HTML CSS and JavaScript code to build dynamic pages using Eclipse Involved in the development of Dynamic loading of web pages using Ajax calls with server pages Environment Android Java J2EE JSP Servlets BSP JDBC 30 HTML GCM XML Cordova SVN AngularJS AWS EXT JS Java Script Eclipse APN OracleDB rex Windows Sr JavaJ2EE and Full Stack Developer Dish Denver CO August 2011 to October 2013 Description Dish Network stylized as dish is an American directbroadcast satellite service provider The company provides satellite television satellite internet access audio programming and interactive television services to commercial and residential customers in the United States Responsibility Involved in Design and Development of project modules gather requirements analyze and implemented business logic using Agile Scrum Software Development methodology Designed class sequence activity flow diagrams using UML Visio and Sparx Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed several reusable directives using Angular 2 Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Developed Interactive web pages with Angular 2 HTML5 CSS3 Javascript JQuery and Bootstrap Usage of new features of Java8 like lambdaexpressions for communicating between business layer and database stream API for Bulk Data Operations on Collections using both streams and parallel streams Used J2EE design patterns like Model View ControllerMVC Singleton Factory Data Access Object DAO Data Transfer Object DTO and Service Locator Involved in writing Thread safe blocks for Multithreading access and improve performance Usedcore Spring concepts like DIIOC AOP Batch implementation Implemented fail safe and circuit breaker patterns in Spring BootMicroservice applications using Hystrix configured SwaggerUI to registered Microservice with Eureka server and monitored service health check from Spring Boot admin console and Spring Ribbon for load balancing Developed UI applications using Angular2 integrating with REST APIs built on Spring ZuulMicroservices Working on Microservice Registration with Spring Cloud using Netflix Eureka Implementing Spring Cloud REST call using Netflix Feign Client Implementing or exposing the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Implemented preauthentication and data base security using Spring Security and securing application access and Spring Batch for scheduling and maintenance of batch jobs Developed Python Object Oriented Design code for logging and debugging code optimization Worked on Camelbased integration middleware solution for Provisioning Services by design and the Implementation of business logic and data processing routes using Apache Camel Created tables and worked on SQL and PLSQL to write Stored Procedures functions and packages for complex inserts and updates in the DB used TOAD to interact with Oracle database Used Oracle 11g12c for the backend data and performed complex queries using joins for CRUD operations Experience in Normalization performance tuning uploading files to database using CLOB and BLOB Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Implemented Spring ORM with Hibernate taking advantage of features like Annotation metadata AutoWiring and Collectionsto implement DAO layer with Hibernate Session Factory HQL and SQL Extensively used Hibernate concepts such asLazy loading Dirty checking Locking and Transactions Composed and executed MongoDB scripts to insert and update NoSQL database and reporting Configuring Cassandra clusters and key spaces on RHELOpenstack Installed and setup Apache Spark Used the Java API to load the data into Cassandra Clusters Installed and configured plugins for Apache HTTP server and Sun One Web server to proxy the request for WebLogic server Implemented standard backup procedures for Weblogic server Deployed Docker contained Spring Boot Microservices in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Experience with building Docker Images and running them on Docker container Used Jenkins as an AWS code deploys plugin to deploy to AWS Experience with DevOps methodologies implementing CICD Pipelines using tool sets like GIT Jenkins Chef and AWS Generating Scala and Java classes from the APIs so that they can be incorporated in the application Used Sparkstreaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Responsible for implementation of java integration components for JBPM and DROOLs Configured Protractor test classes and Selenium grid end to end testing on the front end Involved in code reviews and unit testing using JUnit framework and Log4j to provide logs of exceptions Worked with several testing frameworks such as JUnit EasyMock Mockito and PowerMock Created Test automation framework using Cucumber and Selenium web driver Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug tracking project management andMaven as build tool Environment Java8 J2EE CICD Spring Webservices Microservices Swagger Spring Zuul Netflix Eureka Restful Feign Client Apache Camel Kafka WebLogic JUnit JBPM Drools Spring Cloud AWS EC2 S3 Scala MongoDB Cassandra HTML5 CSS3 Python JavaScriptES6 Bootstrap jQuery Angular 2 Maven AJAX JQuery XML XSLT Java Beans UML Design Patterns Log4j Agile Methodology Devops Docker Spark Kubernetes Sr JavaJ2EE Developer ACI WorldWide Clearwater FL June 2009 to August 2011 Description Enterprise Banker the industryleading webbased cash management system With Enterprise Banker customers use a web browser to access cash management Functions Financial institution administrators use Enterprise Bankers webbased administrative interface to set system defaults perform customer setup and monitor customer activities with a web browser from any location that has access to the financial institutions network When fully utilized Enterprise Banker includes 18 products over 90 modules over 250 Enterprise Banker Suite is designed to allow financial institutions to purchase and implement specific limited increments of functionality Responsibility Experienced with Software Development Life CycleSDLC with object oriented of business process and worked on developing Service oriented architecture applications in agile development environment Developed and implemented Business Requirements using Spring MVC framework Implemented crosscutting concerns such as logging authentication and system performance using Spring AOP Developed reusable and interoperableservices based on SOAP WSDL JAXWS JAXRPC Web services Well versed with core Java concepts like Collections Swing Serialization and ServletsJSP Implemented web services in Service Oriented Architecture SOA to retrieve data from client side NodeJS and parsed the data to client and handled the security and Authorization using Spring Security and OAuth authentication protocol respectively Used Jackson Custom Mappers for Custom manipulation for date currency conversations on JSON Data Used Jackson parser for Marshaling and UnMarshaling Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Hibernate Detached Criteria HQL and written some SQL queries for data retrieving Handson writing Stored Procedures functions triggers DDL DML SQLqueries and PLSQL Worked on JPA as persistence layer involving EJB annotations to synchronize with database through XML JBoss Application server implementation support workload management and performance tuning including Web server setup configuration with JBoss App Server Developed UI usingAngularJS HTML5CSS3 jQuery BootstrapJavaScript Ajax Developed PLSQL store procedures to convert the data from Oracle to MongoDB Developed Test classes using JUnit and Easy Mock and test coverage using EMMA plugin Analyze and resolve conflicts related to merging of source code for GIT and Maven as build tool Environment Java J2EE Java Beans JMS NodeJS Spring JQuery EJB Hibernate IntelliJ Angular Oracle 11g MongoDB PLSQL Cucumber Log4j XML HTML5 CSS3 JavaScript Bootstrap SOAP Maven GIT JavaJ2EE Developer Penn National Insurance Harrisburg PA April 2007 to June 2009 Description Penn National Insurance is a propertycasualty mutual insurance company headquartered in Harrisburg Pennsylvania Founded in 1919 by a farmers trade organization to help the farmers get more affordable workers compensation protection for their workers who operated steamdriven farming equipment Responsibility Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Extensively used MVC Factory Delegate and Singleton design patterns Enhanced the Web Application using Struts Created business logic and application in Struts Framework using JSP and Servlets Wrote Client side validation using Struts Validate framework and JavaScript Wrote unit test cases for different modules and resolved the test findings Used SOAP for Web Services by exchanging XML data between applications over HTTP Wrote JSPs Servlets and deployed them on WebLogic Application server Wrote queries in MySQL to interact with the database Used Subversion for version control and log4j for logging errors Helped production support team to solve trouble reports Wrote Ant Scripts to automate the build and deploy process Involved in Release Management and Deployment Process Environment Java J2EE Struts JSP Servlets JavaScript SOAP WebLogic Log4j AMT CVS PLSQL MySQL Education Bachelors Skills Visual studio Android studio C C Design patterns",
    "entities": [
        "GUI",
        "Activity Fragment Service",
        "JIRA Contribution",
        "ADT",
        "Android",
        "HockeyApp",
        "UNIX",
        "Netflix Feign Client Implementing",
        "QC Implementing",
        "Struts Framework",
        "Working",
        "Registered the Broadcast Receivers",
        "Usedcore Spring",
        "Authorization using Spring Security",
        "Knowledge in Crashlytics and Fabrics",
        "Cassandra Clusters Installed",
        "AOSP",
        "JavaScript Wrote",
        "Ajax",
        "GIT Jenkins Chef",
        "GPS",
        "Dialogs Notifications Custom Buttons Binders",
        "XML",
        "Description Aetna Inc",
        "OAuth",
        "Struts Created",
        "Indepth Knowledge",
        "WebLogic",
        "XML JBoss Application",
        "JUnit",
        "DevOps",
        "Cordova",
        "C C Design",
        "Retrofit GSON",
        "Bank of America",
        "DDMS",
        "CLOB",
        "Spring Boot",
        "Hibernate Session Factory HQL",
        "UML Visio",
        "AutoWiring",
        "Oracle SQLite",
        "Developed",
        "Stored Procedures",
        "Present Description Bank of America",
        "Android Devices for the Bank",
        "Authorization and Authentication",
        "API for Bulk Data Operations on Collections",
        "Android Butter Knife Event Bus Lotties Hands",
        "IDE Android",
        "Spring ZuulMicroservices Working on Microservice Registration",
        "Responsibilities Involved",
        "Data Access Objects Involved",
        "Provisioning Services",
        "Servlets",
        "Core",
        "Bootstrap Usage",
        "Developed Python Object Oriented Design",
        "MVP Design Pattern",
        "Apache Camel Created",
        "Responsibility Involved",
        "Undertook",
        "Implemented UI",
        "Data Access Object DAO",
        "Integrated ZXing Library",
        "Spring Security",
        "Visual Studio C",
        "Linux",
        "Android Studio 0814",
        "JSP",
        "Android Application Development",
        "APK",
        "Android NDK Making",
        "Easy Mock",
        "EMMA",
        "Collections MultiThreading SocketProgramming and Exception",
        "BitBucket SVN",
        "Market Proficient",
        "MVC",
        "EXT",
        "JBoss App Server Developed UI",
        "Agile",
        "SQL Server Used Hibernate Detached Criteria",
        "EJB",
        "GIT",
        "Kotlin Programming Language Proficient",
        "HTML CSS",
        "Harrisburg Pennsylvania Founded",
        "JavaScript Libraries Proficient",
        "US",
        "QA",
        "Shared Preferences",
        "PDF",
        "Penn National Insurance",
        "Drools",
        "the Latest Android Version",
        "Created",
        "Xamarin",
        "Software Developer",
        "MVP",
        "the Restful Service",
        "Spring Ribbon",
        "AWS",
        "Developed Interactive",
        "APP",
        "Oracle",
        "Android Developer Bank of America Richardson",
        "Singleton",
        "Parceler",
        "OTA",
        "Netflix",
        "Skills Visual",
        "Hartford",
        "Retrofit Volley Picasso Active",
        "Spring Boot Microservices",
        "RxJava",
        "Parcebale Constructing",
        "Responsibility Experienced with Software Development Life",
        "SQL",
        "UIUX",
        "the United States Responsibility Involved in Design and Development",
        "GitHub",
        "Designing Development",
        "ProGuard",
        "Android Backend",
        "the Fragment Activity Designed the Custom Action bar Custom Progress",
        "CTS",
        "Android Developer Bank of America Newark NJ",
        "Sun One",
        "Functions Financial",
        "RHELOpenstack Installed",
        "Butter Knife",
        "HTTP Wrote",
        "Used Google Firebase",
        "WebLogic Application",
        "Handson",
        "Basic Authentication",
        "JBPM",
        "United States",
        "Annotation",
        "SQLite",
        "DB",
        "Notifications and Location",
        "CRUD",
        "Release Management and Deployment Process Environment",
        "MySQL Excellent",
        "Bitmap",
        "Implemented Custom",
        "Hystrix",
        "Maven",
        "Established",
        "Maven GIT JavaJ2EE Developer",
        "UI",
        "CICD Pipelines",
        "Collections Swing Serialization",
        "Business Requirements",
        "SVN",
        "Weblogic",
        "REST",
        "Oracle Database Implemented",
        "Angular 2 HTML5",
        "Cordova Assisted",
        "Location",
        "Developed UI",
        "TDD",
        "NoSQL",
        "MVC Factory Delegate",
        "Layout Managers Knowledge",
        "TOAD",
        "Microservice",
        "Google Map",
        "Servlets Wrote Client",
        "GSON",
        "HTML CSS JavaScript Excellent"
    ],
    "experience": "Experience in each phase of software development life cycle like requirements gathering analysis design development testing deployment and maintenance of Software Applications Strong Knowledge in Waterfall AgileScrum TDD BDD software development models Good understanding in Android OS interactive application development and memory management and also worked on Linux kernel level Extensively worked on almost every stage of application development right from collecting requirements providing guidelines for design creating application architecture implementation that includes various stages in development QA code signing and releasing to Market Proficient in Working with different Android frameworks Bluetooth Location Camera Notifications Maps Good Exposure in working with ASYNC Task Threads and Services in Android Experience working with MVC Model View Controller and MVP Model view Presenter MVVM Model View View Model design patterns Experience in developing elegant user interfaces with rich features and also worked on Android open source projects AOSP and OTA package tools Experience in delivering products using objectoriented software engineering Good understanding of Android Backend and UI guidelines Handson experience on memory leaks push notifications multiple screen support data offline usage audio features video features graphic design and animation Indepth Knowledge on Android basic components ie Activity Fragment Service Broadcast Receiver and Content Provider Expertize in Android UI toolkit basicpickerlist views adapters dialogs menus and Layout Managers Knowledge on Firebase Android in implementing for Realtime Database Analytics Cloud Messaging Storage and Remote Config Experience in Kotlin Programming Language Proficient in using Google Map spinners Views Camera Toast messages Camera integrating third party libraries Dialogs Notifications Custom Buttons Binders Have experience and knowledge regarding web services like RESTful SOAP to fetch the data and parse JSON response to frontend UI using GSON Experience in using Java Native Interface JNI and Knowledge in Crashlytics and Fabrics which help in crash reporting and experience in Android performance profilers which helps to measure the application performance Undertook full life cycle of Android Application Development which includes testing on device and simulator as well and writing JUnit test cases using Mockito Espresso Robotium for Android applications Experience in web service protocols and architecture such as JSON SOAP REST HTTP and XML Implemented Several Android Applications using Google Maps API Geocoder API Used different version control systems like BitBucket SVN and GIT Experience in developing applications using thirdparty libraries Retrofit Volley Picasso Active Android Butter Knife Event Bus Lotties Hands on experience with building the crossplatform mobile applications using Cordova using HTML CSS JavaScript Excellent knowledge and practice in building crossplatform native mobile applications using Xamarin with Visual Studio C and Ionic React Native with JavaScript Libraries Proficient in Internet Application Programming using technologies like Core Java Struts Spring Web Services Restful and SOAP Hibernate EJB JSP Servlets JDBC RMI RDBMS JNDI Good Exposure with HTTP GET and POST Requests and parsing different types of responses Hands on Experience in developing webbased GUI using Java Applet Servlets JSP AJAX JavaScript HTML and CSS3 Solid Understanding in Core Java concepts like Collections MultiThreading SocketProgramming and Exception handling Excellent knowledge on Web Application servers Apache Tomcat JBOSS WebSphere Experience in localizing the application to support multiple languages Knowledge of scripting in UNIX LINUX XML XSLT XML Schema Built different Applications using databases like Oracle SQLite and MySQL Excellent communication analytical and problemsolving skills passionate to learn new skills and technologies Authorized to work in the US for any employer Work Experience Senior Android Developer Bank of America Richardson TX August 2018 to Present Description Bank of America is one of the largest multinational banking and Financial services in United States We Developed a mobile banking app for Android Devices for the Bank This application allows users to manage their Bank of America accounts and Bank of America creditdebit cards and options to check their account balance recent transactions available credit deposit check minimum payment due and due date Responsibilities Involved in application Android development defect validation deployment and production maintenance Developed the Mobile Agent application using Android Studio 0814 and Android SDK package Collaborating with designers on a regular basis to implement the best Android user experience possible Refactoring the application using MVP Design Pattern used Dagger for Dependency Injection for creating instances for entire application Converted java code to Kotlin and used Kotlin programming in Android studio with autocomplete lint checker refactoring debugging Designed the User Interface according to the requirements using UI Groups UI components Worked with Google Maps Android API V2 to display the nearby bank locations based on user geolocation Developed userfriendly User interfaces using widgets like Menus Dialogs Buttons Edit Boxes and selection widgets like view and scroll as per client needs Registered the Broadcast Receivers for the Android system announcements Integrated camera for capturing images of the card and other documents Integrated ZXing Library to scan the barcode and display barcode image Designed the Custom Dialog using the Fragment Activity Designed the Custom Action bar Custom Progress bar while making service calls Spearheaded creation of four new informationsecurity departments Risk assessment vulnerability penetration testing and security engineering services Enabled digital content using digital rights management Designed networking for the application using Android library layer and Android framework layer Implemented capturing the screenshot of the payment screen Bitmap to PDF conversion features using Android NDK Making the Restful Service Calls at the various stages of the app development cycle and parsing the JSON responses back from the web servers according to the application requirement Implemented feature for sharing offer using Mail Facebook Twitter push notifications and other social networking sites Created a local database using SQLite to store and retrieve the data Implemented GIT for code management and JIRA for bug tracking and project management Developed detailed test plan and test summary documents that outlined the tests to be performed for the given requirements and the results of these tests Worked with Application Activity Lifecycle callbacks for providing the security and showing the login screen when the app goes to background Worked on using RxJava framework with MVP architecture in the application Ported the existing network stack of the app to Retrofit GSON and   Implemented UI using Cordova Assisted in creating an analysis and reports Summarized in client discovery sessions Updated the app with new features like push notifications Responsible for adding the update module for checking the latest version of the app Used third party libraries like Retrofit for providing powerful framework for authenticating and interacting with APIs and sending network requests Butter Knife used to inject views Extensively worked on designing the layouts to compatible with screens with different resolutions Responsible for making the application compatible with the Latest Android Version Lollipop 50 Used ADB logcat and DDMS tools for testing and debugging purposes Used Espresso and Junit tools for testing Espresso can run commands at the appropriate time to improve reliability of tests Responsible for testing the application in the stage code review fixing the bugs and providing postproduction support Environment Android Android Studio IDE Windows Java Kotlin JDK Dagger GPS Google Maps API V2 REST CORDOVA NDK JUnit Jira Logcat DDMS Retrofit Butter Knife XML Espresso APN JSON SQLite GIT RxJava Sr Android Developer Aetna Insurance Hartford CT May 2016 to August 2018 Description Aetna Inc is an American managed health care company which sells traditional and consumer directed health care Insurance plans and related services such as medical pharmaceutical dental behavioral health longterm care and disability plans The Android application we developed is used to look up the status of claim and to see users their virtual card on the phone The application uses GPS function to help users no matter where they are Responsibilities Involved in requirement gathering UI design and development Written application logic using Android Studio and followed TDD approach in developing the application Handling JSON data using efficient parsing techniques such as GSON and Parcebale Constructing http requests fetching server response and parsing feeds wherever required Involved in development and enhancements of features to restrict the usage based on Authorization and Authentication tokens Used Jenkins for continuous integration and worked on Android Frameworks such as Notifications and Location in developing the application Used sliding side menu library for easy navigation through the app and Used AOSP for development of application with middle ware Used React Native in creating cross platform application which stores the data and can be reused in the application and worked as Triage Engineer on ADB and debugging bug reports Responsible for design of user interface using custom layouts and different form of widgets Used web views list views populated lists to display the lists from database using simple adapters Used services Async tasks and Alert Notification API to implement parking status reminder into the mobile app Used Google Firebase for creating customized notifications Used Android content providers for implementing features like sharing using Facebook Email Twitter SMS etc from the app and designed suitable GUI for these applications Worked extensively on local data storage using Shared Preferences SQLite databases and File system Used Parceler for passing Parcelable objects between various components of the app Embedded Google Maps API GPS Location Data into app with zooming controls for finding out the store and navigation details to the store Integrating RESTful API services with Basic Authentication process and worked with unit testing and automation testing with the help of Mockito Robotium Espresso and Robolectric frameworks Involved in working with Location Manager and Restful Web service with JSON and also used Dagger for dependency injection and worked on Linux kernel which helps the applications to communicate with the hardware Integrated crashlytics based app distribution Integrated Push Notifications GCM to notify user about new instock apparels and worked on CTS test cases to ensure that the applications support the google standards Used ProGuard for code shrinking optimizing and obfuscating the remaining classes fields and methods with short names This helped in preventing the APK from reverse engineering Worked on memory leaks using DDMS and Leak Canary Used GIT for version control and followed Agile with JIRA for implementing this project Environment Android SDK SQLite Core Java Android studio IDE Android APIs ADT plugin Location Manager JDK JNI XML JSON GSON REST services GPS service Bitbucket Log cat Junit Mockito Espresso Dagger Android Developer Kaiser Permanente Pasadena CA October 2013 to April 2016 Description Kaiser Permanente is one of the nations largest notforprofit health care company The Android application we developed allows the mobile users to manage their health care The application let the users access menus that let them get advice schedule appointments and refill prescriptions The navigation feature of the application puts the features and information you need within reach at all times Responsibilities Implemented offline functionality for a shopping list to display the message If the user is offline and has nt been shown the message that day display the message Fixed the bugs identified by the QA testing team Worked in an Agile based environment and finished all the tasks assigned in each sprint Tracked issues using JIRA Contribution in code refactoring code optimization Refactoring application using dagger Discussed and provided suggestions on usability suitability and improvements in interface design Worked on the backend database and integrated with JDBC to retrieve Data Access Objects Involved in writing SQL queries PL SQLStored Procedures functions cursors triggers indexes sequences etc Involved in fixing QA defects and tracked them using QC Implementing the dashboard action bar video players quick action UI design pattern using Android interface definition language and AMF Implemented Web views component to load HTML5 based flashcard pages Facilitating local data storage using SQLite for user preferences and progress Involved in developer testing by porting the app to multiple devices with various screen sizes Worked with an offshore team and took part in meeting every day to keep track of different tasks or to add a new task for a story Used GitHub as project version controller Tracked the bugs using HockeyApp crash reports Established and executed test procedures analyzed test results logged defects analyzed defect data recommended process improvements Implemented Custom and Compound View to match the UIUX specifications Integrated activity and fragmentbased navigation to adapt to portrait and landscape orientations to better use the screen real state adapting to phones and tablets Added animated transitions when calling other activities to improve the user experience Responsible for code optimization and testing of the website across different browsers The implemented interaction between frontend and backend using the JSON object Validated input values to make sure that they will be accepted before they are submitted to the server Wrote extensive HTML CSS and JavaScript code to build dynamic pages using Eclipse Involved in the development of Dynamic loading of web pages using Ajax calls with server pages Environment Android Java J2EE JSP Servlets BSP JDBC 30 HTML GCM XML Cordova SVN AngularJS AWS EXT JS Java Script Eclipse APN OracleDB rex Windows Sr JavaJ2EE and Full Stack Developer Dish Denver CO August 2011 to October 2013 Description Dish Network stylized as dish is an American directbroadcast satellite service provider The company provides satellite television satellite internet access audio programming and interactive television services to commercial and residential customers in the United States Responsibility Involved in Design and Development of project modules gather requirements analyze and implemented business logic using Agile Scrum Software Development methodology Designed class sequence activity flow diagrams using UML Visio and Sparx Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed several reusable directives using Angular 2 Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Developed Interactive web pages with Angular 2 HTML5 CSS3 Javascript JQuery and Bootstrap Usage of new features of Java8 like lambdaexpressions for communicating between business layer and database stream API for Bulk Data Operations on Collections using both streams and parallel streams Used J2EE design patterns like Model View ControllerMVC Singleton Factory Data Access Object DAO Data Transfer Object DTO and Service Locator Involved in writing Thread safe blocks for Multithreading access and improve performance Usedcore Spring concepts like DIIOC AOP Batch implementation Implemented fail safe and circuit breaker patterns in Spring BootMicroservice applications using Hystrix configured SwaggerUI to registered Microservice with Eureka server and monitored service health check from Spring Boot admin console and Spring Ribbon for load balancing Developed UI applications using Angular2 integrating with REST APIs built on Spring ZuulMicroservices Working on Microservice Registration with Spring Cloud using Netflix Eureka Implementing Spring Cloud REST call using Netflix Feign Client Implementing or exposing the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Implemented preauthentication and data base security using Spring Security and securing application access and Spring Batch for scheduling and maintenance of batch jobs Developed Python Object Oriented Design code for logging and debugging code optimization Worked on Camelbased integration middleware solution for Provisioning Services by design and the Implementation of business logic and data processing routes using Apache Camel Created tables and worked on SQL and PLSQL to write Stored Procedures functions and packages for complex inserts and updates in the DB used TOAD to interact with Oracle database Used Oracle 11g12c for the backend data and performed complex queries using joins for CRUD operations Experience in Normalization performance tuning uploading files to database using CLOB and BLOB Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Implemented Spring ORM with Hibernate taking advantage of features like Annotation metadata AutoWiring and Collectionsto implement DAO layer with Hibernate Session Factory HQL and SQL Extensively used Hibernate concepts such asLazy loading Dirty checking Locking and Transactions Composed and executed MongoDB scripts to insert and update NoSQL database and reporting Configuring Cassandra clusters and key spaces on RHELOpenstack Installed and setup Apache Spark Used the Java API to load the data into Cassandra Clusters Installed and configured plugins for Apache HTTP server and Sun One Web server to proxy the request for WebLogic server Implemented standard backup procedures for Weblogic server Deployed Docker contained Spring Boot Microservices in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Experience with building Docker Images and running them on Docker container Used Jenkins as an AWS code deploys plugin to deploy to AWS Experience with DevOps methodologies implementing CICD Pipelines using tool sets like GIT Jenkins Chef and AWS Generating Scala and Java classes from the APIs so that they can be incorporated in the application Used Sparkstreaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Responsible for implementation of java integration components for JBPM and DROOLs Configured Protractor test classes and Selenium grid end to end testing on the front end Involved in code reviews and unit testing using JUnit framework and Log4j to provide logs of exceptions Worked with several testing frameworks such as JUnit EasyMock Mockito and PowerMock Created Test automation framework using Cucumber and Selenium web driver Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug tracking project management andMaven as build tool Environment Java8 J2EE CICD Spring Webservices Microservices Swagger Spring Zuul Netflix Eureka Restful Feign Client Apache Camel Kafka WebLogic JUnit JBPM Drools Spring Cloud AWS EC2 S3 Scala MongoDB Cassandra HTML5 CSS3 Python JavaScriptES6 Bootstrap jQuery Angular 2 Maven AJAX JQuery XML XSLT Java Beans UML Design Patterns Log4j Agile Methodology Devops Docker Spark Kubernetes Sr JavaJ2EE Developer ACI WorldWide Clearwater FL June 2009 to August 2011 Description Enterprise Banker the industryleading webbased cash management system With Enterprise Banker customers use a web browser to access cash management Functions Financial institution administrators use Enterprise Bankers webbased administrative interface to set system defaults perform customer setup and monitor customer activities with a web browser from any location that has access to the financial institutions network When fully utilized Enterprise Banker includes 18 products over 90 modules over 250 Enterprise Banker Suite is designed to allow financial institutions to purchase and implement specific limited increments of functionality Responsibility Experienced with Software Development Life CycleSDLC with object oriented of business process and worked on developing Service oriented architecture applications in agile development environment Developed and implemented Business Requirements using Spring MVC framework Implemented crosscutting concerns such as logging authentication and system performance using Spring AOP Developed reusable and interoperableservices based on SOAP WSDL JAXWS JAXRPC Web services Well versed with core Java concepts like Collections Swing Serialization and ServletsJSP Implemented web services in Service Oriented Architecture SOA to retrieve data from client side NodeJS and parsed the data to client and handled the security and Authorization using Spring Security and OAuth authentication protocol respectively Used Jackson Custom Mappers for Custom manipulation for date currency conversations on JSON Data Used Jackson parser for Marshaling and UnMarshaling Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Hibernate Detached Criteria HQL and written some SQL queries for data retrieving Handson writing Stored Procedures functions triggers DDL DML SQLqueries and PLSQL Worked on JPA as persistence layer involving EJB annotations to synchronize with database through XML JBoss Application server implementation support workload management and performance tuning including Web server setup configuration with JBoss App Server Developed UI usingAngularJS HTML5CSS3 jQuery BootstrapJavaScript Ajax Developed PLSQL store procedures to convert the data from Oracle to MongoDB Developed Test classes using JUnit and Easy Mock and test coverage using EMMA plugin Analyze and resolve conflicts related to merging of source code for GIT and Maven as build tool Environment Java J2EE Java Beans JMS NodeJS Spring JQuery EJB Hibernate IntelliJ Angular Oracle 11 g MongoDB PLSQL Cucumber Log4j XML HTML5 CSS3 JavaScript Bootstrap SOAP Maven GIT JavaJ2EE Developer Penn National Insurance Harrisburg PA April 2007 to June 2009 Description Penn National Insurance is a propertycasualty mutual insurance company headquartered in Harrisburg Pennsylvania Founded in 1919 by a farmers trade organization to help the farmers get more affordable workers compensation protection for their workers who operated steamdriven farming equipment Responsibility Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Extensively used MVC Factory Delegate and Singleton design patterns Enhanced the Web Application using Struts Created business logic and application in Struts Framework using JSP and Servlets Wrote Client side validation using Struts Validate framework and JavaScript Wrote unit test cases for different modules and resolved the test findings Used SOAP for Web Services by exchanging XML data between applications over HTTP Wrote JSPs Servlets and deployed them on WebLogic Application server Wrote queries in MySQL to interact with the database Used Subversion for version control and log4j for logging errors Helped production support team to solve trouble reports Wrote Ant Scripts to automate the build and deploy process Involved in Release Management and Deployment Process Environment Java J2EE Struts JSP Servlets JavaScript SOAP WebLogic Log4j AMT CVS PLSQL MySQL Education Bachelors Skills Visual studio Android studio C C Design patterns",
    "extracted_keywords": [
        "Senior",
        "Android",
        "Developer",
        "Senior",
        "Android",
        "span",
        "lDeveloperspan",
        "Senior",
        "Android",
        "Developer",
        "Bank",
        "America",
        "Newark",
        "NJ",
        "years",
        "experience",
        "Software",
        "Developer",
        "years",
        "Designing",
        "Development",
        "Android",
        "Applications",
        "Smart",
        "Phone",
        "Tablet",
        "Java",
        "Android",
        "SDK",
        "Eclipse",
        "IDE",
        "Android",
        "Studio",
        "SQL",
        "SQLite",
        "Java",
        "XML",
        "JSON",
        "Experience",
        "phase",
        "software",
        "development",
        "life",
        "cycle",
        "requirements",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "maintenance",
        "Software",
        "Applications",
        "Strong",
        "Knowledge",
        "Waterfall",
        "AgileScrum",
        "TDD",
        "BDD",
        "software",
        "development",
        "models",
        "understanding",
        "Android",
        "OS",
        "application",
        "development",
        "memory",
        "management",
        "Linux",
        "kernel",
        "level",
        "stage",
        "application",
        "development",
        "requirements",
        "guidelines",
        "design",
        "application",
        "architecture",
        "implementation",
        "stages",
        "development",
        "QA",
        "code",
        "signing",
        "Market",
        "Proficient",
        "Working",
        "Android",
        "frameworks",
        "Bluetooth",
        "Location",
        "Camera",
        "Notifications",
        "Maps",
        "Good",
        "Exposure",
        "ASYNC",
        "Task",
        "Threads",
        "Services",
        "Android",
        "Experience",
        "MVC",
        "Model",
        "View",
        "Controller",
        "MVP",
        "Model",
        "view",
        "Presenter",
        "MVVM",
        "Model",
        "View",
        "View",
        "Model",
        "design",
        "patterns",
        "Experience",
        "user",
        "interfaces",
        "features",
        "Android",
        "source",
        "AOSP",
        "package",
        "tools",
        "Experience",
        "products",
        "software",
        "engineering",
        "understanding",
        "Android",
        "Backend",
        "UI",
        "guidelines",
        "Handson",
        "experience",
        "memory",
        "leaks",
        "notifications",
        "screen",
        "support",
        "data",
        "usage",
        "audio",
        "video",
        "design",
        "animation",
        "Indepth",
        "Knowledge",
        "Android",
        "components",
        "Activity",
        "Fragment",
        "Service",
        "Broadcast",
        "Receiver",
        "Content",
        "Provider",
        "Expertize",
        "Android",
        "UI",
        "toolkit",
        "basicpickerlist",
        "views",
        "adapters",
        "menus",
        "Layout",
        "Managers",
        "Knowledge",
        "Firebase",
        "Android",
        "Realtime",
        "Database",
        "Analytics",
        "Cloud",
        "Storage",
        "Remote",
        "Config",
        "Experience",
        "Kotlin",
        "Programming",
        "Language",
        "Proficient",
        "Google",
        "Map",
        "Views",
        "Camera",
        "Toast",
        "Camera",
        "party",
        "Dialogs",
        "Notifications",
        "Custom",
        "Buttons",
        "Binders",
        "experience",
        "knowledge",
        "web",
        "services",
        "SOAP",
        "data",
        "response",
        "UI",
        "GSON",
        "Experience",
        "Java",
        "Native",
        "Interface",
        "JNI",
        "Knowledge",
        "Crashlytics",
        "Fabrics",
        "crash",
        "reporting",
        "experience",
        "Android",
        "performance",
        "profilers",
        "application",
        "performance",
        "Undertook",
        "life",
        "cycle",
        "Android",
        "Application",
        "Development",
        "testing",
        "device",
        "simulator",
        "JUnit",
        "test",
        "cases",
        "Mockito",
        "Espresso",
        "Robotium",
        "Android",
        "applications",
        "Experience",
        "web",
        "service",
        "protocols",
        "architecture",
        "JSON",
        "SOAP",
        "REST",
        "HTTP",
        "XML",
        "Several",
        "Android",
        "Applications",
        "Google",
        "Maps",
        "API",
        "Geocoder",
        "API",
        "version",
        "control",
        "systems",
        "BitBucket",
        "SVN",
        "GIT",
        "Experience",
        "applications",
        "thirdparty",
        "libraries",
        "Retrofit",
        "Volley",
        "Picasso",
        "Active",
        "Android",
        "Butter",
        "Knife",
        "Event",
        "Bus",
        "Lotties",
        "Hands",
        "experience",
        "crossplatform",
        "applications",
        "Cordova",
        "HTML",
        "CSS",
        "JavaScript",
        "Excellent",
        "knowledge",
        "practice",
        "crossplatform",
        "applications",
        "Xamarin",
        "Visual",
        "Studio",
        "C",
        "Ionic",
        "React",
        "Native",
        "JavaScript",
        "Libraries",
        "Proficient",
        "Internet",
        "Application",
        "Programming",
        "technologies",
        "Core",
        "Java",
        "Struts",
        "Spring",
        "Web",
        "Services",
        "SOAP",
        "Hibernate",
        "EJB",
        "JSP",
        "Servlets",
        "JDBC",
        "RMI",
        "JNDI",
        "Good",
        "Exposure",
        "HTTP",
        "GET",
        "POST",
        "Requests",
        "types",
        "responses",
        "Hands",
        "Experience",
        "GUI",
        "Java",
        "Applet",
        "Servlets",
        "JSP",
        "AJAX",
        "JavaScript",
        "HTML",
        "CSS3",
        "Understanding",
        "Core",
        "Java",
        "concepts",
        "Collections",
        "MultiThreading",
        "SocketProgramming",
        "Exception",
        "knowledge",
        "Web",
        "Application",
        "servers",
        "Apache",
        "Tomcat",
        "JBOSS",
        "WebSphere",
        "Experience",
        "application",
        "languages",
        "Knowledge",
        "UNIX",
        "LINUX",
        "XML",
        "XSLT",
        "XML",
        "Schema",
        "Applications",
        "databases",
        "Oracle",
        "SQLite",
        "MySQL",
        "Excellent",
        "communication",
        "skills",
        "skills",
        "technologies",
        "US",
        "employer",
        "Work",
        "Experience",
        "Senior",
        "Android",
        "Developer",
        "Bank",
        "America",
        "Richardson",
        "TX",
        "August",
        "Present",
        "Description",
        "Bank",
        "America",
        "banking",
        "services",
        "United",
        "States",
        "banking",
        "app",
        "Android",
        "Devices",
        "Bank",
        "application",
        "users",
        "Bank",
        "America",
        "accounts",
        "Bank",
        "America",
        "creditdebit",
        "cards",
        "options",
        "account",
        "balance",
        "transactions",
        "credit",
        "deposit",
        "payment",
        "date",
        "Responsibilities",
        "application",
        "Android",
        "development",
        "validation",
        "deployment",
        "production",
        "maintenance",
        "Mobile",
        "Agent",
        "application",
        "Android",
        "Studio",
        "Android",
        "SDK",
        "package",
        "designers",
        "basis",
        "Android",
        "user",
        "experience",
        "Refactoring",
        "application",
        "MVP",
        "Design",
        "Pattern",
        "Dagger",
        "Dependency",
        "Injection",
        "instances",
        "application",
        "code",
        "Kotlin",
        "Kotlin",
        "programming",
        "Android",
        "studio",
        "lint",
        "checker",
        "refactoring",
        "debugging",
        "User",
        "Interface",
        "requirements",
        "UI",
        "Groups",
        "UI",
        "components",
        "Google",
        "Maps",
        "Android",
        "API",
        "V2",
        "bank",
        "locations",
        "user",
        "geolocation",
        "User",
        "interfaces",
        "widgets",
        "Menus",
        "Dialogs",
        "Buttons",
        "Edit",
        "Boxes",
        "selection",
        "widgets",
        "view",
        "scroll",
        "client",
        "Registered",
        "Broadcast",
        "Receivers",
        "Android",
        "system",
        "camera",
        "images",
        "card",
        "documents",
        "Integrated",
        "ZXing",
        "Library",
        "barcode",
        "barcode",
        "image",
        "Custom",
        "Dialog",
        "Fragment",
        "Activity",
        "Custom",
        "Action",
        "bar",
        "Custom",
        "Progress",
        "bar",
        "service",
        "calls",
        "creation",
        "informationsecurity",
        "Risk",
        "assessment",
        "vulnerability",
        "penetration",
        "testing",
        "security",
        "engineering",
        "services",
        "content",
        "rights",
        "management",
        "networking",
        "application",
        "Android",
        "library",
        "layer",
        "framework",
        "layer",
        "screenshot",
        "payment",
        "screen",
        "Bitmap",
        "PDF",
        "conversion",
        "features",
        "Android",
        "NDK",
        "Restful",
        "Service",
        "stages",
        "app",
        "development",
        "cycle",
        "JSON",
        "responses",
        "web",
        "servers",
        "application",
        "requirement",
        "feature",
        "sharing",
        "offer",
        "Mail",
        "Facebook",
        "Twitter",
        "notifications",
        "networking",
        "sites",
        "database",
        "SQLite",
        "data",
        "GIT",
        "code",
        "management",
        "JIRA",
        "bug",
        "tracking",
        "project",
        "management",
        "test",
        "plan",
        "test",
        "summary",
        "documents",
        "tests",
        "requirements",
        "results",
        "tests",
        "Application",
        "Activity",
        "Lifecycle",
        "callbacks",
        "security",
        "login",
        "screen",
        "app",
        "background",
        "RxJava",
        "framework",
        "MVP",
        "architecture",
        "application",
        "network",
        "stack",
        "app",
        "Retrofit",
        "GSON",
        "UI",
        "Cordova",
        "Assisted",
        "analysis",
        "reports",
        "client",
        "discovery",
        "sessions",
        "app",
        "features",
        "push",
        "notifications",
        "update",
        "module",
        "version",
        "app",
        "party",
        "libraries",
        "Retrofit",
        "framework",
        "authenticating",
        "APIs",
        "network",
        "requests",
        "Butter",
        "Knife",
        "views",
        "layouts",
        "screens",
        "resolutions",
        "application",
        "Latest",
        "Android",
        "Version",
        "Lollipop",
        "ADB",
        "logcat",
        "DDMS",
        "tools",
        "testing",
        "purposes",
        "Espresso",
        "Junit",
        "tools",
        "Espresso",
        "commands",
        "time",
        "reliability",
        "tests",
        "application",
        "stage",
        "code",
        "review",
        "bugs",
        "postproduction",
        "support",
        "Environment",
        "Android",
        "Android",
        "Studio",
        "IDE",
        "Windows",
        "Java",
        "Kotlin",
        "JDK",
        "Dagger",
        "Google",
        "Maps",
        "API",
        "V2",
        "REST",
        "CORDOVA",
        "NDK",
        "JUnit",
        "Jira",
        "Logcat",
        "DDMS",
        "Retrofit",
        "Butter",
        "Knife",
        "XML",
        "Espresso",
        "APN",
        "JSON",
        "SQLite",
        "GIT",
        "RxJava",
        "Sr",
        "Android",
        "Developer",
        "Aetna",
        "Insurance",
        "Hartford",
        "CT",
        "May",
        "August",
        "Description",
        "Aetna",
        "Inc",
        "American",
        "health",
        "care",
        "company",
        "consumer",
        "health",
        "care",
        "Insurance",
        "plans",
        "services",
        "health",
        "longterm",
        "care",
        "disability",
        "Android",
        "application",
        "status",
        "claim",
        "users",
        "card",
        "phone",
        "application",
        "function",
        "users",
        "Responsibilities",
        "requirement",
        "UI",
        "design",
        "development",
        "Written",
        "application",
        "logic",
        "Android",
        "Studio",
        "TDD",
        "approach",
        "application",
        "data",
        "techniques",
        "GSON",
        "Parcebale",
        "Constructing",
        "http",
        "requests",
        "server",
        "response",
        "feeds",
        "development",
        "enhancements",
        "features",
        "usage",
        "Authorization",
        "Authentication",
        "tokens",
        "Jenkins",
        "integration",
        "Android",
        "Frameworks",
        "Notifications",
        "Location",
        "application",
        "side",
        "menu",
        "library",
        "navigation",
        "app",
        "AOSP",
        "development",
        "application",
        "ware",
        "React",
        "Native",
        "cross",
        "platform",
        "application",
        "data",
        "application",
        "Triage",
        "Engineer",
        "ADB",
        "bug",
        "reports",
        "design",
        "user",
        "interface",
        "custom",
        "layouts",
        "form",
        "widgets",
        "web",
        "views",
        "list",
        "views",
        "lists",
        "lists",
        "database",
        "adapters",
        "services",
        "Async",
        "tasks",
        "Alert",
        "Notification",
        "API",
        "parking",
        "status",
        "reminder",
        "app",
        "Google",
        "Firebase",
        "notifications",
        "Android",
        "content",
        "providers",
        "features",
        "Facebook",
        "Email",
        "Twitter",
        "SMS",
        "app",
        "GUI",
        "applications",
        "data",
        "storage",
        "Shared",
        "Preferences",
        "SQLite",
        "databases",
        "File",
        "system",
        "Parceler",
        "objects",
        "components",
        "app",
        "Embedded",
        "Google",
        "Maps",
        "API",
        "GPS",
        "Location",
        "Data",
        "app",
        "zooming",
        "controls",
        "store",
        "navigation",
        "details",
        "store",
        "API",
        "services",
        "Basic",
        "Authentication",
        "process",
        "unit",
        "testing",
        "automation",
        "testing",
        "help",
        "Mockito",
        "Robotium",
        "Espresso",
        "frameworks",
        "Location",
        "Manager",
        "Restful",
        "Web",
        "service",
        "JSON",
        "Dagger",
        "dependency",
        "injection",
        "Linux",
        "kernel",
        "applications",
        "hardware",
        "Integrated",
        "crashlytics",
        "app",
        "distribution",
        "Integrated",
        "Push",
        "Notifications",
        "GCM",
        "user",
        "apparels",
        "CTS",
        "test",
        "cases",
        "applications",
        "google",
        "standards",
        "ProGuard",
        "code",
        "classes",
        "fields",
        "methods",
        "names",
        "APK",
        "engineering",
        "memory",
        "leaks",
        "DDMS",
        "Leak",
        "Canary",
        "GIT",
        "version",
        "control",
        "Agile",
        "JIRA",
        "project",
        "Environment",
        "Android",
        "SDK",
        "SQLite",
        "Core",
        "Java",
        "Android",
        "studio",
        "IDE",
        "Android",
        "APIs",
        "ADT",
        "Location",
        "Manager",
        "JDK",
        "JNI",
        "XML",
        "GSON",
        "REST",
        "services",
        "service",
        "Bitbucket",
        "Log",
        "cat",
        "Junit",
        "Mockito",
        "Espresso",
        "Dagger",
        "Android",
        "Developer",
        "Kaiser",
        "Permanente",
        "Pasadena",
        "CA",
        "October",
        "April",
        "Description",
        "Kaiser",
        "Permanente",
        "nations",
        "notforprofit",
        "health",
        "care",
        "company",
        "Android",
        "application",
        "users",
        "health",
        "care",
        "application",
        "users",
        "menus",
        "advice",
        "schedule",
        "appointments",
        "refill",
        "prescriptions",
        "navigation",
        "feature",
        "application",
        "features",
        "information",
        "reach",
        "times",
        "Responsibilities",
        "functionality",
        "shopping",
        "list",
        "message",
        "user",
        "message",
        "day",
        "message",
        "bugs",
        "QA",
        "testing",
        "team",
        "Agile",
        "environment",
        "tasks",
        "sprint",
        "issues",
        "JIRA",
        "Contribution",
        "code",
        "refactoring",
        "code",
        "optimization",
        "Refactoring",
        "application",
        "dagger",
        "suggestions",
        "usability",
        "suitability",
        "improvements",
        "interface",
        "design",
        "database",
        "JDBC",
        "Data",
        "Access",
        "Objects",
        "SQL",
        "PL",
        "SQLStored",
        "Procedures",
        "functions",
        "cursors",
        "indexes",
        "sequences",
        "QA",
        "defects",
        "QC",
        "dashboard",
        "action",
        "bar",
        "video",
        "players",
        "action",
        "UI",
        "design",
        "pattern",
        "Android",
        "interface",
        "definition",
        "language",
        "AMF",
        "Web",
        "views",
        "component",
        "HTML5",
        "flashcard",
        "pages",
        "data",
        "storage",
        "SQLite",
        "user",
        "preferences",
        "progress",
        "developer",
        "testing",
        "app",
        "devices",
        "screen",
        "sizes",
        "team",
        "part",
        "meeting",
        "day",
        "track",
        "tasks",
        "task",
        "story",
        "GitHub",
        "project",
        "version",
        "controller",
        "bugs",
        "HockeyApp",
        "crash",
        "reports",
        "test",
        "procedures",
        "test",
        "results",
        "defects",
        "defect",
        "data",
        "process",
        "improvements",
        "Custom",
        "Compound",
        "View",
        "UIUX",
        "activity",
        "navigation",
        "landscape",
        "orientations",
        "screen",
        "state",
        "phones",
        "tablets",
        "transitions",
        "activities",
        "user",
        "experience",
        "code",
        "optimization",
        "testing",
        "website",
        "browsers",
        "interaction",
        "frontend",
        "backend",
        "object",
        "input",
        "values",
        "server",
        "Wrote",
        "HTML",
        "CSS",
        "JavaScript",
        "code",
        "pages",
        "Eclipse",
        "development",
        "loading",
        "web",
        "pages",
        "calls",
        "server",
        "pages",
        "Environment",
        "Android",
        "Java",
        "J2EE",
        "JSP",
        "Servlets",
        "BSP",
        "JDBC",
        "HTML",
        "GCM",
        "XML",
        "Cordova",
        "SVN",
        "AWS",
        "EXT",
        "JS",
        "Java",
        "Script",
        "Eclipse",
        "APN",
        "OracleDB",
        "Windows",
        "Sr",
        "JavaJ2EE",
        "Full",
        "Stack",
        "Developer",
        "Dish",
        "Denver",
        "CO",
        "August",
        "October",
        "Description",
        "Dish",
        "Network",
        "dish",
        "satellite",
        "service",
        "provider",
        "company",
        "satellite",
        "television",
        "satellite",
        "internet",
        "access",
        "audio",
        "programming",
        "television",
        "services",
        "customers",
        "United",
        "States",
        "Responsibility",
        "Design",
        "Development",
        "project",
        "modules",
        "requirements",
        "business",
        "logic",
        "Agile",
        "Scrum",
        "Software",
        "Development",
        "methodology",
        "class",
        "sequence",
        "activity",
        "flow",
        "diagrams",
        "UML",
        "Visio",
        "Sparx",
        "custom",
        "singlepage",
        "Web",
        "Application",
        "end",
        "Angular",
        "directives",
        "Angular",
        "controllers",
        "services",
        "Angular",
        "components",
        "dependency",
        "Developed",
        "Interactive",
        "web",
        "pages",
        "Angular",
        "HTML5",
        "CSS3",
        "Javascript",
        "JQuery",
        "Bootstrap",
        "Usage",
        "features",
        "Java8",
        "lambdaexpressions",
        "business",
        "layer",
        "database",
        "stream",
        "API",
        "Bulk",
        "Data",
        "Operations",
        "Collections",
        "streams",
        "streams",
        "J2EE",
        "design",
        "patterns",
        "Model",
        "View",
        "ControllerMVC",
        "Singleton",
        "Factory",
        "Data",
        "Access",
        "Object",
        "DAO",
        "Data",
        "Transfer",
        "Object",
        "DTO",
        "Service",
        "Locator",
        "Thread",
        "blocks",
        "Multithreading",
        "access",
        "performance",
        "Usedcore",
        "Spring",
        "concepts",
        "DIIOC",
        "AOP",
        "Batch",
        "implementation",
        "circuit",
        "breaker",
        "patterns",
        "Spring",
        "BootMicroservice",
        "applications",
        "Hystrix",
        "SwaggerUI",
        "Microservice",
        "Eureka",
        "server",
        "service",
        "health",
        "check",
        "Spring",
        "Boot",
        "admin",
        "console",
        "Spring",
        "Ribbon",
        "load",
        "UI",
        "applications",
        "Angular2",
        "REST",
        "APIs",
        "Spring",
        "ZuulMicroservices",
        "Microservice",
        "Registration",
        "Spring",
        "Cloud",
        "Netflix",
        "Eureka",
        "Implementing",
        "Spring",
        "Cloud",
        "REST",
        "call",
        "Netflix",
        "Feign",
        "Client",
        "Implementing",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "preauthentication",
        "data",
        "base",
        "security",
        "Spring",
        "Security",
        "application",
        "access",
        "Spring",
        "Batch",
        "scheduling",
        "maintenance",
        "batch",
        "jobs",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "code",
        "code",
        "optimization",
        "integration",
        "middleware",
        "solution",
        "Provisioning",
        "Services",
        "design",
        "Implementation",
        "business",
        "logic",
        "data",
        "processing",
        "routes",
        "Apache",
        "Camel",
        "Created",
        "tables",
        "SQL",
        "PLSQL",
        "Stored",
        "Procedures",
        "functions",
        "packages",
        "inserts",
        "updates",
        "DB",
        "TOAD",
        "Oracle",
        "database",
        "Oracle",
        "11g12c",
        "data",
        "queries",
        "joins",
        "CRUD",
        "operations",
        "Experience",
        "Normalization",
        "performance",
        "files",
        "CLOB",
        "BLOB",
        "Splunk",
        "DB",
        "APP",
        "data",
        "Splunk",
        "Oracle",
        "Database",
        "Spring",
        "ORM",
        "Hibernate",
        "advantage",
        "features",
        "Annotation",
        "metadata",
        "AutoWiring",
        "Collectionsto",
        "implement",
        "DAO",
        "layer",
        "Hibernate",
        "Session",
        "Factory",
        "HQL",
        "SQL",
        "Hibernate",
        "concepts",
        "Transactions",
        "MongoDB",
        "scripts",
        "NoSQL",
        "database",
        "Configuring",
        "Cassandra",
        "clusters",
        "spaces",
        "RHELOpenstack",
        "Installed",
        "Apache",
        "Spark",
        "Java",
        "API",
        "data",
        "Cassandra",
        "Clusters",
        "Installed",
        "plugins",
        "Apache",
        "HTTP",
        "server",
        "Sun",
        "Web",
        "server",
        "request",
        "WebLogic",
        "server",
        "procedures",
        "server",
        "Deployed",
        "Docker",
        "Spring",
        "Boot",
        "Microservices",
        "AWS",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "AWS",
        "console",
        "Experience",
        "Docker",
        "Images",
        "Docker",
        "container",
        "Jenkins",
        "AWS",
        "code",
        "deploys",
        "AWS",
        "Experience",
        "DevOps",
        "methodologies",
        "CICD",
        "Pipelines",
        "tool",
        "sets",
        "GIT",
        "Jenkins",
        "Chef",
        "AWS",
        "Generating",
        "Scala",
        "Java",
        "classes",
        "APIs",
        "application",
        "Scala",
        "data",
        "Kafka",
        "cluster",
        "arbitrations",
        "implementation",
        "integration",
        "components",
        "JBPM",
        "DROOLs",
        "Configured",
        "Protractor",
        "test",
        "classes",
        "Selenium",
        "grid",
        "testing",
        "end",
        "code",
        "reviews",
        "unit",
        "testing",
        "JUnit",
        "framework",
        "Log4j",
        "logs",
        "exceptions",
        "testing",
        "frameworks",
        "JUnit",
        "EasyMock",
        "Mockito",
        "PowerMock",
        "Created",
        "Test",
        "automation",
        "framework",
        "Cucumber",
        "Selenium",
        "web",
        "driver",
        "Drools",
        "engine",
        "business",
        "rules",
        "runtime",
        "Git",
        "version",
        "control",
        "JIRA",
        "bug",
        "project",
        "management",
        "andMaven",
        "build",
        "tool",
        "Environment",
        "Java8",
        "J2EE",
        "CICD",
        "Spring",
        "Webservices",
        "Microservices",
        "Swagger",
        "Spring",
        "Zuul",
        "Netflix",
        "Eureka",
        "Restful",
        "Feign",
        "Client",
        "Apache",
        "Camel",
        "Kafka",
        "WebLogic",
        "JUnit",
        "JBPM",
        "Drools",
        "Spring",
        "Cloud",
        "EC2",
        "S3",
        "Scala",
        "MongoDB",
        "Cassandra",
        "HTML5",
        "CSS3",
        "Python",
        "JavaScriptES6",
        "Bootstrap",
        "jQuery",
        "Angular",
        "Maven",
        "AJAX",
        "JQuery",
        "XML",
        "XSLT",
        "Java",
        "Beans",
        "UML",
        "Design",
        "Patterns",
        "Log4j",
        "Agile",
        "Methodology",
        "Devops",
        "Docker",
        "Spark",
        "Kubernetes",
        "Sr",
        "JavaJ2EE",
        "Developer",
        "ACI",
        "WorldWide",
        "Clearwater",
        "FL",
        "June",
        "August",
        "Description",
        "Enterprise",
        "Banker",
        "cash",
        "management",
        "system",
        "Enterprise",
        "Banker",
        "customers",
        "web",
        "browser",
        "cash",
        "management",
        "Functions",
        "Financial",
        "institution",
        "administrators",
        "Enterprise",
        "Bankers",
        "interface",
        "system",
        "defaults",
        "customer",
        "setup",
        "customer",
        "activities",
        "web",
        "browser",
        "location",
        "access",
        "institutions",
        "network",
        "Enterprise",
        "Banker",
        "products",
        "modules",
        "Enterprise",
        "Banker",
        "Suite",
        "institutions",
        "increments",
        "functionality",
        "Responsibility",
        "Software",
        "Development",
        "Life",
        "CycleSDLC",
        "object",
        "business",
        "process",
        "Service",
        "architecture",
        "applications",
        "development",
        "environment",
        "Business",
        "Requirements",
        "Spring",
        "MVC",
        "framework",
        "concerns",
        "authentication",
        "system",
        "performance",
        "Spring",
        "AOP",
        "interoperableservices",
        "SOAP",
        "WSDL",
        "JAXWS",
        "JAXRPC",
        "Web",
        "services",
        "core",
        "Java",
        "concepts",
        "Collections",
        "Swing",
        "Serialization",
        "ServletsJSP",
        "web",
        "services",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "data",
        "client",
        "side",
        "NodeJS",
        "data",
        "client",
        "security",
        "Authorization",
        "Spring",
        "Security",
        "OAuth",
        "authentication",
        "protocol",
        "Jackson",
        "Custom",
        "Mappers",
        "Custom",
        "manipulation",
        "date",
        "currency",
        "conversations",
        "JSON",
        "Data",
        "Jackson",
        "parser",
        "Marshaling",
        "UnMarshaling",
        "POJO",
        "objects",
        "Hibernate",
        "ObjectRelational",
        "Mapping",
        "ORM",
        "tool",
        "data",
        "SQL",
        "Server",
        "Hibernate",
        "Detached",
        "Criteria",
        "HQL",
        "SQL",
        "data",
        "Handson",
        "Procedures",
        "functions",
        "DDL",
        "DML",
        "SQLqueries",
        "PLSQL",
        "JPA",
        "persistence",
        "layer",
        "EJB",
        "annotations",
        "database",
        "XML",
        "JBoss",
        "Application",
        "server",
        "implementation",
        "support",
        "workload",
        "management",
        "performance",
        "tuning",
        "Web",
        "server",
        "setup",
        "configuration",
        "JBoss",
        "App",
        "Server",
        "UI",
        "HTML5CSS3",
        "jQuery",
        "BootstrapJavaScript",
        "Ajax",
        "PLSQL",
        "store",
        "procedures",
        "data",
        "Oracle",
        "Developed",
        "Test",
        "classes",
        "JUnit",
        "Easy",
        "Mock",
        "test",
        "coverage",
        "EMMA",
        "Analyze",
        "conflicts",
        "merging",
        "source",
        "code",
        "GIT",
        "Maven",
        "build",
        "tool",
        "Environment",
        "Java",
        "J2EE",
        "Java",
        "JMS",
        "NodeJS",
        "Spring",
        "JQuery",
        "EJB",
        "Hibernate",
        "IntelliJ",
        "Angular",
        "Oracle",
        "g",
        "MongoDB",
        "PLSQL",
        "Cucumber",
        "Log4j",
        "XML",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Bootstrap",
        "SOAP",
        "Maven",
        "GIT",
        "JavaJ2EE",
        "Developer",
        "Penn",
        "National",
        "Insurance",
        "Harrisburg",
        "PA",
        "April",
        "June",
        "Description",
        "Penn",
        "National",
        "Insurance",
        "propertycasualty",
        "insurance",
        "company",
        "Harrisburg",
        "Pennsylvania",
        "farmers",
        "trade",
        "organization",
        "farmers",
        "workers",
        "compensation",
        "protection",
        "workers",
        "farming",
        "equipment",
        "Responsibility",
        "preparation",
        "definition",
        "documents",
        "discussions",
        "business",
        "users",
        "testing",
        "team",
        "design",
        "documents",
        "MVC",
        "Factory",
        "Delegate",
        "Singleton",
        "design",
        "patterns",
        "Web",
        "Application",
        "Struts",
        "business",
        "logic",
        "application",
        "Struts",
        "Framework",
        "JSP",
        "Servlets",
        "Wrote",
        "Client",
        "side",
        "validation",
        "Struts",
        "Validate",
        "framework",
        "JavaScript",
        "Wrote",
        "unit",
        "test",
        "cases",
        "modules",
        "test",
        "findings",
        "SOAP",
        "Web",
        "Services",
        "XML",
        "data",
        "applications",
        "HTTP",
        "Wrote",
        "JSPs",
        "Servlets",
        "WebLogic",
        "Application",
        "server",
        "Wrote",
        "queries",
        "MySQL",
        "database",
        "Subversion",
        "version",
        "control",
        "log4j",
        "errors",
        "production",
        "support",
        "team",
        "trouble",
        "reports",
        "Wrote",
        "Ant",
        "Scripts",
        "build",
        "process",
        "Release",
        "Management",
        "Deployment",
        "Process",
        "Environment",
        "Java",
        "J2EE",
        "Struts",
        "JSP",
        "Servlets",
        "JavaScript",
        "SOAP",
        "WebLogic",
        "Log4j",
        "AMT",
        "CVS",
        "PLSQL",
        "MySQL",
        "Education",
        "Bachelors",
        "Skills",
        "Visual",
        "studio",
        "Android",
        "studio",
        "C",
        "C",
        "Design",
        "patterns"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:26:58.172016",
    "resume_data": "Senior Android Developer Senior Android span lDeveloperspan Senior Android Developer Bank of America Newark NJ 12 years of experience as Software Developer combining around 4 years in Designing Development of Android Applications for Smart Phone Tablet using Java Android SDK Eclipse IDE Android Studio SQL SQLite Java XML JSON Experience in each phase of software development life cycle like requirements gathering analysis design development testing deployment and maintenance of Software Applications Strong Knowledge in Waterfall AgileScrum TDD BDD software development models Good understanding in Android OS interactive application development and memory management and also worked on Linux kernel level Extensively worked on almost every stage of application development right from collecting requirements providing guidelines for design creating application architecture implementation that includes various stages in development QA code signing and releasing to Market Proficient in Working with different Android frameworks Bluetooth Location Camera Notifications Maps Good Exposure in working with ASYNC Task Threads and Services in Android Experience working with MVC Model View Controller and MVP Model view Presenter MVVM Model View View Model design patterns Experience in developing elegant user interfaces with rich features and also worked on Android open source projects AOSP and OTA package tools Experience in delivering products using objectoriented software engineering Good understanding of Android Backend and UI guidelines Handson experience on memory leaks push notifications multiple screen support data offline usage audio features video features graphic design and animation Indepth Knowledge on Android basic components ie Activity Fragment Service Broadcast Receiver and Content Provider Expertize in Android UI toolkit basicpickerlist views adapters dialogs menus and Layout Managers Knowledge on Firebase Android in implementing for Realtime Database Analytics Cloud Messaging Storage and Remote Config Experience in Kotlin Programming Language Proficient in using Google Map spinners Views Camera Toast messages Camera integrating third party libraries Dialogs Notifications Custom Buttons Binders Have experience and knowledge regarding web services like RESTful SOAP to fetch the data and parse JSON response to frontend UI using GSON Experience in using Java Native Interface JNI and Knowledge in Crashlytics and Fabrics which help in crash reporting and experience in Android performance profilers which helps to measure the application performance Undertook full life cycle of Android Application Development which includes testing on device and simulator as well and writing JUnit test cases using Mockito Espresso Robotium for Android applications Experience in web service protocols and architecture such as JSON SOAP REST HTTP and XML Implemented Several Android Applications using Google Maps API Geocoder API Used different version control systems like BitBucket SVN and GIT Experience in developing applications using thirdparty libraries Retrofit Volley Picasso Active Android Butter Knife Event Bus Lotties Hands on experience with building the crossplatform mobile applications using Cordova using HTML CSS JavaScript Excellent knowledge and practice in building crossplatform native mobile applications using Xamarin with Visual Studio C and Ionic React Native with JavaScript Libraries Proficient in Internet Application Programming using technologies like Core Java Struts Spring Web Services Restful and SOAP Hibernate EJB JSP Servlets JDBC RMI RDBMS JNDI Good Exposure with HTTP GET and POST Requests and parsing different types of responses Hands on Experience in developing webbased GUI using Java Applet Servlets JSP AJAX JavaScript HTML and CSS3 Solid Understanding in Core Java concepts like Collections MultiThreading SocketProgramming and Exception handling Excellent knowledge on Web Application servers Apache Tomcat JBOSS WebSphere Experience in localizing the application to support multiple languages Knowledge of scripting in UNIX LINUX XML XSLT XML Schema Built different Applications using databases like Oracle SQLite and MySQL Excellent communication analytical and problemsolving skills passionate to learn new skills and technologies Authorized to work in the US for any employer Work Experience Senior Android Developer Bank of America Richardson TX August 2018 to Present Description Bank of America is one of the largest multinational banking and Financial services in United States We Developed a mobile banking app for Android Devices for the Bank This application allows users to manage their Bank of America accounts and Bank of America creditdebit cards and options to check their account balance recent transactions available credit deposit check minimum payment due and due date Responsibilities Involved in application Android development defect validation deployment and production maintenance Developed the Mobile Agent application using Android Studio 0814 and Android SDK package Collaborating with designers on a regular basis to implement the best Android user experience possible Refactoring the application using MVP Design Pattern used Dagger for Dependency Injection for creating instances for entire application Converted java code to Kotlin and used Kotlin programming in Android studio with autocomplete lint checker refactoring debugging Designed the User Interface according to the requirements using UI Groups UI components Worked with Google Maps Android API V2 to display the nearby bank locations based on user geolocation Developed userfriendly User interfaces using widgets like Menus Dialogs Buttons Edit Boxes and selection widgets like view and scroll as per client needs Registered the Broadcast Receivers for the Android system announcements Integrated camera for capturing images of the card and other documents Integrated ZXing Library to scan the barcode and display barcode image Designed the Custom Dialog using the Fragment Activity Designed the Custom Action bar Custom Progress bar while making service calls Spearheaded creation of four new informationsecurity departments Risk assessment vulnerability penetration testing and security engineering services Enabled digital content using digital rights management Designed networking for the application using Android library layer and Android framework layer Implemented capturing the screenshot of the payment screen Bitmap to PDF conversion features using Android NDK Making the Restful Service Calls at the various stages of the app development cycle and parsing the JSON responses back from the web servers according to the application requirement Implemented feature for sharing offer using Mail Facebook Twitter push notifications and other social networking sites Created a local database using SQLite to store and retrieve the data Implemented GIT for code management and JIRA for bug tracking and project management Developed detailed test plan and test summary documents that outlined the tests to be performed for the given requirements and the results of these tests Worked with Application Activity Lifecycle callbacks for providing the security and showing the login screen when the app goes to background Worked on using RxJava framework with MVP architecture in the application Ported the existing network stack of the app to Retrofit GSON and RxJava2 Implemented UI using Cordova Assisted in creating an analysis and reports Summarized in client discovery sessions Updated the app with new features like push notifications Responsible for adding the update module for checking the latest version of the app Used third party libraries like Retrofit for providing powerful framework for authenticating and interacting with APIs and sending network requests Butter Knife used to inject views Extensively worked on designing the layouts to compatible with screens with different resolutions Responsible for making the application compatible with the Latest Android Version Lollipop 50 Used ADB logcat and DDMS tools for testing and debugging purposes Used Espresso and Junit tools for testing Espresso can run commands at the appropriate time to improve reliability of tests Responsible for testing the application in the stage code review fixing the bugs and providing postproduction support Environment Android Android Studio IDE Windows Java Kotlin JDK Dagger GPS Google Maps API V2 REST CORDOVA NDK JUnit Jira Logcat DDMS Retrofit Butter Knife XML Espresso APN JSON SQLite GIT RxJava Sr Android Developer Aetna Insurance Hartford CT May 2016 to August 2018 Description Aetna Inc is an American managed health care company which sells traditional and consumer directed health care Insurance plans and related services such as medical pharmaceutical dental behavioral health longterm care and disability plans The Android application we developed is used to look up the status of claim and to see users their virtual card on the phone The application uses GPS function to help users no matter where they are Responsibilities Involved in requirement gathering UI design and development Written application logic using Android Studio and followed TDD approach in developing the application Handling JSON data using efficient parsing techniques such as GSON and Parcebale Constructing http requests fetching server response and parsing feeds wherever required Involved in development and enhancements of features to restrict the usage based on Authorization and Authentication tokens Used Jenkins for continuous integration and worked on Android Frameworks such as Notifications and Location in developing the application Used sliding side menu library for easy navigation through the app and Used AOSP for development of application with middle ware Used React Native in creating cross platform application which stores the data and can be reused in the application and worked as Triage Engineer on ADB and debugging bug reports Responsible for design of user interface using custom layouts and different form of widgets Used web views list views populated lists to display the lists from database using simple adapters Used services Async tasks and Alert Notification API to implement parking status reminder into the mobile app Used Google Firebase for creating customized notifications Used Android content providers for implementing features like sharing using Facebook Email Twitter SMS etc from the app and designed suitable GUI for these applications Worked extensively on local data storage using Shared Preferences SQLite databases and File system Used Parceler for passing Parcelable objects between various components of the app Embedded Google Maps API GPS Location Data into app with zooming controls for finding out the store and navigation details to the store Integrating RESTful API services with Basic Authentication process and worked with unit testing and automation testing with the help of Mockito Robotium Espresso and Robolectric frameworks Involved in working with Location Manager and Restful Web service with JSON and also used Dagger for dependency injection and worked on Linux kernel which helps the applications to communicate with the hardware Integrated crashlytics based app distribution Integrated Push Notifications GCM to notify user about new instock apparels and worked on CTS test cases to ensure that the applications support the google standards Used ProGuard for code shrinking optimizing and obfuscating the remaining classes fields and methods with short names This helped in preventing the APK from reverse engineering Worked on memory leaks using DDMS and Leak Canary Used GIT for version control and followed Agile with JIRA for implementing this project Environment Android SDK SQLite Core Java Android studio IDE Android APIs ADT plugin Location Manager JDK JNI XML JSON GSON REST services GPS service Bitbucket Log cat Junit Mockito Espresso Dagger Android Developer Kaiser Permanente Pasadena CA October 2013 to April 2016 Description Kaiser Permanente is one of the nations largest notforprofit health care company The Android application we developed allows the mobile users to manage their health care The application let the users access menus that let them get advice schedule appointments and refill prescriptions The navigation feature of the application puts the features and information you need within reach at all times Responsibilities Implemented offline functionality for a shopping list to display the message If the user is offline and hasnt been shown the message that day display the message Fixed the bugs identified by the QA testing team Worked in an Agile based environment and finished all the tasks assigned in each sprint Tracked issues using JIRA Contribution in code refactoring code optimization Refactoring application using dagger Discussed and provided suggestions on usability suitability and improvements in interface design Worked on the backend database and integrated with JDBC to retrieve Data Access Objects Involved in writing SQL queries PL SQLStored Procedures functions cursors triggers indexes sequences etc Involved in fixing QA defects and tracked them using QC Implementing the dashboard action bar video players quick action UI design pattern using Android interface definition language and AMF Implemented Web views component to load HTML5 based flashcard pages Facilitating local data storage using SQLite for user preferences and progress Involved in developer testing by porting the app to multiple devices with various screen sizes Worked with an offshore team and took part in meeting every day to keep track of different tasks or to add a new task for a story Used GitHub as project version controller Tracked the bugs using HockeyApp crash reports Established and executed test procedures analyzed test results logged defects analyzed defect data recommended process improvements Implemented Custom and Compound View to match the UIUX specifications Integrated activity and fragmentbased navigation to adapt to portrait and landscape orientations to better use the screen real state adapting to phones and tablets Added animated transitions when calling other activities to improve the user experience Responsible for code optimization and testing of the website across different browsers The implemented interaction between frontend and backend using the JSON object Validated input values to make sure that they will be accepted before they are submitted to the server Wrote extensive HTML CSS and JavaScript code to build dynamic pages using Eclipse Involved in the development of Dynamic loading of web pages using Ajax calls with server pages Environment Android Java J2EE JSP Servlets BSP JDBC 30 HTML GCM XML Cordova SVN AngularJS AWS EXT JS Java Script Eclipse APN OracleDB rex Windows Sr JavaJ2EE and Full Stack Developer Dish Denver CO August 2011 to October 2013 Description Dish Network stylized as dish is an American directbroadcast satellite service provider The company provides satellite television satellite internet access audio programming and interactive television services to commercial and residential customers in the United States Responsibility Involved in Design and Development of project modules gather requirements analyze and implemented business logic using Agile Scrum Software Development methodology Designed class sequence activity flow diagrams using UML Visio and Sparx Designed and develop a custom singlepage responsive Web Application on front end using Angular 2 Developed several reusable directives using Angular 2 Moved existing AngularJS controllers and services to Angular 2 components for more responsive and less dependency Developed Interactive web pages with Angular 2 HTML5 CSS3 Javascript JQuery and Bootstrap Usage of new features of Java8 like lambdaexpressions for communicating between business layer and database stream API for Bulk Data Operations on Collections using both streams and parallel streams Used J2EE design patterns like Model View ControllerMVC Singleton Factory Data Access Object DAO Data Transfer Object DTO and Service Locator Involved in writing Thread safe blocks for Multithreading access and improve performance Usedcore Spring concepts like DIIOC AOP Batch implementation Implemented fail safe and circuit breaker patterns in Spring BootMicroservice applications using Hystrix configured SwaggerUI to registered Microservice with Eureka server and monitored service health check from Spring Boot admin console and Spring Ribbon for load balancing Developed UI applications using Angular2 integrating with REST APIs built on Spring ZuulMicroservices Working on Microservice Registration with Spring Cloud using Netflix Eureka Implementing Spring Cloud REST call using Netflix Feign Client Implementing or exposing the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Implemented preauthentication and data base security using Spring Security and securing application access and Spring Batch for scheduling and maintenance of batch jobs Developed Python Object Oriented Design code for logging and debugging code optimization Worked on Camelbased integration middleware solution for Provisioning Services by design and the Implementation of business logic and data processing routes using Apache Camel Created tables and worked on SQL and PLSQL to write Stored Procedures functions and packages for complex inserts and updates in the DB used TOAD to interact with Oracle database Used Oracle 11g12c for the backend data and performed complex queries using joins for CRUD operations Experience in Normalization performance tuning uploading files to database using CLOB and BLOB Worked on Splunk DB Connect APP to load the data into Splunk from Oracle Database Implemented Spring ORM with Hibernate taking advantage of features like Annotation metadata AutoWiring and Collectionsto implement DAO layer with Hibernate Session Factory HQL and SQL Extensively used Hibernate concepts such asLazy loading Dirty checking Locking and Transactions Composed and executed MongoDB scripts to insert and update NoSQL database and reporting Configuring Cassandra clusters and key spaces on RHELOpenstack Installed and setup Apache Spark Used the Java API to load the data into Cassandra Clusters Installed and configured plugins for Apache HTTP server and Sun One Web server to proxy the request for WebLogic server Implemented standard backup procedures for Weblogic server Deployed Docker contained Spring Boot Microservices in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Experience with building Docker Images and running them on Docker container Used Jenkins as an AWS code deploys plugin to deploy to AWS Experience with DevOps methodologies implementing CICD Pipelines using tool sets like GIT Jenkins Chef and AWS Generating Scala and Java classes from the APIs so that they can be incorporated in the application Used Sparkstreaming with Scala to consume realtime data from the Kafka cluster and run arbitrations Responsible for implementation of java integration components for JBPM and DROOLs Configured Protractor test classes and Selenium grid end to end testing on the front end Involved in code reviews and unit testing using JUnit framework and Log4j to provide logs of exceptions Worked with several testing frameworks such as JUnit EasyMock Mockito and PowerMock Created Test automation framework using Cucumber and Selenium web driver Used Drools engine for validating business rules before executing in runtime Used Git for version control and JIRA for bug tracking project management andMaven as build tool Environment Java8 J2EE CICD Spring Webservices Microservices Swagger Spring Zuul Netflix Eureka Restful Feign Client Apache Camel Kafka WebLogic JUnit JBPM Drools Spring Cloud AWS EC2 S3 Scala MongoDB Cassandra HTML5 CSS3 Python JavaScriptES6 Bootstrap jQuery Angular 2 Maven AJAX JQuery XML XSLT Java Beans UML Design Patterns Log4j Agile Methodology Devops Docker Spark Kubernetes Sr JavaJ2EE Developer ACI WorldWide Clearwater FL June 2009 to August 2011 Description Enterprise Banker the industryleading webbased cash management system With Enterprise Banker customers use a web browser to access cash management Functions Financial institution administrators use Enterprise Bankers webbased administrative interface to set system defaults perform customer setup and monitor customer activities with a web browser from any location that has access to the financial institutions network When fully utilized Enterprise Banker includes 18 products over 90 modules over 250 Enterprise Banker Suite is designed to allow financial institutions to purchase and implement specific limited increments of functionality Responsibility Experienced with Software Development Life CycleSDLC with object oriented of business process and worked on developing Service oriented architecture applications in agile development environment Developed and implemented Business Requirements using Spring MVC framework Implemented crosscutting concerns such as logging authentication and system performance using Spring AOP Developed reusable and interoperableservices based on SOAP WSDL JAXWS JAXRPC Web services Well versed with core Java concepts like Collections Swing Serialization and ServletsJSP Implemented web services in Service Oriented Architecture SOA to retrieve data from client side NodeJS and parsed the data to client and handled the security and Authorization using Spring Security and OAuth authentication protocol respectively Used Jackson Custom Mappers for Custom manipulation for date currency conversations on JSON Data Used Jackson parser for Marshaling and UnMarshaling Developed POJO objects and used Hibernate as the ObjectRelational Mapping ORM tool to access the persistent data from SQL Server Used Hibernate Detached Criteria HQL and written some SQL queries for data retrieving Handson writing Stored Procedures functions triggers DDL DML SQLqueries and PLSQL Worked on JPA as persistence layer involving EJB annotations to synchronize with database through XML JBoss Application server implementation support workload management and performance tuning including Web server setup configuration with JBoss App Server Developed UI usingAngularJS HTML5CSS3 jQuery BootstrapJavaScript Ajax Developed PLSQL store procedures to convert the data from Oracle to MongoDB Developed Test classes using JUnit and Easy Mock and test coverage using EMMA plugin Analyze and resolve conflicts related to merging of source code for GIT and Maven as build tool Environment Java J2EE Java Beans JMS NodeJS Spring JQuery EJB Hibernate IntelliJ Angular Oracle 11g MongoDB PLSQL Cucumber Log4j XML HTML5 CSS3 JavaScript Bootstrap SOAP Maven GIT JavaJ2EE Developer Penn National Insurance Harrisburg PA April 2007 to June 2009 Description Penn National Insurance is a propertycasualty mutual insurance company headquartered in Harrisburg Pennsylvania Founded in 1919 by a farmers trade organization to help the farmers get more affordable workers compensation protection for their workers who operated steamdriven farming equipment Responsibility Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Extensively used MVC Factory Delegate and Singleton design patterns Enhanced the Web Application using Struts Created business logic and application in Struts Framework using JSP and Servlets Wrote Client side validation using Struts Validate framework and JavaScript Wrote unit test cases for different modules and resolved the test findings Used SOAP for Web Services by exchanging XML data between applications over HTTP Wrote JSPs Servlets and deployed them on WebLogic Application server Wrote queries in MySQL to interact with the database Used Subversion for version control and log4j for logging errors Helped production support team to solve trouble reports Wrote Ant Scripts to automate the build and deploy process Involved in Release Management and Deployment Process Environment Java J2EE Struts JSP Servlets JavaScript SOAP WebLogic Log4j AMT CVS PLSQL MySQL Education Bachelors Skills Visual studio Android studio C C Design patterns",
    "unique_id": "43417b3f-a5be-466c-a577-4a54f44f2d3d"
}