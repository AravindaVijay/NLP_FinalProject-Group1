{
    "clean_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer ATT Over Seven years of IT experience in nlayer web applications and automation development using Python Flask Django C MySQL CSS HTML Java script MVC AJAX Experience with Virtualization technologies in Installing Configuring and Administering VMware ESXESXi Corporate trained in agile methodologies and fluent in scrum and sprint planning Knowledge in OpenStack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Experienced in developing asynchronous messaging services using ZeroMQ twisted ZeroMQ Design and implemented Python networking tools using XMLRPC and twisted XMLRPC servers that serves information via UNIX sockets and TCP protocols Experience with Object Oriented Design and SDLC methodologies using Rational Rose Unified Modeling Language UML Experience in Objected oriented design using C Design build and maintain reliable and efficient Capplications Experience in writing multithreading and socket programs using C and python Worked on advanced concepts of C like STLs Experienced in Test driven approach for developing the application and Implemented the unit tests using Python Nose Test framework Experienced in implementation of Creation Management and Configuration of Virtual Machines Clone and Templates Involved in entire life cycle of the projects including Design Development and Deployment Testing and Implementation and support Familiar and developed JSON based REST Web services Experience includes Database Design Analysis and Development with MySQL Oracle Proficient in Software Design and developing applications in Linux Environment using C Experienced in Agile Methodologies and SCRUM Process Experience in using Version Control Systems such as GIT SVN Good Experience with PEP8 and Google coding Guidelines in Python Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Selfmotivated with good work ethic and team work skills Work Experience Sr Python Developer ATT Atlanta GA January 2017 to Present Project Global Customer Support Service GOSS is an internal web application for global customer support service which proposes to maintain orders and service agreements globally This project is Django based restful web application with react js as view Responsibilities Developed web pages using HTML CSS and Bootstrap and reactjs Involved in requirement gathering from SEs and Stake holders Collaborated with team in turning the requirements to functional and software modules Wrote django admin pages and developed REST API get post delete put functionalities for the application Wrote JavaScript form validations for all the web pages in the application Wrote ajax calls to get post delete REST API calls for upload and delete files Wrote django serializers to represent data in JSON format for the ajax calls Wrote admin pages to insert retrieve and delete customer details Create admin pages to view error logs Create admin pages with filters with add edit and delete functionalities Fixed existing user interface bugs with CSS and JavaScript functionalities Wrote unit test scripts for models Wrote python scripts to perform CRUD operations on MySql database Used react google charts to show data in column charts combo chart bar charts Involved in QA process for code review Working in Agile and scrum environment which includes daily standup and sprint planning Use of Jira Git Pycharm CentOS Environment Python 35 Django Docker Google Charts JSX RestFramework HTML CSS Bootstrap JavaScript Reactjs MySql Jira Git CentOS MySql Ajax Docker developer Thales Group Melbourne FL February 2016 to December 2016 Project CICD and STV Primary roles and responsibilities are to develop and maintain automated tests using Python Robot test and Nose tests frameworks for internal applications in CICD and InFlight Entertainment and Connectivity Responsibilities Develop and maintain automated tests using Python and the Robot test framework Develop and maintain internal facing web applications using Python Develop and maintain internal facing RESTful services using Python Wrote client side of Flytnet Web Development Application that also happens to run in the backend of a Flask WEB application Wrote JavaScript and HTML for the client side of Flask WEB application to track status of operations running in Development Application Wrote script to interface an application running on a remote server using Python ZMQ and Google Proto Buffers Added iptables NAT for SSH tunnelingport forwarding to install packages on private host via publicly exposed IP address Implemented distributed architecture by using ZeroMQ messaging library using the epmg socket type which is very much essential for the messaging pattern in the project Wrote python scripts for multithreading and multiprocessing Implement antenna status notifications for antenna Wrote scripts to identify connected antenna antenna type at initialization antenna slew elevation limit antenna state changes antenna communication failure antenna command events Create zmq publisher to publish antenna status service announcement Wrote several python unit tests using nose test framework Build automated scripts to collect and archive python coverage and consolidation doxygen comments in master builds Experience in writing scripts to send messages from different servers using Python ZMQ curve ZeroMQ twisted ZeroMQ twisted XMLRPC XMLRPC Google Proto Buffers via IPC TCP UDP sockets Wrote python scripts to parse config files Participated in Scrumrelated team activities ie daily standup sprint planning etc Involved in code reviews and bug tracking on Jira Experience with Jira Stash Confluence Followed Google Python Coding Style and PEP8 Environment Python 27 nose 137 Robot framework 30 ZeroMQ twisted ZeroMQ XMLRPC twisted XMLRPC IPC TCP UPD Linux Git Stash Jira Confluence Ubuntu 1404 PyCharm Eclipse PyDev Pylint PEP8 Python Developer HewlettPackard Sunnyvale CA April 2015 to January 2016 Project Open Stack HP Helion Responsible in development and automation of deploying and cloning virtual machines on vcenter Creation Management and Configuration of Virtual Machines Clone and Templates Responsibilities Installed VMware ESX server 4140 and created virtual machines on ESX Servers Created standard templates and deployed virtual machines from these templates Creation Management and Configuration of Virtual Machines Clone and Templates Customizing guest operating system on Virtual Machines Wrote scripts in scale out process for deploying multiple virtual machines from a single template Built task monitoring script to monitor various tasks such as poweron a virtual machine after cloning clone virtual machine and reboot virtual machine using pyvmomi Implemented script to monitor on vcenter tasks Built web crawler on Jenkin web site to get the latest build information Wrote python scripts for IP address and Mac Address validation Built python scripts to read and write JSON files Rewrote scripts to use data exchange formats like JSON and made more modular Wrote scripts to clone virtual machine on ESX from the given template name in JSON file Built scripts to deploy virtual machine on ESX when template name is not specified Wrote script to generate IP address from CIDR and write into JSON files and assign them to virtual machine while cloning Built scripts to suppress the urllib3 warning when accessing vcenter using pyvmomi Used ansible for automating cloud deployment process of various templates Integrated and involved in daily scrum meetings with both onsite and offshore team Wrote multithreading scripts to access data from different locations Wrote python scripts to assign ip addresses to vms on different networks Environment Python 33 JSON hLinux Linux Git Jira VMware vSphere 55 VMware ESX 41 KVM Python Developer HPDRC and Cyber Security Miami FL January 2014 to March 2015 Description Responsible in building automated tools to identify privacy and security issues in online geo social networks eg fake review detection private locationcentric aggregates and location verification Responsibilities Responsible for building and automation of web scraper for Google play android apps web site and urls in python with BeautifulSoup module Used Python inbuilt libraries like urllib urllib2 os multithreading and many advanced libraries to build automation libraries Implemented multithreading to reduce the time in scraping numerous android application urls Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that cannot be scraped normally Worked with MySql database for querying scraped data that are dumped from CSV files Used RAnalytics for analyzing data and plotting Pie Charts Bar Charts Box plots Histograms Line Graphs Scatter plots Implemented zoom in zoom out drag and drop functionalities using JavaScript and jQuery for touch screens and cursor controls Implemented URL parser for markers to be displayed on user interface for images by using json jQuery and JavaScript Knowledge in cyberattacks and vulnerabilities Convert flash to JavaScript for TerraFlycom website Environment Python R BeautifulSoup MySQL Linux HTML5 XHTML CSS3 AJAX JavaScript Apache Web Server Git Software Developer Symbiosys Visakhapatnam May 2010 to December 2013 Description The aim of the project is to redesign website create dynamic web pages for online banking system Configure database to maintain the entire customer Responsibilities Responsibilities include database design code profiling and extensive documentation Designed and implemented a dynamic image rendering which is consumed by PHP JavaScript Designed a C driven application from the ground up that allows system administrators to configure and monitor an entire environment Used advanced techniques such as dynamic data binding Introduced DHTMLbased smart form submission engine which validated client side data and all dependencies without reloading HTML page Developed JavaScript API used by clients to integrate the application with other modules Increased developer productivity by using efficient programming methodologies and local development Involved in verification and testing in order to set MySQL database free from SQL injections Environment C C JavaScript 15 MySQL Apache Server Linux and UNIX Shell",
    "entities": [
        "GIT",
        "Database Design Analysis and Development",
        "Python ZMQ",
        "Robot",
        "C Design",
        "HTML CSS",
        "Create",
        "CRUD",
        "C Experienced",
        "Google Proto Buffers Added",
        "Object Oriented Design",
        "FL",
        "CSV",
        "UNIX Shell",
        "QA",
        "NAT",
        "NOVA",
        "Templates Customizing",
        "Virtualization technologies",
        "Python Develop",
        "IPC",
        "UNIX",
        "VMware",
        "Thales Group",
        "JavaScript",
        "TerraFlycom",
        "XMLRPC",
        "Python Wrote",
        "Python Nose Test",
        "Objected",
        "Version Control Systems",
        "Cyber Security",
        "Virtual Machines Wrote",
        "JSON",
        "Mac Address",
        "OpenStack",
        "Development Application Wrote",
        "Develop",
        "Sunnyvale",
        "Installing Configuring and Administering VMware ESXESXi Corporate",
        "IP",
        "Google",
        "CSS",
        "ESX",
        "Responsibilities Responsible",
        "Linux",
        "Python Robot",
        "android",
        "Design Development and Deployment Testing and Implementation",
        "jQuery",
        "SQL",
        "Flask",
        "Collaborated",
        "REST",
        "Built",
        "Project CICD",
        "InFlight Entertainment and Connectivity Responsibilities Develop",
        "TCP",
        "lPythonspan",
        "Oracle Proficient",
        "XMLRPC XMLRPC Google Proto Buffers",
        "Templates Involved",
        "Flytnet Web Development Application",
        "Creation Management and Configuration of Virtual Machines Clone",
        "PEP8",
        "SSH",
        "STV Primary",
        "CIDR",
        "CICD",
        "Templates Responsibilities Installed VMware ESX",
        "JavaScript functionalities Wrote",
        "MySql"
    ],
    "experience": "Experience with Virtualization technologies in Installing Configuring and Administering VMware ESXESXi Corporate trained in agile methodologies and fluent in scrum and sprint planning Knowledge in OpenStack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Experienced in developing asynchronous messaging services using ZeroMQ twisted ZeroMQ Design and implemented Python networking tools using XMLRPC and twisted XMLRPC servers that serves information via UNIX sockets and TCP protocols Experience with Object Oriented Design and SDLC methodologies using Rational Rose Unified Modeling Language UML Experience in Objected oriented design using C Design build and maintain reliable and efficient Capplications Experience in writing multithreading and socket programs using C and python Worked on advanced concepts of C like STLs Experienced in Test driven approach for developing the application and Implemented the unit tests using Python Nose Test framework Experienced in implementation of Creation Management and Configuration of Virtual Machines Clone and Templates Involved in entire life cycle of the projects including Design Development and Deployment Testing and Implementation and support Familiar and developed JSON based REST Web services Experience includes Database Design Analysis and Development with MySQL Oracle Proficient in Software Design and developing applications in Linux Environment using C Experienced in Agile Methodologies and SCRUM Process Experience in using Version Control Systems such as GIT SVN Good Experience with PEP8 and Google coding Guidelines in Python Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Selfmotivated with good work ethic and team work skills Work Experience Sr Python Developer ATT Atlanta GA January 2017 to Present Project Global Customer Support Service GOSS is an internal web application for global customer support service which proposes to maintain orders and service agreements globally This project is Django based restful web application with react js as view Responsibilities Developed web pages using HTML CSS and Bootstrap and reactjs Involved in requirement gathering from SEs and Stake holders Collaborated with team in turning the requirements to functional and software modules Wrote django admin pages and developed REST API get post delete put functionalities for the application Wrote JavaScript form validations for all the web pages in the application Wrote ajax calls to get post delete REST API calls for upload and delete files Wrote django serializers to represent data in JSON format for the ajax calls Wrote admin pages to insert retrieve and delete customer details Create admin pages to view error logs Create admin pages with filters with add edit and delete functionalities Fixed existing user interface bugs with CSS and JavaScript functionalities Wrote unit test scripts for models Wrote python scripts to perform CRUD operations on MySql database Used react google charts to show data in column charts combo chart bar charts Involved in QA process for code review Working in Agile and scrum environment which includes daily standup and sprint planning Use of Jira Git Pycharm CentOS Environment Python 35 Django Docker Google Charts JSX RestFramework HTML CSS Bootstrap JavaScript Reactjs MySql Jira Git CentOS MySql Ajax Docker developer Thales Group Melbourne FL February 2016 to December 2016 Project CICD and STV Primary roles and responsibilities are to develop and maintain automated tests using Python Robot test and Nose tests frameworks for internal applications in CICD and InFlight Entertainment and Connectivity Responsibilities Develop and maintain automated tests using Python and the Robot test framework Develop and maintain internal facing web applications using Python Develop and maintain internal facing RESTful services using Python Wrote client side of Flytnet Web Development Application that also happens to run in the backend of a Flask WEB application Wrote JavaScript and HTML for the client side of Flask WEB application to track status of operations running in Development Application Wrote script to interface an application running on a remote server using Python ZMQ and Google Proto Buffers Added iptables NAT for SSH tunnelingport forwarding to install packages on private host via publicly exposed IP address Implemented distributed architecture by using ZeroMQ messaging library using the epmg socket type which is very much essential for the messaging pattern in the project Wrote python scripts for multithreading and multiprocessing Implement antenna status notifications for antenna Wrote scripts to identify connected antenna antenna type at initialization antenna slew elevation limit antenna state changes antenna communication failure antenna command events Create zmq publisher to publish antenna status service announcement Wrote several python unit tests using nose test framework Build automated scripts to collect and archive python coverage and consolidation doxygen comments in master builds Experience in writing scripts to send messages from different servers using Python ZMQ curve ZeroMQ twisted ZeroMQ twisted XMLRPC XMLRPC Google Proto Buffers via IPC TCP UDP sockets Wrote python scripts to parse config files Participated in Scrumrelated team activities ie daily standup sprint planning etc Involved in code reviews and bug tracking on Jira Experience with Jira Stash Confluence Followed Google Python Coding Style and PEP8 Environment Python 27 nose 137 Robot framework 30 ZeroMQ twisted ZeroMQ XMLRPC twisted XMLRPC IPC TCP UPD Linux Git Stash Jira Confluence Ubuntu 1404 PyCharm Eclipse PyDev Pylint PEP8 Python Developer HewlettPackard Sunnyvale CA April 2015 to January 2016 Project Open Stack HP Helion Responsible in development and automation of deploying and cloning virtual machines on vcenter Creation Management and Configuration of Virtual Machines Clone and Templates Responsibilities Installed VMware ESX server 4140 and created virtual machines on ESX Servers Created standard templates and deployed virtual machines from these templates Creation Management and Configuration of Virtual Machines Clone and Templates Customizing guest operating system on Virtual Machines Wrote scripts in scale out process for deploying multiple virtual machines from a single template Built task monitoring script to monitor various tasks such as poweron a virtual machine after cloning clone virtual machine and reboot virtual machine using pyvmomi Implemented script to monitor on vcenter tasks Built web crawler on Jenkin web site to get the latest build information Wrote python scripts for IP address and Mac Address validation Built python scripts to read and write JSON files Rewrote scripts to use data exchange formats like JSON and made more modular Wrote scripts to clone virtual machine on ESX from the given template name in JSON file Built scripts to deploy virtual machine on ESX when template name is not specified Wrote script to generate IP address from CIDR and write into JSON files and assign them to virtual machine while cloning Built scripts to suppress the urllib3 warning when accessing vcenter using pyvmomi Used ansible for automating cloud deployment process of various templates Integrated and involved in daily scrum meetings with both onsite and offshore team Wrote multithreading scripts to access data from different locations Wrote python scripts to assign ip addresses to vms on different networks Environment Python 33 JSON hLinux Linux Git Jira VMware vSphere 55 VMware ESX 41 KVM Python Developer HPDRC and Cyber Security Miami FL January 2014 to March 2015 Description Responsible in building automated tools to identify privacy and security issues in online geo social networks eg fake review detection private locationcentric aggregates and location verification Responsibilities Responsible for building and automation of web scraper for Google play android apps web site and urls in python with BeautifulSoup module Used Python inbuilt libraries like urllib urllib2 os multithreading and many advanced libraries to build automation libraries Implemented multithreading to reduce the time in scraping numerous android application urls Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that can not be scraped normally Worked with MySql database for querying scraped data that are dumped from CSV files Used RAnalytics for analyzing data and plotting Pie Charts Bar Charts Box plots Histograms Line Graphs Scatter plots Implemented zoom in zoom out drag and drop functionalities using JavaScript and jQuery for touch screens and cursor controls Implemented URL parser for markers to be displayed on user interface for images by using json jQuery and JavaScript Knowledge in cyberattacks and vulnerabilities Convert flash to JavaScript for TerraFlycom website Environment Python R BeautifulSoup MySQL Linux HTML5 XHTML CSS3 AJAX JavaScript Apache Web Server Git Software Developer Symbiosys Visakhapatnam May 2010 to December 2013 Description The aim of the project is to redesign website create dynamic web pages for online banking system Configure database to maintain the entire customer Responsibilities Responsibilities include database design code profiling and extensive documentation Designed and implemented a dynamic image rendering which is consumed by PHP JavaScript Designed a C driven application from the ground up that allows system administrators to configure and monitor an entire environment Used advanced techniques such as dynamic data binding Introduced DHTMLbased smart form submission engine which validated client side data and all dependencies without reloading HTML page Developed JavaScript API used by clients to integrate the application with other modules Increased developer productivity by using efficient programming methodologies and local development Involved in verification and testing in order to set MySQL database free from SQL injections Environment C C JavaScript 15 MySQL Apache Server Linux and UNIX Shell",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Sr",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "ATT",
        "Seven",
        "years",
        "IT",
        "experience",
        "nlayer",
        "web",
        "applications",
        "automation",
        "development",
        "Python",
        "Flask",
        "Django",
        "C",
        "MySQL",
        "CSS",
        "HTML",
        "Java",
        "script",
        "MVC",
        "AJAX",
        "Experience",
        "Virtualization",
        "technologies",
        "Configuring",
        "Administering",
        "VMware",
        "ESXESXi",
        "Corporate",
        "methodologies",
        "scrum",
        "sprint",
        "Knowledge",
        "OpenStack",
        "services",
        "NOVA",
        "SWIFT",
        "KEYSTONE",
        "NEUTRON",
        "CINDER",
        "GLANCE",
        "messaging",
        "services",
        "ZeroMQ",
        "ZeroMQ",
        "Design",
        "Python",
        "networking",
        "tools",
        "XMLRPC",
        "XMLRPC",
        "servers",
        "information",
        "UNIX",
        "sockets",
        "TCP",
        "protocols",
        "Experience",
        "Object",
        "Oriented",
        "Design",
        "SDLC",
        "methodologies",
        "Rational",
        "Rose",
        "Unified",
        "Modeling",
        "Language",
        "UML",
        "Experience",
        "Objected",
        "design",
        "C",
        "Design",
        "build",
        "Capplications",
        "Experience",
        "programs",
        "C",
        "python",
        "Worked",
        "concepts",
        "C",
        "STLs",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Nose",
        "Test",
        "framework",
        "implementation",
        "Creation",
        "Management",
        "Configuration",
        "Virtual",
        "Machines",
        "Clone",
        "Templates",
        "life",
        "cycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Experience",
        "Database",
        "Design",
        "Analysis",
        "Development",
        "MySQL",
        "Oracle",
        "Proficient",
        "Software",
        "Design",
        "applications",
        "Linux",
        "Environment",
        "C",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "Experience",
        "Version",
        "Control",
        "Systems",
        "GIT",
        "SVN",
        "Good",
        "Experience",
        "PEP8",
        "Google",
        "Guidelines",
        "Python",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "work",
        "team",
        "work",
        "skills",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "ATT",
        "Atlanta",
        "GA",
        "January",
        "Present",
        "Project",
        "Global",
        "Customer",
        "Support",
        "Service",
        "GOSS",
        "web",
        "application",
        "customer",
        "support",
        "service",
        "orders",
        "service",
        "agreements",
        "project",
        "Django",
        "web",
        "application",
        "react",
        "js",
        "view",
        "Responsibilities",
        "web",
        "pages",
        "HTML",
        "CSS",
        "Bootstrap",
        "reactjs",
        "requirement",
        "gathering",
        "SEs",
        "Stake",
        "holders",
        "team",
        "requirements",
        "software",
        "modules",
        "pages",
        "REST",
        "API",
        "post",
        "functionalities",
        "application",
        "Wrote",
        "JavaScript",
        "form",
        "validations",
        "web",
        "pages",
        "application",
        "calls",
        "REST",
        "API",
        "upload",
        "files",
        "Wrote",
        "django",
        "data",
        "format",
        "calls",
        "Wrote",
        "admin",
        "pages",
        "retrieve",
        "customer",
        "details",
        "pages",
        "error",
        "logs",
        "pages",
        "filters",
        "add",
        "edit",
        "functionalities",
        "user",
        "interface",
        "bugs",
        "CSS",
        "JavaScript",
        "functionalities",
        "Wrote",
        "unit",
        "test",
        "scripts",
        "models",
        "Wrote",
        "python",
        "scripts",
        "CRUD",
        "operations",
        "MySql",
        "database",
        "google",
        "charts",
        "data",
        "column",
        "charts",
        "combo",
        "chart",
        "bar",
        "charts",
        "QA",
        "process",
        "code",
        "review",
        "Working",
        "Agile",
        "scrum",
        "environment",
        "standup",
        "sprint",
        "Use",
        "Jira",
        "Git",
        "Pycharm",
        "CentOS",
        "Environment",
        "Python",
        "Django",
        "Docker",
        "Google",
        "Charts",
        "JSX",
        "RestFramework",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "Reactjs",
        "MySql",
        "Jira",
        "Git",
        "CentOS",
        "MySql",
        "Ajax",
        "Docker",
        "developer",
        "Thales",
        "Group",
        "Melbourne",
        "FL",
        "February",
        "December",
        "Project",
        "CICD",
        "STV",
        "Primary",
        "roles",
        "responsibilities",
        "tests",
        "Python",
        "Robot",
        "test",
        "Nose",
        "frameworks",
        "applications",
        "CICD",
        "InFlight",
        "Entertainment",
        "Connectivity",
        "Responsibilities",
        "tests",
        "Python",
        "Robot",
        "test",
        "framework",
        "Develop",
        "facing",
        "web",
        "applications",
        "Python",
        "Develop",
        "services",
        "Python",
        "Wrote",
        "client",
        "side",
        "Flytnet",
        "Web",
        "Development",
        "Application",
        "backend",
        "Flask",
        "WEB",
        "application",
        "Wrote",
        "JavaScript",
        "HTML",
        "client",
        "side",
        "Flask",
        "WEB",
        "application",
        "status",
        "operations",
        "Development",
        "Application",
        "Wrote",
        "script",
        "application",
        "server",
        "Python",
        "ZMQ",
        "Google",
        "Proto",
        "Buffers",
        "iptables",
        "NAT",
        "SSH",
        "tunnelingport",
        "forwarding",
        "packages",
        "host",
        "IP",
        "address",
        "architecture",
        "ZeroMQ",
        "library",
        "epmg",
        "socket",
        "type",
        "pattern",
        "project",
        "Wrote",
        "python",
        "scripts",
        "Implement",
        "antenna",
        "status",
        "notifications",
        "antenna",
        "Wrote",
        "scripts",
        "antenna",
        "antenna",
        "type",
        "initialization",
        "antenna",
        "slew",
        "elevation",
        "limit",
        "antenna",
        "state",
        "changes",
        "antenna",
        "communication",
        "failure",
        "antenna",
        "command",
        "events",
        "zmq",
        "publisher",
        "antenna",
        "status",
        "service",
        "announcement",
        "python",
        "unit",
        "tests",
        "nose",
        "test",
        "framework",
        "Build",
        "scripts",
        "python",
        "coverage",
        "consolidation",
        "doxygen",
        "comments",
        "master",
        "Experience",
        "scripts",
        "messages",
        "servers",
        "Python",
        "ZMQ",
        "curve",
        "ZeroMQ",
        "ZeroMQ",
        "XMLRPC",
        "XMLRPC",
        "Google",
        "Proto",
        "Buffers",
        "IPC",
        "TCP",
        "UDP",
        "sockets",
        "Wrote",
        "python",
        "scripts",
        "config",
        "files",
        "team",
        "activities",
        "standup",
        "sprint",
        "planning",
        "code",
        "reviews",
        "bug",
        "tracking",
        "Jira",
        "Experience",
        "Jira",
        "Stash",
        "Confluence",
        "Google",
        "Python",
        "Coding",
        "Style",
        "PEP8",
        "Environment",
        "Python",
        "nose",
        "Robot",
        "framework",
        "ZeroMQ",
        "ZeroMQ",
        "XMLRPC",
        "XMLRPC",
        "IPC",
        "TCP",
        "UPD",
        "Linux",
        "Git",
        "Stash",
        "Jira",
        "Confluence",
        "Ubuntu",
        "PyCharm",
        "Eclipse",
        "PyDev",
        "Pylint",
        "PEP8",
        "Python",
        "Developer",
        "HewlettPackard",
        "Sunnyvale",
        "CA",
        "April",
        "January",
        "Project",
        "Open",
        "Stack",
        "HP",
        "Helion",
        "development",
        "automation",
        "machines",
        "vcenter",
        "Creation",
        "Management",
        "Configuration",
        "Virtual",
        "Machines",
        "Clone",
        "Templates",
        "Responsibilities",
        "Installed",
        "VMware",
        "ESX",
        "server",
        "machines",
        "ESX",
        "Servers",
        "templates",
        "machines",
        "templates",
        "Creation",
        "Management",
        "Configuration",
        "Virtual",
        "Machines",
        "Clone",
        "Templates",
        "Customizing",
        "guest",
        "operating",
        "system",
        "Virtual",
        "Machines",
        "scripts",
        "scale",
        "process",
        "machines",
        "template",
        "task",
        "monitoring",
        "script",
        "tasks",
        "poweron",
        "machine",
        "machine",
        "machine",
        "pyvmomi",
        "script",
        "vcenter",
        "tasks",
        "web",
        "crawler",
        "Jenkin",
        "web",
        "site",
        "build",
        "information",
        "Wrote",
        "python",
        "scripts",
        "IP",
        "address",
        "Mac",
        "Address",
        "validation",
        "python",
        "scripts",
        "files",
        "Rewrote",
        "scripts",
        "data",
        "exchange",
        "formats",
        "JSON",
        "Wrote",
        "scripts",
        "machine",
        "ESX",
        "template",
        "name",
        "file",
        "scripts",
        "machine",
        "ESX",
        "template",
        "name",
        "Wrote",
        "script",
        "IP",
        "address",
        "CIDR",
        "files",
        "machine",
        "scripts",
        "warning",
        "vcenter",
        "pyvmomi",
        "cloud",
        "deployment",
        "process",
        "templates",
        "scrum",
        "meetings",
        "team",
        "multithreading",
        "scripts",
        "access",
        "data",
        "locations",
        "Wrote",
        "python",
        "scripts",
        "ip",
        "addresses",
        "vms",
        "networks",
        "Environment",
        "Python",
        "JSON",
        "hLinux",
        "Linux",
        "Git",
        "Jira",
        "VMware",
        "vSphere",
        "VMware",
        "ESX",
        "KVM",
        "Python",
        "Developer",
        "HPDRC",
        "Cyber",
        "Security",
        "Miami",
        "FL",
        "January",
        "March",
        "Description",
        "tools",
        "privacy",
        "security",
        "issues",
        "online",
        "geo",
        "social",
        "networks",
        "eg",
        "review",
        "detection",
        "locationcentric",
        "aggregates",
        "location",
        "verification",
        "Responsibilities",
        "building",
        "automation",
        "web",
        "scraper",
        "Google",
        "apps",
        "web",
        "site",
        "urls",
        "python",
        "BeautifulSoup",
        "module",
        "Python",
        "libraries",
        "urllib2",
        "libraries",
        "automation",
        "libraries",
        "time",
        "application",
        "urls",
        "automation",
        "script",
        "Crontab",
        "python",
        "web",
        "crawler",
        "cURL",
        "web",
        "contents",
        "MySql",
        "database",
        "data",
        "CSV",
        "files",
        "RAnalytics",
        "data",
        "Pie",
        "Charts",
        "Bar",
        "Charts",
        "Box",
        "Histograms",
        "Line",
        "Graphs",
        "Scatter",
        "zoom",
        "zoom",
        "drag",
        "functionalities",
        "JavaScript",
        "jQuery",
        "touch",
        "screens",
        "cursor",
        "URL",
        "parser",
        "markers",
        "user",
        "interface",
        "images",
        "json",
        "jQuery",
        "JavaScript",
        "Knowledge",
        "cyberattacks",
        "Convert",
        "flash",
        "JavaScript",
        "TerraFlycom",
        "website",
        "Environment",
        "Python",
        "R",
        "BeautifulSoup",
        "MySQL",
        "Linux",
        "HTML5",
        "XHTML",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Apache",
        "Web",
        "Server",
        "Git",
        "Software",
        "Developer",
        "Symbiosys",
        "Visakhapatnam",
        "May",
        "December",
        "Description",
        "aim",
        "project",
        "website",
        "web",
        "pages",
        "banking",
        "system",
        "Configure",
        "database",
        "customer",
        "Responsibilities",
        "Responsibilities",
        "database",
        "design",
        "code",
        "profiling",
        "documentation",
        "image",
        "rendering",
        "PHP",
        "JavaScript",
        "C",
        "application",
        "ground",
        "system",
        "administrators",
        "environment",
        "techniques",
        "data",
        "form",
        "submission",
        "engine",
        "client",
        "side",
        "data",
        "dependencies",
        "HTML",
        "page",
        "JavaScript",
        "API",
        "clients",
        "application",
        "modules",
        "developer",
        "productivity",
        "programming",
        "methodologies",
        "development",
        "verification",
        "testing",
        "order",
        "MySQL",
        "database",
        "SQL",
        "injections",
        "Environment",
        "C",
        "C",
        "JavaScript",
        "MySQL",
        "Apache",
        "Server",
        "Linux",
        "UNIX",
        "Shell"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:30:30.745261",
    "resume_data": "Sr Python Developer Sr span lPythonspan span lDeveloperspan Sr Python Developer ATT Over Seven years of IT experience in nlayer web applications and automation development using Python Flask Django C MySQL CSS HTML Java script MVC AJAX Experience with Virtualization technologies in Installing Configuring and Administering VMware ESXESXi Corporate trained in agile methodologies and fluent in scrum and sprint planning Knowledge in OpenStack services such as NOVA SWIFT KEYSTONE NEUTRON CINDER and GLANCE Experienced in developing asynchronous messaging services using ZeroMQ twisted ZeroMQ Design and implemented Python networking tools using XMLRPC and twisted XMLRPC servers that serves information via UNIX sockets and TCP protocols Experience with Object Oriented Design and SDLC methodologies using Rational Rose Unified Modeling Language UML Experience in Objected oriented design using C Design build and maintain reliable and efficient Capplications Experience in writing multithreading and socket programs using C and python Worked on advanced concepts of C like STLs Experienced in Test driven approach for developing the application and Implemented the unit tests using Python Nose Test framework Experienced in implementation of Creation Management and Configuration of Virtual Machines Clone and Templates Involved in entire life cycle of the projects including Design Development and Deployment Testing and Implementation and support Familiar and developed JSON based REST Web services Experience includes Database Design Analysis and Development with MySQL Oracle Proficient in Software Design and developing applications in Linux Environment using C Experienced in Agile Methodologies and SCRUM Process Experience in using Version Control Systems such as GIT SVN Good Experience with PEP8 and Google coding Guidelines in Python Wrote AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Selfmotivated with good work ethic and team work skills Work Experience Sr Python Developer ATT Atlanta GA January 2017 to Present Project Global Customer Support Service GOSS is an internal web application for global customer support service which proposes to maintain orders and service agreements globally This project is Django based restful web application with react js as view Responsibilities Developed web pages using HTML CSS and Bootstrap and reactjs Involved in requirement gathering from SEs and Stake holders Collaborated with team in turning the requirements to functional and software modules Wrote django admin pages and developed REST API get post delete put functionalities for the application Wrote JavaScript form validations for all the web pages in the application Wrote ajax calls to get post delete REST API calls for upload and delete files Wrote django serializers to represent data in JSON format for the ajax calls Wrote admin pages to insert retrieve and delete customer details Create admin pages to view error logs Create admin pages with filters with add edit and delete functionalities Fixed existing user interface bugs with CSS and JavaScript functionalities Wrote unit test scripts for models Wrote python scripts to perform CRUD operations on MySql database Used react google charts to show data in column charts combo chart bar charts Involved in QA process for code review Working in Agile and scrum environment which includes daily standup and sprint planning Use of Jira Git Pycharm CentOS Environment Python 35 Django Docker Google Charts JSX RestFramework HTML CSS Bootstrap JavaScript Reactjs MySql Jira Git CentOS MySql Ajax Docker developer Thales Group Melbourne FL February 2016 to December 2016 Project CICD and STV Primary roles and responsibilities are to develop and maintain automated tests using Python Robot test and Nose tests frameworks for internal applications in CICD and InFlight Entertainment and Connectivity Responsibilities Develop and maintain automated tests using Python and the Robot test framework Develop and maintain internal facing web applications using Python Develop and maintain internal facing RESTful services using Python Wrote client side of Flytnet Web Development Application that also happens to run in the backend of a Flask WEB application Wrote JavaScript and HTML for the client side of Flask WEB application to track status of operations running in Development Application Wrote script to interface an application running on a remote server using Python ZMQ and Google Proto Buffers Added iptables NAT for SSH tunnelingport forwarding to install packages on private host via publicly exposed IP address Implemented distributed architecture by using ZeroMQ messaging library using the epmg socket type which is very much essential for the messaging pattern in the project Wrote python scripts for multithreading and multiprocessing Implement antenna status notifications for antenna Wrote scripts to identify connected antenna antenna type at initialization antenna slew elevation limit antenna state changes antenna communication failure antenna command events Create zmq publisher to publish antenna status service announcement Wrote several python unit tests using nose test framework Build automated scripts to collect and archive python coverage and consolidation doxygen comments in master builds Experience in writing scripts to send messages from different servers using Python ZMQ curve ZeroMQ twisted ZeroMQ twisted XMLRPC XMLRPC Google Proto Buffers via IPC TCP UDP sockets Wrote python scripts to parse config files Participated in Scrumrelated team activities ie daily standup sprint planning etc Involved in code reviews and bug tracking on Jira Experience with Jira Stash Confluence Followed Google Python Coding Style and PEP8 Environment Python 27 nose 137 Robot framework 30 ZeroMQ twisted ZeroMQ XMLRPC twisted XMLRPC IPC TCP UPD Linux Git Stash Jira Confluence Ubuntu 1404 PyCharm Eclipse PyDev Pylint PEP8 Python Developer HewlettPackard Sunnyvale CA April 2015 to January 2016 Project Open Stack HP Helion Responsible in development and automation of deploying and cloning virtual machines on vcenter Creation Management and Configuration of Virtual Machines Clone and Templates Responsibilities Installed VMware ESX server 4140 and created virtual machines on ESX Servers Created standard templates and deployed virtual machines from these templates Creation Management and Configuration of Virtual Machines Clone and Templates Customizing guest operating system on Virtual Machines Wrote scripts in scale out process for deploying multiple virtual machines from a single template Built task monitoring script to monitor various tasks such as poweron a virtual machine after cloning clone virtual machine and reboot virtual machine using pyvmomi Implemented script to monitor on vcenter tasks Built web crawler on Jenkin web site to get the latest build information Wrote python scripts for IP address and Mac Address validation Built python scripts to read and write JSON files Rewrote scripts to use data exchange formats like JSON and made more modular Wrote scripts to clone virtual machine on ESX from the given template name in JSON file Built scripts to deploy virtual machine on ESX when template name is not specified Wrote script to generate IP address from CIDR and write into JSON files and assign them to virtual machine while cloning Built scripts to suppress the urllib3 warning when accessing vcenter using pyvmomi Used ansible for automating cloud deployment process of various templates Integrated and involved in daily scrum meetings with both onsite and offshore team Wrote multithreading scripts to access data from different locations Wrote python scripts to assign ip addresses to vms on different networks Environment Python 33 JSON hLinux Linux Git Jira VMware vSphere 55 VMware ESX 41 KVM Python Developer HPDRC and Cyber Security Miami FL January 2014 to March 2015 Description Responsible in building automated tools to identify privacy and security issues in online geo social networks eg fake review detection private locationcentric aggregates and location verification Responsibilities Responsible for building and automation of web scraper for Google play android apps web site and urls in python with BeautifulSoup module Used Python inbuilt libraries like urllib urllib2 os multithreading and many advanced libraries to build automation libraries Implemented multithreading to reduce the time in scraping numerous android application urls Implemented automation script using Crontab in python to run the web crawler Used cURL for web scraping contents that cannot be scraped normally Worked with MySql database for querying scraped data that are dumped from CSV files Used RAnalytics for analyzing data and plotting Pie Charts Bar Charts Box plots Histograms Line Graphs Scatter plots Implemented zoom in zoom out drag and drop functionalities using JavaScript and jQuery for touch screens and cursor controls Implemented URL parser for markers to be displayed on user interface for images by using json jQuery and JavaScript Knowledge in cyberattacks and vulnerabilities Convert flash to JavaScript for TerraFlycom website Environment Python R BeautifulSoup MySQL Linux HTML5 XHTML CSS3 AJAX JavaScript Apache Web Server Git Software Developer Symbiosys Visakhapatnam May 2010 to December 2013 Description The aim of the project is to redesign website create dynamic web pages for online banking system Configure database to maintain the entire customer Responsibilities Responsibilities include database design code profiling and extensive documentation Designed and implemented a dynamic image rendering which is consumed by PHP JavaScript Designed a C driven application from the ground up that allows system administrators to configure and monitor an entire environment Used advanced techniques such as dynamic data binding Introduced DHTMLbased smart form submission engine which validated client side data and all dependencies without reloading HTML page Developed JavaScript API used by clients to integrate the application with other modules Increased developer productivity by using efficient programming methodologies and local development Involved in verification and testing in order to set MySQL database free from SQL injections Environment C C JavaScript 15 MySQL Apache Server Linux and UNIX Shell",
    "unique_id": "5075d600-a7e1-49f5-8758-47fd660ce462"
}