{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer GE CA San Jose CA Around 5 Years of experience in Analysis Design Development Management and Implementation of various standalone clientserver enterprise applications Experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter OpenCV Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm emacs Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Knowledge in various frontend tools like HTML DHTML CSS JavaScript XML jQuery Angular JS and AJAX Proficient in Front end development experience using HTML XML CSS jQuery JSON and JavaScript CSS Bootstrap Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Knowledge of reporting tools like Tableau Microsoft Excel Report Lab Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Good Knowledge in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Strong expertise in development of webbased applications using Python Java HTML XML KML Angular JS CSS DHTML JavaScript JSON and jQuery Responsible for design and development of Web Pages using PHP HTML JOOMLA CSS including Ajax controls and XML Responsible for designing developing testing deploying and maintaining the web application Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using Django Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Chef Docker AWS etc Have good knowledge on NoSQL databases like Mongo DB and SQL databases like MySQL PostgreSQL  Good experience in software development using Python and using its libraries and modules like NumPy Pandas SciPy Pickle Jupiter SciPy Pythontwitter Matplotlib urllib2 for data analytics and rapid development Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery that meets accessibility and web browser standards for car dealerships websites Experienced in NoSQL technologies like MongoDB Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Experienced in installing configuring modifying testing and deploying applications with Apache Experience in cross browser and crossdevice compatibility check and thoroughly performed unit testing using Jasmine Mocha JUnit and Karma Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Experienced in implementing Microservices Service Oriented Architecture SOA with XML based Web Services SOAPWSDL using Top Down and Bottom Up approach Experience in Implementation of MVC MVW architecture using Servlet Django and RESTful SOAP web service and SOAPUI Handson experience in exposing REST based services through DataPower including various message formats including XML JSON Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Working Knowledge of Pandas NumPy SciPy Good working knowledge of Deep Learning Python libraries Familiar with Python modules like NumPy Matplotlib Pickle Pandas SciPy PyTables PyQt etc for generating complex graphical data creation of histograms etc Experienced in developing webbased applications using Python DJANGO HTML DHTML JavaScript AWS and jQuery Extensively worked with automation tools like Jenkins for continuous integration and continuous delivery CICD and to implement the EndtoEnd Automation Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Experienced in working with SQL Alchemy in connecting with databases like MongoDB Oracle and MySQL Good knowledge on NoSQL databases such as MongoDB Elasticsearch and Dynamo DB Oracle DB Work Experience Python Developer GE CA January 2019 to Present Responsibilities Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed and managed build and release methodologies using Wit be Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Build an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Build servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for Microservices and continuous deployment Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL Dynamo DB and MySQL database Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST and SOAP Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Extensively used Django micro service framework for simple request and response Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in development of Web Services using REST for sending and getting data from the external interface in the JSON format Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created Restful backend service deployed on Libode cloud VPSs using Flask web framework and SQL Alchemy ORM for data persistence Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Build SQL queries for performing various CRUD operations like create update read and delete Installed Wit be Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support Maintaining the scripts using the version Control Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Python Developer Pfizer NY January 2018 to December 2018 Responsibilities Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery that meets accessibility and web browser standards for car dealerships websites Track record of increasing responsibility in the business software design Microservices systems analysisdevelopment and full lifecycle project management Implemented the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Worked with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Equally comfortable working within the Django ORM or writing native SQL in SQL Server Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Developed a module using SpringREST consumed by the IVR Service to obtain the claim registration details from LDAP Implementation of front end JSPJSF and backing beans Developed multithreaded web services using Cherrypie bottlePy framework and leveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks Worked on migration of Splunk to AWS cloud instances Involved in standardizing Splunk forwarded deployment configuration and maintenance across UNIX and Windows platforms Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms Used SOAP and RESTful API for information extraction Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Automated builds using Maven and scheduled automated nightly builds using Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on various environment Python MYSQL Apache CSS git DHTML HTML JavaScript Shell Scripts Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Installed JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Configure AWS VPC with public and private subnets configured Routing tables Internet gateway ACLs Security groups End to End solution for hosting the web application on AWS cloud with integration to S3 buckets Managing AWS Infra and automation with CLI API Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Web services Worked on project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Maintained web servers Tomcat and Apache HTTP Web servers in UNIX and wrote SQL scripts in Abinitio for Data analysis Build custom transformations using AWS Glue Lambda and Kinesis helped reduce costs in ETL tool onpremise infrastructure Used Terraform for managing the infrastructure through the terminal sessions and executing scripts in creating alarms and notifications for EC2 instances using AWS Cloud Watch Wrote Ansible Playbooks for various applications and deploying them in AWS using Terraform Built webservices using SOAP that allowed integrating the business application with the legacy applications and facilitates for future applications Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and REST API calls Python Developer HSBC NY September 2013 to December 2016 Responsibilities Wrote with objectoriented Python SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Developed features in an Agile environment using Python Django HTML CSS Bootstrap Worked on NoSQL databases such as MongoDB Elasticsearch and Oracle DB Build client pages using HTML JSP XML to interact with users and the business logic is implemented using Servlets and Java Beans Build numerous Lambda functions using python and automated the process using the event created Developed administrative interfaces with the technologies of JSP JSF Emberjs backbonejs AJAX Involved in the complete endtoend CICD process building and deploying the application on Apache servers using Jenkins Deploy and Release Involved in the CICD pipeline management for managing the weekly releases Worked on packages like socket REST API Django Implemented Bash Perl Python scripting to Automate many daytoday tasks Designed and developed carrier selection and product selection web pages using HTML Struts Servlets Worked with CICD to deploy web application and run test build using Jenkins Bamboo Implemented REST APIs in Python using microframework like SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Aws S3 Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive webbased solutions Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Developed Python based API RESTful Web Service to track the events and perform analysis using Django Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used REST and SOAPUI for testing web service for serverside changes Deployed and tested different modules in Docker containers and GIT Used multiple containers and managed the load balancing between all the containers using NGINX Worked in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Migrated applications to the AWS cloud Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Education Masters Skills Visual studio Android studio Django Git Html Javascript CSS PHP Jquery MYSQL",
    "entities": [
        "CSS HTML JavaScript",
        "Working Knowledge",
        "Python Flask",
        "Implementation of MVC MVW",
        "Python SQL Beautiful Soup httplib2 Jinja2",
        "Managing AWS Infra",
        "SQL Server Created Restful",
        "NGINX Worked",
        "Implemented Docker",
        "Android",
        "the EndtoEnd Automation",
        "CloudWatch Created Terraform",
        "UNIX",
        "GitHub Nexus",
        "AWS ECS",
        "LAMP Linux",
        "GIT Repository Setup",
        "OpenStack",
        "Oracle DB Build",
        "Amazon Web Services AWS",
        "Ajax",
        "XML",
        "SOAP",
        "Developed Simple Object Access Protocol",
        "Chef Serverworkstation",
        "AJAX Involved",
        "Shell",
        "Python MYSQL Apache CSS",
        "Implemented the Microservice",
        "Implemented Terraform",
        "Developed Restful Microservices",
        "Automated",
        "Amazon",
        "Spring Boot",
        "Maven Repository and Deployment",
        "AWS AMIs Involved",
        "Control Involved",
        "AWS Lambda and",
        "Python Script",
        "Python",
        "Developed",
        "Python Developer HSBC NY",
        "CSS Bootstrap",
        "AWS S3",
        "Cherrypie",
        "Django",
        "Puppet",
        "Servlets",
        "Jenkins on Scrumbasis Containerized",
        "ImportExport",
        "AWS Cloud",
        "XML Responsible",
        "PythonPHP",
        "San Jose",
        "Karma Good",
        "Kubernetes Worked",
        "Development and Enhancement Projects Experienced",
        "Linux",
        "API RESTful Web Service",
        "Kinesis",
        "Flask",
        "Worked",
        "Automate",
        "Jenkins Built Jenkins",
        "HTML CSS jQuery",
        "HTML XML CSS jQuery JSON",
        "Docker",
        "Amazon SES",
        "Terraform Built",
        "RDS",
        "CLI",
        "AJAX Proficient",
        "HerokuJenkins",
        "MVC",
        "Flask SQL Alchemy",
        "UnixLinux",
        "PythonDjango",
        "SQL PHP",
        "Puppet for Microservices",
        "GIT",
        "DataPower",
        "log analytics full text search",
        "CSV",
        "REDIS",
        "API",
        "Developed Microservices",
        "Web Services",
        "Terraform",
        "QA",
        "IAM",
        "Business Users",
        "AWS",
        "Jenkins Docker Ansible",
        "WAMP Windows Apache",
        "Libode",
        "jQuery Responsible",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "HTML5 CSS JavaScript",
        "HTML JSP XML",
        "SQL PostgreSQL Handson",
        "Apache Experience",
        "Skills Visual",
        "HTML Struts Servlets Worked",
        "SQL",
        "Jenkins CICD pipelines",
        "JSP JSF Emberjs",
        "lPythonspan",
        "Kubernetes",
        "Administrators",
        "Oracle DB Work Experience Python",
        "Amazon Web Services AWS EC2",
        "SQL Alchemy",
        "JSPJSF",
        "Python OOP Worked",
        "Using Chef",
        "CICD",
        "Created Restful",
        "Tableau Microsoft Excel Report Lab Extensive",
        "GIT SVN",
        "Amazon AWS",
        "LDAP Implementation",
        "CLI API Created",
        "User Service",
        "Kubernetes Consumed",
        "Pandas",
        "ETL",
        "CRUD",
        "Design and Deployment Testing and Implementation",
        "SCM",
        "Pandas Data",
        "Maven",
        "Build",
        "Created UI",
        "JavaScript",
        "Front",
        "SDLC Requirement Analysis Design Development and Testing",
        "the IVR Service",
        "Experienced",
        "AWS Glue Lambda",
        "Big Data Experienced",
        "CSS",
        "SQL Injections Vulnerabilities Wrote",
        "jQuery",
        "PythonFlaskDjango",
        "REST Experienced",
        "Tomcat",
        "REST",
        "Analysis Design Development Management and Implementation",
        "NoSQL",
        "Tableau",
        "JavaScript CSS Bootstrap",
        "Mesos Aws S3 Involved",
        "HTMLCSSjQuery",
        "EBS",
        "Oracle SQLite PostgreSQL",
        "Django Involved",
        "Python Created",
        "Bash Created"
    ],
    "experience": "Experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter OpenCV Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm emacs Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Knowledge in various frontend tools like HTML DHTML CSS JavaScript XML jQuery Angular JS and AJAX Proficient in Front end development experience using HTML XML CSS jQuery JSON and JavaScript CSS Bootstrap Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Knowledge of reporting tools like Tableau Microsoft Excel Report Lab Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Good Knowledge in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Strong expertise in development of webbased applications using Python Java HTML XML KML Angular JS CSS DHTML JavaScript JSON and jQuery Responsible for design and development of Web Pages using PHP HTML JOOMLA CSS including Ajax controls and XML Responsible for designing developing testing deploying and maintaining the web application Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using Django Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Chef Docker AWS etc Have good knowledge on NoSQL databases like Mongo DB and SQL databases like MySQL PostgreSQL   Good experience in software development using Python and using its libraries and modules like NumPy Pandas SciPy Pickle Jupiter SciPy Pythontwitter Matplotlib urllib2 for data analytics and rapid development Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery that meets accessibility and web browser standards for car dealerships websites Experienced in NoSQL technologies like MongoDB Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Experienced in installing configuring modifying testing and deploying applications with Apache Experience in cross browser and crossdevice compatibility check and thoroughly performed unit testing using Jasmine Mocha JUnit and Karma Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Experienced in implementing Microservices Service Oriented Architecture SOA with XML based Web Services SOAPWSDL using Top Down and Bottom Up approach Experience in Implementation of MVC MVW architecture using Servlet Django and RESTful SOAP web service and SOAPUI Handson experience in exposing REST based services through DataPower including various message formats including XML JSON Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Working Knowledge of Pandas NumPy SciPy Good working knowledge of Deep Learning Python libraries Familiar with Python modules like NumPy Matplotlib Pickle Pandas SciPy PyTables PyQt etc for generating complex graphical data creation of histograms etc Experienced in developing webbased applications using Python DJANGO HTML DHTML JavaScript AWS and jQuery Extensively worked with automation tools like Jenkins for continuous integration and continuous delivery CICD and to implement the EndtoEnd Automation Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Experienced in working with SQL Alchemy in connecting with databases like MongoDB Oracle and MySQL Good knowledge on NoSQL databases such as MongoDB Elasticsearch and Dynamo DB Oracle DB Work Experience Python Developer GE CA January 2019 to Present Responsibilities Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed and managed build and release methodologies using Wit be Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Build an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Build servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for Microservices and continuous deployment Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL Dynamo DB and MySQL database Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST and SOAP Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Extensively used Django micro service framework for simple request and response Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in development of Web Services using REST for sending and getting data from the external interface in the JSON format Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created Restful backend service deployed on Libode cloud VPSs using Flask web framework and SQL Alchemy ORM for data persistence Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Build SQL queries for performing various CRUD operations like create update read and delete Installed Wit be Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support Maintaining the scripts using the version Control Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Python Developer Pfizer NY January 2018 to December 2018 Responsibilities Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery that meets accessibility and web browser standards for car dealerships websites Track record of increasing responsibility in the business software design Microservices systems analysisdevelopment and full lifecycle project management Implemented the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Worked with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Equally comfortable working within the Django ORM or writing native SQL in SQL Server Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Developed a module using SpringREST consumed by the IVR Service to obtain the claim registration details from LDAP Implementation of front end JSPJSF and backing beans Developed multithreaded web services using Cherrypie bottlePy framework and leveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks Worked on migration of Splunk to AWS cloud instances Involved in standardizing Splunk forwarded deployment configuration and maintenance across UNIX and Windows platforms Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms Used SOAP and RESTful API for information extraction Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Automated builds using Maven and scheduled automated nightly builds using Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on various environment Python MYSQL Apache CSS git DHTML HTML JavaScript Shell Scripts Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Installed JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Configure AWS VPC with public and private subnets configured Routing tables Internet gateway ACLs Security groups End to End solution for hosting the web application on AWS cloud with integration to S3 buckets Managing AWS Infra and automation with CLI API Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Web services Worked on project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Maintained web servers Tomcat and Apache HTTP Web servers in UNIX and wrote SQL scripts in Abinitio for Data analysis Build custom transformations using AWS Glue Lambda and Kinesis helped reduce costs in ETL tool onpremise infrastructure Used Terraform for managing the infrastructure through the terminal sessions and executing scripts in creating alarms and notifications for EC2 instances using AWS Cloud Watch Wrote Ansible Playbooks for various applications and deploying them in AWS using Terraform Built webservices using SOAP that allowed integrating the business application with the legacy applications and facilitates for future applications Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and REST API calls Python Developer HSBC NY September 2013 to December 2016 Responsibilities Wrote with objectoriented Python SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Developed features in an Agile environment using Python Django HTML CSS Bootstrap Worked on NoSQL databases such as MongoDB Elasticsearch and Oracle DB Build client pages using HTML JSP XML to interact with users and the business logic is implemented using Servlets and Java Beans Build numerous Lambda functions using python and automated the process using the event created Developed administrative interfaces with the technologies of JSP JSF Emberjs backbonejs AJAX Involved in the complete endtoend CICD process building and deploying the application on Apache servers using Jenkins Deploy and Release Involved in the CICD pipeline management for managing the weekly releases Worked on packages like socket REST API Django Implemented Bash Perl Python scripting to Automate many daytoday tasks Designed and developed carrier selection and product selection web pages using HTML Struts Servlets Worked with CICD to deploy web application and run test build using Jenkins Bamboo Implemented REST APIs in Python using microframework like SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Aws S3 Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive webbased solutions Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Developed Python based API RESTful Web Service to track the events and perform analysis using Django Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used REST and SOAPUI for testing web service for serverside changes Deployed and tested different modules in Docker containers and GIT Used multiple containers and managed the load balancing between all the containers using NGINX Worked in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Migrated applications to the AWS cloud Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Education Masters Skills Visual studio Android studio Django Git Html Javascript CSS PHP Jquery MYSQL",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "GE",
        "CA",
        "San",
        "Jose",
        "CA",
        "Years",
        "experience",
        "Analysis",
        "Design",
        "Development",
        "Management",
        "Implementation",
        "enterprise",
        "applications",
        "Experience",
        "software",
        "development",
        "Python",
        "libraries",
        "libraries",
        "Beautiful",
        "Soup",
        "NumPy",
        "SciPy",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "network",
        "urllib2",
        "MySQL",
        "database",
        "connectivity",
        "IDEs",
        "text",
        "Spyder",
        "PyCharm",
        "emacs",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Knowledge",
        "frontend",
        "tools",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "XML",
        "jQuery",
        "Angular",
        "JS",
        "AJAX",
        "Proficient",
        "Front",
        "end",
        "development",
        "experience",
        "HTML",
        "XML",
        "CSS",
        "jQuery",
        "JSON",
        "JavaScript",
        "CSS",
        "Bootstrap",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "MySQL",
        "PostgreSQL",
        "database",
        "Knowledge",
        "tools",
        "Tableau",
        "Microsoft",
        "Excel",
        "Report",
        "Lab",
        "experience",
        "web",
        "applications",
        "LAMP",
        "Linux",
        "Apache",
        "MY",
        "SQL",
        "PHP",
        "Environments",
        "Good",
        "Knowledge",
        "Amazon",
        "AWS",
        "concepts",
        "EMR",
        "EC2",
        "web",
        "services",
        "processing",
        "Big",
        "Data",
        "design",
        "patterns",
        "MVC",
        "Django",
        "Flask",
        "application",
        "Apache",
        "tomcat",
        "server",
        "applications",
        "Docker",
        "Strong",
        "expertise",
        "development",
        "applications",
        "Python",
        "Java",
        "HTML",
        "XML",
        "KML",
        "Angular",
        "JS",
        "CSS",
        "DHTML",
        "JavaScript",
        "JSON",
        "jQuery",
        "Responsible",
        "design",
        "development",
        "Web",
        "Pages",
        "PHP",
        "HTML",
        "JOOMLA",
        "CSS",
        "controls",
        "XML",
        "testing",
        "web",
        "application",
        "Experience",
        "Design",
        "code",
        "operations",
        "data",
        "analysis",
        "web",
        "applications",
        "Python",
        "Experience",
        "Setup",
        "AWS",
        "EC2",
        "instance",
        "Amazon",
        "SES",
        "email",
        "delivery",
        "handson",
        "experience",
        "SCM",
        "tools",
        "GIT",
        "containers",
        "Docker",
        "Backend",
        "applications",
        "PythonFlaskDjango",
        "SQL",
        "PostgreSQL",
        "Handson",
        "experience",
        "reviewing",
        "requirements",
        "architecture",
        "documents",
        "test",
        "design",
        "documents",
        "quality",
        "analysis",
        "audits",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "AWS",
        "Python",
        "REST",
        "API",
        "framework",
        "spring",
        "frame",
        "work",
        "Django",
        "Good",
        "experience",
        "web",
        "applications",
        "MVT",
        "architecture",
        "Django",
        "Flask",
        "web",
        "application",
        "frameworks",
        "understanding",
        "Django",
        "ORM",
        "SQL",
        "Alchemy",
        "Experience",
        "AWS",
        "Cloud",
        "services",
        "EC2",
        "S3",
        "EBS",
        "VPC",
        "ELB",
        "Route53",
        "Cloud",
        "Watch",
        "Security",
        "Groups",
        "Cloud",
        "Trail",
        "IAM",
        "Cloud",
        "Front",
        "Snowball",
        "RDS",
        "Glacier",
        "Responsible",
        "Python",
        "code",
        "lists",
        "Python",
        "list",
        "comprehension",
        "Python",
        "OOP",
        "POSTMAN",
        "API",
        "testing",
        "REST",
        "APIs",
        "User",
        "Model",
        "application",
        "Expertise",
        "test",
        "automation",
        "delivery",
        "web",
        "applications",
        "client",
        "server",
        "applications",
        "web",
        "servicesREST",
        "APIs",
        "Python",
        "Knowledge",
        "DevOps",
        "Environment",
        "automation",
        "engineer",
        "technologies",
        "applications",
        "GIT",
        "SVN",
        "Puppet",
        "Chef",
        "Docker",
        "AWS",
        "knowledge",
        "NoSQL",
        "databases",
        "Mongo",
        "DB",
        "SQL",
        "MySQL",
        "PostgreSQL",
        "experience",
        "software",
        "development",
        "Python",
        "libraries",
        "modules",
        "NumPy",
        "Pandas",
        "SciPy",
        "Pickle",
        "Jupiter",
        "SciPy",
        "Pythontwitter",
        "Matplotlib",
        "urllib2",
        "data",
        "analytics",
        "development",
        "Consumed",
        "REST",
        "Microservices",
        "Rest",
        "template",
        "APIs",
        "HTML",
        "CSS",
        "jQuery",
        "accessibility",
        "web",
        "browser",
        "standards",
        "car",
        "dealerships",
        "websites",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Redis",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "MySQL",
        "knowledge",
        "phases",
        "SDLC",
        "Requirement",
        "Analysis",
        "Design",
        "Development",
        "Testing",
        "Development",
        "Enhancement",
        "Projects",
        "types",
        "testing",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "User",
        "acceptance",
        "testing",
        "testing",
        "applications",
        "Apache",
        "Experience",
        "cross",
        "browser",
        "compatibility",
        "check",
        "unit",
        "testing",
        "Jasmine",
        "Mocha",
        "JUnit",
        "Karma",
        "Good",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "environment",
        "knowledge",
        "AWS",
        "services",
        "Elastic",
        "Compute",
        "Cloud",
        "EC2",
        "Elastic",
        "Loadbalancers",
        "Elastic",
        "Container",
        "Service",
        "Docker",
        "Containers",
        "S3",
        "Elastic",
        "Beanstalk",
        "Cloud",
        "Front",
        "Elastic",
        "Filesystem",
        "RDS",
        "DMS",
        "VPC",
        "Route53",
        "CloudWatch",
        "CloudTrail",
        "CloudFormation",
        "IAM",
        "Microservices",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "XML",
        "Web",
        "Services",
        "SOAPWSDL",
        "Top",
        "Down",
        "Bottom",
        "approach",
        "Experience",
        "Implementation",
        "MVC",
        "MVW",
        "architecture",
        "Servlet",
        "Django",
        "SOAP",
        "web",
        "service",
        "SOAPUI",
        "Handson",
        "experience",
        "REST",
        "services",
        "DataPower",
        "message",
        "formats",
        "XML",
        "JSON",
        "Hands",
        "tools",
        "GitGitHub",
        "Ansible",
        "Artifactory",
        "Jenkins",
        "OpenStack",
        "Balance",
        "NodeProxy",
        "VMWare",
        "Open",
        "Source",
        "software",
        "testing",
        "delivery",
        "pipelines",
        "Working",
        "Knowledge",
        "Pandas",
        "NumPy",
        "SciPy",
        "knowledge",
        "Deep",
        "Learning",
        "Python",
        "Python",
        "modules",
        "NumPy",
        "Matplotlib",
        "Pickle",
        "SciPy",
        "PyTables",
        "PyQt",
        "data",
        "creation",
        "histograms",
        "applications",
        "Python",
        "DJANGO",
        "HTML",
        "DHTML",
        "JavaScript",
        "AWS",
        "jQuery",
        "automation",
        "tools",
        "Jenkins",
        "integration",
        "delivery",
        "CICD",
        "EndtoEnd",
        "Automation",
        "Experience",
        "web",
        "services",
        "WSDL",
        "SOAP",
        "REST",
        "web",
        "services",
        "python",
        "programming",
        "language",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "REST",
        "SQL",
        "Alchemy",
        "databases",
        "MongoDB",
        "Oracle",
        "MySQL",
        "knowledge",
        "NoSQL",
        "databases",
        "MongoDB",
        "Elasticsearch",
        "Dynamo",
        "DB",
        "Oracle",
        "DB",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "GE",
        "CA",
        "January",
        "Present",
        "Responsibilities",
        "testing",
        "framework",
        "commandline",
        "tests",
        "Linux",
        "Objected",
        "Oriented",
        "Perl",
        "tests",
        "Python",
        "Created",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "development",
        "Python",
        "APIs",
        "array",
        "structures",
        "Processor",
        "failure",
        "point",
        "business",
        "process",
        "automation",
        "applications",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Chef",
        "Elasticsearch",
        "Logstash",
        "Kibana",
        "ELK",
        "log",
        "analytics",
        "text",
        "search",
        "application",
        "monitoring",
        "integration",
        "AWS",
        "Lambda",
        "CloudWatch",
        "Created",
        "Terraform",
        "scripts",
        "EC2",
        "instances",
        "Elastic",
        "Load",
        "balancers",
        "S3",
        "buckets",
        "Terraform",
        "AWS",
        "infrastructure",
        "servers",
        "configuration",
        "management",
        "tools",
        "Chef",
        "Ansible",
        "Designed",
        "build",
        "methodologies",
        "Wit",
        "Tool",
        "API",
        "system",
        "deployment",
        "http",
        "server",
        "Amazon",
        "AWS",
        "architecture",
        "Apache",
        "CouchDB",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "programming",
        "automations",
        "Jenkins",
        "Ansible",
        "UnixLinux",
        "OS",
        "cloud",
        "Docker",
        "Build",
        "AWS",
        "REDIS",
        "server",
        "data",
        "analysis",
        "interaction",
        "Business",
        "Users",
        "UATSIT",
        "Developed",
        "Restful",
        "Microservices",
        "Django",
        "AWS",
        "servers",
        "EBS",
        "EC2",
        "CICD",
        "pipeline",
        "dev",
        "QA",
        "prod",
        "environments",
        "Jenkins",
        "Bamboo",
        "Docker",
        "Designed",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "applications",
        "AWS",
        "stack",
        "EC2",
        "Route53",
        "S3",
        "RDS",
        "Cloud",
        "Formation",
        "Cloud",
        "Watch",
        "SQS",
        "IAM",
        "highavailability",
        "fault",
        "tolerance",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "RDS",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "network",
        "architecture",
        "AWS",
        "subnets",
        "Internet",
        "Gateway",
        "Route",
        "Perform",
        "S3",
        "buckets",
        "creation",
        "storage",
        "S3",
        "buckets",
        "policies",
        "IAM",
        "policies",
        "AWS",
        "ImportExport",
        "amounts",
        "data",
        "AWS",
        "storage",
        "devices",
        "transport",
        "POC",
        "application",
        "service",
        "architecture",
        "architecture",
        "Docker",
        "container",
        "technology",
        "Kubernetes",
        "REST",
        "API",
        "integration",
        "deployments",
        "Jenkins",
        "Docker",
        "Ansible",
        "AWS",
        "Cloud",
        "Templates",
        "Docker",
        "images",
        "Docker",
        "Hub",
        "solutions",
        "Docker",
        "Jenkins",
        "Git",
        "Puppet",
        "Microservices",
        "deployment",
        "NoSQL",
        "technologies",
        "MongoDB",
        "Cassandra",
        "databases",
        "Oracle",
        "SQLite",
        "PostgreSQL",
        "Dynamo",
        "DB",
        "MySQL",
        "database",
        "Implemented",
        "Docker",
        "containers",
        "images",
        "applications",
        "provision",
        "slaves",
        "Jenkins",
        "CICD",
        "pipelines",
        "Development",
        "code",
        "Python",
        "code",
        "Companys",
        "Source",
        "control",
        "Bitbucket",
        "Companys",
        "Sever",
        "CICD",
        "procedures",
        "Jenkins",
        "Scrumbasis",
        "Containerized",
        "ETL",
        "REST",
        "services",
        "AWS",
        "ECS",
        "CICD",
        "Jenkins",
        "pipe",
        "data",
        "exchange",
        "integration",
        "customers",
        "thirdparty",
        "systems",
        "CSV",
        "XLS",
        "XML",
        "DBF",
        "REST",
        "Developed",
        "modules",
        "CSV",
        "XML",
        "data",
        "files",
        "REST",
        "services",
        "data",
        "Django",
        "micro",
        "service",
        "framework",
        "request",
        "response",
        "Developed",
        "Microservices",
        "REST",
        "APIs",
        "data",
        "suppliers",
        "network",
        "traffic",
        "data",
        "servers",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "development",
        "Web",
        "Services",
        "REST",
        "data",
        "interface",
        "format",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "Restful",
        "backend",
        "service",
        "Libode",
        "cloud",
        "VPSs",
        "Flask",
        "web",
        "framework",
        "SQL",
        "Alchemy",
        "ORM",
        "data",
        "persistence",
        "UI",
        "JavaScript",
        "HTML5",
        "data",
        "management",
        "system",
        "MySQL",
        "Build",
        "SQL",
        "CRUD",
        "operations",
        "update",
        "read",
        "Installed",
        "Wit",
        "Python",
        "Jira",
        "test",
        "Rail",
        "part",
        "server",
        "setups",
        "AWS",
        "server",
        "deployment",
        "data",
        "processing",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "Nexus",
        "Maven",
        "AWS",
        "AMIs",
        "lifecycle",
        "projects",
        "Design",
        "Deployment",
        "Testing",
        "Implementation",
        "scripts",
        "version",
        "Control",
        "Web",
        "application",
        "penetration",
        "testing",
        "process",
        "web",
        "process",
        "SQL",
        "Injections",
        "Vulnerabilities",
        "Wrote",
        "automate",
        "Python",
        "Script",
        "testing",
        "program",
        "machine",
        "detection",
        "alarm",
        "experience",
        "Amazon",
        "cloud",
        "Developed",
        "UI",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "webpages",
        "HTML5",
        "CSS",
        "JavaScript",
        "AJAX",
        "data",
        "HTML",
        "format",
        "data",
        "files",
        "Python",
        "Developer",
        "Pfizer",
        "NY",
        "January",
        "December",
        "Responsibilities",
        "Consumed",
        "REST",
        "Microservices",
        "Rest",
        "template",
        "APIs",
        "HTML",
        "CSS",
        "jQuery",
        "accessibility",
        "web",
        "browser",
        "standards",
        "car",
        "dealerships",
        "websites",
        "Track",
        "record",
        "responsibility",
        "business",
        "software",
        "design",
        "Microservices",
        "systems",
        "analysisdevelopment",
        "lifecycle",
        "project",
        "management",
        "Microservice",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "deployments",
        "Docker",
        "Docker",
        "Docker",
        "Hub",
        "Docker",
        "registries",
        "Kubernetes",
        "APIs",
        "API",
        "Django",
        "REST",
        "Framework",
        "Angular",
        "Django",
        "ORM",
        "SQL",
        "SQL",
        "Server",
        "APIs",
        "functionalities",
        "application",
        "API",
        "parties",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Setup",
        "Docker",
        "Linux",
        "Jenkins",
        "Docker",
        "host",
        "module",
        "SpringREST",
        "IVR",
        "Service",
        "claim",
        "registration",
        "details",
        "LDAP",
        "Implementation",
        "end",
        "JSPJSF",
        "beans",
        "web",
        "services",
        "Cherrypie",
        "bottlePy",
        "framework",
        "architectures",
        "RabbitMQ",
        "scalability",
        "performance",
        "building",
        "Soap",
        "NumPy",
        "SciPy",
        "Matplotlib",
        "pythontwitter",
        "Pandas",
        "Data",
        "frame",
        "urlib2",
        "Python",
        "Boto3",
        "automation",
        "Ansible",
        "Terraform",
        "tasks",
        "EBS",
        "volumes",
        "AMIs",
        "scheduling",
        "Lambda",
        "functions",
        "AWS",
        "tasks",
        "migration",
        "Splunk",
        "AWS",
        "cloud",
        "instances",
        "Splunk",
        "deployment",
        "configuration",
        "maintenance",
        "UNIX",
        "Windows",
        "platforms",
        "data",
        "structures",
        "directories",
        "tuples",
        "inheritance",
        "features",
        "algorithms",
        "SOAP",
        "API",
        "information",
        "extraction",
        "databases",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "Flask",
        "SQL",
        "Alchemy",
        "PostgreSQL",
        "tools",
        "Bamboo",
        "Jira",
        "confluence",
        "configuration",
        "tool",
        "Chef",
        "Serverworkstation",
        "nodes",
        "CLI",
        "tools",
        "AWS",
        "Automated",
        "builds",
        "Maven",
        "builds",
        "Jenkins",
        "Built",
        "Jenkins",
        "pipeline",
        "microservices",
        "Docker",
        "registry",
        "Kubernetes",
        "environment",
        "Python",
        "MYSQL",
        "Apache",
        "CSS",
        "git",
        "DHTML",
        "HTML",
        "JavaScript",
        "Shell",
        "Scripts",
        "end",
        "frame",
        "CSS",
        "Bootstrap",
        "development",
        "Web",
        "applications",
        "Kubernetes",
        "platform",
        "deployment",
        "scaling",
        "operations",
        "application",
        "containers",
        "clusters",
        "hosts",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "Puppet",
        "CICD",
        "Process",
        "Configure",
        "VPC",
        "subnets",
        "Routing",
        "Internet",
        "gateway",
        "ACLs",
        "Security",
        "groups",
        "End",
        "solution",
        "web",
        "application",
        "AWS",
        "cloud",
        "integration",
        "S3",
        "buckets",
        "AWS",
        "Infra",
        "automation",
        "CLI",
        "API",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSjQuery",
        "Charts",
        "data",
        "visualization",
        "pages",
        "application",
        "features",
        "Django",
        "Framework",
        "performance",
        "SOAP",
        "Web",
        "services",
        "project",
        "deployment",
        "HerokuJenkins",
        "web",
        "services",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "AWS",
        "S3",
        "Maintained",
        "web",
        "servers",
        "Tomcat",
        "Apache",
        "HTTP",
        "Web",
        "servers",
        "UNIX",
        "SQL",
        "scripts",
        "Abinitio",
        "Data",
        "analysis",
        "Build",
        "custom",
        "transformations",
        "AWS",
        "Glue",
        "Lambda",
        "Kinesis",
        "costs",
        "ETL",
        "tool",
        "onpremise",
        "infrastructure",
        "Terraform",
        "infrastructure",
        "sessions",
        "scripts",
        "alarms",
        "notifications",
        "EC2",
        "instances",
        "AWS",
        "Cloud",
        "Watch",
        "Ansible",
        "Playbooks",
        "applications",
        "AWS",
        "Terraform",
        "webservices",
        "SOAP",
        "business",
        "application",
        "legacy",
        "applications",
        "facilitates",
        "applications",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "jQuery",
        "REST",
        "API",
        "Python",
        "Developer",
        "HSBC",
        "NY",
        "September",
        "December",
        "Responsibilities",
        "Python",
        "SQL",
        "Beautiful",
        "Soup",
        "httplib2",
        "Jinja2",
        "HTMLCSS",
        "Bootstrap",
        "jQuery",
        "Linux",
        "Sublime",
        "Text",
        "GIT",
        "features",
        "environment",
        "Python",
        "Django",
        "HTML",
        "CSS",
        "Bootstrap",
        "NoSQL",
        "databases",
        "MongoDB",
        "Elasticsearch",
        "Oracle",
        "DB",
        "Build",
        "client",
        "pages",
        "HTML",
        "JSP",
        "XML",
        "users",
        "business",
        "logic",
        "Servlets",
        "Java",
        "Beans",
        "Lambda",
        "functions",
        "python",
        "process",
        "event",
        "interfaces",
        "technologies",
        "JSP",
        "JSF",
        "Emberjs",
        "backbonejs",
        "AJAX",
        "endtoend",
        "CICD",
        "process",
        "building",
        "application",
        "Apache",
        "servers",
        "Jenkins",
        "Deploy",
        "Release",
        "CICD",
        "pipeline",
        "management",
        "releases",
        "packages",
        "socket",
        "REST",
        "API",
        "Django",
        "Bash",
        "Perl",
        "Python",
        "Automate",
        "daytoday",
        "tasks",
        "carrier",
        "selection",
        "product",
        "selection",
        "web",
        "pages",
        "HTML",
        "Struts",
        "Servlets",
        "CICD",
        "web",
        "application",
        "test",
        "build",
        "Jenkins",
        "Bamboo",
        "REST",
        "APIs",
        "Python",
        "microframework",
        "SQL",
        "Alchemy",
        "backend",
        "management",
        "data",
        "center",
        "resources",
        "OpenStack",
        "GitHub",
        "Python",
        "source",
        "code",
        "version",
        "control",
        "Jenkins",
        "build",
        "Docker",
        "containers",
        "Mesos",
        "Aws",
        "S3",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "Microservices",
        "REST",
        "APIs",
        "data",
        "suppliers",
        "network",
        "traffic",
        "data",
        "servers",
        "Python",
        "Django",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "database",
        "Model",
        "Views",
        "APIs",
        "Python",
        "solutions",
        "Simple",
        "Object",
        "Access",
        "Protocol",
        "SOAP",
        "web",
        "services",
        "applications",
        "User",
        "Service",
        "applications",
        "Representational",
        "State",
        "Transfer",
        "REST",
        "Web",
        "services",
        "APIS",
        "service",
        "Python",
        "Flask",
        "framework",
        "report",
        "application",
        "Tableau",
        "production",
        "site",
        "Apache",
        "Servers",
        "mod",
        "Python",
        "AWS",
        "Python",
        "API",
        "RESTful",
        "Web",
        "Service",
        "events",
        "analysis",
        "Django",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "REST",
        "SOAPUI",
        "testing",
        "web",
        "service",
        "serverside",
        "changes",
        "modules",
        "Docker",
        "containers",
        "GIT",
        "containers",
        "load",
        "containers",
        "NGINX",
        "JenkinsPlugins",
        "GIT",
        "Repository",
        "Setup",
        "SCM",
        "Polling",
        "Immediate",
        "Build",
        "Maven",
        "Maven",
        "Repository",
        "Deployment",
        "apps",
        "custom",
        "modules",
        "Puppet",
        "CICD",
        "Process",
        "Build",
        "servers",
        "AWS",
        "volumes",
        "EC2",
        "security",
        "groups",
        "load",
        "balancers",
        "ELBs",
        "connection",
        "applications",
        "AWS",
        "cloud",
        "web",
        "services",
        "Python",
        "Django",
        "REST",
        "framework",
        "testing",
        "regression",
        "testing",
        "integration",
        "testing",
        "communication",
        "testing",
        "Django",
        "admin",
        "site",
        "dashboard",
        "custom",
        "Django",
        "dashboard",
        "end",
        "users",
        "custom",
        "Django",
        "APIs",
        "database",
        "access",
        "Continuous",
        "Integration",
        "CI",
        "Continuous",
        "Delivery",
        "CD",
        "process",
        "implementation",
        "Jenkins",
        "Shell",
        "script",
        "Education",
        "Masters",
        "Skills",
        "Visual",
        "studio",
        "Android",
        "studio",
        "Django",
        "Git",
        "Html",
        "Javascript",
        "CSS",
        "PHP",
        "Jquery",
        "MYSQL"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T20:54:50.837804",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer GE CA San Jose CA Around 5 Years of experience in Analysis Design Development Management and Implementation of various standalone clientserver enterprise applications Experience of software development in Python libraries used libraries Beautiful Soup NumPy SciPy matplotlib pythontwitter OpenCV Pandas data frame network urllib2 MySQL dB for database connectivity and IDEs sublime text Spyder PyCharm emacs Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Knowledge in various frontend tools like HTML DHTML CSS JavaScript XML jQuery Angular JS and AJAX Proficient in Front end development experience using HTML XML CSS jQuery JSON and JavaScript CSS Bootstrap Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on MySQL and PostgreSQL database Knowledge of reporting tools like Tableau Microsoft Excel Report Lab Extensive experience in designing and implementing various web applications in both LAMP Linux Apache MY SQL PHP Environments Good Knowledge in Amazon AWS concepts like EMR and EC2 web services which provides fast and efficient processing of Big Data Experienced in design patterns such as MVC using Django Flask and deploying application on Apache tomcat server containerizing applications using Docker Strong expertise in development of webbased applications using Python Java HTML XML KML Angular JS CSS DHTML JavaScript JSON and jQuery Responsible for design and development of Web Pages using PHP HTML JOOMLA CSS including Ajax controls and XML Responsible for designing developing testing deploying and maintaining the web application Experience with Design code and debug operations reporting data analysis and web applications utilizing Python Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and handson experience on SCM tools like GIT containers like Docker etc Backend applications using PythonFlaskDjango and SQL PostgreSQL Handson experience in writing and reviewing requirements architecture documents test plans design documents quality analysis and audits Familiar with JSON based REST Web services and Amazon Web services AWS and Responsible for setting up Python REST API framework and spring frame work using Django Good experience in developing web applications implementing MVT architecture using Django Flask web application frameworks with good understanding of Django ORM and SQL Alchemy Experience in AWS Cloud services such as EC2 S3 EBS VPC ELB Route53 Cloud Watch Security Groups Cloud Trail IAM Cloud Front Snowball RDS and Glacier Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP Worked with POSTMAN for API testing Developed REST APIs and created User Model for application Expertise in test automation and continuous delivery of web applications client server applications web servicesREST APIs Testing with Python Having working Knowledge in DevOps Environment as an automation engineer on various technologies applications like GIT SVN Puppet Chef Docker AWS etc Have good knowledge on NoSQL databases like Mongo DB and SQL databases like MySQL PostgreSQL SQLite3 Good experience in software development using Python and using its libraries and modules like NumPy Pandas SciPy Pickle Jupiter SciPy Pythontwitter Matplotlib urllib2 for data analytics and rapid development Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery that meets accessibility and web browser standards for car dealerships websites Experienced in NoSQL technologies like MongoDB Redis and relational databases like Oracle SQLite PostgreSQL and MySQL databases Good knowledge in various phases of SDLC Requirement Analysis Design Development and Testing on various Development and Enhancement Projects Experienced in various types of testing such as Unit testing Integration testing User acceptance testing Functional testing Experienced in installing configuring modifying testing and deploying applications with Apache Experience in cross browser and crossdevice compatibility check and thoroughly performed unit testing using Jasmine Mocha JUnit and Karma Good experience in Amazon Web Services AWS environment and good knowledge of AWS services like Elastic Compute Cloud EC2 Elastic Loadbalancers Elastic Container Service Docker Containers S3 Elastic Beanstalk Cloud Front Elastic Filesystem RDS DMS VPC Route53 CloudWatch CloudTrail CloudFormation IAM Experienced in implementing Microservices Service Oriented Architecture SOA with XML based Web Services SOAPWSDL using Top Down and Bottom Up approach Experience in Implementation of MVC MVW architecture using Servlet Django and RESTful SOAP web service and SOAPUI Handson experience in exposing REST based services through DataPower including various message formats including XML JSON Hands on with tools GitGitHub Ansible Artifactory Jenkins OpenStack Balance NodeProxy VMWare and Open Source software to build automated testing and delivery pipelines Working Knowledge of Pandas NumPy SciPy Good working knowledge of Deep Learning Python libraries Familiar with Python modules like NumPy Matplotlib Pickle Pandas SciPy PyTables PyQt etc for generating complex graphical data creation of histograms etc Experienced in developing webbased applications using Python DJANGO HTML DHTML JavaScript AWS and jQuery Extensively worked with automation tools like Jenkins for continuous integration and continuous delivery CICD and to implement the EndtoEnd Automation Experience in developing web services WSDL SOAP and REST and consuming web services with python programming language Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF and REST Experienced in working with SQL Alchemy in connecting with databases like MongoDB Oracle and MySQL Good knowledge on NoSQL databases such as MongoDB Elasticsearch and Dynamo DB Oracle DB Work Experience Python Developer GE CA January 2019 to Present Responsibilities Developed automated testing framework for commandline based tests on Linux using Objected Oriented Perl and for seleniumbased tests using Python Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging Achieved business process automation via applications developed using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Using Chef deployed and configured Elasticsearch Logstash and Kibana ELK for log analytics full text search application monitoring in integration with AWS Lambda and CloudWatch Created Terraform scripts for EC2 instances Elastic Load balancers and S3 buckets Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible Designed and managed build and release methodologies using Wit be Tool Designed and managed API system deployment using fast http server and Amazon AWS architecture Used Apache CouchDB NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Implemented programming automations using Jenkins and Ansible on UnixLinux based OS over cloud like Docker Build an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UATSIT Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2 Involved in CICD pipeline for deploying to dev QA and prod environments using Jenkins Bamboo and Docker Designed configured and deployed Amazon Web Services AWS for applications utilizing the AWS stack Including EC2 Route53 S3 RDS Cloud Formation Cloud Watch SQS IAM focusing on highavailability fault tolerance and autoscaling Build servers using AWS Importing volumes launching EC2 RDS creating security groups autoscaling load balancers ELBs in the defined virtual private connection Created network architecture on AWS VPC subnets Internet Gateway Route Perform S3 buckets creation configured the storage on S3 buckets policies and the IAM rolebased policies AWS ImportExport accelerates moving large amounts of data into and out of AWS using portable storage devices for transport Worked on creating and documenting POC for helping migrate the current application to micro service architecture The architecture included Docker as the container technology with Kubernetes and worked on with REST API Automated the continuous integration and deployments using Jenkins Docker Ansible and AWS Cloud Templates Created Docker images uploaddownload in and out from the Docker Hub Designed developed implemented and maintained solutions for using Docker Jenkins Git and Puppet for Microservices and continuous deployment Worked on NoSQL technologies like MongoDB Cassandra and relational databases like Oracle SQLite PostgreSQL Dynamo DB and MySQL database Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CICD pipelines Development of code in Python and move developed code into Companys Source control Bitbucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Containerized and Deployed the ETL and REST services on AWS ECS through the CICD Jenkins pipe Organized data exchange and integration with customers and thirdparty systems using CSV XLS XML DBF JSON REST and SOAP Developed and maintained parsing modules which read CSV XML and JSON data from files and other REST services processed the data Extensively used Django micro service framework for simple request and response Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Involved in development of Web Services using REST for sending and getting data from the external interface in the JSON format Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Created Restful backend service deployed on Libode cloud VPSs using Flask web framework and SQL Alchemy ORM for data persistence Created UI using JavaScript and HTML5 Designed and developed data management system using MySQL Build SQL queries for performing various CRUD operations like create update read and delete Installed Wit be Python Jira test Rail as part of server setups Built AWS server for deployment and data processing Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub Nexus Maven and AWS AMIs Involved in entire lifecycle of the projects including Design and Deployment Testing and Implementation and support Maintaining the scripts using the version Control Involved in Web application penetration testing process web crawling process to detect and exploit SQL Injections Vulnerabilities Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud Developed UI using CSS HTML JavaScript AngularJS jQuery and JSON Developed dynamic webpages through HTML5 CSS JavaScript and AJAX Extracted the actual data of HTML format and predicted raw data interpreted and stored predicted one in wellorganized JSON files Python Developer Pfizer NY January 2018 to December 2018 Responsibilities Consumed REST based Microservices with Rest template based on RESTful APIs and designed developed and tested HTML CSS jQuery that meets accessibility and web browser standards for car dealerships websites Track record of increasing responsibility in the business software design Microservices systems analysisdevelopment and full lifecycle project management Implemented the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Worked with containerbased deployments using Docker working with Docker images Docker Hub and Docker registries and Kubernetes Consumed external APIs and wrote RESTful API using Django REST Framework and Angular Equally comfortable working within the Django ORM or writing native SQL in SQL Server Created Restful APIs to integrate and enhance functionalities of the application Also Utilized Restful API in communicating with third parties Worked on creating the Docker containers and Docker consoles for managing the application life cycle Setup Docker on Linux and configured Jenkins to run under Docker host Developed a module using SpringREST consumed by the IVR Service to obtain the claim registration details from LDAP Implementation of front end JSPJSF and backing beans Developed multithreaded web services using Cherrypie bottlePy framework and leveraging queuing architectures with RabbitMQ for scalability performance and building also involving Beautiful Soap NumPy SciPy Matplotlib pythontwitter Pandas Data frame urlib2 libraries Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks Worked on migration of Splunk to AWS cloud instances Involved in standardizing Splunk forwarded deployment configuration and maintenance across UNIX and Windows platforms Used data structures like directories tuples objectoriented classbased inheritance features for making complex algorithms Used SOAP and RESTful API for information extraction Designed and maintained databases using Python and developed Pythonbased API RESTful Web Service using Flask SQL Alchemy and PostgreSQL Worked on Atlassian tools like Bamboo Jira and confluence Installed and configured configuration tool such as Chef Serverworkstation and nodes via CLI tools to AWS nodes Automated builds using Maven and scheduled automated nightly builds using Jenkins Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes Worked on various environment Python MYSQL Apache CSS git DHTML HTML JavaScript Shell Scripts Worked on front end frame works like CSS Bootstrap for development of Web applications Launched Kubernetes to provide a platform for automating deployment scaling and operations of application containers across clusters of hosts Installed JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Configure AWS VPC with public and private subnets configured Routing tables Internet gateway ACLs Security groups End to End solution for hosting the web application on AWS cloud with integration to S3 buckets Managing AWS Infra and automation with CLI API Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSjQuery and High Charts for data visualization of the served pages Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Web services Worked on project deployment using HerokuJenkins and using web services like Amazon Web Services AWS EC2 and AWS S3 Maintained web servers Tomcat and Apache HTTP Web servers in UNIX and wrote SQL scripts in Abinitio for Data analysis Build custom transformations using AWS Glue Lambda and Kinesis helped reduce costs in ETL tool onpremise infrastructure Used Terraform for managing the infrastructure through the terminal sessions and executing scripts in creating alarms and notifications for EC2 instances using AWS Cloud Watch Wrote Ansible Playbooks for various applications and deploying them in AWS using Terraform Built webservices using SOAP that allowed integrating the business application with the legacy applications and facilitates for future applications Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap jQuery and REST API calls Python Developer HSBC NY September 2013 to December 2016 Responsibilities Wrote with objectoriented Python SQL Beautiful Soup httplib2 Jinja2 HTMLCSS Bootstrap jQuery Linux Sublime Text GIT Developed features in an Agile environment using Python Django HTML CSS Bootstrap Worked on NoSQL databases such as MongoDB Elasticsearch and Oracle DB Build client pages using HTML JSP XML to interact with users and the business logic is implemented using Servlets and Java Beans Build numerous Lambda functions using python and automated the process using the event created Developed administrative interfaces with the technologies of JSP JSF Emberjs backbonejs AJAX Involved in the complete endtoend CICD process building and deploying the application on Apache servers using Jenkins Deploy and Release Involved in the CICD pipeline management for managing the weekly releases Worked on packages like socket REST API Django Implemented Bash Perl Python scripting to Automate many daytoday tasks Designed and developed carrier selection and product selection web pages using HTML Struts Servlets Worked with CICD to deploy web application and run test build using Jenkins Bamboo Implemented REST APIs in Python using microframework like SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed Used GitHub for Python source code version control Jenkins for automating the build Docker containers and deploying in Mesos Aws S3 Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers Used Python and Django for XML JSON processing data exchange and business logic implementation Built database Model Views and APIs using Python for interactive webbased solutions Developed Simple Object Access Protocol SOAP based web services for different applications called User Service and other applications using Representational State Transfer REST based Web services Involved in Developing a Restful APIS service using Python Flask framework Worked on a resulting report of the application and Tableau reports Deployed production site using Apache Servers with mod Python and AWS Developed Python based API RESTful Web Service to track the events and perform analysis using Django Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Used REST and SOAPUI for testing web service for serverside changes Deployed and tested different modules in Docker containers and GIT Used multiple containers and managed the load balancing between all the containers using NGINX Worked in Installing JenkinsPlugins for GIT Repository Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CICD Process Build servers using AWS importing volumes launching EC2 creating security groups autoscaling load balancers ELBs in the defined virtual private connection Migrated applications to the AWS cloud Developed the backend web services using Python and Django REST framework Performing Functional testing regression testing integration testing and communication testing Configured the Django admin site dashboard and created a custom Django dashboard for end users with custom look and feel Used Django APIs for database access Involved in Continuous Integration CI and Continuous Delivery CD process implementation using Jenkins along with Shell script Education Masters Skills Visual studio Android studio Django Git Html Javascript CSS PHP Jquery MYSQL",
    "unique_id": "86cf3661-3dc6-47dc-936b-aa5cb59fdf10"
}