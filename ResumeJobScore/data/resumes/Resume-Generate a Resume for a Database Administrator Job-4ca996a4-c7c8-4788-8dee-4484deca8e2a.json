{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Paychex Webster NY Around 8 years of experience in all phases of Software Development Life Cycle SDLC which includes Analysis Design Development Implementation and Testing of webbased applications using the Python DjangoFlask technologies Good knowledge on both Agile development process and SCRUM Experienced in UI Design and Development using HTML5 CSS3 JavaScript jQuery Bootstrap and AJAX that follows W3C Web standards successfully managing all facets of application development Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Implemented different python libraries Beautiful Soup NumPy scipy pytables matplotlib pythontwitter Pandas data frame Pyvmomi Fabric and urllib2 in various tasks Experience on clientside JavaScript frameworks AngularJS and Angular 2 Experience in developing serverside JavaScript using NodeJS and Express JS Expert in optimizing the performance of SQL DB2 and PLSQL queries Expertise to interact with databases using ORM frameworks like Django SQLAlchemy frameworks Had strong experience in developing applications with python frame works such as Django and Flask Good experience with Oracle 8i9i10g PLSQL Stored Procedures Expert level skills on Python like Parallel processing Worked on various Message queues like RabbitMQ and Kafka Experienced in building micro services using flask webservices Used Maven as a build tool and Jenkins for monitoring the build status of the project Had experience in developing RESTful Services with data representation in different formats such as JSON Had good knowledge on different databases like MySQL Oracle 13c11g Microsoft SQL Server NoSQL Mongo DB Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Extensive experience in developing applications using Java API Swing HTML 45 Flex JavaScript CSS23 JQuery JDBC JSF JMS XML Experience on configuring Docker using Docker tool box Environment provisioning solutions using Docker Experience in developing Python design patterns like MVC Facade Singleton Have good experience on different IDEs such as Pycharm Eclipse Experience of using Jenkins and Bamboo tools for continuous integration and continuous deployment Experience on using Amazon web Services like EC2 S3 SQS RDS and Lambda Work Experience Python Developer Paychex Webster NY February 2017 to Present Description Paychex Inc is an American provider of payroll Finance human resource and benefits outsourcing services for small to mediumsized businesses Responsibilities Working on SCRUM Agile development methodology includes iterative and incremental application development stand up meetings with clients Designed and developed efficient design and developing User Interaction screens using HTML5 CSS3 JavaScript jQuery AJAX Bootstrap 4 and JSON Designed and integrated the full scale Hibernate Spring Used Angular 2 to create views to hook up models to the DOM and synchronize data with server as a Single Page Application Used Flask Api MVC for REST APIs for microservices Involved in development of commonly used angular components across teams such as directives for grid pagination conditional validations AJAX used extensively to implement front end user interface features in the application Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Configured Expressjs to set up middlewares to respond to HTTP requests and created RESTful web service with Nodejs Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Worked with mongoose connector for database persistence using Nodejs to interact with MongoDB Worked with No SQL database MongoDB to perform asynchronous operations Implemented Drools Business Logic Integration Platform which provides a unified and integrated platform for Rules Workflow and Event Processing Analyzed the NodeJS server structure in legacy project then mimicked the REST Web Services by using Flask API and did the corresponding configurations Karma and Jasmine tool are used to perform unit testing on Angular 20 Used Angular 2 to create views to hook up models to the DOM and synchronize data with server as a Single Page Application Worked with Requests Numpy Scipy and Pandas python libraries during development lifecycle Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Worked on ECMA 6 features Used Babel to transform ES6 code JavaScript which is supported by all browsers OAUTH 20 authorization framework are configuring to provide the security to rest web services Created RFP micro services to provide RESTful Web Services Deployed Microservices using Docker container using Amazon EC2 container service and using AWS admin console Design roles and groups for users and resources using AWS Identity Access Management IAM Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups optimized volumes and EC2 instances Experienced in implementation of Celery to exchange information over reliable channel in an asynchronous way by using Rabbit MQ as a message queue Writing Python code to use web service API developing Oracle PLSQL Stored Procedures code Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Service Locator Data Access Object Singleton and Abstract Factory Developed Python objects using Object Oriented Features and implemented Multithreading concepts MySQL database used to store the data required for the application and created database schema tables and load the data into the tables Involved in creating unit testing of various layers using PyUnit and created automated test scripts for integration testing using Selenium The application configured and deployed on Apache Tomcat server Jenkin CICD tool configured for continuous integrating and deploying application on servers To host the application on network created new accounts roles and groups on IAM based on security policies Worked on writing complex queries and PLSQL procedures cursors on different databases Fixed the bugs while deploying applications in production environment Environment Angular 20 Flask JavaScript React JS Node JS Express JS HTML5 CSS3 AJAX Bootstrap4 jQuery Microservices Restful Web services Pycharm Jenkins MySQL AWS Oauth 20 Docker Gunicorn Jenkins Role Python Developer Nordstrom Seattle WA July 2015 to November 2016 Description Nordstrom Inc is a leading fashion specialty retailer based in the US This project deals with online customer shopping portal This website taking care of wide range of products for the customers to buy online Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27 Django15 JSF 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Environment Python Django Cassandra RabbitMQ Vugen Soap UI NodeJS REST API Bash PyDev Spyder Agile Python Developer Voice gate India PVT LTD ANDHRA PRADESH IN July 2012 to March 2015 Description Voice gate is Hyderabad based telecom company it has a broad experience from diverse Industry segments driven with high passion and Innovation Specialists in automation for Software design Testing Security Testing Training and Processes The system is designed according to Python specifications Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the clientside validation using JavaScript Creating unit testregression test framework for workingnew code Build SQL queries implementing functions packages views triggers and tables Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Handling the day to day issues and fine tuning the applications for enhanced performance Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 10 MySQL Linux HTML XHTML CSS AJAX JavaScript SQL MySQL Apache Web Server UNIX Java Developer GSS Infotech HYD July 2010 to June 2012 Description GSS Infotech is a pioneer in applying innovative technologybased solutions to common business problems We Developed a knowledge management framework ensures conversion of complex maintenance issues to a standard operating procedure Our tool assisted application maintenance ensures standardization adherence to stringent incident and problem management SLAs Responsibilities Involved in various phases of Software Development Life Cycle SDLC The application is designed using J2EE design patterns and technologies based on MVC architecture Agile methodology is used for development of the application Used J2EE design patterns like Value Object Pattern Session Faade Singleton Factory and DAO Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Involved in designing the user interfaces using JSPs Writing Java code to use Apache Axis web service API developing Oracle PLSQL Stored Procedures code Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Developed RESTfulSOAP Web services in Mule ESB based on SOA architecture Used SOAP for transmission of large blocks of XML data over HTTP Involved in the development of underwriting process which involves communications without side systems using IBM MQ JMS Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere Handled Java Multithreading part in backend component one thread will be running for each user which serves that user EJB Session Beans were used to process request from user interface using OSS Developed and implemented the MVC Architectural pattern using STRUTS framework including JSP Servlets and EJB Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amounts of data Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment ANT build tool for automated build and deployment Developed Message Driven Beans for receiving and processing data from IBM MQ using JMS Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Developed JAVA objects using Object Oriented Features and implemented Multithreading concepts Environment HTML CSS Core java collections DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Spring Batch Shell Scripts JTA ANT IBM MQ JMS J2EE IBM WebSphere Junit Education Masters in computer and information systems California university of management and sciences 2016 Bachelor of Technology in Information Technology Maheshwara Engineering College 2010 Skills Python Django Java Flask Javascript",
    "entities": [
        "a Single Page Application Worked",
        "AJAX",
        "Bachelor of Technology in Information Technology Maheshwara Engineering College",
        "Nodejs",
        "HTML AJAX CSS",
        "STRUTS",
        "UNIX",
        "Finance",
        "JTA ANT IBM",
        "HTTP",
        "JTA",
        "IBM",
        "Heroku",
        "XML",
        "HTMLCSSJQuery",
        "a Single Page Application",
        "PyUnit",
        "Software Development Life Cycle SDLC",
        "JUnit",
        "Analysis Design Development Implementation and Testing",
        "API Integration Used Celery",
        "Amazon",
        "Description GSS Infotech",
        "Bugzilla Planning",
        "PHP Implemented",
        "Bash",
        "User Interaction",
        "Responsibilities Involved",
        "Kanban",
        "HTML5",
        "SOA",
        "Responsibilities Created Python",
        "JSP",
        "Object Oriented Features",
        "Flask",
        "Oracle 8i9i10",
        "building micro services",
        "Hyderabad",
        "Value Object Pattern Session Faade Singleton Factory",
        "Docker",
        "DOM",
        "Celery",
        "Views",
        "Created a",
        "MVC",
        "PythonDjango",
        "Lambda Work Experience Python Developer Paychex Webster",
        "Agile",
        "California university of management and sciences",
        "EJB",
        "GIT",
        "Present Description Paychex Inc",
        "Rabbit MQ",
        "API",
        "Dependency Injection IOC Annotations",
        "US",
        "IAM",
        "OSS Developed",
        "Nodejs Implemented Angular 2",
        "Created",
        "UI Design and Development",
        "Rational Application Developer Extensive",
        "AWS",
        "Sqlite3",
        "Singleton",
        "RESTful Services",
        "Implemented Drools Business Logic Integration Platform",
        "SQL",
        "lPythonspan",
        "Created RFP micro services",
        "Administrators",
        "Pycharm",
        "RESTAPI",
        "Responsibilities Working",
        "AWS Identity Access Management IAM Implemented AWS",
        "DAO Created Stored Procedures Functions Used",
        "Python Implemented",
        "Pandas",
        "CRUD",
        "Created the Node JS Express",
        "Maven",
        "Description Voice",
        "MVC Business Delegate Service Locator Data Access Object Singleton",
        "Performed",
        "India PVT LTD ANDHRA",
        "MVC Business Delegate Session Facade Service Locator Data Access Object Singleton",
        "JavaScript",
        "Django Python",
        "HTTP Involved",
        "ANT",
        "the Silent Circle Management System SCMC",
        "Developed Message Driven Beans",
        "POSTGET",
        "Microsoft",
        "JSP Servlets",
        "Jenkin CICD",
        "Description Nordstrom Inc",
        "SMTP",
        "Cursor",
        "PyCharm PyScripter Spyder PyStudio",
        "JMS Implemented",
        "REST",
        "Data",
        "Software Development Life Cycle",
        "jQuery Microservices Restful Web"
    ],
    "experience": "Experience on clientside JavaScript frameworks AngularJS and Angular 2 Experience in developing serverside JavaScript using NodeJS and Express JS Expert in optimizing the performance of SQL DB2 and PLSQL queries Expertise to interact with databases using ORM frameworks like Django SQLAlchemy frameworks Had strong experience in developing applications with python frame works such as Django and Flask Good experience with Oracle 8i9i10 g PLSQL Stored Procedures Expert level skills on Python like Parallel processing Worked on various Message queues like RabbitMQ and Kafka Experienced in building micro services using flask webservices Used Maven as a build tool and Jenkins for monitoring the build status of the project Had experience in developing RESTful Services with data representation in different formats such as JSON Had good knowledge on different databases like MySQL Oracle 13c11 g Microsoft SQL Server NoSQL Mongo DB Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Extensive experience in developing applications using Java API Swing HTML 45 Flex JavaScript CSS23 JQuery JDBC JSF JMS XML Experience on configuring Docker using Docker tool box Environment provisioning solutions using Docker Experience in developing Python design patterns like MVC Facade Singleton Have good experience on different IDEs such as Pycharm Eclipse Experience of using Jenkins and Bamboo tools for continuous integration and continuous deployment Experience on using Amazon web Services like EC2 S3 SQS RDS and Lambda Work Experience Python Developer Paychex Webster NY February 2017 to Present Description Paychex Inc is an American provider of payroll Finance human resource and benefits outsourcing services for small to mediumsized businesses Responsibilities Working on SCRUM Agile development methodology includes iterative and incremental application development stand up meetings with clients Designed and developed efficient design and developing User Interaction screens using HTML5 CSS3 JavaScript jQuery AJAX Bootstrap 4 and JSON Designed and integrated the full scale Hibernate Spring Used Angular 2 to create views to hook up models to the DOM and synchronize data with server as a Single Page Application Used Flask Api MVC for REST APIs for microservices Involved in development of commonly used angular components across teams such as directives for grid pagination conditional validations AJAX used extensively to implement front end user interface features in the application Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Configured Expressjs to set up middlewares to respond to HTTP requests and created RESTful web service with Nodejs Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Worked with mongoose connector for database persistence using Nodejs to interact with MongoDB Worked with No SQL database MongoDB to perform asynchronous operations Implemented Drools Business Logic Integration Platform which provides a unified and integrated platform for Rules Workflow and Event Processing Analyzed the NodeJS server structure in legacy project then mimicked the REST Web Services by using Flask API and did the corresponding configurations Karma and Jasmine tool are used to perform unit testing on Angular 20 Used Angular 2 to create views to hook up models to the DOM and synchronize data with server as a Single Page Application Worked with Requests Numpy Scipy and Pandas python libraries during development lifecycle Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Worked on ECMA 6 features Used Babel to transform ES6 code JavaScript which is supported by all browsers OAUTH 20 authorization framework are configuring to provide the security to rest web services Created RFP micro services to provide RESTful Web Services Deployed Microservices using Docker container using Amazon EC2 container service and using AWS admin console Design roles and groups for users and resources using AWS Identity Access Management IAM Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups optimized volumes and EC2 instances Experienced in implementation of Celery to exchange information over reliable channel in an asynchronous way by using Rabbit MQ as a message queue Writing Python code to use web service API developing Oracle PLSQL Stored Procedures code Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Service Locator Data Access Object Singleton and Abstract Factory Developed Python objects using Object Oriented Features and implemented Multithreading concepts MySQL database used to store the data required for the application and created database schema tables and load the data into the tables Involved in creating unit testing of various layers using PyUnit and created automated test scripts for integration testing using Selenium The application configured and deployed on Apache Tomcat server Jenkin CICD tool configured for continuous integrating and deploying application on servers To host the application on network created new accounts roles and groups on IAM based on security policies Worked on writing complex queries and PLSQL procedures cursors on different databases Fixed the bugs while deploying applications in production environment Environment Angular 20 Flask JavaScript React JS Node JS Express JS HTML5 CSS3 AJAX Bootstrap4 jQuery Microservices Restful Web services Pycharm Jenkins MySQL AWS Oauth 20 Docker Gunicorn Jenkins Role Python Developer Nordstrom Seattle WA July 2015 to November 2016 Description Nordstrom Inc is a leading fashion specialty retailer based in the US This project deals with online customer shopping portal This website taking care of wide range of products for the customers to buy online Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27 Django15 JSF 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Environment Python Django Cassandra RabbitMQ Vugen Soap UI NodeJS REST API Bash PyDev Spyder Agile Python Developer Voice gate India PVT LTD ANDHRA PRADESH IN July 2012 to March 2015 Description Voice gate is Hyderabad based telecom company it has a broad experience from diverse Industry segments driven with high passion and Innovation Specialists in automation for Software design Testing Security Testing Training and Processes The system is designed according to Python specifications Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the clientside validation using JavaScript Creating unit testregression test framework for workingnew code Build SQL queries implementing functions packages views triggers and tables Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Handling the day to day issues and fine tuning the applications for enhanced performance Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 10 MySQL Linux HTML XHTML CSS AJAX JavaScript SQL MySQL Apache Web Server UNIX Java Developer GSS Infotech HYD July 2010 to June 2012 Description GSS Infotech is a pioneer in applying innovative technologybased solutions to common business problems We Developed a knowledge management framework ensures conversion of complex maintenance issues to a standard operating procedure Our tool assisted application maintenance ensures standardization adherence to stringent incident and problem management SLAs Responsibilities Involved in various phases of Software Development Life Cycle SDLC The application is designed using J2EE design patterns and technologies based on MVC architecture Agile methodology is used for development of the application Used J2EE design patterns like Value Object Pattern Session Faade Singleton Factory and DAO Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Involved in designing the user interfaces using JSPs Writing Java code to use Apache Axis web service API developing Oracle PLSQL Stored Procedures code Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Developed RESTfulSOAP Web services in Mule ESB based on SOA architecture Used SOAP for transmission of large blocks of XML data over HTTP Involved in the development of underwriting process which involves communications without side systems using IBM MQ JMS Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere Handled Java Multithreading part in backend component one thread will be running for each user which serves that user EJB Session Beans were used to process request from user interface using OSS Developed and implemented the MVC Architectural pattern using STRUTS framework including JSP Servlets and EJB Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amounts of data Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment ANT build tool for automated build and deployment Developed Message Driven Beans for receiving and processing data from IBM MQ using JMS Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Developed JAVA objects using Object Oriented Features and implemented Multithreading concepts Environment HTML CSS Core java collections DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Spring Batch Shell Scripts JTA ANT IBM MQ JMS J2EE IBM WebSphere Junit Education Masters in computer and information systems California university of management and sciences 2016 Bachelor of Technology in Information Technology Maheshwara Engineering College 2010 Skills Python Django Java Flask Javascript",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Paychex",
        "Webster",
        "NY",
        "years",
        "experience",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "Analysis",
        "Design",
        "Development",
        "Implementation",
        "Testing",
        "applications",
        "Python",
        "DjangoFlask",
        "knowledge",
        "development",
        "process",
        "SCRUM",
        "UI",
        "Design",
        "Development",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "Bootstrap",
        "AJAX",
        "W3C",
        "Web",
        "standards",
        "facets",
        "application",
        "development",
        "Python",
        "IDEs",
        "PyCharm",
        "PyScripter",
        "Spyder",
        "PyStudio",
        "PyDev",
        "Developed",
        "web",
        "applications",
        "web",
        "services",
        "APIs",
        "Python",
        "Flask",
        "Django",
        "PHP",
        "python",
        "Beautiful",
        "Soup",
        "NumPy",
        "pytables",
        "matplotlib",
        "pythontwitter",
        "Pandas",
        "data",
        "frame",
        "Pyvmomi",
        "Fabric",
        "urllib2",
        "tasks",
        "Experience",
        "JavaScript",
        "AngularJS",
        "Angular",
        "Experience",
        "serverside",
        "JavaScript",
        "NodeJS",
        "Express",
        "JS",
        "Expert",
        "performance",
        "SQL",
        "DB2",
        "PLSQL",
        "Expertise",
        "databases",
        "ORM",
        "frameworks",
        "Django",
        "SQLAlchemy",
        "frameworks",
        "experience",
        "applications",
        "python",
        "frame",
        "Django",
        "Flask",
        "Good",
        "experience",
        "Oracle",
        "g",
        "PLSQL",
        "Stored",
        "Procedures",
        "Expert",
        "level",
        "skills",
        "Python",
        "processing",
        "Message",
        "queues",
        "RabbitMQ",
        "Kafka",
        "building",
        "micro",
        "services",
        "flask",
        "webservices",
        "Maven",
        "build",
        "tool",
        "Jenkins",
        "build",
        "status",
        "project",
        "experience",
        "RESTful",
        "Services",
        "data",
        "representation",
        "formats",
        "JSON",
        "knowledge",
        "databases",
        "MySQL",
        "Oracle",
        "13c11",
        "g",
        "Microsoft",
        "SQL",
        "Server",
        "NoSQL",
        "Mongo",
        "DB",
        "Developed",
        "J2EE",
        "applications",
        "IDEs",
        "Eclipse",
        "Eclipse",
        "Google",
        "GWT",
        "Rational",
        "Application",
        "Developer",
        "experience",
        "applications",
        "Java",
        "API",
        "Swing",
        "HTML",
        "Flex",
        "JavaScript",
        "CSS23",
        "JQuery",
        "JDBC",
        "JSF",
        "JMS",
        "XML",
        "Experience",
        "Docker",
        "Docker",
        "tool",
        "box",
        "Environment",
        "solutions",
        "Docker",
        "Experience",
        "Python",
        "design",
        "patterns",
        "MVC",
        "Facade",
        "Singleton",
        "experience",
        "IDEs",
        "Pycharm",
        "Eclipse",
        "Experience",
        "Jenkins",
        "Bamboo",
        "tools",
        "integration",
        "deployment",
        "Experience",
        "Amazon",
        "web",
        "Services",
        "EC2",
        "S3",
        "SQS",
        "RDS",
        "Lambda",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Paychex",
        "Webster",
        "NY",
        "February",
        "Present",
        "Description",
        "Paychex",
        "Inc",
        "provider",
        "payroll",
        "Finance",
        "resource",
        "benefits",
        "outsourcing",
        "services",
        "businesses",
        "Responsibilities",
        "SCRUM",
        "Agile",
        "development",
        "methodology",
        "application",
        "development",
        "meetings",
        "clients",
        "design",
        "User",
        "Interaction",
        "screens",
        "HTML5",
        "CSS3",
        "JavaScript",
        "jQuery",
        "AJAX",
        "Bootstrap",
        "JSON",
        "scale",
        "Hibernate",
        "Spring",
        "Angular",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "Single",
        "Page",
        "Application",
        "Flask",
        "Api",
        "MVC",
        "REST",
        "APIs",
        "microservices",
        "development",
        "components",
        "teams",
        "directives",
        "grid",
        "pagination",
        "validations",
        "AJAX",
        "end",
        "user",
        "interface",
        "features",
        "application",
        "Node",
        "JS",
        "Express",
        "JS",
        "Server",
        "MVC",
        "framework",
        "frontend",
        "side",
        "Angular",
        "Configured",
        "Expressjs",
        "middlewares",
        "HTTP",
        "requests",
        "web",
        "service",
        "Nodejs",
        "Angular",
        "services",
        "web",
        "application",
        "APIs",
        "data",
        "application",
        "connector",
        "database",
        "persistence",
        "Nodejs",
        "MongoDB",
        "SQL",
        "database",
        "operations",
        "Drools",
        "Business",
        "Logic",
        "Integration",
        "Platform",
        "platform",
        "Rules",
        "Workflow",
        "Event",
        "Processing",
        "NodeJS",
        "server",
        "structure",
        "project",
        "REST",
        "Web",
        "Services",
        "Flask",
        "API",
        "configurations",
        "Karma",
        "Jasmine",
        "tool",
        "unit",
        "testing",
        "Angular",
        "Angular",
        "views",
        "models",
        "DOM",
        "data",
        "server",
        "Single",
        "Page",
        "Application",
        "Requests",
        "Numpy",
        "Scipy",
        "Pandas",
        "libraries",
        "development",
        "lifecycle",
        "Angular",
        "services",
        "web",
        "application",
        "APIs",
        "data",
        "application",
        "Node",
        "JS",
        "Express",
        "JS",
        "Server",
        "MVC",
        "framework",
        "frontend",
        "side",
        "Angular",
        "Worked",
        "ECMA",
        "features",
        "Babel",
        "code",
        "JavaScript",
        "browsers",
        "authorization",
        "framework",
        "security",
        "rest",
        "web",
        "services",
        "RFP",
        "micro",
        "services",
        "Web",
        "Services",
        "Deployed",
        "Microservices",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "Design",
        "roles",
        "groups",
        "users",
        "resources",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "AWS",
        "solutions",
        "EC2",
        "S3",
        "RDS",
        "EBS",
        "Elastic",
        "Load",
        "Balancer",
        "Auto",
        "scaling",
        "groups",
        "volumes",
        "EC2",
        "instances",
        "implementation",
        "Celery",
        "information",
        "channel",
        "way",
        "Rabbit",
        "MQ",
        "message",
        "queue",
        "Python",
        "code",
        "web",
        "service",
        "API",
        "Oracle",
        "PLSQL",
        "Stored",
        "Procedures",
        "code",
        "application",
        "principles",
        "design",
        "patterns",
        "MVC",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Object",
        "Singleton",
        "Abstract",
        "Factory",
        "Developed",
        "Python",
        "Object",
        "Features",
        "Multithreading",
        "concepts",
        "MySQL",
        "database",
        "data",
        "application",
        "database",
        "schema",
        "tables",
        "data",
        "tables",
        "unit",
        "testing",
        "layers",
        "PyUnit",
        "test",
        "scripts",
        "integration",
        "testing",
        "Selenium",
        "application",
        "Apache",
        "Tomcat",
        "server",
        "Jenkin",
        "CICD",
        "tool",
        "integrating",
        "application",
        "servers",
        "application",
        "network",
        "accounts",
        "roles",
        "groups",
        "IAM",
        "security",
        "policies",
        "queries",
        "PLSQL",
        "procedures",
        "cursors",
        "databases",
        "bugs",
        "applications",
        "production",
        "environment",
        "Environment",
        "Angular",
        "Flask",
        "JavaScript",
        "React",
        "JS",
        "Node",
        "JS",
        "Express",
        "JS",
        "HTML5",
        "CSS3",
        "AJAX",
        "Bootstrap4",
        "jQuery",
        "Microservices",
        "Restful",
        "Web",
        "services",
        "Pycharm",
        "Jenkins",
        "MySQL",
        "AWS",
        "Oauth",
        "Docker",
        "Gunicorn",
        "Jenkins",
        "Role",
        "Python",
        "Developer",
        "Nordstrom",
        "Seattle",
        "WA",
        "July",
        "November",
        "Description",
        "Nordstrom",
        "Inc",
        "fashion",
        "specialty",
        "retailer",
        "US",
        "project",
        "customer",
        "shopping",
        "portal",
        "website",
        "care",
        "range",
        "products",
        "customers",
        "Responsibilities",
        "Python",
        "Bash",
        "tools",
        "efficiency",
        "call",
        "center",
        "application",
        "system",
        "operations",
        "data",
        "conversion",
        "scripts",
        "AMQPRabbit",
        "MQ",
        "REST",
        "JSON",
        "CRUD",
        "scripts",
        "API",
        "Integration",
        "Celery",
        "Rabbit",
        "MQ",
        "MySQL",
        "Django",
        "Flask",
        "worker",
        "framework",
        "Recording",
        "Scripts",
        "Web",
        "Web",
        "Services",
        "HTML",
        "Vugen",
        "Soap",
        "UI",
        "script",
        "validation",
        "co",
        "correlations",
        "parameterizations",
        "methods",
        "Scripting",
        "web",
        "web",
        "services",
        "Application",
        "architecture",
        "Python",
        "Django15",
        "JSF",
        "HTML",
        "CSS",
        "frontend",
        "server",
        "monitoring",
        "daemon",
        "Psutil",
        "Django",
        "app",
        "analytics",
        "data",
        "solutions",
        "Cassandra",
        "database",
        "Experience",
        "Data",
        "migration",
        "Sqlite3",
        "Apache",
        "Cassandra",
        "database",
        "Cassandra",
        "data",
        "model",
        "implementation",
        "monitoring",
        "DSE",
        "Dev",
        "Centre",
        "Data",
        "stax",
        "Ops",
        "center",
        "Silent",
        "Circle",
        "Management",
        "System",
        "Django",
        "Python",
        "NodeJS",
        "infrastructure",
        "services",
        "PythonDjango",
        "web",
        "application",
        "Python",
        "scripting",
        "data",
        "processing",
        "MySQL",
        "database",
        "HTMLCSSJQuery",
        "High",
        "Charts",
        "data",
        "visualization",
        "pages",
        "Strong",
        "Socket",
        "programming",
        "experience",
        "Python",
        "networking",
        "operations",
        "race",
        "route",
        "SMTP",
        "mail",
        "server",
        "web",
        "server",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "Python",
        "modules",
        "eg",
        "csv",
        "robot",
        "parser",
        "iter",
        "tools",
        "jinja2",
        "lxml",
        "development",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "CSS",
        "JavaScript",
        "Bootstrap",
        "JQuery",
        "RESTAPI",
        "Automated",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "project",
        "Heroku",
        "GIT",
        "version",
        "control",
        "system",
        "graphs",
        "business",
        "decision",
        "Python",
        "mat",
        "plotlib",
        "library",
        "Fetched",
        "twitter",
        "keyword",
        "pythontwitter",
        "library",
        "Python",
        "library",
        "Beautiful",
        "Soup",
        "web",
        "data",
        "graphs",
        "Performed",
        "troubleshooting",
        "Python",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "regression",
        "tests",
        "release",
        "bugs",
        "automation",
        "test",
        "Bugzilla",
        "Planning",
        "test",
        "cases",
        "test",
        "cases",
        "methodologies",
        "scrum",
        "stand",
        "ups",
        "Kanban",
        "mode",
        "requirements",
        "clients",
        "Environment",
        "Python",
        "Django",
        "Cassandra",
        "Vugen",
        "Soap",
        "UI",
        "NodeJS",
        "REST",
        "API",
        "Bash",
        "PyDev",
        "Spyder",
        "Agile",
        "Python",
        "Developer",
        "Voice",
        "gate",
        "India",
        "PVT",
        "LTD",
        "ANDHRA",
        "PRADESH",
        "July",
        "March",
        "Description",
        "Voice",
        "gate",
        "Hyderabad",
        "telecom",
        "company",
        "experience",
        "Industry",
        "segments",
        "passion",
        "Innovation",
        "Specialists",
        "automation",
        "Software",
        "design",
        "Testing",
        "Security",
        "Testing",
        "Training",
        "Processes",
        "system",
        "Python",
        "specifications",
        "Responsibilities",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Design",
        "test",
        "deploy",
        "website",
        "UI",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "data",
        "management",
        "system",
        "MySQL",
        "Rewrite",
        "PythonDjango",
        "modules",
        "format",
        "data",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "property",
        "list",
        "application",
        "python",
        "validation",
        "JavaScript",
        "Creating",
        "unit",
        "testregression",
        "test",
        "framework",
        "code",
        "Build",
        "SQL",
        "functions",
        "packages",
        "views",
        "triggers",
        "tables",
        "Subversion",
        "version",
        "control",
        "tool",
        "teamdevelopment",
        "web",
        "application",
        "day",
        "day",
        "issues",
        "applications",
        "performance",
        "development",
        "applications",
        "UNIX",
        "environment",
        "commands",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Linux",
        "HTML",
        "XHTML",
        "CSS",
        "AJAX",
        "JavaScript",
        "SQL",
        "MySQL",
        "Apache",
        "Web",
        "Server",
        "UNIX",
        "Java",
        "Developer",
        "GSS",
        "Infotech",
        "HYD",
        "July",
        "June",
        "Description",
        "GSS",
        "Infotech",
        "pioneer",
        "solutions",
        "business",
        "problems",
        "knowledge",
        "management",
        "framework",
        "conversion",
        "maintenance",
        "issues",
        "operating",
        "procedure",
        "tool",
        "application",
        "maintenance",
        "standardization",
        "adherence",
        "incident",
        "problem",
        "management",
        "SLAs",
        "Responsibilities",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "J2EE",
        "design",
        "patterns",
        "technologies",
        "MVC",
        "architecture",
        "methodology",
        "development",
        "application",
        "J2EE",
        "design",
        "patterns",
        "Value",
        "Object",
        "Pattern",
        "Session",
        "Faade",
        "Singleton",
        "Factory",
        "DAO",
        "Stored",
        "Procedures",
        "Functions",
        "JDBC",
        "database",
        "Server",
        "database",
        "PLSQL",
        "Stored",
        "Procedures",
        "Functions",
        "Triggers",
        "Views",
        "SQL",
        "database",
        "end",
        "interfaces",
        "PLSQL",
        "packages",
        "procedures",
        "functions",
        "PLSQL",
        "programs",
        "Cursor",
        "management",
        "Exception",
        "Handling",
        "PLSQL",
        "programs",
        "features",
        "Spring",
        "Dependency",
        "Injection",
        "IOC",
        "Annotations",
        "Spring",
        "Integration",
        "Struts",
        "application",
        "Struts",
        "Framework",
        "ModelViewController",
        "MVC",
        "architecture",
        "user",
        "interfaces",
        "JSPs",
        "Java",
        "code",
        "Apache",
        "Axis",
        "web",
        "service",
        "API",
        "Oracle",
        "PLSQL",
        "Stored",
        "Procedures",
        "code",
        "Eclipse",
        "JSPs",
        "Servlets",
        "Struts",
        "IBM",
        "WEB",
        "SPHERE",
        "server",
        "development",
        "phase",
        "Spring",
        "Security",
        "framework",
        "setup",
        "authentication",
        "authorization",
        "application",
        "sign",
        "RESTfulSOAP",
        "Web",
        "services",
        "Mule",
        "ESB",
        "SOA",
        "architecture",
        "SOAP",
        "transmission",
        "blocks",
        "XML",
        "data",
        "HTTP",
        "development",
        "underwriting",
        "process",
        "communications",
        "side",
        "systems",
        "IBM",
        "MQ",
        "JMS",
        "Wrote",
        "Unit",
        "test",
        "cases",
        "JUnit",
        "Mockito",
        "framework",
        "ANT",
        "build",
        "deployment",
        "IBM",
        "WebSphere",
        "Java",
        "Multithreading",
        "part",
        "component",
        "thread",
        "user",
        "user",
        "EJB",
        "Session",
        "Beans",
        "request",
        "user",
        "interface",
        "OSS",
        "Developed",
        "MVC",
        "Architectural",
        "pattern",
        "STRUTS",
        "framework",
        "JSP",
        "Servlets",
        "EJB",
        "Spring",
        "Batch",
        "spring",
        "batch",
        "jobs",
        "requirements",
        "reliability",
        "robustness",
        "traceability",
        "processing",
        "amounts",
        "data",
        "UNIX",
        "Shell",
        "Scripts",
        "batch",
        "jobs",
        "data",
        "servers",
        "JTA",
        "transactions",
        "resources",
        "java",
        "environment",
        "ANT",
        "tool",
        "build",
        "deployment",
        "Developed",
        "Message",
        "Driven",
        "Beans",
        "processing",
        "data",
        "IBM",
        "MQ",
        "JMS",
        "application",
        "principles",
        "design",
        "patterns",
        "MVC",
        "Business",
        "Delegate",
        "Session",
        "Facade",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Object",
        "Singleton",
        "Abstract",
        "Factory",
        "Developed",
        "Object",
        "Features",
        "Multithreading",
        "concepts",
        "Environment",
        "HTML",
        "CSS",
        "Core",
        "DB2",
        "JDBC",
        "PLSQL",
        "JPA",
        "EJB",
        "Struts",
        "JSP",
        "Servlets",
        "Spring",
        "Batch",
        "Shell",
        "Scripts",
        "JTA",
        "ANT",
        "IBM",
        "MQ",
        "JMS",
        "J2EE",
        "IBM",
        "WebSphere",
        "Junit",
        "Education",
        "Masters",
        "computer",
        "information",
        "systems",
        "California",
        "university",
        "management",
        "Bachelor",
        "Technology",
        "Information",
        "Technology",
        "Maheshwara",
        "Engineering",
        "College",
        "Skills",
        "Python",
        "Django",
        "Java",
        "Flask",
        "Javascript"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:56:01.560219",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Paychex Webster NY Around 8 years of experience in all phases of Software Development Life Cycle SDLC which includes Analysis Design Development Implementation and Testing of webbased applications using the Python DjangoFlask technologies Good knowledge on both Agile development process and SCRUM Experienced in UI Design and Development using HTML5 CSS3 JavaScript jQuery Bootstrap and AJAX that follows W3C Web standards successfully managing all facets of application development Experienced in working with various Python IDEs using PyCharm PyScripter Spyder PyStudio and PyDev Developed web applications and RESTful web services and APIs using Python Flask Django and PHP Implemented different python libraries Beautiful Soup NumPy scipy pytables matplotlib pythontwitter Pandas data frame Pyvmomi Fabric and urllib2 in various tasks Experience on clientside JavaScript frameworks AngularJS and Angular 2 Experience in developing serverside JavaScript using NodeJS and Express JS Expert in optimizing the performance of SQL DB2 and PLSQL queries Expertise to interact with databases using ORM frameworks like Django SQLAlchemy frameworks Had strong experience in developing applications with python frame works such as Django and Flask Good experience with Oracle 8i9i10g PLSQL Stored Procedures Expert level skills on Python like Parallel processing Worked on various Message queues like RabbitMQ and Kafka Experienced in building micro services using flask webservices Used Maven as a build tool and Jenkins for monitoring the build status of the project Had experience in developing RESTful Services with data representation in different formats such as JSON Had good knowledge on different databases like MySQL Oracle 13c11g Microsoft SQL Server NoSQL Mongo DB Developed J2EE applications on IDEs like Eclipse My Eclipse Google GWT and Rational Application Developer Extensive experience in developing applications using Java API Swing HTML 45 Flex JavaScript CSS23 JQuery JDBC JSF JMS XML Experience on configuring Docker using Docker tool box Environment provisioning solutions using Docker Experience in developing Python design patterns like MVC Facade Singleton Have good experience on different IDEs such as Pycharm Eclipse Experience of using Jenkins and Bamboo tools for continuous integration and continuous deployment Experience on using Amazon web Services like EC2 S3 SQS RDS and Lambda Work Experience Python Developer Paychex Webster NY February 2017 to Present Description Paychex Inc is an American provider of payroll Finance human resource and benefits outsourcing services for small to mediumsized businesses Responsibilities Working on SCRUM Agile development methodology includes iterative and incremental application development stand up meetings with clients Designed and developed efficient design and developing User Interaction screens using HTML5 CSS3 JavaScript jQuery AJAX Bootstrap 4 and JSON Designed and integrated the full scale Hibernate Spring Used Angular 2 to create views to hook up models to the DOM and synchronize data with server as a Single Page Application Used Flask Api MVC for REST APIs for microservices Involved in development of commonly used angular components across teams such as directives for grid pagination conditional validations AJAX used extensively to implement front end user interface features in the application Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Configured Expressjs to set up middlewares to respond to HTTP requests and created RESTful web service with Nodejs Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Worked with mongoose connector for database persistence using Nodejs to interact with MongoDB Worked with No SQL database MongoDB to perform asynchronous operations Implemented Drools Business Logic Integration Platform which provides a unified and integrated platform for Rules Workflow and Event Processing Analyzed the NodeJS server structure in legacy project then mimicked the REST Web Services by using Flask API and did the corresponding configurations Karma and Jasmine tool are used to perform unit testing on Angular 20 Used Angular 2 to create views to hook up models to the DOM and synchronize data with server as a Single Page Application Worked with Requests Numpy Scipy and Pandas python libraries during development lifecycle Implemented Angular 2 services to connect the web application to backend APIs to POSTGET the data used in the application Created the Node JS Express JS Server to build MVC framework from frontend side Angular 2 to backend Worked on ECMA 6 features Used Babel to transform ES6 code JavaScript which is supported by all browsers OAUTH 20 authorization framework are configuring to provide the security to rest web services Created RFP micro services to provide RESTful Web Services Deployed Microservices using Docker container using Amazon EC2 container service and using AWS admin console Design roles and groups for users and resources using AWS Identity Access Management IAM Implemented AWS solutions using EC2 S3 RDS EBS Elastic Load Balancer Auto scaling groups optimized volumes and EC2 instances Experienced in implementation of Celery to exchange information over reliable channel in an asynchronous way by using Rabbit MQ as a message queue Writing Python code to use web service API developing Oracle PLSQL Stored Procedures code Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Service Locator Data Access Object Singleton and Abstract Factory Developed Python objects using Object Oriented Features and implemented Multithreading concepts MySQL database used to store the data required for the application and created database schema tables and load the data into the tables Involved in creating unit testing of various layers using PyUnit and created automated test scripts for integration testing using Selenium The application configured and deployed on Apache Tomcat server Jenkin CICD tool configured for continuous integrating and deploying application on servers To host the application on network created new accounts roles and groups on IAM based on security policies Worked on writing complex queries and PLSQL procedures cursors on different databases Fixed the bugs while deploying applications in production environment Environment Angular 20 Flask JavaScript React JS Node JS Express JS HTML5 CSS3 AJAX Bootstrap4 jQuery Microservices Restful Web services Pycharm Jenkins MySQL AWS Oauth 20 Docker Gunicorn Jenkins Role Python Developer Nordstrom Seattle WA July 2015 to November 2016 Description Nordstrom Inc is a leading fashion specialty retailer based in the US This project deals with online customer shopping portal This website taking care of wide range of products for the customers to buy online Responsibilities Created Python and Bash tools to increase efficiency of call center application system and operations data conversion scripts AMQPRabbit MQ REST JSON and CRUD scripts for API Integration Used Celery with Rabbit MQ MySQL Django and Flask to create a distributed worker framework Recording of Scripts Web Web Services HTML using Vugen and Soap UI and script validation through co correlations parameterizations and other methods Scripting web and web services Application was based on serviceoriented architecture and used Python 27 Django15 JSF 2 Ajax HTML CSS for the frontend Created server monitoring daemon with Psutil supported by Django app for analytics which I created Also researched big data solutions with Cassandra database Experience with Data migration from Sqlite3 to Apache Cassandra database Cassandra data model designing implementation maintaining and monitoring using DSE Dev Centre Data stax Ops center Build the Silent Circle Management System SCMC in Django Python and NodeJS while integrating with infrastructure services Created a PythonDjango based web application using Python scripting for data processing MySQL for the database and HTMLCSSJQuery and High Charts for data visualization of the served pages Strong Socket programming experience in Python Implemented complex networking operations like race route SMTP mail server and web server Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Used standard Python modules eg csv robot parser iter tools pickle jinja2 lxml for development Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML CSS JavaScript Bootstrap JQuery and RESTAPI calls Automated RabbitMQ cluster installations and configuration using PythonBash Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval Deployed the project into Heroku using GIT version control system Built various graphs for business decision making using Python mat plotlib library Fetched twitter feeds for certain important keyword using pythontwitter library Used Python library Beautiful Soup for web scrapping to extract data for building graphs Performed troubleshooting fixed and deployed many Python bug fixes of the two main applications that were a main source of data for both customers and internal customer service team Executing regression tests on each release and verified bugs found from automation test in Bugzilla Planning implementing and converting manual test cases to automation test cases Trained extensively in agile methodologies and implemented by participating in scrum stand ups Kanban mode discussing and implementing requirements with clients Environment Python Django Cassandra RabbitMQ Vugen Soap UI NodeJS REST API Bash PyDev Spyder Agile Python Developer Voice gate India PVT LTD ANDHRA PRADESH IN July 2012 to March 2015 Description Voice gate is Hyderabad based telecom company it has a broad experience from diverse Industry segments driven with high passion and Innovation Specialists in automation for Software design Testing Security Testing Training and Processes The system is designed according to Python specifications Responsibilities Developed entire frontend and backend modules using Python on Django Web Framework Design develop test deploy and maintain the website Designed and developed the UI of the website using HTML AJAX CSS and JavaScript Designed and developed data management system using MySQL Rewrite existing PythonDjango modules to deliver certain format of data Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Generated property list for every application dynamically using python Handled all the clientside validation using JavaScript Creating unit testregression test framework for workingnew code Build SQL queries implementing functions packages views triggers and tables Using Subversion version control tool to coordinate teamdevelopment Responsible for debugging and troubleshooting the web application Handling the day to day issues and fine tuning the applications for enhanced performance Worked in development of applications especially in UNIX environment and familiar with all of its commands Environment Python 27 Django 10 MySQL Linux HTML XHTML CSS AJAX JavaScript SQL MySQL Apache Web Server UNIX Java Developer GSS Infotech HYD July 2010 to June 2012 Description GSS Infotech is a pioneer in applying innovative technologybased solutions to common business problems We Developed a knowledge management framework ensures conversion of complex maintenance issues to a standard operating procedure Our tool assisted application maintenance ensures standardization adherence to stringent incident and problem management SLAs Responsibilities Involved in various phases of Software Development Life Cycle SDLC The application is designed using J2EE design patterns and technologies based on MVC architecture Agile methodology is used for development of the application Used J2EE design patterns like Value Object Pattern Session Faade Singleton Factory and DAO Created Stored Procedures Functions Used JDBC to process database calls for Db2 Server database Involved in writing PLSQL Stored Procedures Functions Triggers and Views for SQL database Developed back end interfaces using PLSQL packages stored procedures functions procedures anonymous PLSQL programs Cursor management Exception Handling in PLSQL programs Implemented various features of Spring such as Dependency Injection IOC Annotations and Spring Integration with Struts Developed the application using Struts Framework that leverages the classical ModelViewController MVC architecture Involved in designing the user interfaces using JSPs Writing Java code to use Apache Axis web service API developing Oracle PLSQL Stored Procedures code Used Eclipse for developing JSPs Servlets Struts and with IBM WEB SPHERE server in the development phase Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on Developed RESTfulSOAP Web services in Mule ESB based on SOA architecture Used SOAP for transmission of large blocks of XML data over HTTP Involved in the development of underwriting process which involves communications without side systems using IBM MQ JMS Wrote Unit test cases using JUnit Mockito framework Used ANT for automated build and deployment on IBM WebSphere Handled Java Multithreading part in backend component one thread will be running for each user which serves that user EJB Session Beans were used to process request from user interface using OSS Developed and implemented the MVC Architectural pattern using STRUTS framework including JSP Servlets and EJB Used Spring Batch as spring batch jobs can meet the requirements of reliability robustness and traceability which are essential for automatic processing of large amounts of data Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers Used JTA to enable distributed transactions to be done across multiple resources in java environment ANT build tool for automated build and deployment Developed Message Driven Beans for receiving and processing data from IBM MQ using JMS Implemented the application using the architectural principles laid down by several design patterns such as MVC Business Delegate Session Facade Service Locator Data Access Object Singleton and Abstract Factory Developed JAVA objects using Object Oriented Features and implemented Multithreading concepts Environment HTML CSS Core java collections DB2 JDBC PLSQL JPA EJB Struts JSP Servlets Spring Batch Shell Scripts JTA ANT IBM MQ JMS J2EE IBM WebSphere Junit Education Masters in computer and information systems California university of management and sciences 2016 Bachelor of Technology in Information Technology Maheshwara Engineering College 2010 Skills Python Django Java Flask Javascript",
    "unique_id": "4ca996a4-c7c8-4788-8dee-4484deca8e2a"
}