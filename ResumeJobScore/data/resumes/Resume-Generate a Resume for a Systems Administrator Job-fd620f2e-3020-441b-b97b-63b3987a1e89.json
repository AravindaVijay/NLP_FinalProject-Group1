{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Onlife Health Brentwood TN Authorized to work in the US for any employer Work Experience Python Developer Onlife Health Brentwood TN April 2017 to Present Description Onlife Health is a health and wellness Company that saves health care money by keeping people healthy The aim of the project was to design and develop Enterprise Data warehouse Responsibilities Followed the SDLC activity to fulfill the business requirements and use cases Developed Python Scripts to transform data and to drive execution of SQL server Create a current state process map and documentation Updated and maintained a web server in Unix environment and developed document flow reports using Python Create database triggers for data validations in Oracle Created job scheduling for periodic load processing using SQL and shell scripts Responsible for capacity planning space management problem resolution database monitoring and performance tuning of Production Databases Analyzed business needs and drafted process maps Implemented discretisation binning and data wrangling in Python Automated the addition of transactions to database tables by writing required packages using SQL Designed Unix Scripts to automate the verification of the information inserted in the database which was extensively used in Admin Module Worked with Agile methodology to ensure delivery of high quality work Developed views and templates with Python and Djangos view controller Designer for developing various jobs to extract cleansing transforming integrating and loading data into Data Warehouse Involved in tuning and optimization of SQL statements and Managed Backend using Python and MVC framework Django Worked on development and maintenance of SQL code embedded in PLSQL Managed and support outages during urgency and Supported compliance to all regulatory and audit requirements Provided 24x7 support during application deployment Established a connection between Oracle and Python for the transformation module Implemented hash tables in Unix shell scripting to retrieve data faster Responsible for scripting data manipulation using SQL Performed periodic analysis of business critical systems to provide issue resolution if needed Maintained complete documentation of trading module system maintenance requirements Environment Python DBIDBD Oracle 11g PLSQL SQLPLUS SQLLoader Unix Python Developer WELLS FARGO New York NY April 2015 to March 2017 Description API Gateway Channel is an integration application developed for integrating various digital clients Intuit Turbo Tax etc to access banks data for Account Validation Tax docs for tax filing and so on Responsibilities Written Nova Glance Neutron Cinder Keystone Hashborad Swift python client API to integrate with existing Application Create a strategic architectural design of the platform with networking vlans firewalls load balancers hypervisors kvm and VMware workflow and orchestration OpenStack APIs Smart Cloud Orchestrator security keystone LDAP Inventory and monitoring licensing backuprestore Understanding python files in openstack environment and make necessary changes if needed Using Cinder to enable persistent storage for applications like databases deployed in Openstack cloud tools Design roles and groups for users and resources using AWS Identity Access Management IAM Creating Cloud watch alerts for instances and using them in auto scaling launch configurations Developed Cloud infrastructure like compute storage and platform Restful services to implement OpenStack API Create a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTful API provided by Openstack Used JSP JavaScript JQuery AJAX CSS3 and HTML5 as data and presentation layer technology Involve in intense User Interface UI operations and client side validations using AJAX toolkit Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Experience with messaging solutions eg ActiveMQ RabbitMQ and ZeroMQ Design and development of user interfaces and client displays using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Implementing multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used HTML CSS AJAX JSON designed and developed the user interface of the website Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Use Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Design front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Used Python and Django creating graphics XML processing data exchange and business logic implementation Develop consumer based features and applications using Python Django HTML behavior Driven Development BDD and pair based programming Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Environment Python 273x Windows SQL and python libraries such as Numpy sqlalchemy sqlDB Python Developer Microsoft Redmond May 2014 to March 2015 Description Microsoft Certifications To generate the required operational reports for the business the team had to extract data manually from multiple sources which were in a multitude of formats and convert sources into a single standard format before compiling the reports Responsibilities Gathered all requirements for developing and analyzing requirement of projects Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis Used Django configuration to manage URLs and application parameters Used Test driven approach for developing the application and Implemented the unit tests using Python Unittest framework Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Familiar with JSON based REST Web services and Amazon Web services AWS Dynamic implementation of SQL server work on website using SQL developer tool Experienced in Agile Methodologies and SCRUM Process Designed front end using UI HTML Bootstrap Node JS underscore JS CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop the application Also used Numpy for Numerical analysis Followed AGILE development methodology to develop the application Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Used Git to resolve and coding the work on Python and portlet Used several Python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and Apache Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval ENVIRONMENT Python 27 PyQT PyQuery MVW HTML5 CSS3 DOM Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows MongoDB PostgreSQL and Pythonlibraries such as Numpy IPython sqlalchemy Django Tastypie Python Developer Microsoft Redmond Hyderabad Telangana May 2013 to April 2014 Description Microsoft Certifications To generate the required operational reports for the business the team had to extract data manually from multiple sources which were in a multitude of formats and convert sources into a single standard format before compiling the reports Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job Developed the required XML Schema documents and implemented the framework for parsing XML Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application and Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various Modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities and Personal Management errorexception management etc Used python to extract weekly hotel availability information from XML files Used Web Services to get travel destination data and rates Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment E commerce Environment Python Windows Django MySql Linux HTML CSS JQuery JavaScript Apache Programmer Analyst Global Inc June 2011 to April 2013 Description Implementation of BI as a reporting tool to develop various reports for the analysis of Child Support Enforcement Program Responsibilities Updated and maintained a web server in Unix environment Worked on development and maintenance of SQL code embedded Work with team of developers on Python applications for Inventory Management Created HTML forms and used Perl scripting language for online querying and reporting for order entry module and Inventory module Involved in SQL debugging and support and Managed and support outages during urgency Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Supported compliance to all regulatory and audit requirements Performed periodic analysis of business critical systems to provide issue resolution if needed Wrote Unix Korn scripts to manipulate the data and then load it into database Used SQL to filter and load data from other production databases Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Designed an HTML interface for a JavaScript and Perldriven price Monitored and trouble shoo ted the data loading problems of Informatica Maintained complete documentation of trading module system maintenance requirements Developed tables and SQL packages procedures and functions Wrote python scripts to parse XML documents and load the data in database Used Oracle SQL to generate schema and retrieve data Designing mobile search application system requirements and coded backend and frontend in Python Wrote scripts in Unix shell and Perl to streamline indexing process Involved in data load using SQL and SQLLoader and Resolved ongoing problems and accurately documented progress of Python Worked on performance tuning and monitoring of database Involved in requirement analysis database design coding testing implementation and review Developed SQL code to work with Workflow design Used Python to interface with the JQuery UI and manage the storage and deletion of content Environment Perl DBIDBD SQL Oracle PLSQL SQLPLUS SQLLoader UNIX HTML JavaScript Informatica Education Bachelors Skills Python DBIDBD Oracle 11g PLSQL SQLPLUS SQLLoader Unix 8 years Additional Information Technical Skills Frameworks Django web2py Flask Struts pylons and CSS Bootstrap TurboGears web2py Openstack Web Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML AngularJS Programming Languages Python Java SQL and PLSQL Version Control Git GitHub SVN CVS IDEs Tools NetBeans Eclipse PyCharm and Sublime Text Web Services AWS Amazon S3 Google Cloud Platform Operating Systems Windows Red hat Linux MAC OSX",
    "entities": [
        "AJAX",
        "Informatica",
        "ENVIRONMENT Python",
        "New York",
        "Nodejs",
        "UNIX",
        "Driven Development BDD",
        "Oracle Created",
        "Personal Management",
        "LAMP Linux",
        "OpenStack",
        "Managed Backend",
        "the Django Framework",
        "PyJamas",
        "XML",
        "Designed Cloud Infrastructure",
        "Global Inc",
        "DevOps",
        "Amazon",
        "Python",
        "Mongo",
        "Developed",
        "Perldriven",
        "VMware",
        "Admin Module Worked",
        "Restful",
        "Complete Software",
        "Monitored",
        "Pythonlibraries",
        "HTML5",
        "JavaScript Involved",
        "CSS Bootstrap TurboGears",
        "JSP",
        "Built",
        "Worked",
        "Responsibilities Participated",
        "RDS",
        "Developed SQL",
        "Developed Ruby Python",
        "SQLLoader and Resolved",
        "MVC",
        "Present Description Onlife Health",
        "Sublime Text Web Services AWS",
        "Application Create",
        "Python on Django",
        "JS CSS",
        "Python Unittest",
        "API",
        "US",
        "Child Support Enforcement Program Responsibilities Updated",
        "Perl",
        "Java Script JSP CSS",
        "Description Microsoft Certifications",
        "Coding",
        "JSF",
        "Openstack Web Technologies HTML CSS",
        "Python Object Oriented Design",
        "Oracle and Python",
        "AWS Identity Access Management IAM Creating Cloud",
        "RESTFUL",
        "Intuit Turbo Tax",
        "SQL",
        "Cryptography EncryptionHashing Foundation Utilities",
        "LDAP Inventory",
        "Oracle SQL",
        "SQL Performed",
        "lPythonspan",
        "Jenkins Ansible",
        "JS Angular JS CSS",
        "Inventory Management Created",
        "Workflow",
        "AnsiblePuppet Utilized",
        "Datatables",
        "SQLite",
        "Responsibilities Gathered",
        "Established",
        "Data Warehouse Involved",
        "Djangos",
        "JQuery Supported",
        "Python Bootstrap CSS",
        "Additional Information Technical Skills Frameworks Django",
        "SVN",
        "Implemented Integration",
        "REST",
        "Developed Ruby on Rails",
        "PHP",
        "Use Test",
        "TDD",
        "Horizon"
    ],
    "experience": "Experience Python Developer Onlife Health Brentwood TN April 2017 to Present Description Onlife Health is a health and wellness Company that saves health care money by keeping people healthy The aim of the project was to design and develop Enterprise Data warehouse Responsibilities Followed the SDLC activity to fulfill the business requirements and use cases Developed Python Scripts to transform data and to drive execution of SQL server Create a current state process map and documentation Updated and maintained a web server in Unix environment and developed document flow reports using Python Create database triggers for data validations in Oracle Created job scheduling for periodic load processing using SQL and shell scripts Responsible for capacity planning space management problem resolution database monitoring and performance tuning of Production Databases Analyzed business needs and drafted process maps Implemented discretisation binning and data wrangling in Python Automated the addition of transactions to database tables by writing required packages using SQL Designed Unix Scripts to automate the verification of the information inserted in the database which was extensively used in Admin Module Worked with Agile methodology to ensure delivery of high quality work Developed views and templates with Python and Djangos view controller Designer for developing various jobs to extract cleansing transforming integrating and loading data into Data Warehouse Involved in tuning and optimization of SQL statements and Managed Backend using Python and MVC framework Django Worked on development and maintenance of SQL code embedded in PLSQL Managed and support outages during urgency and Supported compliance to all regulatory and audit requirements Provided 24x7 support during application deployment Established a connection between Oracle and Python for the transformation module Implemented hash tables in Unix shell scripting to retrieve data faster Responsible for scripting data manipulation using SQL Performed periodic analysis of business critical systems to provide issue resolution if needed Maintained complete documentation of trading module system maintenance requirements Environment Python DBIDBD Oracle 11 g PLSQL SQLPLUS SQLLoader Unix Python Developer WELLS FARGO New York NY April 2015 to March 2017 Description API Gateway Channel is an integration application developed for integrating various digital clients Intuit Turbo Tax etc to access banks data for Account Validation Tax docs for tax filing and so on Responsibilities Written Nova Glance Neutron Cinder Keystone Hashborad Swift python client API to integrate with existing Application Create a strategic architectural design of the platform with networking vlans firewalls load balancers hypervisors kvm and VMware workflow and orchestration OpenStack APIs Smart Cloud Orchestrator security keystone LDAP Inventory and monitoring licensing backuprestore Understanding python files in openstack environment and make necessary changes if needed Using Cinder to enable persistent storage for applications like databases deployed in Openstack cloud tools Design roles and groups for users and resources using AWS Identity Access Management IAM Creating Cloud watch alerts for instances and using them in auto scaling launch configurations Developed Cloud infrastructure like compute storage and platform Restful services to implement OpenStack API Create a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTful API provided by Openstack Used JSP JavaScript JQuery AJAX CSS3 and HTML5 as data and presentation layer technology Involve in intense User Interface UI operations and client side validations using AJAX toolkit Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Experience with messaging solutions eg ActiveMQ RabbitMQ and ZeroMQ Design and development of user interfaces and client displays using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Implementing multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used HTML CSS AJAX JSON designed and developed the user interface of the website Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Use Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Design front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Used Python and Django creating graphics XML processing data exchange and business logic implementation Develop consumer based features and applications using Python Django HTML behavior Driven Development BDD and pair based programming Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Environment Python 273x Windows SQL and python libraries such as Numpy sqlalchemy sqlDB Python Developer Microsoft Redmond May 2014 to March 2015 Description Microsoft Certifications To generate the required operational reports for the business the team had to extract data manually from multiple sources which were in a multitude of formats and convert sources into a single standard format before compiling the reports Responsibilities Gathered all requirements for developing and analyzing requirement of projects Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis Used Django configuration to manage URLs and application parameters Used Test driven approach for developing the application and Implemented the unit tests using Python Unittest framework Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Familiar with JSON based REST Web services and Amazon Web services AWS Dynamic implementation of SQL server work on website using SQL developer tool Experienced in Agile Methodologies and SCRUM Process Designed front end using UI HTML Bootstrap Node JS underscore JS CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop the application Also used Numpy for Numerical analysis Followed AGILE development methodology to develop the application Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Used Git to resolve and coding the work on Python and portlet Used several Python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and Apache Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval ENVIRONMENT Python 27 PyQT PyQuery MVW HTML5 CSS3 DOM Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows MongoDB PostgreSQL and Pythonlibraries such as Numpy IPython sqlalchemy Django Tastypie Python Developer Microsoft Redmond Hyderabad Telangana May 2013 to April 2014 Description Microsoft Certifications To generate the required operational reports for the business the team had to extract data manually from multiple sources which were in a multitude of formats and convert sources into a single standard format before compiling the reports Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job Developed the required XML Schema documents and implemented the framework for parsing XML Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application and Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various Modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities and Personal Management errorexception management etc Used python to extract weekly hotel availability information from XML files Used Web Services to get travel destination data and rates Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment E commerce Environment Python Windows Django MySql Linux HTML CSS JQuery JavaScript Apache Programmer Analyst Global Inc June 2011 to April 2013 Description Implementation of BI as a reporting tool to develop various reports for the analysis of Child Support Enforcement Program Responsibilities Updated and maintained a web server in Unix environment Worked on development and maintenance of SQL code embedded Work with team of developers on Python applications for Inventory Management Created HTML forms and used Perl scripting language for online querying and reporting for order entry module and Inventory module Involved in SQL debugging and support and Managed and support outages during urgency Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Supported compliance to all regulatory and audit requirements Performed periodic analysis of business critical systems to provide issue resolution if needed Wrote Unix Korn scripts to manipulate the data and then load it into database Used SQL to filter and load data from other production databases Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Designed an HTML interface for a JavaScript and Perldriven price Monitored and trouble shoo ted the data loading problems of Informatica Maintained complete documentation of trading module system maintenance requirements Developed tables and SQL packages procedures and functions Wrote python scripts to parse XML documents and load the data in database Used Oracle SQL to generate schema and retrieve data Designing mobile search application system requirements and coded backend and frontend in Python Wrote scripts in Unix shell and Perl to streamline indexing process Involved in data load using SQL and SQLLoader and Resolved ongoing problems and accurately documented progress of Python Worked on performance tuning and monitoring of database Involved in requirement analysis database design coding testing implementation and review Developed SQL code to work with Workflow design Used Python to interface with the JQuery UI and manage the storage and deletion of content Environment Perl DBIDBD SQL Oracle PLSQL SQLPLUS SQLLoader UNIX HTML JavaScript Informatica Education Bachelors Skills Python DBIDBD Oracle 11 g PLSQL SQLPLUS SQLLoader Unix 8 years Additional Information Technical Skills Frameworks Django web2py Flask Struts pylons and CSS Bootstrap TurboGears web2py Openstack Web Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML AngularJS Programming Languages Python Java SQL and PLSQL Version Control Git GitHub SVN CVS IDEs Tools NetBeans Eclipse PyCharm and Sublime Text Web Services AWS Amazon S3 Google Cloud Platform Operating Systems Windows Red hat Linux MAC OSX",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Onlife",
        "Health",
        "Brentwood",
        "TN",
        "Authorized",
        "US",
        "employer",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Onlife",
        "Health",
        "Brentwood",
        "TN",
        "April",
        "Present",
        "Description",
        "Onlife",
        "Health",
        "health",
        "wellness",
        "Company",
        "health",
        "care",
        "money",
        "people",
        "aim",
        "project",
        "Enterprise",
        "Data",
        "warehouse",
        "Responsibilities",
        "SDLC",
        "activity",
        "business",
        "requirements",
        "use",
        "cases",
        "Python",
        "Scripts",
        "data",
        "execution",
        "SQL",
        "server",
        "state",
        "process",
        "map",
        "documentation",
        "web",
        "server",
        "Unix",
        "environment",
        "document",
        "flow",
        "reports",
        "Python",
        "Create",
        "database",
        "triggers",
        "data",
        "validations",
        "Oracle",
        "job",
        "scheduling",
        "load",
        "processing",
        "SQL",
        "shell",
        "scripts",
        "capacity",
        "planning",
        "space",
        "management",
        "problem",
        "resolution",
        "database",
        "monitoring",
        "performance",
        "tuning",
        "Production",
        "business",
        "needs",
        "process",
        "maps",
        "discretisation",
        "binning",
        "data",
        "Python",
        "addition",
        "transactions",
        "database",
        "tables",
        "packages",
        "SQL",
        "Unix",
        "Scripts",
        "verification",
        "information",
        "database",
        "Admin",
        "Module",
        "methodology",
        "delivery",
        "quality",
        "work",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "Designer",
        "jobs",
        "cleansing",
        "loading",
        "data",
        "Data",
        "Warehouse",
        "tuning",
        "optimization",
        "SQL",
        "statements",
        "Managed",
        "Backend",
        "Python",
        "MVC",
        "framework",
        "Django",
        "development",
        "maintenance",
        "SQL",
        "code",
        "PLSQL",
        "Managed",
        "outages",
        "urgency",
        "compliance",
        "audit",
        "requirements",
        "support",
        "application",
        "deployment",
        "connection",
        "Oracle",
        "Python",
        "transformation",
        "module",
        "hash",
        "tables",
        "Unix",
        "shell",
        "scripting",
        "data",
        "data",
        "manipulation",
        "SQL",
        "Performed",
        "analysis",
        "business",
        "systems",
        "issue",
        "resolution",
        "documentation",
        "trading",
        "module",
        "system",
        "maintenance",
        "requirements",
        "Environment",
        "Python",
        "DBIDBD",
        "Oracle",
        "g",
        "PLSQL",
        "SQLPLUS",
        "SQLLoader",
        "Unix",
        "Python",
        "Developer",
        "WELLS",
        "New",
        "York",
        "NY",
        "April",
        "March",
        "Description",
        "API",
        "Gateway",
        "Channel",
        "integration",
        "application",
        "clients",
        "Intuit",
        "Turbo",
        "Tax",
        "access",
        "banks",
        "data",
        "Account",
        "Validation",
        "Tax",
        "docs",
        "tax",
        "filing",
        "Responsibilities",
        "Nova",
        "Glance",
        "Neutron",
        "Cinder",
        "Keystone",
        "Hashborad",
        "Swift",
        "client",
        "API",
        "Application",
        "design",
        "platform",
        "vlans",
        "firewalls",
        "load",
        "balancers",
        "hypervisors",
        "kvm",
        "workflow",
        "orchestration",
        "OpenStack",
        "APIs",
        "Smart",
        "Cloud",
        "Orchestrator",
        "security",
        "keystone",
        "LDAP",
        "Inventory",
        "licensing",
        "backuprestore",
        "files",
        "environment",
        "changes",
        "Cinder",
        "storage",
        "applications",
        "databases",
        "Openstack",
        "cloud",
        "Design",
        "roles",
        "groups",
        "users",
        "resources",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "Cloud",
        "alerts",
        "instances",
        "auto",
        "scaling",
        "launch",
        "configurations",
        "Cloud",
        "infrastructure",
        "compute",
        "storage",
        "services",
        "OpenStack",
        "API",
        "custom",
        "dashboard",
        "JSF",
        "Horizon",
        "dashboard",
        "API",
        "Openstack",
        "JSP",
        "JavaScript",
        "JQuery",
        "AJAX",
        "CSS3",
        "HTML5",
        "data",
        "presentation",
        "layer",
        "technology",
        "User",
        "Interface",
        "UI",
        "operations",
        "client",
        "side",
        "validations",
        "AJAX",
        "toolkit",
        "applications",
        "RESTFUL",
        "architecture",
        "Nodejs",
        "PHP",
        "languages",
        "Cloud",
        "Infrastructure",
        "Service",
        "environment",
        "source",
        "technology",
        "OpenStack",
        "portability",
        "cloud",
        "services",
        "cloud",
        "Experience",
        "solutions",
        "eg",
        "ActiveMQ",
        "RabbitMQ",
        "ZeroMQ",
        "Design",
        "development",
        "user",
        "interfaces",
        "client",
        "displays",
        "Java",
        "Script",
        "JSP",
        "CSS",
        "issues",
        "Python",
        "code",
        "code",
        "enhancements",
        "code",
        "python",
        "libraries",
        "PyJamas",
        "Jython",
        "application",
        "provisioning",
        "OpenStack",
        "cloud",
        "AnsiblePuppet",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "user",
        "interface",
        "website",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "integration",
        "automation",
        "Jenkins",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "software",
        "developers",
        "DevOps",
        "software",
        "system",
        "problems",
        "AGILE",
        "development",
        "methodology",
        "application",
        "GO",
        "Programming",
        "Language",
        "legacy",
        "Use",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Implemented",
        "Integration",
        "test",
        "cases",
        "analytic",
        "Apache",
        "Spark",
        "Scala",
        "APIs",
        "Design",
        "front",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "Angular",
        "JS",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tastypie",
        "Web",
        "Framework",
        "Git",
        "Used",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Develop",
        "consumer",
        "features",
        "applications",
        "Python",
        "Django",
        "HTML",
        "behavior",
        "Driven",
        "Development",
        "BDD",
        "programming",
        "Design",
        "data",
        "management",
        "system",
        "PostgreSQL",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Environment",
        "Python",
        "273x",
        "Windows",
        "SQL",
        "python",
        "libraries",
        "Numpy",
        "sqlalchemy",
        "Python",
        "Developer",
        "Microsoft",
        "Redmond",
        "May",
        "March",
        "Description",
        "Microsoft",
        "Certifications",
        "reports",
        "business",
        "team",
        "data",
        "sources",
        "multitude",
        "formats",
        "sources",
        "format",
        "reports",
        "Responsibilities",
        "requirements",
        "requirement",
        "projects",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Tasty",
        "pie",
        "Web",
        "Framework",
        "Git",
        "Developed",
        "Merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Developed",
        "Ruby",
        "Rails",
        "web",
        "applications",
        "MongoDB",
        "background",
        "processes",
        "Resque",
        "Redis",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "framework",
        "Developed",
        "Ruby",
        "Python",
        "health",
        "Mongo",
        "adhoc",
        "backups",
        "Mongo",
        "dump",
        "Mongo",
        "Familiar",
        "JSON",
        "REST",
        "Web",
        "services",
        "Amazon",
        "Web",
        "services",
        "implementation",
        "SQL",
        "server",
        "work",
        "website",
        "SQL",
        "developer",
        "tool",
        "Agile",
        "Methodologies",
        "SCRUM",
        "Process",
        "end",
        "UI",
        "HTML",
        "Bootstrap",
        "Node",
        "JS",
        "JS",
        "CSS",
        "JavaScript",
        "Complete",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "application",
        "Numpy",
        "Numerical",
        "analysis",
        "AGILE",
        "development",
        "methodology",
        "application",
        "apache",
        "server",
        "project",
        "Test",
        "approach",
        "TDD",
        "services",
        "application",
        "Integration",
        "test",
        "cases",
        "MongoDB",
        "database",
        "concepts",
        "transactions",
        "indexes",
        "Sharding",
        "replication",
        "schema",
        "Git",
        "work",
        "Python",
        "portlet",
        "Python",
        "libraries",
        "wxPython",
        "numPY",
        "matPlotLib",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "database",
        "mapping",
        "classes",
        "Django",
        "models",
        "Apache",
        "Cassandra",
        "Pandas",
        "API",
        "data",
        "time",
        "series",
        "format",
        "east",
        "timestamp",
        "data",
        "manipulation",
        "retrieval",
        "ENVIRONMENT",
        "Python",
        "PyQT",
        "PyQuery",
        "MVW",
        "HTML5",
        "CSS3",
        "DOM",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "SQL",
        "UNIX",
        "Windows",
        "MongoDB",
        "PostgreSQL",
        "Pythonlibraries",
        "Numpy",
        "IPython",
        "sqlalchemy",
        "Django",
        "Tastypie",
        "Python",
        "Developer",
        "Microsoft",
        "Redmond",
        "Hyderabad",
        "Telangana",
        "May",
        "April",
        "Description",
        "Microsoft",
        "Certifications",
        "reports",
        "business",
        "team",
        "data",
        "sources",
        "multitude",
        "formats",
        "sources",
        "format",
        "reports",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PHP",
        "environment",
        "GUI",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "jQuery",
        "Core",
        "Java",
        "C",
        "STL",
        "data",
        "structures",
        "UNIX",
        "application",
        "logic",
        "Python27",
        "Used",
        "Apache",
        "Couchdb",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "Django",
        "Framework",
        "application",
        "Django",
        "APIs",
        "database",
        "access",
        "UIS",
        "system",
        "design",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "approach",
        "Modulespackagesutilities",
        "eg",
        "Cryptography",
        "EncryptionHashing",
        "Foundation",
        "Utilities",
        "Personal",
        "Management",
        "errorexception",
        "management",
        "python",
        "hotel",
        "availability",
        "information",
        "XML",
        "files",
        "Web",
        "Services",
        "travel",
        "destination",
        "data",
        "rates",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "shopping",
        "cart",
        "Library",
        "web",
        "services",
        "payment",
        "E",
        "commerce",
        "Environment",
        "Python",
        "Windows",
        "Django",
        "MySql",
        "Linux",
        "HTML",
        "CSS",
        "JQuery",
        "JavaScript",
        "Apache",
        "Programmer",
        "Analyst",
        "Global",
        "Inc",
        "June",
        "April",
        "Description",
        "Implementation",
        "BI",
        "reporting",
        "tool",
        "reports",
        "analysis",
        "Child",
        "Support",
        "Enforcement",
        "Program",
        "Responsibilities",
        "web",
        "server",
        "Unix",
        "environment",
        "development",
        "maintenance",
        "SQL",
        "code",
        "Work",
        "team",
        "developers",
        "Python",
        "applications",
        "Inventory",
        "Management",
        "HTML",
        "forms",
        "Perl",
        "scripting",
        "language",
        "order",
        "entry",
        "module",
        "Inventory",
        "module",
        "SQL",
        "debugging",
        "support",
        "Managed",
        "outages",
        "urgency",
        "end",
        "application",
        "Python",
        "HTML",
        "CSS",
        "AJAX",
        "JSON",
        "JQuery",
        "compliance",
        "audit",
        "requirements",
        "analysis",
        "business",
        "systems",
        "issue",
        "resolution",
        "Wrote",
        "Unix",
        "Korn",
        "scripts",
        "data",
        "database",
        "SQL",
        "data",
        "production",
        "features",
        "dashboard",
        "Python",
        "Bootstrap",
        "CSS",
        "JavaScript",
        "Wrote",
        "Python",
        "code",
        "JSON",
        "XML",
        "HTTP",
        "GET",
        "request",
        "HTML",
        "data",
        "websites",
        "HTML",
        "interface",
        "JavaScript",
        "Perldriven",
        "price",
        "trouble",
        "data",
        "loading",
        "problems",
        "Informatica",
        "documentation",
        "trading",
        "module",
        "system",
        "maintenance",
        "requirements",
        "tables",
        "SQL",
        "packages",
        "procedures",
        "functions",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "Oracle",
        "SQL",
        "schema",
        "data",
        "search",
        "application",
        "system",
        "requirements",
        "backend",
        "frontend",
        "Python",
        "Wrote",
        "scripts",
        "Unix",
        "shell",
        "Perl",
        "indexing",
        "process",
        "data",
        "load",
        "SQL",
        "SQLLoader",
        "problems",
        "progress",
        "Python",
        "performance",
        "tuning",
        "monitoring",
        "database",
        "requirement",
        "analysis",
        "database",
        "design",
        "testing",
        "implementation",
        "Developed",
        "SQL",
        "code",
        "Workflow",
        "design",
        "Python",
        "JQuery",
        "UI",
        "storage",
        "deletion",
        "content",
        "Environment",
        "Perl",
        "DBIDBD",
        "SQL",
        "Oracle",
        "PLSQL",
        "SQLPLUS",
        "SQLLoader",
        "UNIX",
        "HTML",
        "JavaScript",
        "Informatica",
        "Education",
        "Bachelors",
        "Skills",
        "Python",
        "DBIDBD",
        "Oracle",
        "g",
        "PLSQL",
        "SQLPLUS",
        "SQLLoader",
        "Unix",
        "years",
        "Additional",
        "Information",
        "Technical",
        "Skills",
        "Frameworks",
        "Django",
        "web2py",
        "Flask",
        "Struts",
        "pylons",
        "CSS",
        "Bootstrap",
        "TurboGears",
        "web2py",
        "Openstack",
        "Web",
        "Technologies",
        "HTML",
        "CSS",
        "DOM",
        "SAX",
        "Java",
        "Script",
        "JQuery",
        "AJAX",
        "XML",
        "Programming",
        "Languages",
        "Python",
        "Java",
        "SQL",
        "PLSQL",
        "Version",
        "Control",
        "Git",
        "GitHub",
        "SVN",
        "CVS",
        "IDEs",
        "Tools",
        "NetBeans",
        "Eclipse",
        "PyCharm",
        "Sublime",
        "Text",
        "Web",
        "Services",
        "Amazon",
        "S3",
        "Google",
        "Cloud",
        "Platform",
        "Operating",
        "Systems",
        "Windows",
        "Red",
        "hat",
        "Linux",
        "MAC",
        "OSX"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:38:22.424791",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Onlife Health Brentwood TN Authorized to work in the US for any employer Work Experience Python Developer Onlife Health Brentwood TN April 2017 to Present Description Onlife Health is a health and wellness Company that saves health care money by keeping people healthy The aim of the project was to design and develop Enterprise Data warehouse Responsibilities Followed the SDLC activity to fulfill the business requirements and use cases Developed Python Scripts to transform data and to drive execution of SQL server Create a current state process map and documentation Updated and maintained a web server in Unix environment and developed document flow reports using Python Create database triggers for data validations in Oracle Created job scheduling for periodic load processing using SQL and shell scripts Responsible for capacity planning space management problem resolution database monitoring and performance tuning of Production Databases Analyzed business needs and drafted process maps Implemented discretisation binning and data wrangling in Python Automated the addition of transactions to database tables by writing required packages using SQL Designed Unix Scripts to automate the verification of the information inserted in the database which was extensively used in Admin Module Worked with Agile methodology to ensure delivery of high quality work Developed views and templates with Python and Djangos view controller Designer for developing various jobs to extract cleansing transforming integrating and loading data into Data Warehouse Involved in tuning and optimization of SQL statements and Managed Backend using Python and MVC framework Django Worked on development and maintenance of SQL code embedded in PLSQL Managed and support outages during urgency and Supported compliance to all regulatory and audit requirements Provided 24x7 support during application deployment Established a connection between Oracle and Python for the transformation module Implemented hash tables in Unix shell scripting to retrieve data faster Responsible for scripting data manipulation using SQL Performed periodic analysis of business critical systems to provide issue resolution if needed Maintained complete documentation of trading module system maintenance requirements Environment Python DBIDBD Oracle 11g PLSQL SQLPLUS SQLLoader Unix Python Developer WELLS FARGO New York NY April 2015 to March 2017 Description API Gateway Channel is an integration application developed for integrating various digital clients Intuit Turbo Tax etc to access banks data for Account Validation Tax docs for tax filing and so on Responsibilities Written Nova Glance Neutron Cinder Keystone Hashborad Swift python client API to integrate with existing Application Create a strategic architectural design of the platform with networking vlans firewalls load balancers hypervisors kvm and VMware workflow and orchestration OpenStack APIs Smart Cloud Orchestrator security keystone LDAP Inventory and monitoring licensing backuprestore Understanding python files in openstack environment and make necessary changes if needed Using Cinder to enable persistent storage for applications like databases deployed in Openstack cloud tools Design roles and groups for users and resources using AWS Identity Access Management IAM Creating Cloud watch alerts for instances and using them in auto scaling launch configurations Developed Cloud infrastructure like compute storage and platform Restful services to implement OpenStack API Create a custom dashboard using JSF replacing an existing Horizon dashboard using the RESTful API provided by Openstack Used JSP JavaScript JQuery AJAX CSS3 and HTML5 as data and presentation layer technology Involve in intense User Interface UI operations and client side validations using AJAX toolkit Developing applications using RESTFUL architecture using Nodejs and PHP as backend languages Designed Cloud Infrastructure as a Service environment using open source technology OpenStack to enable portability of cloud services across hybrid cloud environments Experience with messaging solutions eg ActiveMQ RabbitMQ and ZeroMQ Design and development of user interfaces and client displays using Java Script JSP CSS and troubleshoot various issues in Python code and fix them with code enhancements code used various python libraries such as PyJamas and Jython Implementing multitier application provisioning in OpenStack cloud integrating it with AnsiblePuppet Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Used HTML CSS AJAX JSON designed and developed the user interface of the website Dynamic implementation of SQL server work on website using SQL developer tool and working with continuous integration and automation using Jenkins Involved in the Complete Software development life cycle SDLC to develop the application and Worked closely with software developers and DevOps to debug software and system problems Followed AGILE development methodology to develop the application and Used the GO Programming Language to refactor and redesign the legacy databases Use Test driven approach TDD for developing services required for the application and Implemented Integration test cases and Developing predictive analytic using Apache Spark Scala APIs Design front end using UI HTML Bootstrap Node JS underscore JS Angular JS CSS and JavaScript Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git Used Python and Django creating graphics XML processing data exchange and business logic implementation Develop consumer based features and applications using Python Django HTML behavior Driven Development BDD and pair based programming Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Environment Python 273x Windows SQL and python libraries such as Numpy sqlalchemy sqlDB Python Developer Microsoft Redmond May 2014 to March 2015 Description Microsoft Certifications To generate the required operational reports for the business the team had to extract data manually from multiple sources which were in a multitude of formats and convert sources into a single standard format before compiling the reports Responsibilities Gathered all requirements for developing and analyzing requirement of projects Developed entire frontend and backend modules using Python on Django including Tasty pie Web Framework using Git Developed Merge jobs in Python to extract and load data into MySQL database Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Developed Ruby on Rails 3 web applications using MongoDB and background processes using Resque and Redis Used Django configuration to manage URLs and application parameters Used Test driven approach for developing the application and Implemented the unit tests using Python Unittest framework Developed Ruby Python scripts to monitor health of Mongo databases and perform adhoc backups using Mongo dump and Mongo restore Familiar with JSON based REST Web services and Amazon Web services AWS Dynamic implementation of SQL server work on website using SQL developer tool Experienced in Agile Methodologies and SCRUM Process Designed front end using UI HTML Bootstrap Node JS underscore JS CSS and JavaScript Involved in the Complete Software development life cycle SDLC to develop the application Also used Numpy for Numerical analysis Followed AGILE development methodology to develop the application Used and customized apache server to for checking our developed project Used Test driven approach TDD for developing services required for the application Implemented Integration test cases Worked on MongoDB database concepts such as locking transactions indexes Sharding replication schema design Used Git to resolve and coding the work on Python and portlet Used several Python libraries like wxPython numPY and matPlotLib Was involved in environment code installation as well as the SVN implementation Build all database mapping classes using Django models and Apache Cassandra Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval ENVIRONMENT Python 27 PyQT PyQuery MVW HTML5 CSS3 DOM Shell Scripting JSON Rest Apache Web Server Django SQL UNIX Windows MongoDB PostgreSQL and Pythonlibraries such as Numpy IPython sqlalchemy Django Tastypie Python Developer Microsoft Redmond Hyderabad Telangana May 2013 to April 2014 Description Microsoft Certifications To generate the required operational reports for the business the team had to extract data manually from multiple sources which were in a multitude of formats and convert sources into a single standard format before compiling the reports Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Coding in LAMP Linux Apache MySQL and PHP environment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Worked mainly on Core Java C STL data structures UNIX multithreading Built application logic using Python27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job Developed the required XML Schema documents and implemented the framework for parsing XML Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Used the Django Framework to develop the application and Used Django APIs for database access UIS system design Python Object Oriented Design approach developing various Modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities and Personal Management errorexception management etc Used python to extract weekly hotel availability information from XML files Used Web Services to get travel destination data and rates Worked on development of SQL and stored procedures on MYSQL Developed shopping cart for Library and integrated web services to access the payment E commerce Environment Python Windows Django MySql Linux HTML CSS JQuery JavaScript Apache Programmer Analyst Global Inc June 2011 to April 2013 Description Implementation of BI as a reporting tool to develop various reports for the analysis of Child Support Enforcement Program Responsibilities Updated and maintained a web server in Unix environment Worked on development and maintenance of SQL code embedded Work with team of developers on Python applications for Inventory Management Created HTML forms and used Perl scripting language for online querying and reporting for order entry module and Inventory module Involved in SQL debugging and support and Managed and support outages during urgency Designed the front end of the application using Python HTML CSS AJAX JSON and JQuery Supported compliance to all regulatory and audit requirements Performed periodic analysis of business critical systems to provide issue resolution if needed Wrote Unix Korn scripts to manipulate the data and then load it into database Used SQL to filter and load data from other production databases Developed and tested many features for dashboard using Python Bootstrap CSS and JavaScript Wrote Python code embedded with JSON and XML to produce HTTP GET request parsing HTML data from websites Designed an HTML interface for a JavaScript and Perldriven price Monitored and trouble shoo ted the data loading problems of Informatica Maintained complete documentation of trading module system maintenance requirements Developed tables and SQL packages procedures and functions Wrote python scripts to parse XML documents and load the data in database Used Oracle SQL to generate schema and retrieve data Designing mobile search application system requirements and coded backend and frontend in Python Wrote scripts in Unix shell and Perl to streamline indexing process Involved in data load using SQL and SQLLoader and Resolved ongoing problems and accurately documented progress of Python Worked on performance tuning and monitoring of database Involved in requirement analysis database design coding testing implementation and review Developed SQL code to work with Workflow design Used Python to interface with the JQuery UI and manage the storage and deletion of content Environment Perl DBIDBD SQL Oracle PLSQL SQLPLUS SQLLoader UNIX HTML JavaScript Informatica Education Bachelors Skills Python DBIDBD Oracle 11g PLSQL SQLPLUS SQLLoader Unix 8 years Additional Information Technical Skills Frameworks Django web2py Flask Struts pylons and CSS Bootstrap TurboGears web2py Openstack Web Technologies HTML CSS DOM SAX Java Script JQuery AJAX XML AngularJS Programming Languages Python Java SQL and PLSQL Version Control Git GitHub SVN CVS IDEs Tools NetBeans Eclipse PyCharm and Sublime Text Web Services AWS Amazon S3 Google Cloud Platform Operating Systems Windows Red hat Linux MAC OSX",
    "unique_id": "fd620f2e-3020-441b-b97b-63b3987a1e89"
}