{
    "clean_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer Arizona Office of Courts Phoenix AZ Work Experience Sr Java Full Stack Developer Arizona Office of Courts Phoenix AZ June 2018 to Present Designed and developed the web application for the FMS Financial Management System which is the core financial system designed as per MAS Minimum Accounting Standards for JACKS Court Management System application Senior technical resource in development teams efforts to determine the needs of the Department in a manner that will simplify and automate the applications while obtaining optimum efficiency Key responsibilitiesmilestones Involved in Requirements gathering Sprint planning Designing and Implementation Developed a custom singlepage responsive Web Application on front end using Angular 40 Expertise in various SDLC methodologies like Waterfall Iterative RUP Agile Scrum and TDD Test Driven Development Strong working experience in solving CrossBrowser Compatibility challenges and processing Responsiveness Hands on experience in building Enterprise Applications and Distributed Systems using technologies such as Core Java5678 J2EE Servlets JSP JSF EJB Hibernate Spring Struts JDBC JMS Experience in designing Rich Internet Applications RIAs with AngularJS Angular246 jQuery and AJAX Experience in Web technologies such as Angular AJAX JSON HTML CSS jQuery JavaScript Bootstrap AJAX DWR JSON and DOJO Expertise in Angular JS controllers directives factory and service resources routings and events Expertise in DOM manipulation using JavaScript jQuery and Angular JS Strong handson experience with Spring MVC Controllers Spring boot Validators Spring Annotations Spring tag library Inversion of Control IOC Spring LDAP Spring Batch Spring Scheduler Application Context configuration Spring Aspect Oriented Programming AOP Spring DAO Hibernate Spring Security along with Hibernate as the backend ORM tool for implementation of persistence layer and mapping of POJOs Designed pages using Angular 40 Validations Modules Events Expressions Directives Controllers and Filters Extensively used Spring Framework modules like MVC DI IOC JDBC Templates Spring Security and AOP Created and injected Spring services controllers and DAOs for DI and to wire objects of business classes Implemented the Project structure based on Spring MVC pattern using Spring boot Highly used Spring Boot Actuator Spring Cloud and Netflix Eureka Extensively used Hibernate Mappings HQL Query Criteria Lazy Loading Transactions and Lockings Developed Stored Procedures triggered stored procedures using Hibernate Used Hibernate EHcache for second level caching which resulted in enhanced performance of the application Developed Web Services using SOA technologies such as REST Developed and consumed Apache CXF based Web Services as part of Payments Application Developed Grunt tasks to run the unit tests on Jenkins Used advanced Java 8 features like Lambda Expressions Streams Filters Enhanced concurrency methods etc Developed Business rules using Drools and integrated with Application Deployed the application in JBoss production server running in Linux platform Worked with high volume and complex PLSQL Stored Procedures and Packages using TOAD Design patterns are extensively used to achieve clean separation of different layers like Adapter Singleton Factory Abstract Factory Service Locator and Facade Used AWS SNS to send messages to email and http end point Extensively Used Castor XStream and JAXB APIs for XML Marshaling and Unmarshaling Involved in process for builds and deployments with Maven and Jenkins for continuous integration Developing Docker images for development and testing teams and their pipelines Implementing or exposing the Micro Service architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Coordinated Kafka operations and monitoring via JMX with Dev ops team For accessing storing and inserting data we use NoSQL DB which is MongoDB Configured Karma test runner for the project and unit tests are written in Jasmine Developed Cloud Solutions on AWS utilizing EC2 S3 IAM ECS and RDS etc Environments J2EE Spring Framework Micro Services Spring MVC 4 Angular 40 Core Java Spring Security Hibernate 4X Magento jQuery JSON AJAX Web Services SOAP XML Java Beans XSTREAM Apache POI EXT JS JavaScript Eclipse JBOSS Agile Methodology Design Patterns Apache Maven JUnit HTMLUnit XSLT HTML5DHTML Sr Java Developer Vanguard Malvern PA January 2016 to June 2018 Vanguard is the largest provider of mutual funds and the secondlargest provider of exchangetraded funds ETFs in the world after BlackRocks iShares In addition to mutual funds and ETFs Vanguard offers brokerage services variable and fixed annuities educational account services financial planning asset management and trust services Key responsibilitiesmilestones Experience using Hibernate for mapping Java Classes with database using Hibernate Query Language HQL Developed DAOs using JPA entity manager and JTA for transaction handling Implemented Spring security features using AOP Interceptors for the authentication Extensively used MVC Factory Delegate and Singleton design patterns Involved in writing Spring Configuration XML file that contains declarations DB connections and other dependent objects Strong experience with database design in ORACLE 8i9i10g11g MySQL MS SQL Server and DB2 that includes DDL DML DCL SQL PLSQL triggers cursors stored procedures indexes blocks packages Good experience on working with Amazon Web Services like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front Expertise in developing applications using Spring Framework and using spring modules such as IOC AOP MVC JDBC ORM Boot Cloud Security and configuring application context for spring bean factory Extensive hands on work experience using Microservices with Spring Boot Restful and SOAP SOAP UI Web services Experience in developing and implementing Service Oriented Architecture SOA using Web Services SOAP REST WSDL and UDDI Handson experience with various web and enterprise application servers like Apache Tomcat BEA WebLogic IBM WebSphere and JBoss Experience working on JMS API and asynchronous message transfer communication Extensively worked with JMS Providers such as IBM MQ Series Strong experience with database design in ORACLE 8i9i10g11g MySQL MS SQL Server and DB2 that includes DDL DML DCL SQL PLSQL triggers cursors stored procedures indexes blocks packages Experience in using NoSQL databases like Mongo DB and Cassandra Extensive experience in implementing J2EE design patterns like Session Faade Singleton MVC pattern Business Delegate VO Data Access Object Service Locator Transfer Object Worked on different IDEs like Eclipse WSAD RAD and Net beans Experience in using NoSQL database Mongo DB Experience in using various version control tools like CVS GIT and SVN Experience in unit testing Integration testing performance testing writing UTD UTR JUnit Testing tool Experience in writing build scripts using ANT Gradle and Maven and implementing Continuous Integration and Continuous deployment using Jenkins and also with Deploy Developed Micro Services using Spring Cloud Spring Boot with Netflix Eureka to create the discovery Server service discovery clients and integrated Apache Kafka and Zoo Keeper as message broker Developed Spring Framework based RESTFUL Web Services for handling and persisting of requests and Spring MVC for returning response to presentation tier Used advanced java8 features like Lambda Expressions Streams Filters Enhanced concurrency methods etc Involved in various phases of Software Development Life Cycle SDLC and involved in Agile methodology break tasks into small increments called SCRUM with minimal planning Analyzed the system for Requirements and Design by developing Use Case Class Sequence and Collaboration Diagrams using MS Visio as part of UML created documents Worked through cross browser compatibility issues with layout and styles for all new CSS that was implemented Designed and developed custom message adapter components using Apache Kafka that allowed message to travel through Micro Services to base on RESTful API utilizing Spring Boot with Spring MVC Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Monitored frontend development which is performed by Angular JS HTML CSS3 and worked with views handlebars and different concepts related to Ember framework Developed Web Services using SOA technologies such as REST Worked on creation of Docker container images pushing images tagging integrating Spring boot created the Docker containers and Docker consoles for managing the application life cycle Created MQ Series objects on local and remote MQ servers Deployed applications on BEA Web logic application server 90 Used Eclipse IDE for coding and GIT for version control Designed application presentation layer with JSP Ajax J Query Struts Taglibraries and CSS Implemented REST Services to call jBPM Services and converting to JSON Developed web service using Drop wizard framework Developed and deployed REST API Services with SpringBoot to establish services for end devices Initiated Unit tests with JUnit and created technical documents Used Spring AOP for exceptions logging along with log4J and transaction handling in DAOs Prepare Test Environment Git and Gerrit for Unit Testing and Integration Testing Used JAXB API to bind XML Schema to java classes Environments Java JEE6 Core Java OOPS WebLogic 11 Gradle Hibernate Camel MQ Series WebSphere Angular JS and Restful Web services JUnit Spring Data Bootstrap UI JBoss CSS3 Spring boot jQuery NodeJS AJAX SpringBoot Struts 2x AWS Docker HTML JMS Unix Oracle 11g SQL Server GIT Eclipse RCP CVS Maven Sr Java Developer Fanni Mae Reston VA October 2013 to December 2015 The Federal National Mortgage Association FNMA commonly known as Fannie Mae is a United States governmentsponsored enterprise GSE and a publicly traded company The corporations purpose is to expand the secondary mortgage market by securitizing mortgage loans in the form of mortgagebacked securities allowing lenders to reinvest their assets into more lending and in effect increasing the number of lenders in the mortgage market by reducing the reliance on locally based savings and loan associations Key responsibilitiesmilestones Designed and developed various modules of the application with J2EE design architecture and frameworks like Spring MVC architecture and Spring Bean Factory using IOC AOP concepts Involved in complete development of AgileSCRUM developed and tested the application during various iterations Involved in developing Struts Actions and performed server side validations using Struts Validator Developed Rich User Interface using JavaScript J Query Bootstrap Angular JS AJAX HTML5 and CSS3 Actively participated with the development team to meet the specific customer requirements and proposed effective Hadoop solutions Developed DAO objects to handle data access operations using Spring DAO module Designed modular Micro Services to replace the existing website using Spring Boot and Spring Cloud Used Apache Camel for routing the exchanges between different systems Implemented Hibernate mapping files and generated POJOs using hbm2java tool Developed SOAP Web Services provider using Spring Web Services module Used Apache camel to integrate different applications Developed Camel Orchestration layers to integrate different components of the application Work on Detailed Code design and develop the code in JavaJ2EE components including Core Java JavaScript JSPServlets Building Restful Web services with SQL Used AngularJS as the development framework to build a singlepage application Used JavaScript for Client Side page validation scripting to avoid the need for Post Back and thereby improving the performance and responsiveness Worked with User Controls Validation Controls Web Server Controls and Grid Views Consumed Web Services from different source providers by creating Web Service client applications to test the Web Services Used JIBX mappings for marshalling and unmarshalling of XML data and Design and implement a Context RESTful API using Java Spring boot Worked on AS400 and Oracle 10g as backend databases Used Ant for developing build scripts and deploying the Eclipse RCP application onto Web Logic Implemented Display tag library in JSP pages for pagination and sorting functionalities Implemented various design patterns like Data Access Object Front Controller Model View Controller and Singleton in different tiers of the module Environments Spring 20 Struts 2x JBoss Fuse JEE6 EAP 43 Hibernate 30 Web Services Spring MVC Spring boot Apache camel SOAP UI JIBX Servlets JSP AJAX JavaScript Redux Bootstrap Angular JS JDBC JQuery JUnit MongoDB ANT XML Java Developer Bodhtree December 2011 to September 2013 Property Liability Management application used for storing the details of the Property and Liability exposures which later will be used by another system for calculating the contributions for the School districts Colleges Hospitals and Municipalities etc Key responsibilitiesmilestones Developed the application using Struts Framework that leverages classical Model View Layer MVC architecture UML diagrams like class diagrams interaction diagrams sequence and collaboration and activity diagrams Worked in an agile development environment and involved in daily SCRUM Worked closely with businessside clients to deliver attractive easytounderstand pages that appropriately reflected the companys fulfillment workflow Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Deployed Spring Boot based micro services in Docker container using Amazon EC2 container services and using AWS admin console Designed and developed data management and reporting systems using Java JavaScript Angular 46 Typescript HTML CSS3 and other scripting languages Developed the GUI module DMT using Typescript DOJO Ajax HTML Angular was extensively used to achieve DOM Show hide elements and Event Handling Used Angular as the development framework to build a singlepage application and reusable Angular applications Developed business components using core java8 concepts like lambda date functional interfaces and classes like Inheritance Polymorphism Collections Serialization and Multithreading Used core java concepts like Collections Generics Exception handling IO Concurrency to develop business logic Developed end to end application on Spring Boot framework REST ApplicationSpring JPA using Crud repository Produced and consumed Restful Web Services for transferring XML data between two interfaces Developing application using spring core module and POJOs and worked on Messaging service Used the lightweight container of the Spring MVC Framework to provide architectural flexibility for inversion of controller IOC and Used Spring Core Annotations for Dependency Injection and Spring MVC for REST APIs application with Spring Boot and Microservices Developed SQL PLSQL stored procedures along with Shell Scripting database application scripts Created various Parser programs to extract data from IBM TIVOLI XML Java and database views GIT for version control of the application Tested Service and data access tier using Junit Mockito and Power Mockito Log4J to capture the log the events and exceptions Created DB2 SQL Procedures Functions Stored Procedures Nested Tables Cursors Reports SQL Functions for Reports Analyzed and understood the specifications provided by the clients Developed the presentation tier using HTML CSS JSP Servlets JSTL Ajax and Struts Used StrutsValidator framework for all frontend Validations for all the form entries Used Struts framework for the MVC implementation and Hibernate as ORM tool for database communication Designed and developed the code using multithreading Collections and other J2EE technologies Business Logic analysis to produce Business Requirement Workflow Diagram Architecture Functional and Design specifications Coded Action Classes Action Form for the web tier for the Customer Service representative to send a fax request with Struts validation framework Provided Support to migrate from WebLogic server to JBoss Designed and developed the controller and view components using JSPs and Servlets Used various Java scripts functions and was involved in coding Cascade style sheets CSS Designed and Implemented PLSQL stored procedures to process data operations Developed Demon threads using multithreading which runs continuously Deploying by resolving any external dependencies and customizing these deployed enterprise bean in this specific application Finally deployed the jar files in the Container and WAR files in the Web Container on to the WebSphere server Worked and modified the database schema as per the Client requirement Involved in implementing the DAO pattern for database connectivity and Hibernate System maintenance and functionality addition and improvement Performed unit testing of the developed application Consistently met deadlines and exceeded expectations achieving recognition resulting in increases in responsibilities Involved in Unit integration bug fixing acceptance testing with test cases Code reviewing Involved in production support and maintaining the application after production Used Log4j Junit and developed unit test cases to monitor the application functionality Used Tomcat as a server to deploy the application Environments Struts Java JSP Servlets Hibernate ORM Oracle MultiThreading JDBC Log4J MySQL PLSQL Eclipse 3 XML ANT JUnit Putty IBM WebSphere XSLT DOM Parser SAX Parser UML OOD Tomcat MVC JDBC 30 Applets Linux Windows XP Subversion Visio 2003 Software Engineer Sonata Software April 2009 to November 2011 SOMS Sonata Operational Management System is an inhouse application developed to ease our daily routines at our work place This application helps to erase all hurdles and provide a smoother bridge in communicating to various departments straight from your desk with just a single login The application is mainly used to manage departments projects employee timesheets and hiring process Key responsibilitiesmilestones Performed analysis for the client requirements based on the developed detailed design documents Developed Use Cases Class Diagrams Sequence Diagrams and Data Models using Microsoft Visio Developed STRUTS forms and actions for validation of user request data and application functionality Developed JSPs with STRUTS custom tags and implemented JavaScript validation of data Developed programs for accessing the database using JDBC thin driver to execute queries developed statements Stored Procedures and to manipulate the data in the database Developed the application using J2EE architecture Designed and developed web pages using HTML and JSP Involved in developing business tier using stateless session bean Used JavaScript for the web page validation and Struts Valuator for server side validation Designing the database and coding of SQL PLSQL Triggers and Views using IBM DB2 Developed Message Driven Beans for asynchronous processing of alerts Used Clear case for source code control and JUNIT for unit testing Involved in peer code reviews and performed integration testing of the modules Environments Java J2EE Struts HTML JDBC ANT XML IBM Web Sphere JUNIT DB2 Rational Rose CVS UNIX Clear Case",
    "entities": [
        "Micro Services",
        "JavaScript J Query Bootstrap Angular",
        "Collections Generics Exception",
        "Spring Web Services",
        "IOC AOP",
        "GUI",
        "Session Faade Singleton",
        "ANT Gradle",
        "BEA",
        "Validations",
        "the Customer Service",
        "STRUTS",
        "Implemented Spring",
        "Created Stacks",
        "REST Worked",
        "RESTFUL Web Services",
        "Spring Boot and Microservices Developed SQL",
        "Created MQ Series",
        "JTA",
        "AOP Created",
        "Inheritance Polymorphism Collections Serialization",
        "the Spring MVC Framework",
        "MVC Spring",
        "Hibernate Query Language HQL Developed",
        "Spring Configuration XML",
        "IBM",
        "UDDI Handson",
        "Fannie Mae",
        "Hadoop",
        "XML",
        "SOAP",
        "DDL DML DCL",
        "WebLogic",
        "Software Development Life Cycle SDLC",
        "JUnit",
        "J2EE technologies Business Logic",
        "JSP Involved",
        "CVS GIT",
        "JavaJ2EE",
        "Payments Application Developed Grunt",
        "Amazon",
        "Spring Boot",
        "Tested Service",
        "Data Models",
        "WebSphere",
        "Colleges Hospitals",
        "Cascade",
        "Unit Testing and Integration Testing Used",
        "Application Deployed",
        "JBoss Designed",
        "Developed",
        "AWS Infrastructure",
        "DAO",
        "JPA",
        "AWS S3",
        "DI",
        "Restful Web services",
        "JSP Servlets Hibernate",
        "CVS Maven Sr Java Developer Fanni Mae",
        "Spring MVC",
        "UML",
        "Developed Use Cases Class Diagrams",
        "SpringBoot",
        "Client",
        "Post Back",
        "MQ",
        "Core",
        "Monitored",
        "HTML CSS JSP Servlets",
        "SOA",
        "REST API Services",
        "Hibernate Used Hibernate",
        "Developed Web Services",
        "Gradle Hibernate Camel",
        "Linux",
        "JSP",
        "Ember",
        "Validators Spring",
        "IOC",
        "Shell Scripting",
        "Developed Camel Orchestration",
        "Liability",
        "Docker",
        "RDS",
        "Views",
        "Adapter Singleton Factory Abstract Factory Service",
        "MVC",
        "ORACLE 8i9i10g11",
        "MVC DI",
        "Agile",
        "TDD Test Driven Development Strong",
        "EJB",
        "GIT",
        "API",
        "Web Services",
        "BlackRocks iShares",
        "jBPM Services",
        "Spring Bean Factory",
        "Drools",
        "Deploy Developed Micro Services",
        "Created",
        "Lambda Expressions Streams Filters Enhanced",
        "AWS",
        "User Controls Validation Controls",
        "jQuery NodeJS AJAX",
        "Singleton",
        "Implemented Hibernate",
        "Hibernate System",
        "HTML",
        "Data Access Object Front Controller Model View Controller",
        "Developed Spring Framework",
        "the Micro Service",
        "Waterfall Iterative RUP Agile Scrum",
        "SQL",
        "Utilized AWS",
        "Inversion of Control IOC Spring",
        "Amazon Web Services",
        "CrossBrowser Compatibility",
        "AOP Interceptors",
        "Apache Tomcat BEA WebLogic",
        "JUNIT",
        "CSS Designed",
        "REST Developed",
        "Hibernate Mappings HQL Query Criteria Lazy Loading Transactions",
        "DB",
        "DOJO Expertise",
        "Maven",
        "Performed",
        "XSLT",
        "Used Castor XStream",
        "JBoss Fuse JEE6",
        "Initiated Unit",
        "a United States",
        "Web Logic Implemented Display",
        "ANT",
        "Developed Message Driven Beans",
        "the FMS Financial Management System",
        "Strong",
        "UTD UTR JUnit Testing",
        "Microsoft",
        "Continuous Integration",
        "Struts Actions",
        "SVN",
        "CSS",
        "Business Requirement Workflow Diagram Architecture Functional and Design specifications Coded Action Classes Action Form",
        "Spring MVC Controllers",
        "Business Delegate VO Data Access Object Service Locator Transfer Object Worked",
        "Restful Web Services",
        "Tomcat",
        "REST",
        "Developed SOAP Web Services",
        "Drop",
        "The Federal National Mortgage Association",
        "NoSQL",
        "MVC Factory Delegate",
        "Property",
        "Used Spring Core Annotations for Dependency Injection",
        "Integration",
        "MVC 4",
        "JBoss Experience",
        "JMX"
    ],
    "experience": "Experience Sr Java Full Stack Developer Arizona Office of Courts Phoenix AZ June 2018 to Present Designed and developed the web application for the FMS Financial Management System which is the core financial system designed as per MAS Minimum Accounting Standards for JACKS Court Management System application Senior technical resource in development teams efforts to determine the needs of the Department in a manner that will simplify and automate the applications while obtaining optimum efficiency Key responsibilitiesmilestones Involved in Requirements gathering Sprint planning Designing and Implementation Developed a custom singlepage responsive Web Application on front end using Angular 40 Expertise in various SDLC methodologies like Waterfall Iterative RUP Agile Scrum and TDD Test Driven Development Strong working experience in solving CrossBrowser Compatibility challenges and processing Responsiveness Hands on experience in building Enterprise Applications and Distributed Systems using technologies such as Core Java5678 J2EE Servlets JSP JSF EJB Hibernate Spring Struts JDBC JMS Experience in designing Rich Internet Applications RIAs with AngularJS Angular246 jQuery and AJAX Experience in Web technologies such as Angular AJAX JSON HTML CSS jQuery JavaScript Bootstrap AJAX DWR JSON and DOJO Expertise in Angular JS controllers directives factory and service resources routings and events Expertise in DOM manipulation using JavaScript jQuery and Angular JS Strong handson experience with Spring MVC Controllers Spring boot Validators Spring Annotations Spring tag library Inversion of Control IOC Spring LDAP Spring Batch Spring Scheduler Application Context configuration Spring Aspect Oriented Programming AOP Spring DAO Hibernate Spring Security along with Hibernate as the backend ORM tool for implementation of persistence layer and mapping of POJOs Designed pages using Angular 40 Validations Modules Events Expressions Directives Controllers and Filters Extensively used Spring Framework modules like MVC DI IOC JDBC Templates Spring Security and AOP Created and injected Spring services controllers and DAOs for DI and to wire objects of business classes Implemented the Project structure based on Spring MVC pattern using Spring boot Highly used Spring Boot Actuator Spring Cloud and Netflix Eureka Extensively used Hibernate Mappings HQL Query Criteria Lazy Loading Transactions and Lockings Developed Stored Procedures triggered stored procedures using Hibernate Used Hibernate EHcache for second level caching which resulted in enhanced performance of the application Developed Web Services using SOA technologies such as REST Developed and consumed Apache CXF based Web Services as part of Payments Application Developed Grunt tasks to run the unit tests on Jenkins Used advanced Java 8 features like Lambda Expressions Streams Filters Enhanced concurrency methods etc Developed Business rules using Drools and integrated with Application Deployed the application in JBoss production server running in Linux platform Worked with high volume and complex PLSQL Stored Procedures and Packages using TOAD Design patterns are extensively used to achieve clean separation of different layers like Adapter Singleton Factory Abstract Factory Service Locator and Facade Used AWS SNS to send messages to email and http end point Extensively Used Castor XStream and JAXB APIs for XML Marshaling and Unmarshaling Involved in process for builds and deployments with Maven and Jenkins for continuous integration Developing Docker images for development and testing teams and their pipelines Implementing or exposing the Micro Service architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Coordinated Kafka operations and monitoring via JMX with Dev ops team For accessing storing and inserting data we use NoSQL DB which is MongoDB Configured Karma test runner for the project and unit tests are written in Jasmine Developed Cloud Solutions on AWS utilizing EC2 S3 IAM ECS and RDS etc Environments J2EE Spring Framework Micro Services Spring MVC 4 Angular 40 Core Java Spring Security Hibernate 4X Magento jQuery JSON AJAX Web Services SOAP XML Java Beans XSTREAM Apache POI EXT JS JavaScript Eclipse JBOSS Agile Methodology Design Patterns Apache Maven JUnit HTMLUnit XSLT HTML5DHTML Sr Java Developer Vanguard Malvern PA January 2016 to June 2018 Vanguard is the largest provider of mutual funds and the secondlargest provider of exchangetraded funds ETFs in the world after BlackRocks iShares In addition to mutual funds and ETFs Vanguard offers brokerage services variable and fixed annuities educational account services financial planning asset management and trust services Key responsibilitiesmilestones Experience using Hibernate for mapping Java Classes with database using Hibernate Query Language HQL Developed DAOs using JPA entity manager and JTA for transaction handling Implemented Spring security features using AOP Interceptors for the authentication Extensively used MVC Factory Delegate and Singleton design patterns Involved in writing Spring Configuration XML file that contains declarations DB connections and other dependent objects Strong experience with database design in ORACLE 8i9i10g11 g MySQL MS SQL Server and DB2 that includes DDL DML DCL SQL PLSQL triggers cursors stored procedures indexes blocks packages Good experience on working with Amazon Web Services like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front Expertise in developing applications using Spring Framework and using spring modules such as IOC AOP MVC JDBC ORM Boot Cloud Security and configuring application context for spring bean factory Extensive hands on work experience using Microservices with Spring Boot Restful and SOAP SOAP UI Web services Experience in developing and implementing Service Oriented Architecture SOA using Web Services SOAP REST WSDL and UDDI Handson experience with various web and enterprise application servers like Apache Tomcat BEA WebLogic IBM WebSphere and JBoss Experience working on JMS API and asynchronous message transfer communication Extensively worked with JMS Providers such as IBM MQ Series Strong experience with database design in ORACLE 8i9i10g11 g MySQL MS SQL Server and DB2 that includes DDL DML DCL SQL PLSQL triggers cursors stored procedures indexes blocks packages Experience in using NoSQL databases like Mongo DB and Cassandra Extensive experience in implementing J2EE design patterns like Session Faade Singleton MVC pattern Business Delegate VO Data Access Object Service Locator Transfer Object Worked on different IDEs like Eclipse WSAD RAD and Net beans Experience in using NoSQL database Mongo DB Experience in using various version control tools like CVS GIT and SVN Experience in unit testing Integration testing performance testing writing UTD UTR JUnit Testing tool Experience in writing build scripts using ANT Gradle and Maven and implementing Continuous Integration and Continuous deployment using Jenkins and also with Deploy Developed Micro Services using Spring Cloud Spring Boot with Netflix Eureka to create the discovery Server service discovery clients and integrated Apache Kafka and Zoo Keeper as message broker Developed Spring Framework based RESTFUL Web Services for handling and persisting of requests and Spring MVC for returning response to presentation tier Used advanced java8 features like Lambda Expressions Streams Filters Enhanced concurrency methods etc Involved in various phases of Software Development Life Cycle SDLC and involved in Agile methodology break tasks into small increments called SCRUM with minimal planning Analyzed the system for Requirements and Design by developing Use Case Class Sequence and Collaboration Diagrams using MS Visio as part of UML created documents Worked through cross browser compatibility issues with layout and styles for all new CSS that was implemented Designed and developed custom message adapter components using Apache Kafka that allowed message to travel through Micro Services to base on RESTful API utilizing Spring Boot with Spring MVC Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Monitored frontend development which is performed by Angular JS HTML CSS3 and worked with views handlebars and different concepts related to Ember framework Developed Web Services using SOA technologies such as REST Worked on creation of Docker container images pushing images tagging integrating Spring boot created the Docker containers and Docker consoles for managing the application life cycle Created MQ Series objects on local and remote MQ servers Deployed applications on BEA Web logic application server 90 Used Eclipse IDE for coding and GIT for version control Designed application presentation layer with JSP Ajax J Query Struts Taglibraries and CSS Implemented REST Services to call jBPM Services and converting to JSON Developed web service using Drop wizard framework Developed and deployed REST API Services with SpringBoot to establish services for end devices Initiated Unit tests with JUnit and created technical documents Used Spring AOP for exceptions logging along with log4J and transaction handling in DAOs Prepare Test Environment Git and Gerrit for Unit Testing and Integration Testing Used JAXB API to bind XML Schema to java classes Environments Java JEE6 Core Java OOPS WebLogic 11 Gradle Hibernate Camel MQ Series WebSphere Angular JS and Restful Web services JUnit Spring Data Bootstrap UI JBoss CSS3 Spring boot jQuery NodeJS AJAX SpringBoot Struts 2x AWS Docker HTML JMS Unix Oracle 11 g SQL Server GIT Eclipse RCP CVS Maven Sr Java Developer Fanni Mae Reston VA October 2013 to December 2015 The Federal National Mortgage Association FNMA commonly known as Fannie Mae is a United States governmentsponsored enterprise GSE and a publicly traded company The corporations purpose is to expand the secondary mortgage market by securitizing mortgage loans in the form of mortgagebacked securities allowing lenders to reinvest their assets into more lending and in effect increasing the number of lenders in the mortgage market by reducing the reliance on locally based savings and loan associations Key responsibilitiesmilestones Designed and developed various modules of the application with J2EE design architecture and frameworks like Spring MVC architecture and Spring Bean Factory using IOC AOP concepts Involved in complete development of AgileSCRUM developed and tested the application during various iterations Involved in developing Struts Actions and performed server side validations using Struts Validator Developed Rich User Interface using JavaScript J Query Bootstrap Angular JS AJAX HTML5 and CSS3 Actively participated with the development team to meet the specific customer requirements and proposed effective Hadoop solutions Developed DAO objects to handle data access operations using Spring DAO module Designed modular Micro Services to replace the existing website using Spring Boot and Spring Cloud Used Apache Camel for routing the exchanges between different systems Implemented Hibernate mapping files and generated POJOs using hbm2java tool Developed SOAP Web Services provider using Spring Web Services module Used Apache camel to integrate different applications Developed Camel Orchestration layers to integrate different components of the application Work on Detailed Code design and develop the code in JavaJ2EE components including Core Java JavaScript JSPServlets Building Restful Web services with SQL Used AngularJS as the development framework to build a singlepage application Used JavaScript for Client Side page validation scripting to avoid the need for Post Back and thereby improving the performance and responsiveness Worked with User Controls Validation Controls Web Server Controls and Grid Views Consumed Web Services from different source providers by creating Web Service client applications to test the Web Services Used JIBX mappings for marshalling and unmarshalling of XML data and Design and implement a Context RESTful API using Java Spring boot Worked on AS400 and Oracle 10 g as backend databases Used Ant for developing build scripts and deploying the Eclipse RCP application onto Web Logic Implemented Display tag library in JSP pages for pagination and sorting functionalities Implemented various design patterns like Data Access Object Front Controller Model View Controller and Singleton in different tiers of the module Environments Spring 20 Struts 2x JBoss Fuse JEE6 EAP 43 Hibernate 30 Web Services Spring MVC Spring boot Apache camel SOAP UI JIBX Servlets JSP AJAX JavaScript Redux Bootstrap Angular JS JDBC JQuery JUnit MongoDB ANT XML Java Developer Bodhtree December 2011 to September 2013 Property Liability Management application used for storing the details of the Property and Liability exposures which later will be used by another system for calculating the contributions for the School districts Colleges Hospitals and Municipalities etc Key responsibilitiesmilestones Developed the application using Struts Framework that leverages classical Model View Layer MVC architecture UML diagrams like class diagrams interaction diagrams sequence and collaboration and activity diagrams Worked in an agile development environment and involved in daily SCRUM Worked closely with businessside clients to deliver attractive easytounderstand pages that appropriately reflected the companys fulfillment workflow Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Deployed Spring Boot based micro services in Docker container using Amazon EC2 container services and using AWS admin console Designed and developed data management and reporting systems using Java JavaScript Angular 46 Typescript HTML CSS3 and other scripting languages Developed the GUI module DMT using Typescript DOJO Ajax HTML Angular was extensively used to achieve DOM Show hide elements and Event Handling Used Angular as the development framework to build a singlepage application and reusable Angular applications Developed business components using core java8 concepts like lambda date functional interfaces and classes like Inheritance Polymorphism Collections Serialization and Multithreading Used core java concepts like Collections Generics Exception handling IO Concurrency to develop business logic Developed end to end application on Spring Boot framework REST ApplicationSpring JPA using Crud repository Produced and consumed Restful Web Services for transferring XML data between two interfaces Developing application using spring core module and POJOs and worked on Messaging service Used the lightweight container of the Spring MVC Framework to provide architectural flexibility for inversion of controller IOC and Used Spring Core Annotations for Dependency Injection and Spring MVC for REST APIs application with Spring Boot and Microservices Developed SQL PLSQL stored procedures along with Shell Scripting database application scripts Created various Parser programs to extract data from IBM TIVOLI XML Java and database views GIT for version control of the application Tested Service and data access tier using Junit Mockito and Power Mockito Log4J to capture the log the events and exceptions Created DB2 SQL Procedures Functions Stored Procedures Nested Tables Cursors Reports SQL Functions for Reports Analyzed and understood the specifications provided by the clients Developed the presentation tier using HTML CSS JSP Servlets JSTL Ajax and Struts Used StrutsValidator framework for all frontend Validations for all the form entries Used Struts framework for the MVC implementation and Hibernate as ORM tool for database communication Designed and developed the code using multithreading Collections and other J2EE technologies Business Logic analysis to produce Business Requirement Workflow Diagram Architecture Functional and Design specifications Coded Action Classes Action Form for the web tier for the Customer Service representative to send a fax request with Struts validation framework Provided Support to migrate from WebLogic server to JBoss Designed and developed the controller and view components using JSPs and Servlets Used various Java scripts functions and was involved in coding Cascade style sheets CSS Designed and Implemented PLSQL stored procedures to process data operations Developed Demon threads using multithreading which runs continuously Deploying by resolving any external dependencies and customizing these deployed enterprise bean in this specific application Finally deployed the jar files in the Container and WAR files in the Web Container on to the WebSphere server Worked and modified the database schema as per the Client requirement Involved in implementing the DAO pattern for database connectivity and Hibernate System maintenance and functionality addition and improvement Performed unit testing of the developed application Consistently met deadlines and exceeded expectations achieving recognition resulting in increases in responsibilities Involved in Unit integration bug fixing acceptance testing with test cases Code reviewing Involved in production support and maintaining the application after production Used Log4j Junit and developed unit test cases to monitor the application functionality Used Tomcat as a server to deploy the application Environments Struts Java JSP Servlets Hibernate ORM Oracle MultiThreading JDBC Log4J MySQL PLSQL Eclipse 3 XML ANT JUnit Putty IBM WebSphere XSLT DOM Parser SAX Parser UML OOD Tomcat MVC JDBC 30 Applets Linux Windows XP Subversion Visio 2003 Software Engineer Sonata Software April 2009 to November 2011 SOMS Sonata Operational Management System is an inhouse application developed to ease our daily routines at our work place This application helps to erase all hurdles and provide a smoother bridge in communicating to various departments straight from your desk with just a single login The application is mainly used to manage departments projects employee timesheets and hiring process Key responsibilitiesmilestones Performed analysis for the client requirements based on the developed detailed design documents Developed Use Cases Class Diagrams Sequence Diagrams and Data Models using Microsoft Visio Developed STRUTS forms and actions for validation of user request data and application functionality Developed JSPs with STRUTS custom tags and implemented JavaScript validation of data Developed programs for accessing the database using JDBC thin driver to execute queries developed statements Stored Procedures and to manipulate the data in the database Developed the application using J2EE architecture Designed and developed web pages using HTML and JSP Involved in developing business tier using stateless session bean Used JavaScript for the web page validation and Struts Valuator for server side validation Designing the database and coding of SQL PLSQL Triggers and Views using IBM DB2 Developed Message Driven Beans for asynchronous processing of alerts Used Clear case for source code control and JUNIT for unit testing Involved in peer code reviews and performed integration testing of the modules Environments Java J2EE Struts HTML JDBC ANT XML IBM Web Sphere JUNIT DB2 Rational Rose CVS UNIX Clear Case",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Sr",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Arizona",
        "Office",
        "Courts",
        "Phoenix",
        "AZ",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Arizona",
        "Office",
        "Courts",
        "Phoenix",
        "AZ",
        "June",
        "Present",
        "web",
        "application",
        "FMS",
        "Financial",
        "Management",
        "System",
        "system",
        "MAS",
        "Minimum",
        "Accounting",
        "Standards",
        "JACKS",
        "Court",
        "Management",
        "System",
        "application",
        "resource",
        "development",
        "teams",
        "efforts",
        "needs",
        "Department",
        "manner",
        "applications",
        "efficiency",
        "responsibilitiesmilestones",
        "Requirements",
        "Sprint",
        "planning",
        "Designing",
        "Implementation",
        "custom",
        "singlepage",
        "Web",
        "Application",
        "end",
        "Angular",
        "Expertise",
        "SDLC",
        "methodologies",
        "Waterfall",
        "Iterative",
        "RUP",
        "Agile",
        "Scrum",
        "TDD",
        "Test",
        "Driven",
        "Development",
        "Strong",
        "working",
        "experience",
        "CrossBrowser",
        "Compatibility",
        "challenges",
        "Responsiveness",
        "Hands",
        "experience",
        "Enterprise",
        "Applications",
        "Distributed",
        "Systems",
        "technologies",
        "Core",
        "Java5678",
        "J2EE",
        "Servlets",
        "JSP",
        "JSF",
        "EJB",
        "Hibernate",
        "Spring",
        "Struts",
        "JDBC",
        "JMS",
        "Experience",
        "Rich",
        "Internet",
        "Applications",
        "RIAs",
        "AngularJS",
        "Angular246",
        "jQuery",
        "AJAX",
        "Experience",
        "Web",
        "technologies",
        "Angular",
        "AJAX",
        "JSON",
        "HTML",
        "CSS",
        "jQuery",
        "JavaScript",
        "Bootstrap",
        "AJAX",
        "DWR",
        "JSON",
        "DOJO",
        "Expertise",
        "Angular",
        "JS",
        "controllers",
        "factory",
        "service",
        "resources",
        "routings",
        "events",
        "Expertise",
        "DOM",
        "manipulation",
        "JavaScript",
        "jQuery",
        "Angular",
        "JS",
        "Strong",
        "handson",
        "experience",
        "Spring",
        "MVC",
        "Controllers",
        "Spring",
        "boot",
        "Validators",
        "Spring",
        "Annotations",
        "Spring",
        "tag",
        "library",
        "Inversion",
        "Control",
        "IOC",
        "Spring",
        "LDAP",
        "Spring",
        "Batch",
        "Spring",
        "Scheduler",
        "Application",
        "Context",
        "configuration",
        "Spring",
        "Aspect",
        "Oriented",
        "Programming",
        "AOP",
        "Spring",
        "DAO",
        "Hibernate",
        "Spring",
        "Security",
        "Hibernate",
        "ORM",
        "tool",
        "implementation",
        "persistence",
        "layer",
        "mapping",
        "POJOs",
        "pages",
        "Angular",
        "Validations",
        "Modules",
        "Events",
        "Expressions",
        "Directives",
        "Controllers",
        "Filters",
        "Spring",
        "Framework",
        "modules",
        "MVC",
        "DI",
        "IOC",
        "JDBC",
        "Templates",
        "Spring",
        "Security",
        "AOP",
        "Created",
        "Spring",
        "services",
        "controllers",
        "DAOs",
        "DI",
        "wire",
        "objects",
        "business",
        "classes",
        "Project",
        "structure",
        "Spring",
        "MVC",
        "pattern",
        "Spring",
        "boot",
        "Spring",
        "Boot",
        "Actuator",
        "Spring",
        "Cloud",
        "Netflix",
        "Eureka",
        "Hibernate",
        "Mappings",
        "HQL",
        "Query",
        "Criteria",
        "Lazy",
        "Loading",
        "Transactions",
        "Lockings",
        "Developed",
        "Stored",
        "Procedures",
        "procedures",
        "Hibernate",
        "Hibernate",
        "EHcache",
        "level",
        "performance",
        "application",
        "Developed",
        "Web",
        "Services",
        "SOA",
        "technologies",
        "REST",
        "Developed",
        "Apache",
        "CXF",
        "Web",
        "Services",
        "part",
        "Payments",
        "Application",
        "Grunt",
        "tasks",
        "unit",
        "Jenkins",
        "Java",
        "features",
        "Lambda",
        "Expressions",
        "Streams",
        "Filters",
        "concurrency",
        "methods",
        "Developed",
        "Business",
        "rules",
        "Drools",
        "Application",
        "application",
        "JBoss",
        "production",
        "server",
        "Linux",
        "platform",
        "volume",
        "PLSQL",
        "Stored",
        "Procedures",
        "Packages",
        "TOAD",
        "Design",
        "patterns",
        "separation",
        "layers",
        "Adapter",
        "Singleton",
        "Factory",
        "Abstract",
        "Factory",
        "Service",
        "Locator",
        "Facade",
        "AWS",
        "SNS",
        "messages",
        "email",
        "http",
        "end",
        "point",
        "Castor",
        "XStream",
        "JAXB",
        "APIs",
        "XML",
        "Marshaling",
        "Unmarshaling",
        "process",
        "builds",
        "deployments",
        "Maven",
        "Jenkins",
        "integration",
        "Docker",
        "images",
        "development",
        "testing",
        "teams",
        "pipelines",
        "Micro",
        "Service",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "Kafka",
        "message",
        "brokers",
        "Coordinated",
        "Kafka",
        "operations",
        "monitoring",
        "JMX",
        "Dev",
        "ops",
        "team",
        "data",
        "NoSQL",
        "DB",
        "Configured",
        "Karma",
        "runner",
        "project",
        "unit",
        "tests",
        "Jasmine",
        "Developed",
        "Cloud",
        "Solutions",
        "AWS",
        "EC2",
        "S3",
        "IAM",
        "ECS",
        "RDS",
        "Environments",
        "J2EE",
        "Spring",
        "Framework",
        "Micro",
        "Services",
        "Spring",
        "MVC",
        "Angular",
        "Core",
        "Java",
        "Spring",
        "Security",
        "Hibernate",
        "4X",
        "Magento",
        "jQuery",
        "JSON",
        "AJAX",
        "Web",
        "Services",
        "SOAP",
        "XML",
        "Java",
        "Beans",
        "Apache",
        "POI",
        "EXT",
        "JS",
        "JavaScript",
        "Eclipse",
        "JBOSS",
        "Agile",
        "Methodology",
        "Design",
        "Patterns",
        "Apache",
        "Maven",
        "JUnit",
        "HTMLUnit",
        "XSLT",
        "Sr",
        "Java",
        "Developer",
        "Vanguard",
        "Malvern",
        "PA",
        "January",
        "June",
        "Vanguard",
        "provider",
        "funds",
        "provider",
        "funds",
        "ETFs",
        "world",
        "BlackRocks",
        "iShares",
        "addition",
        "funds",
        "ETFs",
        "Vanguard",
        "brokerage",
        "services",
        "annuities",
        "account",
        "services",
        "planning",
        "asset",
        "management",
        "trust",
        "services",
        "responsibilitiesmilestones",
        "Experience",
        "Hibernate",
        "mapping",
        "Java",
        "Classes",
        "database",
        "Hibernate",
        "Query",
        "Language",
        "HQL",
        "DAOs",
        "JPA",
        "entity",
        "manager",
        "JTA",
        "transaction",
        "Spring",
        "security",
        "features",
        "AOP",
        "Interceptors",
        "authentication",
        "MVC",
        "Factory",
        "Delegate",
        "Singleton",
        "design",
        "patterns",
        "Spring",
        "Configuration",
        "XML",
        "file",
        "declarations",
        "DB",
        "connections",
        "experience",
        "database",
        "design",
        "ORACLE",
        "g",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "DB2",
        "DDL",
        "DML",
        "DCL",
        "SQL",
        "PLSQL",
        "cursors",
        "procedures",
        "indexes",
        "blocks",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "EC2",
        "S3",
        "Amazon",
        "Simple",
        "DB",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "Identity",
        "access",
        "management",
        "AWS",
        "Cloud",
        "Amazon",
        "EBS",
        "Amazon",
        "Cloud",
        "Front",
        "Expertise",
        "applications",
        "Spring",
        "Framework",
        "spring",
        "modules",
        "IOC",
        "AOP",
        "MVC",
        "JDBC",
        "ORM",
        "Boot",
        "Cloud",
        "Security",
        "application",
        "context",
        "spring",
        "bean",
        "factory",
        "hands",
        "work",
        "experience",
        "Microservices",
        "Spring",
        "Boot",
        "SOAP",
        "UI",
        "Web",
        "services",
        "Experience",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "WSDL",
        "UDDI",
        "Handson",
        "experience",
        "web",
        "enterprise",
        "application",
        "servers",
        "Apache",
        "Tomcat",
        "BEA",
        "WebLogic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Experience",
        "JMS",
        "API",
        "message",
        "transfer",
        "communication",
        "JMS",
        "Providers",
        "IBM",
        "MQ",
        "Series",
        "Strong",
        "experience",
        "database",
        "design",
        "ORACLE",
        "g",
        "MySQL",
        "MS",
        "SQL",
        "Server",
        "DB2",
        "DDL",
        "DML",
        "DCL",
        "SQL",
        "PLSQL",
        "cursors",
        "procedures",
        "indexes",
        "blocks",
        "packages",
        "Experience",
        "databases",
        "Mongo",
        "DB",
        "Cassandra",
        "experience",
        "J2EE",
        "design",
        "patterns",
        "Session",
        "Faade",
        "Singleton",
        "MVC",
        "pattern",
        "Business",
        "Delegate",
        "VO",
        "Data",
        "Access",
        "Object",
        "Service",
        "Locator",
        "Transfer",
        "Object",
        "IDEs",
        "Eclipse",
        "WSAD",
        "RAD",
        "Net",
        "beans",
        "Experience",
        "NoSQL",
        "database",
        "Mongo",
        "DB",
        "Experience",
        "version",
        "control",
        "tools",
        "CVS",
        "GIT",
        "SVN",
        "Experience",
        "unit",
        "testing",
        "Integration",
        "testing",
        "performance",
        "testing",
        "UTD",
        "UTR",
        "JUnit",
        "Testing",
        "tool",
        "Experience",
        "build",
        "scripts",
        "ANT",
        "Gradle",
        "Maven",
        "Continuous",
        "Integration",
        "deployment",
        "Jenkins",
        "Deploy",
        "Developed",
        "Micro",
        "Services",
        "Spring",
        "Cloud",
        "Spring",
        "Boot",
        "Netflix",
        "Eureka",
        "discovery",
        "Server",
        "service",
        "discovery",
        "clients",
        "Apache",
        "Kafka",
        "Zoo",
        "Keeper",
        "message",
        "broker",
        "Developed",
        "Spring",
        "Framework",
        "RESTFUL",
        "Web",
        "Services",
        "persisting",
        "requests",
        "Spring",
        "MVC",
        "response",
        "presentation",
        "tier",
        "java8",
        "features",
        "Lambda",
        "Expressions",
        "Streams",
        "Filters",
        "concurrency",
        "methods",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "methodology",
        "tasks",
        "increments",
        "SCRUM",
        "planning",
        "system",
        "Requirements",
        "Design",
        "Use",
        "Case",
        "Class",
        "Sequence",
        "Collaboration",
        "Diagrams",
        "MS",
        "Visio",
        "part",
        "UML",
        "documents",
        "cross",
        "browser",
        "compatibility",
        "issues",
        "layout",
        "styles",
        "CSS",
        "custom",
        "message",
        "adapter",
        "components",
        "Apache",
        "Kafka",
        "message",
        "Micro",
        "Services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "React",
        "JS",
        "Virtual",
        "Dom",
        "React",
        "views",
        "components",
        "components",
        "custom",
        "HTML",
        "tags",
        "AWS",
        "Lambda",
        "platform",
        "data",
        "AWS",
        "S3",
        "buckets",
        "Lambda",
        "functions",
        "EC2",
        "MongoDB",
        "highavailability",
        "fault",
        "tolerance",
        "frontend",
        "development",
        "Angular",
        "JS",
        "HTML",
        "CSS3",
        "views",
        "handlebars",
        "concepts",
        "Ember",
        "framework",
        "Developed",
        "Web",
        "Services",
        "SOA",
        "technologies",
        "REST",
        "creation",
        "Docker",
        "container",
        "images",
        "images",
        "Spring",
        "boot",
        "Docker",
        "containers",
        "Docker",
        "application",
        "life",
        "cycle",
        "Created",
        "MQ",
        "Series",
        "MQ",
        "servers",
        "applications",
        "BEA",
        "Web",
        "logic",
        "application",
        "server",
        "Eclipse",
        "IDE",
        "GIT",
        "version",
        "control",
        "application",
        "presentation",
        "layer",
        "JSP",
        "Ajax",
        "J",
        "Query",
        "Struts",
        "Taglibraries",
        "CSS",
        "REST",
        "Services",
        "jBPM",
        "Services",
        "JSON",
        "web",
        "service",
        "Drop",
        "wizard",
        "framework",
        "Developed",
        "REST",
        "API",
        "Services",
        "SpringBoot",
        "services",
        "end",
        "devices",
        "Initiated",
        "Unit",
        "JUnit",
        "documents",
        "Spring",
        "AOP",
        "exceptions",
        "transaction",
        "handling",
        "DAOs",
        "Prepare",
        "Test",
        "Environment",
        "Git",
        "Gerrit",
        "Unit",
        "Testing",
        "Integration",
        "Testing",
        "JAXB",
        "API",
        "XML",
        "Schema",
        "java",
        "classes",
        "Environments",
        "Java",
        "JEE6",
        "Core",
        "Java",
        "WebLogic",
        "Gradle",
        "Hibernate",
        "Camel",
        "MQ",
        "Series",
        "WebSphere",
        "Angular",
        "JS",
        "Restful",
        "Web",
        "services",
        "JUnit",
        "Spring",
        "Data",
        "Bootstrap",
        "UI",
        "JBoss",
        "CSS3",
        "Spring",
        "boot",
        "jQuery",
        "NodeJS",
        "AJAX",
        "SpringBoot",
        "Struts",
        "Docker",
        "HTML",
        "JMS",
        "Unix",
        "Oracle",
        "g",
        "SQL",
        "Server",
        "GIT",
        "Eclipse",
        "RCP",
        "CVS",
        "Maven",
        "Sr",
        "Java",
        "Developer",
        "Fanni",
        "Mae",
        "Reston",
        "VA",
        "October",
        "December",
        "Federal",
        "National",
        "Mortgage",
        "Association",
        "FNMA",
        "Fannie",
        "Mae",
        "United",
        "States",
        "enterprise",
        "GSE",
        "company",
        "corporations",
        "purpose",
        "mortgage",
        "market",
        "mortgage",
        "loans",
        "form",
        "securities",
        "lenders",
        "assets",
        "lending",
        "effect",
        "number",
        "lenders",
        "mortgage",
        "market",
        "reliance",
        "savings",
        "loan",
        "associations",
        "responsibilitiesmilestones",
        "modules",
        "application",
        "J2EE",
        "design",
        "architecture",
        "frameworks",
        "Spring",
        "MVC",
        "architecture",
        "Spring",
        "Bean",
        "Factory",
        "IOC",
        "AOP",
        "concepts",
        "development",
        "AgileSCRUM",
        "application",
        "iterations",
        "Struts",
        "Actions",
        "server",
        "side",
        "validations",
        "Struts",
        "Validator",
        "Developed",
        "Rich",
        "User",
        "Interface",
        "JavaScript",
        "J",
        "Query",
        "Bootstrap",
        "Angular",
        "JS",
        "AJAX",
        "HTML5",
        "CSS3",
        "development",
        "team",
        "customer",
        "requirements",
        "Hadoop",
        "solutions",
        "Developed",
        "DAO",
        "data",
        "access",
        "operations",
        "Spring",
        "DAO",
        "module",
        "Micro",
        "Services",
        "website",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "Apache",
        "Camel",
        "exchanges",
        "systems",
        "Hibernate",
        "mapping",
        "files",
        "POJOs",
        "hbm2java",
        "tool",
        "SOAP",
        "Web",
        "Services",
        "provider",
        "Spring",
        "Web",
        "Services",
        "module",
        "Apache",
        "camel",
        "applications",
        "Developed",
        "Camel",
        "Orchestration",
        "layers",
        "components",
        "application",
        "Work",
        "Detailed",
        "Code",
        "design",
        "code",
        "JavaJ2EE",
        "components",
        "Core",
        "Java",
        "JavaScript",
        "JSPServlets",
        "Building",
        "Restful",
        "Web",
        "services",
        "SQL",
        "AngularJS",
        "development",
        "framework",
        "singlepage",
        "application",
        "JavaScript",
        "Client",
        "Side",
        "page",
        "validation",
        "scripting",
        "need",
        "Post",
        "performance",
        "responsiveness",
        "User",
        "Controls",
        "Validation",
        "Controls",
        "Web",
        "Server",
        "Controls",
        "Grid",
        "Views",
        "Consumed",
        "Web",
        "Services",
        "source",
        "providers",
        "Web",
        "Service",
        "client",
        "applications",
        "Web",
        "Services",
        "mappings",
        "unmarshalling",
        "XML",
        "data",
        "Design",
        "Context",
        "API",
        "Java",
        "Spring",
        "boot",
        "AS400",
        "Oracle",
        "g",
        "databases",
        "Ant",
        "build",
        "scripts",
        "Eclipse",
        "RCP",
        "application",
        "Web",
        "Logic",
        "Display",
        "tag",
        "library",
        "JSP",
        "pages",
        "pagination",
        "functionalities",
        "design",
        "patterns",
        "Data",
        "Access",
        "Object",
        "Front",
        "Controller",
        "Model",
        "View",
        "Controller",
        "Singleton",
        "tiers",
        "module",
        "Environments",
        "Spring",
        "Struts",
        "JBoss",
        "Fuse",
        "JEE6",
        "EAP",
        "Hibernate",
        "Web",
        "Services",
        "Spring",
        "MVC",
        "Spring",
        "boot",
        "Apache",
        "camel",
        "SOAP",
        "UI",
        "JIBX",
        "Servlets",
        "JSP",
        "AJAX",
        "JavaScript",
        "Redux",
        "Bootstrap",
        "Angular",
        "JS",
        "JDBC",
        "JQuery",
        "JUnit",
        "MongoDB",
        "ANT",
        "Java",
        "Developer",
        "Bodhtree",
        "December",
        "September",
        "Property",
        "Liability",
        "Management",
        "application",
        "details",
        "Property",
        "Liability",
        "exposures",
        "system",
        "contributions",
        "School",
        "districts",
        "Colleges",
        "Hospitals",
        "Municipalities",
        "responsibilitiesmilestones",
        "application",
        "Struts",
        "Framework",
        "Model",
        "View",
        "Layer",
        "MVC",
        "architecture",
        "UML",
        "diagrams",
        "class",
        "diagrams",
        "interaction",
        "diagrams",
        "sequence",
        "collaboration",
        "activity",
        "diagrams",
        "development",
        "environment",
        "SCRUM",
        "clients",
        "easytounderstand",
        "pages",
        "companys",
        "fulfillment",
        "Created",
        "Stacks",
        "Amazon",
        "Cloud",
        "Formation",
        "AWS",
        "Infrastructure",
        "resources",
        "AWS",
        "Lambda",
        "code",
        "AWS",
        "Spring",
        "Boot",
        "micro",
        "services",
        "Docker",
        "container",
        "Amazon",
        "EC2",
        "container",
        "services",
        "AWS",
        "admin",
        "console",
        "data",
        "management",
        "reporting",
        "systems",
        "Java",
        "JavaScript",
        "Angular",
        "Typescript",
        "HTML",
        "CSS3",
        "scripting",
        "languages",
        "GUI",
        "module",
        "DMT",
        "Typescript",
        "DOJO",
        "Ajax",
        "HTML",
        "Angular",
        "DOM",
        "Show",
        "elements",
        "Event",
        "Handling",
        "Angular",
        "development",
        "framework",
        "singlepage",
        "application",
        "applications",
        "business",
        "components",
        "core",
        "java8",
        "concepts",
        "lambda",
        "date",
        "interfaces",
        "classes",
        "Inheritance",
        "Polymorphism",
        "Collections",
        "Serialization",
        "Multithreading",
        "core",
        "concepts",
        "Collections",
        "Generics",
        "Exception",
        "IO",
        "Concurrency",
        "business",
        "logic",
        "end",
        "end",
        "application",
        "Spring",
        "Boot",
        "framework",
        "REST",
        "ApplicationSpring",
        "JPA",
        "Crud",
        "repository",
        "Restful",
        "Web",
        "Services",
        "XML",
        "data",
        "interfaces",
        "application",
        "spring",
        "core",
        "module",
        "POJOs",
        "service",
        "container",
        "Spring",
        "MVC",
        "Framework",
        "flexibility",
        "inversion",
        "controller",
        "IOC",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "MVC",
        "REST",
        "APIs",
        "application",
        "Spring",
        "Boot",
        "Microservices",
        "Developed",
        "SQL",
        "PLSQL",
        "procedures",
        "Shell",
        "Scripting",
        "database",
        "application",
        "scripts",
        "Parser",
        "programs",
        "data",
        "IBM",
        "TIVOLI",
        "XML",
        "Java",
        "database",
        "GIT",
        "version",
        "control",
        "application",
        "Tested",
        "Service",
        "data",
        "access",
        "tier",
        "Junit",
        "Mockito",
        "Power",
        "Mockito",
        "Log4J",
        "log",
        "events",
        "exceptions",
        "DB2",
        "SQL",
        "Procedures",
        "Functions",
        "Stored",
        "Procedures",
        "Nested",
        "Tables",
        "Cursors",
        "Reports",
        "SQL",
        "Functions",
        "Reports",
        "specifications",
        "clients",
        "presentation",
        "tier",
        "HTML",
        "CSS",
        "JSP",
        "Servlets",
        "JSTL",
        "Ajax",
        "Struts",
        "StrutsValidator",
        "framework",
        "frontend",
        "Validations",
        "form",
        "entries",
        "Struts",
        "framework",
        "MVC",
        "implementation",
        "Hibernate",
        "ORM",
        "tool",
        "database",
        "communication",
        "code",
        "Collections",
        "J2EE",
        "technologies",
        "Business",
        "Logic",
        "analysis",
        "Business",
        "Requirement",
        "Workflow",
        "Diagram",
        "Architecture",
        "Functional",
        "Design",
        "specifications",
        "Coded",
        "Action",
        "Classes",
        "Action",
        "Form",
        "web",
        "tier",
        "Customer",
        "Service",
        "representative",
        "fax",
        "request",
        "Struts",
        "validation",
        "framework",
        "Support",
        "WebLogic",
        "server",
        "JBoss",
        "controller",
        "components",
        "JSPs",
        "Servlets",
        "Java",
        "scripts",
        "functions",
        "Cascade",
        "style",
        "sheets",
        "CSS",
        "procedures",
        "data",
        "operations",
        "Developed",
        "Demon",
        "threads",
        "multithreading",
        "dependencies",
        "enterprise",
        "bean",
        "application",
        "jar",
        "files",
        "Container",
        "WAR",
        "files",
        "Web",
        "Container",
        "WebSphere",
        "server",
        "database",
        "schema",
        "Client",
        "requirement",
        "DAO",
        "pattern",
        "database",
        "connectivity",
        "Hibernate",
        "System",
        "maintenance",
        "functionality",
        "addition",
        "improvement",
        "Performed",
        "unit",
        "testing",
        "application",
        "deadlines",
        "expectations",
        "recognition",
        "increases",
        "responsibilities",
        "Unit",
        "integration",
        "bug",
        "acceptance",
        "testing",
        "test",
        "cases",
        "Code",
        "reviewing",
        "production",
        "support",
        "application",
        "production",
        "Log4j",
        "Junit",
        "unit",
        "test",
        "cases",
        "application",
        "functionality",
        "Tomcat",
        "server",
        "application",
        "Struts",
        "Java",
        "JSP",
        "Servlets",
        "Hibernate",
        "ORM",
        "Oracle",
        "MultiThreading",
        "JDBC",
        "Log4J",
        "MySQL",
        "PLSQL",
        "Eclipse",
        "XML",
        "ANT",
        "JUnit",
        "Putty",
        "IBM",
        "WebSphere",
        "XSLT",
        "DOM",
        "Parser",
        "SAX",
        "Parser",
        "UML",
        "OOD",
        "Tomcat",
        "MVC",
        "JDBC",
        "Applets",
        "Linux",
        "Windows",
        "XP",
        "Subversion",
        "Visio",
        "Software",
        "Engineer",
        "Sonata",
        "Software",
        "April",
        "November",
        "Sonata",
        "Operational",
        "Management",
        "System",
        "inhouse",
        "application",
        "routines",
        "work",
        "place",
        "application",
        "hurdles",
        "bridge",
        "communicating",
        "departments",
        "desk",
        "login",
        "application",
        "departments",
        "employee",
        "timesheets",
        "hiring",
        "process",
        "responsibilitiesmilestones",
        "analysis",
        "client",
        "requirements",
        "design",
        "documents",
        "Developed",
        "Use",
        "Cases",
        "Class",
        "Diagrams",
        "Sequence",
        "Diagrams",
        "Data",
        "Models",
        "Microsoft",
        "Visio",
        "STRUTS",
        "forms",
        "actions",
        "validation",
        "user",
        "request",
        "data",
        "application",
        "functionality",
        "JSPs",
        "STRUTS",
        "custom",
        "tags",
        "JavaScript",
        "validation",
        "data",
        "programs",
        "database",
        "JDBC",
        "driver",
        "queries",
        "statements",
        "Stored",
        "Procedures",
        "data",
        "database",
        "application",
        "J2EE",
        "architecture",
        "web",
        "pages",
        "HTML",
        "JSP",
        "business",
        "tier",
        "session",
        "bean",
        "JavaScript",
        "web",
        "page",
        "validation",
        "Struts",
        "Valuator",
        "server",
        "side",
        "validation",
        "database",
        "coding",
        "SQL",
        "PLSQL",
        "Triggers",
        "Views",
        "IBM",
        "DB2",
        "Developed",
        "Message",
        "Driven",
        "Beans",
        "processing",
        "alerts",
        "Clear",
        "case",
        "source",
        "code",
        "control",
        "JUNIT",
        "unit",
        "testing",
        "peer",
        "code",
        "reviews",
        "integration",
        "testing",
        "modules",
        "Environments",
        "Java",
        "J2EE",
        "Struts",
        "HTML",
        "JDBC",
        "ANT",
        "XML",
        "IBM",
        "Web",
        "Sphere",
        "JUNIT",
        "DB2",
        "Rational",
        "Rose",
        "CVS",
        "UNIX",
        "Clear",
        "Case"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:53:19.334249",
    "resume_data": "Sr Java Full Stack Developer Sr span lJavaspan Full Stack span lDeveloperspan Sr Java Full Stack Developer Arizona Office of Courts Phoenix AZ Work Experience Sr Java Full Stack Developer Arizona Office of Courts Phoenix AZ June 2018 to Present Designed and developed the web application for the FMS Financial Management System which is the core financial system designed as per MAS Minimum Accounting Standards for JACKS Court Management System application Senior technical resource in development teams efforts to determine the needs of the Department in a manner that will simplify and automate the applications while obtaining optimum efficiency Key responsibilitiesmilestones Involved in Requirements gathering Sprint planning Designing and Implementation Developed a custom singlepage responsive Web Application on front end using Angular 40 Expertise in various SDLC methodologies like Waterfall Iterative RUP Agile Scrum and TDD Test Driven Development Strong working experience in solving CrossBrowser Compatibility challenges and processing Responsiveness Hands on experience in building Enterprise Applications and Distributed Systems using technologies such as Core Java5678 J2EE Servlets JSP JSF EJB Hibernate Spring Struts JDBC JMS Experience in designing Rich Internet Applications RIAs with AngularJS Angular246 jQuery and AJAX Experience in Web technologies such as Angular AJAX JSON HTML CSS jQuery JavaScript Bootstrap AJAX DWR JSON and DOJO Expertise in Angular JS controllers directives factory and service resources routings and events Expertise in DOM manipulation using JavaScript jQuery and Angular JS Strong handson experience with Spring MVC Controllers Spring boot Validators Spring Annotations Spring tag library Inversion of Control IOC Spring LDAP Spring Batch Spring Scheduler Application Context configuration Spring Aspect Oriented Programming AOP Spring DAO Hibernate Spring Security along with Hibernate as the backend ORM tool for implementation of persistence layer and mapping of POJOs Designed pages using Angular 40 Validations Modules Events Expressions Directives Controllers and Filters Extensively used Spring Framework modules like MVC DI IOC JDBC Templates Spring Security and AOP Created and injected Spring services controllers and DAOs for DI and to wire objects of business classes Implemented the Project structure based on Spring MVC pattern using Spring boot Highly used Spring Boot Actuator Spring Cloud and Netflix Eureka Extensively used Hibernate Mappings HQL Query Criteria Lazy Loading Transactions and Lockings Developed Stored Procedures triggered stored procedures using Hibernate Used Hibernate EHcache for second level caching which resulted in enhanced performance of the application Developed Web Services using SOA technologies such as REST Developed and consumed Apache CXF based Web Services as part of Payments Application Developed Grunt tasks to run the unit tests on Jenkins Used advanced Java 8 features like Lambda Expressions Streams Filters Enhanced concurrency methods etc Developed Business rules using Drools and integrated with Application Deployed the application in JBoss production server running in Linux platform Worked with high volume and complex PLSQL Stored Procedures and Packages using TOAD Design patterns are extensively used to achieve clean separation of different layers like Adapter Singleton Factory Abstract Factory Service Locator and Facade Used AWS SNS to send messages to email and http end point Extensively Used Castor XStream and JAXB APIs for XML Marshaling and Unmarshaling Involved in process for builds and deployments with Maven and Jenkins for continuous integration Developing Docker images for development and testing teams and their pipelines Implementing or exposing the Micro Service architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers Coordinated Kafka operations and monitoring via JMX with Dev ops team For accessing storing and inserting data we use NoSQL DB which is MongoDB Configured Karma test runner for the project and unit tests are written in Jasmine Developed Cloud Solutions on AWS utilizing EC2 S3 IAM ECS and RDS etc Environments J2EE Spring Framework Micro Services Spring MVC 4 Angular 40 Core Java Spring Security Hibernate 4X Magento jQuery JSON AJAX Web Services SOAP XML Java Beans XSTREAM Apache POI EXT JS JavaScript Eclipse JBOSS Agile Methodology Design Patterns Apache Maven JUnit HTMLUnit XSLT HTML5DHTML Sr Java Developer Vanguard Malvern PA January 2016 to June 2018 Vanguard is the largest provider of mutual funds and the secondlargest provider of exchangetraded funds ETFs in the world after BlackRocks iShares In addition to mutual funds and ETFs Vanguard offers brokerage services variable and fixed annuities educational account services financial planning asset management and trust services Key responsibilitiesmilestones Experience using Hibernate for mapping Java Classes with database using Hibernate Query Language HQL Developed DAOs using JPA entity manager and JTA for transaction handling Implemented Spring security features using AOP Interceptors for the authentication Extensively used MVC Factory Delegate and Singleton design patterns Involved in writing Spring Configuration XML file that contains declarations DB connections and other dependent objects Strong experience with database design in ORACLE 8i9i10g11g MySQL MS SQL Server and DB2 that includes DDL DML DCL SQL PLSQL triggers cursors stored procedures indexes blocks packages Good experience on working with Amazon Web Services like EC2 S3 Amazon Simple DB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access management AWS Cloud Watch Amazon EBS and Amazon Cloud Front Expertise in developing applications using Spring Framework and using spring modules such as IOC AOP MVC JDBC ORM Boot Cloud Security and configuring application context for spring bean factory Extensive hands on work experience using Microservices with Spring Boot Restful and SOAP SOAP UI Web services Experience in developing and implementing Service Oriented Architecture SOA using Web Services SOAP REST WSDL and UDDI Handson experience with various web and enterprise application servers like Apache Tomcat BEA WebLogic IBM WebSphere and JBoss Experience working on JMS API and asynchronous message transfer communication Extensively worked with JMS Providers such as IBM MQ Series Strong experience with database design in ORACLE 8i9i10g11g MySQL MS SQL Server and DB2 that includes DDL DML DCL SQL PLSQL triggers cursors stored procedures indexes blocks packages Experience in using NoSQL databases like Mongo DB and Cassandra Extensive experience in implementing J2EE design patterns like Session Faade Singleton MVC pattern Business Delegate VO Data Access Object Service Locator Transfer Object Worked on different IDEs like Eclipse WSAD RAD and Net beans Experience in using NoSQL database Mongo DB Experience in using various version control tools like CVS GIT and SVN Experience in unit testing Integration testing performance testing writing UTD UTR JUnit Testing tool Experience in writing build scripts using ANT Gradle and Maven and implementing Continuous Integration and Continuous deployment using Jenkins and also with Deploy Developed Micro Services using Spring Cloud Spring Boot with Netflix Eureka to create the discovery Server service discovery clients and integrated Apache Kafka and Zoo Keeper as message broker Developed Spring Framework based RESTFUL Web Services for handling and persisting of requests and Spring MVC for returning response to presentation tier Used advanced java8 features like Lambda Expressions Streams Filters Enhanced concurrency methods etc Involved in various phases of Software Development Life Cycle SDLC and involved in Agile methodology break tasks into small increments called SCRUM with minimal planning Analyzed the system for Requirements and Design by developing Use Case Class Sequence and Collaboration Diagrams using MS Visio as part of UML created documents Worked through cross browser compatibility issues with layout and styles for all new CSS that was implemented Designed and developed custom message adapter components using Apache Kafka that allowed message to travel through Micro Services to base on RESTful API utilizing Spring Boot with Spring MVC Worked on React JS Virtual Dom and React views rendering using components which contains additional components called custom HTML tags Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions EC2 MongoDB focusing on highavailability fault tolerance and autoscaling Monitored frontend development which is performed by Angular JS HTML CSS3 and worked with views handlebars and different concepts related to Ember framework Developed Web Services using SOA technologies such as REST Worked on creation of Docker container images pushing images tagging integrating Spring boot created the Docker containers and Docker consoles for managing the application life cycle Created MQ Series objects on local and remote MQ servers Deployed applications on BEA Web logic application server 90 Used Eclipse IDE for coding and GIT for version control Designed application presentation layer with JSP Ajax J Query Struts Taglibraries and CSS Implemented REST Services to call jBPM Services and converting to JSON Developed web service using Drop wizard framework Developed and deployed REST API Services with SpringBoot to establish services for end devices Initiated Unit tests with JUnit and created technical documents Used Spring AOP for exceptions logging along with log4J and transaction handling in DAOs Prepare Test Environment Git and Gerrit for Unit Testing and Integration Testing Used JAXB API to bind XML Schema to java classes Environments Java JEE6 Core Java OOPS WebLogic 11 Gradle Hibernate Camel MQ Series WebSphere Angular JS and Restful Web services JUnit Spring Data Bootstrap UI JBoss CSS3 Spring boot jQuery NodeJS AJAX SpringBoot Struts 2x AWS Docker HTML JMS Unix Oracle 11g SQL Server GIT Eclipse RCP CVS Maven Sr Java Developer Fanni Mae Reston VA October 2013 to December 2015 The Federal National Mortgage Association FNMA commonly known as Fannie Mae is a United States governmentsponsored enterprise GSE and a publicly traded company The corporations purpose is to expand the secondary mortgage market by securitizing mortgage loans in the form of mortgagebacked securities allowing lenders to reinvest their assets into more lending and in effect increasing the number of lenders in the mortgage market by reducing the reliance on locally based savings and loan associations Key responsibilitiesmilestones Designed and developed various modules of the application with J2EE design architecture and frameworks like Spring MVC architecture and Spring Bean Factory using IOC AOP concepts Involved in complete development of AgileSCRUM developed and tested the application during various iterations Involved in developing Struts Actions and performed server side validations using Struts Validator Developed Rich User Interface using JavaScript J Query Bootstrap Angular JS AJAX HTML5 and CSS3 Actively participated with the development team to meet the specific customer requirements and proposed effective Hadoop solutions Developed DAO objects to handle data access operations using Spring DAO module Designed modular Micro Services to replace the existing website using Spring Boot and Spring Cloud Used Apache Camel for routing the exchanges between different systems Implemented Hibernate mapping files and generated POJOs using hbm2java tool Developed SOAP Web Services provider using Spring Web Services module Used Apache camel to integrate different applications Developed Camel Orchestration layers to integrate different components of the application Work on Detailed Code design and develop the code in JavaJ2EE components including Core Java JavaScript JSPServlets Building Restful Web services with SQL Used AngularJS as the development framework to build a singlepage application Used JavaScript for Client Side page validation scripting to avoid the need for Post Back and thereby improving the performance and responsiveness Worked with User Controls Validation Controls Web Server Controls and Grid Views Consumed Web Services from different source providers by creating Web Service client applications to test the Web Services Used JIBX mappings for marshalling and unmarshalling of XML data and Design and implement a Context RESTful API using Java Spring boot Worked on AS400 and Oracle 10g as backend databases Used Ant for developing build scripts and deploying the Eclipse RCP application onto Web Logic Implemented Display tag library in JSP pages for pagination and sorting functionalities Implemented various design patterns like Data Access Object Front Controller Model View Controller and Singleton in different tiers of the module Environments Spring 20 Struts 2x JBoss Fuse JEE6 EAP 43 Hibernate 30 Web Services Spring MVC Spring boot Apache camel SOAP UI JIBX Servlets JSP AJAX JavaScript Redux Bootstrap Angular JS JDBC JQuery JUnit MongoDB ANT XML Java Developer Bodhtree December 2011 to September 2013 Property Liability Management application used for storing the details of the Property and Liability exposures which later will be used by another system for calculating the contributions for the School districts Colleges Hospitals and Municipalities etc Key responsibilitiesmilestones Developed the application using Struts Framework that leverages classical Model View Layer MVC architecture UML diagrams like class diagrams interaction diagrams sequence and collaboration and activity diagrams Worked in an agile development environment and involved in daily SCRUM Worked closely with businessside clients to deliver attractive easytounderstand pages that appropriately reflected the companys fulfillment workflow Created Stacks using Amazon Cloud Formation templates to launch AWS Infrastructure and resources Used AWS Lambda to run the code in the AWS Deployed Spring Boot based micro services in Docker container using Amazon EC2 container services and using AWS admin console Designed and developed data management and reporting systems using Java JavaScript Angular 46 Typescript HTML CSS3 and other scripting languages Developed the GUI module DMT using Typescript DOJO Ajax HTML Angular was extensively used to achieve DOM Show hide elements and Event Handling Used Angular as the development framework to build a singlepage application and reusable Angular applications Developed business components using core java8 concepts like lambda date functional interfaces and classes like Inheritance Polymorphism Collections Serialization and Multithreading Used core java concepts like Collections Generics Exception handling IO Concurrency to develop business logic Developed end to end application on Spring Boot framework REST ApplicationSpring JPA using Crud repository Produced and consumed Restful Web Services for transferring XML data between two interfaces Developing application using spring core module and POJOs and worked on Messaging service Used the lightweight container of the Spring MVC Framework to provide architectural flexibility for inversion of controller IOC and Used Spring Core Annotations for Dependency Injection and Spring MVC for REST APIs application with Spring Boot and Microservices Developed SQL PLSQL stored procedures along with Shell Scripting database application scripts Created various Parser programs to extract data from IBM TIVOLI XML Java and database views GIT for version control of the application Tested Service and data access tier using Junit Mockito and Power Mockito Log4J to capture the log the events and exceptions Created DB2 SQL Procedures Functions Stored Procedures Nested Tables Cursors Reports SQL Functions for Reports Analyzed and understood the specifications provided by the clients Developed the presentation tier using HTML CSS JSP Servlets JSTL Ajax and Struts Used StrutsValidator framework for all frontend Validations for all the form entries Used Struts framework for the MVC implementation and Hibernate as ORM tool for database communication Designed and developed the code using multithreading Collections and other J2EE technologies Business Logic analysis to produce Business Requirement Workflow Diagram Architecture Functional and Design specifications Coded Action Classes Action Form for the web tier for the Customer Service representative to send a fax request with Struts validation framework Provided Support to migrate from WebLogic server to JBoss Designed and developed the controller and view components using JSPs and Servlets Used various Java scripts functions and was involved in coding Cascade style sheets CSS Designed and Implemented PLSQL stored procedures to process data operations Developed Demon threads using multithreading which runs continuously Deploying by resolving any external dependencies and customizing these deployed enterprise bean in this specific application Finally deployed the jar files in the Container and WAR files in the Web Container on to the WebSphere server Worked and modified the database schema as per the Client requirement Involved in implementing the DAO pattern for database connectivity and Hibernate System maintenance and functionality addition and improvement Performed unit testing of the developed application Consistently met deadlines and exceeded expectations achieving recognition resulting in increases in responsibilities Involved in Unit integration bug fixing acceptance testing with test cases Code reviewing Involved in production support and maintaining the application after production Used Log4j Junit and developed unit test cases to monitor the application functionality Used Tomcat as a server to deploy the application Environments Struts Java JSP Servlets Hibernate ORM Oracle MultiThreading JDBC Log4J MySQL PLSQL Eclipse 3 XML ANT JUnit Putty IBM WebSphere XSLT DOM Parser SAX Parser UML OOD Tomcat MVC JDBC 30 Applets Linux Windows XP Subversion Visio 2003 Software Engineer Sonata Software April 2009 to November 2011 SOMS Sonata Operational Management System is an inhouse application developed to ease our daily routines at our work place This application helps to erase all hurdles and provide a smoother bridge in communicating to various departments straight from your desk with just a single login The application is mainly used to manage departments projects employee timesheets and hiring process Key responsibilitiesmilestones Performed analysis for the client requirements based on the developed detailed design documents Developed Use Cases Class Diagrams Sequence Diagrams and Data Models using Microsoft Visio Developed STRUTS forms and actions for validation of user request data and application functionality Developed JSPs with STRUTS custom tags and implemented JavaScript validation of data Developed programs for accessing the database using JDBC thin driver to execute queries developed statements Stored Procedures and to manipulate the data in the database Developed the application using J2EE architecture Designed and developed web pages using HTML and JSP Involved in developing business tier using stateless session bean Used JavaScript for the web page validation and Struts Valuator for server side validation Designing the database and coding of SQL PLSQL Triggers and Views using IBM DB2 Developed Message Driven Beans for asynchronous processing of alerts Used Clear case for source code control and JUNIT for unit testing Involved in peer code reviews and performed integration testing of the modules Environments Java J2EE Struts HTML JDBC ANT XML IBM Web Sphere JUNIT DB2 Rational Rose CVS UNIX Clear Case",
    "unique_id": "960d4db2-27c2-4e91-b731-dbc50973fcdc"
}