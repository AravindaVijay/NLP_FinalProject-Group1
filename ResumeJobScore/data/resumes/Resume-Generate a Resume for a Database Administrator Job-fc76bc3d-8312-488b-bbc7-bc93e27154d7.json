{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Athene Annuity and Life Company Des Moines IA Work Experience Python Developer Athene Annuity and Life Company March 2018 to Present Responsibilities Worked on loading data from one data source to another sources SQL dbs NOSQL dbs Jenkins Supported EndtoEnd for prediction of likelihood and cost of insurance claims The goal of this project is to better predict Liability Insurance claim payments based on the characteristics of the insured customer Development of code in Python and move developed code into Companys Source control BitBucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Python Code always match the Companys guidelines also follows PEP8 and PyLint acceptance criteria Document each process and publish in Companys Confluence portal Create Batch jobs using python and schedule jobs via ControlM Automation workload scheduler Develop Complex queries on different flavors of Relational Databases like MySQL RDSMySQL Oracle Postgresql Write Complex SQL Queries using Python Libraries cx_Oracle Psycopg2 and Implement Data Security and Protection as well integrate Data Storage Solutions Debug complex queries for Performance Evaluation and ability to work on tasks assigned in JIRA Perform manual test execution Sanity Functional Retesting System Smoke testing Unit Integration Testing on existing new code also mentoring team where ever necessary Write Automation test cases using PythonSelenium Documenting the project using Microsoft Visio tool UML UseCase diagrams IBM Rational Rose XDE and Troubleshooting identified bugs and providing documentation on resolution and workarounds Perform loading procedures to load data into cloud sources like AWS and salesforce using python Use ServerSide logic to integrate Userfacing elements and identify various opportunities to improve efficiency and functionality Work with Connection Oriented Connection Less Protocols and File Transfer Protocols TCP UDP DHCP SMTP HTTPS FTP SFTP and support authentication and authorization procedures using OKTA SAML OAuth20 AD Work closely with Testing Teams and Business Analysts to ensure that requirements are delivering correctly in a timely manner Used modules such as Pandas Time Series Forecast Regression Decision Trees Flask Worked on Time Series Analysis using ARIMA Model Fulfilled all data science duties for a highend capital management firm Created and presented models for potential holdings to fund managers Achieved 20 better returns vs historical performance Created machine learning tools that computed adjusted PE values Predicted stock price 25 better than traditional figures Deployed the models to cloud functions Training the Statistical Model for the Previous data and Predicting the Liability Insurance claim payments Environment Python Django AWS Dynamodb Pandas HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO Bootstrap Agile GitLAB UML XML Python Developer WALGREENS November 2016 to March 2018 Responsibilities Worked on developing Django Web Application designed to accumulate data from different sources and different source typesXml JSON Plain Textfiles SQL DBs and Nosql DBs Implemented using Default Django session middleware Used modules such as Requests Xmlrd Pandas and Beautiful soup Experience in reviewing Python code for running the troubleshooting testcases and bug issues Involved in the development of the application using Python 33 HTML5 CSS3 AJAX JSON and Jquery Design roles and groups for users and resources using AWS Identity Access Management IAM Designed front end using UI tools like HTML CSS and JavaScript Developed entire frontend and backend modules using Python on Django Used Python and Django creating graphics XML processing data exchange and business logic implementation Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Environment Python Django Pandas HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO Bootstrap Agile GitLAB UML XML PYTHON DEVELOPER Ness Technologies IN December 2012 to August 2016 Responsibilities Developed a regionspecific SMS delivering system based on AWS SNS Google Maps API Flask Actively involved in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Working crossfunctionally to ensure proper functionality and delivery Developed backend modules using Python on Django Web Framework Composed python scripts to parse XML and JSON reports and load the information in database Maintain a solid understanding of MySQL database Implemented Cross Site Scripting CSRF and SQL injection for security and data protection Develop scalable applications and to effectively manage technology tradeoffs and risks Design database structures and developtune data access utilizing SQL Server by creating Flask based ORM Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Flask Database APIs to access database objects Also involved in validating and processing of files Handled RESTful services with the help of python library URLLIBS Closely analyzed the database tables using sequel pro tool of MySQL to resolve integrity issues Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers Designed and developed the UI of the website using HTML CSS Bootstrap and JavaScript Deployed the entire code using Linux parameters of the virtual machines for UAT phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Environment Python 27 Flask MySQL Linux Shell Scripting HTML5 CSS3 JavaScript JIRA GIT JAVA Application Developer Shell Info Technologies Private Ltd November 2010 to October 2012 Responsibilities Responsible for maintaining the code quality coding and implementation standards by code reviews Used Oracle Database for persisting the data Implemented persistence mechanism using Hibernate ORM Mapping Responsible for mapping the database model into persistence objects using Hibernate Annotations Developed the DAO layer for the application using Spring Hibernate Template support Developed various business logic and reports using HQL and Hibernate Criteria Created various unit test cases and integration tests for the DAO and Service using JUnit Integrated log4j for logging the messages at debug and error level Used Oracle BEA Weblogic suite 103 for developing and deploying the application Used Weblogic workshop Eclipse IDE XML Spy to develop the application Used SVN version controller to maintain the code versions Used Maven build tool to build the application Environment Java J2EE Visio UML JSP Servlet Struts JDBC Hibernate Oracle PLSQL Oracle 9i Ant Agile Eclipse XML XSLT MS Visual Source Safe Checkstyle Clover Cenqua Tomcat Weblogic Application Server MS Windows UNIX Education Bachelors Skills AWS 6 years database 6 years Django 6 years Git 6 years SQL 7 years Javascript",
    "entities": [
        "SQL Server",
        "HTML CSS",
        "SQLite",
        "BitBucket",
        "Developed",
        "Oracle Postgresql Write Complex SQL Queries",
        "AJAX",
        "AWS Identity Access Management IAM Designed",
        "UML UseCase",
        "Maven",
        "Companys",
        "Flask Database",
        "JIRA Perform",
        "Created",
        "PyLint",
        "Python Unit",
        "Djangos",
        "Relational Databases like",
        "AWS",
        "Nosql",
        "Hibernate Annotations Developed",
        "ControlM Automation",
        "Microsoft Visio",
        "UI",
        "Oracle BEA Weblogic",
        "Working",
        "Hibernate Criteria Created",
        "Jenkins on Scrumbasis Python Code",
        "Troubleshooting",
        "IBM",
        "Data Storage Solutions Debug",
        "Django Web Application",
        "Liability Insurance",
        "Present Responsibilities Worked",
        "Implemented Cross Site Scripting CSRF",
        "SVN",
        "Pandas Time Series Forecast Regression Decision Trees Flask Worked",
        "Python Libraries cx_Oracle",
        "jQuery",
        "SQL",
        "Flask",
        "XML",
        "UAT",
        "ServerSide",
        "NOSQL",
        "Testing Teams and Business Analysts",
        "lPythonspan",
        "Implement Data Security and Protection",
        "Predicting the Liability Insurance",
        "Performance Evaluation",
        "PEP8",
        "PythonSelenium Documenting",
        "Oracle Database",
        "Jquery Design",
        "HTML CSS Bootstrap",
        "CICD",
        "EndtoEnd",
        "URLLIBS"
    ],
    "experience": "Experience Python Developer Athene Annuity and Life Company March 2018 to Present Responsibilities Worked on loading data from one data source to another sources SQL dbs NOSQL dbs Jenkins Supported EndtoEnd for prediction of likelihood and cost of insurance claims The goal of this project is to better predict Liability Insurance claim payments based on the characteristics of the insured customer Development of code in Python and move developed code into Companys Source control BitBucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Python Code always match the Companys guidelines also follows PEP8 and PyLint acceptance criteria Document each process and publish in Companys Confluence portal Create Batch jobs using python and schedule jobs via ControlM Automation workload scheduler Develop Complex queries on different flavors of Relational Databases like MySQL RDSMySQL Oracle Postgresql Write Complex SQL Queries using Python Libraries cx_Oracle Psycopg2 and Implement Data Security and Protection as well integrate Data Storage Solutions Debug complex queries for Performance Evaluation and ability to work on tasks assigned in JIRA Perform manual test execution Sanity Functional Retesting System Smoke testing Unit Integration Testing on existing new code also mentoring team where ever necessary Write Automation test cases using PythonSelenium Documenting the project using Microsoft Visio tool UML UseCase diagrams IBM Rational Rose XDE and Troubleshooting identified bugs and providing documentation on resolution and workarounds Perform loading procedures to load data into cloud sources like AWS and salesforce using python Use ServerSide logic to integrate Userfacing elements and identify various opportunities to improve efficiency and functionality Work with Connection Oriented Connection Less Protocols and File Transfer Protocols TCP UDP DHCP SMTP HTTPS FTP SFTP and support authentication and authorization procedures using OKTA SAML OAuth20 AD Work closely with Testing Teams and Business Analysts to ensure that requirements are delivering correctly in a timely manner Used modules such as Pandas Time Series Forecast Regression Decision Trees Flask Worked on Time Series Analysis using ARIMA Model Fulfilled all data science duties for a highend capital management firm Created and presented models for potential holdings to fund managers Achieved 20 better returns vs historical performance Created machine learning tools that computed adjusted PE values Predicted stock price 25 better than traditional figures Deployed the models to cloud functions Training the Statistical Model for the Previous data and Predicting the Liability Insurance claim payments Environment Python Django AWS Dynamodb Pandas HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO Bootstrap Agile GitLAB UML XML Python Developer WALGREENS November 2016 to March 2018 Responsibilities Worked on developing Django Web Application designed to accumulate data from different sources and different source typesXml JSON Plain Textfiles SQL DBs and Nosql DBs Implemented using Default Django session middleware Used modules such as Requests Xmlrd Pandas and Beautiful soup Experience in reviewing Python code for running the troubleshooting testcases and bug issues Involved in the development of the application using Python 33 HTML5 CSS3 AJAX JSON and Jquery Design roles and groups for users and resources using AWS Identity Access Management IAM Designed front end using UI tools like HTML CSS and JavaScript Developed entire frontend and backend modules using Python on Django Used Python and Django creating graphics XML processing data exchange and business logic implementation Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Environment Python Django Pandas HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO Bootstrap Agile GitLAB UML XML PYTHON DEVELOPER Ness Technologies IN December 2012 to August 2016 Responsibilities Developed a regionspecific SMS delivering system based on AWS SNS Google Maps API Flask Actively involved in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Working crossfunctionally to ensure proper functionality and delivery Developed backend modules using Python on Django Web Framework Composed python scripts to parse XML and JSON reports and load the information in database Maintain a solid understanding of MySQL database Implemented Cross Site Scripting CSRF and SQL injection for security and data protection Develop scalable applications and to effectively manage technology tradeoffs and risks Design database structures and developtune data access utilizing SQL Server by creating Flask based ORM Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Flask Database APIs to access database objects Also involved in validating and processing of files Handled RESTful services with the help of python library URLLIBS Closely analyzed the database tables using sequel pro tool of MySQL to resolve integrity issues Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers Designed and developed the UI of the website using HTML CSS Bootstrap and JavaScript Deployed the entire code using Linux parameters of the virtual machines for UAT phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Environment Python 27 Flask MySQL Linux Shell Scripting HTML5 CSS3 JavaScript JIRA GIT JAVA Application Developer Shell Info Technologies Private Ltd November 2010 to October 2012 Responsibilities Responsible for maintaining the code quality coding and implementation standards by code reviews Used Oracle Database for persisting the data Implemented persistence mechanism using Hibernate ORM Mapping Responsible for mapping the database model into persistence objects using Hibernate Annotations Developed the DAO layer for the application using Spring Hibernate Template support Developed various business logic and reports using HQL and Hibernate Criteria Created various unit test cases and integration tests for the DAO and Service using JUnit Integrated log4j for logging the messages at debug and error level Used Oracle BEA Weblogic suite 103 for developing and deploying the application Used Weblogic workshop Eclipse IDE XML Spy to develop the application Used SVN version controller to maintain the code versions Used Maven build tool to build the application Environment Java J2EE Visio UML JSP Servlet Struts JDBC Hibernate Oracle PLSQL Oracle 9i Ant Agile Eclipse XML XSLT MS Visual Source Safe Checkstyle Clover Cenqua Tomcat Weblogic Application Server MS Windows UNIX Education Bachelors Skills AWS 6 years database 6 years Django 6 years Git 6 years SQL 7 years Javascript",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "Athene",
        "Annuity",
        "Life",
        "Company",
        "Des",
        "Moines",
        "IA",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "Athene",
        "Annuity",
        "Life",
        "Company",
        "March",
        "Present",
        "Responsibilities",
        "loading",
        "data",
        "data",
        "source",
        "sources",
        "SQL",
        "NOSQL",
        "Jenkins",
        "EndtoEnd",
        "prediction",
        "likelihood",
        "cost",
        "insurance",
        "goal",
        "project",
        "Liability",
        "Insurance",
        "claim",
        "payments",
        "characteristics",
        "customer",
        "Development",
        "code",
        "Python",
        "code",
        "Companys",
        "Source",
        "control",
        "BitBucket",
        "Companys",
        "Sever",
        "CICD",
        "procedures",
        "Jenkins",
        "Scrumbasis",
        "Python",
        "Code",
        "Companys",
        "guidelines",
        "PEP8",
        "PyLint",
        "acceptance",
        "criteria",
        "Document",
        "process",
        "Companys",
        "Confluence",
        "Create",
        "Batch",
        "jobs",
        "python",
        "schedule",
        "jobs",
        "ControlM",
        "Automation",
        "workload",
        "scheduler",
        "Develop",
        "Complex",
        "queries",
        "flavors",
        "Relational",
        "Databases",
        "MySQL",
        "Oracle",
        "Postgresql",
        "Write",
        "Complex",
        "SQL",
        "Queries",
        "Python",
        "Libraries",
        "cx_Oracle",
        "Implement",
        "Data",
        "Security",
        "Protection",
        "Data",
        "Storage",
        "Solutions",
        "Debug",
        "Performance",
        "Evaluation",
        "ability",
        "tasks",
        "JIRA",
        "Perform",
        "test",
        "execution",
        "Sanity",
        "Functional",
        "Retesting",
        "System",
        "Smoke",
        "Unit",
        "Integration",
        "Testing",
        "code",
        "team",
        "Write",
        "Automation",
        "test",
        "cases",
        "PythonSelenium",
        "Documenting",
        "project",
        "Microsoft",
        "Visio",
        "tool",
        "UML",
        "UseCase",
        "diagrams",
        "IBM",
        "Rational",
        "Rose",
        "XDE",
        "Troubleshooting",
        "bugs",
        "documentation",
        "resolution",
        "Perform",
        "loading",
        "procedures",
        "data",
        "sources",
        "AWS",
        "salesforce",
        "python",
        "Use",
        "ServerSide",
        "logic",
        "elements",
        "opportunities",
        "efficiency",
        "functionality",
        "Work",
        "Connection",
        "Oriented",
        "Connection",
        "Less",
        "Protocols",
        "File",
        "Transfer",
        "Protocols",
        "UDP",
        "SMTP",
        "HTTPS",
        "FTP",
        "SFTP",
        "authentication",
        "authorization",
        "procedures",
        "OKTA",
        "SAML",
        "OAuth20",
        "AD",
        "Work",
        "Testing",
        "Teams",
        "Business",
        "Analysts",
        "requirements",
        "manner",
        "modules",
        "Pandas",
        "Time",
        "Series",
        "Forecast",
        "Regression",
        "Decision",
        "Trees",
        "Flask",
        "Time",
        "Series",
        "Analysis",
        "ARIMA",
        "Model",
        "data",
        "science",
        "duties",
        "highend",
        "capital",
        "management",
        "firm",
        "models",
        "holdings",
        "managers",
        "returns",
        "performance",
        "machine",
        "learning",
        "tools",
        "PE",
        "values",
        "stock",
        "price",
        "figures",
        "models",
        "cloud",
        "functions",
        "Statistical",
        "Model",
        "data",
        "Liability",
        "Insurance",
        "claim",
        "payments",
        "Environment",
        "Python",
        "Django",
        "Dynamodb",
        "Pandas",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "MongoDB",
        "Linux",
        "Javascript",
        "JQuery",
        "AJAX",
        "JSON",
        "Sublime",
        "Text",
        "Jira",
        "Git",
        "Djangocms",
        "SSO",
        "Bootstrap",
        "Agile",
        "GitLAB",
        "UML",
        "XML",
        "Python",
        "Developer",
        "WALGREENS",
        "November",
        "March",
        "Responsibilities",
        "Django",
        "Web",
        "Application",
        "data",
        "sources",
        "source",
        "typesXml",
        "JSON",
        "Plain",
        "Textfiles",
        "SQL",
        "DBs",
        "Nosql",
        "DBs",
        "Default",
        "Django",
        "session",
        "middleware",
        "modules",
        "Requests",
        "Xmlrd",
        "Pandas",
        "soup",
        "Experience",
        "Python",
        "code",
        "troubleshooting",
        "testcases",
        "bug",
        "issues",
        "development",
        "application",
        "Python",
        "HTML5",
        "CSS3",
        "AJAX",
        "JSON",
        "Jquery",
        "Design",
        "roles",
        "groups",
        "users",
        "resources",
        "AWS",
        "Identity",
        "Access",
        "Management",
        "IAM",
        "end",
        "UI",
        "tools",
        "HTML",
        "CSS",
        "JavaScript",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Python",
        "Django",
        "graphics",
        "XML",
        "processing",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Design",
        "data",
        "management",
        "system",
        "PostgreSQL",
        "Wrote",
        "Python",
        "OO",
        "Design",
        "code",
        "quality",
        "monitoring",
        "code",
        "optimization",
        "Django",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "integrity",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "Environment",
        "Python",
        "Django",
        "Pandas",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "MongoDB",
        "Linux",
        "Javascript",
        "JQuery",
        "AJAX",
        "JSON",
        "Sublime",
        "Text",
        "Jira",
        "Git",
        "Djangocms",
        "SSO",
        "Bootstrap",
        "Agile",
        "GitLAB",
        "UML",
        "XML",
        "PYTHON",
        "DEVELOPER",
        "Ness",
        "Technologies",
        "December",
        "August",
        "Responsibilities",
        "SMS",
        "system",
        "AWS",
        "SNS",
        "Google",
        "Maps",
        "API",
        "Flask",
        "requirement",
        "gathering",
        "analysis",
        "period",
        "project",
        "business",
        "requirements",
        "workshopsgatherings",
        "business",
        "clients",
        "functionality",
        "delivery",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "python",
        "scripts",
        "XML",
        "reports",
        "information",
        "database",
        "understanding",
        "MySQL",
        "database",
        "Cross",
        "Site",
        "Scripting",
        "CSRF",
        "SQL",
        "injection",
        "security",
        "data",
        "protection",
        "applications",
        "technology",
        "tradeoffs",
        "risks",
        "Design",
        "database",
        "structures",
        "data",
        "access",
        "SQL",
        "Server",
        "Flask",
        "ORM",
        "views",
        "templates",
        "Python",
        "Djangos",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Flask",
        "Database",
        "APIs",
        "database",
        "objects",
        "processing",
        "files",
        "services",
        "help",
        "python",
        "library",
        "URLLIBS",
        "database",
        "tables",
        "sequel",
        "tool",
        "MySQL",
        "integrity",
        "issues",
        "jQuery",
        "AJAX",
        "JSON",
        "data",
        "objects",
        "end",
        "controllers",
        "UI",
        "website",
        "HTML",
        "CSS",
        "Bootstrap",
        "JavaScript",
        "code",
        "Linux",
        "parameters",
        "machines",
        "phase",
        "Collaborate",
        "stakeholders",
        "project",
        "managers",
        "test",
        "document",
        "system",
        "Environment",
        "Python",
        "Flask",
        "MySQL",
        "Linux",
        "Shell",
        "Scripting",
        "HTML5",
        "CSS3",
        "JavaScript",
        "JIRA",
        "GIT",
        "JAVA",
        "Application",
        "Developer",
        "Shell",
        "Info",
        "Technologies",
        "Private",
        "Ltd",
        "November",
        "October",
        "Responsibilities",
        "code",
        "quality",
        "coding",
        "implementation",
        "standards",
        "code",
        "reviews",
        "Oracle",
        "Database",
        "data",
        "persistence",
        "mechanism",
        "Hibernate",
        "ORM",
        "Mapping",
        "database",
        "model",
        "persistence",
        "objects",
        "Hibernate",
        "Annotations",
        "DAO",
        "layer",
        "application",
        "Spring",
        "Hibernate",
        "Template",
        "support",
        "business",
        "logic",
        "reports",
        "HQL",
        "Hibernate",
        "Criteria",
        "unit",
        "test",
        "cases",
        "integration",
        "tests",
        "DAO",
        "Service",
        "JUnit",
        "Integrated",
        "log4j",
        "messages",
        "debug",
        "error",
        "level",
        "Oracle",
        "BEA",
        "Weblogic",
        "suite",
        "application",
        "Weblogic",
        "workshop",
        "Eclipse",
        "IDE",
        "XML",
        "Spy",
        "application",
        "SVN",
        "version",
        "controller",
        "code",
        "versions",
        "Maven",
        "tool",
        "application",
        "Environment",
        "Java",
        "J2EE",
        "Visio",
        "UML",
        "JSP",
        "Servlet",
        "Struts",
        "JDBC",
        "Hibernate",
        "Oracle",
        "PLSQL",
        "Oracle",
        "9i",
        "Ant",
        "Agile",
        "Eclipse",
        "XML",
        "XSLT",
        "MS",
        "Visual",
        "Source",
        "Safe",
        "Checkstyle",
        "Clover",
        "Cenqua",
        "Tomcat",
        "Weblogic",
        "Application",
        "Server",
        "MS",
        "Windows",
        "UNIX",
        "Education",
        "Bachelors",
        "Skills",
        "AWS",
        "years",
        "database",
        "years",
        "Django",
        "years",
        "Git",
        "years",
        "SQL",
        "years",
        "Javascript"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:53:36.455190",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer Athene Annuity and Life Company Des Moines IA Work Experience Python Developer Athene Annuity and Life Company March 2018 to Present Responsibilities Worked on loading data from one data source to another sources SQL dbs NOSQL dbs Jenkins Supported EndtoEnd for prediction of likelihood and cost of insurance claims The goal of this project is to better predict Liability Insurance claim payments based on the characteristics of the insured customer Development of code in Python and move developed code into Companys Source control BitBucket and Deploy into Companys Sever using CICD procedures like Jenkins on Scrumbasis Python Code always match the Companys guidelines also follows PEP8 and PyLint acceptance criteria Document each process and publish in Companys Confluence portal Create Batch jobs using python and schedule jobs via ControlM Automation workload scheduler Develop Complex queries on different flavors of Relational Databases like MySQL RDSMySQL Oracle Postgresql Write Complex SQL Queries using Python Libraries cx_Oracle Psycopg2 and Implement Data Security and Protection as well integrate Data Storage Solutions Debug complex queries for Performance Evaluation and ability to work on tasks assigned in JIRA Perform manual test execution Sanity Functional Retesting System Smoke testing Unit Integration Testing on existing new code also mentoring team where ever necessary Write Automation test cases using PythonSelenium Documenting the project using Microsoft Visio tool UML UseCase diagrams IBM Rational Rose XDE and Troubleshooting identified bugs and providing documentation on resolution and workarounds Perform loading procedures to load data into cloud sources like AWS and salesforce using python Use ServerSide logic to integrate Userfacing elements and identify various opportunities to improve efficiency and functionality Work with Connection Oriented Connection Less Protocols and File Transfer Protocols TCP UDP DHCP SMTP HTTPS FTP SFTP and support authentication and authorization procedures using OKTA SAML OAuth20 AD Work closely with Testing Teams and Business Analysts to ensure that requirements are delivering correctly in a timely manner Used modules such as Pandas Time Series Forecast Regression Decision Trees Flask Worked on Time Series Analysis using ARIMA Model Fulfilled all data science duties for a highend capital management firm Created and presented models for potential holdings to fund managers Achieved 20 better returns vs historical performance Created machine learning tools that computed adjusted PE values Predicted stock price 25 better than traditional figures Deployed the models to cloud functions Training the Statistical Model for the Previous data and Predicting the Liability Insurance claim payments Environment Python Django AWS Dynamodb Pandas HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO Bootstrap Agile GitLAB UML XML Python Developer WALGREENS November 2016 to March 2018 Responsibilities Worked on developing Django Web Application designed to accumulate data from different sources and different source typesXml JSON Plain Textfiles SQL DBs and Nosql DBs Implemented using Default Django session middleware Used modules such as Requests Xmlrd Pandas and Beautiful soup Experience in reviewing Python code for running the troubleshooting testcases and bug issues Involved in the development of the application using Python 33 HTML5 CSS3 AJAX JSON and Jquery Design roles and groups for users and resources using AWS Identity Access Management IAM Designed front end using UI tools like HTML CSS and JavaScript Developed entire frontend and backend modules using Python on Django Used Python and Django creating graphics XML processing data exchange and business logic implementation Design and developed data management system using PostgreSQL Wrote Python OO Design code for manufacturing quality monitoring logging and debugging code optimization Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Environment Python Django Pandas HTML5 CSS3 Bootstrap MongoDB Linux Javascript JQuery AJAX JSON Sublime Text Jira Git Djangocms SSO Bootstrap Agile GitLAB UML XML PYTHON DEVELOPER Ness Technologies IN December 2012 to August 2016 Responsibilities Developed a regionspecific SMS delivering system based on AWS SNS Google Maps API Flask Actively involved in requirement gathering and analysis period of the project in recording the business requirements by leading workshopsgatherings with different business clients Working crossfunctionally to ensure proper functionality and delivery Developed backend modules using Python on Django Web Framework Composed python scripts to parse XML and JSON reports and load the information in database Maintain a solid understanding of MySQL database Implemented Cross Site Scripting CSRF and SQL injection for security and data protection Develop scalable applications and to effectively manage technology tradeoffs and risks Design database structures and developtune data access utilizing SQL Server by creating Flask based ORM Developed views and templates with Python and Djangos view controller and templating language to create a userfriendly website interface Used Flask Database APIs to access database objects Also involved in validating and processing of files Handled RESTful services with the help of python library URLLIBS Closely analyzed the database tables using sequel pro tool of MySQL to resolve integrity issues Used jQuery and AJAX calls for transmitting JSON data objects between front end and controllers Designed and developed the UI of the website using HTML CSS Bootstrap and JavaScript Deployed the entire code using Linux parameters of the virtual machines for UAT phase Collaborate with key stakeholders and project managers to design develop integrate test document and implement the system Environment Python 27 Flask MySQL Linux Shell Scripting HTML5 CSS3 JavaScript JIRA GIT JAVA Application Developer Shell Info Technologies Private Ltd November 2010 to October 2012 Responsibilities Responsible for maintaining the code quality coding and implementation standards by code reviews Used Oracle Database for persisting the data Implemented persistence mechanism using Hibernate ORM Mapping Responsible for mapping the database model into persistence objects using Hibernate Annotations Developed the DAO layer for the application using Spring Hibernate Template support Developed various business logic and reports using HQL and Hibernate Criteria Created various unit test cases and integration tests for the DAO and Service using JUnit Integrated log4j for logging the messages at debug and error level Used Oracle BEA Weblogic suite 103 for developing and deploying the application Used Weblogic workshop Eclipse IDE XML Spy to develop the application Used SVN version controller to maintain the code versions Used Maven build tool to build the application Environment Java J2EE Visio UML JSP Servlet Struts JDBC Hibernate Oracle PLSQL Oracle 9i Ant Agile Eclipse XML XSLT MS Visual Source Safe Checkstyle Clover Cenqua Tomcat Weblogic Application Server MS Windows UNIX Education Bachelors Skills AWS 6 years database 6 years Django 6 years Git 6 years SQL 7 years Javascript",
    "unique_id": "fc76bc3d-8312-488b-bbc7-bc93e27154d7"
}