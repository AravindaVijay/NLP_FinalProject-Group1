{
    "clean_data": "Java J2EE Developer span lJavaspan J2EE span lDeveloperspan Java J2EE Developer JP Morgan Chase Novi MI Having 7 years of software development experience using JAVAJ2EE technologies Experience in building UI technologies like HTML5 CSS3 Bootstrap4 and scripting languages like JavaScript jQuery AJAX DOM AngularJS and ReactJS Strong experience in using JSPs JSTL HTML5 CSS3 Bootstrap4 and Bootstrap4 for developing Frontend web pages Developed web applications by implementing Model View Control MVC architecture Hands on experience in writing light weight Nodejs Express server using JavaScript JQuery to make connections between server and databases like JDBC Experience in building applications using various technologies like Java spring Hibernate JPA JSF Servlets JSP hands on experience on JAVA8 Strong experience in using spring models like Spring MVC Dependency Injection JDBC Spring Rest and Spring Boot Experience in developing Spring JDBC Templates and Spring Rest Templates Implemented various design patterns like DAO DTO Singleton Prototype Service Locator MVC using JavaJ2EE technologies Experience in Service Oriented Architecture and Web Services using SOAP and REST Experience in developing and deploying the Micro services applications in Pivotal Cloud Foundry PaaS cloud platform and CF command line interface Experience in Database Modeling design and development of PLSQL Stored Procedures and packages in relational database My SQL SQL Server 2000 Experience with build tools like Maven Gradle and logging tools like Log4J Experience in deploying application on Tomcat Web Sphere web Logic and JBoss servers Experience in document preparation includes Requirement Specification Analysis and Design Documents Test cases Use Cases User Training Documents and Technical Help Documents Experienced in Development Testing and Deployment of various domain applications on Windows and UNIX platforms using IDEs such as Eclipse NetBeans Spring Test Suite and IntelliJ Work Experience Java J2EE Developer JP Morgan Chase Wilmington DE June 2016 to Present Description JPMorgan Chase is one of the most secured financial institutions that serves huge domain of customers JPMorgan clients include the worlds most prominent corporations governments and institutional investors This project serves its customers and clients with all credit and debit operations The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic recurring bill payment and Review Payments Responsibilities Implemented a security module in Angular that integrates with the spring security in the backend with Authentication and Authorization and defined various custom directives Implemented Routing and HTTP modules for navigation between the components and invoking the Rest Services using GET POST PUT and DELETE methods Analysis design and development of Application based on J2EE using Spring and Hibernate Used spring framework for Model View Controller MVC and integrated with Hibernate Used spring inheritance Autowiring Core Containers ORM modules for migration from EJB to spring Spring Quartz for scheduling tasks to generating reports and emails to clients Implementing or exposing the Micro services to base on RESTful API utilizing implementing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC Used JavaScript to add dynamic behavior store information and handle requests and responses Worked on JavaScript arrays to build interactive websites and pages that adapt to every device Worked experience of using JPA with Spring Boot developing web services Used RESTAPI with JAXRS for consuming Restful web services Used RESTful service for HTTP protocol and create the frontend web Service Implement the user interface authentication to get into web application Implemented Separate controller per form using Spring MVC components like Dispatch servlets view resolver and Request mapping annotations and Rest Controllers annotations Good experience with Spring AOP Spring Transactions Spring Security Spring Quartz batch jobs used Executor Framework to deal with Java Threads Environment Java J2EE Spring MVC Rest web services Angular4 Spring 4x Spring Boot Spring cloud JSON Maven Junit Hibernate Oracle JBoss ECMA6 Executor services JavaJ2EE Developer Wells Fargo San Francisco CA December 2014 to June 2016 Description Wells Fargo is one of the secured financial institutions that serves a large domain of customers The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic bill payments Auto Billing System is a web application built on Spring MVC framework Responsibilities To analyze the root cause for a problem raised and provide quick solution as soon as possible Developed application using Spring MVC Hibernate and Rest web services on presentation layer and business layer using spring Create Micro Service using spring MVC Developed React JS user interface by creating Render method Used spring configuration files application context object for creating various factory objects Created Spring MVC components like Dispatch servlets configure Request mapping annotation Used Hibernate with JPA annotation and created several persistent classes Implemented Spring MVC controllers with annotations validations and using model attributes to pass request from the presentation layer to helper classes in java Developed DAO classes with JUnit using Spring DAO package for data access manipulation Integrated spring with Hibernate using configurations and implemented DAO layer System analysis and deliver integration specification which includes interface exposed technology and protocols used based on oracle SOA suite of products mainly BPEL service Bus and WebLogic application server including JMS resources JMS Extensively used Hibernate ORM in data access layer to write DAOs Taken care of complete Java multithreading part in back end components Environment Java Spring Dependency Injection Spring MVC Hibernate Rest web services Angular Junit Spring IOC Spring security Spring Batch jQuery IBM WebSphere Junit Hibernate JMS WebLogic WSDL2 HTML XML XST XSLT JavaJ2EE Developer Magellan Health Services Maryland Heights MO May 2011 to November 2014 Description Magellan Health Services is one of the largest providers of Healthcare Information Technology solutions services devices and hardware Magellan enables physicians nurses and other authorized users to share data and streamline processes across an entire organization Companys comprehensive portfolio of solutions is designed on a common blueprint Magellan combines technology with knowledge to deliver vital data needed for realtime decisionmaking Responsibilities Worked in developing spring related backend services For the flex to access the database Implemented page specific controllers using Spring MVC components like Controller View resolver dispatch servlet and calls respective helper classes Implemented caching mechanism using spring cache configuration properties using EHCache Implemented presentation layer of application using HTML5 and CSS3 Implemented transaction management using spring declarative transaction management Implemented Hibernate Entity classes that map database tables using Hibernate annotations Implemented Hibernate utility classes that used as base implementation for DAO layer Implemented Hibernate second level caching at hibernate level using EHCache provider Implemented Search based queries using Hibernate Criteria Query interface Implemented Rest based web services implemented security using JAXRS annotations to handle data formats and use http methods Build Maven Scripts for the application deployment and integrated with tomcat server Involved in writing test cases implement unit test cases using Junit Environment J2EE Spring framework Spring MVC Spring Boot Hibernate Angular JS JQuery JSON JSF Servlets JDBC AJAX Tomcat Multithreading Web services SOAP XML Micro services Java Beans Net Tool JQuery JavaScript Apache Maven JUnit XSLT HTML CSS Education BSC in Computer Science in Computer Science University of the Gambia Skills J2ee Java Hibernate Spring Jboss jquery Jsf Servlets Struts Bootstrap Html5 Mvc Restful services Soap Ajax Tomcat Web services Weblogic Websphere Gradle Javascript Angular Java J2Ee Rest JSP JEE Angularjs Links httpController Additional Information TECHNICAL SKILLS Web Technologies HTML5 CSS3 Bootstrap JavaScript jQuery AJAX Angular JavaJ2EE Technologies Servlets JSPs Struts JSF Frameworks Spring Dependency Injection MVC Restful Services Spring Boot NPM Database Technologies MySQL JDBC Hibernate Oracle XML Technologies XML XSL XSLT Web Services SOAP REST Build tools Ant Maven Gradle SQL Languages SQL Queries PLSQL Stored Procedures App Server Tomcat WebLogic WebSphere JBoss Glassfish Methodologies Agile Waterfall TDD Test Driven Development Protocols TCPIP HTTP FTP",
    "entities": [
        "Maryland",
        "FTP",
        "Dispatch",
        "MVC Developed React JS",
        "Angular",
        "Developed",
        "API",
        "EHCache Implemented",
        "JPA",
        "XML Micro",
        "Request",
        "Create Micro Service",
        "java Developed DAO",
        "EHCache",
        "Jsf Servlets Struts Bootstrap Html5 Mvc Restful",
        "Description Magellan Health Services",
        "Companys",
        "Autowiring Core Containers",
        "Spring MVC",
        "UNIX",
        "Implemented Spring",
        "Created Spring",
        "Implemented Search",
        "JavaScript",
        "Auto Billing System",
        "Spring MVC Dependency",
        "JMS",
        "UI",
        "Restful",
        "CF command",
        "HTTP",
        "Present Description JPMorgan Chase",
        "Nodejs Express",
        "Implemented Hibernate",
        "Healthcare Information Technology",
        "the Rest Services",
        "HTML5",
        "SOA",
        "Controller View",
        "MVC",
        "Build Maven Scripts",
        "Spring MVC Hibernate",
        "Description Wells Fargo",
        "Render",
        "JavaJ2EE Developer Wells Fargo",
        "Model View Control MVC",
        "Java spring Hibernate JPA JSF Servlets JSP",
        "Database Modeling",
        "Review Payments Responsibilities Implemented",
        "SOAP",
        "Requirement Specification Analysis and Design Documents Test",
        "Micro",
        "Oracle JBoss ECMA6 Executor",
        "GET POST PUT",
        "Rest Controllers",
        "Bootstrap4",
        "DTO Singleton Prototype Service",
        "Maven Gradle",
        "JPMorgan",
        "JSON Maven Junit",
        "JUnit",
        "Application",
        "DELETE",
        "WebLogic",
        "Developer Magellan Health Services",
        "JAXRS",
        "MO",
        "RESTAPI",
        "Java Hibernate Spring Jboss",
        "Hibernate Criteria Query",
        "JavaJ2EE",
        "Authentication and Authorization",
        "Ant Maven Gradle",
        "JAVAJ2EE",
        "Implemented Hibernate Entity",
        "EJB"
    ],
    "experience": "Experience in building UI technologies like HTML5 CSS3 Bootstrap4 and scripting languages like JavaScript jQuery AJAX DOM AngularJS and ReactJS Strong experience in using JSPs JSTL HTML5 CSS3 Bootstrap4 and Bootstrap4 for developing Frontend web pages Developed web applications by implementing Model View Control MVC architecture Hands on experience in writing light weight Nodejs Express server using JavaScript JQuery to make connections between server and databases like JDBC Experience in building applications using various technologies like Java spring Hibernate JPA JSF Servlets JSP hands on experience on JAVA8 Strong experience in using spring models like Spring MVC Dependency Injection JDBC Spring Rest and Spring Boot Experience in developing Spring JDBC Templates and Spring Rest Templates Implemented various design patterns like DAO DTO Singleton Prototype Service Locator MVC using JavaJ2EE technologies Experience in Service Oriented Architecture and Web Services using SOAP and REST Experience in developing and deploying the Micro services applications in Pivotal Cloud Foundry PaaS cloud platform and CF command line interface Experience in Database Modeling design and development of PLSQL Stored Procedures and packages in relational database My SQL SQL Server 2000 Experience with build tools like Maven Gradle and logging tools like Log4J Experience in deploying application on Tomcat Web Sphere web Logic and JBoss servers Experience in document preparation includes Requirement Specification Analysis and Design Documents Test cases Use Cases User Training Documents and Technical Help Documents Experienced in Development Testing and Deployment of various domain applications on Windows and UNIX platforms using IDEs such as Eclipse NetBeans Spring Test Suite and IntelliJ Work Experience Java J2EE Developer JP Morgan Chase Wilmington DE June 2016 to Present Description JPMorgan Chase is one of the most secured financial institutions that serves huge domain of customers JPMorgan clients include the worlds most prominent corporations governments and institutional investors This project serves its customers and clients with all credit and debit operations The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic recurring bill payment and Review Payments Responsibilities Implemented a security module in Angular that integrates with the spring security in the backend with Authentication and Authorization and defined various custom directives Implemented Routing and HTTP modules for navigation between the components and invoking the Rest Services using GET POST PUT and DELETE methods Analysis design and development of Application based on J2EE using Spring and Hibernate Used spring framework for Model View Controller MVC and integrated with Hibernate Used spring inheritance Autowiring Core Containers ORM modules for migration from EJB to spring Spring Quartz for scheduling tasks to generating reports and emails to clients Implementing or exposing the Micro services to base on RESTful API utilizing implementing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC Used JavaScript to add dynamic behavior store information and handle requests and responses Worked on JavaScript arrays to build interactive websites and pages that adapt to every device Worked experience of using JPA with Spring Boot developing web services Used RESTAPI with JAXRS for consuming Restful web services Used RESTful service for HTTP protocol and create the frontend web Service Implement the user interface authentication to get into web application Implemented Separate controller per form using Spring MVC components like Dispatch servlets view resolver and Request mapping annotations and Rest Controllers annotations Good experience with Spring AOP Spring Transactions Spring Security Spring Quartz batch jobs used Executor Framework to deal with Java Threads Environment Java J2EE Spring MVC Rest web services Angular4 Spring 4x Spring Boot Spring cloud JSON Maven Junit Hibernate Oracle JBoss ECMA6 Executor services JavaJ2EE Developer Wells Fargo San Francisco CA December 2014 to June 2016 Description Wells Fargo is one of the secured financial institutions that serves a large domain of customers The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic bill payments Auto Billing System is a web application built on Spring MVC framework Responsibilities To analyze the root cause for a problem raised and provide quick solution as soon as possible Developed application using Spring MVC Hibernate and Rest web services on presentation layer and business layer using spring Create Micro Service using spring MVC Developed React JS user interface by creating Render method Used spring configuration files application context object for creating various factory objects Created Spring MVC components like Dispatch servlets configure Request mapping annotation Used Hibernate with JPA annotation and created several persistent classes Implemented Spring MVC controllers with annotations validations and using model attributes to pass request from the presentation layer to helper classes in java Developed DAO classes with JUnit using Spring DAO package for data access manipulation Integrated spring with Hibernate using configurations and implemented DAO layer System analysis and deliver integration specification which includes interface exposed technology and protocols used based on oracle SOA suite of products mainly BPEL service Bus and WebLogic application server including JMS resources JMS Extensively used Hibernate ORM in data access layer to write DAOs Taken care of complete Java multithreading part in back end components Environment Java Spring Dependency Injection Spring MVC Hibernate Rest web services Angular Junit Spring IOC Spring security Spring Batch jQuery IBM WebSphere Junit Hibernate JMS WebLogic WSDL2 HTML XML XST XSLT JavaJ2EE Developer Magellan Health Services Maryland Heights MO May 2011 to November 2014 Description Magellan Health Services is one of the largest providers of Healthcare Information Technology solutions services devices and hardware Magellan enables physicians nurses and other authorized users to share data and streamline processes across an entire organization Companys comprehensive portfolio of solutions is designed on a common blueprint Magellan combines technology with knowledge to deliver vital data needed for realtime decisionmaking Responsibilities Worked in developing spring related backend services For the flex to access the database Implemented page specific controllers using Spring MVC components like Controller View resolver dispatch servlet and calls respective helper classes Implemented caching mechanism using spring cache configuration properties using EHCache Implemented presentation layer of application using HTML5 and CSS3 Implemented transaction management using spring declarative transaction management Implemented Hibernate Entity classes that map database tables using Hibernate annotations Implemented Hibernate utility classes that used as base implementation for DAO layer Implemented Hibernate second level caching at hibernate level using EHCache provider Implemented Search based queries using Hibernate Criteria Query interface Implemented Rest based web services implemented security using JAXRS annotations to handle data formats and use http methods Build Maven Scripts for the application deployment and integrated with tomcat server Involved in writing test cases implement unit test cases using Junit Environment J2EE Spring framework Spring MVC Spring Boot Hibernate Angular JS JQuery JSON JSF Servlets JDBC AJAX Tomcat Multithreading Web services SOAP XML Micro services Java Beans Net Tool JQuery JavaScript Apache Maven JUnit XSLT HTML CSS Education BSC in Computer Science in Computer Science University of the Gambia Skills J2ee Java Hibernate Spring Jboss jquery Jsf Servlets Struts Bootstrap Html5 Mvc Restful services Soap Ajax Tomcat Web services Weblogic Websphere Gradle Javascript Angular Java J2Ee Rest JSP JEE Angularjs Links httpController Additional Information TECHNICAL SKILLS Web Technologies HTML5 CSS3 Bootstrap JavaScript jQuery AJAX Angular JavaJ2EE Technologies Servlets JSPs Struts JSF Frameworks Spring Dependency Injection MVC Restful Services Spring Boot NPM Database Technologies MySQL JDBC Hibernate Oracle XML Technologies XML XSL XSLT Web Services SOAP REST Build tools Ant Maven Gradle SQL Languages SQL Queries PLSQL Stored Procedures App Server Tomcat WebLogic WebSphere JBoss Glassfish Methodologies Agile Waterfall TDD Test Driven Development Protocols TCPIP HTTP FTP",
    "extracted_keywords": [
        "Java",
        "J2EE",
        "Developer",
        "lJavaspan",
        "J2EE",
        "span",
        "lDeveloperspan",
        "Java",
        "J2EE",
        "Developer",
        "JP",
        "Morgan",
        "Chase",
        "Novi",
        "MI",
        "years",
        "software",
        "development",
        "experience",
        "JAVAJ2EE",
        "technologies",
        "Experience",
        "UI",
        "technologies",
        "HTML5",
        "CSS3",
        "Bootstrap4",
        "scripting",
        "languages",
        "JavaScript",
        "jQuery",
        "AJAX",
        "DOM",
        "AngularJS",
        "experience",
        "JSPs",
        "JSTL",
        "HTML5",
        "CSS3",
        "Bootstrap4",
        "Bootstrap4",
        "Frontend",
        "web",
        "pages",
        "web",
        "applications",
        "Model",
        "View",
        "Control",
        "MVC",
        "architecture",
        "Hands",
        "experience",
        "weight",
        "Nodejs",
        "Express",
        "server",
        "JavaScript",
        "JQuery",
        "connections",
        "server",
        "databases",
        "JDBC",
        "Experience",
        "building",
        "applications",
        "technologies",
        "Java",
        "spring",
        "Hibernate",
        "JPA",
        "JSF",
        "JSP",
        "hands",
        "experience",
        "JAVA8",
        "experience",
        "spring",
        "models",
        "Spring",
        "MVC",
        "Dependency",
        "Injection",
        "JDBC",
        "Spring",
        "Rest",
        "Spring",
        "Boot",
        "Experience",
        "Spring",
        "JDBC",
        "Templates",
        "Spring",
        "Rest",
        "Templates",
        "design",
        "patterns",
        "DAO",
        "DTO",
        "Singleton",
        "Prototype",
        "Service",
        "Locator",
        "MVC",
        "JavaJ2EE",
        "technologies",
        "Experience",
        "Service",
        "Oriented",
        "Architecture",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Experience",
        "Micro",
        "services",
        "applications",
        "Cloud",
        "Foundry",
        "PaaS",
        "cloud",
        "platform",
        "CF",
        "command",
        "line",
        "interface",
        "Experience",
        "Database",
        "Modeling",
        "design",
        "development",
        "PLSQL",
        "Stored",
        "Procedures",
        "packages",
        "database",
        "SQL",
        "SQL",
        "Server",
        "Experience",
        "build",
        "tools",
        "Maven",
        "Gradle",
        "tools",
        "Experience",
        "application",
        "Tomcat",
        "Web",
        "Sphere",
        "web",
        "Logic",
        "JBoss",
        "servers",
        "Experience",
        "document",
        "preparation",
        "Requirement",
        "Specification",
        "Analysis",
        "Design",
        "Documents",
        "Test",
        "cases",
        "Use",
        "Cases",
        "User",
        "Training",
        "Documents",
        "Technical",
        "Help",
        "Documents",
        "Development",
        "Testing",
        "Deployment",
        "domain",
        "applications",
        "Windows",
        "UNIX",
        "platforms",
        "IDEs",
        "Eclipse",
        "NetBeans",
        "Spring",
        "Test",
        "Suite",
        "IntelliJ",
        "Work",
        "Experience",
        "Java",
        "J2EE",
        "Developer",
        "JP",
        "Morgan",
        "Chase",
        "Wilmington",
        "DE",
        "June",
        "Present",
        "Description",
        "JPMorgan",
        "Chase",
        "institutions",
        "domain",
        "customers",
        "JPMorgan",
        "clients",
        "worlds",
        "corporations",
        "governments",
        "investors",
        "project",
        "customers",
        "clients",
        "credit",
        "operations",
        "scope",
        "project",
        "design",
        "development",
        "Web",
        "application",
        "billing",
        "services",
        "application",
        "functionalities",
        "creation",
        "account",
        "payment",
        "bills",
        "bill",
        "payment",
        "Review",
        "Payments",
        "Responsibilities",
        "security",
        "module",
        "Angular",
        "spring",
        "security",
        "backend",
        "Authentication",
        "Authorization",
        "custom",
        "directives",
        "Routing",
        "HTTP",
        "modules",
        "navigation",
        "components",
        "Rest",
        "Services",
        "GET",
        "POST",
        "PUT",
        "DELETE",
        "methods",
        "Analysis",
        "design",
        "development",
        "Application",
        "J2EE",
        "Spring",
        "Hibernate",
        "spring",
        "framework",
        "Model",
        "View",
        "Controller",
        "MVC",
        "Hibernate",
        "spring",
        "inheritance",
        "Autowiring",
        "Core",
        "Containers",
        "ORM",
        "modules",
        "migration",
        "EJB",
        "Spring",
        "Quartz",
        "scheduling",
        "tasks",
        "reports",
        "emails",
        "clients",
        "Micro",
        "services",
        "API",
        "Micro",
        "services",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "JavaScript",
        "behavior",
        "store",
        "information",
        "requests",
        "responses",
        "JavaScript",
        "arrays",
        "websites",
        "pages",
        "device",
        "experience",
        "JPA",
        "Spring",
        "Boot",
        "web",
        "services",
        "RESTAPI",
        "JAXRS",
        "web",
        "services",
        "service",
        "HTTP",
        "protocol",
        "frontend",
        "web",
        "Service",
        "Implement",
        "user",
        "interface",
        "authentication",
        "web",
        "application",
        "controller",
        "form",
        "Spring",
        "MVC",
        "components",
        "Dispatch",
        "servlets",
        "view",
        "resolver",
        "Request",
        "mapping",
        "annotations",
        "Rest",
        "Controllers",
        "experience",
        "Spring",
        "AOP",
        "Spring",
        "Transactions",
        "Spring",
        "Security",
        "Spring",
        "Quartz",
        "batch",
        "jobs",
        "Executor",
        "Framework",
        "Java",
        "Threads",
        "Environment",
        "Java",
        "J2EE",
        "Spring",
        "MVC",
        "Rest",
        "web",
        "services",
        "Angular4",
        "Spring",
        "Spring",
        "Boot",
        "Spring",
        "cloud",
        "JSON",
        "Maven",
        "Junit",
        "Hibernate",
        "Oracle",
        "JBoss",
        "ECMA6",
        "Executor",
        "services",
        "JavaJ2EE",
        "Developer",
        "Wells",
        "Fargo",
        "San",
        "Francisco",
        "CA",
        "December",
        "June",
        "Description",
        "Wells",
        "Fargo",
        "institutions",
        "domain",
        "customers",
        "scope",
        "project",
        "design",
        "development",
        "Web",
        "application",
        "billing",
        "services",
        "application",
        "functionalities",
        "creation",
        "account",
        "payment",
        "bills",
        "bill",
        "payments",
        "Auto",
        "Billing",
        "System",
        "web",
        "application",
        "Spring",
        "MVC",
        "framework",
        "Responsibilities",
        "root",
        "cause",
        "problem",
        "solution",
        "application",
        "Spring",
        "MVC",
        "Hibernate",
        "Rest",
        "web",
        "services",
        "presentation",
        "layer",
        "business",
        "layer",
        "spring",
        "Create",
        "Micro",
        "Service",
        "spring",
        "MVC",
        "Developed",
        "React",
        "JS",
        "user",
        "interface",
        "Render",
        "method",
        "spring",
        "configuration",
        "files",
        "application",
        "context",
        "object",
        "factory",
        "objects",
        "Created",
        "Spring",
        "MVC",
        "components",
        "Dispatch",
        "servlets",
        "configure",
        "Request",
        "mapping",
        "annotation",
        "Hibernate",
        "JPA",
        "annotation",
        "classes",
        "Spring",
        "MVC",
        "controllers",
        "annotations",
        "validations",
        "model",
        "attributes",
        "request",
        "presentation",
        "layer",
        "helper",
        "classes",
        "Developed",
        "DAO",
        "classes",
        "JUnit",
        "Spring",
        "DAO",
        "package",
        "data",
        "access",
        "manipulation",
        "Integrated",
        "spring",
        "Hibernate",
        "configurations",
        "DAO",
        "layer",
        "System",
        "analysis",
        "integration",
        "specification",
        "interface",
        "technology",
        "protocols",
        "oracle",
        "SOA",
        "suite",
        "products",
        "service",
        "Bus",
        "WebLogic",
        "application",
        "server",
        "JMS",
        "resources",
        "JMS",
        "Hibernate",
        "ORM",
        "data",
        "access",
        "layer",
        "DAOs",
        "Taken",
        "care",
        "Java",
        "part",
        "end",
        "components",
        "Environment",
        "Java",
        "Spring",
        "Dependency",
        "Injection",
        "Spring",
        "MVC",
        "Hibernate",
        "Rest",
        "web",
        "services",
        "Angular",
        "Junit",
        "Spring",
        "IOC",
        "Spring",
        "security",
        "Spring",
        "Batch",
        "jQuery",
        "IBM",
        "WebSphere",
        "Junit",
        "Hibernate",
        "JMS",
        "WebLogic",
        "WSDL2",
        "HTML",
        "XML",
        "XST",
        "XSLT",
        "JavaJ2EE",
        "Developer",
        "Magellan",
        "Health",
        "Services",
        "Maryland",
        "Heights",
        "MO",
        "May",
        "November",
        "Description",
        "Magellan",
        "Health",
        "Services",
        "providers",
        "Healthcare",
        "Information",
        "Technology",
        "solutions",
        "services",
        "devices",
        "hardware",
        "Magellan",
        "physicians",
        "nurses",
        "users",
        "data",
        "processes",
        "organization",
        "Companys",
        "portfolio",
        "solutions",
        "blueprint",
        "Magellan",
        "technology",
        "knowledge",
        "data",
        "realtime",
        "Responsibilities",
        "spring",
        "services",
        "database",
        "page",
        "controllers",
        "Spring",
        "MVC",
        "components",
        "Controller",
        "View",
        "resolver",
        "dispatch",
        "servlet",
        "helper",
        "classes",
        "mechanism",
        "spring",
        "cache",
        "configuration",
        "properties",
        "EHCache",
        "presentation",
        "layer",
        "application",
        "HTML5",
        "CSS3",
        "transaction",
        "management",
        "spring",
        "transaction",
        "management",
        "Hibernate",
        "Entity",
        "classes",
        "database",
        "tables",
        "Hibernate",
        "annotations",
        "Hibernate",
        "utility",
        "classes",
        "base",
        "implementation",
        "DAO",
        "layer",
        "Hibernate",
        "level",
        "hibernate",
        "level",
        "EHCache",
        "provider",
        "Search",
        "queries",
        "Hibernate",
        "Criteria",
        "Query",
        "interface",
        "Rest",
        "web",
        "services",
        "security",
        "JAXRS",
        "annotations",
        "data",
        "formats",
        "http",
        "methods",
        "Build",
        "Maven",
        "Scripts",
        "application",
        "deployment",
        "tomcat",
        "server",
        "test",
        "cases",
        "unit",
        "test",
        "cases",
        "Junit",
        "Environment",
        "J2EE",
        "Spring",
        "framework",
        "Spring",
        "MVC",
        "Spring",
        "Boot",
        "Hibernate",
        "Angular",
        "JS",
        "JQuery",
        "JSON",
        "JSF",
        "JDBC",
        "AJAX",
        "Tomcat",
        "Multithreading",
        "Web",
        "services",
        "SOAP",
        "XML",
        "Micro",
        "services",
        "Java",
        "Beans",
        "Net",
        "Tool",
        "JQuery",
        "JavaScript",
        "Apache",
        "Maven",
        "JUnit",
        "XSLT",
        "HTML",
        "CSS",
        "Education",
        "BSC",
        "Computer",
        "Science",
        "Computer",
        "Science",
        "University",
        "Gambia",
        "Skills",
        "J2ee",
        "Java",
        "Hibernate",
        "Spring",
        "Jboss",
        "jquery",
        "Jsf",
        "Servlets",
        "Struts",
        "Bootstrap",
        "Html5",
        "Mvc",
        "Restful",
        "services",
        "Soap",
        "Ajax",
        "Tomcat",
        "Web",
        "services",
        "Weblogic",
        "Websphere",
        "Gradle",
        "Javascript",
        "Angular",
        "Java",
        "J2Ee",
        "Rest",
        "JSP",
        "JEE",
        "Angularjs",
        "httpController",
        "Additional",
        "Information",
        "TECHNICAL",
        "SKILLS",
        "Web",
        "Technologies",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "jQuery",
        "AJAX",
        "Angular",
        "JavaJ2EE",
        "Technologies",
        "Servlets",
        "Struts",
        "JSF",
        "Frameworks",
        "Spring",
        "Dependency",
        "Injection",
        "MVC",
        "Restful",
        "Services",
        "Spring",
        "Boot",
        "NPM",
        "Database",
        "Technologies",
        "MySQL",
        "JDBC",
        "Hibernate",
        "Oracle",
        "XML",
        "Technologies",
        "XML",
        "XSL",
        "XSLT",
        "Web",
        "Services",
        "SOAP",
        "REST",
        "Build",
        "tools",
        "Ant",
        "Maven",
        "Gradle",
        "SQL",
        "Languages",
        "SQL",
        "Queries",
        "PLSQL",
        "Stored",
        "Procedures",
        "App",
        "Server",
        "Tomcat",
        "WebLogic",
        "WebSphere",
        "JBoss",
        "Glassfish",
        "Methodologies",
        "Agile",
        "Waterfall",
        "TDD",
        "Test",
        "Driven",
        "Development",
        "Protocols",
        "HTTP",
        "FTP"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:42:13.456194",
    "resume_data": "Java J2EE Developer span lJavaspan J2EE span lDeveloperspan Java J2EE Developer JP Morgan Chase Novi MI Having 7 years of software development experience using JAVAJ2EE technologies Experience in building UI technologies like HTML5 CSS3 Bootstrap4 and scripting languages like JavaScript jQuery AJAX DOM AngularJS and ReactJS Strong experience in using JSPs JSTL HTML5 CSS3 Bootstrap4 and Bootstrap4 for developing Frontend web pages Developed web applications by implementing Model View Control MVC architecture Hands on experience in writing light weight Nodejs Express server using JavaScript JQuery to make connections between server and databases like JDBC Experience in building applications using various technologies like Java spring Hibernate JPA JSF Servlets JSP hands on experience on JAVA8 Strong experience in using spring models like Spring MVC Dependency Injection JDBC Spring Rest and Spring Boot Experience in developing Spring JDBC Templates and Spring Rest Templates Implemented various design patterns like DAO DTO Singleton Prototype Service Locator MVC using JavaJ2EE technologies Experience in Service Oriented Architecture and Web Services using SOAP and REST Experience in developing and deploying the Micro services applications in Pivotal Cloud Foundry PaaS cloud platform and CF command line interface Experience in Database Modeling design and development of PLSQL Stored Procedures and packages in relational database My SQL SQL Server 2000 Experience with build tools like Maven Gradle and logging tools like Log4J Experience in deploying application on Tomcat Web Sphere web Logic and JBoss servers Experience in document preparation includes Requirement Specification Analysis and Design Documents Test cases Use Cases User Training Documents and Technical Help Documents Experienced in Development Testing and Deployment of various domain applications on Windows and UNIX platforms using IDEs such as Eclipse NetBeans Spring Test Suite and IntelliJ Work Experience Java J2EE Developer JP Morgan Chase Wilmington DE June 2016 to Present Description JPMorgan Chase is one of the most secured financial institutions that serves huge domain of customers JPMorgan clients include the worlds most prominent corporations governments and institutional investors This project serves its customers and clients with all credit and debit operations The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic recurring bill payment and Review Payments Responsibilities Implemented a security module in Angular that integrates with the spring security in the backend with Authentication and Authorization and defined various custom directives Implemented Routing and HTTP modules for navigation between the components and invoking the Rest Services using GET POST PUT and DELETE methods Analysis design and development of Application based on J2EE using Spring and Hibernate Used spring framework for Model View Controller MVC and integrated with Hibernate Used spring inheritance Autowiring Core Containers ORM modules for migration from EJB to spring Spring Quartz for scheduling tasks to generating reports and emails to clients Implementing or exposing the Micro services to base on RESTful API utilizing implementing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC Used JavaScript to add dynamic behavior store information and handle requests and responses Worked on JavaScript arrays to build interactive websites and pages that adapt to every device Worked experience of using JPA with Spring Boot developing web services Used RESTAPI with JAXRS for consuming Restful web services Used RESTful service for HTTP protocol and create the frontend web Service Implement the user interface authentication to get into web application Implemented Separate controller per form using Spring MVC components like Dispatch servlets view resolver and Request mapping annotations and Rest Controllers annotations Good experience with Spring AOP Spring Transactions Spring Security Spring Quartz batch jobs used Executor Framework to deal with Java Threads Environment Java J2EE Spring MVC Rest web services Angular4 Spring 4x Spring Boot Spring cloud JSON Maven Junit Hibernate Oracle JBoss ECMA6 Executor services JavaJ2EE Developer Wells Fargo San Francisco CA December 2014 to June 2016 Description Wells Fargo is one of the secured financial institutions that serves a large domain of customers The scope of the project involves the design and development of a Web based application to provide online billing services The application provides various functionalities such as creation of account payment of bills enroll in automatic bill payments Auto Billing System is a web application built on Spring MVC framework Responsibilities To analyze the root cause for a problem raised and provide quick solution as soon as possible Developed application using Spring MVC Hibernate and Rest web services on presentation layer and business layer using spring Create Micro Service using spring MVC Developed React JS user interface by creating Render method Used spring configuration files application context object for creating various factory objects Created Spring MVC components like Dispatch servlets configure Request mapping annotation Used Hibernate with JPA annotation and created several persistent classes Implemented Spring MVC controllers with annotations validations and using model attributes to pass request from the presentation layer to helper classes in java Developed DAO classes with JUnit using Spring DAO package for data access manipulation Integrated spring with Hibernate using configurations and implemented DAO layer System analysis and deliver integration specification which includes interface exposed technology and protocols used based on oracle SOA suite of products mainly BPEL service Bus and WebLogic application server including JMS resources JMS Extensively used Hibernate ORM in data access layer to write DAOs Taken care of complete Java multithreading part in back end components Environment Java Spring Dependency Injection Spring MVC Hibernate Rest web services Angular Junit Spring IOC Spring security Spring Batch jQuery IBM WebSphere Junit Hibernate JMS WebLogic WSDL2 HTML XML XST XSLT JavaJ2EE Developer Magellan Health Services Maryland Heights MO May 2011 to November 2014 Description Magellan Health Services is one of the largest providers of Healthcare Information Technology solutions services devices and hardware Magellan enables physicians nurses and other authorized users to share data and streamline processes across an entire organization Companys comprehensive portfolio of solutions is designed on a common blueprint Magellan combines technology with knowledge to deliver vital data needed for realtime decisionmaking Responsibilities Worked in developing spring related backend services For the flex to access the database Implemented page specific controllers using Spring MVC components like Controller View resolver dispatch servlet and calls respective helper classes Implemented caching mechanism using spring cache configuration properties using EHCache Implemented presentation layer of application using HTML5 and CSS3 Implemented transaction management using spring declarative transaction management Implemented Hibernate Entity classes that map database tables using Hibernate annotations Implemented Hibernate utility classes that used as base implementation for DAO layer Implemented Hibernate second level caching at hibernate level using EHCache provider Implemented Search based queries using Hibernate Criteria Query interface Implemented Rest based web services implemented security using JAXRS annotations to handle data formats and use http methods Build Maven Scripts for the application deployment and integrated with tomcat server Involved in writing test cases implement unit test cases using Junit Environment J2EE Spring framework Spring MVC Spring Boot Hibernate Angular JS JQuery JSON JSF Servlets JDBC AJAX Tomcat Multithreading Web services SOAP XML Micro services Java Beans Net Tool JQuery JavaScript Apache Maven JUnit XSLT HTML CSS Education BSC in Computer Science in Computer Science University of the Gambia Skills J2ee Java Hibernate Spring Jboss jquery Jsf Servlets Struts Bootstrap Html5 Mvc Restful services Soap Ajax Tomcat Web services Weblogic Websphere Gradle Javascript Angular Java J2Ee Rest JSP JEE Angularjs Links httpController Additional Information TECHNICAL SKILLS Web Technologies HTML5 CSS3 Bootstrap JavaScript jQuery AJAX Angular JavaJ2EE Technologies Servlets JSPs Struts JSF Frameworks Spring Dependency Injection MVC Restful Services Spring Boot NPM Database Technologies MySQL JDBC Hibernate Oracle XML Technologies XML XSL XSLT Web Services SOAP REST Build tools Ant Maven Gradle SQL Languages SQL Queries PLSQL Stored Procedures App Server Tomcat WebLogic WebSphere JBoss Glassfish Methodologies Agile Waterfall TDD Test Driven Development Protocols TCPIP HTTP FTP",
    "unique_id": "c7556b03-6565-4081-8123-baf48f97f6de"
}