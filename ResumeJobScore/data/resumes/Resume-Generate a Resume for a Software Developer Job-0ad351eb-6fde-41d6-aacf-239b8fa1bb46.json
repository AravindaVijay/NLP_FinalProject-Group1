{
    "clean_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer CIT Group San Francisco CA Sponsorship required to work in the US Work Experience Python Developer CIT Group Livingston NJ September 2014 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Designed GUI framework using PyQt and Matplotlib for two quantitative finance patents Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Also used PyQt to implement GUI for the user to create modify and view reports based on client data Expertise includes bash and python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Responsible for SW product quality by ensuring by conducting code reviews coding standards are met using industry best practices and using static analysis tools Worked closely with software developers and DevOps to debug software and system problems Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Coding in LAMP Linux Apache MySQL and PHP environment and installed Zookeeper to manage the Hadoop ecosystem and other big data sets Hands on implementation of Continuous Delivery and DevOps end to end solutions in agile product development lifecycle Used Amazon Web Services AWS for improved efficiency of storage and fast access Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Experience with Heroku Site5 Amazon EC2 S3 for deployment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Exposure in working for developing a portal to manage and entities in a content management system using Flask Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Worked mainly on Core Java C STL data structures UNIX scripting multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Responsible for OpenStack project core infrastructure including code review continuous integration systems and developer tools Worked on Landscape a system for managing largescale deployments of Ubuntu Worked on design and implementation of an audit log system major API design improvements and OpenStack cloud management Established OpenStack project Infrastructure Program and served as tech lead Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing I have used AWS Amazon Web services in Redshift EmR for improved efficiency of storage Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Excellent project management skill with local and international teams Ex Continuous Integration and smoke test projects from Jenkins Used Django APIs for database access Scaled developer infrastructure as project grew and transitioned to OpenStack Foundation UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used WebServices to get travel destination data and rates Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Having experienced in graph DB knowledge and oauth2 experience Worked on development of SQL and stored procedures on MYSQL Logfire tlanta GA A Python Openstack Developer Python REST JSON October 2012 to August 2014 Responsibilities Worked extensively on the Python based proprietary framework Quartz Worked in the devops team delivered new agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ant maven artifactory chef custom scripting and Jira for ticketing Worked on implementing GUI using PyQt in Python REST JSON Designed and developed a horizontally scalable APIs using Python Flask Developed POC replacing Tibco BE with Cassandra and spark streaming using AWS Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Automation of various administrative tasks on multiple servers using DevOps Involved in back end development using Python with framework Flask Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Cloud Sherpas Atlanta GA November 2010 to September 2012 Responsibilities Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Created Reports using JASPER Worked on Openstack Swift for moving large data files using Keystone and Horizon and integrated them into the web services and client server application Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Used HTML CSS 5 JQuery JSON and Javascript for front end applications Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked responsible for development and enhancements of all the modules of raildocs and have them running with the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Java Developer American International Group New York NY March 2008 to October 2010 Development of user interface using JSP HTML and JavaScript Used Dependency injection in spring for Service layer and DAO layer J2EE Architecture was implemented using Struts based on the MVC2 pattern Written Servlet and deployed them on IBM WebSphere Application server Responsible for user validations on client side as well as server side Development of the Java classes to be used in JSP and Servlets Used Hibernate for persistence to Oracle Database Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked with PLSQL scripts to gather data and perform data manipulations Used JDBC to retrieve data from Oracle database Developed build scripts using Ant Developed stored procedures in Oracle Used Test Driven Development approach and wrote many unit and integration test cases Troubleshooting and coded corrections for production issues discovered in the application Additional Information Additional Information Operating Systems Windows 95 98 NT 2000 Xp Vista Windows 7 8 Linux Unix Microsoft Server 2003 Mac Os Android Windows Mobile Mac Osx Knowledge in HTML 402 HTML5 CSS JS XML XHTML Javascript JQuery AngularJS KnockoutJS Java Ruby AS 400 Mainframe Python Bugs Tracker Apps Bugzilla Firebug Jira HP QC Testlodge TFS Basic Knowledge in Automation Tools Selenium Watir Sikulli docker Jenkins CMS Kentico Websphere Teamsite Stellent Joomla Knowledge in Datawarehouse tools such Sybase Informatica Power Center DVO SAS Data Bases Knowledge Oracle PostgreSQL MySQLSqlite3 MongoDB Cassandra SVN",
    "entities": [
        "MongoDb Experience",
        "Additional Information Additional Information Operating Systems",
        "IBM WebSphere Application",
        "DevOps Involved",
        "Datatables",
        "Tibco BE",
        "DB",
        "API",
        "GUI",
        "Test Driven Development TDD",
        "US",
        "Task Schedulers",
        "Java Developer American International Group New York",
        "Zookeeper",
        "Engineering Responsible",
        "Ex Continuous Integration",
        "Utilized",
        "SQLAlchemy",
        "UNIX",
        "Infrastructure Program",
        "Created",
        "Agile Software Methodology",
        "Windows",
        "UI",
        "Servlets Used Hibernate",
        "Kentico",
        "Microsoft",
        "Postgres",
        "J2EE Architecture",
        "Python Object Oriented Design",
        "Xp Vista Windows",
        "Product Owners Python Developer Cloud Sherpas",
        "OpenStack",
        "Ubuntu Worked",
        "OpenStack Foundation UIS",
        "SVN",
        "Converted Visual",
        "Grid",
        "Oracle Database Improved",
        "Troubleshooting",
        "Amazon Web Services AWS",
        "Python Developer CIT Group",
        "Heroku",
        "AWS Performed",
        "FPML Financial Products Markup Language",
        "Linux",
        "JSP",
        "Established OpenStack",
        "Flask Used Docker",
        "Cryptography EncryptionHashing Foundation Utilities",
        "SQL",
        "Hadoop",
        "Flask Implemented",
        "XML",
        "Built",
        "Keystone",
        "Atlanta",
        "lPythonspan",
        "PHP",
        "Jenkins Ansible",
        "Redshift EmR",
        "Development of the Java",
        "DevOps",
        "RDS",
        "Oracle Used Test Driven Development",
        "Datawarehouse",
        "PyQt",
        "Devops",
        "AWS Cloud Architecture",
        "LAMP",
        "Amazon",
        "CICD",
        "Horizon"
    ],
    "experience": "Experience Python Developer CIT Group Livingston NJ September 2014 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Designed GUI framework using PyQt and Matplotlib for two quantitative finance patents Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Also used PyQt to implement GUI for the user to create modify and view reports based on client data Expertise includes bash and python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Responsible for SW product quality by ensuring by conducting code reviews coding standards are met using industry best practices and using static analysis tools Worked closely with software developers and DevOps to debug software and system problems Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Coding in LAMP Linux Apache MySQL and PHP environment and installed Zookeeper to manage the Hadoop ecosystem and other big data sets Hands on implementation of Continuous Delivery and DevOps end to end solutions in agile product development lifecycle Used Amazon Web Services AWS for improved efficiency of storage and fast access Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Experience with Heroku Site5 Amazon EC2 S3 for deployment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Exposure in working for developing a portal to manage and entities in a content management system using Flask Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Worked mainly on Core Java C STL data structures UNIX scripting multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Responsible for OpenStack project core infrastructure including code review continuous integration systems and developer tools Worked on Landscape a system for managing largescale deployments of Ubuntu Worked on design and implementation of an audit log system major API design improvements and OpenStack cloud management Established OpenStack project Infrastructure Program and served as tech lead Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing I have used AWS Amazon Web services in Redshift EmR for improved efficiency of storage Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Excellent project management skill with local and international teams Ex Continuous Integration and smoke test projects from Jenkins Used Django APIs for database access Scaled developer infrastructure as project grew and transitioned to OpenStack Foundation UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used WebServices to get travel destination data and rates Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Having experienced in graph DB knowledge and oauth2 experience Worked on development of SQL and stored procedures on MYSQL Logfire tlanta GA A Python Openstack Developer Python REST JSON October 2012 to August 2014 Responsibilities Worked extensively on the Python based proprietary framework Quartz Worked in the devops team delivered new agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ant maven artifactory chef custom scripting and Jira for ticketing Worked on implementing GUI using PyQt in Python REST JSON Designed and developed a horizontally scalable APIs using Python Flask Developed POC replacing Tibco BE with Cassandra and spark streaming using AWS Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Automation of various administrative tasks on multiple servers using DevOps Involved in back end development using Python with framework Flask Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Cloud Sherpas Atlanta GA November 2010 to September 2012 Responsibilities Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Created Reports using JASPER Worked on Openstack Swift for moving large data files using Keystone and Horizon and integrated them into the web services and client server application Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Used HTML CSS 5 JQuery JSON and Javascript for front end applications Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked responsible for development and enhancements of all the modules of raildocs and have them running with the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Java Developer American International Group New York NY March 2008 to October 2010 Development of user interface using JSP HTML and JavaScript Used Dependency injection in spring for Service layer and DAO layer J2EE Architecture was implemented using Struts based on the MVC2 pattern Written Servlet and deployed them on IBM WebSphere Application server Responsible for user validations on client side as well as server side Development of the Java classes to be used in JSP and Servlets Used Hibernate for persistence to Oracle Database Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked with PLSQL scripts to gather data and perform data manipulations Used JDBC to retrieve data from Oracle database Developed build scripts using Ant Developed stored procedures in Oracle Used Test Driven Development approach and wrote many unit and integration test cases Troubleshooting and coded corrections for production issues discovered in the application Additional Information Additional Information Operating Systems Windows 95 98 NT 2000 Xp Vista Windows 7 8 Linux Unix Microsoft Server 2003 Mac Os Android Windows Mobile Mac Osx Knowledge in HTML 402 HTML5 CSS JS XML XHTML Javascript JQuery AngularJS KnockoutJS Java Ruby AS 400 Mainframe Python Bugs Tracker Apps Bugzilla Firebug Jira HP QC Testlodge TFS Basic Knowledge in Automation Tools Selenium Watir Sikulli docker Jenkins CMS Kentico Websphere Teamsite Stellent Joomla Knowledge in Datawarehouse tools such Sybase Informatica Power Center DVO SAS Data Bases Knowledge Oracle PostgreSQL MySQLSqlite3 MongoDB Cassandra SVN",
    "extracted_keywords": [
        "Python",
        "Developer",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Python",
        "Developer",
        "CIT",
        "Group",
        "San",
        "Francisco",
        "CA",
        "Sponsorship",
        "US",
        "Work",
        "Experience",
        "Python",
        "Developer",
        "CIT",
        "Group",
        "Livingston",
        "NJ",
        "September",
        "Present",
        "Responsibilities",
        "SDLC",
        "process",
        "PHP",
        "website",
        "functionality",
        "APIs",
        "Python",
        "Flask",
        "SQLAlchemy",
        "data",
        "models",
        "code",
        "quality",
        "unit",
        "tests",
        "Pytest",
        "GUI",
        "framework",
        "PyQt",
        "Matplotlib",
        "finance",
        "patents",
        "Cassandra",
        "data",
        "store",
        "data",
        "time",
        "Oracle",
        "Cassandra",
        "Cassandra",
        "Spark",
        "streaming",
        "PyQt",
        "GUI",
        "user",
        "modify",
        "reports",
        "client",
        "data",
        "Expertise",
        "bash",
        "scripting",
        "focus",
        "Devops",
        "tools",
        "CICD",
        "AWS",
        "Cloud",
        "Architecture",
        "handson",
        "Engineering",
        "Responsible",
        "SW",
        "product",
        "quality",
        "code",
        "reviews",
        "standards",
        "industry",
        "practices",
        "analysis",
        "tools",
        "software",
        "developers",
        "DevOps",
        "software",
        "system",
        "problems",
        "integration",
        "deployments",
        "Jenkins",
        "Ansible",
        "Docker",
        "Coding",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PHP",
        "environment",
        "Zookeeper",
        "Hadoop",
        "ecosystem",
        "data",
        "Hands",
        "implementation",
        "Continuous",
        "Delivery",
        "DevOps",
        "end",
        "solutions",
        "product",
        "development",
        "lifecycle",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "custom",
        "query",
        "script",
        "store",
        "index",
        "sets",
        "Object",
        "data",
        "MongoDb",
        "Experience",
        "Heroku",
        "Amazon",
        "EC2",
        "S3",
        "deployment",
        "Developed",
        "GUI",
        "HTML",
        "XHTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "jQuery",
        "Exposure",
        "portal",
        "entities",
        "content",
        "management",
        "system",
        "Flask",
        "Used",
        "Docker",
        "Ansible",
        "deployment",
        "execution",
        "benchmark",
        "suite",
        "cluster",
        "machines",
        "Core",
        "Java",
        "C",
        "STL",
        "data",
        "UNIX",
        "scripting",
        "application",
        "logic",
        "Python",
        "Apache",
        "Couchdb",
        "NoSQL",
        "AWS",
        "Linux",
        "instance",
        "parallel",
        "RDS",
        "MySQL",
        "job",
        "market",
        "info",
        "OpenStack",
        "project",
        "core",
        "infrastructure",
        "code",
        "review",
        "integration",
        "systems",
        "developer",
        "tools",
        "Landscape",
        "system",
        "largescale",
        "deployments",
        "Ubuntu",
        "design",
        "implementation",
        "audit",
        "log",
        "system",
        "API",
        "design",
        "improvements",
        "OpenStack",
        "cloud",
        "management",
        "Established",
        "OpenStack",
        "project",
        "Infrastructure",
        "Program",
        "tech",
        "lead",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "AWS",
        "Amazon",
        "Web",
        "services",
        "Redshift",
        "EmR",
        "efficiency",
        "storage",
        "Wrote",
        "AJAX",
        "framework",
        "Datasets",
        "Datatables",
        "JSON",
        "strings",
        "Excellent",
        "project",
        "management",
        "skill",
        "teams",
        "Ex",
        "Continuous",
        "Integration",
        "smoke",
        "test",
        "projects",
        "Jenkins",
        "Django",
        "APIs",
        "database",
        "access",
        "Scaled",
        "developer",
        "infrastructure",
        "project",
        "OpenStack",
        "Foundation",
        "UIS",
        "system",
        "design",
        "Python",
        "Object",
        "Oriented",
        "Design",
        "approach",
        "modulespackagesutilities",
        "eg",
        "Cryptography",
        "EncryptionHashing",
        "Foundation",
        "Utilities",
        "Persona",
        "management",
        "errorexception",
        "management",
        "WebServices",
        "travel",
        "destination",
        "data",
        "rates",
        "Issues",
        "Realtime",
        "data",
        "RabbitMQ",
        "Postgres",
        "Cassandra",
        "graph",
        "DB",
        "knowledge",
        "experience",
        "development",
        "SQL",
        "procedures",
        "MYSQL",
        "Logfire",
        "GA",
        "Python",
        "Openstack",
        "Developer",
        "Python",
        "REST",
        "JSON",
        "October",
        "August",
        "Responsibilities",
        "Python",
        "framework",
        "Quartz",
        "devops",
        "team",
        "environments",
        "buildreleaseconfiguration",
        "deployment",
        "automationmonitoring",
        "Jenkins",
        "ant",
        "maven",
        "artifactory",
        "chef",
        "custom",
        "scripting",
        "Jira",
        "Worked",
        "GUI",
        "PyQt",
        "Python",
        "REST",
        "JSON",
        "APIs",
        "Python",
        "Flask",
        "Developed",
        "POC",
        "Tibco",
        "Cassandra",
        "streaming",
        "AWS",
        "delivery",
        "code",
        "principles",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "integration",
        "line",
        "Agile",
        "Software",
        "Methodology",
        "Automation",
        "tasks",
        "servers",
        "DevOps",
        "end",
        "development",
        "Python",
        "framework",
        "Flask",
        "Task",
        "Schedulers",
        "scheduling",
        "job",
        "priority",
        "data",
        "mapreduce",
        "functions",
        "Grid",
        "time",
        "scripts",
        "sets",
        "data",
        "filtering",
        "data",
        "reports",
        "scale",
        "environment",
        "data",
        "nodes",
        "jobs",
        "processing",
        "functions",
        "Deal",
        "Model",
        "Python",
        "object",
        "data",
        "structure",
        "reporting",
        "environment",
        "code",
        "installation",
        "SVN",
        "implementation",
        "Python",
        "modules",
        "eg",
        "csv",
        "robotparser",
        "itertools",
        "pickle",
        "jinja2",
        "lxml",
        "development",
        "modules",
        "XML",
        "trade",
        "data",
        "trade",
        "objects",
        "trade",
        "data",
        "outbound",
        "FPML",
        "Financial",
        "Products",
        "Markup",
        "Language",
        "repositories",
        "methodologies",
        "scrum",
        "standups",
        "Kanban",
        "mode",
        "requirements",
        "Product",
        "Owners",
        "Python",
        "Developer",
        "Cloud",
        "Sherpas",
        "Atlanta",
        "GA",
        "November",
        "September",
        "Responsibilities",
        "HTMLCSS",
        "Javascript",
        "UI",
        "development",
        "Application",
        "Python",
        "MSQL",
        "Created",
        "Reports",
        "JASPER",
        "Worked",
        "Openstack",
        "Swift",
        "data",
        "files",
        "Keystone",
        "Horizon",
        "web",
        "services",
        "client",
        "server",
        "application",
        "data",
        "access",
        "SQL",
        "procedures",
        "Multithreading",
        "Concurrency",
        "Batch",
        "Job",
        "Scheduling",
        "HTML",
        "CSS",
        "JQuery",
        "JSON",
        "Javascript",
        "end",
        "applications",
        "Linux",
        "profiler",
        "Valgrind",
        "optimization",
        "code",
        "RabbitMQ",
        "cluster",
        "installations",
        "configuration",
        "PythonBash",
        "Worked",
        "development",
        "enhancements",
        "modules",
        "raildocs",
        "design",
        "team",
        "project",
        "structure",
        "presentation",
        "layer",
        "HTML",
        "DHTML",
        "CSS",
        "JavaScript",
        "Python",
        "Perl",
        "CGI",
        "JQuery",
        "JavaScript",
        "JSON",
        "end",
        "Windows",
        "Linux",
        "server",
        "data",
        "exchange",
        "website",
        "XML",
        "JAVA",
        "Web",
        "Services",
        "python",
        "scripts",
        "content",
        "database",
        "manipulate",
        "files",
        "Python",
        "Django",
        "Forms",
        "data",
        "users",
        "Java",
        "Developer",
        "American",
        "International",
        "Group",
        "New",
        "York",
        "NY",
        "March",
        "October",
        "Development",
        "user",
        "interface",
        "JSP",
        "HTML",
        "JavaScript",
        "Dependency",
        "injection",
        "spring",
        "Service",
        "layer",
        "DAO",
        "layer",
        "J2EE",
        "Architecture",
        "Struts",
        "MVC2",
        "pattern",
        "Written",
        "Servlet",
        "IBM",
        "WebSphere",
        "Application",
        "server",
        "user",
        "validations",
        "client",
        "side",
        "server",
        "side",
        "Development",
        "Java",
        "classes",
        "JSP",
        "Servlets",
        "Hibernate",
        "persistence",
        "Oracle",
        "Database",
        "standards",
        "code",
        "performance",
        "applications",
        "use",
        "design",
        "patterns",
        "Front",
        "Controller",
        "DAO",
        "PLSQL",
        "scripts",
        "data",
        "data",
        "manipulations",
        "JDBC",
        "data",
        "Oracle",
        "database",
        "Developed",
        "build",
        "scripts",
        "Ant",
        "Developed",
        "procedures",
        "Oracle",
        "Test",
        "Driven",
        "Development",
        "approach",
        "unit",
        "integration",
        "test",
        "cases",
        "corrections",
        "production",
        "issues",
        "application",
        "Additional",
        "Information",
        "Additional",
        "Information",
        "Operating",
        "Systems",
        "Windows",
        "NT",
        "Xp",
        "Vista",
        "Windows",
        "Linux",
        "Unix",
        "Microsoft",
        "Server",
        "Mac",
        "Os",
        "Android",
        "Windows",
        "Mobile",
        "Mac",
        "Osx",
        "Knowledge",
        "HTML",
        "HTML5",
        "CSS",
        "JS",
        "XML",
        "XHTML",
        "Javascript",
        "JQuery",
        "KnockoutJS",
        "Java",
        "Ruby",
        "Mainframe",
        "Python",
        "Bugs",
        "Tracker",
        "Apps",
        "Bugzilla",
        "Firebug",
        "Jira",
        "HP",
        "QC",
        "Testlodge",
        "TFS",
        "Basic",
        "Knowledge",
        "Automation",
        "Tools",
        "Selenium",
        "Watir",
        "Sikulli",
        "docker",
        "Jenkins",
        "CMS",
        "Kentico",
        "Websphere",
        "Teamsite",
        "Stellent",
        "Joomla",
        "Knowledge",
        "Datawarehouse",
        "tools",
        "Sybase",
        "Informatica",
        "Power",
        "Center",
        "DVO",
        "SAS",
        "Data",
        "Bases",
        "Knowledge",
        "Oracle",
        "PostgreSQL",
        "MySQLSqlite3",
        "MongoDB",
        "Cassandra",
        "SVN"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T21:49:17.874321",
    "resume_data": "Python Developer span lPythonspan span lDeveloperspan Python Developer CIT Group San Francisco CA Sponsorship required to work in the US Work Experience Python Developer CIT Group Livingston NJ September 2014 to Present Responsibilities Participated in the complete SDLC process and used PHP to develop website functionality Developed Restful APIs using Python Flask and SQLAlchemy data models as well as ensured code quality by writing unit tests using Pytest Designed GUI framework using PyQt and Matplotlib for two quantitative finance patents Actively involved in building Cassandra data store integrating data in real time from Oracle to Cassandra using Cassandra Spark streaming Also used PyQt to implement GUI for the user to create modify and view reports based on client data Expertise includes bash and python scripting with focus on Devops tools CICD and AWS Cloud Architecture and handson Engineering Responsible for SW product quality by ensuring by conducting code reviews coding standards are met using industry best practices and using static analysis tools Worked closely with software developers and DevOps to debug software and system problems Utilized continuous integration and automated deployments with Jenkins Ansible and Docker Coding in LAMP Linux Apache MySQL and PHP environment and installed Zookeeper to manage the Hadoop ecosystem and other big data sets Hands on implementation of Continuous Delivery and DevOps end to end solutions in agile product development lifecycle Used Amazon Web Services AWS for improved efficiency of storage and fast access Implemented and used custom built query script to store index and read large sets of Object data like MongoDb Experience with Heroku Site5 Amazon EC2 S3 for deployment Developed GUI HTML XHTML AJAX CSS 5 and JavaScript jQuery Exposure in working for developing a portal to manage and entities in a content management system using Flask Used Docker and Ansible to fully automate the deployment and execution of the benchmark suite on a cluster of machines Worked mainly on Core Java C STL data structures UNIX scripting multithreading Built application logic using Python 27 Used Apache Couchdb NoSQL in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info Responsible for OpenStack project core infrastructure including code review continuous integration systems and developer tools Worked on Landscape a system for managing largescale deployments of Ubuntu Worked on design and implementation of an audit log system major API design improvements and OpenStack cloud management Established OpenStack project Infrastructure Program and served as tech lead Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing I have used AWS Amazon Web services in Redshift EmR for improved efficiency of storage Wrote AJAX framework to transform Datasets and Datatables into HTTPserializable JSON strings Excellent project management skill with local and international teams Ex Continuous Integration and smoke test projects from Jenkins Used Django APIs for database access Scaled developer infrastructure as project grew and transitioned to OpenStack Foundation UIS system design Python Object Oriented Design approach developing various modulespackagesutilities eg Cryptography EncryptionHashing Foundation Utilities Persona management errorexception management etc Used WebServices to get travel destination data and rates Issues pertaining to Realtime data being read from RabbitMQ into Postgres and Cassandra Having experienced in graph DB knowledge and oauth2 experience Worked on development of SQL and stored procedures on MYSQL Logfire tlanta GA A Python Openstack Developer Python REST JSON October 2012 to August 2014 Responsibilities Worked extensively on the Python based proprietary framework Quartz Worked in the devops team delivered new agile environments buildreleaseconfiguration and deployment automationmonitoring using Jenkins ant maven artifactory chef custom scripting and Jira for ticketing Worked on implementing GUI using PyQt in Python REST JSON Designed and developed a horizontally scalable APIs using Python Flask Developed POC replacing Tibco BE with Cassandra and spark streaming using AWS Performed efficient delivery of code based on principles of Test Driven Development TDD and continuous integration to keep in line with Agile Software Methodology principles Automation of various administrative tasks on multiple servers using DevOps Involved in back end development using Python with framework Flask Implemented and consumed Task Schedulers for scheduling job priority while distributing data and mapreduce functions over Grid Created time sensitive scripts to parse to large sets of serialized unstructured data objects 30 Million filtering and reducing data into functional reports Worked on a large scale distributed computing environment monitoring data nodes to prioritize jobs for processing functions Used existing Deal Model in Python to inherit and create object data structure for regulatory reporting Involved in environment code installation as well as the SVN implementation Used standard Python modules eg csv robotparser itertools pickle jinja2 lxml for development Created modules to transform incoming XML trade data into trade objects parse trade data and create outbound FPML Financial Products Markup Language sent to DTCC repositories Trained extensively in Agile methodologies and implemented by participating in scrum standups Kanban mode discussing and implementing requirements with Product Owners Python Developer Cloud Sherpas Atlanta GA November 2010 to September 2012 Responsibilities Used HTMLCSS and Javascript for UI development Converted Visual basic Application to Python MSQL Created Reports using JASPER Worked on Openstack Swift for moving large data files using Keystone and Horizon and integrated them into the web services and client server application Created data access using SQL and PLSQL stored procedures Worked extensively on Multithreading and Concurrency for implementing Batch Job Scheduling Used HTML CSS 5 JQuery JSON and Javascript for front end applications Used Linux profiler Valgrind for optimization of code Automated RabbitMQ cluster installations and configuration using PythonBash Worked responsible for development and enhancements of all the modules of raildocs and have them running with the design team for project structure Implemented the presentation layer with HTML DHTML Ajax CSS and JavaScript Used Python Perl CGI JQuery JavaScript and JSON at the front end Developed in Windows and going to deploy it in Linux server Worked on data exchange from website using XML JAVA and Web Services Used python scripts to update content in the database and manipulate files Generated Python Django Forms to record data of online users Java Developer American International Group New York NY March 2008 to October 2010 Development of user interface using JSP HTML and JavaScript Used Dependency injection in spring for Service layer and DAO layer J2EE Architecture was implemented using Struts based on the MVC2 pattern Written Servlet and deployed them on IBM WebSphere Application server Responsible for user validations on client side as well as server side Development of the Java classes to be used in JSP and Servlets Used Hibernate for persistence to Oracle Database Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Worked with PLSQL scripts to gather data and perform data manipulations Used JDBC to retrieve data from Oracle database Developed build scripts using Ant Developed stored procedures in Oracle Used Test Driven Development approach and wrote many unit and integration test cases Troubleshooting and coded corrections for production issues discovered in the application Additional Information Additional Information Operating Systems Windows 95 98 NT 2000 Xp Vista Windows 7 8 Linux Unix Microsoft Server 2003 Mac Os Android Windows Mobile Mac Osx Knowledge in HTML 402 HTML5 CSS JS XML XHTML Javascript JQuery AngularJS KnockoutJS Java Ruby AS 400 Mainframe Python Bugs Tracker Apps Bugzilla Firebug Jira HP QC Testlodge TFS Basic Knowledge in Automation Tools Selenium Watir Sikulli docker Jenkins CMS Kentico Websphere Teamsite Stellent Joomla Knowledge in Datawarehouse tools such Sybase Informatica Power Center DVO SAS Data Bases Knowledge Oracle PostgreSQL MySQLSqlite3 MongoDB Cassandra SVN",
    "unique_id": "0ad351eb-6fde-41d6-aacf-239b8fa1bb46"
}