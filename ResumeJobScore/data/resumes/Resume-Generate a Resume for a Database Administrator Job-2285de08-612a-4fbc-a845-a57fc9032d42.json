{
    "clean_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Tampa FL Around 10 years of experience as a WebApplication Developer and coding with analytical programming using Python Django Flask Experience in developing a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Experience in python Django Redis Zope Redux Pyramid Framework Experience in Configured continuous integration with Jenkins on Amazon EC2 Experience in developing and implementing REST and SOAP Web Services Strong experience setting up and working with CRUD operations inside Oracle SQL Microsoft SQL PostgreSQL mySQL and MongoDB Experience in developing JavaJ2ee applications using Hibernate XML Android XSLT and Basic ASPnet applications including using Core Java concepts like OOPS Multithreading Garbage Collections and Collection etc Expertise in Devops Release engineering Configuration Management Cloud Infrastructure and Automation with Jenkins Chef Puppet Extensively worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Exposure to CICD Continuous Integration and Continuous Deployment tools Jenkins for Continuous Integration Ansible for continuous deployment Experience on ETL and ELT Tools like SQL Server Integration Services SSIS also have knowledge in Data Migrator IBI Experienced with full software development lifecycle architecting scalable platforms Object Oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Flask Experience in using objectrelational mapper ORM library to automate the transfer of data stored in relational databases tables into objects Experienced in Python modules such as numpy matplotlib etc for generating complex graphical data creation of histograms etc Expert knowledge of and experience in Object Oriented Design and Programming concepts Experience Object Oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience in creatingmaintaining automation framework and making necessary improvements as needed Experience in writing scripts for data modelling Managed large datasets using Panda data frames and MySQL Experience in AWS Cloud platform and its features which includes EC2 AMI EBS Cloudwatch AWS Config Autoscaling IAM user management and AWS S3 Experienced in developing webbased applications using Python Django PHP XML CSS HTML Javascript and JQuery Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Experienced in installing configuring modifying testing and deploying applications with Apache Developed data format file that is required by the Model to perform analytics using Spark SQL and Hive query language Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Analyzed the sql scripts and designed it by using Spark SQL for faster performance Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Very strong full life cycle application development experience Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautifulsoup for web scraping Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Authorized to work in the US for any employer Work Experience Sr Python Developer Atlanta GA August 2018 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Designedwrote the tech specs SourceTarget mappings for the ETL mappings along with the Unit Test scripts Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Sr Python Developer Berkshire Hathaway Dallas TX November 2016 to July 2018 Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Statsmodels Gensim Jupyter Notebook and Anaconda Used jQuery for all clientside data manipulation Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application We have implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer Well Care Ca Reston VA March 2011 to October 2015 Responsibilities Develop the existing application to enhance the features using Django Framework and improve the performance using SOAP Web Services Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML Bootstrap and REST API calls using the JSON Used GitHub for version control Integrating the application with Django REST framework for building the APIs Worked with on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Selecting features building and optimizing classifiers using machine learning techniques Data mining using stateoftheart methods Extending companys data with third party sources of information when needed Enhancing data collection procedures to include information that is relevant for building analytic systems Processing cleansing and verifying the integrity of data used for analysis Doing adhoc analysis and presenting results in a clear manner Creating automated anomaly detection systems and constant tracking of its performance Extensively used XLSX reader and writer modules to read write and analyze data and project the results as per the client request Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Creating Restful web services for Catalog and Pricing with Django MVT MySQL and Oracle Using SQLAlchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to Postgresql with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Continuous improvement in integration workflow project testing and implementation of continuous integration pipeline with Jenkins Environment Python 27 Django 110 MySQL Python Scripting MongoDB AJAX SOAP REST jQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Python Developer Open Systems Technologies New York NY June 2008 to February 2011 Responsibilities Responsible for using the best technologies to add features to the existing system and services Involved in all aspects of the development process from product inception to scaling in production Responsible for driving software development best practices for the team and also mentoring and developing junior engineers Working in collaboration with project managers and higher management in crossfunctional teams within Sales and Account Management to understand business requirements and develop efficient elegant approaches to their implementation Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Used Django configuration to manage URLs and application parameters Responsible for configuring NoSQL databases like Apache Cassandra and Mongodb to for increasing compatibility with Django Designed and created backend data access modules using PLSQL stored procedures Good experience in writing SQL Queries and implementing stored procedures functions packages tables views cursors triggers Responsible for debugging the project monitored on JIRA Performed troubleshooting fixed and deployed many bug fixes for applications that were a main source of data for both customers and internal customer service team Handled potential points of failure through error handling and communication of failure Risk analysis for potential points of failure database communication points and file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Developed and executed User Acceptance Testing portion of test plan Generated Django forms to record data of online users and used PyTest for writing test cases Extensive use of version controlling systems like GIT and SVN Involved in capturing the requirements for serial functional interface and other software requirements specification document Environment Python 27 Django 14 CSS HTML Angularjs JavaScript jQuery AJAX MYSQL Linux GIT urllib urllib2 Education Bachelors",
    "entities": [
        "AJAX",
        "GUI",
        "XMLJSON",
        "UNIX",
        "the User Interface",
        "Developed Spark",
        "Work Experience Sr Python Developer",
        "Interfacing",
        "Working",
        "Oracle Using SQLAlchemy",
        "Integrity Developed",
        "LAMP Linux",
        "Data Migrator IBI Experienced",
        "Panda",
        "Spark Actions",
        "Design Development and Deployment Testing and Implementation",
        "XML",
        "SOAP",
        "Atlanta",
        "Maintained",
        "Bash Successfully",
        "Shell",
        "TX",
        "Amazon",
        "Jenkins Environment Python",
        "SSIS",
        "HTML Created Business Logic",
        "Python C",
        "Python",
        "CF Objects Authorized",
        "Amazon AWS S3",
        "Developed",
        "Oracle SQL Microsoft",
        "Bash",
        "Present Responsibilities Responsible",
        "Dallas",
        "Constraints Indexes Views Stored Procedures Cursors Triggers",
        "Shell Scripting AWS",
        "Python Unit",
        "ELT Tools",
        "Django Websites Created",
        "AJAX Managed",
        "PythonPHP",
        "Continuous Deployment tools Jenkins for Continuous Integration Ansible",
        "User Defined Function Developed",
        "AGILE",
        "Hibernate XML",
        "AWS S3 Experienced",
        "Flask",
        "SQL Queries",
        "HTML CSS JavaScript XML",
        "PHP Experienced",
        "RDS",
        "Spark Implemented",
        "Views",
        "PyQt",
        "MVC",
        "PythonPHP Architecture",
        "GIT",
        "SQL Server Integration Services",
        "HTML CSS",
        "Object Oriented Design",
        "US",
        "HTML CSS JavaScript",
        "Created",
        "GitHub Bitbucket",
        "WAMP Windows Apache",
        "Sub Queries Stored Procedures Triggers Cursors and Functions",
        "Developed ColdFusion Components",
        "SQL",
        "jQuery Managed",
        "Design",
        "GitHub",
        "Account Management",
        "Administrators",
        "WebApplication Developer",
        "Python Django Flask",
        "SQL Python",
        "Anaconda",
        "OOPS Multithreading Garbage Collections and Collection etc Expertise",
        "Hive",
        "ETL Exposure",
        "Using Django",
        "SQLite",
        "ETL",
        "CRUD",
        "AMI EBS Cloudwatch AWS Config Autoscaling IAM",
        "Performed",
        "Created UI",
        "Django Flask",
        "Spark SQL",
        "Devops Release engineering Configuration Management Cloud Infrastructure and Automation with Jenkins Chef Puppet",
        "UI",
        "Experienced",
        "SVN Involved",
        "Transformation and Actions",
        "jQuery",
        "SOAP Web Services Implemented",
        "REST",
        "the Complete Software Development Life Cycle",
        "Amazon Cloud Created Data",
        "Model",
        "PHP",
        "PyTest",
        "Troubleshoot"
    ],
    "experience": "Experience in developing a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Experience in python Django Redis Zope Redux Pyramid Framework Experience in Configured continuous integration with Jenkins on Amazon EC2 Experience in developing and implementing REST and SOAP Web Services Strong experience setting up and working with CRUD operations inside Oracle SQL Microsoft SQL PostgreSQL mySQL and MongoDB Experience in developing JavaJ2ee applications using Hibernate XML Android XSLT and Basic ASPnet applications including using Core Java concepts like OOPS Multithreading Garbage Collections and Collection etc Expertise in Devops Release engineering Configuration Management Cloud Infrastructure and Automation with Jenkins Chef Puppet Extensively worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Exposure to CICD Continuous Integration and Continuous Deployment tools Jenkins for Continuous Integration Ansible for continuous deployment Experience on ETL and ELT Tools like SQL Server Integration Services SSIS also have knowledge in Data Migrator IBI Experienced with full software development lifecycle architecting scalable platforms Object Oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Flask Experience in using objectrelational mapper ORM library to automate the transfer of data stored in relational databases tables into objects Experienced in Python modules such as numpy matplotlib etc for generating complex graphical data creation of histograms etc Expert knowledge of and experience in Object Oriented Design and Programming concepts Experience Object Oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience in creatingmaintaining automation framework and making necessary improvements as needed Experience in writing scripts for data modelling Managed large datasets using Panda data frames and MySQL Experience in AWS Cloud platform and its features which includes EC2 AMI EBS Cloudwatch AWS Config Autoscaling IAM user management and AWS S3 Experienced in developing webbased applications using Python Django PHP XML CSS HTML Javascript and JQuery Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Experienced in installing configuring modifying testing and deploying applications with Apache Developed data format file that is required by the Model to perform analytics using Spark SQL and Hive query language Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Analyzed the sql scripts and designed it by using Spark SQL for faster performance Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Very strong full life cycle application development experience Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautifulsoup for web scraping Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Authorized to work in the US for any employer Work Experience Sr Python Developer Atlanta GA August 2018 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Designedwrote the tech specs SourceTarget mappings for the ETL mappings along with the Unit Test scripts Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Sr Python Developer Berkshire Hathaway Dallas TX November 2016 to July 2018 Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Statsmodels Gensim Jupyter Notebook and Anaconda Used jQuery for all clientside data manipulation Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application We have implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer Well Care Ca Reston VA March 2011 to October 2015 Responsibilities Develop the existing application to enhance the features using Django Framework and improve the performance using SOAP Web Services Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML Bootstrap and REST API calls using the JSON Used GitHub for version control Integrating the application with Django REST framework for building the APIs Worked with on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Selecting features building and optimizing classifiers using machine learning techniques Data mining using stateoftheart methods Extending companys data with third party sources of information when needed Enhancing data collection procedures to include information that is relevant for building analytic systems Processing cleansing and verifying the integrity of data used for analysis Doing adhoc analysis and presenting results in a clear manner Creating automated anomaly detection systems and constant tracking of its performance Extensively used XLSX reader and writer modules to read write and analyze data and project the results as per the client request Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Creating Restful web services for Catalog and Pricing with Django MVT MySQL and Oracle Using SQLAlchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to Postgresql with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Continuous improvement in integration workflow project testing and implementation of continuous integration pipeline with Jenkins Environment Python 27 Django 110 MySQL Python Scripting MongoDB AJAX SOAP REST jQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Python Developer Open Systems Technologies New York NY June 2008 to February 2011 Responsibilities Responsible for using the best technologies to add features to the existing system and services Involved in all aspects of the development process from product inception to scaling in production Responsible for driving software development best practices for the team and also mentoring and developing junior engineers Working in collaboration with project managers and higher management in crossfunctional teams within Sales and Account Management to understand business requirements and develop efficient elegant approaches to their implementation Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Used Django configuration to manage URLs and application parameters Responsible for configuring NoSQL databases like Apache Cassandra and Mongodb to for increasing compatibility with Django Designed and created backend data access modules using PLSQL stored procedures Good experience in writing SQL Queries and implementing stored procedures functions packages tables views cursors triggers Responsible for debugging the project monitored on JIRA Performed troubleshooting fixed and deployed many bug fixes for applications that were a main source of data for both customers and internal customer service team Handled potential points of failure through error handling and communication of failure Risk analysis for potential points of failure database communication points and file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Developed and executed User Acceptance Testing portion of test plan Generated Django forms to record data of online users and used PyTest for writing test cases Extensive use of version controlling systems like GIT and SVN Involved in capturing the requirements for serial functional interface and other software requirements specification document Environment Python 27 Django 14 CSS HTML Angularjs JavaScript jQuery AJAX MYSQL Linux GIT urllib urllib2 Education Bachelors",
    "extracted_keywords": [
        "Sr",
        "Python",
        "Developer",
        "Srspan",
        "lPythonspan",
        "span",
        "lDeveloperspan",
        "Sr",
        "Python",
        "Developer",
        "Tampa",
        "FL",
        "years",
        "experience",
        "WebApplication",
        "Developer",
        "programming",
        "Python",
        "Django",
        "Flask",
        "Experience",
        "integration",
        "system",
        "Git",
        "Gerrit",
        "Jenkins",
        "MySQL",
        "custom",
        "tools",
        "Python",
        "Bash",
        "Experience",
        "python",
        "Django",
        "Redis",
        "Zope",
        "Redux",
        "Pyramid",
        "Framework",
        "Experience",
        "Configured",
        "integration",
        "Jenkins",
        "Amazon",
        "EC2",
        "Experience",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "Strong",
        "experience",
        "CRUD",
        "operations",
        "Oracle",
        "SQL",
        "Microsoft",
        "SQL",
        "PostgreSQL",
        "mySQL",
        "Experience",
        "applications",
        "Hibernate",
        "XML",
        "Android",
        "XSLT",
        "Basic",
        "ASPnet",
        "applications",
        "Core",
        "Java",
        "concepts",
        "Multithreading",
        "Garbage",
        "Collections",
        "Collection",
        "Expertise",
        "Devops",
        "Release",
        "engineering",
        "Configuration",
        "Management",
        "Cloud",
        "Infrastructure",
        "Automation",
        "Jenkins",
        "Chef",
        "Puppet",
        "UNIX",
        "shell",
        "scripts",
        "sessions",
        "testing",
        "process",
        "ETL",
        "Exposure",
        "CICD",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "tools",
        "Jenkins",
        "Continuous",
        "Integration",
        "Ansible",
        "deployment",
        "Experience",
        "ETL",
        "ELT",
        "Tools",
        "SQL",
        "Server",
        "Integration",
        "Services",
        "SSIS",
        "knowledge",
        "Data",
        "Migrator",
        "IBI",
        "software",
        "development",
        "lifecycle",
        "platforms",
        "programming",
        "database",
        "design",
        "methodologies",
        "MVC",
        "frameworks",
        "Django",
        "Flask",
        "Experience",
        "mapper",
        "ORM",
        "library",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Python",
        "modules",
        "numpy",
        "matplotlib",
        "data",
        "creation",
        "histograms",
        "knowledge",
        "Object",
        "Oriented",
        "Design",
        "Programming",
        "concepts",
        "Experience",
        "Object",
        "programming",
        "OOP",
        "concepts",
        "Python",
        "C",
        "PHP",
        "WAMP",
        "Windows",
        "Apache",
        "MYSQL",
        "PythonPHP",
        "LAMP",
        "Linux",
        "Apache",
        "MySQL",
        "PythonPHP",
        "Architecture",
        "Experience",
        "automation",
        "framework",
        "improvements",
        "Experience",
        "scripts",
        "data",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "Experience",
        "AWS",
        "Cloud",
        "platform",
        "features",
        "EC2",
        "AMI",
        "EBS",
        "Cloudwatch",
        "AWS",
        "Config",
        "Autoscaling",
        "IAM",
        "user",
        "management",
        "AWS",
        "S3",
        "applications",
        "Python",
        "Django",
        "PHP",
        "XML",
        "CSS",
        "HTML",
        "Javascript",
        "JQuery",
        "Wrote",
        "MYSQL",
        "database",
        "python",
        "PythonMySQL",
        "connector",
        "MySQL",
        "package",
        "testing",
        "applications",
        "Apache",
        "data",
        "format",
        "file",
        "Model",
        "analytics",
        "Spark",
        "SQL",
        "Hive",
        "query",
        "language",
        "design",
        "development",
        "presentation",
        "layer",
        "web",
        "applications",
        "technologies",
        "HTML",
        "CSS",
        "JavaScript",
        "PERL",
        "script",
        "data",
        "text",
        "files",
        "web",
        "automation",
        "file",
        "formats",
        "scripts",
        "Spark",
        "SQL",
        "performance",
        "Experience",
        "Sub",
        "Queries",
        "Stored",
        "Procedures",
        "Triggers",
        "Cursors",
        "Functions",
        "SQL",
        "PostgreSQL",
        "database",
        "methodologies",
        "quality",
        "deliverables",
        "documentation",
        "solutions",
        "IT",
        "infrastructure",
        "sales",
        "systems",
        "life",
        "cycle",
        "application",
        "development",
        "experience",
        "Experience",
        "integration",
        "automation",
        "Jenkins",
        "Experience",
        "Unit",
        "testing",
        "Test",
        "Development",
        "TDD",
        "Load",
        "Testing",
        "Python",
        "library",
        "Beautifulsoup",
        "web",
        "XML",
        "Schema",
        "documents",
        "framework",
        "XML",
        "documents",
        "Unit",
        "testing",
        "Integration",
        "testing",
        "Developed",
        "ColdFusion",
        "Components",
        "custom",
        "tags",
        "CF",
        "Objects",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Python",
        "Developer",
        "Atlanta",
        "GA",
        "August",
        "Present",
        "Responsibilities",
        "requirements",
        "system",
        "analysis",
        "design",
        "development",
        "testing",
        "deployment",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Python",
        "REST",
        "API",
        "framework",
        "Django",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Developed",
        "web",
        "applications",
        "Django",
        "Framework",
        "model",
        "view",
        "control",
        "MVC",
        "architecture",
        "Python",
        "data",
        "files",
        "Django",
        "Websites",
        "scripts",
        "data",
        "modelling",
        "data",
        "import",
        "export",
        "JQuery",
        "Ajax",
        "calls",
        "JSON",
        "data",
        "objects",
        "frontend",
        "controllers",
        "database",
        "Model",
        "APIs",
        "Views",
        "Python",
        "order",
        "web",
        "solution",
        "knowledge",
        "end",
        "tools",
        "HTML",
        "CSS",
        "JavaScript",
        "XML",
        "JQuery",
        "Angularjs",
        "AJAX",
        "datasets",
        "Panda",
        "data",
        "frames",
        "MySQL",
        "mapper",
        "ORM",
        "transfer",
        "data",
        "databases",
        "tables",
        "objects",
        "Designedwrote",
        "tech",
        "specs",
        "SourceTarget",
        "mappings",
        "ETL",
        "mappings",
        "Unit",
        "Test",
        "scripts",
        "Python",
        "GUI",
        "components",
        "frontend",
        "functionality",
        "selection",
        "criteria",
        "test",
        "harness",
        "testing",
        "Python",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "efficiency",
        "storage",
        "access",
        "support",
        "Amazon",
        "AWS",
        "S3",
        "RDS",
        "files",
        "database",
        "Amazon",
        "Cloud",
        "Created",
        "Data",
        "tables",
        "PyQt",
        "customer",
        "policy",
        "information",
        "update",
        "customer",
        "records",
        "PyQuery",
        "DOM",
        "elements",
        "HTML",
        "Created",
        "Business",
        "Logic",
        "Python",
        "Planning",
        "Tracking",
        "functions",
        "UI",
        "Screens",
        "initiation",
        "validation",
        "UI",
        "HTML5",
        "CSS3",
        "Java",
        "Scripts",
        "Developed",
        "app",
        "Python",
        "PHP",
        "performance",
        "Performed",
        "data",
        "extraction",
        "manipulation",
        "datasets",
        "SQL",
        "Python",
        "tools",
        "Python",
        "libraries",
        "SQL",
        "queriessubqueries",
        "datasets",
        "statistics",
        "tables",
        "figures",
        "charts",
        "tools",
        "Python",
        "Shell",
        "XML",
        "tasks",
        "team",
        "Architects",
        "Developers",
        "Python",
        "Flask",
        "Peewee",
        "Linux",
        "AWS",
        "Version",
        "control",
        "GITHub",
        "procedures",
        "MySQL",
        "supervisors",
        "artists",
        "systems",
        "administrators",
        "production",
        "production",
        "deadlines",
        "Environment",
        "Python",
        "Django",
        "language",
        "Shell",
        "Scripting",
        "Pandas",
        "PyQt",
        "PyQuery",
        "Flash",
        "DOM",
        "JSON",
        "PHP",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Bootstrap",
        "Apache",
        "Web",
        "Server",
        "MYSQL",
        "GitHub",
        "LINUX",
        "Sr",
        "Python",
        "Developer",
        "Berkshire",
        "Hathaway",
        "Dallas",
        "TX",
        "November",
        "July",
        "Responsibilities",
        "User",
        "Interface",
        "website",
        "HTML",
        "AJAX",
        "CSS",
        "JavaScript",
        "JSON",
        "database",
        "SQLite",
        "PostgreSQL",
        "data",
        "Integrity",
        "merge",
        "jobs",
        "Python",
        "data",
        "MySQL",
        "database",
        "Django",
        "Database",
        "APIs",
        "database",
        "Wrote",
        "python",
        "scripts",
        "XML",
        "documents",
        "data",
        "database",
        "validation",
        "JavaScript",
        "Expertise",
        "Constraints",
        "Indexes",
        "Views",
        "Stored",
        "Procedures",
        "Cursors",
        "Triggers",
        "User",
        "Defined",
        "Function",
        "views",
        "templates",
        "Python",
        "Django",
        "controller",
        "templating",
        "language",
        "website",
        "interface",
        "Embedded",
        "AJAX",
        "UI",
        "portions",
        "web",
        "page",
        "need",
        "page",
        "data",
        "analysis",
        "tools",
        "PythonSQL",
        "Pandas",
        "NumPy",
        "Matplotlib",
        "Statsmodels",
        "Gensim",
        "Jupyter",
        "Notebook",
        "Anaconda",
        "jQuery",
        "data",
        "manipulation",
        "data",
        "queries",
        "lists",
        "references",
        "databases",
        "analysis",
        "Perl",
        "web",
        "automation",
        "web",
        "chat",
        "box",
        "customers",
        "Test",
        "approach",
        "application",
        "unit",
        "tests",
        "Python",
        "Unit",
        "test",
        "framework",
        "frontend",
        "modules",
        "Python",
        "Django",
        "Web",
        "Framework",
        "Maintenance",
        "development",
        "applications",
        "PLSQL",
        "procedures",
        "ETL",
        "modules",
        "shell",
        "scripting",
        "practices",
        "Automation",
        "framework",
        "database",
        "testing",
        "AutoEasy",
        "Responsible",
        "web",
        "application",
        "pyspark",
        "Transformation",
        "Actions",
        "Spark",
        "Spark",
        "Actions",
        "Transformations",
        "RDDs",
        "HDFS",
        "Spark",
        "scripts",
        "Scala",
        "IDEs",
        "business",
        "requirement",
        "development",
        "Web",
        "Services",
        "SOAP",
        "data",
        "interface",
        "XML",
        "format",
        "task",
        "data",
        "feed",
        "framework",
        "invoke",
        "database",
        "message",
        "service",
        "setup",
        "functionality",
        "data",
        "party",
        "spending",
        "data",
        "deliverables",
        "formats",
        "Excel",
        "macros",
        "python",
        "libraries",
        "data",
        "warehousing",
        "application",
        "jobs",
        "SLAs",
        "application",
        "operations",
        "Business",
        "requirements",
        "Complete",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "SDLC",
        "application",
        "AGILE",
        "development",
        "methodology",
        "application",
        "Environment",
        "Python",
        "PyQt",
        "PyQuery",
        "Agile",
        "SDLC",
        "MVC",
        "HTML5",
        "CSS3",
        "DOM",
        "Angularjs",
        "Shell",
        "Scripting",
        "JSON",
        "Rest",
        "Apache",
        "Web",
        "Server",
        "Django",
        "SQL",
        "Windows",
        "PostgreSQL",
        "Numpy",
        "SQLAlchemy",
        "Python",
        "Developer",
        "Care",
        "Reston",
        "VA",
        "March",
        "October",
        "Responsibilities",
        "application",
        "features",
        "Django",
        "Framework",
        "performance",
        "SOAP",
        "Web",
        "Services",
        "user",
        "interface",
        "guidelines",
        "standards",
        "development",
        "maintenance",
        "website",
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "Managed",
        "dashboard",
        "control",
        "panel",
        "customers",
        "Administrators",
        "Django",
        "HTML",
        "Bootstrap",
        "REST",
        "API",
        "JSON",
        "GitHub",
        "version",
        "control",
        "application",
        "Django",
        "REST",
        "framework",
        "APIs",
        "framework",
        "Datasets",
        "Data",
        "tables",
        "JSON",
        "strings",
        "features",
        "building",
        "classifiers",
        "machine",
        "learning",
        "techniques",
        "Data",
        "mining",
        "methods",
        "companys",
        "data",
        "party",
        "sources",
        "information",
        "data",
        "collection",
        "procedures",
        "information",
        "systems",
        "Processing",
        "cleansing",
        "integrity",
        "data",
        "analysis",
        "adhoc",
        "analysis",
        "results",
        "manner",
        "anomaly",
        "detection",
        "systems",
        "tracking",
        "performance",
        "XLSX",
        "reader",
        "writer",
        "modules",
        "data",
        "results",
        "client",
        "request",
        "Django",
        "evolution",
        "SQL",
        "modifications",
        "Django",
        "models",
        "data",
        "site",
        "production",
        "mode",
        "standards",
        "code",
        "performance",
        "applications",
        "use",
        "design",
        "patterns",
        "Front",
        "Controller",
        "DAO",
        "Restful",
        "web",
        "services",
        "Catalog",
        "Pricing",
        "Django",
        "MVT",
        "MySQL",
        "Oracle",
        "SQLAlchemy",
        "Flask",
        "PostgreSQL",
        "database",
        "web",
        "application",
        "REST",
        "API",
        "testing",
        "web",
        "service",
        "serverside",
        "changes",
        "scripts",
        "build",
        "deployment",
        "maintain",
        "task",
        "Jenkins",
        "Maven",
        "Python",
        "Bash",
        "Successfully",
        "Django",
        "database",
        "SQLite",
        "MySQL",
        "Postgresql",
        "data",
        "integrity",
        "Managed",
        "code",
        "GitHub",
        "Bitbucket",
        "deployment",
        "staging",
        "production",
        "servers",
        "part",
        "lifecycle",
        "projects",
        "Design",
        "Development",
        "Deployment",
        "Testing",
        "Implementation",
        "improvement",
        "integration",
        "workflow",
        "project",
        "testing",
        "implementation",
        "integration",
        "pipeline",
        "Jenkins",
        "Environment",
        "Python",
        "Django",
        "MySQL",
        "Python",
        "Scripting",
        "MongoDB",
        "AJAX",
        "SOAP",
        "REST",
        "jQuery",
        "JavaScript",
        "Bootstrap",
        "PyCharm",
        "EC2",
        "S3",
        "RDS",
        "Python",
        "Developer",
        "Open",
        "Systems",
        "Technologies",
        "New",
        "York",
        "NY",
        "June",
        "February",
        "Responsibilities",
        "technologies",
        "features",
        "system",
        "services",
        "aspects",
        "development",
        "process",
        "product",
        "inception",
        "production",
        "software",
        "development",
        "practices",
        "team",
        "engineers",
        "collaboration",
        "project",
        "managers",
        "management",
        "teams",
        "Sales",
        "Account",
        "Management",
        "business",
        "requirements",
        "approaches",
        "implementation",
        "REST",
        "APIs",
        "part",
        "applications",
        "insurance",
        "premium",
        "calculations",
        "Django",
        "REST",
        "framework",
        "Pythons",
        "graphics",
        "APIs",
        "graphics",
        "serialization",
        "libraries",
        "data",
        "XMLJSON",
        "formats",
        "REST",
        "APIs",
        "Django",
        "framework",
        "data",
        "exchange",
        "business",
        "logic",
        "implementation",
        "Experience",
        "collections",
        "Python",
        "user",
        "objects",
        "Design",
        "custom",
        "Bash",
        "scripts",
        "data",
        "flow",
        "PostgreSQL",
        "database",
        "development",
        "team",
        "data",
        "query",
        "strings",
        "PostgreSQL",
        "backend",
        "data",
        "Django",
        "configuration",
        "URLs",
        "application",
        "parameters",
        "NoSQL",
        "databases",
        "Apache",
        "Cassandra",
        "Mongodb",
        "compatibility",
        "Django",
        "data",
        "access",
        "modules",
        "procedures",
        "experience",
        "SQL",
        "Queries",
        "procedures",
        "functions",
        "packages",
        "views",
        "cursors",
        "project",
        "JIRA",
        "Performed",
        "troubleshooting",
        "bug",
        "fixes",
        "applications",
        "source",
        "data",
        "customers",
        "customer",
        "service",
        "team",
        "points",
        "failure",
        "error",
        "handling",
        "communication",
        "failure",
        "Risk",
        "analysis",
        "points",
        "failure",
        "database",
        "communication",
        "points",
        "file",
        "system",
        "errors",
        "process",
        "execution",
        "team",
        "members",
        "part",
        "team",
        "managers",
        "staff",
        "goals",
        "project",
        "time",
        "User",
        "Acceptance",
        "Testing",
        "portion",
        "test",
        "plan",
        "Django",
        "data",
        "users",
        "PyTest",
        "test",
        "cases",
        "use",
        "version",
        "systems",
        "GIT",
        "SVN",
        "requirements",
        "interface",
        "software",
        "requirements",
        "specification",
        "document",
        "Environment",
        "Python",
        "Django",
        "CSS",
        "HTML",
        "Angularjs",
        "JavaScript",
        "jQuery",
        "AJAX",
        "MYSQL",
        "Linux",
        "GIT",
        "urllib2",
        "Education",
        "Bachelors"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T19:51:29.348947",
    "resume_data": "Sr Python Developer Srspan lPythonspan span lDeveloperspan Sr Python Developer Tampa FL Around 10 years of experience as a WebApplication Developer and coding with analytical programming using Python Django Flask Experience in developing a fully automated continuous integration system using Git Gerrit Jenkins MySQL and custom tools developed in Python and Bash Experience in python Django Redis Zope Redux Pyramid Framework Experience in Configured continuous integration with Jenkins on Amazon EC2 Experience in developing and implementing REST and SOAP Web Services Strong experience setting up and working with CRUD operations inside Oracle SQL Microsoft SQL PostgreSQL mySQL and MongoDB Experience in developing JavaJ2ee applications using Hibernate XML Android XSLT and Basic ASPnet applications including using Core Java concepts like OOPS Multithreading Garbage Collections and Collection etc Expertise in Devops Release engineering Configuration Management Cloud Infrastructure and Automation with Jenkins Chef Puppet Extensively worked on writing UNIX shell scripts for scheduling the sessions for my testing process of ETL Exposure to CICD Continuous Integration and Continuous Deployment tools Jenkins for Continuous Integration Ansible for continuous deployment Experience on ETL and ELT Tools like SQL Server Integration Services SSIS also have knowledge in Data Migrator IBI Experienced with full software development lifecycle architecting scalable platforms Object Oriented programming database design and agile methodologies Experienced in MVC frameworks like Django Flask Experience in using objectrelational mapper ORM library to automate the transfer of data stored in relational databases tables into objects Experienced in Python modules such as numpy matplotlib etc for generating complex graphical data creation of histograms etc Expert knowledge of and experience in Object Oriented Design and Programming concepts Experience Object Oriented programming OOP concepts using Python C and PHP Experienced in WAMP Windows Apache MYSQL PythonPHP and LAMP Linux Apache MySQL PythonPHP Architecture Experience in creatingmaintaining automation framework and making necessary improvements as needed Experience in writing scripts for data modelling Managed large datasets using Panda data frames and MySQL Experience in AWS Cloud platform and its features which includes EC2 AMI EBS Cloudwatch AWS Config Autoscaling IAM user management and AWS S3 Experienced in developing webbased applications using Python Django PHP XML CSS HTML Javascript and JQuery Wrote and executed various MYSQL database queries from python using PythonMySQL connector and MySQL dB package Experienced in installing configuring modifying testing and deploying applications with Apache Developed data format file that is required by the Model to perform analytics using Spark SQL and Hive query language Well versed with design and development of presentation layer for web applications using technologies like HTML CSS and JavaScript Experienced in writing PERL script to extract data from text files web automation and converting the file formats Analyzed the sql scripts and designed it by using Spark SQL for faster performance Experience in writing Sub Queries Stored Procedures Triggers Cursors and Functions on SQL and PostgreSQL database Worked in agile and waterfall methodologies with high quality deliverables delivered ontime Maintained detailed documentation and architectural solutions in IT infrastructure and sales systems Very strong full life cycle application development experience Experience with continuous integration and automation using Jenkins Experience with Unit testing Test driven Development TDD Load Testing Used Python library Beautifulsoup for web scraping Developed the required XML Schema documents and implemented the framework for parsing XML documents Involved in Unit testing and Integration testing Developed ColdFusion Components custom tags and modified CF Objects Authorized to work in the US for any employer Work Experience Sr Python Developer Atlanta GA August 2018 to Present Responsibilities Responsible for gathering requirements system analysis design development testing and deployment Developed tools using Python Shell scripting XML to automate some of the menial tasks Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Responsible for setting up Python REST API framework using Django Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Developed web applications in Django Framework model view control MVC architecture Used Python to write data into JSON files for testing Django Websites Created scripts for data modelling and data import and export Used JQuery and Ajax calls for transmitting JSON data objects between frontend and controllers Involved in building database Model APIs and Views utilizing Python in order to build an interactive web based solution Thorough knowledge in various front end tools like HTML CSS JavaScript XML JQuery Angularjs and AJAX Managed large datasets using Panda data frames and MySQL Used objectrelational mapper ORM to automate the transfer of data stored in relational databases tables into objects Designedwrote the tech specs SourceTarget mappings for the ETL mappings along with the Unit Test scripts Used Python based GUI components for the frontend functionality such as selection criteria Created test harness to enable comprehensive testing utilizing Python Used Amazon Web Services AWS for improved efficiency of storage and fast access Added support for Amazon AWS S3 and RDS to host staticmedia files and the database into Amazon Cloud Created Data tables utilizing PyQt to display customer and policy information and add delete update customer records Used PyQuery for selecting DOM elements when parsing HTML Created Business Logic using Python to create Planning and Tracking functions Created UI Screens for initiation and validation Worked on UI using HTML5 CSS3 and Java Scripts Developed multithreaded standalone app in Python and PHP to view performance Performed data extraction and manipulation over large relational datasets using SQL Python and other analytical tools Used Python libraries and SQL queriessubqueries to create several datasets which produced statistics tables figures charts and graphs Developed tools using Python Shell scripting XML to automate some of the menial tasks Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS Version control using GITHub Involved in writing stored procedures using MySQL Interfacing with supervisors artists systems administrators and production to ensure production deadlines are met Environment Python 3x Django Go language Shell Scripting AWS Pandas PyQt PyQuery Flash DOM JSON PHP HTML5 CSS3 AJAX JavaScript Bootstrap Apache Web Server MYSQL GitHub LINUX Sr Python Developer Berkshire Hathaway Dallas TX November 2016 to July 2018 Responsibilities Designed and developed the User Interface for the website using HTML AJAX CSS JavaScript and JSON Successfully migrated the database from SQLite to MySQL to PostgreSQL with complete data Integrity Developed merge jobs in Python to extract and load data into MySQL database Used Django Database APIs to access database objects Wrote python scripts to parse XML documents and load the data in database Handled all the clientside validation using JavaScript Expertise in writing Constraints Indexes Views Stored Procedures Cursors Triggers and User Defined Function Developed views and templates with Python and Django view controller and templating language to create a userfriendly website interface Embedded AJAX in UI to update small portions of the web page avoiding the need to reload the entire page Implemented data analysis with various analytical tools such as PythonSQL Pandas NumPy Matplotlib Statsmodels Gensim Jupyter Notebook and Anaconda Used jQuery for all clientside data manipulation Worked on data queries to obtain lists of references from online databases for analysis Used Perl in web automation and in developing web chat box for the customers Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework Developed entire frontend and backend modules using Python on Django Web Framework Maintenance and continues development of the applications in PLSQL procedures ETL modules and shell scripting using best practices Implemented of Automation framework database testing using AutoEasy Responsible for debugging and troubleshooting the web application We have implemented pyspark for Transformation and Actions in Spark Implemented various Spark Actions and Transformations by creating RDDs in HDFS Developed Spark scripts by using Scala IDEs as per the business requirement Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format Implemented task object to interface with data feed framework and invoke database message service setup and update functionality Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries Supporting the data warehousing application to make sure the jobs are run as scheduled and the SLAs are met Maintaining the application for daily operations and scaling according to Business requirements Involved in the Complete Software Development Life Cycle SDLC to develop the application Followed AGILE development methodology to develop the application Environment Python 27 PyQt PyQuery Agile SDLC MVC HTML5 CSS3 DOM Angularjs Shell Scripting JSON Rest Apache Web Server Django SQL Windows PostgreSQL Numpy SQLAlchemy Python Developer Well Care Ca Reston VA March 2011 to October 2015 Responsibilities Develop the existing application to enhance the features using Django Framework and improve the performance using SOAP Web Services Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML CSS JavaScript and jQuery Managed developed and designed a dashboard control panel for customers and Administrators using Django HTML Bootstrap and REST API calls using the JSON Used GitHub for version control Integrating the application with Django REST framework for building the APIs Worked with on AJAX framework to transform Datasets and Data tables into HTTPserializable JSON strings Selecting features building and optimizing classifiers using machine learning techniques Data mining using stateoftheart methods Extending companys data with third party sources of information when needed Enhancing data collection procedures to include information that is relevant for building analytic systems Processing cleansing and verifying the integrity of data used for analysis Doing adhoc analysis and presenting results in a clear manner Creating automated anomaly detection systems and constant tracking of its performance Extensively used XLSX reader and writer modules to read write and analyze data and project the results as per the client request Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data while site was in production mode Improved the coding standards code reuse Increased performance of the extended applications by making effective use of various design patterns Front Controller DAO Creating Restful web services for Catalog and Pricing with Django MVT MySQL and Oracle Using SQLAlchemy with Flask and PostgreSQL as database for developing the web application Used REST and SOAP API for testing web service for serverside changes Developing scripts for build deployment maintain and related task using Jenkins Maven Python Bash Successfully migrated the Django database from SQLite to MySQL to Postgresql with complete data integrity Managed code versioning with GitHub Bitbucket and deployment to staging and production servers Taken part in entire lifecycle of the projects including Design Development and Deployment Testing and Implementation and support Continuous improvement in integration workflow project testing and implementation of continuous integration pipeline with Jenkins Environment Python 27 Django 110 MySQL Python Scripting MongoDB AJAX SOAP REST jQuery JavaScript Bootstrap PyCharm AWS EC2 S3 RDS Python Developer Open Systems Technologies New York NY June 2008 to February 2011 Responsibilities Responsible for using the best technologies to add features to the existing system and services Involved in all aspects of the development process from product inception to scaling in production Responsible for driving software development best practices for the team and also mentoring and developing junior engineers Working in collaboration with project managers and higher management in crossfunctional teams within Sales and Account Management to understand business requirements and develop efficient elegant approaches to their implementation Writing REST APIs as part of developing webbased applications for insurance premium calculations using Django REST framework Heavily leveraged Pythons graphics APIs for creating graphics and serialization libraries for encoding data in XMLJSON formats Also involved in writing REST APIs using Django framework for data exchange and business logic implementation Experience in using collections in Python for manipulating and looping through different user defined objects Design and implemented custom Bash scripts for controlling the data flow from the PostgreSQL database Assisted the development team in sending the correct data via query strings using PostgreSQL as the backend for storing data Used Django configuration to manage URLs and application parameters Responsible for configuring NoSQL databases like Apache Cassandra and Mongodb to for increasing compatibility with Django Designed and created backend data access modules using PLSQL stored procedures Good experience in writing SQL Queries and implementing stored procedures functions packages tables views cursors triggers Responsible for debugging the project monitored on JIRA Performed troubleshooting fixed and deployed many bug fixes for applications that were a main source of data for both customers and internal customer service team Handled potential points of failure through error handling and communication of failure Risk analysis for potential points of failure database communication points and file system errors Troubleshoot the process execution and worked with other team members to correct them Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time Developed and executed User Acceptance Testing portion of test plan Generated Django forms to record data of online users and used PyTest for writing test cases Extensive use of version controlling systems like GIT and SVN Involved in capturing the requirements for serial functional interface and other software requirements specification document Environment Python 27 Django 14 CSS HTML Angularjs JavaScript jQuery AJAX MYSQL Linux GIT urllib urllib2 Education Bachelors",
    "unique_id": "2285de08-612a-4fbc-a845-a57fc9032d42"
}