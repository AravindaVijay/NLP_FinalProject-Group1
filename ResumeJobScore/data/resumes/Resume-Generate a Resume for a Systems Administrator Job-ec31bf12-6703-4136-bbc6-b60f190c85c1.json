{
    "clean_data": "Senior Java Full Stack Developer Senior span lJavaspan Full Stack span lDeveloperspan Senior Java Full Stack Developer State Street Corporation Irving TX Over 8 years of extensive experience as a Full Stack JavaJ2EE Developer building webbased enterprise application for various domains Expertise in various methodologies of the Software Development Lifecycle SDLC process including analysis design development implementation integration testing debugging production maintenance High Proficiency with Object Oriented Programming Design Multithreading Exception Handling Data Structures and Algorithms Collections Garbage Collection Method References Functional Interfaces Extensive experience using Java technologies Core Java JDBC Java Message Service JSP Servlets JPA EJB Swing Applets and JSTL Experienced in using J2EE Design Patterns MVC Session Faade Service Locator Data Access Object Data Transfer Object Value Object Business Delegate and Factory Good working experience with Java 8 features like Streams API Default and Static methods in Interfaces Lambda Expressions Optional Class and Parallel Sort in Arrays Expert in developing web applications using MVC design patterns like Spring MVC and Struts 2 MVC Experience with different modules of Spring Framework like Spring Core Container Spring MVC Spring AOP Spring Data JDBC Spring Data MongoDB Spring Data REST ORM Integration Module Spring Security Thymeleaf Spring Boot Spring Cloud Extensive experience in Object Relational Mapping ORM using Hibernate 4x MyBatis and Spring Data JPA frameworks Experience in developing applications as Microservices using Spring Boot based on Service Oriented Architecture SOA Expert in producing and consuming REST and SOAP Web Services with different APIs like JAXWS JAXRS JAXB and implementing using Jersey and Spring REST Experience in integrating the internal security model into new projects with Spring Batch Spring Micro Services and Spring Boot Pivotal Cloud Foundry and Netflix Eureka Expertise in developing GUI using WebDevelopment technologies like HTML DHTML DOJO JavaScript CSS HTML5 Angular JS React Nodejs Bootstrap Spring Boot JSF and jQuery and very good experience in developing Single Page Applications SPA on the client side using Angular 2 Experience in developing cross platform serverside applications using Nodejs BackBonejs and Angular JS to achieve scalability in realtime web applications Implemented loadbalancing with NGINX to allow dozens of Nodejs instances to handle concurrent users Strong experience with the relational databases like Oracle12c11g MySQL5x and nonrelational database MongoDB 3x Proficient in generating reports by integrating JasperReports JFreeCharts Apache POI Apache iText and Dynamic Data Visualization tools like D3js Created unit test cases using Junit 4x and Mockito within Test Driven Development TDD environment for the back end and used Jasmine for testing the front end Experience in creating build scripts using Ant Maven and Gradle tools and scripting Dockerfiles and deploying onto Docker containers Experience in configuring and deploying Web Applications using Web Logic IBM WebSphere JBoss Apache Tomcat and Glassfish Experience in debugging using implementation of Apache Log4j for logging and Jira GitLab Bugzilla for issuetracking Used performance test tools ie Apache JMeter and JProfiler to analyze and resolve performance bottlenecks Very good experience in using Git SVN CVS for version control and ZenHub for Project Management Expertise in developing enterprise applications using Jenkins for Continuous Integration and Continuous Deployment CICD and extensive experience with Splunk Extensive experience in Amazon Web Services AWS like EC2 Simple DB RDS Elastic Load Balancing ELB SQS SNS AWS Identity and access management AWS Cloud Watch Elastic Beanstalk Elastic Cache AWS EMR and Cloud Front Redshift Worked with RabbitMQ Apache Kafka for reliable and asynchronous exchange of important information between the multiple business applications Extensive development experience on different IDEs like Eclipse Visual Studio PyCharm and IntelliJ Proficient in Behavior Driven Development BDD and TestDriven Development TDD approach using SCRUM framework under Agile Methodology Excellent client interaction skills and proven experience in working independently as well in a team Authorized to work in the US for any employer Work Experience Senior Java Full Stack Developer State Street Corporation Boston MA July 2018 to Present Description State Street Corporation is an American financial Services and bank holding company headquartered in Boston with operations worldwide Rewards Program is under retail banking it is an intranet webservice to calculate the rewardspoints for customers on their purchases using their credit cards and generate reports and visualizations on metrics of realtime insights to the Business Intelligence Team Responsibilities Followed Agile methodology for developing application and involved in analysis design development and testing phases of Software Development Life Cycle Used Microservices to build individual components of the application and built the application on Spring 4x Framework Used J2EE Design Patterns as Singleton Facade Proxy Observer for Middle Tier Development as well as Composite View Pattern for presentation tier Implemented Spring MVC flow to interact with different modules of the application Built and consumed RESTful services in modules and implemented serialization using Spring REST and JSON Designed and developed the REST based Microservices using the Spring Boot Spring Data JPA Implemented Microservices based cloud architecture utilizing Spring Boot Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Microservices to base on Restful API utilizing Spring Boot with Spring MVC Implemented Spring Security with Okta Security API to provide security for the application Used Spring AOP to maintain the code clean and logic consistent and used point cuts to call other classes methods according to advice Secured REST APIs by implementing OAuth2 tokenbased authorization scheme using spring security Used frontend technologies HTML5 CSS3 JavaScript for interacting with the user interface and built components for the robust frontend Single Page Application built on Angular 2 Implemented Angular 2 Router to enable navigation from one view to another Used Protractor to perform end to end testing for single page application developed using Angular 2 Involved in developing Thread safe blocks for multithread access and distributed transaction management Used Hibernate 42 framework as the Object Relational Mapping tool for persisting java objects on Oracle 12c Database Architected and developed a new platform to modernize existing codebase using DropWizard Spring Dependency Injection MongoDB and Hazelcast Dynamic Data Visualizations were generated by implementing D3js and Charterers frameworks to render visualizations based on various parameters Created high level functional flow diagrams using Microsoft Visio Utilized Swagger framework for design documentation testing and deployment of REST APIs Created build pipeline using CloudBees for Continuous Integration and Deployment Developed MavenDocker builds scripts and implemented Docker containers to create images and dynamically provisioned slaves to CloudBees of Continuous Integration and Deployment Pipelines Used AWS S3 to store data and to retrieve the stored date very quickly and used Elastic Search for searching the document Used AWS SNS to send messages to multiple users and delivered in an algorithmic way using AWS SQS Used JUnit 40 and Mockito framework for unit testing of application and implemented Test Driven Development TDD methodology Created automated test scripts using Selenium Web Driver Ensured high quality code by using Agile XP Pair Programming approach and by using SonarQube Used JBPM jBoss Business Process Management Engine to define and execute workflows Extensively used Postman for testing REST web services Used SVN for versioning and Log4j implementation is done for logging Jira is used for Project Management and GitLab is used for issue and bugtracking Stack Java 18 Spring 46 Spring Boot Spring REST Spring Data JPA Hibernate 42 Oracle 12c Apache Kafka Spring Security Okta Security API Swagger HTML5 CSS3 jQuery 30 Bootstrap 4 Java Script 20 Angular 2 D3js Hazelcast JFreeCharts Microsoft Visio CloudBees Maven Docker JUnit 40 Mockito SVN Log4j Jira Senior Software Engineer Cerner Corporation Kansas City MO August 2017 to July 2018 Description Cerner Corporation is a leading American Supplier in Health info technology solution EHR supports an enterpriselevel view of clinical information to coordinate patient care and documentation By reengineering the existing project and adding new modules which support both acute inpatient and outpatient settings and helps providers to have access to the right information at the right time within the clinical workflow This module alerts physicians and nurses about patients Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology designed use case diagrams class diagrams and sequence diagrams as a part of design phase Prepared Technical Design documents with UML diagrams using Microsoft Visio Extensively used the coreconcepts of java such as Stream API Exceptionhandling and Collections for business logic development Integrated JAVA EE technology Spring MVC with Hibernate for the persistence layer access for mapping to the tables in the Oracle 12c Database Implemented Microservices architecture for the creation of the independent components utilizing Spring Boot for consuming RESTful services Developed Microservices with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each spring service in a cluster can be load balanced and exposed through one API gateway Created and consumed SOAP web services for secure retrieving and consumption of patient data Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Apache ActiveMQ message brokers Utilized Spring AOP techniques for handling Data Access Exceptions during the transactions Integrated the Hibernate 406 with Spring using the JDBC Driver Manager and integrating Hibernate second level cache for caching the user data Designed and implemented a Single Page Application in Angular 2 and the presentation layer using HTML5 CSS3 JavaScript 20 Used Nodejs for serverside code and Expressjs as the framework Used frontend technologies HTML5 CSS3 JavaScript for interacting with the user interface and designed responsiveness in the web application using Bootstrap 4 Build prototype for various required services such as Scheduling Logging and Notification service using third party Nodejs based JavaScript library Developed the DAO layer for the application using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Implemented Netflix ZUUL API gateway for all the requests from the devices and by registering services to Eureka Used Apache Camel as the integration pattern to communicate between different enterprise components Performed CRUD operations like Update Insert and Delete data in NoSQL database MongoDB Used d3js for the visualization of the patient admission analysis Implemented Jenkins for Continuous Integration and Deployment and deployed the application on EC2 instance using Docker Container Created EC2 instances and used the public domain to link with Jenkins for integration Used Hazelcast for load balancing Netty Apache karaf to deploy OSGI bundles and Wix for development Implemented JMS using Apache ActiveMQ for messaging and queues Experience in Business Process and Decision Management Design using JBoss JBPM and JBoss Drools Rules Engine Utilized log4j for logging debugging and information extracting purposes Worked in a TestDriven Development TDD by conducting regression testing and used JIRA bug tracking tool and Jasper for report generation Participated in the Agile environment according to the Sprint deadlines and meetings Stack JAVA18 JAVA EE Spring 40 Spring Security 32 Spring Boot Spring AOP Spring Eureka Hibernate 406 JSPS Apache Tomcat 80 MongoDB Hazelcast Apache Karaf ZUUL HTML5 CSS3 Bootstrap 4 Angular 20 Expressjs Nodejs REST API Apache ActiveMQ and Amazon Web Services Elastic Beanstalk Full Stack Java Developer HDFC Bank Visakhapatnam Andhra Pradesh March 2015 to July 2017 Description I was involved in developing Business Monitoring Dashboard It represents several metrics with information about the performance of Branches at Branch Region Market National levels The application is used by Managing Directors and Branch Managers with respective viewing permissions As it was an internal application we are our own production support apart from developing the application and implemented Single Sign On SSO Responsibilities Participated in the design analysis development and deployment of the SDLC Software Development Lifecycle Actively involved in mock screens development and project startup phase Defined and constructed layers serverside objects and clientside interfaces based on J2EE design patterns Developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Developed web applications using Spring MVC jQuery HTML5 Bootstrap and worked on Multithreading and Collections framework Added interactivity to the UI pages using JavaScript Struts Tag Libraries and Struts Tiles Framework were used in addition to JSP HTML AJAX and CSS in developing the presentation layer Worked with Core Java technologies Collections Serialization Generics Annotations and Exception Handling to implement BackEnd business logic including Entity and Session Beans Used Spring Dependency Injection Spring Annotations and Spring MVC components to implement business layer and navigation part of application DevelopedMigrated application to Microservices architecture using Spring Boot Developed JSPs to dynamically generate HTML5 and display the data to the client side Java Mail API was used to notify the user of the status and completion of their project Have used AJAX to retrieve data from server synchronously in the background without interfering with the display and existing page in an interactive way Developed multiple POCs to create an interface between Backend to Frontend by using MongoDB Express JS Angular and Nodejs Implemented Angular Controllers to maintain each view data Highly used Angular router to build single page application for navigation through the different status and multiple models Used Hibernate as an ORM tool for handling the Persistence Layer Integrated spring and Hibernate ORM framework for persistence and used Hibernate DAO Support with Hibernate Template to access the data Created database objects like Stored Procedures Tables Views Sequences Cursors and Triggers RESTful web services using Jersey for JAXRS implementation Worked on Rest Web services as well as Node Rest framework for backend services Used various jQuery and Bootstrap plugins and used SOAP UI Pro version for testing Web Services Exposed and consumed SOAP based Web Services to communicate between systems Implementing a Continuous Delivery framework using CHEF Maven in Linux environment Created Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database AWS EC2 and database security groups Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report Deployed Application instance on JBoss and WebLogic Server Conducted debugging testing issues and troubleshooting the initial data errors Stack Java Spring Framework Spring IOC Hibernate Spring REST JAXRS HTML5 CSS3 AJAX JavaScript Angular Express JS Node JS MongoDB SOAP Jersey JBoss WebLogic JBPM Drools Rules Engine GitHub Maven ZenHub AWS Elastic Beanstalk EC2 RDS S3 JavaJ2EE Developer Web pros Solutions Pvt ltd Visakhapatnam Andhra Pradesh October 2012 to February 2015 Visakhapatnam India October 12 February 15 Project MicroFinance Loan Management System Role JavaJ2EE Developer Description Micro Finance Loan Management Application is a Webbased application developed for Micro Finance Enterprises to operate their businesses online rather than using manual system This application automates the Loan processing system of such enterprises and addresses all the problems and requirements of microfinance enterprises like loan trial calculation report generation management information general ledger facility followup closure and dayend processes by helping them to be productive and efficient in their field to gain competitive advantage Responsibilities Worked on Agile Methodology and built the application using Test Driven Development approach Created functional specifications and configuration documents based on user requirements Created Class diagrams Sequence diagrams use case diagrams and activity diagrams based on the functional requirement document Developed the project using the Dynamic Web Module by implementing Struts MVC framework Designed and developed JSP Pages using Struts2 Framework Implemented front end validations through Javax Validation API Involved in Design Development and Implementation of frontend part of the web application using HTML5 CSS3 JavaScript AJAX JSON Angular JS and Bootstrap Designed Automatic Dependency Injection using JSP use bean tags by integrating with struts Redesigned the UI pages by using Angular JS databinding and directives Worked simultaneously in both production and development teams Developed and design the prototype of web page by using the HTML5 CSS3 Bootstrap JavaScript and Angular JS Configured Oracle 10g DB database schema and binding are done using Spring Data JPA Build RESTful services and consumed SOAP APIs to fetch data from external APIs Created charts visualizations using Tableau Worked with UI team and utilized Fusion Charts as the visualization tool for showcasing and pictorializing the loan amounts on a bar graphs Implemented Business Delegate Design Facade Service locator Singleton Factory method Template method Observer Data Access Objects Transfer Objects JEE design patterns Utilized Git Version Control system and GitLab CI for the CICD Deployed the project on AWS EC2 Ubuntu instance and collaborated with the DevOps team Used DROOLS engine as java runtime rule engine to validate business rule before executing in runtime Worked in a Testdriven development and used Bugzilla for tracking issues in project Worked in an Agile environment from daily scrum meetings to reviews sprint retrospective meetings Developed Unit test cases using JUnit Mockito and Easy mock Oversaw all aspects of testing JUnit FIT and SIT End to End Regression User acceptance and Performance Stack Java J2EE Spring Framework Spring Data JPA Struts Javax HTML5 CSS AJAX JavaScript Angular Oracle 10g Apache Tomcat GitHub Maven GitLab CI Tableau AWS Elastic Beanstalk EC2 IAM S3 JavaJ2EE Developer Snapdeal Hyderabad Telangana June 2011 to September 2012 Description An Ecommerce Application to support different service layers like Administration System Order Management Product catalog and other ECommerce functionalities The shopping cart API is called to add new products to the cart when the button is clicked When the customer is ready to checkout the shopping cart page allow users to review the products and track user session Responsibilities Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Developed the application using with JSP Servlets AJAX JavaBeans and XML Designed components for the project using ModelViewController MVC Data Access Object DAO Developed Java Servlet that acts as a controller and maintains the session state and handles user requests in Middle Tier Implemented Business Delegate Session Facade DAO Singleton Factory and DTO Design Patterns Implemented Swing and JAVAFX frames in developing user interfaces Utilized Servlets to handle various requests from the client browser and send responses Used HTTP Servlet to track sessions of the users visiting the web pages Deployed this web application on WebSphere server Involved in batch processing using JDBC Batch to extract data from database and load into corresponding Application Tables Involved in the team with Senior Developers to write JVM memory management code using different Object references and Garbage collector methods Used Log4j and commonslogging frameworks for logging the application flow Used SVN for source code and project documents version control Stack J2EE JSP Servlets JDBC AJAX XML WebSphere Eclipse SDLC Oracle 9x Windows Log4j SVN Education Masters Skills ECLIPSE J2EE JAVA HIBERNATE SPRING JAVABEANS JAX JAXWS JBOSS JMS jQuery JSP SERVLETS STRUTS VISUAL STUDIO AMAZON WEB SERVICES API C DOCKER FRONTEND Javascript Node React Nodejs Angular",
    "entities": [
        "Spring Framework",
        "AJAX",
        "Visakhapatnam Andhra Pradesh",
        "Test Driven Development TDD",
        "GUI",
        "Stored Procedures Tables Views Sequences Cursors",
        "the Object Relational Mapping",
        "Streams API Default",
        "Micro Finance Enterprises",
        "Nodejs",
        "D3js Created",
        "Nodejs BackBonejs and Angular JS",
        "Utilized Servlets",
        "Implemented Spring",
        "Multithreading and Collections",
        "Present Description State Street Corporation",
        "Oracle 12c Database Architected",
        "Administration System Order Management Product",
        "Jasper",
        "Stack Java Spring Framework Spring IOC Hibernate Spring",
        "Jersey",
        "SonarQube Used JBPM jBoss Business Process Management Engine",
        "Visakhapatnam",
        "SIT End",
        "Amazon Web Services AWS",
        "JAXWS JAXRS JAXB",
        "Business Process",
        "Jenkins for Continuous Integration",
        "Agile Methodology",
        "BackEnd",
        "XML",
        "Spring Core Container",
        "Bootstrap 4",
        "Core Java technologies Collections Serialization Generics Annotations",
        "JUnit",
        "DevOps",
        "Kansas City",
        "Hibernate DAO Support",
        "MVC Spring AOP Spring Data",
        "Spring Boot",
        "Bootstrap 4 Build",
        "Agile Methodology Excellent",
        "REST APIs Created",
        "WebSphere",
        "Stack J2EE JSP Servlets",
        "Mockito",
        "Responsibilities Involved",
        "UML",
        "Ant Maven",
        "Struts Tiles Framework",
        "SVN Education Masters Skills",
        "HTML5",
        "Microsoft Visio Utilized Swagger",
        "Hibernate 4x MyBatis",
        "Linux",
        "JSP",
        "JasperReports",
        "Built",
        "JavaScript Struts Tag Libraries",
        "JBoss Drools",
        "JBoss",
        "DTO Design Patterns Implemented Swing",
        "Continuous Deployment CICD",
        "the Business Intelligence Team Responsibilities Followed Agile",
        "ELB Cloud",
        "STRUTS VISUAL STUDIO",
        "DROOLS",
        "GitLab",
        "Angular JS",
        "TestDriven Development",
        "MVC",
        "Automate AWS",
        "Observer Data Access Objects",
        "Agile",
        "Branch Managers",
        "Node JS",
        "Stack Java",
        "Splunk Extensive",
        "WebDevelopment",
        "Nodejs Implemented Angular Controllers",
        "Stream API Exceptionhandling and Collections",
        "Developed Microservices",
        "Software Development Life Cycle Used Microservices",
        "API",
        "US",
        "Object Oriented Programming Design Multithreading Exception Handling Data Structures",
        "NGINX",
        "DropWizard Spring Dependency Injection",
        "WebLogic JBPM Drools",
        "CloudBees",
        "Spring Data",
        "Parallel Sort",
        "Created",
        "Spring Batch Spring Micro Services",
        "Implemented Business Delegate Design Facade Service",
        "Project Management",
        "Description Cerner Corporation",
        "Charterers",
        "CloudBees of Continuous Integration and Deployment Pipelines",
        "Javax Validation API Involved",
        "Utilized Git Version Control",
        "java",
        "Tableau AWS Elastic",
        "Oversaw",
        "Amazon Web Services",
        "Test Driven Development",
        "Bootstrap Designed Automatic Dependency Injection",
        "J2EE",
        "Garbage",
        "GitHub Maven ZenHub AWS",
        "JAXRS",
        "Used Microservices",
        "Testdriven",
        "Rewards Program",
        "Branches at Branch Region Market National",
        "Project Management Expertise",
        "Hibernate Template",
        "Data Access Exceptions",
        "Backend",
        "Update Insert",
        "ZenHub",
        "Algorithms Collections Garbage Collection Method References Functional Interfaces Extensive",
        "Prepared Technical Design",
        "the Software Development Lifecycle",
        "Continuous Integration and Deployment Developed MavenDocker",
        "POI Apache iText and",
        "Spring Hibernate",
        "Entity and Session Beans Used Spring Dependency Injection Spring Annotations",
        "India",
        "Loan",
        "Docker Container Created",
        "Developed Unit",
        "JavaScript",
        "Dynamic Data Visualization",
        "Integrated the Hibernate 406",
        "UI",
        "JSP Servlets",
        "Microsoft",
        "Delete",
        "MVC Data Access Object DAO",
        "WebLogic Server Conducted",
        "SVN",
        "CSS",
        "jQuery",
        "Boston",
        "REST",
        "NoSQL",
        "Utilized Spring AOP",
        "Sprint",
        "the SDLC Software Development Lifecycle Actively",
        "Single Page Application",
        "Application Tables Involved",
        "Deployed Application",
        "Hibernate Criteria Implemented",
        "Created Class",
        "Project MicroFinance Loan Management System Role JavaJ2EE Developer Description Micro Finance Loan Management Application"
    ],
    "experience": "References Functional Interfaces Extensive experience using Java technologies Core Java JDBC Java Message Service JSP Servlets JPA EJB Swing Applets and JSTL Experienced in using J2EE Design Patterns MVC Session Faade Service Locator Data Access Object Data Transfer Object Value Object Business Delegate and Factory Good working experience with Java 8 features like Streams API Default and Static methods in Interfaces Lambda Expressions Optional Class and Parallel Sort in Arrays Expert in developing web applications using MVC design patterns like Spring MVC and Struts 2 MVC Experience with different modules of Spring Framework like Spring Core Container Spring MVC Spring AOP Spring Data JDBC Spring Data MongoDB Spring Data REST ORM Integration Module Spring Security Thymeleaf Spring Boot Spring Cloud Extensive experience in Object Relational Mapping ORM using Hibernate 4x MyBatis and Spring Data JPA frameworks Experience in developing applications as Microservices using Spring Boot based on Service Oriented Architecture SOA Expert in producing and consuming REST and SOAP Web Services with different APIs like JAXWS JAXRS JAXB and implementing using Jersey and Spring REST Experience in integrating the internal security model into new projects with Spring Batch Spring Micro Services and Spring Boot Pivotal Cloud Foundry and Netflix Eureka Expertise in developing GUI using WebDevelopment technologies like HTML DHTML DOJO JavaScript CSS HTML5 Angular JS React Nodejs Bootstrap Spring Boot JSF and jQuery and very good experience in developing Single Page Applications SPA on the client side using Angular 2 Experience in developing cross platform serverside applications using Nodejs BackBonejs and Angular JS to achieve scalability in realtime web applications Implemented loadbalancing with NGINX to allow dozens of Nodejs instances to handle concurrent users Strong experience with the relational databases like Oracle12c11 g MySQL5x and nonrelational database MongoDB 3x Proficient in generating reports by integrating JasperReports JFreeCharts Apache POI Apache iText and Dynamic Data Visualization tools like D3js Created unit test cases using Junit 4x and Mockito within Test Driven Development TDD environment for the back end and used Jasmine for testing the front end Experience in creating build scripts using Ant Maven and Gradle tools and scripting Dockerfiles and deploying onto Docker containers Experience in configuring and deploying Web Applications using Web Logic IBM WebSphere JBoss Apache Tomcat and Glassfish Experience in debugging using implementation of Apache Log4j for logging and Jira GitLab Bugzilla for issuetracking Used performance test tools ie Apache JMeter and JProfiler to analyze and resolve performance bottlenecks Very good experience in using Git SVN CVS for version control and ZenHub for Project Management Expertise in developing enterprise applications using Jenkins for Continuous Integration and Continuous Deployment CICD and extensive experience with Splunk Extensive experience in Amazon Web Services AWS like EC2 Simple DB RDS Elastic Load Balancing ELB SQS SNS AWS Identity and access management AWS Cloud Watch Elastic Beanstalk Elastic Cache AWS EMR and Cloud Front Redshift Worked with RabbitMQ Apache Kafka for reliable and asynchronous exchange of important information between the multiple business applications Extensive development experience on different IDEs like Eclipse Visual Studio PyCharm and IntelliJ Proficient in Behavior Driven Development BDD and TestDriven Development TDD approach using SCRUM framework under Agile Methodology Excellent client interaction skills and proven experience in working independently as well in a team Authorized to work in the US for any employer Work Experience Senior Java Full Stack Developer State Street Corporation Boston MA July 2018 to Present Description State Street Corporation is an American financial Services and bank holding company headquartered in Boston with operations worldwide Rewards Program is under retail banking it is an intranet webservice to calculate the rewardspoints for customers on their purchases using their credit cards and generate reports and visualizations on metrics of realtime insights to the Business Intelligence Team Responsibilities Followed Agile methodology for developing application and involved in analysis design development and testing phases of Software Development Life Cycle Used Microservices to build individual components of the application and built the application on Spring 4x Framework Used J2EE Design Patterns as Singleton Facade Proxy Observer for Middle Tier Development as well as Composite View Pattern for presentation tier Implemented Spring MVC flow to interact with different modules of the application Built and consumed RESTful services in modules and implemented serialization using Spring REST and JSON Designed and developed the REST based Microservices using the Spring Boot Spring Data JPA Implemented Microservices based cloud architecture utilizing Spring Boot Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Microservices to base on Restful API utilizing Spring Boot with Spring MVC Implemented Spring Security with Okta Security API to provide security for the application Used Spring AOP to maintain the code clean and logic consistent and used point cuts to call other classes methods according to advice Secured REST APIs by implementing OAuth2 tokenbased authorization scheme using spring security Used frontend technologies HTML5 CSS3 JavaScript for interacting with the user interface and built components for the robust frontend Single Page Application built on Angular 2 Implemented Angular 2 Router to enable navigation from one view to another Used Protractor to perform end to end testing for single page application developed using Angular 2 Involved in developing Thread safe blocks for multithread access and distributed transaction management Used Hibernate 42 framework as the Object Relational Mapping tool for persisting java objects on Oracle 12c Database Architected and developed a new platform to modernize existing codebase using DropWizard Spring Dependency Injection MongoDB and Hazelcast Dynamic Data Visualizations were generated by implementing D3js and Charterers frameworks to render visualizations based on various parameters Created high level functional flow diagrams using Microsoft Visio Utilized Swagger framework for design documentation testing and deployment of REST APIs Created build pipeline using CloudBees for Continuous Integration and Deployment Developed MavenDocker builds scripts and implemented Docker containers to create images and dynamically provisioned slaves to CloudBees of Continuous Integration and Deployment Pipelines Used AWS S3 to store data and to retrieve the stored date very quickly and used Elastic Search for searching the document Used AWS SNS to send messages to multiple users and delivered in an algorithmic way using AWS SQS Used JUnit 40 and Mockito framework for unit testing of application and implemented Test Driven Development TDD methodology Created automated test scripts using Selenium Web Driver Ensured high quality code by using Agile XP Pair Programming approach and by using SonarQube Used JBPM jBoss Business Process Management Engine to define and execute workflows Extensively used Postman for testing REST web services Used SVN for versioning and Log4j implementation is done for logging Jira is used for Project Management and GitLab is used for issue and bugtracking Stack Java 18 Spring 46 Spring Boot Spring REST Spring Data JPA Hibernate 42 Oracle 12c Apache Kafka Spring Security Okta Security API Swagger HTML5 CSS3 jQuery 30 Bootstrap 4 Java Script 20 Angular 2 D3js Hazelcast JFreeCharts Microsoft Visio CloudBees Maven Docker JUnit 40 Mockito SVN Log4j Jira Senior Software Engineer Cerner Corporation Kansas City MO August 2017 to July 2018 Description Cerner Corporation is a leading American Supplier in Health info technology solution EHR supports an enterpriselevel view of clinical information to coordinate patient care and documentation By reengineering the existing project and adding new modules which support both acute inpatient and outpatient settings and helps providers to have access to the right information at the right time within the clinical workflow This module alerts physicians and nurses about patients Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology designed use case diagrams class diagrams and sequence diagrams as a part of design phase Prepared Technical Design documents with UML diagrams using Microsoft Visio Extensively used the coreconcepts of java such as Stream API Exceptionhandling and Collections for business logic development Integrated JAVA EE technology Spring MVC with Hibernate for the persistence layer access for mapping to the tables in the Oracle 12c Database Implemented Microservices architecture for the creation of the independent components utilizing Spring Boot for consuming RESTful services Developed Microservices with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each spring service in a cluster can be load balanced and exposed through one API gateway Created and consumed SOAP web services for secure retrieving and consumption of patient data Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Apache ActiveMQ message brokers Utilized Spring AOP techniques for handling Data Access Exceptions during the transactions Integrated the Hibernate 406 with Spring using the JDBC Driver Manager and integrating Hibernate second level cache for caching the user data Designed and implemented a Single Page Application in Angular 2 and the presentation layer using HTML5 CSS3 JavaScript 20 Used Nodejs for serverside code and Expressjs as the framework Used frontend technologies HTML5 CSS3 JavaScript for interacting with the user interface and designed responsiveness in the web application using Bootstrap 4 Build prototype for various required services such as Scheduling Logging and Notification service using third party Nodejs based JavaScript library Developed the DAO layer for the application using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Implemented Netflix ZUUL API gateway for all the requests from the devices and by registering services to Eureka Used Apache Camel as the integration pattern to communicate between different enterprise components Performed CRUD operations like Update Insert and Delete data in NoSQL database MongoDB Used d3js for the visualization of the patient admission analysis Implemented Jenkins for Continuous Integration and Deployment and deployed the application on EC2 instance using Docker Container Created EC2 instances and used the public domain to link with Jenkins for integration Used Hazelcast for load balancing Netty Apache karaf to deploy OSGI bundles and Wix for development Implemented JMS using Apache ActiveMQ for messaging and queues Experience in Business Process and Decision Management Design using JBoss JBPM and JBoss Drools Rules Engine Utilized log4j for logging debugging and information extracting purposes Worked in a TestDriven Development TDD by conducting regression testing and used JIRA bug tracking tool and Jasper for report generation Participated in the Agile environment according to the Sprint deadlines and meetings Stack JAVA18 JAVA EE Spring 40 Spring Security 32 Spring Boot Spring AOP Spring Eureka Hibernate 406 JSPS Apache Tomcat 80 MongoDB Hazelcast Apache Karaf ZUUL HTML5 CSS3 Bootstrap 4 Angular 20 Expressjs Nodejs REST API Apache ActiveMQ and Amazon Web Services Elastic Beanstalk Full Stack Java Developer HDFC Bank Visakhapatnam Andhra Pradesh March 2015 to July 2017 Description I was involved in developing Business Monitoring Dashboard It represents several metrics with information about the performance of Branches at Branch Region Market National levels The application is used by Managing Directors and Branch Managers with respective viewing permissions As it was an internal application we are our own production support apart from developing the application and implemented Single Sign On SSO Responsibilities Participated in the design analysis development and deployment of the SDLC Software Development Lifecycle Actively involved in mock screens development and project startup phase Defined and constructed layers serverside objects and clientside interfaces based on J2EE design patterns Developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Developed web applications using Spring MVC jQuery HTML5 Bootstrap and worked on Multithreading and Collections framework Added interactivity to the UI pages using JavaScript Struts Tag Libraries and Struts Tiles Framework were used in addition to JSP HTML AJAX and CSS in developing the presentation layer Worked with Core Java technologies Collections Serialization Generics Annotations and Exception Handling to implement BackEnd business logic including Entity and Session Beans Used Spring Dependency Injection Spring Annotations and Spring MVC components to implement business layer and navigation part of application DevelopedMigrated application to Microservices architecture using Spring Boot Developed JSPs to dynamically generate HTML5 and display the data to the client side Java Mail API was used to notify the user of the status and completion of their project Have used AJAX to retrieve data from server synchronously in the background without interfering with the display and existing page in an interactive way Developed multiple POCs to create an interface between Backend to Frontend by using MongoDB Express JS Angular and Nodejs Implemented Angular Controllers to maintain each view data Highly used Angular router to build single page application for navigation through the different status and multiple models Used Hibernate as an ORM tool for handling the Persistence Layer Integrated spring and Hibernate ORM framework for persistence and used Hibernate DAO Support with Hibernate Template to access the data Created database objects like Stored Procedures Tables Views Sequences Cursors and Triggers RESTful web services using Jersey for JAXRS implementation Worked on Rest Web services as well as Node Rest framework for backend services Used various jQuery and Bootstrap plugins and used SOAP UI Pro version for testing Web Services Exposed and consumed SOAP based Web Services to communicate between systems Implementing a Continuous Delivery framework using CHEF Maven in Linux environment Created Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database AWS EC2 and database security groups Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report Deployed Application instance on JBoss and WebLogic Server Conducted debugging testing issues and troubleshooting the initial data errors Stack Java Spring Framework Spring IOC Hibernate Spring REST JAXRS HTML5 CSS3 AJAX JavaScript Angular Express JS Node JS MongoDB SOAP Jersey JBoss WebLogic JBPM Drools Rules Engine GitHub Maven ZenHub AWS Elastic Beanstalk EC2 RDS S3 JavaJ2EE Developer Web pros Solutions Pvt ltd Visakhapatnam Andhra Pradesh October 2012 to February 2015 Visakhapatnam India October 12 February 15 Project MicroFinance Loan Management System Role JavaJ2EE Developer Description Micro Finance Loan Management Application is a Webbased application developed for Micro Finance Enterprises to operate their businesses online rather than using manual system This application automates the Loan processing system of such enterprises and addresses all the problems and requirements of microfinance enterprises like loan trial calculation report generation management information general ledger facility followup closure and dayend processes by helping them to be productive and efficient in their field to gain competitive advantage Responsibilities Worked on Agile Methodology and built the application using Test Driven Development approach Created functional specifications and configuration documents based on user requirements Created Class diagrams Sequence diagrams use case diagrams and activity diagrams based on the functional requirement document Developed the project using the Dynamic Web Module by implementing Struts MVC framework Designed and developed JSP Pages using Struts2 Framework Implemented front end validations through Javax Validation API Involved in Design Development and Implementation of frontend part of the web application using HTML5 CSS3 JavaScript AJAX JSON Angular JS and Bootstrap Designed Automatic Dependency Injection using JSP use bean tags by integrating with struts Redesigned the UI pages by using Angular JS databinding and directives Worked simultaneously in both production and development teams Developed and design the prototype of web page by using the HTML5 CSS3 Bootstrap JavaScript and Angular JS Configured Oracle 10 g DB database schema and binding are done using Spring Data JPA Build RESTful services and consumed SOAP APIs to fetch data from external APIs Created charts visualizations using Tableau Worked with UI team and utilized Fusion Charts as the visualization tool for showcasing and pictorializing the loan amounts on a bar graphs Implemented Business Delegate Design Facade Service locator Singleton Factory method Template method Observer Data Access Objects Transfer Objects JEE design patterns Utilized Git Version Control system and GitLab CI for the CICD Deployed the project on AWS EC2 Ubuntu instance and collaborated with the DevOps team Used DROOLS engine as java runtime rule engine to validate business rule before executing in runtime Worked in a Testdriven development and used Bugzilla for tracking issues in project Worked in an Agile environment from daily scrum meetings to reviews sprint retrospective meetings Developed Unit test cases using JUnit Mockito and Easy mock Oversaw all aspects of testing JUnit FIT and SIT End to End Regression User acceptance and Performance Stack Java J2EE Spring Framework Spring Data JPA Struts Javax HTML5 CSS AJAX JavaScript Angular Oracle 10 g Apache Tomcat GitHub Maven GitLab CI Tableau AWS Elastic Beanstalk EC2 IAM S3 JavaJ2EE Developer Snapdeal Hyderabad Telangana June 2011 to September 2012 Description An Ecommerce Application to support different service layers like Administration System Order Management Product catalog and other ECommerce functionalities The shopping cart API is called to add new products to the cart when the button is clicked When the customer is ready to checkout the shopping cart page allow users to review the products and track user session Responsibilities Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Developed the application using with JSP Servlets AJAX JavaBeans and XML Designed components for the project using ModelViewController MVC Data Access Object DAO Developed Java Servlet that acts as a controller and maintains the session state and handles user requests in Middle Tier Implemented Business Delegate Session Facade DAO Singleton Factory and DTO Design Patterns Implemented Swing and JAVAFX frames in developing user interfaces Utilized Servlets to handle various requests from the client browser and send responses Used HTTP Servlet to track sessions of the users visiting the web pages Deployed this web application on WebSphere server Involved in batch processing using JDBC Batch to extract data from database and load into corresponding Application Tables Involved in the team with Senior Developers to write JVM memory management code using different Object references and Garbage collector methods Used Log4j and commonslogging frameworks for logging the application flow Used SVN for source code and project documents version control Stack J2EE JSP Servlets JDBC AJAX XML WebSphere Eclipse SDLC Oracle 9x Windows Log4j SVN Education Masters Skills ECLIPSE J2EE JAVA HIBERNATE SPRING JAVABEANS JAX JAXWS JBOSS JMS jQuery JSP SERVLETS STRUTS VISUAL STUDIO AMAZON WEB SERVICES API C DOCKER FRONTEND Javascript Node React Nodejs Angular",
    "extracted_keywords": [
        "Java",
        "Full",
        "Stack",
        "Developer",
        "Senior",
        "span",
        "lJavaspan",
        "Full",
        "Stack",
        "span",
        "lDeveloperspan",
        "Senior",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "State",
        "Street",
        "Corporation",
        "Irving",
        "TX",
        "years",
        "experience",
        "Full",
        "Stack",
        "JavaJ2EE",
        "Developer",
        "building",
        "enterprise",
        "application",
        "domains",
        "Expertise",
        "methodologies",
        "Software",
        "Development",
        "Lifecycle",
        "SDLC",
        "process",
        "analysis",
        "design",
        "development",
        "implementation",
        "integration",
        "testing",
        "production",
        "maintenance",
        "High",
        "Proficiency",
        "Object",
        "Oriented",
        "Programming",
        "Design",
        "Multithreading",
        "Exception",
        "Handling",
        "Data",
        "Structures",
        "Algorithms",
        "Collections",
        "Garbage",
        "Collection",
        "Method",
        "References",
        "Functional",
        "Interfaces",
        "experience",
        "Java",
        "technologies",
        "Core",
        "Java",
        "JDBC",
        "Java",
        "Message",
        "Service",
        "JSP",
        "Servlets",
        "JPA",
        "EJB",
        "Swing",
        "Applets",
        "JSTL",
        "J2EE",
        "Design",
        "Patterns",
        "MVC",
        "Session",
        "Faade",
        "Service",
        "Locator",
        "Data",
        "Access",
        "Object",
        "Data",
        "Transfer",
        "Object",
        "Value",
        "Object",
        "Business",
        "Delegate",
        "Factory",
        "Good",
        "working",
        "experience",
        "Java",
        "features",
        "Streams",
        "API",
        "Default",
        "methods",
        "Interfaces",
        "Lambda",
        "Expressions",
        "Optional",
        "Class",
        "Parallel",
        "Sort",
        "Arrays",
        "Expert",
        "web",
        "applications",
        "MVC",
        "design",
        "patterns",
        "Spring",
        "MVC",
        "Struts",
        "MVC",
        "Experience",
        "modules",
        "Spring",
        "Framework",
        "Spring",
        "Core",
        "Container",
        "Spring",
        "MVC",
        "Spring",
        "AOP",
        "Spring",
        "Data",
        "JDBC",
        "Spring",
        "Data",
        "MongoDB",
        "Spring",
        "Data",
        "REST",
        "ORM",
        "Integration",
        "Module",
        "Spring",
        "Security",
        "Thymeleaf",
        "Spring",
        "Boot",
        "Spring",
        "Cloud",
        "experience",
        "Object",
        "Relational",
        "Mapping",
        "ORM",
        "Hibernate",
        "4x",
        "MyBatis",
        "Spring",
        "Data",
        "JPA",
        "frameworks",
        "Experience",
        "applications",
        "Microservices",
        "Spring",
        "Boot",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Expert",
        "REST",
        "SOAP",
        "Web",
        "Services",
        "APIs",
        "JAXWS",
        "JAXRS",
        "JAXB",
        "Jersey",
        "Spring",
        "REST",
        "Experience",
        "security",
        "model",
        "projects",
        "Spring",
        "Batch",
        "Spring",
        "Micro",
        "Services",
        "Spring",
        "Boot",
        "Cloud",
        "Foundry",
        "Netflix",
        "Eureka",
        "Expertise",
        "GUI",
        "WebDevelopment",
        "technologies",
        "HTML",
        "DHTML",
        "DOJO",
        "JavaScript",
        "CSS",
        "HTML5",
        "Angular",
        "JS",
        "React",
        "Nodejs",
        "Bootstrap",
        "Spring",
        "Boot",
        "JSF",
        "jQuery",
        "experience",
        "Single",
        "Page",
        "Applications",
        "SPA",
        "client",
        "side",
        "Angular",
        "Experience",
        "cross",
        "platform",
        "serverside",
        "applications",
        "Nodejs",
        "BackBonejs",
        "Angular",
        "JS",
        "scalability",
        "web",
        "applications",
        "NGINX",
        "dozens",
        "Nodejs",
        "users",
        "experience",
        "databases",
        "g",
        "MySQL5x",
        "database",
        "MongoDB",
        "Proficient",
        "generating",
        "reports",
        "JasperReports",
        "JFreeCharts",
        "Apache",
        "POI",
        "Apache",
        "iText",
        "Dynamic",
        "Data",
        "Visualization",
        "tools",
        "D3js",
        "Created",
        "unit",
        "test",
        "cases",
        "Junit",
        "4x",
        "Mockito",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "environment",
        "end",
        "Jasmine",
        "end",
        "Experience",
        "build",
        "scripts",
        "Ant",
        "Maven",
        "Gradle",
        "tools",
        "Dockerfiles",
        "Docker",
        "containers",
        "Experience",
        "Web",
        "Applications",
        "Web",
        "Logic",
        "IBM",
        "WebSphere",
        "JBoss",
        "Apache",
        "Tomcat",
        "Glassfish",
        "Experience",
        "implementation",
        "Apache",
        "Log4j",
        "Jira",
        "GitLab",
        "Bugzilla",
        "performance",
        "test",
        "tools",
        "Apache",
        "JMeter",
        "JProfiler",
        "performance",
        "bottlenecks",
        "experience",
        "Git",
        "SVN",
        "CVS",
        "version",
        "control",
        "ZenHub",
        "Project",
        "Management",
        "Expertise",
        "enterprise",
        "applications",
        "Jenkins",
        "Continuous",
        "Integration",
        "Continuous",
        "Deployment",
        "CICD",
        "experience",
        "Splunk",
        "experience",
        "Amazon",
        "Web",
        "Services",
        "AWS",
        "EC2",
        "Simple",
        "DB",
        "RDS",
        "Elastic",
        "Load",
        "Balancing",
        "ELB",
        "SQS",
        "SNS",
        "AWS",
        "Identity",
        "access",
        "management",
        "AWS",
        "Cloud",
        "Watch",
        "Elastic",
        "Beanstalk",
        "Elastic",
        "Cache",
        "AWS",
        "EMR",
        "Cloud",
        "Front",
        "Redshift",
        "RabbitMQ",
        "Apache",
        "Kafka",
        "exchange",
        "information",
        "business",
        "applications",
        "development",
        "experience",
        "IDEs",
        "Eclipse",
        "Visual",
        "Studio",
        "PyCharm",
        "IntelliJ",
        "Proficient",
        "Behavior",
        "Driven",
        "Development",
        "BDD",
        "TestDriven",
        "Development",
        "TDD",
        "approach",
        "SCRUM",
        "framework",
        "Agile",
        "Methodology",
        "Excellent",
        "client",
        "interaction",
        "skills",
        "experience",
        "team",
        "US",
        "employer",
        "Work",
        "Experience",
        "Senior",
        "Java",
        "Full",
        "Stack",
        "Developer",
        "State",
        "Street",
        "Corporation",
        "Boston",
        "MA",
        "July",
        "Present",
        "Description",
        "State",
        "Street",
        "Corporation",
        "Services",
        "bank",
        "company",
        "Boston",
        "operations",
        "Rewards",
        "Program",
        "banking",
        "intranet",
        "webservice",
        "rewardspoints",
        "customers",
        "purchases",
        "credit",
        "cards",
        "reports",
        "visualizations",
        "metrics",
        "insights",
        "Business",
        "Intelligence",
        "Team",
        "Responsibilities",
        "methodology",
        "application",
        "analysis",
        "design",
        "development",
        "phases",
        "Software",
        "Development",
        "Life",
        "Cycle",
        "Microservices",
        "components",
        "application",
        "application",
        "Spring",
        "Framework",
        "J2EE",
        "Design",
        "Patterns",
        "Singleton",
        "Facade",
        "Proxy",
        "Observer",
        "Middle",
        "Tier",
        "Development",
        "View",
        "Pattern",
        "presentation",
        "tier",
        "Implemented",
        "Spring",
        "MVC",
        "flow",
        "modules",
        "application",
        "services",
        "modules",
        "serialization",
        "Spring",
        "REST",
        "JSON",
        "REST",
        "Microservices",
        "Spring",
        "Boot",
        "Spring",
        "Data",
        "JPA",
        "Microservices",
        "cloud",
        "architecture",
        "Spring",
        "Boot",
        "custom",
        "message",
        "adapter",
        "components",
        "Apache",
        "Kafka",
        "message",
        "Microservices",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "Security",
        "Okta",
        "Security",
        "API",
        "security",
        "application",
        "Spring",
        "AOP",
        "code",
        "point",
        "cuts",
        "classes",
        "methods",
        "advice",
        "REST",
        "APIs",
        "authorization",
        "scheme",
        "spring",
        "security",
        "frontend",
        "technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "user",
        "interface",
        "components",
        "frontend",
        "Single",
        "Page",
        "Application",
        "Angular",
        "Angular",
        "Router",
        "navigation",
        "view",
        "Protractor",
        "end",
        "testing",
        "page",
        "application",
        "Angular",
        "Thread",
        "blocks",
        "multithread",
        "access",
        "transaction",
        "management",
        "Hibernate",
        "framework",
        "Object",
        "Relational",
        "Mapping",
        "tool",
        "objects",
        "Oracle",
        "Database",
        "platform",
        "codebase",
        "DropWizard",
        "Spring",
        "Dependency",
        "Injection",
        "MongoDB",
        "Hazelcast",
        "Dynamic",
        "Data",
        "Visualizations",
        "D3js",
        "Charterers",
        "visualizations",
        "parameters",
        "level",
        "flow",
        "diagrams",
        "Microsoft",
        "Visio",
        "Swagger",
        "framework",
        "design",
        "documentation",
        "testing",
        "deployment",
        "REST",
        "APIs",
        "build",
        "pipeline",
        "CloudBees",
        "Continuous",
        "Integration",
        "Deployment",
        "Developed",
        "MavenDocker",
        "scripts",
        "Docker",
        "containers",
        "images",
        "slaves",
        "CloudBees",
        "Continuous",
        "Integration",
        "Deployment",
        "Pipelines",
        "AWS",
        "S3",
        "data",
        "date",
        "Elastic",
        "Search",
        "document",
        "AWS",
        "SNS",
        "messages",
        "users",
        "way",
        "AWS",
        "SQS",
        "JUnit",
        "Mockito",
        "framework",
        "unit",
        "testing",
        "application",
        "Test",
        "Driven",
        "Development",
        "TDD",
        "methodology",
        "test",
        "scripts",
        "Selenium",
        "Web",
        "Driver",
        "quality",
        "code",
        "Agile",
        "XP",
        "Pair",
        "Programming",
        "approach",
        "SonarQube",
        "Used",
        "JBPM",
        "jBoss",
        "Business",
        "Process",
        "Management",
        "Engine",
        "workflows",
        "Postman",
        "REST",
        "web",
        "services",
        "SVN",
        "versioning",
        "Log4j",
        "implementation",
        "Jira",
        "Project",
        "Management",
        "GitLab",
        "issue",
        "Stack",
        "Java",
        "Spring",
        "Spring",
        "Boot",
        "Spring",
        "REST",
        "Spring",
        "Data",
        "JPA",
        "Hibernate",
        "Oracle",
        "12c",
        "Apache",
        "Kafka",
        "Spring",
        "Security",
        "Okta",
        "Security",
        "API",
        "Swagger",
        "HTML5",
        "CSS3",
        "jQuery",
        "Bootstrap",
        "Java",
        "Script",
        "Angular",
        "D3js",
        "Hazelcast",
        "Microsoft",
        "Visio",
        "CloudBees",
        "Maven",
        "Docker",
        "JUnit",
        "Mockito",
        "SVN",
        "Log4j",
        "Jira",
        "Senior",
        "Software",
        "Engineer",
        "Cerner",
        "Corporation",
        "Kansas",
        "City",
        "MO",
        "August",
        "July",
        "Description",
        "Cerner",
        "Corporation",
        "Supplier",
        "Health",
        "info",
        "technology",
        "solution",
        "EHR",
        "enterpriselevel",
        "view",
        "information",
        "care",
        "documentation",
        "project",
        "modules",
        "outpatient",
        "settings",
        "providers",
        "access",
        "information",
        "time",
        "workflow",
        "module",
        "physicians",
        "nurses",
        "patients",
        "Responsibilities",
        "phases",
        "Software",
        "development",
        "life",
        "cycle",
        "SDLC",
        "Agile",
        "Methodology",
        "use",
        "case",
        "diagrams",
        "class",
        "diagrams",
        "sequence",
        "diagrams",
        "part",
        "design",
        "phase",
        "Prepared",
        "Technical",
        "Design",
        "documents",
        "UML",
        "diagrams",
        "Microsoft",
        "Visio",
        "coreconcepts",
        "Stream",
        "API",
        "Exceptionhandling",
        "Collections",
        "business",
        "logic",
        "development",
        "Integrated",
        "JAVA",
        "EE",
        "technology",
        "Spring",
        "MVC",
        "Hibernate",
        "persistence",
        "layer",
        "access",
        "mapping",
        "tables",
        "Oracle",
        "12c",
        "Database",
        "Microservices",
        "architecture",
        "creation",
        "components",
        "Spring",
        "Boot",
        "services",
        "Microservices",
        "Spring",
        "Eureka",
        "API",
        "routes",
        "cluster",
        "strategy",
        "spring",
        "service",
        "cluster",
        "load",
        "API",
        "gateway",
        "SOAP",
        "web",
        "services",
        "retrieving",
        "consumption",
        "data",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "services",
        "combination",
        "REST",
        "Apache",
        "ActiveMQ",
        "message",
        "brokers",
        "Spring",
        "AOP",
        "techniques",
        "Data",
        "Access",
        "Exceptions",
        "transactions",
        "Hibernate",
        "Spring",
        "JDBC",
        "Driver",
        "Manager",
        "Hibernate",
        "level",
        "cache",
        "user",
        "data",
        "Single",
        "Page",
        "Application",
        "Angular",
        "presentation",
        "layer",
        "HTML5",
        "CSS3",
        "JavaScript",
        "Nodejs",
        "serverside",
        "code",
        "Expressjs",
        "framework",
        "frontend",
        "technologies",
        "HTML5",
        "CSS3",
        "JavaScript",
        "user",
        "interface",
        "responsiveness",
        "web",
        "application",
        "Bootstrap",
        "Build",
        "prototype",
        "services",
        "Scheduling",
        "Logging",
        "Notification",
        "service",
        "party",
        "Nodejs",
        "JavaScript",
        "library",
        "DAO",
        "layer",
        "application",
        "Spring",
        "Hibernate",
        "business",
        "logic",
        "reports",
        "HQL",
        "Hibernate",
        "Criteria",
        "Netflix",
        "ZUUL",
        "API",
        "gateway",
        "requests",
        "devices",
        "services",
        "Eureka",
        "Apache",
        "Camel",
        "integration",
        "pattern",
        "enterprise",
        "components",
        "Performed",
        "CRUD",
        "operations",
        "Update",
        "Insert",
        "Delete",
        "data",
        "NoSQL",
        "database",
        "d3js",
        "visualization",
        "admission",
        "analysis",
        "Jenkins",
        "Continuous",
        "Integration",
        "Deployment",
        "application",
        "EC2",
        "instance",
        "Docker",
        "Container",
        "EC2",
        "instances",
        "domain",
        "Jenkins",
        "integration",
        "Hazelcast",
        "load",
        "Netty",
        "Apache",
        "karaf",
        "OSGI",
        "bundles",
        "Wix",
        "development",
        "JMS",
        "Apache",
        "ActiveMQ",
        "queues",
        "Experience",
        "Business",
        "Process",
        "Decision",
        "Management",
        "Design",
        "JBoss",
        "JBPM",
        "JBoss",
        "Drools",
        "Rules",
        "Engine",
        "log4j",
        "debugging",
        "information",
        "purposes",
        "TestDriven",
        "Development",
        "TDD",
        "regression",
        "testing",
        "JIRA",
        "bug",
        "tracking",
        "tool",
        "Jasper",
        "report",
        "generation",
        "environment",
        "Sprint",
        "deadlines",
        "meetings",
        "Stack",
        "JAVA18",
        "EE",
        "Spring",
        "Spring",
        "Security",
        "Spring",
        "Boot",
        "Spring",
        "AOP",
        "Spring",
        "Eureka",
        "Hibernate",
        "JSPS",
        "Apache",
        "Tomcat",
        "Hazelcast",
        "Apache",
        "Karaf",
        "ZUUL",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "Angular",
        "Expressjs",
        "Nodejs",
        "REST",
        "API",
        "Apache",
        "ActiveMQ",
        "Amazon",
        "Web",
        "Services",
        "Elastic",
        "Beanstalk",
        "Full",
        "Stack",
        "Java",
        "Developer",
        "HDFC",
        "Bank",
        "Visakhapatnam",
        "Andhra",
        "Pradesh",
        "March",
        "July",
        "Description",
        "Business",
        "Monitoring",
        "Dashboard",
        "metrics",
        "information",
        "performance",
        "Branches",
        "Branch",
        "Region",
        "Market",
        "National",
        "levels",
        "application",
        "Directors",
        "Branch",
        "Managers",
        "viewing",
        "permissions",
        "application",
        "production",
        "support",
        "application",
        "Single",
        "Sign",
        "SSO",
        "Responsibilities",
        "design",
        "analysis",
        "development",
        "deployment",
        "SDLC",
        "Software",
        "Development",
        "Lifecycle",
        "screens",
        "development",
        "project",
        "startup",
        "phase",
        "layers",
        "serverside",
        "objects",
        "interfaces",
        "J2EE",
        "design",
        "patterns",
        "Swing",
        "Spring",
        "J2EE",
        "MVC",
        "ModelViewController",
        "framework",
        "application",
        "web",
        "applications",
        "Spring",
        "MVC",
        "jQuery",
        "HTML5",
        "Bootstrap",
        "Multithreading",
        "Collections",
        "framework",
        "interactivity",
        "UI",
        "pages",
        "JavaScript",
        "Struts",
        "Tag",
        "Libraries",
        "Struts",
        "Tiles",
        "Framework",
        "addition",
        "JSP",
        "HTML",
        "AJAX",
        "CSS",
        "presentation",
        "layer",
        "Core",
        "Java",
        "technologies",
        "Collections",
        "Serialization",
        "Generics",
        "Annotations",
        "Exception",
        "Handling",
        "BackEnd",
        "business",
        "logic",
        "Entity",
        "Session",
        "Beans",
        "Spring",
        "Dependency",
        "Injection",
        "Spring",
        "Annotations",
        "Spring",
        "MVC",
        "components",
        "business",
        "layer",
        "navigation",
        "part",
        "application",
        "DevelopedMigrated",
        "application",
        "Microservices",
        "architecture",
        "Spring",
        "Boot",
        "JSPs",
        "HTML5",
        "data",
        "client",
        "side",
        "Java",
        "Mail",
        "API",
        "user",
        "status",
        "completion",
        "project",
        "AJAX",
        "data",
        "server",
        "background",
        "display",
        "page",
        "way",
        "POCs",
        "interface",
        "Backend",
        "Frontend",
        "Express",
        "JS",
        "Angular",
        "Nodejs",
        "Angular",
        "Controllers",
        "view",
        "data",
        "router",
        "page",
        "application",
        "navigation",
        "status",
        "models",
        "Hibernate",
        "ORM",
        "tool",
        "Persistence",
        "Layer",
        "spring",
        "Hibernate",
        "ORM",
        "framework",
        "persistence",
        "Hibernate",
        "DAO",
        "Support",
        "Hibernate",
        "Template",
        "data",
        "database",
        "Procedures",
        "Tables",
        "Views",
        "Sequences",
        "Cursors",
        "Triggers",
        "web",
        "services",
        "Jersey",
        "JAXRS",
        "implementation",
        "Rest",
        "Web",
        "services",
        "Node",
        "Rest",
        "framework",
        "services",
        "jQuery",
        "Bootstrap",
        "plugins",
        "SOAP",
        "UI",
        "Pro",
        "version",
        "Web",
        "Services",
        "SOAP",
        "Web",
        "Services",
        "systems",
        "Continuous",
        "Delivery",
        "framework",
        "CHEF",
        "Maven",
        "Linux",
        "environment",
        "Scripts",
        "AWS",
        "services",
        "web",
        "servers",
        "ELB",
        "Cloud",
        "Distribution",
        "database",
        "EC2",
        "database",
        "security",
        "groups",
        "Java",
        "Messaging",
        "Services",
        "JMS",
        "exchange",
        "information",
        "payment",
        "status",
        "report",
        "Deployed",
        "Application",
        "instance",
        "JBoss",
        "WebLogic",
        "Server",
        "Conducted",
        "testing",
        "issues",
        "data",
        "errors",
        "Stack",
        "Java",
        "Spring",
        "Framework",
        "Spring",
        "IOC",
        "Hibernate",
        "Spring",
        "REST",
        "JAXRS",
        "HTML5",
        "CSS3",
        "AJAX",
        "JavaScript",
        "Angular",
        "Express",
        "JS",
        "Node",
        "JS",
        "MongoDB",
        "SOAP",
        "Jersey",
        "JBoss",
        "WebLogic",
        "JBPM",
        "Drools",
        "Rules",
        "Engine",
        "GitHub",
        "Maven",
        "ZenHub",
        "AWS",
        "Beanstalk",
        "EC2",
        "RDS",
        "S3",
        "JavaJ2EE",
        "Developer",
        "Web",
        "pros",
        "Solutions",
        "Pvt",
        "ltd",
        "Visakhapatnam",
        "Andhra",
        "Pradesh",
        "October",
        "February",
        "Visakhapatnam",
        "India",
        "October",
        "February",
        "Project",
        "MicroFinance",
        "Loan",
        "Management",
        "System",
        "Role",
        "JavaJ2EE",
        "Developer",
        "Description",
        "Micro",
        "Finance",
        "Loan",
        "Management",
        "Application",
        "application",
        "Micro",
        "Finance",
        "Enterprises",
        "businesses",
        "system",
        "application",
        "Loan",
        "processing",
        "system",
        "enterprises",
        "addresses",
        "problems",
        "requirements",
        "microfinance",
        "enterprises",
        "loan",
        "trial",
        "calculation",
        "report",
        "generation",
        "management",
        "information",
        "ledger",
        "facility",
        "followup",
        "closure",
        "processes",
        "field",
        "advantage",
        "Responsibilities",
        "Agile",
        "Methodology",
        "application",
        "Test",
        "Driven",
        "Development",
        "approach",
        "specifications",
        "configuration",
        "documents",
        "user",
        "requirements",
        "Class",
        "diagrams",
        "Sequence",
        "diagrams",
        "case",
        "diagrams",
        "activity",
        "diagrams",
        "requirement",
        "document",
        "project",
        "Dynamic",
        "Web",
        "Module",
        "Struts",
        "MVC",
        "framework",
        "JSP",
        "Pages",
        "Struts2",
        "Framework",
        "end",
        "validations",
        "Javax",
        "Validation",
        "API",
        "Design",
        "Development",
        "Implementation",
        "frontend",
        "part",
        "web",
        "application",
        "HTML5",
        "CSS3",
        "JavaScript",
        "AJAX",
        "JSON",
        "Angular",
        "JS",
        "Bootstrap",
        "Automatic",
        "Dependency",
        "Injection",
        "JSP",
        "bean",
        "tags",
        "struts",
        "UI",
        "pages",
        "JS",
        "databinding",
        "directives",
        "production",
        "development",
        "teams",
        "prototype",
        "web",
        "page",
        "HTML5",
        "CSS3",
        "Bootstrap",
        "JavaScript",
        "Angular",
        "JS",
        "Configured",
        "Oracle",
        "g",
        "DB",
        "database",
        "schema",
        "Spring",
        "Data",
        "JPA",
        "Build",
        "services",
        "APIs",
        "data",
        "APIs",
        "charts",
        "visualizations",
        "Tableau",
        "Worked",
        "UI",
        "team",
        "Fusion",
        "Charts",
        "visualization",
        "tool",
        "loan",
        "bar",
        "graphs",
        "Business",
        "Delegate",
        "Design",
        "Facade",
        "Service",
        "locator",
        "Singleton",
        "Factory",
        "method",
        "Template",
        "method",
        "Observer",
        "Data",
        "Access",
        "Transfer",
        "JEE",
        "design",
        "patterns",
        "Git",
        "Version",
        "Control",
        "system",
        "GitLab",
        "CI",
        "CICD",
        "project",
        "AWS",
        "EC2",
        "Ubuntu",
        "instance",
        "DevOps",
        "team",
        "DROOLS",
        "engine",
        "runtime",
        "rule",
        "engine",
        "business",
        "rule",
        "runtime",
        "Testdriven",
        "development",
        "Bugzilla",
        "tracking",
        "issues",
        "project",
        "environment",
        "scrum",
        "meetings",
        "reviews",
        "meetings",
        "Developed",
        "Unit",
        "test",
        "cases",
        "JUnit",
        "Mockito",
        "Easy",
        "Oversaw",
        "aspects",
        "JUnit",
        "FIT",
        "SIT",
        "End",
        "End",
        "Regression",
        "User",
        "acceptance",
        "Performance",
        "Stack",
        "Java",
        "J2EE",
        "Spring",
        "Framework",
        "Spring",
        "Data",
        "JPA",
        "Struts",
        "Javax",
        "HTML5",
        "CSS",
        "AJAX",
        "JavaScript",
        "Angular",
        "Oracle",
        "g",
        "Apache",
        "Tomcat",
        "GitHub",
        "Maven",
        "GitLab",
        "CI",
        "Tableau",
        "AWS",
        "Elastic",
        "Beanstalk",
        "EC2",
        "IAM",
        "S3",
        "JavaJ2EE",
        "Developer",
        "Snapdeal",
        "Hyderabad",
        "Telangana",
        "June",
        "September",
        "Description",
        "An",
        "Ecommerce",
        "Application",
        "service",
        "layers",
        "Administration",
        "System",
        "Order",
        "Management",
        "Product",
        "catalog",
        "ECommerce",
        "functionalities",
        "shopping",
        "cart",
        "API",
        "products",
        "cart",
        "button",
        "customer",
        "shopping",
        "cart",
        "page",
        "users",
        "products",
        "user",
        "session",
        "Responsibilities",
        "preparation",
        "definition",
        "documents",
        "discussions",
        "business",
        "users",
        "testing",
        "team",
        "design",
        "documents",
        "application",
        "JSP",
        "Servlets",
        "AJAX",
        "JavaBeans",
        "XML",
        "components",
        "project",
        "ModelViewController",
        "MVC",
        "Data",
        "Access",
        "Object",
        "DAO",
        "Java",
        "Servlet",
        "controller",
        "session",
        "state",
        "user",
        "requests",
        "Middle",
        "Tier",
        "Business",
        "Delegate",
        "Session",
        "Facade",
        "DAO",
        "Singleton",
        "Factory",
        "DTO",
        "Design",
        "Patterns",
        "Swing",
        "JAVAFX",
        "frames",
        "user",
        "interfaces",
        "Servlets",
        "requests",
        "client",
        "browser",
        "responses",
        "HTTP",
        "Servlet",
        "sessions",
        "users",
        "web",
        "pages",
        "web",
        "application",
        "WebSphere",
        "server",
        "batch",
        "processing",
        "JDBC",
        "Batch",
        "data",
        "database",
        "load",
        "Application",
        "Tables",
        "team",
        "Senior",
        "Developers",
        "JVM",
        "memory",
        "management",
        "code",
        "Object",
        "references",
        "Garbage",
        "collector",
        "methods",
        "Log4j",
        "frameworks",
        "application",
        "flow",
        "SVN",
        "source",
        "code",
        "project",
        "documents",
        "version",
        "control",
        "Stack",
        "J2EE",
        "JSP",
        "Servlets",
        "JDBC",
        "AJAX",
        "XML",
        "WebSphere",
        "Eclipse",
        "SDLC",
        "Oracle",
        "9x",
        "Windows",
        "Log4j",
        "SVN",
        "Education",
        "Masters",
        "Skills",
        "ECLIPSE",
        "J2EE",
        "HIBERNATE",
        "SPRING",
        "JAVABEANS",
        "JAX",
        "JAXWS",
        "JBOSS",
        "JMS",
        "jQuery",
        "JSP",
        "SERVLETS",
        "STRUTS",
        "VISUAL",
        "STUDIO",
        "AMAZON",
        "WEB",
        "SERVICES",
        "API",
        "C",
        "DOCKER",
        "FRONTEND",
        "Javascript",
        "Node",
        "React",
        "Nodejs",
        "Angular"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:22:25.030276",
    "resume_data": "Senior Java Full Stack Developer Senior span lJavaspan Full Stack span lDeveloperspan Senior Java Full Stack Developer State Street Corporation Irving TX Over 8 years of extensive experience as a Full Stack JavaJ2EE Developer building webbased enterprise application for various domains Expertise in various methodologies of the Software Development Lifecycle SDLC process including analysis design development implementation integration testing debugging production maintenance High Proficiency with Object Oriented Programming Design Multithreading Exception Handling Data Structures and Algorithms Collections Garbage Collection Method References Functional Interfaces Extensive experience using Java technologies Core Java JDBC Java Message Service JSP Servlets JPA EJB Swing Applets and JSTL Experienced in using J2EE Design Patterns MVC Session Faade Service Locator Data Access Object Data Transfer Object Value Object Business Delegate and Factory Good working experience with Java 8 features like Streams API Default and Static methods in Interfaces Lambda Expressions Optional Class and Parallel Sort in Arrays Expert in developing web applications using MVC design patterns like Spring MVC and Struts 2 MVC Experience with different modules of Spring Framework like Spring Core Container Spring MVC Spring AOP Spring Data JDBC Spring Data MongoDB Spring Data REST ORM Integration Module Spring Security Thymeleaf Spring Boot Spring Cloud Extensive experience in Object Relational Mapping ORM using Hibernate 4x MyBatis and Spring Data JPA frameworks Experience in developing applications as Microservices using Spring Boot based on Service Oriented Architecture SOA Expert in producing and consuming REST and SOAP Web Services with different APIs like JAXWS JAXRS JAXB and implementing using Jersey and Spring REST Experience in integrating the internal security model into new projects with Spring Batch Spring Micro Services and Spring Boot Pivotal Cloud Foundry and Netflix Eureka Expertise in developing GUI using WebDevelopment technologies like HTML DHTML DOJO JavaScript CSS HTML5 Angular JS React Nodejs Bootstrap Spring Boot JSF and jQuery and very good experience in developing Single Page Applications SPA on the client side using Angular 2 Experience in developing cross platform serverside applications using Nodejs BackBonejs and Angular JS to achieve scalability in realtime web applications Implemented loadbalancing with NGINX to allow dozens of Nodejs instances to handle concurrent users Strong experience with the relational databases like Oracle12c11g MySQL5x and nonrelational database MongoDB 3x Proficient in generating reports by integrating JasperReports JFreeCharts Apache POI Apache iText and Dynamic Data Visualization tools like D3js Created unit test cases using Junit 4x and Mockito within Test Driven Development TDD environment for the back end and used Jasmine for testing the front end Experience in creating build scripts using Ant Maven and Gradle tools and scripting Dockerfiles and deploying onto Docker containers Experience in configuring and deploying Web Applications using Web Logic IBM WebSphere JBoss Apache Tomcat and Glassfish Experience in debugging using implementation of Apache Log4j for logging and Jira GitLab Bugzilla for issuetracking Used performance test tools ie Apache JMeter and JProfiler to analyze and resolve performance bottlenecks Very good experience in using Git SVN CVS for version control and ZenHub for Project Management Expertise in developing enterprise applications using Jenkins for Continuous Integration and Continuous Deployment CICD and extensive experience with Splunk Extensive experience in Amazon Web Services AWS like EC2 Simple DB RDS Elastic Load Balancing ELB SQS SNS AWS Identity and access management AWS Cloud Watch Elastic Beanstalk Elastic Cache AWS EMR and Cloud Front Redshift Worked with RabbitMQ Apache Kafka for reliable and asynchronous exchange of important information between the multiple business applications Extensive development experience on different IDEs like Eclipse Visual Studio PyCharm and IntelliJ Proficient in Behavior Driven Development BDD and TestDriven Development TDD approach using SCRUM framework under Agile Methodology Excellent client interaction skills and proven experience in working independently as well in a team Authorized to work in the US for any employer Work Experience Senior Java Full Stack Developer State Street Corporation Boston MA July 2018 to Present Description State Street Corporation is an American financial Services and bank holding company headquartered in Boston with operations worldwide Rewards Program is under retail banking it is an intranet webservice to calculate the rewardspoints for customers on their purchases using their credit cards and generate reports and visualizations on metrics of realtime insights to the Business Intelligence Team Responsibilities Followed Agile methodology for developing application and involved in analysis design development and testing phases of Software Development Life Cycle Used Microservices to build individual components of the application and built the application on Spring 4x Framework Used J2EE Design Patterns as Singleton Facade Proxy Observer for Middle Tier Development as well as Composite View Pattern for presentation tier Implemented Spring MVC flow to interact with different modules of the application Built and consumed RESTful services in modules and implemented serialization using Spring REST and JSON Designed and developed the REST based Microservices using the Spring Boot Spring Data JPA Implemented Microservices based cloud architecture utilizing Spring Boot Designed and developed custom message adapter components using Apache Kafka that allowed the message to travel through Microservices to base on Restful API utilizing Spring Boot with Spring MVC Implemented Spring Security with Okta Security API to provide security for the application Used Spring AOP to maintain the code clean and logic consistent and used point cuts to call other classes methods according to advice Secured REST APIs by implementing OAuth2 tokenbased authorization scheme using spring security Used frontend technologies HTML5 CSS3 JavaScript for interacting with the user interface and built components for the robust frontend Single Page Application built on Angular 2 Implemented Angular 2 Router to enable navigation from one view to another Used Protractor to perform end to end testing for single page application developed using Angular 2 Involved in developing Thread safe blocks for multithread access and distributed transaction management Used Hibernate 42 framework as the Object Relational Mapping tool for persisting java objects on Oracle 12c Database Architected and developed a new platform to modernize existing codebase using DropWizard Spring Dependency Injection MongoDB and Hazelcast Dynamic Data Visualizations were generated by implementing D3js and Charterers frameworks to render visualizations based on various parameters Created high level functional flow diagrams using Microsoft Visio Utilized Swagger framework for design documentation testing and deployment of REST APIs Created build pipeline using CloudBees for Continuous Integration and Deployment Developed MavenDocker builds scripts and implemented Docker containers to create images and dynamically provisioned slaves to CloudBees of Continuous Integration and Deployment Pipelines Used AWS S3 to store data and to retrieve the stored date very quickly and used Elastic Search for searching the document Used AWS SNS to send messages to multiple users and delivered in an algorithmic way using AWS SQS Used JUnit 40 and Mockito framework for unit testing of application and implemented Test Driven Development TDD methodology Created automated test scripts using Selenium Web Driver Ensured high quality code by using Agile XP Pair Programming approach and by using SonarQube Used JBPM jBoss Business Process Management Engine to define and execute workflows Extensively used Postman for testing REST web services Used SVN for versioning and Log4j implementation is done for logging Jira is used for Project Management and GitLab is used for issue and bugtracking Stack Java 18 Spring 46 Spring Boot Spring REST Spring Data JPA Hibernate 42 Oracle 12c Apache Kafka Spring Security Okta Security API Swagger HTML5 CSS3 jQuery 30 Bootstrap 4 Java Script 20 Angular 2 D3js Hazelcast JFreeCharts Microsoft Visio CloudBees Maven Docker JUnit 40 Mockito SVN Log4j Jira Senior Software Engineer Cerner Corporation Kansas City MO August 2017 to July 2018 Description Cerner Corporation is a leading American Supplier in Health info technology solution EHR supports an enterpriselevel view of clinical information to coordinate patient care and documentation By reengineering the existing project and adding new modules which support both acute inpatient and outpatient settings and helps providers to have access to the right information at the right time within the clinical workflow This module alerts physicians and nurses about patients Responsibilities Involved in all phases of the Software development life cycle SDLC using Agile Methodology designed use case diagrams class diagrams and sequence diagrams as a part of design phase Prepared Technical Design documents with UML diagrams using Microsoft Visio Extensively used the coreconcepts of java such as Stream API Exceptionhandling and Collections for business logic development Integrated JAVA EE technology Spring MVC with Hibernate for the persistence layer access for mapping to the tables in the Oracle 12c Database Implemented Microservices architecture for the creation of the independent components utilizing Spring Boot for consuming RESTful services Developed Microservices with Spring Eureka to retrieve API routes for the entire cluster Using this strategy each spring service in a cluster can be load balanced and exposed through one API gateway Created and consumed SOAP web services for secure retrieving and consumption of patient data Used Microservices architecture with Spring Boot based services interacting through a combination of REST and Apache ActiveMQ message brokers Utilized Spring AOP techniques for handling Data Access Exceptions during the transactions Integrated the Hibernate 406 with Spring using the JDBC Driver Manager and integrating Hibernate second level cache for caching the user data Designed and implemented a Single Page Application in Angular 2 and the presentation layer using HTML5 CSS3 JavaScript 20 Used Nodejs for serverside code and Expressjs as the framework Used frontend technologies HTML5 CSS3 JavaScript for interacting with the user interface and designed responsiveness in the web application using Bootstrap 4 Build prototype for various required services such as Scheduling Logging and Notification service using third party Nodejs based JavaScript library Developed the DAO layer for the application using Spring Hibernate and developed various business logic and reports using HQL and Hibernate Criteria Implemented Netflix ZUUL API gateway for all the requests from the devices and by registering services to Eureka Used Apache Camel as the integration pattern to communicate between different enterprise components Performed CRUD operations like Update Insert and Delete data in NoSQL database MongoDB Used d3js for the visualization of the patient admission analysis Implemented Jenkins for Continuous Integration and Deployment and deployed the application on EC2 instance using Docker Container Created EC2 instances and used the public domain to link with Jenkins for integration Used Hazelcast for load balancing Netty Apache karaf to deploy OSGI bundles and Wix for development Implemented JMS using Apache ActiveMQ for messaging and queues Experience in Business Process and Decision Management Design using JBoss JBPM and JBoss Drools Rules Engine Utilized log4j for logging debugging and information extracting purposes Worked in a TestDriven Development TDD by conducting regression testing and used JIRA bug tracking tool and Jasper for report generation Participated in the Agile environment according to the Sprint deadlines and meetings Stack JAVA18 JAVA EE Spring 40 Spring Security 32 Spring Boot Spring AOP Spring Eureka Hibernate 406 JSPS Apache Tomcat 80 MongoDB Hazelcast Apache Karaf ZUUL HTML5 CSS3 Bootstrap 4 Angular 20 Expressjs Nodejs REST API Apache ActiveMQ and Amazon Web Services Elastic Beanstalk Full Stack Java Developer HDFC Bank Visakhapatnam Andhra Pradesh March 2015 to July 2017 Description I was involved in developing Business Monitoring Dashboard It represents several metrics with information about the performance of Branches at Branch Region Market National levels The application is used by Managing Directors and Branch Managers with respective viewing permissions As it was an internal application we are our own production support apart from developing the application and implemented Single Sign On SSO Responsibilities Participated in the design analysis development and deployment of the SDLC Software Development Lifecycle Actively involved in mock screens development and project startup phase Defined and constructed layers serverside objects and clientside interfaces based on J2EE design patterns Developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Developed web applications using Spring MVC jQuery HTML5 Bootstrap and worked on Multithreading and Collections framework Added interactivity to the UI pages using JavaScript Struts Tag Libraries and Struts Tiles Framework were used in addition to JSP HTML AJAX and CSS in developing the presentation layer Worked with Core Java technologies Collections Serialization Generics Annotations and Exception Handling to implement BackEnd business logic including Entity and Session Beans Used Spring Dependency Injection Spring Annotations and Spring MVC components to implement business layer and navigation part of application DevelopedMigrated application to Microservices architecture using Spring Boot Developed JSPs to dynamically generate HTML5 and display the data to the client side Java Mail API was used to notify the user of the status and completion of their project Have used AJAX to retrieve data from server synchronously in the background without interfering with the display and existing page in an interactive way Developed multiple POCs to create an interface between Backend to Frontend by using MongoDB Express JS Angular and Nodejs Implemented Angular Controllers to maintain each view data Highly used Angular router to build single page application for navigation through the different status and multiple models Used Hibernate as an ORM tool for handling the Persistence Layer Integrated spring and Hibernate ORM framework for persistence and used Hibernate DAO Support with Hibernate Template to access the data Created database objects like Stored Procedures Tables Views Sequences Cursors and Triggers RESTful web services using Jersey for JAXRS implementation Worked on Rest Web services as well as Node Rest framework for backend services Used various jQuery and Bootstrap plugins and used SOAP UI Pro version for testing Web Services Exposed and consumed SOAP based Web Services to communicate between systems Implementing a Continuous Delivery framework using CHEF Maven in Linux environment Created Scripts to Automate AWS services which include web servers ELB Cloud front Distribution database AWS EC2 and database security groups Used Java Messaging Services JMS for reliable and asynchronous exchange of important information such as payment status report Deployed Application instance on JBoss and WebLogic Server Conducted debugging testing issues and troubleshooting the initial data errors Stack Java Spring Framework Spring IOC Hibernate Spring REST JAXRS HTML5 CSS3 AJAX JavaScript Angular Express JS Node JS MongoDB SOAP Jersey JBoss WebLogic JBPM Drools Rules Engine GitHub Maven ZenHub AWS Elastic Beanstalk EC2 RDS S3 JavaJ2EE Developer Web pros Solutions Pvt ltd Visakhapatnam Andhra Pradesh October 2012 to February 2015 Visakhapatnam India October 12 February 15 Project MicroFinance Loan Management System Role JavaJ2EE Developer Description Micro Finance Loan Management Application is a Webbased application developed for Micro Finance Enterprises to operate their businesses online rather than using manual system This application automates the Loan processing system of such enterprises and addresses all the problems and requirements of microfinance enterprises like loan trial calculation report generation management information general ledger facility followup closure and dayend processes by helping them to be productive and efficient in their field to gain competitive advantage Responsibilities Worked on Agile Methodology and built the application using Test Driven Development approach Created functional specifications and configuration documents based on user requirements Created Class diagrams Sequence diagrams use case diagrams and activity diagrams based on the functional requirement document Developed the project using the Dynamic Web Module by implementing Struts MVC framework Designed and developed JSP Pages using Struts2 Framework Implemented front end validations through Javax Validation API Involved in Design Development and Implementation of frontend part of the web application using HTML5 CSS3 JavaScript AJAX JSON Angular JS and Bootstrap Designed Automatic Dependency Injection using JSP use bean tags by integrating with struts Redesigned the UI pages by using Angular JS databinding and directives Worked simultaneously in both production and development teams Developed and design the prototype of web page by using the HTML5 CSS3 Bootstrap JavaScript and Angular JS Configured Oracle 10g DB database schema and binding are done using Spring Data JPA Build RESTful services and consumed SOAP APIs to fetch data from external APIs Created charts visualizations using Tableau Worked with UI team and utilized Fusion Charts as the visualization tool for showcasing and pictorializing the loan amounts on a bar graphs Implemented Business Delegate Design Facade Service locator Singleton Factory method Template method Observer Data Access Objects Transfer Objects JEE design patterns Utilized Git Version Control system and GitLab CI for the CICD Deployed the project on AWS EC2 Ubuntu instance and collaborated with the DevOps team Used DROOLS engine as java runtime rule engine to validate business rule before executing in runtime Worked in a Testdriven development and used Bugzilla for tracking issues in project Worked in an Agile environment from daily scrum meetings to reviews sprint retrospective meetings Developed Unit test cases using JUnit Mockito and Easy mock Oversaw all aspects of testing JUnit FIT and SIT End to End Regression User acceptance and Performance Stack Java J2EE Spring Framework Spring Data JPA Struts Javax HTML5 CSS AJAX JavaScript Angular Oracle 10g Apache Tomcat GitHub Maven GitLab CI Tableau AWS Elastic Beanstalk EC2 IAM S3 JavaJ2EE Developer Snapdeal Hyderabad Telangana June 2011 to September 2012 Description An Ecommerce Application to support different service layers like Administration System Order Management Product catalog and other ECommerce functionalities The shopping cart API is called to add new products to the cart when the button is clicked When the customer is ready to checkout the shopping cart page allow users to review the products and track user session Responsibilities Involved in preparation of functional definition documents and Involved in the discussions with business users testing team to finalize the technical design documents Developed the application using with JSP Servlets AJAX JavaBeans and XML Designed components for the project using ModelViewController MVC Data Access Object DAO Developed Java Servlet that acts as a controller and maintains the session state and handles user requests in Middle Tier Implemented Business Delegate Session Facade DAO Singleton Factory and DTO Design Patterns Implemented Swing and JAVAFX frames in developing user interfaces Utilized Servlets to handle various requests from the client browser and send responses Used HTTP Servlet to track sessions of the users visiting the web pages Deployed this web application on WebSphere server Involved in batch processing using JDBC Batch to extract data from database and load into corresponding Application Tables Involved in the team with Senior Developers to write JVM memory management code using different Object references and Garbage collector methods Used Log4j and commonslogging frameworks for logging the application flow Used SVN for source code and project documents version control Stack J2EE JSP Servlets JDBC AJAX XML WebSphere Eclipse SDLC Oracle 9x Windows Log4j SVN Education Masters Skills ECLIPSE J2EE JAVA HIBERNATE SPRING JAVABEANS JAX JAXWS JBOSS JMS jQuery JSP SERVLETS STRUTS VISUAL STUDIO AMAZON WEB SERVICES API C DOCKER FRONTEND Javascript Node React Nodejs Angular",
    "unique_id": "ec31bf12-6703-4136-bbc6-b60f190c85c1"
}