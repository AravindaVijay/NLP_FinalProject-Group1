{
    "clean_data": "Sr Java Developer Sr Java span lDeveloperspan Sr Java Developer Columbus OH Highly motivated IT professional having around 6 years of experience in requirements gathering deployment of Web Applications and client server multitier applications using Java 8 J2EE technologies Experience in AWS Docker and Kubernetes Stateless application Canary deployment in Kubernetes Kubernetes Stateful Sets deployment for MySQL and Kafka resources within the pod and experience in using MVCModelViewController Spring Struts 1x 2x and Hibernate frameworks Extensive experience in array as in the context of Java is a dynamicallycreated object that serves as a container to hold constant number of values of the same type Experience in developing ClientServer model Enterprise level web applications using Open Source Frameworks like Struts12 Spring2x and Hibernate3x EJB transaction implementation CMP BMP and MessageDriven Beans JMS and can adapt to inhouse grown version of these frameworks too Extensive experience in developing business components based on the customer requirement by using Core Java concepts and its API and experience in development deployment and troubleshooting Web based and enterprisebased applications on Windows UNIX and Linux platforms Experience in end to end implementation of CICD Continuous Delivery DevOps processes using AWS Code Commit AWS Code Deploy AWS Code Pipeline Jenkins and Ansible and experience in automation tools like Junit Jtest and Mockito Experience across Implementation Upgrade and maintenance Projects and have good experience with Springs Spring IOC AOP MVC Spring Security Spring JPA in Spring Boot and Spring Rest Services and Experience in using the Collections in java like Array List Strong software development experience using expertise with Java J2EE Junit JSP JDBC Servlets Java Beans EJBs Session beans Entity Beans and JMS JBoss JavaScript Angular 5 jQuery CSS Ajax Jason Jtest Web Services Struts Spring Microservices Hibernate and Oracle PLSQL Kafka Experience in microservices team to develop and deliver Maven projects to deploy on Jenkins and having experience in managing the Docker containers in kubernetes and experience J2EE design patterns like MVCModelViewController Singleton Front Controller Business Delegate Service Locator DAO VO DTO etc Handson experience working on several microservices components like Docker Engine Docker Hub Compose Docker Registry and handling multiple images primarily for installations and domain configurations and creating Docker images Experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon DynamoDB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access Experience in developing Application Framework using MVC Architecture STRUTS Framework Java Server Faces MVC pattern J2EE Design Patterns Usecase design Hibernate framework and Core Java Patterns Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Strong experience in working web applications using Spring MVCModelViewController JSP Servlets Expertise in writing JUnit test cases for system testing Used Log4j for logging and have experience in developing Representational state transfer REST based services and Simple Object Access Protocol SOAP based services Experience in developing Application Framework using MVC Architecture STRUTS Framework Java Server Faces MVC pattern J2EE Design Patterns Usecase design Hibernate framework and Core Java Patterns Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Experienced on loading and transforming of large sets of data from Cassandra source through Kafka and placed in HDFS for further processing Handson experience working on several microservices components like Docker Engine Docker Hub Compose Docker Registry and handling multiple images primarily for installations and domain configurations and creating Docker images Authorized to work in the US for any employer Work Experience Sr Java Developer Air Bnb San Francisco CA September 2018 to Present Airbnb offers a broad array of financial banking services etc The system developed provides personal savings details of Ally bank Customers It offers a broad array of financial clients and as per the users account status offers him to take up the new schemes enrolling with the bank Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Used various collections framework implementations like Array List HashMap and worked extensively with Exception Handling Developed Open stack API to integrate with Amazon EC2 cloudbased architecture in AWS including creating machine Images and build RESTful web service by building Nodejs Server in the backend to handle requests sent from the frontend jQuery and AJAX calls Created RFP Request for Proposal Micro service to provide RESTful API utilizing Spring Boot with Spring MVC and implemented Spring MVC framework in the presentation tier for all the essential control flow business level validations and for communicating with the business layer Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping and developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Deployed the Deodorized Spring Boot application using AWS Elastic Bean Stalk EBS and used Bootstrap and Babel framework for ReactJS Implemented modules into NodeJS to integrate with designs and requirements and wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs and built a CI tool chain using Docker AWS and GitHub Worked with Docker and Kubernetes to manage micro services for development of continuous integration and worked with Spring MVC pattern used Hibernate persistence framework for developing the public access Agile Court application Used advanced Java 8 features like Lambda expressions for array operations collections concurrency methods Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST APIs and Spring Boot for microservices and Created Hibernate mapping files sessions transactions query and criteria query to fetch the data from SQL based schema Designed and developed various modules of the application with J2EE design architecture Spring MVC architecture using IOC AOP concepts and Implemented UI components using Angular 20 dependency Injection Models data binding and controllers collection objects array operations and Enhanced concurrency methods Used UNIX shell scripting to automate software installation and testing and Used kubernetes to manage applications by inspecting and performing CRUD on clusters and worked on docker with kubernetes to create pods for application and deployed across multi node kubernetes cluster Used Kubernetes to orchestrate the deployment scaling and management of Docker Containers and apart from this Worked on infrastructure with Docker containerization and maintained Docker Images and containers and Used GOLANG to log the different host system event and alert information to Cassandra database Java Developer Instacart San Francisco CA November 2017 to August 2018 Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server and Initiated Microservices application through Docker and Kubernetes cluster formation Refactored and enhanced an existing AngularJS application to follow strict MVC patterns for improved source code maintenance which resulted in significant percentage of code reduction ease of upgrade scalability ease of developer to spin up and enhanced performance Used AngularJS Node JS and Bootstrap in effective web design and involved in enhancement of existing application utilizing Angular and Created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture and developed the persistence layer using Hibernate Framework created the POJO objects and mapped using Hibernate annotations Implemented spring boot micro services to process the messages into the Kafka cluster setup AS WELL AS Worked as Onshore lead to gather business requirements and guided the offshore team and coordinated with Kafka Admin team to set up Kafka cluster for the QA and Production environments Kafka managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management as well as developed and maintained ANT Scripts and managed daily production issues Worked on many aspects of Kubernetes cluster deployment and cluster health services from developing cloud services to deployment on top of runtime infrastructure Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Worked on RESTful APIs for HTTP requests between client and server and used Spring framework to achieve loose coupling between the layers thus moving towards Service Oriented Architecture SOA exposed through Restful Services and used Spring Kafka API calls to process the messages on Kafka Cluster setup Created Jenkins pipeline which helps to drive all builds out to the docker registry and then deployed to the docker containers using Jenkins file and Utilized Kubernetes for the runtime environment of the CICD system to build test deploy Implemented Service tier using Spring and utilizing Hibernate framework for Data access tier and persistence implementation and created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed Apache spark jobs using Scala in test environment for faster data processing and used spark SQL for querying and Developed Kafka producer and consumers Cassandra clients and Spark along with components on HDFS and used the Spark Cassandra Connector to load data to and from Cassandra Used AngularJS Node JS and Bootstrap in effective web design and involved in enhancement of existing application utilizing Angular and Created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Load the data into Spark RDDs Spark Data Frame APIs and performed inmemory data computation to generate the output response and Used Jenkins for continuous build system and Git as version control Configured Spark Streaming to receive real time data from the Kafka and store the stream data to Cassandra utilizing Scala and Involved in CICD process using GIT Jenkins job creation Maven build Create Docker image and deployment in AWS environment Kafka managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management as well as developed and maintained ANT Scripts and managed daily production issues Worked on many aspects of Kubernetes cluster deployment and cluster health services from developing cloud services to deployment on top of runtime infrastructure Java Engineer WePay Redwood City CA May 2016 to July 2017 Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Deployed Docker contained Spring Boot services into kubernetes using Tectonic kubernetes console and configure each pod to pick five alerts from the table and updated the pod count to run the application Implemented Model View Controller MVC Architecture based presentation using JSF framework and client webpages are built using HTML CSS and JavaScript and Developed Hibernate mapping configuration files to provide the relation between java objects and database tables Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and worked on installation of Docker using Docker toolbox and apart from this Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance and created AWS EC2 instances Involved in database programming in Oracle Developed SQL Queries for performing CRUD operations in Oracle for the application and designing of the system as per the change in requirement using Struts MVC architecture Used core java concepts like exceptions collections while developing serverside services and used Maven for generating system builds and Bamboo for continuous integration and Implemented functionality using Servlet JSP HTML and Struts Framework Hibernate spring Java Scripts and Web logic Implemented a production ready load balanced highly available fault tolerant auto scaling Kubernetes AWS infrastructure and microservice container orchestration and Involved in implementation of application using conventional design practices WebService Oriented Architecture MVCModel View Controller Worked on Eclipse for development and deployment of application in Web Logic Application Server and deployed GUI code to WebLogic application environment and standalone components to JBoss Server and responsible for coding testing and documenting various packages procedures and functions for libraries Worked on different layers of Spring MVC architecture such as Spring Controller service and repository classes Developed Open stack API to integrate with Amazon EC2 cloudbased architecture in AWS including creating machine Images and designed and developed Spark Streaming jobs to consume from Kafka and persist to Cassandra HDFS Hive Also wrote many Hive analytics queries for data aggregations for CMS Created RFP Request for Proposal Micro service to provide RESTful API utilizing Spring Boot with Spring MVC and Responsible for Streaming jobs set up using Spark 231 version to consume the data json from the Kafka Topic Deployed the Dockized Spring Boot application using AWS Elastic Bean Stalk EBS and used Bootstrap and Babel framework for ReactJS Implemented modules into NodeJS to integrate with designs and requirements and wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs and built a CI tool chain using Docker AWS and GitHub Software Engineer Weebly San Francisco CA January 2014 to April 2016 Responsible for the analysis documenting the requirements and architecting the application based on J2EE standards Followed test driven and participated in designing of Use Case Class Diagram and Sequence Diagram for various Engine components and used IBM Rational Rose for generating the UML diagrams Created the docker images and deployed them into the Kubernetes cluster and create the multiple replicas to handle the workloads and Deployed Docker contained Spring REST services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Developing Intranet Web Application using J2EE architecture using JSP to design the user interfaces and Hibernate for database connectivity and created and consumed Rest Web services using Spring Rest Template Developed the whole framework for the projects based on Struts MVC Spring MVC Designed and developed Controller Servlet which will route the request to Application Controller and has extensively Worked with Eclipse IDE to develop test and deploy the complete application and Implemented Kubernetes for container cluster management in the Jenkins CICD pipeline Development of hibernating objects for data fetching for batch and frontend processing and frontend screens development using JSP with tag libraries and HTML pages and developed user interface using JSP jQuery HTML and JavaScript Designed and developed the new features in the existing application to meet the customers satisfaction Written SQL queries stored procedures modifications to existing database structure as required per addition of new features as well as SVN management Worked with Docker and Kubernetes to manage micro services for development of continuous integration and Implemented messaging system for different data sources using apache Kafka and configuring High level consumers for online and offline processing Used advanced Java 8 features like Lambda expressions for array operations collections concurrency methods and Performed realtime analysis of the incoming data using Kafka consumer API Kafka topics Spark Streaming utilizing Scala Worked on ML implementation with the help of Adams as ADAMS follows the philosophy of less is more A novel and flexible workflow engine ADAMS is aimed at quickly building and maintaining realworld workflows which are usually complex in nature Designed and developed various modules of the application with J2EE design architecture Spring MVC architecture using IOC AOP concepts and Developed highthroughput streaming apps reading from Kafka queues and writing enriched data back to outbound Kafka queues Education Bachelors Skills Angular J2Ee Java J2Ee Rest Hibernate Java Javascript spring 5 years springboot 5 years RDBMS 5 years Javascript 5 years JQuery 5 years AWS 5 years API 5 years Docker 5 years Kubernetes 5 years Reactjs 5 years CICD 5 years Jenkins 5 years Git 5 years Apache 5 years Unix 5 years Linux 5 years Kafka 5 years Cassandra 5 years MongoDB 5 years HTML 5 years CSS 5 years AWS 5 years Puppet 5 years chef 5 years Microservices 5 years JEE Core Java MVC Soap",
    "entities": [
        "CMS Created",
        "Spring Framework",
        "AJAX",
        "Representational",
        "IOC AOP",
        "Oracle Developed SQL Queries",
        "Implemented Kubernetes",
        "Agile Court",
        "HDFS",
        "UNIX",
        "HTTP",
        "AWS Elastic Bean Stalk EBS",
        "Application Controller",
        "IBM",
        "Angular and Created",
        "Hibernate Session Factory",
        "Web Logic Application Server",
        "Responsible for Streaming",
        "EAR",
        "a Single Page Application",
        "WebLogic",
        "JUnit",
        "Shell",
        "Amazon",
        "Spring Boot",
        "Struts Framework Hibernate",
        "Hibernate Framework",
        "Utilized Kubernetes",
        "Developed",
        "AWS Docker",
        "DAO",
        "Created Jenkins",
        "Jenkins",
        "ANT Scripts",
        "Mockito",
        "Spring MVC",
        "Proposal Micro",
        "Present Airbnb",
        "Create Docker",
        "San Francisco",
        "Docker Containers",
        "UML",
        "Git",
        "Developed Hibernate",
        "Docker AWS",
        "Implemented UI",
        "Kubernetes AWS",
        "Images",
        "Simple Object Access Protocol",
        "Initiated Microservices",
        "Linux",
        "JSP",
        "Spark Streaming",
        "Docker",
        "Kubernetes Experienced",
        "Refactored",
        "JSP Servlets Expertise",
        "MVC",
        "Spark",
        "Projects",
        "EJB",
        "Node JS",
        "GitHub Worked",
        "HTML CSS",
        "API",
        "US",
        "Adams as ADAMS",
        "POJO",
        "Spark Data Frame",
        "the Kafka Topic Deployed",
        "Created Hibernate",
        "Created",
        "Cassandra utilizing Scala and Involved",
        "AWS",
        "Puppet Chef Ansible Configuration",
        "Spring Controller",
        "Oracle",
        "GitHub Software Engineer Weebly",
        "JSF",
        "Injection Models",
        "ClientServer",
        "Exception Handling Developed Open",
        "Kubernetes Kubernetes Stateful Sets",
        "SQL",
        "GitHub",
        "Amazon Web Services",
        "JBoss Server",
        "Bootstrap",
        "Kubernetes",
        "MVC Architecture",
        "J2EE",
        "Hive",
        "CICD",
        "Implemented Service",
        "Amazon AWS",
        "Handson",
        "Restful Services",
        "CMP",
        "CRUD",
        "Implementation Upgrade",
        "the Spark Cassandra Connector",
        "Maven",
        "Springs Spring IOC AOP",
        "GWT",
        "boot micro services",
        "Struts MVC Spring",
        "Bootstrap and Babel",
        "Cassandra HDFS Hive Also",
        "UI",
        "ML",
        "SVN",
        "AWS Stack",
        "jQuery",
        "REST",
        "GOLANG",
        "Data",
        "WebService Oriented Architecture",
        "Nodejs Server",
        "AWS Cloud Services",
        "Kubernetes Stateless",
        "Engine"
    ],
    "experience": "Experience in AWS Docker and Kubernetes Stateless application Canary deployment in Kubernetes Kubernetes Stateful Sets deployment for MySQL and Kafka resources within the pod and experience in using MVCModelViewController Spring Struts 1x 2x and Hibernate frameworks Extensive experience in array as in the context of Java is a dynamicallycreated object that serves as a container to hold constant number of values of the same type Experience in developing ClientServer model Enterprise level web applications using Open Source Frameworks like Struts12 Spring2x and Hibernate3x EJB transaction implementation CMP BMP and MessageDriven Beans JMS and can adapt to inhouse grown version of these frameworks too Extensive experience in developing business components based on the customer requirement by using Core Java concepts and its API and experience in development deployment and troubleshooting Web based and enterprisebased applications on Windows UNIX and Linux platforms Experience in end to end implementation of CICD Continuous Delivery DevOps processes using AWS Code Commit AWS Code Deploy AWS Code Pipeline Jenkins and Ansible and experience in automation tools like Junit Jtest and Mockito Experience across Implementation Upgrade and maintenance Projects and have good experience with Springs Spring IOC AOP MVC Spring Security Spring JPA in Spring Boot and Spring Rest Services and Experience in using the Collections in java like Array List Strong software development experience using expertise with Java J2EE Junit JSP JDBC Servlets Java Beans EJBs Session beans Entity Beans and JMS JBoss JavaScript Angular 5 jQuery CSS Ajax Jason Jtest Web Services Struts Spring Microservices Hibernate and Oracle PLSQL Kafka Experience in microservices team to develop and deliver Maven projects to deploy on Jenkins and having experience in managing the Docker containers in kubernetes and experience J2EE design patterns like MVCModelViewController Singleton Front Controller Business Delegate Service Locator DAO VO DTO etc Handson experience working on several microservices components like Docker Engine Docker Hub Compose Docker Registry and handling multiple images primarily for installations and domain configurations and creating Docker images Experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon DynamoDB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access Experience in developing Application Framework using MVC Architecture STRUTS Framework Java Server Faces MVC pattern J2EE Design Patterns Usecase design Hibernate framework and Core Java Patterns Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Strong experience in working web applications using Spring MVCModelViewController JSP Servlets Expertise in writing JUnit test cases for system testing Used Log4j for logging and have experience in developing Representational state transfer REST based services and Simple Object Access Protocol SOAP based services Experience in developing Application Framework using MVC Architecture STRUTS Framework Java Server Faces MVC pattern J2EE Design Patterns Usecase design Hibernate framework and Core Java Patterns Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Experienced on loading and transforming of large sets of data from Cassandra source through Kafka and placed in HDFS for further processing Handson experience working on several microservices components like Docker Engine Docker Hub Compose Docker Registry and handling multiple images primarily for installations and domain configurations and creating Docker images Authorized to work in the US for any employer Work Experience Sr Java Developer Air Bnb San Francisco CA September 2018 to Present Airbnb offers a broad array of financial banking services etc The system developed provides personal savings details of Ally bank Customers It offers a broad array of financial clients and as per the users account status offers him to take up the new schemes enrolling with the bank Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Used various collections framework implementations like Array List HashMap and worked extensively with Exception Handling Developed Open stack API to integrate with Amazon EC2 cloudbased architecture in AWS including creating machine Images and build RESTful web service by building Nodejs Server in the backend to handle requests sent from the frontend jQuery and AJAX calls Created RFP Request for Proposal Micro service to provide RESTful API utilizing Spring Boot with Spring MVC and implemented Spring MVC framework in the presentation tier for all the essential control flow business level validations and for communicating with the business layer Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping and developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Deployed the Deodorized Spring Boot application using AWS Elastic Bean Stalk EBS and used Bootstrap and Babel framework for ReactJS Implemented modules into NodeJS to integrate with designs and requirements and wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs and built a CI tool chain using Docker AWS and GitHub Worked with Docker and Kubernetes to manage micro services for development of continuous integration and worked with Spring MVC pattern used Hibernate persistence framework for developing the public access Agile Court application Used advanced Java 8 features like Lambda expressions for array operations collections concurrency methods Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST APIs and Spring Boot for microservices and Created Hibernate mapping files sessions transactions query and criteria query to fetch the data from SQL based schema Designed and developed various modules of the application with J2EE design architecture Spring MVC architecture using IOC AOP concepts and Implemented UI components using Angular 20 dependency Injection Models data binding and controllers collection objects array operations and Enhanced concurrency methods Used UNIX shell scripting to automate software installation and testing and Used kubernetes to manage applications by inspecting and performing CRUD on clusters and worked on docker with kubernetes to create pods for application and deployed across multi node kubernetes cluster Used Kubernetes to orchestrate the deployment scaling and management of Docker Containers and apart from this Worked on infrastructure with Docker containerization and maintained Docker Images and containers and Used GOLANG to log the different host system event and alert information to Cassandra database Java Developer Instacart San Francisco CA November 2017 to August 2018 Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server and Initiated Microservices application through Docker and Kubernetes cluster formation Refactored and enhanced an existing AngularJS application to follow strict MVC patterns for improved source code maintenance which resulted in significant percentage of code reduction ease of upgrade scalability ease of developer to spin up and enhanced performance Used AngularJS Node JS and Bootstrap in effective web design and involved in enhancement of existing application utilizing Angular and Created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture and developed the persistence layer using Hibernate Framework created the POJO objects and mapped using Hibernate annotations Implemented spring boot micro services to process the messages into the Kafka cluster setup AS WELL AS Worked as Onshore lead to gather business requirements and guided the offshore team and coordinated with Kafka Admin team to set up Kafka cluster for the QA and Production environments Kafka managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management as well as developed and maintained ANT Scripts and managed daily production issues Worked on many aspects of Kubernetes cluster deployment and cluster health services from developing cloud services to deployment on top of runtime infrastructure Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Worked on RESTful APIs for HTTP requests between client and server and used Spring framework to achieve loose coupling between the layers thus moving towards Service Oriented Architecture SOA exposed through Restful Services and used Spring Kafka API calls to process the messages on Kafka Cluster setup Created Jenkins pipeline which helps to drive all builds out to the docker registry and then deployed to the docker containers using Jenkins file and Utilized Kubernetes for the runtime environment of the CICD system to build test deploy Implemented Service tier using Spring and utilizing Hibernate framework for Data access tier and persistence implementation and created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed Apache spark jobs using Scala in test environment for faster data processing and used spark SQL for querying and Developed Kafka producer and consumers Cassandra clients and Spark along with components on HDFS and used the Spark Cassandra Connector to load data to and from Cassandra Used AngularJS Node JS and Bootstrap in effective web design and involved in enhancement of existing application utilizing Angular and Created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Load the data into Spark RDDs Spark Data Frame APIs and performed inmemory data computation to generate the output response and Used Jenkins for continuous build system and Git as version control Configured Spark Streaming to receive real time data from the Kafka and store the stream data to Cassandra utilizing Scala and Involved in CICD process using GIT Jenkins job creation Maven build Create Docker image and deployment in AWS environment Kafka managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management as well as developed and maintained ANT Scripts and managed daily production issues Worked on many aspects of Kubernetes cluster deployment and cluster health services from developing cloud services to deployment on top of runtime infrastructure Java Engineer WePay Redwood City CA May 2016 to July 2017 Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Deployed Docker contained Spring Boot services into kubernetes using Tectonic kubernetes console and configure each pod to pick five alerts from the table and updated the pod count to run the application Implemented Model View Controller MVC Architecture based presentation using JSF framework and client webpages are built using HTML CSS and JavaScript and Developed Hibernate mapping configuration files to provide the relation between java objects and database tables Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and worked on installation of Docker using Docker toolbox and apart from this Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance and created AWS EC2 instances Involved in database programming in Oracle Developed SQL Queries for performing CRUD operations in Oracle for the application and designing of the system as per the change in requirement using Struts MVC architecture Used core java concepts like exceptions collections while developing serverside services and used Maven for generating system builds and Bamboo for continuous integration and Implemented functionality using Servlet JSP HTML and Struts Framework Hibernate spring Java Scripts and Web logic Implemented a production ready load balanced highly available fault tolerant auto scaling Kubernetes AWS infrastructure and microservice container orchestration and Involved in implementation of application using conventional design practices WebService Oriented Architecture MVCModel View Controller Worked on Eclipse for development and deployment of application in Web Logic Application Server and deployed GUI code to WebLogic application environment and standalone components to JBoss Server and responsible for coding testing and documenting various packages procedures and functions for libraries Worked on different layers of Spring MVC architecture such as Spring Controller service and repository classes Developed Open stack API to integrate with Amazon EC2 cloudbased architecture in AWS including creating machine Images and designed and developed Spark Streaming jobs to consume from Kafka and persist to Cassandra HDFS Hive Also wrote many Hive analytics queries for data aggregations for CMS Created RFP Request for Proposal Micro service to provide RESTful API utilizing Spring Boot with Spring MVC and Responsible for Streaming jobs set up using Spark 231 version to consume the data json from the Kafka Topic Deployed the Dockized Spring Boot application using AWS Elastic Bean Stalk EBS and used Bootstrap and Babel framework for ReactJS Implemented modules into NodeJS to integrate with designs and requirements and wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs and built a CI tool chain using Docker AWS and GitHub Software Engineer Weebly San Francisco CA January 2014 to April 2016 Responsible for the analysis documenting the requirements and architecting the application based on J2EE standards Followed test driven and participated in designing of Use Case Class Diagram and Sequence Diagram for various Engine components and used IBM Rational Rose for generating the UML diagrams Created the docker images and deployed them into the Kubernetes cluster and create the multiple replicas to handle the workloads and Deployed Docker contained Spring REST services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Developing Intranet Web Application using J2EE architecture using JSP to design the user interfaces and Hibernate for database connectivity and created and consumed Rest Web services using Spring Rest Template Developed the whole framework for the projects based on Struts MVC Spring MVC Designed and developed Controller Servlet which will route the request to Application Controller and has extensively Worked with Eclipse IDE to develop test and deploy the complete application and Implemented Kubernetes for container cluster management in the Jenkins CICD pipeline Development of hibernating objects for data fetching for batch and frontend processing and frontend screens development using JSP with tag libraries and HTML pages and developed user interface using JSP jQuery HTML and JavaScript Designed and developed the new features in the existing application to meet the customers satisfaction Written SQL queries stored procedures modifications to existing database structure as required per addition of new features as well as SVN management Worked with Docker and Kubernetes to manage micro services for development of continuous integration and Implemented messaging system for different data sources using apache Kafka and configuring High level consumers for online and offline processing Used advanced Java 8 features like Lambda expressions for array operations collections concurrency methods and Performed realtime analysis of the incoming data using Kafka consumer API Kafka topics Spark Streaming utilizing Scala Worked on ML implementation with the help of Adams as ADAMS follows the philosophy of less is more A novel and flexible workflow engine ADAMS is aimed at quickly building and maintaining realworld workflows which are usually complex in nature Designed and developed various modules of the application with J2EE design architecture Spring MVC architecture using IOC AOP concepts and Developed highthroughput streaming apps reading from Kafka queues and writing enriched data back to outbound Kafka queues Education Bachelors Skills Angular J2Ee Java J2Ee Rest Hibernate Java Javascript spring 5 years springboot 5 years RDBMS 5 years Javascript 5 years JQuery 5 years AWS 5 years API 5 years Docker 5 years Kubernetes 5 years Reactjs 5 years CICD 5 years Jenkins 5 years Git 5 years Apache 5 years Unix 5 years Linux 5 years Kafka 5 years Cassandra 5 years MongoDB 5 years HTML 5 years CSS 5 years AWS 5 years Puppet 5 years chef 5 years Microservices 5 years JEE Core Java MVC Soap",
    "extracted_keywords": [
        "Sr",
        "Java",
        "Developer",
        "Sr",
        "Java",
        "span",
        "lDeveloperspan",
        "Sr",
        "Java",
        "Developer",
        "Columbus",
        "OH",
        "IT",
        "years",
        "experience",
        "requirements",
        "deployment",
        "Web",
        "Applications",
        "client",
        "server",
        "applications",
        "Java",
        "J2EE",
        "technologies",
        "Experience",
        "AWS",
        "Docker",
        "Kubernetes",
        "Stateless",
        "application",
        "Canary",
        "deployment",
        "Kubernetes",
        "Kubernetes",
        "Stateful",
        "Sets",
        "deployment",
        "MySQL",
        "Kafka",
        "resources",
        "pod",
        "experience",
        "Spring",
        "Struts",
        "1x",
        "Hibernate",
        "frameworks",
        "experience",
        "array",
        "context",
        "Java",
        "object",
        "container",
        "number",
        "values",
        "type",
        "Experience",
        "ClientServer",
        "model",
        "Enterprise",
        "level",
        "web",
        "applications",
        "Open",
        "Source",
        "Frameworks",
        "Struts12",
        "Spring2x",
        "Hibernate3x",
        "EJB",
        "transaction",
        "implementation",
        "CMP",
        "BMP",
        "MessageDriven",
        "JMS",
        "version",
        "frameworks",
        "experience",
        "business",
        "components",
        "customer",
        "requirement",
        "Core",
        "Java",
        "concepts",
        "API",
        "experience",
        "development",
        "deployment",
        "troubleshooting",
        "Web",
        "applications",
        "Windows",
        "UNIX",
        "Linux",
        "Experience",
        "end",
        "implementation",
        "CICD",
        "Continuous",
        "Delivery",
        "DevOps",
        "processes",
        "AWS",
        "Code",
        "Commit",
        "AWS",
        "Code",
        "Deploy",
        "AWS",
        "Code",
        "Pipeline",
        "Jenkins",
        "Ansible",
        "experience",
        "automation",
        "tools",
        "Junit",
        "Jtest",
        "Mockito",
        "Experience",
        "Implementation",
        "Upgrade",
        "maintenance",
        "Projects",
        "experience",
        "Springs",
        "Spring",
        "IOC",
        "AOP",
        "MVC",
        "Spring",
        "Security",
        "Spring",
        "JPA",
        "Spring",
        "Boot",
        "Spring",
        "Rest",
        "Services",
        "Experience",
        "Collections",
        "java",
        "Array",
        "List",
        "Strong",
        "software",
        "development",
        "experience",
        "expertise",
        "Java",
        "J2EE",
        "Junit",
        "JSP",
        "JDBC",
        "Servlets",
        "Java",
        "Beans",
        "EJBs",
        "Session",
        "Entity",
        "Beans",
        "JMS",
        "JBoss",
        "JavaScript",
        "Angular",
        "jQuery",
        "CSS",
        "Ajax",
        "Jason",
        "Jtest",
        "Web",
        "Services",
        "Struts",
        "Spring",
        "Microservices",
        "Hibernate",
        "Oracle",
        "PLSQL",
        "Kafka",
        "Experience",
        "microservices",
        "team",
        "Maven",
        "projects",
        "Jenkins",
        "experience",
        "Docker",
        "containers",
        "kubernetes",
        "J2EE",
        "design",
        "patterns",
        "Singleton",
        "Front",
        "Controller",
        "Business",
        "Delegate",
        "Service",
        "Locator",
        "DAO",
        "VO",
        "DTO",
        "Handson",
        "experience",
        "microservices",
        "components",
        "Docker",
        "Engine",
        "Docker",
        "Hub",
        "Compose",
        "Docker",
        "Registry",
        "images",
        "installations",
        "domain",
        "configurations",
        "Docker",
        "images",
        "Experience",
        "Amazon",
        "Web",
        "Services",
        "Amazon",
        "EC2",
        "Amazon",
        "S3",
        "Amazon",
        "DynamoDB",
        "Amazon",
        "RDS",
        "Amazon",
        "Elastic",
        "Load",
        "Amazon",
        "SQS",
        "AWS",
        "Identity",
        "access",
        "Experience",
        "Application",
        "Framework",
        "MVC",
        "Architecture",
        "STRUTS",
        "Framework",
        "Java",
        "Server",
        "Faces",
        "MVC",
        "pattern",
        "J2EE",
        "Design",
        "Patterns",
        "Usecase",
        "design",
        "Hibernate",
        "framework",
        "Core",
        "Java",
        "Patterns",
        "handson",
        "engineering",
        "implantation",
        "knowledge",
        "container",
        "orchestration",
        "infrastructure",
        "management",
        "tools",
        "Kubernetes",
        "Strong",
        "experience",
        "web",
        "applications",
        "Spring",
        "MVCModelViewController",
        "JSP",
        "Servlets",
        "Expertise",
        "JUnit",
        "test",
        "cases",
        "system",
        "testing",
        "Log4j",
        "experience",
        "state",
        "transfer",
        "REST",
        "services",
        "Simple",
        "Object",
        "Access",
        "Protocol",
        "SOAP",
        "services",
        "Experience",
        "Application",
        "Framework",
        "MVC",
        "Architecture",
        "STRUTS",
        "Framework",
        "Java",
        "Server",
        "Faces",
        "MVC",
        "pattern",
        "J2EE",
        "Design",
        "Patterns",
        "Usecase",
        "design",
        "Hibernate",
        "framework",
        "Core",
        "Java",
        "Patterns",
        "handson",
        "engineering",
        "implantation",
        "knowledge",
        "container",
        "orchestration",
        "infrastructure",
        "management",
        "tools",
        "Kubernetes",
        "loading",
        "transforming",
        "sets",
        "data",
        "Cassandra",
        "source",
        "Kafka",
        "HDFS",
        "Handson",
        "experience",
        "microservices",
        "components",
        "Docker",
        "Engine",
        "Docker",
        "Hub",
        "Compose",
        "Docker",
        "Registry",
        "images",
        "installations",
        "domain",
        "configurations",
        "Docker",
        "images",
        "US",
        "employer",
        "Work",
        "Experience",
        "Sr",
        "Java",
        "Developer",
        "Air",
        "Bnb",
        "San",
        "Francisco",
        "CA",
        "September",
        "Present",
        "Airbnb",
        "array",
        "banking",
        "services",
        "system",
        "savings",
        "details",
        "Ally",
        "bank",
        "Customers",
        "array",
        "clients",
        "users",
        "status",
        "schemes",
        "bank",
        "Docker",
        "development",
        "Stateless",
        "application",
        "Kubernetes",
        "automation",
        "tools",
        "Junit",
        "Jtest",
        "Mockito",
        "testing",
        "frameworks",
        "collections",
        "framework",
        "implementations",
        "Array",
        "List",
        "HashMap",
        "Exception",
        "Handling",
        "stack",
        "API",
        "Amazon",
        "EC2",
        "architecture",
        "AWS",
        "machine",
        "Images",
        "web",
        "service",
        "Nodejs",
        "Server",
        "backend",
        "requests",
        "frontend",
        "jQuery",
        "AJAX",
        "RFP",
        "Request",
        "Proposal",
        "Micro",
        "service",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Spring",
        "MVC",
        "framework",
        "presentation",
        "tier",
        "control",
        "flow",
        "business",
        "level",
        "validations",
        "business",
        "layer",
        "Spring",
        "Features",
        "Spring",
        "MVC",
        "Spring",
        "DAO",
        "Spring",
        "AOP",
        "Aspect",
        "Oriented",
        "Programming",
        "Hibernate",
        "ORM",
        "Object",
        "Relational",
        "Mapping",
        "Swing",
        "Spring",
        "J2EE",
        "MVC",
        "ModelViewController",
        "framework",
        "application",
        "Deodorized",
        "Spring",
        "Boot",
        "application",
        "AWS",
        "Bean",
        "Stalk",
        "EBS",
        "Bootstrap",
        "Babel",
        "framework",
        "ReactJS",
        "modules",
        "NodeJS",
        "designs",
        "requirements",
        "UNIX",
        "Shell",
        "scripts",
        "UNIX",
        "environment",
        "EAR",
        "logs",
        "CI",
        "tool",
        "chain",
        "Docker",
        "AWS",
        "GitHub",
        "Docker",
        "Kubernetes",
        "micro",
        "services",
        "development",
        "integration",
        "Spring",
        "MVC",
        "pattern",
        "Hibernate",
        "persistence",
        "framework",
        "access",
        "Agile",
        "Court",
        "application",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "array",
        "operations",
        "collections",
        "concurrency",
        "methods",
        "Spring",
        "Core",
        "Annotations",
        "Dependency",
        "Injection",
        "Spring",
        "DI",
        "Spring",
        "MVC",
        "REST",
        "APIs",
        "Spring",
        "Boot",
        "microservices",
        "Hibernate",
        "mapping",
        "files",
        "sessions",
        "transactions",
        "query",
        "criteria",
        "query",
        "data",
        "SQL",
        "schema",
        "modules",
        "application",
        "J2EE",
        "design",
        "architecture",
        "Spring",
        "MVC",
        "architecture",
        "IOC",
        "AOP",
        "concepts",
        "UI",
        "components",
        "Angular",
        "dependency",
        "Injection",
        "Models",
        "data",
        "collection",
        "array",
        "operations",
        "concurrency",
        "methods",
        "UNIX",
        "shell",
        "scripting",
        "software",
        "installation",
        "testing",
        "kubernetes",
        "applications",
        "CRUD",
        "clusters",
        "docker",
        "kubernetes",
        "pods",
        "application",
        "multi",
        "node",
        "kubernetes",
        "cluster",
        "Kubernetes",
        "deployment",
        "scaling",
        "management",
        "Docker",
        "Containers",
        "Worked",
        "infrastructure",
        "Docker",
        "containerization",
        "Docker",
        "Images",
        "containers",
        "GOLANG",
        "host",
        "system",
        "event",
        "information",
        "Cassandra",
        "database",
        "Java",
        "Developer",
        "Instacart",
        "San",
        "Francisco",
        "CA",
        "November",
        "August",
        "AngularJS",
        "framework",
        "Single",
        "Page",
        "Application",
        "SPA",
        "data",
        "views",
        "data",
        "server",
        "Initiated",
        "Microservices",
        "application",
        "Docker",
        "Kubernetes",
        "cluster",
        "formation",
        "application",
        "MVC",
        "patterns",
        "source",
        "code",
        "maintenance",
        "percentage",
        "code",
        "reduction",
        "ease",
        "scalability",
        "ease",
        "developer",
        "performance",
        "Node",
        "JS",
        "Bootstrap",
        "web",
        "design",
        "enhancement",
        "application",
        "Angular",
        "UI",
        "screens",
        "Spring",
        "MVC",
        "login",
        "system",
        "operations",
        "network",
        "elements",
        "GWT",
        "Amazon",
        "AWS",
        "evaluation",
        "application",
        "Spring",
        "Framework",
        "Model",
        "View",
        "Layer",
        "MVC",
        "architecture",
        "persistence",
        "layer",
        "Hibernate",
        "Framework",
        "POJO",
        "objects",
        "Hibernate",
        "annotations",
        "spring",
        "boot",
        "micro",
        "services",
        "messages",
        "Kafka",
        "cluster",
        "setup",
        "Onshore",
        "lead",
        "business",
        "requirements",
        "team",
        "Kafka",
        "Admin",
        "team",
        "Kafka",
        "cluster",
        "QA",
        "Production",
        "environments",
        "Kafka",
        "servers",
        "AWS",
        "platform",
        "instances",
        "Puppet",
        "Chef",
        "Ansible",
        "Configuration",
        "management",
        "ANT",
        "Scripts",
        "production",
        "issues",
        "aspects",
        "Kubernetes",
        "cluster",
        "deployment",
        "cluster",
        "health",
        "services",
        "cloud",
        "services",
        "deployment",
        "top",
        "runtime",
        "infrastructure",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "data",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "APIs",
        "HTTP",
        "requests",
        "client",
        "server",
        "Spring",
        "framework",
        "coupling",
        "layers",
        "Service",
        "Oriented",
        "Architecture",
        "SOA",
        "Restful",
        "Services",
        "Spring",
        "Kafka",
        "API",
        "messages",
        "Kafka",
        "Cluster",
        "setup",
        "Created",
        "Jenkins",
        "pipeline",
        "docker",
        "registry",
        "docker",
        "containers",
        "Jenkins",
        "file",
        "Kubernetes",
        "runtime",
        "environment",
        "CICD",
        "system",
        "test",
        "Implemented",
        "Service",
        "tier",
        "Spring",
        "Hibernate",
        "framework",
        "Data",
        "access",
        "tier",
        "persistence",
        "implementation",
        "UI",
        "screens",
        "Spring",
        "MVC",
        "login",
        "system",
        "operations",
        "network",
        "elements",
        "GWT",
        "Amazon",
        "AWS",
        "evaluation",
        "Developed",
        "Apache",
        "spark",
        "jobs",
        "Scala",
        "test",
        "environment",
        "data",
        "processing",
        "spark",
        "SQL",
        "Developed",
        "Kafka",
        "producer",
        "consumers",
        "Cassandra",
        "clients",
        "Spark",
        "components",
        "HDFS",
        "Spark",
        "Cassandra",
        "Connector",
        "data",
        "Cassandra",
        "Node",
        "JS",
        "Bootstrap",
        "web",
        "design",
        "enhancement",
        "application",
        "Angular",
        "UI",
        "screens",
        "Spring",
        "MVC",
        "login",
        "system",
        "operations",
        "network",
        "elements",
        "GWT",
        "Amazon",
        "AWS",
        "evaluation",
        "data",
        "Spark",
        "RDDs",
        "Spark",
        "Data",
        "Frame",
        "APIs",
        "data",
        "computation",
        "output",
        "response",
        "Jenkins",
        "build",
        "system",
        "Git",
        "version",
        "control",
        "Configured",
        "Spark",
        "Streaming",
        "time",
        "data",
        "Kafka",
        "stream",
        "data",
        "Cassandra",
        "Scala",
        "CICD",
        "process",
        "GIT",
        "Jenkins",
        "job",
        "creation",
        "Maven",
        "Create",
        "Docker",
        "image",
        "deployment",
        "AWS",
        "environment",
        "Kafka",
        "servers",
        "AWS",
        "platform",
        "instances",
        "Puppet",
        "Chef",
        "Ansible",
        "Configuration",
        "management",
        "ANT",
        "Scripts",
        "production",
        "issues",
        "aspects",
        "Kubernetes",
        "cluster",
        "deployment",
        "cluster",
        "health",
        "services",
        "cloud",
        "services",
        "deployment",
        "top",
        "runtime",
        "infrastructure",
        "Java",
        "Engineer",
        "WePay",
        "Redwood",
        "City",
        "CA",
        "May",
        "July",
        "Created",
        "connections",
        "database",
        "Hibernate",
        "Session",
        "Factory",
        "Hibernate",
        "APIs",
        "data",
        "database",
        "Hibernate",
        "transaction",
        "control",
        "Deployed",
        "Docker",
        "Spring",
        "Boot",
        "services",
        "kubernetes",
        "Tectonic",
        "kubernetes",
        "console",
        "pod",
        "alerts",
        "table",
        "pod",
        "count",
        "application",
        "Model",
        "View",
        "Controller",
        "MVC",
        "Architecture",
        "presentation",
        "JSF",
        "framework",
        "client",
        "webpages",
        "HTML",
        "CSS",
        "JavaScript",
        "Developed",
        "Hibernate",
        "mapping",
        "configuration",
        "files",
        "relation",
        "objects",
        "database",
        "tables",
        "Continuous",
        "Delivery",
        "pipeline",
        "Docker",
        "Jenkins",
        "GitHub",
        "installation",
        "Docker",
        "Docker",
        "toolbox",
        "AWS",
        "Cloud",
        "Services",
        "infrastructure",
        "AWS",
        "Stack",
        "database",
        "setup",
        "maintenance",
        "AWS",
        "EC2",
        "instances",
        "database",
        "programming",
        "Oracle",
        "Developed",
        "SQL",
        "Queries",
        "CRUD",
        "operations",
        "Oracle",
        "application",
        "designing",
        "system",
        "change",
        "requirement",
        "Struts",
        "MVC",
        "architecture",
        "core",
        "concepts",
        "exceptions",
        "collections",
        "serverside",
        "services",
        "Maven",
        "generating",
        "system",
        "builds",
        "Bamboo",
        "integration",
        "functionality",
        "Servlet",
        "JSP",
        "HTML",
        "Struts",
        "Framework",
        "Hibernate",
        "spring",
        "Java",
        "Scripts",
        "Web",
        "logic",
        "production",
        "load",
        "fault",
        "auto",
        "Kubernetes",
        "AWS",
        "infrastructure",
        "microservice",
        "container",
        "orchestration",
        "implementation",
        "application",
        "design",
        "practices",
        "WebService",
        "Oriented",
        "Architecture",
        "MVCModel",
        "View",
        "Controller",
        "Worked",
        "Eclipse",
        "development",
        "deployment",
        "application",
        "Web",
        "Logic",
        "Application",
        "Server",
        "GUI",
        "code",
        "WebLogic",
        "application",
        "environment",
        "components",
        "JBoss",
        "Server",
        "testing",
        "packages",
        "procedures",
        "functions",
        "libraries",
        "layers",
        "Spring",
        "MVC",
        "architecture",
        "Spring",
        "Controller",
        "service",
        "repository",
        "classes",
        "stack",
        "API",
        "Amazon",
        "EC2",
        "architecture",
        "AWS",
        "machine",
        "Images",
        "Spark",
        "Streaming",
        "jobs",
        "Kafka",
        "Cassandra",
        "HDFS",
        "Hive",
        "Hive",
        "analytics",
        "queries",
        "data",
        "aggregations",
        "CMS",
        "Created",
        "RFP",
        "Request",
        "Proposal",
        "Micro",
        "service",
        "API",
        "Spring",
        "Boot",
        "Spring",
        "MVC",
        "Responsible",
        "Streaming",
        "jobs",
        "Spark",
        "version",
        "data",
        "json",
        "Kafka",
        "Topic",
        "Spring",
        "Boot",
        "application",
        "AWS",
        "Bean",
        "Stalk",
        "EBS",
        "Bootstrap",
        "Babel",
        "framework",
        "ReactJS",
        "modules",
        "NodeJS",
        "designs",
        "requirements",
        "UNIX",
        "Shell",
        "scripts",
        "UNIX",
        "environment",
        "EAR",
        "logs",
        "CI",
        "tool",
        "chain",
        "Docker",
        "AWS",
        "GitHub",
        "Software",
        "Engineer",
        "Weebly",
        "San",
        "Francisco",
        "CA",
        "January",
        "April",
        "analysis",
        "requirements",
        "application",
        "J2EE",
        "standards",
        "test",
        "designing",
        "Use",
        "Case",
        "Class",
        "Diagram",
        "Sequence",
        "Diagram",
        "Engine",
        "components",
        "IBM",
        "Rational",
        "Rose",
        "UML",
        "diagrams",
        "docker",
        "images",
        "Kubernetes",
        "cluster",
        "replicas",
        "workloads",
        "Deployed",
        "Docker",
        "Spring",
        "REST",
        "services",
        "AWS",
        "EC2",
        "container",
        "service",
        "AWS",
        "admin",
        "console",
        "lambda",
        "applications",
        "AWS",
        "console",
        "Intranet",
        "Web",
        "Application",
        "J2EE",
        "architecture",
        "JSP",
        "user",
        "interfaces",
        "Hibernate",
        "database",
        "connectivity",
        "Rest",
        "Web",
        "services",
        "Spring",
        "Rest",
        "Template",
        "framework",
        "projects",
        "Struts",
        "MVC",
        "Spring",
        "MVC",
        "Controller",
        "Servlet",
        "request",
        "Application",
        "Controller",
        "Eclipse",
        "IDE",
        "test",
        "application",
        "Kubernetes",
        "container",
        "cluster",
        "management",
        "Jenkins",
        "CICD",
        "pipeline",
        "Development",
        "objects",
        "data",
        "batch",
        "frontend",
        "processing",
        "frontend",
        "screens",
        "development",
        "JSP",
        "tag",
        "libraries",
        "HTML",
        "pages",
        "user",
        "interface",
        "JSP",
        "jQuery",
        "HTML",
        "JavaScript",
        "features",
        "application",
        "customers",
        "Written",
        "SQL",
        "procedures",
        "modifications",
        "database",
        "structure",
        "addition",
        "features",
        "SVN",
        "management",
        "Docker",
        "Kubernetes",
        "micro",
        "services",
        "development",
        "integration",
        "system",
        "data",
        "sources",
        "apache",
        "Kafka",
        "level",
        "consumers",
        "processing",
        "Java",
        "features",
        "Lambda",
        "expressions",
        "array",
        "operations",
        "collections",
        "concurrency",
        "methods",
        "analysis",
        "data",
        "Kafka",
        "consumer",
        "API",
        "Kafka",
        "Spark",
        "Streaming",
        "Scala",
        "ML",
        "implementation",
        "help",
        "Adams",
        "ADAMS",
        "philosophy",
        "novel",
        "workflow",
        "engine",
        "ADAMS",
        "realworld",
        "workflows",
        "nature",
        "modules",
        "application",
        "J2EE",
        "design",
        "architecture",
        "Spring",
        "MVC",
        "architecture",
        "IOC",
        "AOP",
        "concepts",
        "streaming",
        "apps",
        "Kafka",
        "queues",
        "data",
        "Kafka",
        "queues",
        "Education",
        "Bachelors",
        "Skills",
        "Angular",
        "J2Ee",
        "Java",
        "J2Ee",
        "Rest",
        "Hibernate",
        "Java",
        "Javascript",
        "spring",
        "years",
        "springboot",
        "years",
        "RDBMS",
        "years",
        "Javascript",
        "years",
        "JQuery",
        "years",
        "AWS",
        "years",
        "API",
        "years",
        "Docker",
        "years",
        "Kubernetes",
        "years",
        "Reactjs",
        "years",
        "CICD",
        "years",
        "Jenkins",
        "years",
        "Git",
        "years",
        "Apache",
        "years",
        "Unix",
        "years",
        "Linux",
        "years",
        "Kafka",
        "years",
        "Cassandra",
        "years",
        "MongoDB",
        "years",
        "HTML",
        "years",
        "CSS",
        "years",
        "AWS",
        "years",
        "Puppet",
        "years",
        "chef",
        "years",
        "Microservices",
        "years",
        "JEE",
        "Core",
        "Java",
        "MVC",
        "Soap"
    ],
    "input_field": null,
    "instruction": "",
    "processed_at": "2024-11-24T22:08:15.984085",
    "resume_data": "Sr Java Developer Sr Java span lDeveloperspan Sr Java Developer Columbus OH Highly motivated IT professional having around 6 years of experience in requirements gathering deployment of Web Applications and client server multitier applications using Java 8 J2EE technologies Experience in AWS Docker and Kubernetes Stateless application Canary deployment in Kubernetes Kubernetes Stateful Sets deployment for MySQL and Kafka resources within the pod and experience in using MVCModelViewController Spring Struts 1x 2x and Hibernate frameworks Extensive experience in array as in the context of Java is a dynamicallycreated object that serves as a container to hold constant number of values of the same type Experience in developing ClientServer model Enterprise level web applications using Open Source Frameworks like Struts12 Spring2x and Hibernate3x EJB transaction implementation CMP BMP and MessageDriven Beans JMS and can adapt to inhouse grown version of these frameworks too Extensive experience in developing business components based on the customer requirement by using Core Java concepts and its API and experience in development deployment and troubleshooting Web based and enterprisebased applications on Windows UNIX and Linux platforms Experience in end to end implementation of CICD Continuous Delivery DevOps processes using AWS Code Commit AWS Code Deploy AWS Code Pipeline Jenkins and Ansible and experience in automation tools like Junit Jtest and Mockito Experience across Implementation Upgrade and maintenance Projects and have good experience with Springs Spring IOC AOP MVC Spring Security Spring JPA in Spring Boot and Spring Rest Services and Experience in using the Collections in java like Array List Strong software development experience using expertise with Java J2EE Junit JSP JDBC Servlets Java Beans EJBs Session beans Entity Beans and JMS JBoss JavaScript Angular 5 jQuery CSS Ajax Jason Jtest Web Services Struts Spring Microservices Hibernate and Oracle PLSQL Kafka Experience in microservices team to develop and deliver Maven projects to deploy on Jenkins and having experience in managing the Docker containers in kubernetes and experience J2EE design patterns like MVCModelViewController Singleton Front Controller Business Delegate Service Locator DAO VO DTO etc Handson experience working on several microservices components like Docker Engine Docker Hub Compose Docker Registry and handling multiple images primarily for installations and domain configurations and creating Docker images Experience in Amazon Web Services Amazon EC2 Amazon S3 Amazon DynamoDB Amazon RDS Amazon Elastic Load Balancing Amazon SQS AWS Identity and access Experience in developing Application Framework using MVC Architecture STRUTS Framework Java Server Faces MVC pattern J2EE Design Patterns Usecase design Hibernate framework and Core Java Patterns Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Strong experience in working web applications using Spring MVCModelViewController JSP Servlets Expertise in writing JUnit test cases for system testing Used Log4j for logging and have experience in developing Representational state transfer REST based services and Simple Object Access Protocol SOAP based services Experience in developing Application Framework using MVC Architecture STRUTS Framework Java Server Faces MVC pattern J2EE Design Patterns Usecase design Hibernate framework and Core Java Patterns Extensive handson engineering and implantation knowledge of leading container orchestration and infrastructure management tools Kubernetes Experienced on loading and transforming of large sets of data from Cassandra source through Kafka and placed in HDFS for further processing Handson experience working on several microservices components like Docker Engine Docker Hub Compose Docker Registry and handling multiple images primarily for installations and domain configurations and creating Docker images Authorized to work in the US for any employer Work Experience Sr Java Developer Air Bnb San Francisco CA September 2018 to Present Airbnb offers a broad array of financial banking services etc The system developed provides personal savings details of Ally bank Customers It offers a broad array of financial clients and as per the users account status offers him to take up the new schemes enrolling with the bank Used Docker for local development deployed and remotely debugged Stateless application in Kubernetes and used automation tools like Junit Jtest and Mockito as testing frameworks Used various collections framework implementations like Array List HashMap and worked extensively with Exception Handling Developed Open stack API to integrate with Amazon EC2 cloudbased architecture in AWS including creating machine Images and build RESTful web service by building Nodejs Server in the backend to handle requests sent from the frontend jQuery and AJAX calls Created RFP Request for Proposal Micro service to provide RESTful API utilizing Spring Boot with Spring MVC and implemented Spring MVC framework in the presentation tier for all the essential control flow business level validations and for communicating with the business layer Developed the Spring Features such as Spring MVC Spring DAO and implemented Spring AOP Aspect Oriented Programming using Hibernate ORM Object Relational Mapping and developed and implemented Swing Spring and J2EE based MVC ModelViewController framework for the application Deployed the Deodorized Spring Boot application using AWS Elastic Bean Stalk EBS and used Bootstrap and Babel framework for ReactJS Implemented modules into NodeJS to integrate with designs and requirements and wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs and built a CI tool chain using Docker AWS and GitHub Worked with Docker and Kubernetes to manage micro services for development of continuous integration and worked with Spring MVC pattern used Hibernate persistence framework for developing the public access Agile Court application Used advanced Java 8 features like Lambda expressions for array operations collections concurrency methods Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST APIs and Spring Boot for microservices and Created Hibernate mapping files sessions transactions query and criteria query to fetch the data from SQL based schema Designed and developed various modules of the application with J2EE design architecture Spring MVC architecture using IOC AOP concepts and Implemented UI components using Angular 20 dependency Injection Models data binding and controllers collection objects array operations and Enhanced concurrency methods Used UNIX shell scripting to automate software installation and testing and Used kubernetes to manage applications by inspecting and performing CRUD on clusters and worked on docker with kubernetes to create pods for application and deployed across multi node kubernetes cluster Used Kubernetes to orchestrate the deployment scaling and management of Docker Containers and apart from this Worked on infrastructure with Docker containerization and maintained Docker Images and containers and Used GOLANG to log the different host system event and alert information to Cassandra database Java Developer Instacart San Francisco CA November 2017 to August 2018 Used AngularJS as framework to create a Single Page Application SPA which can bind data to specific views and synchronize data with server and Initiated Microservices application through Docker and Kubernetes cluster formation Refactored and enhanced an existing AngularJS application to follow strict MVC patterns for improved source code maintenance which resulted in significant percentage of code reduction ease of upgrade scalability ease of developer to spin up and enhanced performance Used AngularJS Node JS and Bootstrap in effective web design and involved in enhancement of existing application utilizing Angular and Created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed the application using Spring Framework that leverages classical Model View Layer MVC architecture and developed the persistence layer using Hibernate Framework created the POJO objects and mapped using Hibernate annotations Implemented spring boot micro services to process the messages into the Kafka cluster setup AS WELL AS Worked as Onshore lead to gather business requirements and guided the offshore team and coordinated with Kafka Admin team to set up Kafka cluster for the QA and Production environments Kafka managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management as well as developed and maintained ANT Scripts and managed daily production issues Worked on many aspects of Kubernetes cluster deployment and cluster health services from developing cloud services to deployment on top of runtime infrastructure Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Worked on RESTful APIs for HTTP requests between client and server and used Spring framework to achieve loose coupling between the layers thus moving towards Service Oriented Architecture SOA exposed through Restful Services and used Spring Kafka API calls to process the messages on Kafka Cluster setup Created Jenkins pipeline which helps to drive all builds out to the docker registry and then deployed to the docker containers using Jenkins file and Utilized Kubernetes for the runtime environment of the CICD system to build test deploy Implemented Service tier using Spring and utilizing Hibernate framework for Data access tier and persistence implementation and created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Developed Apache spark jobs using Scala in test environment for faster data processing and used spark SQL for querying and Developed Kafka producer and consumers Cassandra clients and Spark along with components on HDFS and used the Spark Cassandra Connector to load data to and from Cassandra Used AngularJS Node JS and Bootstrap in effective web design and involved in enhancement of existing application utilizing Angular and Created the UI screens using Spring MVC for login to the system and performing various operations on network elements and used GWT and Amazon AWS EC2S3EBS for prototyping and subsequent evaluation Load the data into Spark RDDs Spark Data Frame APIs and performed inmemory data computation to generate the output response and Used Jenkins for continuous build system and Git as version control Configured Spark Streaming to receive real time data from the Kafka and store the stream data to Cassandra utilizing Scala and Involved in CICD process using GIT Jenkins job creation Maven build Create Docker image and deployment in AWS environment Kafka managed servers on the AWS platform instances using Puppet Chef Ansible Configuration management as well as developed and maintained ANT Scripts and managed daily production issues Worked on many aspects of Kubernetes cluster deployment and cluster health services from developing cloud services to deployment on top of runtime infrastructure Java Engineer WePay Redwood City CA May 2016 to July 2017 Created connections to database using Hibernate Session Factory using Hibernate APIs to retrieve and store data to the database with Hibernate transaction control Deployed Docker contained Spring Boot services into kubernetes using Tectonic kubernetes console and configure each pod to pick five alerts from the table and updated the pod count to run the application Implemented Model View Controller MVC Architecture based presentation using JSF framework and client webpages are built using HTML CSS and JavaScript and Developed Hibernate mapping configuration files to provide the relation between java objects and database tables Implemented a Continuous Delivery pipeline with Docker Jenkins and GitHub and worked on installation of Docker using Docker toolbox and apart from this Responsible for maintaining and expanding AWS Cloud Services infrastructure using AWS Stack especially worked with database setup and maintenance and created AWS EC2 instances Involved in database programming in Oracle Developed SQL Queries for performing CRUD operations in Oracle for the application and designing of the system as per the change in requirement using Struts MVC architecture Used core java concepts like exceptions collections while developing serverside services and used Maven for generating system builds and Bamboo for continuous integration and Implemented functionality using Servlet JSP HTML and Struts Framework Hibernate spring Java Scripts and Web logic Implemented a production ready load balanced highly available fault tolerant auto scaling Kubernetes AWS infrastructure and microservice container orchestration and Involved in implementation of application using conventional design practices WebService Oriented Architecture MVCModel View Controller Worked on Eclipse for development and deployment of application in Web Logic Application Server and deployed GUI code to WebLogic application environment and standalone components to JBoss Server and responsible for coding testing and documenting various packages procedures and functions for libraries Worked on different layers of Spring MVC architecture such as Spring Controller service and repository classes Developed Open stack API to integrate with Amazon EC2 cloudbased architecture in AWS including creating machine Images and designed and developed Spark Streaming jobs to consume from Kafka and persist to Cassandra HDFS Hive Also wrote many Hive analytics queries for data aggregations for CMS Created RFP Request for Proposal Micro service to provide RESTful API utilizing Spring Boot with Spring MVC and Responsible for Streaming jobs set up using Spark 231 version to consume the data json from the Kafka Topic Deployed the Dockized Spring Boot application using AWS Elastic Bean Stalk EBS and used Bootstrap and Babel framework for ReactJS Implemented modules into NodeJS to integrate with designs and requirements and wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs and built a CI tool chain using Docker AWS and GitHub Software Engineer Weebly San Francisco CA January 2014 to April 2016 Responsible for the analysis documenting the requirements and architecting the application based on J2EE standards Followed test driven and participated in designing of Use Case Class Diagram and Sequence Diagram for various Engine components and used IBM Rational Rose for generating the UML diagrams Created the docker images and deployed them into the Kubernetes cluster and create the multiple replicas to handle the workloads and Deployed Docker contained Spring REST services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console Developing Intranet Web Application using J2EE architecture using JSP to design the user interfaces and Hibernate for database connectivity and created and consumed Rest Web services using Spring Rest Template Developed the whole framework for the projects based on Struts MVC Spring MVC Designed and developed Controller Servlet which will route the request to Application Controller and has extensively Worked with Eclipse IDE to develop test and deploy the complete application and Implemented Kubernetes for container cluster management in the Jenkins CICD pipeline Development of hibernating objects for data fetching for batch and frontend processing and frontend screens development using JSP with tag libraries and HTML pages and developed user interface using JSP jQuery HTML and JavaScript Designed and developed the new features in the existing application to meet the customers satisfaction Written SQL queries stored procedures modifications to existing database structure as required per addition of new features as well as SVN management Worked with Docker and Kubernetes to manage micro services for development of continuous integration and Implemented messaging system for different data sources using apache Kafka and configuring High level consumers for online and offline processing Used advanced Java 8 features like Lambda expressions for array operations collections concurrency methods and Performed realtime analysis of the incoming data using Kafka consumer API Kafka topics Spark Streaming utilizing Scala Worked on ML implementation with the help of Adams as ADAMS follows the philosophy of less is more A novel and flexible workflow engine ADAMS is aimed at quickly building and maintaining realworld workflows which are usually complex in nature Designed and developed various modules of the application with J2EE design architecture Spring MVC architecture using IOC AOP concepts and Developed highthroughput streaming apps reading from Kafka queues and writing enriched data back to outbound Kafka queues Education Bachelors Skills Angular J2Ee Java J2Ee Rest Hibernate Java Javascript spring 5 years springboot 5 years RDBMS 5 years Javascript 5 years JQuery 5 years AWS 5 years API 5 years Docker 5 years Kubernetes 5 years Reactjs 5 years CICD 5 years Jenkins 5 years Git 5 years Apache 5 years Unix 5 years Linux 5 years Kafka 5 years Cassandra 5 years MongoDB 5 years HTML 5 years CSS 5 years AWS 5 years Puppet 5 years chef 5 years Microservices 5 years JEE Core Java MVC Soap",
    "unique_id": "536e256a-ffa7-417f-ada6-31760621385c"
}